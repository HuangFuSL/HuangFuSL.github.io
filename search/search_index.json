{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":true,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . Customization \u00b6 \u70b9\u51fb\u4e0b\u9762\u7684\u989c\u8272\u6309\u94ae\u53ef\u4ee5\u5207\u6362\u4e3b\u9898\u989c\u8272\uff1a Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; localStorage.setItem(\"data-md-color-primary\",this.dataset.mdColorPrimary); }) }) \u70b9\u51fb\u4e0b\u9762\u7684\u6309\u94ae\u53ef\u4ee5\u5207\u6362\u5f3a\u8c03\u989c\u8272\uff1a Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorAccent = this.dataset.mdColorAccent; var icons = document.querySelectorAll(\".gt-container .gt-avatar img[data-md-color-accent]\"); for (icon of icons) icon.dataset[\"mdColorAccent\"] = this.dataset.mdColorAccent; localStorage.setItem(\"data-md-color-accent\",this.dataset.mdColorAccent); }) }) document.getElementsByClassName('md-nav__title')[1].click() Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"index.html#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"index.html#customization","text":"\u70b9\u51fb\u4e0b\u9762\u7684\u989c\u8272\u6309\u94ae\u53ef\u4ee5\u5207\u6362\u4e3b\u9898\u989c\u8272\uff1a Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; localStorage.setItem(\"data-md-color-primary\",this.dataset.mdColorPrimary); }) }) \u70b9\u51fb\u4e0b\u9762\u7684\u6309\u94ae\u53ef\u4ee5\u5207\u6362\u5f3a\u8c03\u989c\u8272\uff1a Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorAccent = this.dataset.mdColorAccent; var icons = document.querySelectorAll(\".gt-container .gt-avatar img[data-md-color-accent]\"); for (icon of icons) icon.dataset[\"mdColorAccent\"] = this.dataset.mdColorAccent; localStorage.setItem(\"data-md-color-accent\",this.dataset.mdColorAccent); }) }) document.getElementsByClassName('md-nav__title')[1].click()","title":"Customization"},{"location":"index.html#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"index.html#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"about.html","text":"Guess who is here? Credit: \u300a\u6628\u665a\u300b by \u8001\u9f20\u4ec0\u4e48\u90fd\u77e5\u9053","title":"About"},{"location":"covid.html","text":"COVID-2019 Trend \u00b6 \u5982\u4e0b\u5c55\u793a\u4e86\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2\u75ab\u60c5\u7684\u53d1\u5c55\u8d8b\u52bf\uff1a","title":"COVID-2019"},{"location":"covid.html#covid-2019-trend","text":"\u5982\u4e0b\u5c55\u793a\u4e86\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2\u75ab\u60c5\u7684\u53d1\u5c55\u8d8b\u52bf\uff1a","title":"COVID-2019 Trend"},{"location":"weixin-2020.html","text":"\u4e00\u4e9b\u5f88\u559c\u6b22\u7684\u63a8\u9001 \u00b6 \u300a\u6628\u665a\u300b by \u8001\u9f20\u4ec0\u4e48\u90fd\u77e5\u9053 \u300a\u6740\u6b7b\u65e0\u804a\u7684\u540c\u65f6\uff0c\u4f60\u4e5f\u5728\u6740\u6b7b\u81ea\u5df1\u300b by \u4eba\u7269 \u300a\u75db\u82e6\u7684\u4e00\u767e\u5f20\u5e95\u7247\u300b by \u4eba\u7269 \u300a\u603b\u4e0d\u80fd\u4e27\u6c14\u592a\u4e45\u5427\u3002\u300b by \u6982\u7387\u8bba \u300a\u6211\u4eec\u628a\u8fd9\u573a\u521d\u96ea\u505a\u6210\u4e86\u7535\u5f71\u6d77\u62a5\u300b by \u6e05\u534e\u5927\u5b66\u6e05\u65b0\u65f6\u62a5 \u300a\u56f0\u4e8e\u4eba\u8138\u8bc6\u522b\u300b by \u4eba\u7269 \u300a\u65b0\u7684\u5341\u5e74\uff0c\u4eba\u751f\u7684\u5947\u5e7b\u6f02\u6d41\u300b by \u4eba\u7269 \u300a\u6587\u827a\u662f\u4e00\u573a\u9a97\u5c40\u5417\uff1f\u300b by \u4eba\u7269 \u300a\u4e00\u7897\u7c73\u8c46\u8150\uff0c\u7a7f\u8d8a\u5c71\u6d77\u300b by \u4eba\u7269 \u300a\u4fdd\u7814\u5931\u8d25\u4ee5\u540e\uff0c\u6211\u53c8\u8003\u4e86\u6b21\u6e05\u534e\u300b by \u6e05\u534e\u7814\u8bfb\u95f4","title":2020},{"location":"weixin-2020.html#_1","text":"\u300a\u6628\u665a\u300b by \u8001\u9f20\u4ec0\u4e48\u90fd\u77e5\u9053 \u300a\u6740\u6b7b\u65e0\u804a\u7684\u540c\u65f6\uff0c\u4f60\u4e5f\u5728\u6740\u6b7b\u81ea\u5df1\u300b by \u4eba\u7269 \u300a\u75db\u82e6\u7684\u4e00\u767e\u5f20\u5e95\u7247\u300b by \u4eba\u7269 \u300a\u603b\u4e0d\u80fd\u4e27\u6c14\u592a\u4e45\u5427\u3002\u300b by \u6982\u7387\u8bba \u300a\u6211\u4eec\u628a\u8fd9\u573a\u521d\u96ea\u505a\u6210\u4e86\u7535\u5f71\u6d77\u62a5\u300b by \u6e05\u534e\u5927\u5b66\u6e05\u65b0\u65f6\u62a5 \u300a\u56f0\u4e8e\u4eba\u8138\u8bc6\u522b\u300b by \u4eba\u7269 \u300a\u65b0\u7684\u5341\u5e74\uff0c\u4eba\u751f\u7684\u5947\u5e7b\u6f02\u6d41\u300b by \u4eba\u7269 \u300a\u6587\u827a\u662f\u4e00\u573a\u9a97\u5c40\u5417\uff1f\u300b by \u4eba\u7269 \u300a\u4e00\u7897\u7c73\u8c46\u8150\uff0c\u7a7f\u8d8a\u5c71\u6d77\u300b by \u4eba\u7269 \u300a\u4fdd\u7814\u5931\u8d25\u4ee5\u540e\uff0c\u6211\u53c8\u8003\u4e86\u6b21\u6e05\u534e\u300b by \u6e05\u534e\u7814\u8bfb\u95f4","title":"\u4e00\u4e9b\u5f88\u559c\u6b22\u7684\u63a8\u9001"},{"location":"coding/index.html","text":"\u5199\u4ee3\u7801 \u00b6 \u6536\u96c6\u4ece\u7f51\u4e0a\u627e\u6765\u7684\u5404\u79cd\u5404\u6837\u7684\u73a9\u610f Leetcode Python JavaScript \u6570\u636e\u7ed3\u6784 \u6570\u636e\u5e93 \u6df1\u5ea6\u5b66\u4e60 \u673a\u5668\u5b66\u4e60 \u7cfb\u7edf\u914d\u7f6e","title":"\u76ee\u5f55"},{"location":"coding/index.html#_1","text":"\u6536\u96c6\u4ece\u7f51\u4e0a\u627e\u6765\u7684\u5404\u79cd\u5404\u6837\u7684\u73a9\u610f Leetcode Python JavaScript \u6570\u636e\u7ed3\u6784 \u6570\u636e\u5e93 \u6df1\u5ea6\u5b66\u4e60 \u673a\u5668\u5b66\u4e60 \u7cfb\u7edf\u914d\u7f6e","title":"\u5199\u4ee3\u7801"},{"location":"coding/configuration.html","text":"\u7cfb\u7edf\u914d\u7f6e \u00b6 \u8f6f\u4ef6\u73af\u5883\u914d\u7f6e \u00b6 \u6e90\u7801\u7f16\u8bd1nginx\u5e76\u6dfb\u52a0RTMP\u6a21\u5757","title":"\u76ee\u5f55"},{"location":"coding/configuration.html#_1","text":"","title":"\u7cfb\u7edf\u914d\u7f6e"},{"location":"coding/configuration.html#_2","text":"\u6e90\u7801\u7f16\u8bd1nginx\u5e76\u6dfb\u52a0RTMP\u6a21\u5757","title":"\u8f6f\u4ef6\u73af\u5883\u914d\u7f6e"},{"location":"coding/dsa.html","text":"\u6570\u636e\u7ed3\u6784 \u00b6 \u4ee5\u4e0b\u6574\u7406\u4e86\u9093\u4fca\u8f89\u8001\u5e08\u300a\u6570\u636e\u7ed3\u6784\u300b\u8bfe\u7a0b\u7684\u5185\u5bb9\uff1a \u5411\u91cf\u4e0e\u5217\u8868 \u6808\u4e0e\u961f\u5217 \u4e8c\u53c9\u6811 \u56fe \u4e8c\u53c9\u641c\u7d22\u6811 \u9ad8\u7ea7\u641c\u7d22\u6811 \u6563\u5217\u4e0e\u8bcd\u5178 \u4f18\u5148\u7ea7\u961f\u5217 \u5b57\u7b26\u4e32 \u6392\u5e8f\u7b97\u6cd5","title":"\u76ee\u5f55"},{"location":"coding/dsa.html#_1","text":"\u4ee5\u4e0b\u6574\u7406\u4e86\u9093\u4fca\u8f89\u8001\u5e08\u300a\u6570\u636e\u7ed3\u6784\u300b\u8bfe\u7a0b\u7684\u5185\u5bb9\uff1a \u5411\u91cf\u4e0e\u5217\u8868 \u6808\u4e0e\u961f\u5217 \u4e8c\u53c9\u6811 \u56fe \u4e8c\u53c9\u641c\u7d22\u6811 \u9ad8\u7ea7\u641c\u7d22\u6811 \u6563\u5217\u4e0e\u8bcd\u5178 \u4f18\u5148\u7ea7\u961f\u5217 \u5b57\u7b26\u4e32 \u6392\u5e8f\u7b97\u6cd5","title":"\u6570\u636e\u7ed3\u6784"},{"location":"coding/leetcode.html","text":"Leetcode \u9898\u89e3 \u00b6 1. \u4e24\u6570\u4e4b\u548c 7. \u6574\u6570\u53cd\u8f6c 8. \u5b57\u7b26\u4e32\u8f6c\u6362\u6574\u6570 (leetcode/atoi) 9. \u56de\u6587\u6570 13. \u7f57\u9a6c\u6570\u5b57\u8f6c\u6574\u6570 14. \u6700\u957f\u516c\u5171\u524d\u7f00 21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868 24. \u4e24\u4e24\u4ea4\u6362\u94fe\u8868\u4e2d\u7684\u8282\u70b9 26. \u5220\u9664\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879 28. \u5b9e\u73b0 strStr(leetcode/) 36. \u6709\u6548\u7684\u6570\u72ec 38. \u5916\u89c2\u6570\u5217 48. \u65cb\u8f6c\u56fe\u50cf 50. Pow(x, n) 66. \u52a0\u4e00 70. \u722c\u697c\u68af 118. \u6768\u8f89\u4e09\u89d2 119. \u6768\u8f89\u4e09\u89d2 II 122. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II 125. \u9a8c\u8bc1\u56de\u6587\u4e32 136. \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57 189. \u65cb\u8f6c\u6570\u7ec4 206. \u53cd\u8f6c\u94fe\u8868 217. \u5b58\u5728\u91cd\u590d\u5143\u7d20 237. \u5220\u9664\u94fe\u8868\u4e2d\u7684\u8282\u70b9 242. \u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd 315. \u8ba1\u7b97\u53f3\u4fa7\u5c0f\u4e8e\u5f53\u524d\u5143\u7d20\u7684\u4e2a\u6570 344. \u53cd\u8f6c\u5b57\u7b26\u4e32 387. \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26","title":"\u76ee\u5f55"},{"location":"coding/leetcode.html#leetcode","text":"1. \u4e24\u6570\u4e4b\u548c 7. \u6574\u6570\u53cd\u8f6c 8. \u5b57\u7b26\u4e32\u8f6c\u6362\u6574\u6570 (leetcode/atoi) 9. \u56de\u6587\u6570 13. \u7f57\u9a6c\u6570\u5b57\u8f6c\u6574\u6570 14. \u6700\u957f\u516c\u5171\u524d\u7f00 21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868 24. \u4e24\u4e24\u4ea4\u6362\u94fe\u8868\u4e2d\u7684\u8282\u70b9 26. \u5220\u9664\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879 28. \u5b9e\u73b0 strStr(leetcode/) 36. \u6709\u6548\u7684\u6570\u72ec 38. \u5916\u89c2\u6570\u5217 48. \u65cb\u8f6c\u56fe\u50cf 50. Pow(x, n) 66. \u52a0\u4e00 70. \u722c\u697c\u68af 118. \u6768\u8f89\u4e09\u89d2 119. \u6768\u8f89\u4e09\u89d2 II 122. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II 125. \u9a8c\u8bc1\u56de\u6587\u4e32 136. \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57 189. \u65cb\u8f6c\u6570\u7ec4 206. \u53cd\u8f6c\u94fe\u8868 217. \u5b58\u5728\u91cd\u590d\u5143\u7d20 237. \u5220\u9664\u94fe\u8868\u4e2d\u7684\u8282\u70b9 242. \u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd 315. \u8ba1\u7b97\u53f3\u4fa7\u5c0f\u4e8e\u5f53\u524d\u5143\u7d20\u7684\u4e2a\u6570 344. \u53cd\u8f6c\u5b57\u7b26\u4e32 387. \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26","title":"Leetcode \u9898\u89e3"},{"location":"coding/python.html","text":"Python \u00b6 \u534f\u7a0b \u00b6 \u591a\u7ebf\u7a0b/\u591a\u8fdb\u7a0b\u76f8\u5173 \u00b6 \u5173\u95edPython\u7ebf\u7a0b","title":"\u76ee\u5f55"},{"location":"coding/python.html#python","text":"","title":"Python"},{"location":"coding/python.html#_1","text":"","title":"\u534f\u7a0b"},{"location":"coding/python.html#_2","text":"\u5173\u95edPython\u7ebf\u7a0b","title":"\u591a\u7ebf\u7a0b/\u591a\u8fdb\u7a0b\u76f8\u5173"},{"location":"coding/configuration/nginx-rtmp.html","text":"\u6e90\u7801\u7f16\u8bd1nginx\u5e76\u6dfb\u52a0RTMP\u6a21\u5757 \u00b6 \u5148\u51b3\u6761\u4ef6 \u00b6 nginx\u6e90\u4ee3\u7801\uff0c\u9700\u8981\u4ece GitHub Release \u4e0b\u8f7d\uff0c\u4ece nginx\u5b98\u7f51 \u4e0b\u8f7d\u7684\u6e90\u4ee3\u7801\u5728\u540e\u7eed\u7f16\u8bd1\u65f6\u4f1a\u62a5\u5982\u4e0b\u9519\u8bef\uff1a NMAKE : fatal error U1073: don't know how to make 'src/os/win32/ngx_win32_config.h' openssl\u6e90\u4ee3\u7801\uff0c\u53ef\u4ee5\u4ece GitHub Release \u4e0b\u8f7d zlib\u6e90\u4ee3\u7801\uff0cGitHub\u4ed3\u5e93\uff1a https://github.com/madler/zlib pcre\u6e90\u4ee3\u7801\uff0c\u5b98\u7f51\u63d0\u4f9b\u5404\u7248\u672c\u7684\u4e0b\u8f7d\u94fe\u63a5\uff1a https://ftp.pcre.org/pub/pcre/ RMTP\u63d2\u4ef6\uff1a https://github.com/arut/nginx-rtmp-module MSYS\uff0c\u53ef\u4ee5\u901a\u8fc7MinGW Installer\u8fdb\u884c\u5b89\u88c5 Visual Studio\uff0c\u9700\u8981\u5b89\u88c5C++\u7f16\u8bd1\u5668 NASM Perl>=5.30 \u672c\u6b21\u7f16\u8bd1\u4f7f\u7528\u7684\u73af\u5883\uff1a Windows 19042.662 Visual Studio 2019 Visual Studio Build Tools 2017 Windows 10 SDK 10.0.17763.0 nginx 1.19.5 openssl 1.1.1g zlib 1.2.11 pcre 8.44 perl 5.32 (Strawberry) nasm 2.15.05 nmake 14.27.29112.0 MSVC(cl) 19.27.29112 \u5c06\u5305\u542b perl.exe \u3001 nasm.exe \u3001 sed.exe \u7684\u76ee\u5f55\u6dfb\u52a0\u5230PATH\u73af\u5883\u53d8\u91cf\u3002 \u51c6\u5907\u5de5\u4f5c \u00b6 \u542f\u52a8MSYS\uff0c cd \u5230nginx\u7684\u6e90\u4ee3\u7801\u76ee\u5f55\uff0c\u5207\u6362\u5230C\u76d8\u6839\u76ee\u5f55\u7684\u4ee3\u7801\u5982\u4e0b\uff1a cd /c/ \u6267\u884c auto/configure \uff0c\u6839\u636enginx\u5b98\u7f51\u63d0\u4f9b\u7684\u53c2\u6570\u8fdb\u884c\uff0c\u6dfb\u52a0``\u53c2\u6570\uff0c\u5177\u4f53\u547d\u4ee4\u5982\u4e0b\uff1a auto/configure \\ --with-cc = cl \\ --with-debug \\ --prefix = . \\ --conf-path = conf/nginx.conf \\ --pid-path = logs/nginx.pid \\ --http-log-path = logs/access.log \\ --error-log-path = logs/error.log \\ --sbin-path = nginx.exe \\ --http-client-body-temp-path = temp/client_body_temp \\ --http-proxy-temp-path = temp/proxy_temp \\ --http-fastcgi-temp-path = temp/fastcgi_temp \\ --http-scgi-temp-path = temp/scgi_temp \\ --http-uwsgi-temp-path = temp/uwsgi_temp \\ --with-cc-opt = -DFD_SETSIZE = 1024 \\ --with-pcre = pcre-8.44 \\ --with-zlib = zlib \\ --with-openssl = openssl \\ --with-openssl-opt = no-asm \\ --with-http_ssl_module \\ --add-module = nginx-rtmp-module \u6ce8\u610f\u6b64\u5904 --with-pcre \u3001 --with-zlib \u3001 --with-openssl \u53c2\u6570\u4e2d\u63d0\u4f9b\u7684\u8def\u5f84\u9700\u8981\u4e0ePCRE\u3001zlib\u3001openssl\u7684\u6e90\u4ee3\u7801\u8def\u5f84\u5206\u522b\u5bf9\u5e94\u3002 \u6267\u884c\u5b8c\u6bd5\u540e\u751f\u6210Makefile\u6587\u4ef6\u300232\u4f4d\u73af\u5883\u4e0b\u53ef\u4ee5\u76f4\u63a5\u5f00\u59cb\u7f16\u8bd1\uff0c64\u4f4d\u73af\u5883\u4e0b\u9700\u8981\u5bf9 auto\\lib\\openssl\\makefile.msvc \u6539\u4e3a\u5982\u4e0b\u4ee3\u7801 # Copyright (C) Igor Sysoev # Copyright (C) Nginx, Inc. all : cd $( OPENSSL ) perl Configure VC-WIN64A no-shared \\ --prefix = \"%cd%/openssl\" \\ --openssldir = \"%cd%/openssl/ssl\" \\ $( OPENSSL_OPT ) if exist ms\\do_win64a.bat ( \\ ms\\do_win64a \\ && $(MAKE) -f ms\\nt.mak \\ && $(MAKE) -f ms\\nt.mak install \\ ) else ( \\ $(MAKE) \\ && $(MAKE) install_sw \\ ) \u5c06 VC-WIN32 \u66ff\u6362\u4e3a VC-WIN64A \uff0c\u6240\u6709\u7684 ms\\do_ms.bat \u66ff\u6362\u4e3a ms\\do_win64a.bat \u3002 MSVC\u7f16\u8bd1 \u00b6 \u7f16\u8f91\u5982\u4e0b\u6e90\u4ee3\u7801\u6587\u4ef6\uff1a nginx-rtmp-module/ngx_rtmp_flv_module.c \uff0c\u5b9a\u4f4d\u5230\u5982\u4e0b\u4ee3\u7801\u5757\uff1a 509\u884c\uff1a ngx_rtmp_prepare_message ( s , & h , ctx -> msg_mask & ( 1 << h . type ) ? & lh : NULL , out ); 521\u884c\uff1a ctx -> msg_mask |= ( 1 << h . type ); \u5c06\u5176\u4e2d\u7684 (1 << h.type) \u6539\u4e3a (unsigned long)(1 << h.type) \u3002 nginx-rtmp-module/ngx_rtmp_core_module.c \uff0c\u5b9a\u4f4d\u5230\u5982\u4e0b\u4ee3\u7801\u5757\uff1a 611\u884c\uff1a struct sockaddr * sa ; \u5c06\u6b64\u5904\u7684\u53d8\u91cf\u540d sa \u6539\u4e3a sa2 \uff0c\u5e76\u5c06\u6b64\u540e\u6240\u6709\u7684 sa \u53d8\u91cf\u6539\u4e3a sa2 \u3002 \u542f\u52a8x64 Native Tools Command Prompt for VS 2019\uff0c\u5207\u6362\u5230\u6e90\u4ee3\u7801\u76ee\u5f55\uff0c\u6267\u884c nmake \u542f\u52a8\u7f16\u8bd1\u3002\u8f93\u51fa\u6587\u4ef6\u4e3a objs/nginx.exe nginx\u914d\u7f6e \u00b6 \u5c06 objs/nginx.exe \u590d\u5236\u4e00\u4efd\u3002\u5728\u6240\u5728\u76ee\u5f55\u4e0b\u521b\u5efa\u5982\u4e0b\u6587\u4ef6\u7ed3\u6784\uff1a . \u251c\u2500 nginx.exe \u251c\u2500 conf/ \u2502 \u2514\u2500 nginx.conf \u251c\u2500 html \u2502 \u2514\u2500 index.xsl \u251c\u2500 logs \u2514\u2500 temp \u5176\u4e2d\uff0c html/index.xsl \u5199\u5165\u5982\u4e0b\u5185\u5bb9 html/index.xsl\u6587\u4ef6\u5185\u5bb9 <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!-- Copyright (C) Roman Arutyunyan --> <xsl:stylesheet version= \"1.0\" xmlns:xsl= \"http://www.w3.org/1999/XSL/Transform\" > <xsl:template match= \"/\" > <html> <head> <title> RTMP statistics </title> </head> <body> <xsl:apply-templates select= \"rtmp\" /> <hr/> Generated by <a href= 'https://github.com/arut/nginx-rtmp-module' > nginx-rtmp-module </a> &#160; <xsl:value-of select= \"/rtmp/nginx_rtmp_version\" /> , <a href= \"http://nginx.org\" > nginx </a> &#160; <xsl:value-of select= \"/rtmp/nginx_version\" /> , pid <xsl:value-of select= \"/rtmp/pid\" /> , built <xsl:value-of select= \"/rtmp/built\" /> &#160; <xsl:value-of select= \"/rtmp/compiler\" /> </body> </html> </xsl:template> <xsl:template match= \"rtmp\" > <table cellspacing= \"1\" cellpadding= \"5\" > <tr bgcolor= \"#999999\" > <th> RTMP </th> <th> #clients </th> <th colspan= \"4\" > Video </th> <th colspan= \"4\" > Audio </th> <th> In bytes </th> <th> Out bytes </th> <th> In bits/s </th> <th> Out bits/s </th> <th> State </th> <th> Time </th> </tr> <tr> <td colspan= \"2\" > Accepted: <xsl:value-of select= \"naccepted\" /></td> <th bgcolor= \"#999999\" > codec </th> <th bgcolor= \"#999999\" > bits/s </th> <th bgcolor= \"#999999\" > size </th> <th bgcolor= \"#999999\" > fps </th> <th bgcolor= \"#999999\" > codec </th> <th bgcolor= \"#999999\" > bits/s </th> <th bgcolor= \"#999999\" > freq </th> <th bgcolor= \"#999999\" > chan </th> <td> <xsl:call-template name= \"showsize\" > <xsl:with-param name= \"size\" select= \"bytes_in\" /> </xsl:call-template> </td> <td> <xsl:call-template name= \"showsize\" > <xsl:with-param name= \"size\" select= \"bytes_out\" /> </xsl:call-template> </td> <td> <xsl:call-template name= \"showsize\" > <xsl:with-param name= \"size\" select= \"bw_in\" /> <xsl:with-param name= \"bits\" select= \"1\" /> <xsl:with-param name= \"persec\" select= \"1\" /> </xsl:call-template> </td> <td> <xsl:call-template name= \"showsize\" > <xsl:with-param name= \"size\" select= \"bw_out\" /> <xsl:with-param name= \"bits\" select= \"1\" /> <xsl:with-param name= \"persec\" select= \"1\" /> </xsl:call-template> </td> <td/> <td> <xsl:call-template name= \"showtime\" > <xsl:with-param name= \"time\" select= \"/rtmp/uptime * 1000\" /> </xsl:call-template> </td> </tr> <xsl:apply-templates select= \"server\" /> </table> </xsl:template> <xsl:template match= \"server\" > <xsl:apply-templates select= \"application\" /> </xsl:template> <xsl:template match= \"application\" > <tr bgcolor= \"#999999\" > <td> <b><xsl:value-of select= \"name\" /></b> </td> </tr> <xsl:apply-templates select= \"live\" /> <xsl:apply-templates select= \"play\" /> </xsl:template> <xsl:template match= \"live\" > <tr bgcolor= \"#aaaaaa\" > <td> <i> live streams </i> </td> <td align= \"middle\" > <xsl:value-of select= \"nclients\" /> </td> </tr> <xsl:apply-templates select= \"stream\" /> </xsl:template> <xsl:template match= \"play\" > <tr bgcolor= \"#aaaaaa\" > <td> <i> vod streams </i> </td> <td align= \"middle\" > <xsl:value-of select= \"nclients\" /> </td> </tr> <xsl:apply-templates select= \"stream\" /> </xsl:template> <xsl:template match= \"stream\" > <tr valign= \"top\" > <xsl:attribute name= \"bgcolor\" > <xsl:choose> <xsl:when test= \"active\" > #cccccc </xsl:when> <xsl:otherwise> #dddddd </xsl:otherwise> </xsl:choose> </xsl:attribute> <td> <a href= \"\" > <xsl:attribute name= \"onclick\" > var d=document.getElementById(' <xsl:value-of select= \"../../name\" /> - <xsl:value-of select= \"name\" /> '); d.style.display=d.style.display=='none'?'':'none'; return false </xsl:attribute> <xsl:value-of select= \"name\" /> <xsl:if test= \"string-length(name) = 0\" > [EMPTY] </xsl:if> </a> </td> <td align= \"middle\" > <xsl:value-of select= \"nclients\" /> </td> <td> <xsl:value-of select= \"meta/video/codec\" /> &#160; <xsl:value-of select= \"meta/video/profile\" /> &#160; <xsl:value-of select= \"meta/video/level\" /> </td> <td> <xsl:call-template name= \"showsize\" > <xsl:with-param name= \"size\" select= \"bw_video\" /> <xsl:with-param name= \"bits\" select= \"1\" /> <xsl:with-param name= \"persec\" select= \"1\" /> </xsl:call-template> </td> <td> <xsl:apply-templates select= \"meta/video/width\" /> </td> <td> <xsl:value-of select= \"meta/video/frame_rate\" /> </td> <td> <xsl:value-of select= \"meta/audio/codec\" /> &#160; <xsl:value-of select= \"meta/audio/profile\" /> </td> <td> <xsl:call-template name= \"showsize\" > <xsl:with-param name= \"size\" select= \"bw_audio\" /> <xsl:with-param name= \"bits\" select= \"1\" /> <xsl:with-param name= \"persec\" select= \"1\" /> </xsl:call-template> </td> <td> <xsl:apply-templates select= \"meta/audio/sample_rate\" /> </td> <td> <xsl:value-of select= \"meta/audio/channels\" /> </td> <td> <xsl:call-template name= \"showsize\" > <xsl:with-param name= \"size\" select= \"bytes_in\" /> </xsl:call-template> </td> <td> <xsl:call-template name= \"showsize\" > <xsl:with-param name= \"size\" select= \"bytes_out\" /> </xsl:call-template> </td> <td> <xsl:call-template name= \"showsize\" > <xsl:with-param name= \"size\" select= \"bw_in\" /> <xsl:with-param name= \"bits\" select= \"1\" /> <xsl:with-param name= \"persec\" select= \"1\" /> </xsl:call-template> </td> <td> <xsl:call-template name= \"showsize\" > <xsl:with-param name= \"size\" select= \"bw_out\" /> <xsl:with-param name= \"bits\" select= \"1\" /> <xsl:with-param name= \"persec\" select= \"1\" /> </xsl:call-template> </td> <td><xsl:call-template name= \"streamstate\" /></td> <td> <xsl:call-template name= \"showtime\" > <xsl:with-param name= \"time\" select= \"time\" /> </xsl:call-template> </td> </tr> <tr style= \"display:none\" > <xsl:attribute name= \"id\" > <xsl:value-of select= \"../../name\" /> - <xsl:value-of select= \"name\" /> </xsl:attribute> <td colspan= \"16\" ngcolor= \"#eeeeee\" > <table cellspacing= \"1\" cellpadding= \"5\" > <tr> <th> Id </th> <th> State </th> <th> Address </th> <th> Flash version </th> <th> Page URL </th> <th> SWF URL </th> <th> Dropped </th> <th> Timestamp </th> <th> A-V </th> <th> Time </th> </tr> <xsl:apply-templates select= \"client\" /> </table> </td> </tr> </xsl:template> <xsl:template name= \"showtime\" > <xsl:param name= \"time\" /> <xsl:if test= \"$time &gt; 0\" > <xsl:variable name= \"sec\" > <xsl:value-of select= \"floor($time div 1000)\" /> </xsl:variable> <xsl:if test= \"$sec &gt;= 86400\" > <xsl:value-of select= \"floor($sec div 86400)\" /> d </xsl:if> <xsl:if test= \"$sec &gt;= 3600\" > <xsl:value-of select= \"(floor($sec div 3600)) mod 24\" /> h </xsl:if> <xsl:if test= \"$sec &gt;= 60\" > <xsl:value-of select= \"(floor($sec div 60)) mod 60\" /> m </xsl:if> <xsl:value-of select= \"$sec mod 60\" /> s </xsl:if> </xsl:template> <xsl:template name= \"showsize\" > <xsl:param name= \"size\" /> <xsl:param name= \"bits\" select= \"0\" /> <xsl:param name= \"persec\" select= \"0\" /> <xsl:variable name= \"sizen\" > <xsl:value-of select= \"floor($size div 1024)\" /> </xsl:variable> <xsl:choose> <xsl:when test= \"$sizen &gt;= 1073741824\" > <xsl:value-of select= \"format-number($sizen div 1073741824,'#.###')\" /> T </xsl:when> <xsl:when test= \"$sizen &gt;= 1048576\" > <xsl:value-of select= \"format-number($sizen div 1048576,'#.###')\" /> G </xsl:when> <xsl:when test= \"$sizen &gt;= 1024\" > <xsl:value-of select= \"format-number($sizen div 1024,'#.##')\" /> M </xsl:when> <xsl:when test= \"$sizen &gt;= 0\" > <xsl:value-of select= \"$sizen\" /> K </xsl:when> </xsl:choose> <xsl:if test= \"string-length($size) &gt; 0\" > <xsl:choose> <xsl:when test= \"$bits = 1\" > b </xsl:when> <xsl:otherwise> B </xsl:otherwise> </xsl:choose> <xsl:if test= \"$persec = 1\" > /s </xsl:if> </xsl:if> </xsl:template> <xsl:template name= \"streamstate\" > <xsl:choose> <xsl:when test= \"active\" > active </xsl:when> <xsl:otherwise> idle </xsl:otherwise> </xsl:choose> </xsl:template> <xsl:template name= \"clientstate\" > <xsl:choose> <xsl:when test= \"publishing\" > publishing </xsl:when> <xsl:otherwise> playing </xsl:otherwise> </xsl:choose> </xsl:template> <xsl:template match= \"client\" > <tr> <xsl:attribute name= \"bgcolor\" > <xsl:choose> <xsl:when test= \"publishing\" > #cccccc </xsl:when> <xsl:otherwise> #eeeeee </xsl:otherwise> </xsl:choose> </xsl:attribute> <td><xsl:value-of select= \"id\" /></td> <td><xsl:call-template name= \"clientstate\" /></td> <td> <a target= \"_blank\" > <xsl:attribute name= \"href\" > http://apps.db.ripe.net/search/query.html &#63; searchtext= <xsl:value-of select= \"address\" /> </xsl:attribute> <xsl:attribute name= \"title\" > whois </xsl:attribute> <xsl:value-of select= \"address\" /> </a> </td> <td><xsl:value-of select= \"flashver\" /></td> <td> <a target= \"_blank\" > <xsl:attribute name= \"href\" > <xsl:value-of select= \"pageurl\" /> </xsl:attribute> <xsl:value-of select= \"pageurl\" /> </a> </td> <td><xsl:value-of select= \"swfurl\" /></td> <td><xsl:value-of select= \"dropped\" /></td> <td><xsl:value-of select= \"timestamp\" /></td> <td><xsl:value-of select= \"avsync\" /></td> <td> <xsl:call-template name= \"showtime\" > <xsl:with-param name= \"time\" select= \"time\" /> </xsl:call-template> </td> </tr> </xsl:template> <xsl:template match= \"publishing\" > publishing </xsl:template> <xsl:template match= \"active\" > active </xsl:template> <xsl:template match= \"width\" > <xsl:value-of select= \".\" /> x <xsl:value-of select= \"../height\" /> </xsl:template> </xsl:stylesheet> conf/nginx.conf \u5199\u5165\u5982\u4e0b\u5185\u5bb9\uff1a conf/nginx.conf\u6587\u4ef6\u5185\u5bb9 worker_processes 8; error_log logs/error.log info; events { worker_connections 1024; } rtmp { server { listen 1935; application live { live on; } application hls { live on; hls on; hls_path temp/hls; hls_fragment 8s; } } } http { server { listen 8080; root html; location / { rtmp_stat all; rtmp_stat_stylesheet index.xsl; } location /index.xsl { root html; } location /hls { types{ application/vnd.apple.mpegurl m3u8; video/mp2t ts; } alias temp/hls; expires -1; } } } \u53cc\u51fb nginx.exe \u5373\u53ef\u542f\u52a8\u670d\u52a1\u5668\uff0c\u670d\u52a1\u5668\u540c\u65f6\u76d1\u542c1935\u7aef\u53e3\u4e0e8080\u7aef\u53e3 \u63a8\u6d41\u4f7f\u7528\u7684RTMP\u670d\u52a1\u5668\u5730\u5740\u4e3a\uff1a rtmp://localhost:1935/live \u8bbf\u95ee http://localhost:8080 \u53ef\u4ee5\u67e5\u770b\u670d\u52a1\u5668\u7aef\u7684\u7edf\u8ba1\u4fe1\u606f \u5ba2\u6237\u7aef\uff08\u5982VLC\u7b49\uff09\u53ef\u4ee5\u8bbf\u95ee rtmp://localhost:1935/live \u63a5\u6536\u6d41\uff0c localhost \u53ef\u4ee5\u66f4\u6539\u4e3a\u672c\u673a\u7684IP\u5730\u5740 \u4f7f\u7528\u547d\u4ee4 .\\nginx.exe -s stop \u5173\u95ed\u670d\u52a1\u5668","title":"\u6e90\u7801\u7f16\u8bd1nginx\u5e76\u6dfb\u52a0RTMP\u6a21\u5757"},{"location":"coding/configuration/nginx-rtmp.html#nginxrtmp","text":"","title":"\u6e90\u7801\u7f16\u8bd1nginx\u5e76\u6dfb\u52a0RTMP\u6a21\u5757"},{"location":"coding/configuration/nginx-rtmp.html#_1","text":"nginx\u6e90\u4ee3\u7801\uff0c\u9700\u8981\u4ece GitHub Release \u4e0b\u8f7d\uff0c\u4ece nginx\u5b98\u7f51 \u4e0b\u8f7d\u7684\u6e90\u4ee3\u7801\u5728\u540e\u7eed\u7f16\u8bd1\u65f6\u4f1a\u62a5\u5982\u4e0b\u9519\u8bef\uff1a NMAKE : fatal error U1073: don't know how to make 'src/os/win32/ngx_win32_config.h' openssl\u6e90\u4ee3\u7801\uff0c\u53ef\u4ee5\u4ece GitHub Release \u4e0b\u8f7d zlib\u6e90\u4ee3\u7801\uff0cGitHub\u4ed3\u5e93\uff1a https://github.com/madler/zlib pcre\u6e90\u4ee3\u7801\uff0c\u5b98\u7f51\u63d0\u4f9b\u5404\u7248\u672c\u7684\u4e0b\u8f7d\u94fe\u63a5\uff1a https://ftp.pcre.org/pub/pcre/ RMTP\u63d2\u4ef6\uff1a https://github.com/arut/nginx-rtmp-module MSYS\uff0c\u53ef\u4ee5\u901a\u8fc7MinGW Installer\u8fdb\u884c\u5b89\u88c5 Visual Studio\uff0c\u9700\u8981\u5b89\u88c5C++\u7f16\u8bd1\u5668 NASM Perl>=5.30 \u672c\u6b21\u7f16\u8bd1\u4f7f\u7528\u7684\u73af\u5883\uff1a Windows 19042.662 Visual Studio 2019 Visual Studio Build Tools 2017 Windows 10 SDK 10.0.17763.0 nginx 1.19.5 openssl 1.1.1g zlib 1.2.11 pcre 8.44 perl 5.32 (Strawberry) nasm 2.15.05 nmake 14.27.29112.0 MSVC(cl) 19.27.29112 \u5c06\u5305\u542b perl.exe \u3001 nasm.exe \u3001 sed.exe \u7684\u76ee\u5f55\u6dfb\u52a0\u5230PATH\u73af\u5883\u53d8\u91cf\u3002","title":"\u5148\u51b3\u6761\u4ef6"},{"location":"coding/configuration/nginx-rtmp.html#_2","text":"\u542f\u52a8MSYS\uff0c cd \u5230nginx\u7684\u6e90\u4ee3\u7801\u76ee\u5f55\uff0c\u5207\u6362\u5230C\u76d8\u6839\u76ee\u5f55\u7684\u4ee3\u7801\u5982\u4e0b\uff1a cd /c/ \u6267\u884c auto/configure \uff0c\u6839\u636enginx\u5b98\u7f51\u63d0\u4f9b\u7684\u53c2\u6570\u8fdb\u884c\uff0c\u6dfb\u52a0``\u53c2\u6570\uff0c\u5177\u4f53\u547d\u4ee4\u5982\u4e0b\uff1a auto/configure \\ --with-cc = cl \\ --with-debug \\ --prefix = . \\ --conf-path = conf/nginx.conf \\ --pid-path = logs/nginx.pid \\ --http-log-path = logs/access.log \\ --error-log-path = logs/error.log \\ --sbin-path = nginx.exe \\ --http-client-body-temp-path = temp/client_body_temp \\ --http-proxy-temp-path = temp/proxy_temp \\ --http-fastcgi-temp-path = temp/fastcgi_temp \\ --http-scgi-temp-path = temp/scgi_temp \\ --http-uwsgi-temp-path = temp/uwsgi_temp \\ --with-cc-opt = -DFD_SETSIZE = 1024 \\ --with-pcre = pcre-8.44 \\ --with-zlib = zlib \\ --with-openssl = openssl \\ --with-openssl-opt = no-asm \\ --with-http_ssl_module \\ --add-module = nginx-rtmp-module \u6ce8\u610f\u6b64\u5904 --with-pcre \u3001 --with-zlib \u3001 --with-openssl \u53c2\u6570\u4e2d\u63d0\u4f9b\u7684\u8def\u5f84\u9700\u8981\u4e0ePCRE\u3001zlib\u3001openssl\u7684\u6e90\u4ee3\u7801\u8def\u5f84\u5206\u522b\u5bf9\u5e94\u3002 \u6267\u884c\u5b8c\u6bd5\u540e\u751f\u6210Makefile\u6587\u4ef6\u300232\u4f4d\u73af\u5883\u4e0b\u53ef\u4ee5\u76f4\u63a5\u5f00\u59cb\u7f16\u8bd1\uff0c64\u4f4d\u73af\u5883\u4e0b\u9700\u8981\u5bf9 auto\\lib\\openssl\\makefile.msvc \u6539\u4e3a\u5982\u4e0b\u4ee3\u7801 # Copyright (C) Igor Sysoev # Copyright (C) Nginx, Inc. all : cd $( OPENSSL ) perl Configure VC-WIN64A no-shared \\ --prefix = \"%cd%/openssl\" \\ --openssldir = \"%cd%/openssl/ssl\" \\ $( OPENSSL_OPT ) if exist ms\\do_win64a.bat ( \\ ms\\do_win64a \\ && $(MAKE) -f ms\\nt.mak \\ && $(MAKE) -f ms\\nt.mak install \\ ) else ( \\ $(MAKE) \\ && $(MAKE) install_sw \\ ) \u5c06 VC-WIN32 \u66ff\u6362\u4e3a VC-WIN64A \uff0c\u6240\u6709\u7684 ms\\do_ms.bat \u66ff\u6362\u4e3a ms\\do_win64a.bat \u3002","title":"\u51c6\u5907\u5de5\u4f5c"},{"location":"coding/configuration/nginx-rtmp.html#msvc","text":"\u7f16\u8f91\u5982\u4e0b\u6e90\u4ee3\u7801\u6587\u4ef6\uff1a nginx-rtmp-module/ngx_rtmp_flv_module.c \uff0c\u5b9a\u4f4d\u5230\u5982\u4e0b\u4ee3\u7801\u5757\uff1a 509\u884c\uff1a ngx_rtmp_prepare_message ( s , & h , ctx -> msg_mask & ( 1 << h . type ) ? & lh : NULL , out ); 521\u884c\uff1a ctx -> msg_mask |= ( 1 << h . type ); \u5c06\u5176\u4e2d\u7684 (1 << h.type) \u6539\u4e3a (unsigned long)(1 << h.type) \u3002 nginx-rtmp-module/ngx_rtmp_core_module.c \uff0c\u5b9a\u4f4d\u5230\u5982\u4e0b\u4ee3\u7801\u5757\uff1a 611\u884c\uff1a struct sockaddr * sa ; \u5c06\u6b64\u5904\u7684\u53d8\u91cf\u540d sa \u6539\u4e3a sa2 \uff0c\u5e76\u5c06\u6b64\u540e\u6240\u6709\u7684 sa \u53d8\u91cf\u6539\u4e3a sa2 \u3002 \u542f\u52a8x64 Native Tools Command Prompt for VS 2019\uff0c\u5207\u6362\u5230\u6e90\u4ee3\u7801\u76ee\u5f55\uff0c\u6267\u884c nmake \u542f\u52a8\u7f16\u8bd1\u3002\u8f93\u51fa\u6587\u4ef6\u4e3a objs/nginx.exe","title":"MSVC\u7f16\u8bd1"},{"location":"coding/configuration/nginx-rtmp.html#nginx","text":"\u5c06 objs/nginx.exe \u590d\u5236\u4e00\u4efd\u3002\u5728\u6240\u5728\u76ee\u5f55\u4e0b\u521b\u5efa\u5982\u4e0b\u6587\u4ef6\u7ed3\u6784\uff1a . \u251c\u2500 nginx.exe \u251c\u2500 conf/ \u2502 \u2514\u2500 nginx.conf \u251c\u2500 html \u2502 \u2514\u2500 index.xsl \u251c\u2500 logs \u2514\u2500 temp \u5176\u4e2d\uff0c html/index.xsl \u5199\u5165\u5982\u4e0b\u5185\u5bb9 html/index.xsl\u6587\u4ef6\u5185\u5bb9 <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!-- Copyright (C) Roman Arutyunyan --> <xsl:stylesheet version= \"1.0\" xmlns:xsl= \"http://www.w3.org/1999/XSL/Transform\" > <xsl:template match= \"/\" > <html> <head> <title> RTMP statistics </title> </head> <body> <xsl:apply-templates select= \"rtmp\" /> <hr/> Generated by <a href= 'https://github.com/arut/nginx-rtmp-module' > nginx-rtmp-module </a> &#160; <xsl:value-of select= \"/rtmp/nginx_rtmp_version\" /> , <a href= \"http://nginx.org\" > nginx </a> &#160; <xsl:value-of select= \"/rtmp/nginx_version\" /> , pid <xsl:value-of select= \"/rtmp/pid\" /> , built <xsl:value-of select= \"/rtmp/built\" /> &#160; <xsl:value-of select= \"/rtmp/compiler\" /> </body> </html> </xsl:template> <xsl:template match= \"rtmp\" > <table cellspacing= \"1\" cellpadding= \"5\" > <tr bgcolor= \"#999999\" > <th> RTMP </th> <th> #clients </th> <th colspan= \"4\" > Video </th> <th colspan= \"4\" > Audio </th> <th> In bytes </th> <th> Out bytes </th> <th> In bits/s </th> <th> Out bits/s </th> <th> State </th> <th> Time </th> </tr> <tr> <td colspan= \"2\" > Accepted: <xsl:value-of select= \"naccepted\" /></td> <th bgcolor= \"#999999\" > codec </th> <th bgcolor= \"#999999\" > bits/s </th> <th bgcolor= \"#999999\" > size </th> <th bgcolor= \"#999999\" > fps </th> <th bgcolor= \"#999999\" > codec </th> <th bgcolor= \"#999999\" > bits/s </th> <th bgcolor= \"#999999\" > freq </th> <th bgcolor= \"#999999\" > chan </th> <td> <xsl:call-template name= \"showsize\" > <xsl:with-param name= \"size\" select= \"bytes_in\" /> </xsl:call-template> </td> <td> <xsl:call-template name= \"showsize\" > <xsl:with-param name= \"size\" select= \"bytes_out\" /> </xsl:call-template> </td> <td> <xsl:call-template name= \"showsize\" > <xsl:with-param name= \"size\" select= \"bw_in\" /> <xsl:with-param name= \"bits\" select= \"1\" /> <xsl:with-param name= \"persec\" select= \"1\" /> </xsl:call-template> </td> <td> <xsl:call-template name= \"showsize\" > <xsl:with-param name= \"size\" select= \"bw_out\" /> <xsl:with-param name= \"bits\" select= \"1\" /> <xsl:with-param name= \"persec\" select= \"1\" /> </xsl:call-template> </td> <td/> <td> <xsl:call-template name= \"showtime\" > <xsl:with-param name= \"time\" select= \"/rtmp/uptime * 1000\" /> </xsl:call-template> </td> </tr> <xsl:apply-templates select= \"server\" /> </table> </xsl:template> <xsl:template match= \"server\" > <xsl:apply-templates select= \"application\" /> </xsl:template> <xsl:template match= \"application\" > <tr bgcolor= \"#999999\" > <td> <b><xsl:value-of select= \"name\" /></b> </td> </tr> <xsl:apply-templates select= \"live\" /> <xsl:apply-templates select= \"play\" /> </xsl:template> <xsl:template match= \"live\" > <tr bgcolor= \"#aaaaaa\" > <td> <i> live streams </i> </td> <td align= \"middle\" > <xsl:value-of select= \"nclients\" /> </td> </tr> <xsl:apply-templates select= \"stream\" /> </xsl:template> <xsl:template match= \"play\" > <tr bgcolor= \"#aaaaaa\" > <td> <i> vod streams </i> </td> <td align= \"middle\" > <xsl:value-of select= \"nclients\" /> </td> </tr> <xsl:apply-templates select= \"stream\" /> </xsl:template> <xsl:template match= \"stream\" > <tr valign= \"top\" > <xsl:attribute name= \"bgcolor\" > <xsl:choose> <xsl:when test= \"active\" > #cccccc </xsl:when> <xsl:otherwise> #dddddd </xsl:otherwise> </xsl:choose> </xsl:attribute> <td> <a href= \"\" > <xsl:attribute name= \"onclick\" > var d=document.getElementById(' <xsl:value-of select= \"../../name\" /> - <xsl:value-of select= \"name\" /> '); d.style.display=d.style.display=='none'?'':'none'; return false </xsl:attribute> <xsl:value-of select= \"name\" /> <xsl:if test= \"string-length(name) = 0\" > [EMPTY] </xsl:if> </a> </td> <td align= \"middle\" > <xsl:value-of select= \"nclients\" /> </td> <td> <xsl:value-of select= \"meta/video/codec\" /> &#160; <xsl:value-of select= \"meta/video/profile\" /> &#160; <xsl:value-of select= \"meta/video/level\" /> </td> <td> <xsl:call-template name= \"showsize\" > <xsl:with-param name= \"size\" select= \"bw_video\" /> <xsl:with-param name= \"bits\" select= \"1\" /> <xsl:with-param name= \"persec\" select= \"1\" /> </xsl:call-template> </td> <td> <xsl:apply-templates select= \"meta/video/width\" /> </td> <td> <xsl:value-of select= \"meta/video/frame_rate\" /> </td> <td> <xsl:value-of select= \"meta/audio/codec\" /> &#160; <xsl:value-of select= \"meta/audio/profile\" /> </td> <td> <xsl:call-template name= \"showsize\" > <xsl:with-param name= \"size\" select= \"bw_audio\" /> <xsl:with-param name= \"bits\" select= \"1\" /> <xsl:with-param name= \"persec\" select= \"1\" /> </xsl:call-template> </td> <td> <xsl:apply-templates select= \"meta/audio/sample_rate\" /> </td> <td> <xsl:value-of select= \"meta/audio/channels\" /> </td> <td> <xsl:call-template name= \"showsize\" > <xsl:with-param name= \"size\" select= \"bytes_in\" /> </xsl:call-template> </td> <td> <xsl:call-template name= \"showsize\" > <xsl:with-param name= \"size\" select= \"bytes_out\" /> </xsl:call-template> </td> <td> <xsl:call-template name= \"showsize\" > <xsl:with-param name= \"size\" select= \"bw_in\" /> <xsl:with-param name= \"bits\" select= \"1\" /> <xsl:with-param name= \"persec\" select= \"1\" /> </xsl:call-template> </td> <td> <xsl:call-template name= \"showsize\" > <xsl:with-param name= \"size\" select= \"bw_out\" /> <xsl:with-param name= \"bits\" select= \"1\" /> <xsl:with-param name= \"persec\" select= \"1\" /> </xsl:call-template> </td> <td><xsl:call-template name= \"streamstate\" /></td> <td> <xsl:call-template name= \"showtime\" > <xsl:with-param name= \"time\" select= \"time\" /> </xsl:call-template> </td> </tr> <tr style= \"display:none\" > <xsl:attribute name= \"id\" > <xsl:value-of select= \"../../name\" /> - <xsl:value-of select= \"name\" /> </xsl:attribute> <td colspan= \"16\" ngcolor= \"#eeeeee\" > <table cellspacing= \"1\" cellpadding= \"5\" > <tr> <th> Id </th> <th> State </th> <th> Address </th> <th> Flash version </th> <th> Page URL </th> <th> SWF URL </th> <th> Dropped </th> <th> Timestamp </th> <th> A-V </th> <th> Time </th> </tr> <xsl:apply-templates select= \"client\" /> </table> </td> </tr> </xsl:template> <xsl:template name= \"showtime\" > <xsl:param name= \"time\" /> <xsl:if test= \"$time &gt; 0\" > <xsl:variable name= \"sec\" > <xsl:value-of select= \"floor($time div 1000)\" /> </xsl:variable> <xsl:if test= \"$sec &gt;= 86400\" > <xsl:value-of select= \"floor($sec div 86400)\" /> d </xsl:if> <xsl:if test= \"$sec &gt;= 3600\" > <xsl:value-of select= \"(floor($sec div 3600)) mod 24\" /> h </xsl:if> <xsl:if test= \"$sec &gt;= 60\" > <xsl:value-of select= \"(floor($sec div 60)) mod 60\" /> m </xsl:if> <xsl:value-of select= \"$sec mod 60\" /> s </xsl:if> </xsl:template> <xsl:template name= \"showsize\" > <xsl:param name= \"size\" /> <xsl:param name= \"bits\" select= \"0\" /> <xsl:param name= \"persec\" select= \"0\" /> <xsl:variable name= \"sizen\" > <xsl:value-of select= \"floor($size div 1024)\" /> </xsl:variable> <xsl:choose> <xsl:when test= \"$sizen &gt;= 1073741824\" > <xsl:value-of select= \"format-number($sizen div 1073741824,'#.###')\" /> T </xsl:when> <xsl:when test= \"$sizen &gt;= 1048576\" > <xsl:value-of select= \"format-number($sizen div 1048576,'#.###')\" /> G </xsl:when> <xsl:when test= \"$sizen &gt;= 1024\" > <xsl:value-of select= \"format-number($sizen div 1024,'#.##')\" /> M </xsl:when> <xsl:when test= \"$sizen &gt;= 0\" > <xsl:value-of select= \"$sizen\" /> K </xsl:when> </xsl:choose> <xsl:if test= \"string-length($size) &gt; 0\" > <xsl:choose> <xsl:when test= \"$bits = 1\" > b </xsl:when> <xsl:otherwise> B </xsl:otherwise> </xsl:choose> <xsl:if test= \"$persec = 1\" > /s </xsl:if> </xsl:if> </xsl:template> <xsl:template name= \"streamstate\" > <xsl:choose> <xsl:when test= \"active\" > active </xsl:when> <xsl:otherwise> idle </xsl:otherwise> </xsl:choose> </xsl:template> <xsl:template name= \"clientstate\" > <xsl:choose> <xsl:when test= \"publishing\" > publishing </xsl:when> <xsl:otherwise> playing </xsl:otherwise> </xsl:choose> </xsl:template> <xsl:template match= \"client\" > <tr> <xsl:attribute name= \"bgcolor\" > <xsl:choose> <xsl:when test= \"publishing\" > #cccccc </xsl:when> <xsl:otherwise> #eeeeee </xsl:otherwise> </xsl:choose> </xsl:attribute> <td><xsl:value-of select= \"id\" /></td> <td><xsl:call-template name= \"clientstate\" /></td> <td> <a target= \"_blank\" > <xsl:attribute name= \"href\" > http://apps.db.ripe.net/search/query.html &#63; searchtext= <xsl:value-of select= \"address\" /> </xsl:attribute> <xsl:attribute name= \"title\" > whois </xsl:attribute> <xsl:value-of select= \"address\" /> </a> </td> <td><xsl:value-of select= \"flashver\" /></td> <td> <a target= \"_blank\" > <xsl:attribute name= \"href\" > <xsl:value-of select= \"pageurl\" /> </xsl:attribute> <xsl:value-of select= \"pageurl\" /> </a> </td> <td><xsl:value-of select= \"swfurl\" /></td> <td><xsl:value-of select= \"dropped\" /></td> <td><xsl:value-of select= \"timestamp\" /></td> <td><xsl:value-of select= \"avsync\" /></td> <td> <xsl:call-template name= \"showtime\" > <xsl:with-param name= \"time\" select= \"time\" /> </xsl:call-template> </td> </tr> </xsl:template> <xsl:template match= \"publishing\" > publishing </xsl:template> <xsl:template match= \"active\" > active </xsl:template> <xsl:template match= \"width\" > <xsl:value-of select= \".\" /> x <xsl:value-of select= \"../height\" /> </xsl:template> </xsl:stylesheet> conf/nginx.conf \u5199\u5165\u5982\u4e0b\u5185\u5bb9\uff1a conf/nginx.conf\u6587\u4ef6\u5185\u5bb9 worker_processes 8; error_log logs/error.log info; events { worker_connections 1024; } rtmp { server { listen 1935; application live { live on; } application hls { live on; hls on; hls_path temp/hls; hls_fragment 8s; } } } http { server { listen 8080; root html; location / { rtmp_stat all; rtmp_stat_stylesheet index.xsl; } location /index.xsl { root html; } location /hls { types{ application/vnd.apple.mpegurl m3u8; video/mp2t ts; } alias temp/hls; expires -1; } } } \u53cc\u51fb nginx.exe \u5373\u53ef\u542f\u52a8\u670d\u52a1\u5668\uff0c\u670d\u52a1\u5668\u540c\u65f6\u76d1\u542c1935\u7aef\u53e3\u4e0e8080\u7aef\u53e3 \u63a8\u6d41\u4f7f\u7528\u7684RTMP\u670d\u52a1\u5668\u5730\u5740\u4e3a\uff1a rtmp://localhost:1935/live \u8bbf\u95ee http://localhost:8080 \u53ef\u4ee5\u67e5\u770b\u670d\u52a1\u5668\u7aef\u7684\u7edf\u8ba1\u4fe1\u606f \u5ba2\u6237\u7aef\uff08\u5982VLC\u7b49\uff09\u53ef\u4ee5\u8bbf\u95ee rtmp://localhost:1935/live \u63a5\u6536\u6d41\uff0c localhost \u53ef\u4ee5\u66f4\u6539\u4e3a\u672c\u673a\u7684IP\u5730\u5740 \u4f7f\u7528\u547d\u4ee4 .\\nginx.exe -s stop \u5173\u95ed\u670d\u52a1\u5668","title":"nginx\u914d\u7f6e"},{"location":"coding/dsa/vector-and-list.html","text":"\u5411\u91cf\u4e0e\u5217\u8868 \u00b6 \u4e3b\u8981\u7684\u57fa\u7840\u7ebf\u6027\u6570\u636e\u7ed3\u6784\u662f\u5411\u91cf\u4e0e\u5217\u8868\u3002\u5728\u672c\u5408\u96c6\u4e2d\uff0c\u5411\u91cf\u6307\u4ee5\u6570\u7ec4\u65b9\u5f0f\u7ec4\u5408\u5e76\u5c01\u88c5\u901a\u7528\u62bd\u8c61\u63a5\u53e3\u7684\u6570\u636e\u7c7b\u578b\uff1b\u5217\u8868\u6307\u4ee5\u94fe\u8868\u65b9\u5f0f\u7ec4\u5408\u5e76\u5c01\u88c5\u901a\u7528\u62bd\u8c61\u63a5\u53e3\u7684\u6570\u636e\u7c7b\u578b\u3002 \u8f83\u4e3a\u9ad8\u7ea7\u7684\u6570\u636e\u7ed3\u6784\u2014\u2014\u6808\u4e0e\u961f\u5217\u5efa\u7acb\u5728\u5411\u91cf\u4e0e\u5217\u8868\u7684\u57fa\u7840\u4e0a\u3002\u63d0\u4f9b\u4e86\u4e00\u4e9b\u53d7\u9650\u5236\u7684\u64cd\u4f5c\u63a5\u53e3\u3002 \u7ebf\u6027\u6570\u636e\u7ed3\u6784 \u00b6 \u5bf9\u4e8e\u57fa\u7840\u7684\u7ebf\u6027\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u4e0b\u7684\u63a5\u53e3\u53ef\u4ee5\u89c6\u4e3a\u901a\u7528\uff1a \u64cd\u4f5c \u63cf\u8ff0 \u901a\u7528\u6027 size() \u83b7\u53d6\u5bf9\u8c61\u4e2d\u5143\u7d20\u7684\u6570\u76ee get() \u83b7\u53d6\u5bf9\u8c61\u4e2d\u67d0\u4e2a\u5143\u7d20\u7684\u503c set() \u4fee\u6539\u5bf9\u8c61\u4e2d\u67d0\u4e2a\u5143\u7d20\u7684\u503c insert() \u5411\u5bf9\u8c61\u4e2d\u7684\u67d0\u4e2a\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20 remove() \u79fb\u9664\u5bf9\u8c61\u4e2d\u7684\u67d0\u4e2a\u5143\u7d20 traverse() \u904d\u5386\u5bf9\u8c61\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u5e76\u6267\u884c\u67d0\u64cd\u4f5c find() \u5728\u5bf9\u8c61\u4e2d\u67e5\u627e\u67d0\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e search() \u5728\u6709\u5e8f\u7684\u7ed3\u6784\u4e2d\u67e5\u627e\u67d0\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e \u8981\u6c42\u6709\u5e8f sort() \u6392\u5e8f\u5bf9\u8c61\u4e2d\u7684\u5143\u7d20 \u8981\u6c42\u91cd\u8f7d < \u548c > \u8fd0\u7b97\u7b26 \u5411\u91cf \u00b6 C/C++\u8bed\u8a00\u4e2d\u7684\u6570\u7ec4\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u89c6\u4e3a\u7b80\u5355\u7684\u5411\u91cf\u3002\u4f46\u6570\u7ec4\u4e0d\u63d0\u4f9b\u63d2\u5165\u3001\u5220\u9664\u7b49\u5177\u4f53\u7684\u64cd\u4f5c\u63a5\u53e3\uff0c\u9700\u8981\u5728\u7a0b\u5e8f\u4ee3\u7801\u4e2d\u624b\u52a8\u5b9e\u73b0\u3002\u5c06\u6570\u7ec4\u5c01\u88c5\u6210\u7c7b\u53ef\u4ee5\u63d0\u4f9b\u66f4\u591a\u7684\u64cd\u4f5c\u63a5\u53e3\uff0c\u5e76\u4e14\u4fdd\u8bc1\u6570\u636e\u88ab\u5408\u6cd5\u5730\u8bbf\u95ee\u53ca\u4fee\u6539\u3002 \u5411\u91cf\u662f\u6570\u7ec4\u7684\u62bd\u8c61\u6cdb\u5316\u3001\u652f\u6301\u6240\u6709\u6570\u7ec4\u7684\u529f\u80fd\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u5143\u7d20\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u64cd\u4f5c\u63a5\u53e3\u3002 C++\u63d0\u4f9b\u4e86\u6a21\u677f\u7c7b\u7684\u529f\u80fd\u7528\u6765\u9488\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u5143\u7d20\u63d0\u4f9b\u76f8\u540c\u7684\u529f\u80fd\u3002\u5bf9\u4e8e\u67d0\u4e2aADT\uff08\u4ee5\u5411\u91cf\u4e3a\u4f8b\uff09\uff0c\u5176\u5c5e\u6027\u548c\u63a5\u53e3\u7684\u7ec4\u7ec7\u65b9\u5f0f\u53ef\u9075\u5faa\u5982\u4e0b\u89c4\u5219\uff1a template < typename T > class Vector { //\u5411\u91cf\u6a21\u677f\u7c7b private : Rank _size ; int _capacity ; T * _elem ; //\u89c4\u6a21\u3001\u5bb9\u91cf\u3001\u6570\u636e\u533a protected : /* ... \u5185\u90e8\u51fd\u6570 */ public : /* ... \u6784\u9020\u51fd\u6570 */ /* ... \u6790\u6784\u51fd\u6570 */ /* ... \u53ea\u8bfb\u63a5\u53e3 */ /* ... \u53ef\u5199\u63a5\u53e3 */ /* ... \u904d\u5386\u63a5\u53e3 */ };","title":"\u5411\u91cf\u4e0e\u5217\u8868"},{"location":"coding/dsa/vector-and-list.html#_1","text":"\u4e3b\u8981\u7684\u57fa\u7840\u7ebf\u6027\u6570\u636e\u7ed3\u6784\u662f\u5411\u91cf\u4e0e\u5217\u8868\u3002\u5728\u672c\u5408\u96c6\u4e2d\uff0c\u5411\u91cf\u6307\u4ee5\u6570\u7ec4\u65b9\u5f0f\u7ec4\u5408\u5e76\u5c01\u88c5\u901a\u7528\u62bd\u8c61\u63a5\u53e3\u7684\u6570\u636e\u7c7b\u578b\uff1b\u5217\u8868\u6307\u4ee5\u94fe\u8868\u65b9\u5f0f\u7ec4\u5408\u5e76\u5c01\u88c5\u901a\u7528\u62bd\u8c61\u63a5\u53e3\u7684\u6570\u636e\u7c7b\u578b\u3002 \u8f83\u4e3a\u9ad8\u7ea7\u7684\u6570\u636e\u7ed3\u6784\u2014\u2014\u6808\u4e0e\u961f\u5217\u5efa\u7acb\u5728\u5411\u91cf\u4e0e\u5217\u8868\u7684\u57fa\u7840\u4e0a\u3002\u63d0\u4f9b\u4e86\u4e00\u4e9b\u53d7\u9650\u5236\u7684\u64cd\u4f5c\u63a5\u53e3\u3002","title":"\u5411\u91cf\u4e0e\u5217\u8868"},{"location":"coding/dsa/vector-and-list.html#_2","text":"\u5bf9\u4e8e\u57fa\u7840\u7684\u7ebf\u6027\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u4e0b\u7684\u63a5\u53e3\u53ef\u4ee5\u89c6\u4e3a\u901a\u7528\uff1a \u64cd\u4f5c \u63cf\u8ff0 \u901a\u7528\u6027 size() \u83b7\u53d6\u5bf9\u8c61\u4e2d\u5143\u7d20\u7684\u6570\u76ee get() \u83b7\u53d6\u5bf9\u8c61\u4e2d\u67d0\u4e2a\u5143\u7d20\u7684\u503c set() \u4fee\u6539\u5bf9\u8c61\u4e2d\u67d0\u4e2a\u5143\u7d20\u7684\u503c insert() \u5411\u5bf9\u8c61\u4e2d\u7684\u67d0\u4e2a\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20 remove() \u79fb\u9664\u5bf9\u8c61\u4e2d\u7684\u67d0\u4e2a\u5143\u7d20 traverse() \u904d\u5386\u5bf9\u8c61\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u5e76\u6267\u884c\u67d0\u64cd\u4f5c find() \u5728\u5bf9\u8c61\u4e2d\u67e5\u627e\u67d0\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e search() \u5728\u6709\u5e8f\u7684\u7ed3\u6784\u4e2d\u67e5\u627e\u67d0\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e \u8981\u6c42\u6709\u5e8f sort() \u6392\u5e8f\u5bf9\u8c61\u4e2d\u7684\u5143\u7d20 \u8981\u6c42\u91cd\u8f7d < \u548c > \u8fd0\u7b97\u7b26","title":"\u7ebf\u6027\u6570\u636e\u7ed3\u6784"},{"location":"coding/dsa/vector-and-list.html#_3","text":"C/C++\u8bed\u8a00\u4e2d\u7684\u6570\u7ec4\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u89c6\u4e3a\u7b80\u5355\u7684\u5411\u91cf\u3002\u4f46\u6570\u7ec4\u4e0d\u63d0\u4f9b\u63d2\u5165\u3001\u5220\u9664\u7b49\u5177\u4f53\u7684\u64cd\u4f5c\u63a5\u53e3\uff0c\u9700\u8981\u5728\u7a0b\u5e8f\u4ee3\u7801\u4e2d\u624b\u52a8\u5b9e\u73b0\u3002\u5c06\u6570\u7ec4\u5c01\u88c5\u6210\u7c7b\u53ef\u4ee5\u63d0\u4f9b\u66f4\u591a\u7684\u64cd\u4f5c\u63a5\u53e3\uff0c\u5e76\u4e14\u4fdd\u8bc1\u6570\u636e\u88ab\u5408\u6cd5\u5730\u8bbf\u95ee\u53ca\u4fee\u6539\u3002 \u5411\u91cf\u662f\u6570\u7ec4\u7684\u62bd\u8c61\u6cdb\u5316\u3001\u652f\u6301\u6240\u6709\u6570\u7ec4\u7684\u529f\u80fd\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u5143\u7d20\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u64cd\u4f5c\u63a5\u53e3\u3002 C++\u63d0\u4f9b\u4e86\u6a21\u677f\u7c7b\u7684\u529f\u80fd\u7528\u6765\u9488\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u5143\u7d20\u63d0\u4f9b\u76f8\u540c\u7684\u529f\u80fd\u3002\u5bf9\u4e8e\u67d0\u4e2aADT\uff08\u4ee5\u5411\u91cf\u4e3a\u4f8b\uff09\uff0c\u5176\u5c5e\u6027\u548c\u63a5\u53e3\u7684\u7ec4\u7ec7\u65b9\u5f0f\u53ef\u9075\u5faa\u5982\u4e0b\u89c4\u5219\uff1a template < typename T > class Vector { //\u5411\u91cf\u6a21\u677f\u7c7b private : Rank _size ; int _capacity ; T * _elem ; //\u89c4\u6a21\u3001\u5bb9\u91cf\u3001\u6570\u636e\u533a protected : /* ... \u5185\u90e8\u51fd\u6570 */ public : /* ... \u6784\u9020\u51fd\u6570 */ /* ... \u6790\u6784\u51fd\u6570 */ /* ... \u53ea\u8bfb\u63a5\u53e3 */ /* ... \u53ef\u5199\u63a5\u53e3 */ /* ... \u904d\u5386\u63a5\u53e3 */ };","title":"\u5411\u91cf"},{"location":"coding/leetcode/1.html","text":"1. \u4e24\u6570\u4e4b\u548c \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u76ee\u6807\u503c target \uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa\u548c\u4e3a\u76ee\u6807\u503c\u7684\u90a3 \u4e24\u4e2a \u6574\u6570\uff0c\u5e76\u8fd4\u56de\u4ed6\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\u3002\u4f46\u662f\uff0c\u6570\u7ec4\u4e2d\u540c\u4e00\u4e2a\u5143\u7d20\u4e0d\u80fd\u4f7f\u7528\u4e24\u904d\u3002 \u793a\u4f8b: \u7ed9\u5b9a nums = [2, 7, 11, 15], target = 9 \u56e0\u4e3a nums[0] + nums[1] = 2 + 7 = 9 \u6240\u4ee5\u8fd4\u56de [0, 1] Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5b58\u50a8\u5728\u54c8\u5e0c\u8868\u4e2d\uff0c\u6bcf\u6b21\u5728\u6570\u7ec4\u4e2d\u67e5\u627e\u76ee\u6807\u503c\u4e0e\u5f53\u524d\u503c\u4e4b\u5dee\u662f\u5426\u5728\u54c8\u5e0c\u8868\u4e2d\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Note: The returned array must be malloced, assume caller calls free(). */ #define MAX(a, b) (a > b ? a : b) #define MIN(a, b) (a < b ? a : b) struct cell { int value ; int flag ; }; int * twoSum ( int * nums , int numsSize , int target , int * returnSize ){ * returnSize = 2 ; int i = 0 , mapSize = numsSize * 2 , cur , * ret = malloc ( sizeof ( int ) * 2 ), targetval , j = 0 ; struct cell * hashMap = ( struct cell * ) memset ( malloc ( sizeof ( struct cell ) * mapSize ), 0 , sizeof ( struct cell ) * mapSize ); for ( i = 0 ; i < numsSize ; i ++ ) { cur = ( nums [ i ] > 0 ? nums [ i ] : - nums [ i ]) % mapSize ; while ( hashMap [ cur ]. flag != 0 && hashMap [ cur ]. value != nums [ i ]) { cur ++ ; cur = cur == mapSize ? 0 : cur ; } if ( hashMap [ cur ]. flag == 0 ) hashMap [ cur ]. value = nums [ i ]; hashMap [ cur ]. flag ++ ; } for ( i = 0 ; i < numsSize ; i ++ ) { targetval = target - nums [ i ]; cur = ( targetval > 0 ? targetval : - targetval ) % mapSize ; while ( hashMap [ cur ]. flag != 0 && hashMap [ cur ]. value != targetval ) { cur ++ ; cur = cur == mapSize ? 0 : cur ; } if ( hashMap [ cur ]. value == targetval ) { for ( j = 0 ; j < numsSize ; j ++ ) if ( nums [ j ] == targetval && j != i ) break ; if ( j != numsSize ) break ; } } ret [ 0 ] = MIN ( i , j ); ret [ 1 ] = MAX ( i , j ); if ( nums [ i ] + nums [ j ] == target ) return ret ; * returnSize = 0 ; return NULL ; }","title":"1. \u4e24\u6570\u4e4b\u548c"},{"location":"coding/leetcode/1.html#1","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"1. \u4e24\u6570\u4e4b\u548c"},{"location":"coding/leetcode/1.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u76ee\u6807\u503c target \uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa\u548c\u4e3a\u76ee\u6807\u503c\u7684\u90a3 \u4e24\u4e2a \u6574\u6570\uff0c\u5e76\u8fd4\u56de\u4ed6\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\u3002\u4f46\u662f\uff0c\u6570\u7ec4\u4e2d\u540c\u4e00\u4e2a\u5143\u7d20\u4e0d\u80fd\u4f7f\u7528\u4e24\u904d\u3002 \u793a\u4f8b: \u7ed9\u5b9a nums = [2, 7, 11, 15], target = 9 \u56e0\u4e3a nums[0] + nums[1] = 2 + 7 = 9 \u6240\u4ee5\u8fd4\u56de [0, 1] Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/1.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5b58\u50a8\u5728\u54c8\u5e0c\u8868\u4e2d\uff0c\u6bcf\u6b21\u5728\u6570\u7ec4\u4e2d\u67e5\u627e\u76ee\u6807\u503c\u4e0e\u5f53\u524d\u503c\u4e4b\u5dee\u662f\u5426\u5728\u54c8\u5e0c\u8868\u4e2d\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Note: The returned array must be malloced, assume caller calls free(). */ #define MAX(a, b) (a > b ? a : b) #define MIN(a, b) (a < b ? a : b) struct cell { int value ; int flag ; }; int * twoSum ( int * nums , int numsSize , int target , int * returnSize ){ * returnSize = 2 ; int i = 0 , mapSize = numsSize * 2 , cur , * ret = malloc ( sizeof ( int ) * 2 ), targetval , j = 0 ; struct cell * hashMap = ( struct cell * ) memset ( malloc ( sizeof ( struct cell ) * mapSize ), 0 , sizeof ( struct cell ) * mapSize ); for ( i = 0 ; i < numsSize ; i ++ ) { cur = ( nums [ i ] > 0 ? nums [ i ] : - nums [ i ]) % mapSize ; while ( hashMap [ cur ]. flag != 0 && hashMap [ cur ]. value != nums [ i ]) { cur ++ ; cur = cur == mapSize ? 0 : cur ; } if ( hashMap [ cur ]. flag == 0 ) hashMap [ cur ]. value = nums [ i ]; hashMap [ cur ]. flag ++ ; } for ( i = 0 ; i < numsSize ; i ++ ) { targetval = target - nums [ i ]; cur = ( targetval > 0 ? targetval : - targetval ) % mapSize ; while ( hashMap [ cur ]. flag != 0 && hashMap [ cur ]. value != targetval ) { cur ++ ; cur = cur == mapSize ? 0 : cur ; } if ( hashMap [ cur ]. value == targetval ) { for ( j = 0 ; j < numsSize ; j ++ ) if ( nums [ j ] == targetval && j != i ) break ; if ( j != numsSize ) break ; } } ret [ 0 ] = MIN ( i , j ); ret [ 1 ] = MAX ( i , j ); if ( nums [ i ] + nums [ j ] == target ) return ret ; * returnSize = 0 ; return NULL ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/101.html","text":"101. \u5bf9\u79f0\u4e8c\u53c9\u6811 \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u68c0\u67e5\u5b83\u662f\u5426\u662f\u955c\u50cf\u5bf9\u79f0\u7684\u3002 \u4f8b\u5982\uff0c\u4e8c\u53c9\u6811 [1,2,2,3,4,4,3] \u662f\u5bf9\u79f0\u7684\u3002 1 / \\ 2 2 / \\ / \\ 3 4 4 3 \u4f46\u662f\u4e0b\u9762\u8fd9\u4e2a [1,2,2,null,3,null,3] \u5219\u4e0d\u662f\u955c\u50cf\u5bf9\u79f0\u7684: 1 / \\ 2 2 \\ \\ 3 3 \u8fdb\u9636\uff1a \u4f60\u53ef\u4ee5\u8fd0\u7528\u9012\u5f52\u548c\u8fed\u4ee3\u4e24\u79cd\u65b9\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u9012\u5f52\u5224\u65ad\u4e24\u4e2a\u6839\u8282\u70b9\u662f\u5426\u6210\u955c\u50cf\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Definition for a binary tree node. * struct TreeNode { * int val; * struct TreeNode *left; * struct TreeNode *right; * }; */ bool isMirrored ( struct TreeNode * root1 , struct TreeNode * root2 ) { if ( ! root1 || ! root2 ) return root1 == root2 ; if ( root1 -> val != root2 -> val ) return false ; return isMirrored ( root1 -> left , root2 -> right ) && isMirrored ( root2 -> left , root1 -> right ); } bool isSymmetric ( struct TreeNode * root ){ if ( root == NULL ) return true ; return isMirrored ( root -> left , root -> right ); }","title":"101. \u5bf9\u79f0\u4e8c\u53c9\u6811"},{"location":"coding/leetcode/101.html#101","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"101. \u5bf9\u79f0\u4e8c\u53c9\u6811"},{"location":"coding/leetcode/101.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u68c0\u67e5\u5b83\u662f\u5426\u662f\u955c\u50cf\u5bf9\u79f0\u7684\u3002 \u4f8b\u5982\uff0c\u4e8c\u53c9\u6811 [1,2,2,3,4,4,3] \u662f\u5bf9\u79f0\u7684\u3002 1 / \\ 2 2 / \\ / \\ 3 4 4 3 \u4f46\u662f\u4e0b\u9762\u8fd9\u4e2a [1,2,2,null,3,null,3] \u5219\u4e0d\u662f\u955c\u50cf\u5bf9\u79f0\u7684: 1 / \\ 2 2 \\ \\ 3 3 \u8fdb\u9636\uff1a \u4f60\u53ef\u4ee5\u8fd0\u7528\u9012\u5f52\u548c\u8fed\u4ee3\u4e24\u79cd\u65b9\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/101.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u9012\u5f52\u5224\u65ad\u4e24\u4e2a\u6839\u8282\u70b9\u662f\u5426\u6210\u955c\u50cf\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Definition for a binary tree node. * struct TreeNode { * int val; * struct TreeNode *left; * struct TreeNode *right; * }; */ bool isMirrored ( struct TreeNode * root1 , struct TreeNode * root2 ) { if ( ! root1 || ! root2 ) return root1 == root2 ; if ( root1 -> val != root2 -> val ) return false ; return isMirrored ( root1 -> left , root2 -> right ) && isMirrored ( root2 -> left , root1 -> right ); } bool isSymmetric ( struct TreeNode * root ){ if ( root == NULL ) return true ; return isMirrored ( root -> left , root -> right ); }","title":"\u9898\u89e3"},{"location":"coding/leetcode/102.html","text":"102. \u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386 \u00b6 \u96be\u5ea6\uff1a \u4e2d\u7b49 \u9898\u76ee \u00b6 \u7ed9\u4f60\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u8bf7\u4f60\u8fd4\u56de\u5176\u6309 \u5c42\u5e8f\u904d\u5386 \u5f97\u5230\u7684\u8282\u70b9\u503c\u3002 \uff08\u5373\u9010\u5c42\u5730\uff0c\u4ece\u5de6\u5230\u53f3\u8bbf\u95ee\u6240\u6709\u8282\u70b9\uff09\u3002 \u793a\u4f8b\uff1a \u4e8c\u53c9\u6811\uff1a [3,9,20,null,null,15,7] , 3 / \\ 9 20 / \\ 15 7 \u8fd4\u56de\u5176\u5c42\u6b21\u904d\u5386\u7ed3\u679c\uff1a [ [3], [9,20], [15,7] ] Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u7b2c\u4e00\u5c42\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\u6839\u8282\u70b9\u7684\u503c\uff0c\u518d\u5c42\u5e8f\u904d\u5386\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\uff0c\u5408\u5e76\u540c\u5c42\u7684\u7ed3\u679c\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Definition for a binary tree node. * struct TreeNode { * int val; * struct TreeNode *left; * struct TreeNode *right; * }; */ /** * Return an array of arrays of size *returnSize. * The sizes of the arrays are returned as *returnColumnSizes array. * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free(). */ #define MAX(x, y) (x > y ? x : y) int * merge ( int * leftBranch , int leftSize , int * rightBranch , int rightSize , int * returnSize ) { * returnSize = leftSize + rightSize ; int * ret = ( int * ) malloc ( sizeof ( int ) * ( leftSize + rightSize )); if ( leftSize != 0 ) { memcpy ( ret , leftBranch , sizeof ( int ) * leftSize ); free ( leftBranch ); } if ( rightSize != 0 ) { memcpy ( ret + leftSize , rightBranch , sizeof ( int ) * rightSize ); free ( rightBranch ); } return ret ; } int ** levelOrder ( struct TreeNode * root , int * returnSize , int ** returnColumnSizes ){ if ( root == NULL ) { * returnSize = 0 ; * returnColumnSizes = NULL ; return NULL ; } int leftBranchSize = 0 , * leftColumnSizes = NULL , ** leftBranch = levelOrder ( root -> left , & leftBranchSize , & leftColumnSizes ), rightBranchSize = 0 , * rightColumnSizes = NULL , ** rightBranch = levelOrder ( root -> right , & rightBranchSize , & rightColumnSizes ); * returnSize = 1 + MAX ( leftBranchSize , rightBranchSize ); int ** ret = ( int ** ) malloc ( sizeof ( int * ) * * returnSize ), * returnCols = ( int * ) malloc ( sizeof ( int ) * * returnSize ), i = 0 ; * returnColumnSizes = returnCols ; * returnCols = 1 ; * ret = malloc ( sizeof ( int )); ** ret = root -> val ; for ( i = 1 ; i < * returnSize ; i ++ ) { if ( i <= leftBranchSize && i <= rightBranchSize ) ret [ i ] = merge ( leftBranch [ i - 1 ], leftColumnSizes [ i - 1 ], rightBranch [ i - 1 ], rightColumnSizes [ i - 1 ], returnCols + i ); else if ( i <= leftBranchSize ) ret [ i ] = merge ( leftBranch [ i -1 ], leftColumnSizes [ i -1 ], NULL , 0 , returnCols + i ); else if ( i <= rightBranchSize ) ret [ i ] = merge ( NULL , 0 , rightBranch [ i -1 ], rightColumnSizes [ i -1 ], returnCols + i ); } free ( leftBranch ); free ( rightBranch ); free ( leftColumnSizes ); free ( rightColumnSizes ); return ret ; }","title":"102. \u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386"},{"location":"coding/leetcode/102.html#102","text":"\u96be\u5ea6\uff1a \u4e2d\u7b49","title":"102. \u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386"},{"location":"coding/leetcode/102.html#_1","text":"\u7ed9\u4f60\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u8bf7\u4f60\u8fd4\u56de\u5176\u6309 \u5c42\u5e8f\u904d\u5386 \u5f97\u5230\u7684\u8282\u70b9\u503c\u3002 \uff08\u5373\u9010\u5c42\u5730\uff0c\u4ece\u5de6\u5230\u53f3\u8bbf\u95ee\u6240\u6709\u8282\u70b9\uff09\u3002 \u793a\u4f8b\uff1a \u4e8c\u53c9\u6811\uff1a [3,9,20,null,null,15,7] , 3 / \\ 9 20 / \\ 15 7 \u8fd4\u56de\u5176\u5c42\u6b21\u904d\u5386\u7ed3\u679c\uff1a [ [3], [9,20], [15,7] ] Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/102.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u7b2c\u4e00\u5c42\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\u6839\u8282\u70b9\u7684\u503c\uff0c\u518d\u5c42\u5e8f\u904d\u5386\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\uff0c\u5408\u5e76\u540c\u5c42\u7684\u7ed3\u679c\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Definition for a binary tree node. * struct TreeNode { * int val; * struct TreeNode *left; * struct TreeNode *right; * }; */ /** * Return an array of arrays of size *returnSize. * The sizes of the arrays are returned as *returnColumnSizes array. * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free(). */ #define MAX(x, y) (x > y ? x : y) int * merge ( int * leftBranch , int leftSize , int * rightBranch , int rightSize , int * returnSize ) { * returnSize = leftSize + rightSize ; int * ret = ( int * ) malloc ( sizeof ( int ) * ( leftSize + rightSize )); if ( leftSize != 0 ) { memcpy ( ret , leftBranch , sizeof ( int ) * leftSize ); free ( leftBranch ); } if ( rightSize != 0 ) { memcpy ( ret + leftSize , rightBranch , sizeof ( int ) * rightSize ); free ( rightBranch ); } return ret ; } int ** levelOrder ( struct TreeNode * root , int * returnSize , int ** returnColumnSizes ){ if ( root == NULL ) { * returnSize = 0 ; * returnColumnSizes = NULL ; return NULL ; } int leftBranchSize = 0 , * leftColumnSizes = NULL , ** leftBranch = levelOrder ( root -> left , & leftBranchSize , & leftColumnSizes ), rightBranchSize = 0 , * rightColumnSizes = NULL , ** rightBranch = levelOrder ( root -> right , & rightBranchSize , & rightColumnSizes ); * returnSize = 1 + MAX ( leftBranchSize , rightBranchSize ); int ** ret = ( int ** ) malloc ( sizeof ( int * ) * * returnSize ), * returnCols = ( int * ) malloc ( sizeof ( int ) * * returnSize ), i = 0 ; * returnColumnSizes = returnCols ; * returnCols = 1 ; * ret = malloc ( sizeof ( int )); ** ret = root -> val ; for ( i = 1 ; i < * returnSize ; i ++ ) { if ( i <= leftBranchSize && i <= rightBranchSize ) ret [ i ] = merge ( leftBranch [ i - 1 ], leftColumnSizes [ i - 1 ], rightBranch [ i - 1 ], rightColumnSizes [ i - 1 ], returnCols + i ); else if ( i <= leftBranchSize ) ret [ i ] = merge ( leftBranch [ i -1 ], leftColumnSizes [ i -1 ], NULL , 0 , returnCols + i ); else if ( i <= rightBranchSize ) ret [ i ] = merge ( NULL , 0 , rightBranch [ i -1 ], rightColumnSizes [ i -1 ], returnCols + i ); } free ( leftBranch ); free ( rightBranch ); free ( leftColumnSizes ); free ( rightColumnSizes ); return ret ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/118.html","text":"118. \u6768\u8f89\u4e09\u89d2 \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570 numRows \uff0c\u751f\u6210\u6768\u8f89\u4e09\u89d2\u7684\u524d numRows \u884c\u3002 \u5728\u6768\u8f89\u4e09\u89d2\u4e2d\uff0c\u6bcf\u4e2a\u6570\u662f\u5b83\u5de6\u4e0a\u65b9\u548c\u53f3\u4e0a\u65b9\u7684\u6570\u7684\u548c\u3002 \u793a\u4f8b\uff1a \u8f93\u5165: 5 \u8f93\u51fa: [ [1], [1,1], [1,2,1], [1,3,3,1], [1,4,6,4,1] ] Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u6839\u636e\u6768\u8f89\u4e09\u89d2\u7684\u5b9a\u4e49\uff0c\u901a\u8fc7\u9012\u5f52\u9010\u884c\u6784\u9020\u51fa\u6bcf\u4e00\u884c\u7684\u503c \u4ee3\u7801\u5982\u4e0b\uff1a /** * Return an array of arrays of size *returnSize. * The sizes of the arrays are returned as *returnColumnSizes array. * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free(). */ int ** generate ( int numRows , int * returnSize , int ** returnColumnSizes ) { * returnSize = numRows ; if ( numRows == 0 ) return NULL ; if ( numRows == 1 ) { * returnColumnSizes = ( int * ) malloc ( sizeof ( int )); ** returnColumnSizes = 1 ; int ** ret = ( int ** ) malloc ( sizeof ( int * )); * ret = ( int * ) malloc ( sizeof ( int )); ** ret = 1 ; return ret ; } int retSize = 0 , * oldRetColSizes = NULL , ** rec = generate ( numRows - 1 , & retSize , & oldRetColSizes ), i = 0 ; ** ret = ( int ** ) memcpy ( malloc ( sizeof ( int * ) * numRows ), rec , ( numRows - 1 ) * sizeof ( int * )); * newRetColSizes = memcpy (( int * ) malloc ( sizeof ( int ) * numRows ), oldRetColSizes , ( numRows - 1 ) * sizeof ( int )); * tempArray = ( int * ) malloc ( sizeof ( int ) * numRows ); free ( oldRetColSizes ); free ( rec ); newRetColSizes [ numRows - 1 ] = numRows ; for ( i = 1 ; i < numRows - 1 ; i ++ ) tempArray [ i ] = * ( ret [ numRows - 2 ] + i ) + * ( ret [ numRows - 2 ] + i - 1 ); tempArray [ 0 ] = 1 ; tempArray [ numRows - 1 ] = 1 ; ret [ numRows - 1 ] = tempArray ; * returnColumnSizes = newRetColSizes ; return ret ; }","title":"118. \u6768\u8f89\u4e09\u89d2"},{"location":"coding/leetcode/118.html#118","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"118. \u6768\u8f89\u4e09\u89d2"},{"location":"coding/leetcode/118.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570 numRows \uff0c\u751f\u6210\u6768\u8f89\u4e09\u89d2\u7684\u524d numRows \u884c\u3002 \u5728\u6768\u8f89\u4e09\u89d2\u4e2d\uff0c\u6bcf\u4e2a\u6570\u662f\u5b83\u5de6\u4e0a\u65b9\u548c\u53f3\u4e0a\u65b9\u7684\u6570\u7684\u548c\u3002 \u793a\u4f8b\uff1a \u8f93\u5165: 5 \u8f93\u51fa: [ [1], [1,1], [1,2,1], [1,3,3,1], [1,4,6,4,1] ] Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/118.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u6839\u636e\u6768\u8f89\u4e09\u89d2\u7684\u5b9a\u4e49\uff0c\u901a\u8fc7\u9012\u5f52\u9010\u884c\u6784\u9020\u51fa\u6bcf\u4e00\u884c\u7684\u503c \u4ee3\u7801\u5982\u4e0b\uff1a /** * Return an array of arrays of size *returnSize. * The sizes of the arrays are returned as *returnColumnSizes array. * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free(). */ int ** generate ( int numRows , int * returnSize , int ** returnColumnSizes ) { * returnSize = numRows ; if ( numRows == 0 ) return NULL ; if ( numRows == 1 ) { * returnColumnSizes = ( int * ) malloc ( sizeof ( int )); ** returnColumnSizes = 1 ; int ** ret = ( int ** ) malloc ( sizeof ( int * )); * ret = ( int * ) malloc ( sizeof ( int )); ** ret = 1 ; return ret ; } int retSize = 0 , * oldRetColSizes = NULL , ** rec = generate ( numRows - 1 , & retSize , & oldRetColSizes ), i = 0 ; ** ret = ( int ** ) memcpy ( malloc ( sizeof ( int * ) * numRows ), rec , ( numRows - 1 ) * sizeof ( int * )); * newRetColSizes = memcpy (( int * ) malloc ( sizeof ( int ) * numRows ), oldRetColSizes , ( numRows - 1 ) * sizeof ( int )); * tempArray = ( int * ) malloc ( sizeof ( int ) * numRows ); free ( oldRetColSizes ); free ( rec ); newRetColSizes [ numRows - 1 ] = numRows ; for ( i = 1 ; i < numRows - 1 ; i ++ ) tempArray [ i ] = * ( ret [ numRows - 2 ] + i ) + * ( ret [ numRows - 2 ] + i - 1 ); tempArray [ 0 ] = 1 ; tempArray [ numRows - 1 ] = 1 ; ret [ numRows - 1 ] = tempArray ; * returnColumnSizes = newRetColSizes ; return ret ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/119.html","text":"119. \u6768\u8f89\u4e09\u89d2 II \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u7d22\u5f15 k k \uff0c\u5176\u4e2d k\\leq33 k\\leq33 \uff0c\u8fd4\u56de\u6768\u8f89\u4e09\u89d2\u7684\u7b2c k k \u884c\u3002 \u5728\u6768\u8f89\u4e09\u89d2\u4e2d\uff0c\u6bcf\u4e2a\u6570\u662f\u5b83\u5de6\u4e0a\u65b9\u548c\u53f3\u4e0a\u65b9\u7684\u6570\u7684\u548c\u3002 \u793a\u4f8b\uff1a \u8f93\u5165: 3 \u8f93\u51fa: [1,3,3,1] \u8fdb\u9636\uff1a \u4f60\u53ef\u4ee5\u4f18\u5316\u4f60\u7684\u7b97\u6cd5\u5230 O(k) O(k) \u7a7a\u95f4\u590d\u6742\u5ea6\u5417\uff1f Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u5f53\u524d\u884c\u7684\u7ed3\u679c\u4ec5\u4f9d\u8d56\u4e8e\u4e0a\u4e00\u884c\u7684\u7ed3\u679c\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Note: The returned array must be malloced, assume caller calls free(). */ void recur ( int rowIndex , int * Filling ) { if ( rowIndex <= 1 ) return ; recur ( rowIndex - 1 , Filling ); for ( int i = rowIndex - 1 ; i > 0 ; i -- ) Filling [ i ] += Filling [ i - 1 ]; } int * getRow ( int rowIndex , int * returnSize ){ * returnSize = rowIndex + 1 ; int * ret = ( int * ) memset ( malloc ( sizeof ( int ) * * returnSize ), 0 , sizeof ( int ) * * returnSize ); ret [ 0 ] = 1 ; recur ( * returnSize , ret ); return ret ; }","title":"119. \u6768\u8f89\u4e09\u89d2 II"},{"location":"coding/leetcode/119.html#119-ii","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"119. \u6768\u8f89\u4e09\u89d2 II"},{"location":"coding/leetcode/119.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u7d22\u5f15 k k \uff0c\u5176\u4e2d k\\leq33 k\\leq33 \uff0c\u8fd4\u56de\u6768\u8f89\u4e09\u89d2\u7684\u7b2c k k \u884c\u3002 \u5728\u6768\u8f89\u4e09\u89d2\u4e2d\uff0c\u6bcf\u4e2a\u6570\u662f\u5b83\u5de6\u4e0a\u65b9\u548c\u53f3\u4e0a\u65b9\u7684\u6570\u7684\u548c\u3002 \u793a\u4f8b\uff1a \u8f93\u5165: 3 \u8f93\u51fa: [1,3,3,1] \u8fdb\u9636\uff1a \u4f60\u53ef\u4ee5\u4f18\u5316\u4f60\u7684\u7b97\u6cd5\u5230 O(k) O(k) \u7a7a\u95f4\u590d\u6742\u5ea6\u5417\uff1f Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/119.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u5f53\u524d\u884c\u7684\u7ed3\u679c\u4ec5\u4f9d\u8d56\u4e8e\u4e0a\u4e00\u884c\u7684\u7ed3\u679c\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Note: The returned array must be malloced, assume caller calls free(). */ void recur ( int rowIndex , int * Filling ) { if ( rowIndex <= 1 ) return ; recur ( rowIndex - 1 , Filling ); for ( int i = rowIndex - 1 ; i > 0 ; i -- ) Filling [ i ] += Filling [ i - 1 ]; } int * getRow ( int rowIndex , int * returnSize ){ * returnSize = rowIndex + 1 ; int * ret = ( int * ) memset ( malloc ( sizeof ( int ) * * returnSize ), 0 , sizeof ( int ) * * returnSize ); ret [ 0 ] = 1 ; recur ( * returnSize , ret ); return ret ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/120.html","text":"120. \u4e09\u89d2\u5f62\u6700\u5c0f\u8def\u5f84\u548c \u00b6 \u96be\u5ea6\uff1a \u4e2d\u7b49 \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u627e\u51fa\u81ea\u9876\u5411\u4e0b\u7684\u6700\u5c0f\u8def\u5f84\u548c\u3002\u6bcf\u4e00\u6b65\u53ea\u80fd\u79fb\u52a8\u5230\u4e0b\u4e00\u884c\u4e2d\u76f8\u90bb\u7684\u7ed3\u70b9\u4e0a\u3002 \u76f8\u90bb\u7684\u7ed3\u70b9 \u5728\u8fd9\u91cc\u6307\u7684\u662f \u4e0b\u6807 \u4e0e \u4e0a\u4e00\u5c42\u7ed3\u70b9\u4e0b\u6807 \u76f8\u540c\u6216\u8005\u7b49\u4e8e \u4e0a\u4e00\u5c42\u7ed3\u70b9\u4e0b\u6807 + 1 \u7684\u4e24\u4e2a\u7ed3\u70b9\u3002 \u4f8b\u5982\uff0c\u7ed9\u5b9a\u4e09\u89d2\u5f62\uff1a [ [2], [3,4], [6,5,7], [4,1,8,3] ] \u81ea\u9876\u5411\u4e0b\u7684\u6700\u5c0f\u8def\u5f84\u548c\u4e3a 11 \uff08\u5373\uff0c 2 + 3 + 5 + 1 = 11\uff09\u3002 \u8bf4\u660e\uff1a \u5982\u679c\u4f60\u53ef\u4ee5\u53ea\u4f7f\u7528 O(n) O(n) \u7684\u989d\u5916\u7a7a\u95f4\uff08 n n \u4e3a\u4e09\u89d2\u5f62\u7684\u603b\u884c\u6570\uff09\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u90a3\u4e48\u4f60\u7684\u7b97\u6cd5\u4f1a\u5f88\u52a0\u5206\u3002 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u52a8\u6001\u89c4\u5212\uff0c\u4f7f\u7528\u4e09\u89d2\u5f62\u7684\u6700\u540e\u4e00\u884c\u5b58\u653e\u6700\u5c0f\u7684\u548c\uff0c\u4ece\u4e0b\u5f80\u4e0a\u8fdb\u884c\u8ba1\u7b97\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a #define MIN(x, y) (x < y ? x : y) int minimumTotal ( int ** triangle , int triangleSize , int * triangleColSize ) { if ( ! triangleSize ) return 0 ; int * dp1 = triangle [ triangleSize - 1 ], i = 0 , j = 0 ; for ( i = triangleSize - 1 ; i > 0 ; i -- ) for ( j = 0 ; j < triangleColSize [ i - 1 ]; j ++ ) dp1 [ j ] = triangle [ i - 1 ][ j ] + MIN ( dp1 [ j ], dp1 [ j + 1 ]); return dp1 [ 0 ]; }","title":"120. \u4e09\u89d2\u5f62\u6700\u5c0f\u8def\u5f84\u548c"},{"location":"coding/leetcode/120.html#120","text":"\u96be\u5ea6\uff1a \u4e2d\u7b49","title":"120. \u4e09\u89d2\u5f62\u6700\u5c0f\u8def\u5f84\u548c"},{"location":"coding/leetcode/120.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u627e\u51fa\u81ea\u9876\u5411\u4e0b\u7684\u6700\u5c0f\u8def\u5f84\u548c\u3002\u6bcf\u4e00\u6b65\u53ea\u80fd\u79fb\u52a8\u5230\u4e0b\u4e00\u884c\u4e2d\u76f8\u90bb\u7684\u7ed3\u70b9\u4e0a\u3002 \u76f8\u90bb\u7684\u7ed3\u70b9 \u5728\u8fd9\u91cc\u6307\u7684\u662f \u4e0b\u6807 \u4e0e \u4e0a\u4e00\u5c42\u7ed3\u70b9\u4e0b\u6807 \u76f8\u540c\u6216\u8005\u7b49\u4e8e \u4e0a\u4e00\u5c42\u7ed3\u70b9\u4e0b\u6807 + 1 \u7684\u4e24\u4e2a\u7ed3\u70b9\u3002 \u4f8b\u5982\uff0c\u7ed9\u5b9a\u4e09\u89d2\u5f62\uff1a [ [2], [3,4], [6,5,7], [4,1,8,3] ] \u81ea\u9876\u5411\u4e0b\u7684\u6700\u5c0f\u8def\u5f84\u548c\u4e3a 11 \uff08\u5373\uff0c 2 + 3 + 5 + 1 = 11\uff09\u3002 \u8bf4\u660e\uff1a \u5982\u679c\u4f60\u53ef\u4ee5\u53ea\u4f7f\u7528 O(n) O(n) \u7684\u989d\u5916\u7a7a\u95f4\uff08 n n \u4e3a\u4e09\u89d2\u5f62\u7684\u603b\u884c\u6570\uff09\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u90a3\u4e48\u4f60\u7684\u7b97\u6cd5\u4f1a\u5f88\u52a0\u5206\u3002 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/120.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u52a8\u6001\u89c4\u5212\uff0c\u4f7f\u7528\u4e09\u89d2\u5f62\u7684\u6700\u540e\u4e00\u884c\u5b58\u653e\u6700\u5c0f\u7684\u548c\uff0c\u4ece\u4e0b\u5f80\u4e0a\u8fdb\u884c\u8ba1\u7b97\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a #define MIN(x, y) (x < y ? x : y) int minimumTotal ( int ** triangle , int triangleSize , int * triangleColSize ) { if ( ! triangleSize ) return 0 ; int * dp1 = triangle [ triangleSize - 1 ], i = 0 , j = 0 ; for ( i = triangleSize - 1 ; i > 0 ; i -- ) for ( j = 0 ; j < triangleColSize [ i - 1 ]; j ++ ) dp1 [ j ] = triangle [ i - 1 ][ j ] + MIN ( dp1 [ j ], dp1 [ j + 1 ]); return dp1 [ 0 ]; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/121.html","text":"121. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5b83\u7684\u7b2c i \u4e2a\u5143\u7d20\u662f\u4e00\u652f\u7ed9\u5b9a\u80a1\u7968\u7b2c i \u5929\u7684\u4ef7\u683c\u3002 \u5982\u679c\u4f60\u6700\u591a\u53ea\u5141\u8bb8\u5b8c\u6210\u4e00\u7b14\u4ea4\u6613\uff08\u5373\u4e70\u5165\u548c\u5356\u51fa\u4e00\u652f\u80a1\u7968\u4e00\u6b21\uff09\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u8ba1\u7b97\u4f60\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\u3002 \u6ce8\u610f\uff1a\u4f60\u4e0d\u80fd\u5728\u4e70\u5165\u80a1\u7968\u524d\u5356\u51fa\u80a1\u7968\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: [7,1,5,3,6,4] \u8f93\u51fa: 5 \u89e3\u91ca: \u5728\u7b2c 2 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 1\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 5 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 6\uff09\u7684\u65f6\u5019\u5356\u51fa\uff0c\u6700\u5927\u5229\u6da6 = 6-1 = 5 \u3002 \u6ce8\u610f\u5229\u6da6\u4e0d\u80fd\u662f 7-1 = 6, \u56e0\u4e3a\u5356\u51fa\u4ef7\u683c\u9700\u8981\u5927\u4e8e\u4e70\u5165\u4ef7\u683c\uff1b\u540c\u65f6\uff0c\u4f60\u4e0d\u80fd\u5728\u4e70\u5165\u524d\u5356\u51fa\u80a1\u7968\u3002 \u793a\u4f8b 2\uff1a \u8f93\u5165: [7,6,4,3,1] \u8f93\u51fa: 0 \u89e3\u91ca: \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b, \u6ca1\u6709\u4ea4\u6613\u5b8c\u6210, \u6240\u4ee5\u6700\u5927\u5229\u6da6\u4e3a 0\u3002 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u627e\u51fa\u76f8\u5dee\u6700\u5927\u7684\u6ee1\u8db3 a_i < a_j a_i < a_j \u4e14 i < j i < j \u7684\u4e24\u4e2a\u6570\u5373\u53ef\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a int maxProfit ( int * prices , int pricesSize ){ int max = 0 , i = pricesSize - 1 , value = 0 , profit = 0 ; for (; i >= 0 ; i -- ) { if ( prices [ i ] > value ) value = prices [ i ]; else profit = value - prices [ i ]; max = max > profit ? max : profit ; } return max ; }","title":"121. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a"},{"location":"coding/leetcode/121.html#121","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"121. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a"},{"location":"coding/leetcode/121.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5b83\u7684\u7b2c i \u4e2a\u5143\u7d20\u662f\u4e00\u652f\u7ed9\u5b9a\u80a1\u7968\u7b2c i \u5929\u7684\u4ef7\u683c\u3002 \u5982\u679c\u4f60\u6700\u591a\u53ea\u5141\u8bb8\u5b8c\u6210\u4e00\u7b14\u4ea4\u6613\uff08\u5373\u4e70\u5165\u548c\u5356\u51fa\u4e00\u652f\u80a1\u7968\u4e00\u6b21\uff09\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u8ba1\u7b97\u4f60\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\u3002 \u6ce8\u610f\uff1a\u4f60\u4e0d\u80fd\u5728\u4e70\u5165\u80a1\u7968\u524d\u5356\u51fa\u80a1\u7968\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: [7,1,5,3,6,4] \u8f93\u51fa: 5 \u89e3\u91ca: \u5728\u7b2c 2 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 1\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 5 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 6\uff09\u7684\u65f6\u5019\u5356\u51fa\uff0c\u6700\u5927\u5229\u6da6 = 6-1 = 5 \u3002 \u6ce8\u610f\u5229\u6da6\u4e0d\u80fd\u662f 7-1 = 6, \u56e0\u4e3a\u5356\u51fa\u4ef7\u683c\u9700\u8981\u5927\u4e8e\u4e70\u5165\u4ef7\u683c\uff1b\u540c\u65f6\uff0c\u4f60\u4e0d\u80fd\u5728\u4e70\u5165\u524d\u5356\u51fa\u80a1\u7968\u3002 \u793a\u4f8b 2\uff1a \u8f93\u5165: [7,6,4,3,1] \u8f93\u51fa: 0 \u89e3\u91ca: \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b, \u6ca1\u6709\u4ea4\u6613\u5b8c\u6210, \u6240\u4ee5\u6700\u5927\u5229\u6da6\u4e3a 0\u3002 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/121.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u627e\u51fa\u76f8\u5dee\u6700\u5927\u7684\u6ee1\u8db3 a_i < a_j a_i < a_j \u4e14 i < j i < j \u7684\u4e24\u4e2a\u6570\u5373\u53ef\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a int maxProfit ( int * prices , int pricesSize ){ int max = 0 , i = pricesSize - 1 , value = 0 , profit = 0 ; for (; i >= 0 ; i -- ) { if ( prices [ i ] > value ) value = prices [ i ]; else profit = value - prices [ i ]; max = max > profit ? max : profit ; } return max ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/122.html","text":"122. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5b83\u7684\u7b2c i \u4e2a\u5143\u7d20\u662f\u4e00\u652f\u7ed9\u5b9a\u80a1\u7968\u7b2c i \u5929\u7684\u4ef7\u683c\u3002 \u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u8ba1\u7b97\u4f60\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\u3002\u4f60\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5730\u5b8c\u6210\u66f4\u591a\u7684\u4ea4\u6613\uff08\u591a\u6b21\u4e70\u5356\u4e00\u652f\u80a1\u7968\uff09\u3002 \u6ce8\u610f\uff1a\u4f60\u4e0d\u80fd\u540c\u65f6\u53c2\u4e0e\u591a\u7b14\u4ea4\u6613\uff08\u4f60\u5fc5\u987b\u5728\u518d\u6b21\u8d2d\u4e70\u524d\u51fa\u552e\u6389\u4e4b\u524d\u7684\u80a1\u7968\uff09\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: [7,1,5,3,6,4] \u8f93\u51fa: 7 \u89e3\u91ca: \u5728\u7b2c 2 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 1\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 3 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 5\uff09\u7684\u65f6\u5019\u5356\u51fa, \u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 5-1 = 4 \u3002 \u968f\u540e\uff0c\u5728\u7b2c 4 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 3\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 5 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 6\uff09\u7684\u65f6\u5019\u5356\u51fa, \u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 6-3 = 3 \u3002 \u793a\u4f8b 2\uff1a \u8f93\u5165: [1,2,3,4,5] \u8f93\u51fa: 4 \u89e3\u91ca: \u5728\u7b2c 1 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 1\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 5 \u5929 \uff08\u80a1\u7968\u4ef7\u683c = 5\uff09\u7684\u65f6\u5019\u5356\u51fa, \u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 5-1 = 4 \u3002 \u6ce8\u610f\u4f60\u4e0d\u80fd\u5728\u7b2c 1 \u5929\u548c\u7b2c 2 \u5929\u63a5\u8fde\u8d2d\u4e70\u80a1\u7968\uff0c\u4e4b\u540e\u518d\u5c06\u5b83\u4eec\u5356\u51fa\u3002 \u56e0\u4e3a\u8fd9\u6837\u5c5e\u4e8e\u540c\u65f6\u53c2\u4e0e\u4e86\u591a\u7b14\u4ea4\u6613\uff0c\u4f60\u5fc5\u987b\u5728\u518d\u6b21\u8d2d\u4e70\u524d\u51fa\u552e\u6389\u4e4b\u524d\u7684\u80a1\u7968\u3002 \u793a\u4f8b 3\uff1a \u8f93\u5165: [7,6,4,3,1] \u8f93\u51fa: 0 \u89e3\u91ca: \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b, \u6ca1\u6709\u4ea4\u6613\u5b8c\u6210, \u6240\u4ee5\u6700\u5927\u5229\u6da6\u4e3a 0\u3002 \u63d0\u793a\uff1a 1 <= prices.length <= 3 * 10 ^ 4 0 <= prices[i] <= 10 ^ 4 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u5f53\u6570\u7ec4\u957f\u5ea6\u4e3a1\u65f6\uff0c\u4e0d\u80fd\u83b7\u53d6\u4efb\u4f55\u5229\u6da6\uff0c\u8fd4\u56de 0 \uff1b \u4ece\u6570\u7ec4\u672b\u5c3e\u5f00\u59cb\u641c\u7d22\u7b2c\u4e00\u4e2a\u80fd\u76c8\u5229\u7684\u70b9\uff0c\u5219\u6700\u5927\u5229\u6da6\u4e3a\u672c\u6b21\u76c8\u5229\u4e0e\u4e4b\u524d\u6700\u5927\u76c8\u5229\u4e4b\u548c\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a int maxProfit ( int * prices , int pricesSize ){ if ( pricesSize < 2 ) return 0 ; int * cur = prices + pricesSize - 1 , currentVal = * cur , len = pricesSize ; while ( cur > prices ) { if ( * cur < * ( cur - 1 )) break ; len -- ; cur -- ; } return ( currentVal - * cur ) + maxProfit ( prices , len - 1 ); }","title":"122. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II"},{"location":"coding/leetcode/122.html#122-ii","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"122. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II"},{"location":"coding/leetcode/122.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5b83\u7684\u7b2c i \u4e2a\u5143\u7d20\u662f\u4e00\u652f\u7ed9\u5b9a\u80a1\u7968\u7b2c i \u5929\u7684\u4ef7\u683c\u3002 \u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u8ba1\u7b97\u4f60\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\u3002\u4f60\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5730\u5b8c\u6210\u66f4\u591a\u7684\u4ea4\u6613\uff08\u591a\u6b21\u4e70\u5356\u4e00\u652f\u80a1\u7968\uff09\u3002 \u6ce8\u610f\uff1a\u4f60\u4e0d\u80fd\u540c\u65f6\u53c2\u4e0e\u591a\u7b14\u4ea4\u6613\uff08\u4f60\u5fc5\u987b\u5728\u518d\u6b21\u8d2d\u4e70\u524d\u51fa\u552e\u6389\u4e4b\u524d\u7684\u80a1\u7968\uff09\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: [7,1,5,3,6,4] \u8f93\u51fa: 7 \u89e3\u91ca: \u5728\u7b2c 2 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 1\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 3 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 5\uff09\u7684\u65f6\u5019\u5356\u51fa, \u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 5-1 = 4 \u3002 \u968f\u540e\uff0c\u5728\u7b2c 4 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 3\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 5 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 6\uff09\u7684\u65f6\u5019\u5356\u51fa, \u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 6-3 = 3 \u3002 \u793a\u4f8b 2\uff1a \u8f93\u5165: [1,2,3,4,5] \u8f93\u51fa: 4 \u89e3\u91ca: \u5728\u7b2c 1 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 1\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 5 \u5929 \uff08\u80a1\u7968\u4ef7\u683c = 5\uff09\u7684\u65f6\u5019\u5356\u51fa, \u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 5-1 = 4 \u3002 \u6ce8\u610f\u4f60\u4e0d\u80fd\u5728\u7b2c 1 \u5929\u548c\u7b2c 2 \u5929\u63a5\u8fde\u8d2d\u4e70\u80a1\u7968\uff0c\u4e4b\u540e\u518d\u5c06\u5b83\u4eec\u5356\u51fa\u3002 \u56e0\u4e3a\u8fd9\u6837\u5c5e\u4e8e\u540c\u65f6\u53c2\u4e0e\u4e86\u591a\u7b14\u4ea4\u6613\uff0c\u4f60\u5fc5\u987b\u5728\u518d\u6b21\u8d2d\u4e70\u524d\u51fa\u552e\u6389\u4e4b\u524d\u7684\u80a1\u7968\u3002 \u793a\u4f8b 3\uff1a \u8f93\u5165: [7,6,4,3,1] \u8f93\u51fa: 0 \u89e3\u91ca: \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b, \u6ca1\u6709\u4ea4\u6613\u5b8c\u6210, \u6240\u4ee5\u6700\u5927\u5229\u6da6\u4e3a 0\u3002 \u63d0\u793a\uff1a 1 <= prices.length <= 3 * 10 ^ 4 0 <= prices[i] <= 10 ^ 4 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/122.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u5f53\u6570\u7ec4\u957f\u5ea6\u4e3a1\u65f6\uff0c\u4e0d\u80fd\u83b7\u53d6\u4efb\u4f55\u5229\u6da6\uff0c\u8fd4\u56de 0 \uff1b \u4ece\u6570\u7ec4\u672b\u5c3e\u5f00\u59cb\u641c\u7d22\u7b2c\u4e00\u4e2a\u80fd\u76c8\u5229\u7684\u70b9\uff0c\u5219\u6700\u5927\u5229\u6da6\u4e3a\u672c\u6b21\u76c8\u5229\u4e0e\u4e4b\u524d\u6700\u5927\u76c8\u5229\u4e4b\u548c\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a int maxProfit ( int * prices , int pricesSize ){ if ( pricesSize < 2 ) return 0 ; int * cur = prices + pricesSize - 1 , currentVal = * cur , len = pricesSize ; while ( cur > prices ) { if ( * cur < * ( cur - 1 )) break ; len -- ; cur -- ; } return ( currentVal - * cur ) + maxProfit ( prices , len - 1 ); }","title":"\u9898\u89e3"},{"location":"coding/leetcode/125.html","text":"125. \u9a8c\u8bc1\u56de\u6587\u4e32 \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u9a8c\u8bc1\u5b83\u662f\u5426\u662f\u56de\u6587\u4e32\uff0c\u53ea\u8003\u8651\u5b57\u6bcd\u548c\u6570\u5b57\u5b57\u7b26\uff0c\u53ef\u4ee5\u5ffd\u7565\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u3002 \u8bf4\u660e\uff1a \u672c\u9898\u4e2d\uff0c\u6211\u4eec\u5c06\u7a7a\u5b57\u7b26\u4e32\u5b9a\u4e49\u4e3a\u6709\u6548\u7684\u56de\u6587\u4e32\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: \"A man, a plan, a canal: Panama\" \u8f93\u51fa: true \u793a\u4f8b 2\uff1a \u8f93\u5165: \"race a car\" \u8f93\u51fa: false Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u4f7f\u7528\u53cc\u6307\u9488\u6cd5\u8fdb\u884c\u5904\u7406\uff0c\u9700\u8981\u6ce8\u610f\u5982\u4e0b\u7279\u6b8a\u60c5\u51b5 \u9700\u8981\u5ffd\u7565\u5b57\u7b26\u4e32\u4e2d\u7684\u7b26\u53f7\u800c\u53ea\u8003\u8651\u5b57\u6bcd\u548c\u6570\u5b57 \u5927\u5c0f\u5199\u7684ASCII\u6570\u503c\u76f8\u5dee32\uff0c\u4f46ASCII\u6570\u503c\u76f8\u5dee32\u7684\u4e24\u4e2a\u5b57\u7b26\u4e0d\u4e00\u5b9a\u662f\u5927\u5c0f\u5199\u5173\u7cfb\uff0c\u5982 '0' (48)\u4e0e 'P' (80) \u4ee3\u7801\u5982\u4e0b\uff1a bool isText ( char s ) { return ( s >= 'A' && s <= 'Z' ) || ( s >= 'a' && s <= 'z' ) || ( s >= '0' && s <= '9' ); } bool isSame ( char s1 , char s2 ) { return ( s1 == s2 ) || ( s2 >= 'A' && s1 - s2 == 32 ) || ( s1 >= 'A' && s2 - s1 == 32 ); } bool isPalindrome ( char * s ){ int len = strlen ( s ), head = 0 , tail = len - 1 ; while ( head < len && ! isText ( s [ head ])) head ++ ; while ( tail >= 0 && ! isText ( s [ tail ])) tail -- ; while ( tail > head && head < len && tail >= 0 ) { if ( ! isSame ( s [ head ], s [ tail ])) return false ; head ++ ; tail -- ; while ( ! isText ( s [ head ])) head ++ ; while ( ! isText ( s [ tail ])) tail -- ; } return true ; }","title":"125. \u9a8c\u8bc1\u56de\u6587\u4e32"},{"location":"coding/leetcode/125.html#125","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"125. \u9a8c\u8bc1\u56de\u6587\u4e32"},{"location":"coding/leetcode/125.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u9a8c\u8bc1\u5b83\u662f\u5426\u662f\u56de\u6587\u4e32\uff0c\u53ea\u8003\u8651\u5b57\u6bcd\u548c\u6570\u5b57\u5b57\u7b26\uff0c\u53ef\u4ee5\u5ffd\u7565\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u3002 \u8bf4\u660e\uff1a \u672c\u9898\u4e2d\uff0c\u6211\u4eec\u5c06\u7a7a\u5b57\u7b26\u4e32\u5b9a\u4e49\u4e3a\u6709\u6548\u7684\u56de\u6587\u4e32\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: \"A man, a plan, a canal: Panama\" \u8f93\u51fa: true \u793a\u4f8b 2\uff1a \u8f93\u5165: \"race a car\" \u8f93\u51fa: false Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/125.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u4f7f\u7528\u53cc\u6307\u9488\u6cd5\u8fdb\u884c\u5904\u7406\uff0c\u9700\u8981\u6ce8\u610f\u5982\u4e0b\u7279\u6b8a\u60c5\u51b5 \u9700\u8981\u5ffd\u7565\u5b57\u7b26\u4e32\u4e2d\u7684\u7b26\u53f7\u800c\u53ea\u8003\u8651\u5b57\u6bcd\u548c\u6570\u5b57 \u5927\u5c0f\u5199\u7684ASCII\u6570\u503c\u76f8\u5dee32\uff0c\u4f46ASCII\u6570\u503c\u76f8\u5dee32\u7684\u4e24\u4e2a\u5b57\u7b26\u4e0d\u4e00\u5b9a\u662f\u5927\u5c0f\u5199\u5173\u7cfb\uff0c\u5982 '0' (48)\u4e0e 'P' (80) \u4ee3\u7801\u5982\u4e0b\uff1a bool isText ( char s ) { return ( s >= 'A' && s <= 'Z' ) || ( s >= 'a' && s <= 'z' ) || ( s >= '0' && s <= '9' ); } bool isSame ( char s1 , char s2 ) { return ( s1 == s2 ) || ( s2 >= 'A' && s1 - s2 == 32 ) || ( s1 >= 'A' && s2 - s1 == 32 ); } bool isPalindrome ( char * s ){ int len = strlen ( s ), head = 0 , tail = len - 1 ; while ( head < len && ! isText ( s [ head ])) head ++ ; while ( tail >= 0 && ! isText ( s [ tail ])) tail -- ; while ( tail > head && head < len && tail >= 0 ) { if ( ! isSame ( s [ head ], s [ tail ])) return false ; head ++ ; tail -- ; while ( ! isText ( s [ head ])) head ++ ; while ( ! isText ( s [ tail ])) tail -- ; } return true ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/13.html","text":"13. \u7f57\u9a6c\u6570\u5b57\u8f6c\u6574\u6570 \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7f57\u9a6c\u6570\u5b57\u5305\u542b\u4ee5\u4e0b\u4e03\u79cd\u5b57\u7b26: I \uff0c V \uff0c X \uff0c L \uff0c C \uff0c D \u548c M \u3002 \u5b57\u7b26 \u6570\u503c I 1 V 5 X 10 L 50 C 100 D 500 M 1000 \u4f8b\u5982\uff0c \u7f57\u9a6c\u6570\u5b57 2 \u5199\u505a II \uff0c\u5373\u4e3a\u4e24\u4e2a\u5e76\u5217\u7684 1\u300212 \u5199\u505a XII \uff0c\u5373\u4e3a X + II \u3002 27 \u5199\u505a XXVII , \u5373\u4e3a XX + V + II \u3002 \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u7f57\u9a6c\u6570\u5b57\u4e2d\u5c0f\u7684\u6570\u5b57\u5728\u5927\u7684\u6570\u5b57\u7684\u53f3\u8fb9\u3002\u4f46\u4e5f\u5b58\u5728\u7279\u4f8b\uff0c\u4f8b\u5982 4 \u4e0d\u5199\u505a IIII \uff0c\u800c\u662f IV \u3002\u6570\u5b57 1 \u5728\u6570\u5b57 5 \u7684\u5de6\u8fb9\uff0c\u6240\u8868\u793a\u7684\u6570\u7b49\u4e8e\u5927\u6570 5 \u51cf\u5c0f\u6570 1 \u5f97\u5230\u7684\u6570\u503c 4 \u3002\u540c\u6837\u5730\uff0c\u6570\u5b57 9 \u8868\u793a\u4e3a IX \u3002\u8fd9\u4e2a\u7279\u6b8a\u7684\u89c4\u5219\u53ea\u9002\u7528\u4e8e\u4ee5\u4e0b\u516d\u79cd\u60c5\u51b5\uff1a I \u53ef\u4ee5\u653e\u5728 V (5) \u548c X (10) \u7684\u5de6\u8fb9\uff0c\u6765\u8868\u793a 4 \u548c 9\u3002 X \u53ef\u4ee5\u653e\u5728 L (50) \u548c C (100) \u7684\u5de6\u8fb9\uff0c\u6765\u8868\u793a 40 \u548c 90\u3002 C \u53ef\u4ee5\u653e\u5728 D (500) \u548c M (1000) \u7684\u5de6\u8fb9\uff0c\u6765\u8868\u793a 400 \u548c 900\u3002 \u7ed9\u5b9a\u4e00\u4e2a\u7f57\u9a6c\u6570\u5b57\uff0c\u5c06\u5176\u8f6c\u6362\u6210\u6574\u6570\u3002\u8f93\u5165\u786e\u4fdd\u5728 1 \u5230 3999 \u7684\u8303\u56f4\u5185\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: \"III\" \u8f93\u51fa: 3 \u793a\u4f8b 2\uff1a \u8f93\u5165: \"IV\" \u8f93\u51fa: 4 \u793a\u4f8b 3\uff1a \u8f93\u5165: \"IX\" \u8f93\u51fa: 9 \u793a\u4f8b 4\uff1a \u8f93\u5165: \"LVIII\" \u8f93\u51fa: 58 \u89e3\u91ca: L = 50, V= 5, III = 3. \u793a\u4f8b 5\uff1a \u8f93\u5165: \"MCMXCIV\" \u8f93\u51fa: 1994 \u89e3\u91ca: M = 1000, CM = 900, XC = 90, IV = 4. \u63d0\u793a\uff1a \u9898\u76ee\u6240\u7ed9\u6d4b\u8bd5\u7528\u4f8b\u7686\u7b26\u5408\u7f57\u9a6c\u6570\u5b57\u4e66\u5199\u89c4\u5219\uff0c\u4e0d\u4f1a\u51fa\u73b0\u8de8\u4f4d\u7b49\u60c5\u51b5\u3002 IC \u548c IM \u8fd9\u6837\u7684\u4f8b\u5b50\u5e76\u4e0d\u7b26\u5408\u9898\u76ee\u8981\u6c42\uff0c49 \u5e94\u8be5\u5199\u4f5c XLIX \uff0c999 \u5e94\u8be5\u5199\u4f5c CMXCIX \u3002 \u5173\u4e8e\u7f57\u9a6c\u6570\u5b57\u7684\u8be6\u5c3d\u4e66\u5199\u89c4\u5219\uff0c\u53ef\u4ee5\u53c2\u8003 \u7f57\u9a6c\u6570\u5b57 - Mathematics \u3002 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u9010\u4f4d\u5904\u7406\u5373\u53ef\uff0c\u6ce8\u610f\u5c0f\u7684\u6570\u5b57\u5728\u5927\u7684\u6570\u5b57\u5de6\u8fb9\u7684\u7279\u6b8a\u60c5\u51b5 \u4ee3\u7801\u5982\u4e0b\uff1a int romanToInt ( char * s ){ char * cur = s ; int ret = 0 ; while ( * cur ) { switch ( * cur ) { case 'I' : if ( * ( cur + 1 ) == 'V' || * ( cur + 1 ) == 'X' ) ret -= 1 ; else ret += 1 ; break ; case 'V' : ret += 5 ; break ; case 'X' : if ( * ( cur + 1 ) == 'L' || * ( cur + 1 ) == 'C' ) ret -= 10 ; else ret += 10 ; break ; case 'L' : ret += 50 ; break ; case 'C' : if ( * ( cur + 1 ) == 'D' || * ( cur + 1 ) == 'M' ) ret -= 100 ; else ret += 100 ; break ; case 'M' : ret += 500 ; case 'D' : ret += 500 ; } cur ++ ; } return ret ; }","title":"13. \u7f57\u9a6c\u6570\u5b57\u8f6c\u6574\u6570"},{"location":"coding/leetcode/13.html#13","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"13. \u7f57\u9a6c\u6570\u5b57\u8f6c\u6574\u6570"},{"location":"coding/leetcode/13.html#_1","text":"\u7f57\u9a6c\u6570\u5b57\u5305\u542b\u4ee5\u4e0b\u4e03\u79cd\u5b57\u7b26: I \uff0c V \uff0c X \uff0c L \uff0c C \uff0c D \u548c M \u3002 \u5b57\u7b26 \u6570\u503c I 1 V 5 X 10 L 50 C 100 D 500 M 1000 \u4f8b\u5982\uff0c \u7f57\u9a6c\u6570\u5b57 2 \u5199\u505a II \uff0c\u5373\u4e3a\u4e24\u4e2a\u5e76\u5217\u7684 1\u300212 \u5199\u505a XII \uff0c\u5373\u4e3a X + II \u3002 27 \u5199\u505a XXVII , \u5373\u4e3a XX + V + II \u3002 \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u7f57\u9a6c\u6570\u5b57\u4e2d\u5c0f\u7684\u6570\u5b57\u5728\u5927\u7684\u6570\u5b57\u7684\u53f3\u8fb9\u3002\u4f46\u4e5f\u5b58\u5728\u7279\u4f8b\uff0c\u4f8b\u5982 4 \u4e0d\u5199\u505a IIII \uff0c\u800c\u662f IV \u3002\u6570\u5b57 1 \u5728\u6570\u5b57 5 \u7684\u5de6\u8fb9\uff0c\u6240\u8868\u793a\u7684\u6570\u7b49\u4e8e\u5927\u6570 5 \u51cf\u5c0f\u6570 1 \u5f97\u5230\u7684\u6570\u503c 4 \u3002\u540c\u6837\u5730\uff0c\u6570\u5b57 9 \u8868\u793a\u4e3a IX \u3002\u8fd9\u4e2a\u7279\u6b8a\u7684\u89c4\u5219\u53ea\u9002\u7528\u4e8e\u4ee5\u4e0b\u516d\u79cd\u60c5\u51b5\uff1a I \u53ef\u4ee5\u653e\u5728 V (5) \u548c X (10) \u7684\u5de6\u8fb9\uff0c\u6765\u8868\u793a 4 \u548c 9\u3002 X \u53ef\u4ee5\u653e\u5728 L (50) \u548c C (100) \u7684\u5de6\u8fb9\uff0c\u6765\u8868\u793a 40 \u548c 90\u3002 C \u53ef\u4ee5\u653e\u5728 D (500) \u548c M (1000) \u7684\u5de6\u8fb9\uff0c\u6765\u8868\u793a 400 \u548c 900\u3002 \u7ed9\u5b9a\u4e00\u4e2a\u7f57\u9a6c\u6570\u5b57\uff0c\u5c06\u5176\u8f6c\u6362\u6210\u6574\u6570\u3002\u8f93\u5165\u786e\u4fdd\u5728 1 \u5230 3999 \u7684\u8303\u56f4\u5185\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: \"III\" \u8f93\u51fa: 3 \u793a\u4f8b 2\uff1a \u8f93\u5165: \"IV\" \u8f93\u51fa: 4 \u793a\u4f8b 3\uff1a \u8f93\u5165: \"IX\" \u8f93\u51fa: 9 \u793a\u4f8b 4\uff1a \u8f93\u5165: \"LVIII\" \u8f93\u51fa: 58 \u89e3\u91ca: L = 50, V= 5, III = 3. \u793a\u4f8b 5\uff1a \u8f93\u5165: \"MCMXCIV\" \u8f93\u51fa: 1994 \u89e3\u91ca: M = 1000, CM = 900, XC = 90, IV = 4. \u63d0\u793a\uff1a \u9898\u76ee\u6240\u7ed9\u6d4b\u8bd5\u7528\u4f8b\u7686\u7b26\u5408\u7f57\u9a6c\u6570\u5b57\u4e66\u5199\u89c4\u5219\uff0c\u4e0d\u4f1a\u51fa\u73b0\u8de8\u4f4d\u7b49\u60c5\u51b5\u3002 IC \u548c IM \u8fd9\u6837\u7684\u4f8b\u5b50\u5e76\u4e0d\u7b26\u5408\u9898\u76ee\u8981\u6c42\uff0c49 \u5e94\u8be5\u5199\u4f5c XLIX \uff0c999 \u5e94\u8be5\u5199\u4f5c CMXCIX \u3002 \u5173\u4e8e\u7f57\u9a6c\u6570\u5b57\u7684\u8be6\u5c3d\u4e66\u5199\u89c4\u5219\uff0c\u53ef\u4ee5\u53c2\u8003 \u7f57\u9a6c\u6570\u5b57 - Mathematics \u3002 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/13.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u9010\u4f4d\u5904\u7406\u5373\u53ef\uff0c\u6ce8\u610f\u5c0f\u7684\u6570\u5b57\u5728\u5927\u7684\u6570\u5b57\u5de6\u8fb9\u7684\u7279\u6b8a\u60c5\u51b5 \u4ee3\u7801\u5982\u4e0b\uff1a int romanToInt ( char * s ){ char * cur = s ; int ret = 0 ; while ( * cur ) { switch ( * cur ) { case 'I' : if ( * ( cur + 1 ) == 'V' || * ( cur + 1 ) == 'X' ) ret -= 1 ; else ret += 1 ; break ; case 'V' : ret += 5 ; break ; case 'X' : if ( * ( cur + 1 ) == 'L' || * ( cur + 1 ) == 'C' ) ret -= 10 ; else ret += 10 ; break ; case 'L' : ret += 50 ; break ; case 'C' : if ( * ( cur + 1 ) == 'D' || * ( cur + 1 ) == 'M' ) ret -= 100 ; else ret += 100 ; break ; case 'M' : ret += 500 ; case 'D' : ret += 500 ; } cur ++ ; } return ret ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/136.html","text":"136. \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57 \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u6574\u6570\u6570\u7ec4\uff0c\u9664\u4e86\u67d0\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\u4ee5\u5916\uff0c\u5176\u4f59\u6bcf\u4e2a\u5143\u7d20\u5747\u51fa\u73b0\u4e24\u6b21\u3002\u627e\u51fa\u90a3\u4e2a\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u5143\u7d20\u3002 \u8bf4\u660e\uff1a \u4f60\u7684\u7b97\u6cd5\u5e94\u8be5\u5177\u6709\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u3002 \u4f60\u53ef\u4ee5\u4e0d\u4f7f\u7528\u989d\u5916\u7a7a\u95f4\u6765\u5b9e\u73b0\u5417\uff1f \u793a\u4f8b 1\uff1a \u8f93\u5165: [2,2,1] \u8f93\u51fa: 1 \u793a\u4f8b 2\uff1a \u8f93\u5165: [4,1,2,1,2] \u8f93\u51fa: 4 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u5f02\u6216\u8fd0\u7b97\u5177\u6709\u5982\u4e0b\u6027\u8d28\uff1a \u4ea4\u6362\u5f8b\uff1a a ^ b = b ^ a \u7ed3\u5408\u5f8b\uff1a (a ^ b) ^ c = a ^ (b ^ c) \u82e5 a ^ b = c \uff0c\u5219 a ^ c = b \u3001 b ^ c = a a ^ a = 0 \u6839\u636e\u6027\u8d281\u30012\uff0c\u5f02\u6216\u8fd0\u7b97\u7684\u7ed3\u679c\u4e0e\u53c2\u4e0e\u8fd0\u7b97\u7684\u6240\u6709\u6570\u503c\u7684\u6392\u5217\u987a\u5e8f\u65e0\u5173\u3002\u6839\u636e\u6027\u8d283\u30014\uff0c\u76f8\u540c\u6574\u6570\u7684\u5f02\u6216\u503c\u4e3a0\uff0c0\u4e0e\u4efb\u4f55\u6570\u5f02\u6216\u4ecd\u4e3a\u8be5\u6570\u3002\u56e0\u6b64\u5c06\u6570\u7ec4\u4e2d\u5404\u5143\u7d20\u8fdb\u884c\u6309\u4f4d\u5f02\u6216\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u5373\u4e3a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u503c\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a int singleNumber ( int * nums , int numsSize ){ int ret = 0 , i = 0 ; for ( i = 0 ; i < numsSize ; i ++ ) ret ^= nums [ i ]; return ret ; }","title":"136. \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57"},{"location":"coding/leetcode/136.html#136","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"136. \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57"},{"location":"coding/leetcode/136.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u6574\u6570\u6570\u7ec4\uff0c\u9664\u4e86\u67d0\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\u4ee5\u5916\uff0c\u5176\u4f59\u6bcf\u4e2a\u5143\u7d20\u5747\u51fa\u73b0\u4e24\u6b21\u3002\u627e\u51fa\u90a3\u4e2a\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u5143\u7d20\u3002 \u8bf4\u660e\uff1a \u4f60\u7684\u7b97\u6cd5\u5e94\u8be5\u5177\u6709\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u3002 \u4f60\u53ef\u4ee5\u4e0d\u4f7f\u7528\u989d\u5916\u7a7a\u95f4\u6765\u5b9e\u73b0\u5417\uff1f \u793a\u4f8b 1\uff1a \u8f93\u5165: [2,2,1] \u8f93\u51fa: 1 \u793a\u4f8b 2\uff1a \u8f93\u5165: [4,1,2,1,2] \u8f93\u51fa: 4 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/136.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u5f02\u6216\u8fd0\u7b97\u5177\u6709\u5982\u4e0b\u6027\u8d28\uff1a \u4ea4\u6362\u5f8b\uff1a a ^ b = b ^ a \u7ed3\u5408\u5f8b\uff1a (a ^ b) ^ c = a ^ (b ^ c) \u82e5 a ^ b = c \uff0c\u5219 a ^ c = b \u3001 b ^ c = a a ^ a = 0 \u6839\u636e\u6027\u8d281\u30012\uff0c\u5f02\u6216\u8fd0\u7b97\u7684\u7ed3\u679c\u4e0e\u53c2\u4e0e\u8fd0\u7b97\u7684\u6240\u6709\u6570\u503c\u7684\u6392\u5217\u987a\u5e8f\u65e0\u5173\u3002\u6839\u636e\u6027\u8d283\u30014\uff0c\u76f8\u540c\u6574\u6570\u7684\u5f02\u6216\u503c\u4e3a0\uff0c0\u4e0e\u4efb\u4f55\u6570\u5f02\u6216\u4ecd\u4e3a\u8be5\u6570\u3002\u56e0\u6b64\u5c06\u6570\u7ec4\u4e2d\u5404\u5143\u7d20\u8fdb\u884c\u6309\u4f4d\u5f02\u6216\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u5373\u4e3a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u503c\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a int singleNumber ( int * nums , int numsSize ){ int ret = 0 , i = 0 ; for ( i = 0 ; i < numsSize ; i ++ ) ret ^= nums [ i ]; return ret ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/14.html","text":"14. \u6700\u957f\u516c\u5171\u524d\u7f00 \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u67e5\u627e\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u3002 \u5982\u679c\u4e0d\u5b58\u5728\u516c\u5171\u524d\u7f00\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 \"\" \u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: [\"flower\",\"flow\",\"flight\"] \u8f93\u51fa: \"fl\" \u793a\u4f8b 2\uff1a \u8f93\u5165: [\"dog\",\"racecar\",\"car\"] \u8f93\u51fa: \"\" \u89e3\u91ca: \u8f93\u5165\u4e0d\u5b58\u5728\u516c\u5171\u524d\u7f00\u3002 \u8bf4\u660e\uff1a \u6240\u6709\u8f93\u5165\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd a-z \u3002 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u5728\u6bd4\u8f83\u524d\u7f00\u65f6\u53ea\u9700\u8981\u5c06\u524d n \u4e2a\u5b57\u7b26\u4e32\u7684\u516c\u5171\u524d\u7f00\u4e0e\u7b2c n+1 \u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a char * compareTwo ( char * str1 , char * str2 ) { char * cur1 = str1 , * cur2 = str2 , * ret = NULL ; int len = 0 ; while ( * cur1 && * cur2 ) { if ( * cur1 != * cur2 ) break ; else len ++ ; cur1 ++ ; cur2 ++ ; } ret = ( char * ) memset ( malloc ( sizeof ( char ) * ( len + 1 )), 0 , sizeof ( char ) * ( len + 1 )); return memcpy ( ret , str1 , sizeof ( char ) * len ); } char * longestCommonPrefix ( char ** strs , int strsSize ){ if ( strsSize == 0 ) return memset ( malloc ( sizeof ( char )), 0 , sizeof ( char )); if ( strsSize == 1 ) return strs [ 0 ]; if ( strsSize == 2 ) return compareTwo ( strs [ 0 ], strs [ 1 ]); int rec_size = ( strsSize + 1 ) >> 1 , i = 0 ; char ** rec = ( char ** ) memset ( malloc ( sizeof ( char * ) * rec_size ), 0 , sizeof ( char * ) * rec_size ); for ( i = 0 ; i < strsSize >> 1 ; i ++ ) rec [ i ] = compareTwo ( strs [ 2 * i ], strs [ 2 * i + 1 ]); if ( strsSize & 1 ) rec [ rec_size - 1 ] = strs [ strsSize - 1 ]; return longestCommonPrefix ( rec , rec_size ); }","title":"14. \u6700\u957f\u516c\u5171\u524d\u7f00"},{"location":"coding/leetcode/14.html#14","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"14. \u6700\u957f\u516c\u5171\u524d\u7f00"},{"location":"coding/leetcode/14.html#_1","text":"\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u67e5\u627e\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u3002 \u5982\u679c\u4e0d\u5b58\u5728\u516c\u5171\u524d\u7f00\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 \"\" \u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: [\"flower\",\"flow\",\"flight\"] \u8f93\u51fa: \"fl\" \u793a\u4f8b 2\uff1a \u8f93\u5165: [\"dog\",\"racecar\",\"car\"] \u8f93\u51fa: \"\" \u89e3\u91ca: \u8f93\u5165\u4e0d\u5b58\u5728\u516c\u5171\u524d\u7f00\u3002 \u8bf4\u660e\uff1a \u6240\u6709\u8f93\u5165\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd a-z \u3002 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/14.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u5728\u6bd4\u8f83\u524d\u7f00\u65f6\u53ea\u9700\u8981\u5c06\u524d n \u4e2a\u5b57\u7b26\u4e32\u7684\u516c\u5171\u524d\u7f00\u4e0e\u7b2c n+1 \u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a char * compareTwo ( char * str1 , char * str2 ) { char * cur1 = str1 , * cur2 = str2 , * ret = NULL ; int len = 0 ; while ( * cur1 && * cur2 ) { if ( * cur1 != * cur2 ) break ; else len ++ ; cur1 ++ ; cur2 ++ ; } ret = ( char * ) memset ( malloc ( sizeof ( char ) * ( len + 1 )), 0 , sizeof ( char ) * ( len + 1 )); return memcpy ( ret , str1 , sizeof ( char ) * len ); } char * longestCommonPrefix ( char ** strs , int strsSize ){ if ( strsSize == 0 ) return memset ( malloc ( sizeof ( char )), 0 , sizeof ( char )); if ( strsSize == 1 ) return strs [ 0 ]; if ( strsSize == 2 ) return compareTwo ( strs [ 0 ], strs [ 1 ]); int rec_size = ( strsSize + 1 ) >> 1 , i = 0 ; char ** rec = ( char ** ) memset ( malloc ( sizeof ( char * ) * rec_size ), 0 , sizeof ( char * ) * rec_size ); for ( i = 0 ; i < strsSize >> 1 ; i ++ ) rec [ i ] = compareTwo ( strs [ 2 * i ], strs [ 2 * i + 1 ]); if ( strsSize & 1 ) rec [ rec_size - 1 ] = strs [ strsSize - 1 ]; return longestCommonPrefix ( rec , rec_size ); }","title":"\u9898\u89e3"},{"location":"coding/leetcode/155.html","text":"155. \u6700\u5c0f\u6808 \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u8bbe\u8ba1\u4e00\u4e2a\u652f\u6301 push \uff0c pop \uff0c top \u64cd\u4f5c\uff0c\u5e76\u80fd\u5728\u5e38\u6570\u65f6\u95f4\u5185\u68c0\u7d22\u5230\u6700\u5c0f\u5143\u7d20\u7684\u6808\u3002 push(x) \u2014\u2014 \u5c06\u5143\u7d20 x \u63a8\u5165\u6808\u4e2d\u3002 pop() \u2014\u2014 \u5220\u9664\u6808\u9876\u7684\u5143\u7d20\u3002 top() \u2014\u2014 \u83b7\u53d6\u6808\u9876\u5143\u7d20\u3002 getMin() \u2014\u2014 \u68c0\u7d22\u6808\u4e2d\u7684\u6700\u5c0f\u5143\u7d20\u3002 \u793a\u4f8b\uff1a \u8f93\u5165\uff1a [\"MinStack\",\"push\",\"push\",\"push\",\"getMin\",\"pop\",\"top\",\"getMin\"] [[],[-2],[0],[-3],[],[],[],[]] \u8f93\u51fa\uff1a [null,null,null,null,-3,null,0,-2] \u89e3\u91ca\uff1a MinStack minStack = new MinStack(); minStack.push(-2); minStack.push(0); minStack.push(-3); minStack.getMin(); --> \u8fd4\u56de -3. minStack.pop(); minStack.top(); --> \u8fd4\u56de 0. minStack.getMin(); --> \u8fd4\u56de -2. \u63d0\u793a\uff1a pop \u3001 top \u548c getMin \u64cd\u4f5c\u603b\u662f\u5728 \u975e\u7a7a\u6808 \u4e0a\u8c03\u7528\u3002 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u4f7f\u7528\u4e24\u4e2a\u57df\u5206\u522b\u5b58\u50a8\u5f53\u524d\u6570\u503c\u548c\u5f53\u524d\u6808\u4e2d\u7684\u6700\u5c0f\u503c\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a #define MIN(x, y) (x < y ? x : y) struct cell { int val ; int curMin ; }; typedef struct { struct cell values [ 10000 ]; int top ; } MinStack ; /** initialize your data structure here. */ MinStack * minStackCreate () { return ( MinStack * ) memset ( malloc ( sizeof ( MinStack )), 0 , sizeof ( MinStack )); } void minStackPush ( MinStack * obj , int x ) { obj -> values [ obj -> top ]. val = x ; obj -> values [ obj -> top ]. curMin = obj -> top > 0 ? MIN ( x , obj -> values [ obj -> top - 1 ]. curMin ) : x ; obj -> top ++ ; } void minStackPop ( MinStack * obj ) { obj -> top -- ; } int minStackTop ( MinStack * obj ) { return obj -> values [ obj -> top - 1 ]. val ; } int minStackGetMin ( MinStack * obj ) { return obj -> values [ obj -> top - 1 ]. curMin ; } void minStackFree ( MinStack * obj ) { free ( obj ); } /** * Your MinStack struct will be instantiated and called as such: * MinStack* obj = minStackCreate(); * minStackPush(obj, x); * minStackPop(obj); * int param_3 = minStackTop(obj); * int param_4 = minStackGetMin(obj); * minStackFree(obj); */","title":"155. \u6700\u5c0f\u6808"},{"location":"coding/leetcode/155.html#155","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"155. \u6700\u5c0f\u6808"},{"location":"coding/leetcode/155.html#_1","text":"\u8bbe\u8ba1\u4e00\u4e2a\u652f\u6301 push \uff0c pop \uff0c top \u64cd\u4f5c\uff0c\u5e76\u80fd\u5728\u5e38\u6570\u65f6\u95f4\u5185\u68c0\u7d22\u5230\u6700\u5c0f\u5143\u7d20\u7684\u6808\u3002 push(x) \u2014\u2014 \u5c06\u5143\u7d20 x \u63a8\u5165\u6808\u4e2d\u3002 pop() \u2014\u2014 \u5220\u9664\u6808\u9876\u7684\u5143\u7d20\u3002 top() \u2014\u2014 \u83b7\u53d6\u6808\u9876\u5143\u7d20\u3002 getMin() \u2014\u2014 \u68c0\u7d22\u6808\u4e2d\u7684\u6700\u5c0f\u5143\u7d20\u3002 \u793a\u4f8b\uff1a \u8f93\u5165\uff1a [\"MinStack\",\"push\",\"push\",\"push\",\"getMin\",\"pop\",\"top\",\"getMin\"] [[],[-2],[0],[-3],[],[],[],[]] \u8f93\u51fa\uff1a [null,null,null,null,-3,null,0,-2] \u89e3\u91ca\uff1a MinStack minStack = new MinStack(); minStack.push(-2); minStack.push(0); minStack.push(-3); minStack.getMin(); --> \u8fd4\u56de -3. minStack.pop(); minStack.top(); --> \u8fd4\u56de 0. minStack.getMin(); --> \u8fd4\u56de -2. \u63d0\u793a\uff1a pop \u3001 top \u548c getMin \u64cd\u4f5c\u603b\u662f\u5728 \u975e\u7a7a\u6808 \u4e0a\u8c03\u7528\u3002 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/155.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u4f7f\u7528\u4e24\u4e2a\u57df\u5206\u522b\u5b58\u50a8\u5f53\u524d\u6570\u503c\u548c\u5f53\u524d\u6808\u4e2d\u7684\u6700\u5c0f\u503c\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a #define MIN(x, y) (x < y ? x : y) struct cell { int val ; int curMin ; }; typedef struct { struct cell values [ 10000 ]; int top ; } MinStack ; /** initialize your data structure here. */ MinStack * minStackCreate () { return ( MinStack * ) memset ( malloc ( sizeof ( MinStack )), 0 , sizeof ( MinStack )); } void minStackPush ( MinStack * obj , int x ) { obj -> values [ obj -> top ]. val = x ; obj -> values [ obj -> top ]. curMin = obj -> top > 0 ? MIN ( x , obj -> values [ obj -> top - 1 ]. curMin ) : x ; obj -> top ++ ; } void minStackPop ( MinStack * obj ) { obj -> top -- ; } int minStackTop ( MinStack * obj ) { return obj -> values [ obj -> top - 1 ]. val ; } int minStackGetMin ( MinStack * obj ) { return obj -> values [ obj -> top - 1 ]. curMin ; } void minStackFree ( MinStack * obj ) { free ( obj ); } /** * Your MinStack struct will be instantiated and called as such: * MinStack* obj = minStackCreate(); * minStackPush(obj, x); * minStackPop(obj); * int param_3 = minStackTop(obj); * int param_4 = minStackGetMin(obj); * minStackFree(obj); */","title":"\u9898\u89e3"},{"location":"coding/leetcode/189.html","text":"189. \u65cb\u8f6c\u6570\u7ec4 \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5411\u53f3\u79fb\u52a8 k \u4e2a\u4f4d\u7f6e\uff0c\u5176\u4e2d k \u662f\u975e\u8d1f\u6570\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: [1,2,3,4,5,6,7] \u548c k = 3 \u8f93\u51fa: [5,6,7,1,2,3,4] \u89e3\u91ca: \u5411\u53f3\u65cb\u8f6c 1 \u6b65: [7,1,2,3,4,5,6] \u5411\u53f3\u65cb\u8f6c 2 \u6b65: [6,7,1,2,3,4,5] \u5411\u53f3\u65cb\u8f6c 3 \u6b65: [5,6,7,1,2,3,4] \u793a\u4f8b 2\uff1a \u8f93\u5165: [-1,-100,3,99] \u548c k = 2 \u8f93\u51fa: [3,99,-1,-100] \u89e3\u91ca: \u5411\u53f3\u65cb\u8f6c 1 \u6b65: [99,-1,-100,3] \u5411\u53f3\u65cb\u8f6c 2 \u6b65: [3,99,-1,-100] \u8bf4\u660e\uff1a \u5c3d\u53ef\u80fd\u60f3\u51fa\u66f4\u591a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u81f3\u5c11\u6709\u4e09\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u8981\u6c42\u4f7f\u7528\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(1) O(1) \u7684 \u539f\u5730 \u7b97\u6cd5\u3002 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u5148\u53cd\u8f6c\u6574\u4e2a\u6570\u7ec4\uff0c\u518d\u4ee5\u7b2c k k \u4e2a\u5143\u7d20\u4e3a\u754c\uff0c\u5206\u522b\u53cd\u8f6c k k \u4e4b\u524d\u7684\u90e8\u5206\u4e0e k k \u53ca k k \u4e4b\u540e\u7684\u90e8\u5206\u5373\u53ef\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a void Reverse ( int * nums , int numsSize ) { int head = 0 , tail = numsSize - 1 , temp = 0 ; while ( tail > head ) { temp = nums [ head ]; nums [ head ] = nums [ tail ]; nums [ tail ] = temp ; tail -- ; head ++ ; } } void rotate ( int * nums , int numsSize , int k ){ if ( numsSize < 2 ) return ; k %= numsSize ; Reverse ( nums , numsSize ); Reverse ( nums , k ); Reverse ( nums + k , numsSize - k ); }","title":"189. \u65cb\u8f6c\u6570\u7ec4"},{"location":"coding/leetcode/189.html#189","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"189. \u65cb\u8f6c\u6570\u7ec4"},{"location":"coding/leetcode/189.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5411\u53f3\u79fb\u52a8 k \u4e2a\u4f4d\u7f6e\uff0c\u5176\u4e2d k \u662f\u975e\u8d1f\u6570\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: [1,2,3,4,5,6,7] \u548c k = 3 \u8f93\u51fa: [5,6,7,1,2,3,4] \u89e3\u91ca: \u5411\u53f3\u65cb\u8f6c 1 \u6b65: [7,1,2,3,4,5,6] \u5411\u53f3\u65cb\u8f6c 2 \u6b65: [6,7,1,2,3,4,5] \u5411\u53f3\u65cb\u8f6c 3 \u6b65: [5,6,7,1,2,3,4] \u793a\u4f8b 2\uff1a \u8f93\u5165: [-1,-100,3,99] \u548c k = 2 \u8f93\u51fa: [3,99,-1,-100] \u89e3\u91ca: \u5411\u53f3\u65cb\u8f6c 1 \u6b65: [99,-1,-100,3] \u5411\u53f3\u65cb\u8f6c 2 \u6b65: [3,99,-1,-100] \u8bf4\u660e\uff1a \u5c3d\u53ef\u80fd\u60f3\u51fa\u66f4\u591a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u81f3\u5c11\u6709\u4e09\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u8981\u6c42\u4f7f\u7528\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(1) O(1) \u7684 \u539f\u5730 \u7b97\u6cd5\u3002 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/189.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u5148\u53cd\u8f6c\u6574\u4e2a\u6570\u7ec4\uff0c\u518d\u4ee5\u7b2c k k \u4e2a\u5143\u7d20\u4e3a\u754c\uff0c\u5206\u522b\u53cd\u8f6c k k \u4e4b\u524d\u7684\u90e8\u5206\u4e0e k k \u53ca k k \u4e4b\u540e\u7684\u90e8\u5206\u5373\u53ef\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a void Reverse ( int * nums , int numsSize ) { int head = 0 , tail = numsSize - 1 , temp = 0 ; while ( tail > head ) { temp = nums [ head ]; nums [ head ] = nums [ tail ]; nums [ tail ] = temp ; tail -- ; head ++ ; } } void rotate ( int * nums , int numsSize , int k ){ if ( numsSize < 2 ) return ; k %= numsSize ; Reverse ( nums , numsSize ); Reverse ( nums , k ); Reverse ( nums + k , numsSize - k ); }","title":"\u9898\u89e3"},{"location":"coding/leetcode/19.html","text":"19. \u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2cN\u4e2a\u8282\u70b9 \u00b6 \u96be\u5ea6\uff1a \u4e2d\u7b49 \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868\uff0c\u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2c n \u4e2a\u8282\u70b9\uff0c\u5e76\u4e14\u8fd4\u56de\u94fe\u8868\u7684\u5934\u7ed3\u70b9\u3002 \u793a\u4f8b\uff1a `` \u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868: 1->2->3->4->5, \u548c n = 2. \u5f53\u5220\u9664\u4e86\u5012\u6570\u7b2c\u4e8c\u4e2a\u8282\u70b9\u540e\uff0c\u94fe\u8868\u53d8\u4e3a 1->2->3->5. `` \u8bf4\u660e\uff1a \u7ed9\u5b9a\u7684 n \u4fdd\u8bc1\u662f\u6709\u6548\u7684\u3002 \u8fdb\u9636\uff1a \u4f60\u80fd\u5c1d\u8bd5\u4f7f\u7528\u4e00\u8d9f\u626b\u63cf\u5b9e\u73b0\u5417\uff1f Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u5148\u627e\u5230\u5012\u6570\u7b2c n \u4e2a\u8282\u70b9\uff0c\u518d\u8fdb\u884c\u5220\u9664 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Definition for singly-linked list. * struct ListNode { * int val; * struct ListNode *next; * }; */ struct ListNode * removeNthFromEnd ( struct ListNode * head , int n ){ struct ListNode * cur = head , * temp = NULL ; int length = 1 , i = 0 ; while ( cur -> next != NULL ) { cur = cur -> next ; length ++ ; } cur = head ; for ( i = 0 ; i < length - n - 1 ; i ++ ) cur = cur -> next ; if ( n == length ) return cur -> next ; if ( cur -> next ) { cur -> next = cur -> next -> next ; return head ; } return NULL ; }","title":"19. \u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2cN\u4e2a\u8282\u70b9"},{"location":"coding/leetcode/19.html#19-n","text":"\u96be\u5ea6\uff1a \u4e2d\u7b49","title":"19. \u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2cN\u4e2a\u8282\u70b9"},{"location":"coding/leetcode/19.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868\uff0c\u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2c n \u4e2a\u8282\u70b9\uff0c\u5e76\u4e14\u8fd4\u56de\u94fe\u8868\u7684\u5934\u7ed3\u70b9\u3002 \u793a\u4f8b\uff1a `` \u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868: 1->2->3->4->5, \u548c n = 2. \u5f53\u5220\u9664\u4e86\u5012\u6570\u7b2c\u4e8c\u4e2a\u8282\u70b9\u540e\uff0c\u94fe\u8868\u53d8\u4e3a 1->2->3->5. `` \u8bf4\u660e\uff1a \u7ed9\u5b9a\u7684 n \u4fdd\u8bc1\u662f\u6709\u6548\u7684\u3002 \u8fdb\u9636\uff1a \u4f60\u80fd\u5c1d\u8bd5\u4f7f\u7528\u4e00\u8d9f\u626b\u63cf\u5b9e\u73b0\u5417\uff1f Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/19.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u5148\u627e\u5230\u5012\u6570\u7b2c n \u4e2a\u8282\u70b9\uff0c\u518d\u8fdb\u884c\u5220\u9664 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Definition for singly-linked list. * struct ListNode { * int val; * struct ListNode *next; * }; */ struct ListNode * removeNthFromEnd ( struct ListNode * head , int n ){ struct ListNode * cur = head , * temp = NULL ; int length = 1 , i = 0 ; while ( cur -> next != NULL ) { cur = cur -> next ; length ++ ; } cur = head ; for ( i = 0 ; i < length - n - 1 ; i ++ ) cur = cur -> next ; if ( n == length ) return cur -> next ; if ( cur -> next ) { cur -> next = cur -> next -> next ; return head ; } return NULL ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/198.html","text":"198. \u6253\u5bb6\u52ab\u820d \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u4f60\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684\u5c0f\u5077\uff0c\u8ba1\u5212\u5077\u7a83\u6cbf\u8857\u7684\u623f\u5c4b\u3002\u6bcf\u95f4\u623f\u5185\u90fd\u85cf\u6709\u4e00\u5b9a\u7684\u73b0\u91d1\uff0c\u5f71\u54cd\u4f60\u5077\u7a83\u7684\u552f\u4e00\u5236\u7ea6\u56e0\u7d20\u5c31\u662f\u76f8\u90bb\u7684\u623f\u5c4b\u88c5\u6709\u76f8\u4e92\u8fde\u901a\u7684\u9632\u76d7\u7cfb\u7edf\uff0c\u5982\u679c\u4e24\u95f4\u76f8\u90bb\u7684\u623f\u5c4b\u5728\u540c\u4e00\u665a\u4e0a\u88ab\u5c0f\u5077\u95ef\u5165\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u62a5\u8b66\u3002 \u7ed9\u5b9a\u4e00\u4e2a\u4ee3\u8868\u6bcf\u4e2a\u623f\u5c4b\u5b58\u653e\u91d1\u989d\u7684\u975e\u8d1f\u6574\u6570\u6570\u7ec4\uff0c\u8ba1\u7b97\u4f60 \u4e0d\u89e6\u52a8\u8b66\u62a5\u88c5\u7f6e\u7684\u60c5\u51b5\u4e0b \uff0c\u4e00\u591c\u4e4b\u5185\u80fd\u591f\u5077\u7a83\u5230\u7684\u6700\u9ad8\u91d1\u989d\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165\uff1a[1,2,3,1] \u8f93\u51fa\uff1a4 \u89e3\u91ca\uff1a\u5077\u7a83 1 \u53f7\u623f\u5c4b (\u91d1\u989d = 1) \uff0c\u7136\u540e\u5077\u7a83 3 \u53f7\u623f\u5c4b (\u91d1\u989d = 3)\u3002 \u5077\u7a83\u5230\u7684\u6700\u9ad8\u91d1\u989d = 1 + 3 = 4 \u3002 \u793a\u4f8b 2\uff1a \u8f93\u5165\uff1a[2,7,9,3,1] \u8f93\u51fa\uff1a12 \u89e3\u91ca\uff1a\u5077\u7a83 1 \u53f7\u623f\u5c4b (\u91d1\u989d = 2), \u5077\u7a83 3 \u53f7\u623f\u5c4b (\u91d1\u989d = 9)\uff0c\u63a5\u7740\u5077\u7a83 5 \u53f7\u623f\u5c4b (\u91d1\u989d = 1)\u3002 \u5077\u7a83\u5230\u7684\u6700\u9ad8\u91d1\u989d = 2 + 9 + 1 = 12 \u3002 \u63d0\u793a\uff1a 0 <= nums.length <= 100 0 <= nums[i] <= 400 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u52a8\u6001\u89c4\u5212\uff0c\u4ee4 f(i) f(i) \u8868\u793a\u524d i i \u4e2a\u623f\u95f4\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u91d1\u989d\uff0c\u5219\u6709\uff1a f(i + 1) = \\max\\left\\{f(i), a_{i + 1} + f(i - 1)\\right\\} f(i + 1) = \\max\\left\\{f(i), a_{i + 1} + f(i - 1)\\right\\} \u4ee3\u7801\u5982\u4e0b\uff1a #define MAX(x, y) (x > y ? x : y) int rob ( int * nums , int numsSize ){ if ( numsSize < 2 ) return numsSize ? * nums : 0 ; int * dp = ( int * ) memset ( malloc ( sizeof ( int ) * ( numsSize )), 0 , sizeof ( int ) * ( numsSize )), i = 0 ; dp [ 0 ] = * nums ; dp [ 1 ] = MAX ( nums [ 0 ], nums [ 1 ]); for ( i = 2 ; i < numsSize ; i ++ ) dp [ i ] = MAX ( dp [ i -2 ] + nums [ i ], dp [ i -1 ]); return dp [ numsSize -1 ]; }","title":"198. \u6253\u5bb6\u52ab\u820d"},{"location":"coding/leetcode/198.html#198","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"198. \u6253\u5bb6\u52ab\u820d"},{"location":"coding/leetcode/198.html#_1","text":"\u4f60\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684\u5c0f\u5077\uff0c\u8ba1\u5212\u5077\u7a83\u6cbf\u8857\u7684\u623f\u5c4b\u3002\u6bcf\u95f4\u623f\u5185\u90fd\u85cf\u6709\u4e00\u5b9a\u7684\u73b0\u91d1\uff0c\u5f71\u54cd\u4f60\u5077\u7a83\u7684\u552f\u4e00\u5236\u7ea6\u56e0\u7d20\u5c31\u662f\u76f8\u90bb\u7684\u623f\u5c4b\u88c5\u6709\u76f8\u4e92\u8fde\u901a\u7684\u9632\u76d7\u7cfb\u7edf\uff0c\u5982\u679c\u4e24\u95f4\u76f8\u90bb\u7684\u623f\u5c4b\u5728\u540c\u4e00\u665a\u4e0a\u88ab\u5c0f\u5077\u95ef\u5165\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u62a5\u8b66\u3002 \u7ed9\u5b9a\u4e00\u4e2a\u4ee3\u8868\u6bcf\u4e2a\u623f\u5c4b\u5b58\u653e\u91d1\u989d\u7684\u975e\u8d1f\u6574\u6570\u6570\u7ec4\uff0c\u8ba1\u7b97\u4f60 \u4e0d\u89e6\u52a8\u8b66\u62a5\u88c5\u7f6e\u7684\u60c5\u51b5\u4e0b \uff0c\u4e00\u591c\u4e4b\u5185\u80fd\u591f\u5077\u7a83\u5230\u7684\u6700\u9ad8\u91d1\u989d\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165\uff1a[1,2,3,1] \u8f93\u51fa\uff1a4 \u89e3\u91ca\uff1a\u5077\u7a83 1 \u53f7\u623f\u5c4b (\u91d1\u989d = 1) \uff0c\u7136\u540e\u5077\u7a83 3 \u53f7\u623f\u5c4b (\u91d1\u989d = 3)\u3002 \u5077\u7a83\u5230\u7684\u6700\u9ad8\u91d1\u989d = 1 + 3 = 4 \u3002 \u793a\u4f8b 2\uff1a \u8f93\u5165\uff1a[2,7,9,3,1] \u8f93\u51fa\uff1a12 \u89e3\u91ca\uff1a\u5077\u7a83 1 \u53f7\u623f\u5c4b (\u91d1\u989d = 2), \u5077\u7a83 3 \u53f7\u623f\u5c4b (\u91d1\u989d = 9)\uff0c\u63a5\u7740\u5077\u7a83 5 \u53f7\u623f\u5c4b (\u91d1\u989d = 1)\u3002 \u5077\u7a83\u5230\u7684\u6700\u9ad8\u91d1\u989d = 2 + 9 + 1 = 12 \u3002 \u63d0\u793a\uff1a 0 <= nums.length <= 100 0 <= nums[i] <= 400 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/198.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u52a8\u6001\u89c4\u5212\uff0c\u4ee4 f(i) f(i) \u8868\u793a\u524d i i \u4e2a\u623f\u95f4\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u91d1\u989d\uff0c\u5219\u6709\uff1a f(i + 1) = \\max\\left\\{f(i), a_{i + 1} + f(i - 1)\\right\\} f(i + 1) = \\max\\left\\{f(i), a_{i + 1} + f(i - 1)\\right\\} \u4ee3\u7801\u5982\u4e0b\uff1a #define MAX(x, y) (x > y ? x : y) int rob ( int * nums , int numsSize ){ if ( numsSize < 2 ) return numsSize ? * nums : 0 ; int * dp = ( int * ) memset ( malloc ( sizeof ( int ) * ( numsSize )), 0 , sizeof ( int ) * ( numsSize )), i = 0 ; dp [ 0 ] = * nums ; dp [ 1 ] = MAX ( nums [ 0 ], nums [ 1 ]); for ( i = 2 ; i < numsSize ; i ++ ) dp [ i ] = MAX ( dp [ i -2 ] + nums [ i ], dp [ i -1 ]); return dp [ numsSize -1 ]; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/204.html","text":"204. \u8ba1\u6570\u8d28\u6570 \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7edf\u8ba1\u6240\u6709\u5c0f\u4e8e\u975e\u8d1f\u6574\u6570 n \u7684\u8d28\u6570\u7684\u6570\u91cf\u3002 \u793a\u4f8b\uff1a \u8f93\u5165: 10 \u8f93\u51fa: 4 \u89e3\u91ca: \u5c0f\u4e8e 10 \u7684\u8d28\u6570\u4e00\u5171\u6709 4 \u4e2a, \u5b83\u4eec\u662f 2, 3, 5, 7 \u3002 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u4ece2\u5f00\u59cb\uff0c\u5728\u6570\u5217 2, 3, \\cdots, n 2, 3, \\cdots, n \u4e2d\u5212\u53bb\u6240\u67092\u7684\u500d\u6570\uff0c\u5269\u4e0b\u7684\u7b2c\u4e00\u4e2a\u6ca1\u6709\u88ab\u5212\u53bb\u7684\u6570\u5b573\u5373\u4e3a\u8d28\u6570\uff0c\u518d\u82b1\u65d7\u6240\u67093\u7684\u500d\u6570\uff0c\u5269\u4e0b\u7684\u7b2c\u4e00\u4e2a\u6ca1\u6709\u88ab\u5212\u53bb\u7684\u6570\u5b575\u5373\u4e3a\u8d28\u6570\u3002\u91cd\u590d\u5982\u4e0a\u64cd\u4f5c\uff0c\u76f4\u5230\u68c0\u67e5\u5b8c\u6240\u6709\u5c0f\u4e8e\u7b49\u4e8e \\sqrt n \\sqrt n \u7684\u6574\u6570\uff0c\u5373\u5b8c\u6210\u3002 \u6570\u5b57\u662f\u5426\u5212\u53bb\u7684\u72b6\u6001\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u63a7\u5236\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e00\u4e2a\u7c7b\u578b\u4e2d\u76841\u4f4d\u8868\u793a\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a int countPrimes ( int n ) { unsigned char * map = memset ( malloc ( sizeof ( unsigned char ) * (( n + 1 >> 3 ) + 1 )), 0x55 , sizeof ( unsigned char ) * (( n + 1 >> 3 ) + 1 )); int i = 0 , j , ret = 0 , sq = ( int ) sqrt ( n ), increment = 1 , start = 2 ; * map = 0x51 ; for ( i = 3 ; i <= sq ; i ++ ) if ( ! ( map [ i >> 3 ] & ( unsigned char ) 1 << ( i & 7 ))) for ( j = i * 3 ; j <= n ; j += i << 1 ) map [ j >> 3 ] |= ( unsigned char ) 1 << ( j & 7 ); for ( i = 2 ; i < n ; i ++ ) if ( ! ( map [ i >> 3 ] & ( unsigned char ) 1 << ( i & 7 ))) ret ++ ; return ret ; }","title":"204. \u8ba1\u6570\u8d28\u6570"},{"location":"coding/leetcode/204.html#204","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"204. \u8ba1\u6570\u8d28\u6570"},{"location":"coding/leetcode/204.html#_1","text":"\u7edf\u8ba1\u6240\u6709\u5c0f\u4e8e\u975e\u8d1f\u6574\u6570 n \u7684\u8d28\u6570\u7684\u6570\u91cf\u3002 \u793a\u4f8b\uff1a \u8f93\u5165: 10 \u8f93\u51fa: 4 \u89e3\u91ca: \u5c0f\u4e8e 10 \u7684\u8d28\u6570\u4e00\u5171\u6709 4 \u4e2a, \u5b83\u4eec\u662f 2, 3, 5, 7 \u3002 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/204.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u4ece2\u5f00\u59cb\uff0c\u5728\u6570\u5217 2, 3, \\cdots, n 2, 3, \\cdots, n \u4e2d\u5212\u53bb\u6240\u67092\u7684\u500d\u6570\uff0c\u5269\u4e0b\u7684\u7b2c\u4e00\u4e2a\u6ca1\u6709\u88ab\u5212\u53bb\u7684\u6570\u5b573\u5373\u4e3a\u8d28\u6570\uff0c\u518d\u82b1\u65d7\u6240\u67093\u7684\u500d\u6570\uff0c\u5269\u4e0b\u7684\u7b2c\u4e00\u4e2a\u6ca1\u6709\u88ab\u5212\u53bb\u7684\u6570\u5b575\u5373\u4e3a\u8d28\u6570\u3002\u91cd\u590d\u5982\u4e0a\u64cd\u4f5c\uff0c\u76f4\u5230\u68c0\u67e5\u5b8c\u6240\u6709\u5c0f\u4e8e\u7b49\u4e8e \\sqrt n \\sqrt n \u7684\u6574\u6570\uff0c\u5373\u5b8c\u6210\u3002 \u6570\u5b57\u662f\u5426\u5212\u53bb\u7684\u72b6\u6001\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u63a7\u5236\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e00\u4e2a\u7c7b\u578b\u4e2d\u76841\u4f4d\u8868\u793a\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a int countPrimes ( int n ) { unsigned char * map = memset ( malloc ( sizeof ( unsigned char ) * (( n + 1 >> 3 ) + 1 )), 0x55 , sizeof ( unsigned char ) * (( n + 1 >> 3 ) + 1 )); int i = 0 , j , ret = 0 , sq = ( int ) sqrt ( n ), increment = 1 , start = 2 ; * map = 0x51 ; for ( i = 3 ; i <= sq ; i ++ ) if ( ! ( map [ i >> 3 ] & ( unsigned char ) 1 << ( i & 7 ))) for ( j = i * 3 ; j <= n ; j += i << 1 ) map [ j >> 3 ] |= ( unsigned char ) 1 << ( j & 7 ); for ( i = 2 ; i < n ; i ++ ) if ( ! ( map [ i >> 3 ] & ( unsigned char ) 1 << ( i & 7 ))) ret ++ ; return ret ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/206.html","text":"206. \u53cd\u8f6c\u94fe\u8868 \u00b6 \u96be\u5ea6\uff1a \u4e2d\u7b49 \u9898\u76ee \u00b6 \u53cd\u8f6c\u4e00\u4e2a\u5355\u94fe\u8868\u3002 \u793a\u4f8b\uff1a \u8f93\u5165: 1->2->3->4->5->NULL \u8f93\u51fa: 5->4->3->2->1->NULL \u8fdb\u9636\uff1a \u4f60\u53ef\u4ee5\u8fed\u4ee3\u6216\u9012\u5f52\u5730\u53cd\u8f6c\u94fe\u8868\u3002\u4f60\u80fd\u5426\u7528\u4e24\u79cd\u65b9\u6cd5\u89e3\u51b3\u8fd9\u9053\u9898\uff1f Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u53ea\u9700\u8981\u5c06\u94fe\u8868\u7ed3\u6784\u4e2d\u7684\u6240\u6709\u6307\u9488\u53cd\u8f6c\uff0c\u5373\u6307\u5411\u524d\u4e00\u8282\u70b9\u7684\u6307\u9488\u73b0\u5728\u6307\u5411\u540e\u4e00\u8282\u70b9\u3002\u5b9a\u4e49\u4e24\u4e2a\u6307\u9488\u6307\u5411\u9700\u8981\u53cd\u8f6c\u90e8\u5206\u7684\u4e24\u4e2a\u8282\u70b9\uff0c\u5c06\u540e\u4e00\u6307\u9488\u7684 next \u57df\u6307\u5411\u524d\u4e00\u6307\u9488\u3002\u6539\u53cd\u8f6c\u64cd\u4f5c\u7834\u574f\u4e86\u540e\u4e00\u6307\u9488\u539f\u6709\u7684 next \u57df\uff0c\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u6307\u9488\u7528\u4e8e\u5411\u524d\u79fb\u52a8\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Definition for singly-linked list. * struct ListNode { * int val; * struct ListNode *next; * }; */ struct ListNode * reverseList ( struct ListNode * head ){ if ( ! head || ! ( head -> next )) return head ; struct ListNode * cur1 = head , * cur2 = head -> next , * cur3 = cur2 -> next ; head -> next = NULL ; while ( cur3 ) { cur2 -> next = cur1 ; cur1 = cur2 ; cur2 = cur3 ; cur3 = cur3 -> next ; } cur2 -> next = cur1 ; return cur2 ; }","title":"206. \u53cd\u8f6c\u94fe\u8868"},{"location":"coding/leetcode/206.html#206","text":"\u96be\u5ea6\uff1a \u4e2d\u7b49","title":"206. \u53cd\u8f6c\u94fe\u8868"},{"location":"coding/leetcode/206.html#_1","text":"\u53cd\u8f6c\u4e00\u4e2a\u5355\u94fe\u8868\u3002 \u793a\u4f8b\uff1a \u8f93\u5165: 1->2->3->4->5->NULL \u8f93\u51fa: 5->4->3->2->1->NULL \u8fdb\u9636\uff1a \u4f60\u53ef\u4ee5\u8fed\u4ee3\u6216\u9012\u5f52\u5730\u53cd\u8f6c\u94fe\u8868\u3002\u4f60\u80fd\u5426\u7528\u4e24\u79cd\u65b9\u6cd5\u89e3\u51b3\u8fd9\u9053\u9898\uff1f Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/206.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u53ea\u9700\u8981\u5c06\u94fe\u8868\u7ed3\u6784\u4e2d\u7684\u6240\u6709\u6307\u9488\u53cd\u8f6c\uff0c\u5373\u6307\u5411\u524d\u4e00\u8282\u70b9\u7684\u6307\u9488\u73b0\u5728\u6307\u5411\u540e\u4e00\u8282\u70b9\u3002\u5b9a\u4e49\u4e24\u4e2a\u6307\u9488\u6307\u5411\u9700\u8981\u53cd\u8f6c\u90e8\u5206\u7684\u4e24\u4e2a\u8282\u70b9\uff0c\u5c06\u540e\u4e00\u6307\u9488\u7684 next \u57df\u6307\u5411\u524d\u4e00\u6307\u9488\u3002\u6539\u53cd\u8f6c\u64cd\u4f5c\u7834\u574f\u4e86\u540e\u4e00\u6307\u9488\u539f\u6709\u7684 next \u57df\uff0c\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u6307\u9488\u7528\u4e8e\u5411\u524d\u79fb\u52a8\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Definition for singly-linked list. * struct ListNode { * int val; * struct ListNode *next; * }; */ struct ListNode * reverseList ( struct ListNode * head ){ if ( ! head || ! ( head -> next )) return head ; struct ListNode * cur1 = head , * cur2 = head -> next , * cur3 = cur2 -> next ; head -> next = NULL ; while ( cur3 ) { cur2 -> next = cur1 ; cur1 = cur2 ; cur2 = cur3 ; cur3 = cur3 -> next ; } cur2 -> next = cur1 ; return cur2 ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/21.html","text":"21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868 \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u5c06\u4e24\u4e2a\u5347\u5e8f\u94fe\u8868\u5408\u5e76\u4e3a\u4e00\u4e2a\u65b0\u7684 \u5347\u5e8f \u94fe\u8868\u5e76\u8fd4\u56de\u3002\u65b0\u94fe\u8868\u662f\u901a\u8fc7\u62fc\u63a5\u7ed9\u5b9a\u7684\u4e24\u4e2a\u94fe\u8868\u7684\u6240\u6709\u8282\u70b9\u7ec4\u6210\u7684\u3002 \u793a\u4f8b\uff1a \u8f93\u5165\uff1a1->2->4, 1->3->4 \u8f93\u51fa\uff1a1->1->2->3->4->4 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u6bd4\u8f83\u4e24\u4e2a\u94fe\u8868\u7684\u5934\u8282\u70b9\uff0c\u5c06\u66f4\u5c0f\u7684\u8282\u70b9\u5e76\u5165\u7ed3\u679c\u94fe\u8868\u4e2d\uff0c\u540c\u65f6\u94fe\u8868\u5934\u540e\u79fb\uff0c\u9012\u5f52\u5904\u7406\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Definition for singly-linked list. * struct ListNode { * int val; * struct ListNode *next; * }; */ struct ListNode * mergeTwoLists ( struct ListNode * l1 , struct ListNode * l2 ){ if ( ! l1 ) return l2 ; if ( ! l2 ) return l1 ; if ( l1 -> val < l2 -> val ) { l1 -> next = mergeTwoLists ( l1 -> next , l2 ); return l1 ; } else { l2 -> next = mergeTwoLists ( l1 , l2 -> next ); return l2 ; } }","title":"21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868"},{"location":"coding/leetcode/21.html#21","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868"},{"location":"coding/leetcode/21.html#_1","text":"\u5c06\u4e24\u4e2a\u5347\u5e8f\u94fe\u8868\u5408\u5e76\u4e3a\u4e00\u4e2a\u65b0\u7684 \u5347\u5e8f \u94fe\u8868\u5e76\u8fd4\u56de\u3002\u65b0\u94fe\u8868\u662f\u901a\u8fc7\u62fc\u63a5\u7ed9\u5b9a\u7684\u4e24\u4e2a\u94fe\u8868\u7684\u6240\u6709\u8282\u70b9\u7ec4\u6210\u7684\u3002 \u793a\u4f8b\uff1a \u8f93\u5165\uff1a1->2->4, 1->3->4 \u8f93\u51fa\uff1a1->1->2->3->4->4 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/21.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u6bd4\u8f83\u4e24\u4e2a\u94fe\u8868\u7684\u5934\u8282\u70b9\uff0c\u5c06\u66f4\u5c0f\u7684\u8282\u70b9\u5e76\u5165\u7ed3\u679c\u94fe\u8868\u4e2d\uff0c\u540c\u65f6\u94fe\u8868\u5934\u540e\u79fb\uff0c\u9012\u5f52\u5904\u7406\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Definition for singly-linked list. * struct ListNode { * int val; * struct ListNode *next; * }; */ struct ListNode * mergeTwoLists ( struct ListNode * l1 , struct ListNode * l2 ){ if ( ! l1 ) return l2 ; if ( ! l2 ) return l1 ; if ( l1 -> val < l2 -> val ) { l1 -> next = mergeTwoLists ( l1 -> next , l2 ); return l1 ; } else { l2 -> next = mergeTwoLists ( l1 , l2 -> next ); return l2 ; } }","title":"\u9898\u89e3"},{"location":"coding/leetcode/217.html","text":"217. \u5b58\u5728\u91cd\u590d\u5143\u7d20 \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u91cd\u590d\u5143\u7d20\u3002 \u5982\u679c\u4efb\u610f\u4e00\u503c\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u81f3\u5c11\u4e24\u6b21\uff0c\u51fd\u6570\u8fd4\u56de true \u3002\u5982\u679c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u90fd\u4e0d\u76f8\u540c\uff0c\u5219\u8fd4\u56de false \u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: [1,2,3,1] \u8f93\u51fa: true \u793a\u4f8b 2\uff1a \u8f93\u5165: [1,2,3,4] \u8f93\u51fa: false \u793a\u4f8b 3\uff1a \u8f93\u5165: [1,1,1,3,3,4,3,2,4,2] \u8f93\u51fa: true Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u5c06\u6570\u7ec4\u6392\u5e8f\u540e\u68c0\u67e5\u662f\u5426\u6709\u91cd\u590d\u5143\u7d20\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a int comp ( const void * a , const void * b ) { return * ( int * ) a - * ( int * ) b ; } bool containsDuplicate ( int * nums , int numsSize ){ if ( numsSize < 2 ) return false ; qsort ( nums , numsSize , sizeof ( int ), comp ); int i = 0 ; for ( i = 1 ; i < numsSize ; i ++ ) if ( nums [ i ] == nums [ i - 1 ]) return true ; return false ; }","title":"217. \u5b58\u5728\u91cd\u590d\u5143\u7d20"},{"location":"coding/leetcode/217.html#217","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"217. \u5b58\u5728\u91cd\u590d\u5143\u7d20"},{"location":"coding/leetcode/217.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u91cd\u590d\u5143\u7d20\u3002 \u5982\u679c\u4efb\u610f\u4e00\u503c\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u81f3\u5c11\u4e24\u6b21\uff0c\u51fd\u6570\u8fd4\u56de true \u3002\u5982\u679c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u90fd\u4e0d\u76f8\u540c\uff0c\u5219\u8fd4\u56de false \u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: [1,2,3,1] \u8f93\u51fa: true \u793a\u4f8b 2\uff1a \u8f93\u5165: [1,2,3,4] \u8f93\u51fa: false \u793a\u4f8b 3\uff1a \u8f93\u5165: [1,1,1,3,3,4,3,2,4,2] \u8f93\u51fa: true Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/217.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u5c06\u6570\u7ec4\u6392\u5e8f\u540e\u68c0\u67e5\u662f\u5426\u6709\u91cd\u590d\u5143\u7d20\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a int comp ( const void * a , const void * b ) { return * ( int * ) a - * ( int * ) b ; } bool containsDuplicate ( int * nums , int numsSize ){ if ( numsSize < 2 ) return false ; qsort ( nums , numsSize , sizeof ( int ), comp ); int i = 0 ; for ( i = 1 ; i < numsSize ; i ++ ) if ( nums [ i ] == nums [ i - 1 ]) return true ; return false ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/234.html","text":"234. \u56de\u6587\u94fe\u8868 \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u8bf7\u5224\u65ad\u4e00\u4e2a\u94fe\u8868\u662f\u5426\u4e3a\u56de\u6587\u94fe\u8868\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: 1->2 \u8f93\u51fa: false \u793a\u4f8b 2\uff1a \u8f93\u5165: 1->2->2->1 \u8f93\u51fa: true \u8fdb\u9636\uff1a \u4f60\u80fd\u5426\u7528 O(n) O(n) \u65f6\u95f4\u590d\u6742\u5ea6\u548c O(1) O(1) \u7a7a\u95f4\u590d\u6742\u5ea6\u89e3\u51b3\u6b64\u9898\uff1f Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u53cd\u5e8f\u6784\u5efa\u4e00\u4e2a\u65b0\u7684\u94fe\u8868\uff0c\u6bd4\u8f83\u4e24\u4e2a\u94fe\u8868\u662f\u5426\u76f8\u540c \u4ee3\u7801\u5982\u4e0b\uff1a /** * Definition for singly-linked list. * struct ListNode { * int val; * struct ListNode *next; * }; */ struct ListNode * getNode ( int val , struct ListNode * next ) { struct ListNode * ret = ( struct ListNode * ) malloc ( sizeof ( struct ListNode )); ret -> val = val ; ret -> next = next ; return ret ; } bool isPalindrome ( struct ListNode * head ){ int len = 0 ; struct ListNode * reversed = NULL , * cur1 = head , * cur2 = NULL ; while ( cur1 != NULL ) { reversed = getNode ( cur1 -> val , reversed ); cur1 = cur1 -> next ; len ++ ; } cur1 = head ; cur2 = reversed ; for ( int i = 0 ; i < len / 2 ; i ++ ) { if ( cur1 -> val != cur2 -> val ) return false ; cur1 = cur1 -> next ; cur2 = cur2 -> next ; } return true ; }","title":"234. \u56de\u6587\u94fe\u8868"},{"location":"coding/leetcode/234.html#234","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"234. \u56de\u6587\u94fe\u8868"},{"location":"coding/leetcode/234.html#_1","text":"\u8bf7\u5224\u65ad\u4e00\u4e2a\u94fe\u8868\u662f\u5426\u4e3a\u56de\u6587\u94fe\u8868\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: 1->2 \u8f93\u51fa: false \u793a\u4f8b 2\uff1a \u8f93\u5165: 1->2->2->1 \u8f93\u51fa: true \u8fdb\u9636\uff1a \u4f60\u80fd\u5426\u7528 O(n) O(n) \u65f6\u95f4\u590d\u6742\u5ea6\u548c O(1) O(1) \u7a7a\u95f4\u590d\u6742\u5ea6\u89e3\u51b3\u6b64\u9898\uff1f Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/234.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u53cd\u5e8f\u6784\u5efa\u4e00\u4e2a\u65b0\u7684\u94fe\u8868\uff0c\u6bd4\u8f83\u4e24\u4e2a\u94fe\u8868\u662f\u5426\u76f8\u540c \u4ee3\u7801\u5982\u4e0b\uff1a /** * Definition for singly-linked list. * struct ListNode { * int val; * struct ListNode *next; * }; */ struct ListNode * getNode ( int val , struct ListNode * next ) { struct ListNode * ret = ( struct ListNode * ) malloc ( sizeof ( struct ListNode )); ret -> val = val ; ret -> next = next ; return ret ; } bool isPalindrome ( struct ListNode * head ){ int len = 0 ; struct ListNode * reversed = NULL , * cur1 = head , * cur2 = NULL ; while ( cur1 != NULL ) { reversed = getNode ( cur1 -> val , reversed ); cur1 = cur1 -> next ; len ++ ; } cur1 = head ; cur2 = reversed ; for ( int i = 0 ; i < len / 2 ; i ++ ) { if ( cur1 -> val != cur2 -> val ) return false ; cur1 = cur1 -> next ; cur2 = cur2 -> next ; } return true ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/237.html","text":"237. \u5220\u9664\u94fe\u8868\u4e2d\u7684\u8282\u70b9 \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u4f7f\u5176\u53ef\u4ee5\u5220\u9664\u67d0\u4e2a\u94fe\u8868\u4e2d\u7ed9\u5b9a\u7684\uff08\u975e\u672b\u5c3e\uff09\u8282\u70b9\u3002\u4f20\u5165\u51fd\u6570\u7684\u552f\u4e00\u53c2\u6570\u4e3a \u8981\u88ab\u5220\u9664\u7684\u8282\u70b9 \u3002 \u73b0\u6709\u4e00\u4e2a\u94fe\u8868 -- head = [4,5,1,9]\uff0c\u5b83\u53ef\u4ee5\u8868\u793a\u4e3a: \u793a\u4f8b 1\uff1a \u8f93\u5165\uff1ahead = [4,5,1,9], node = 5 \u8f93\u51fa\uff1a[4,1,9] \u89e3\u91ca\uff1a\u7ed9\u5b9a\u4f60\u94fe\u8868\u4e2d\u503c\u4e3a 5 \u7684\u7b2c\u4e8c\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u5728\u8c03\u7528\u4e86\u4f60\u7684\u51fd\u6570\u4e4b\u540e\uff0c\u8be5\u94fe\u8868\u5e94\u53d8\u4e3a 4 -> 1 -> 9. \u793a\u4f8b 2\uff1a \u8f93\u5165\uff1ahead = [4,5,1,9], node = 1 \u8f93\u51fa\uff1a[4,5,9] \u89e3\u91ca\uff1a\u7ed9\u5b9a\u4f60\u94fe\u8868\u4e2d\u503c\u4e3a 1 \u7684\u7b2c\u4e09\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u5728\u8c03\u7528\u4e86\u4f60\u7684\u51fd\u6570\u4e4b\u540e\uff0c\u8be5\u94fe\u8868\u5e94\u53d8\u4e3a 4 -> 5 -> 9. \u63d0\u793a\uff1a \u94fe\u8868\u81f3\u5c11\u5305\u542b\u4e24\u4e2a\u8282\u70b9\u3002 \u94fe\u8868\u4e2d\u6240\u6709\u8282\u70b9\u7684\u503c\u90fd\u662f\u552f\u4e00\u7684\u3002 \u7ed9\u5b9a\u7684\u8282\u70b9\u4e3a\u975e\u672b\u5c3e\u8282\u70b9\u5e76\u4e14\u4e00\u5b9a\u662f\u94fe\u8868\u4e2d\u7684\u4e00\u4e2a\u6709\u6548\u8282\u70b9\u3002 \u4e0d\u8981\u4ece\u4f60\u7684\u51fd\u6570\u4e2d\u8fd4\u56de\u4efb\u4f55\u7ed3\u679c\u3002 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u5c06\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u503c\u590d\u5236\u5230\u5f53\u524d\u8282\u70b9\uff0c\u7136\u540e\u5220\u53bb\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002\uff08\u5df2\u77e5\u5f53\u524d\u8282\u70b9\u4e00\u5b9a\u4e0d\u662f\u672b\u5c3e\u8282\u70b9\uff09 \u4ee3\u7801\u5982\u4e0b\uff1a void deleteNode ( struct ListNode * node ) { node -> val = node -> next -> val ; node -> next = node -> next -> next ; }","title":"237. \u5220\u9664\u94fe\u8868\u4e2d\u7684\u8282\u70b9"},{"location":"coding/leetcode/237.html#237","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"237. \u5220\u9664\u94fe\u8868\u4e2d\u7684\u8282\u70b9"},{"location":"coding/leetcode/237.html#_1","text":"\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u4f7f\u5176\u53ef\u4ee5\u5220\u9664\u67d0\u4e2a\u94fe\u8868\u4e2d\u7ed9\u5b9a\u7684\uff08\u975e\u672b\u5c3e\uff09\u8282\u70b9\u3002\u4f20\u5165\u51fd\u6570\u7684\u552f\u4e00\u53c2\u6570\u4e3a \u8981\u88ab\u5220\u9664\u7684\u8282\u70b9 \u3002 \u73b0\u6709\u4e00\u4e2a\u94fe\u8868 -- head = [4,5,1,9]\uff0c\u5b83\u53ef\u4ee5\u8868\u793a\u4e3a: \u793a\u4f8b 1\uff1a \u8f93\u5165\uff1ahead = [4,5,1,9], node = 5 \u8f93\u51fa\uff1a[4,1,9] \u89e3\u91ca\uff1a\u7ed9\u5b9a\u4f60\u94fe\u8868\u4e2d\u503c\u4e3a 5 \u7684\u7b2c\u4e8c\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u5728\u8c03\u7528\u4e86\u4f60\u7684\u51fd\u6570\u4e4b\u540e\uff0c\u8be5\u94fe\u8868\u5e94\u53d8\u4e3a 4 -> 1 -> 9. \u793a\u4f8b 2\uff1a \u8f93\u5165\uff1ahead = [4,5,1,9], node = 1 \u8f93\u51fa\uff1a[4,5,9] \u89e3\u91ca\uff1a\u7ed9\u5b9a\u4f60\u94fe\u8868\u4e2d\u503c\u4e3a 1 \u7684\u7b2c\u4e09\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u5728\u8c03\u7528\u4e86\u4f60\u7684\u51fd\u6570\u4e4b\u540e\uff0c\u8be5\u94fe\u8868\u5e94\u53d8\u4e3a 4 -> 5 -> 9. \u63d0\u793a\uff1a \u94fe\u8868\u81f3\u5c11\u5305\u542b\u4e24\u4e2a\u8282\u70b9\u3002 \u94fe\u8868\u4e2d\u6240\u6709\u8282\u70b9\u7684\u503c\u90fd\u662f\u552f\u4e00\u7684\u3002 \u7ed9\u5b9a\u7684\u8282\u70b9\u4e3a\u975e\u672b\u5c3e\u8282\u70b9\u5e76\u4e14\u4e00\u5b9a\u662f\u94fe\u8868\u4e2d\u7684\u4e00\u4e2a\u6709\u6548\u8282\u70b9\u3002 \u4e0d\u8981\u4ece\u4f60\u7684\u51fd\u6570\u4e2d\u8fd4\u56de\u4efb\u4f55\u7ed3\u679c\u3002 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/237.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u5c06\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u503c\u590d\u5236\u5230\u5f53\u524d\u8282\u70b9\uff0c\u7136\u540e\u5220\u53bb\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002\uff08\u5df2\u77e5\u5f53\u524d\u8282\u70b9\u4e00\u5b9a\u4e0d\u662f\u672b\u5c3e\u8282\u70b9\uff09 \u4ee3\u7801\u5982\u4e0b\uff1a void deleteNode ( struct ListNode * node ) { node -> val = node -> next -> val ; node -> next = node -> next -> next ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/24.html","text":"24. \u4e24\u4e24\u4ea4\u6362\u94fe\u8868\u4e2d\u7684\u8282\u70b9 \u00b6 \u96be\u5ea6\uff1a \u4e2d\u7b49 \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868\uff0c\u4e24\u4e24\u4ea4\u6362\u5176\u4e2d\u76f8\u90bb\u7684\u8282\u70b9\uff0c\u5e76\u8fd4\u56de\u4ea4\u6362\u540e\u7684\u94fe\u8868\u3002 \u4f60\u4e0d\u80fd\u53ea\u662f\u5355\u7eaf\u7684\u6539\u53d8\u8282\u70b9\u5185\u90e8\u7684\u503c\uff0c\u800c\u662f\u9700\u8981\u5b9e\u9645\u7684\u8fdb\u884c\u8282\u70b9\u4ea4\u6362\u3002 \u793a\u4f8b\uff1a \u7ed9\u5b9a 1->2->3->4, \u4f60\u5e94\u8be5\u8fd4\u56de 2->1->4->3. Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u5148\u4ea4\u6362\u524d\u4e24\u4e2a\u8282\u70b9\uff0c\u518d\u9012\u5f52\u5904\u7406\u540e\u9762\u7684\u8282\u70b9\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Definition for singly-linked list. * struct ListNode { * int val; * struct ListNode *next; * }; */ struct ListNode * swapPairs ( struct ListNode * head ){ if ( ! head || ! ( head -> next )) return head ; struct ListNode * temp1 = head -> next , * temp2 = temp1 -> next ; temp1 -> next = head ; head -> next = swapPairs ( temp2 ); return temp1 ; }","title":"24. \u4e24\u4e24\u4ea4\u6362\u94fe\u8868\u4e2d\u7684\u8282\u70b9"},{"location":"coding/leetcode/24.html#24","text":"\u96be\u5ea6\uff1a \u4e2d\u7b49","title":"24. \u4e24\u4e24\u4ea4\u6362\u94fe\u8868\u4e2d\u7684\u8282\u70b9"},{"location":"coding/leetcode/24.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868\uff0c\u4e24\u4e24\u4ea4\u6362\u5176\u4e2d\u76f8\u90bb\u7684\u8282\u70b9\uff0c\u5e76\u8fd4\u56de\u4ea4\u6362\u540e\u7684\u94fe\u8868\u3002 \u4f60\u4e0d\u80fd\u53ea\u662f\u5355\u7eaf\u7684\u6539\u53d8\u8282\u70b9\u5185\u90e8\u7684\u503c\uff0c\u800c\u662f\u9700\u8981\u5b9e\u9645\u7684\u8fdb\u884c\u8282\u70b9\u4ea4\u6362\u3002 \u793a\u4f8b\uff1a \u7ed9\u5b9a 1->2->3->4, \u4f60\u5e94\u8be5\u8fd4\u56de 2->1->4->3. Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/24.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u5148\u4ea4\u6362\u524d\u4e24\u4e2a\u8282\u70b9\uff0c\u518d\u9012\u5f52\u5904\u7406\u540e\u9762\u7684\u8282\u70b9\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Definition for singly-linked list. * struct ListNode { * int val; * struct ListNode *next; * }; */ struct ListNode * swapPairs ( struct ListNode * head ){ if ( ! head || ! ( head -> next )) return head ; struct ListNode * temp1 = head -> next , * temp2 = temp1 -> next ; temp1 -> next = head ; head -> next = swapPairs ( temp2 ); return temp1 ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/242.html","text":"242. \u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t \uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u5224\u65ad t \u662f\u5426\u662f s \u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: s = \"anagram\", t = \"nagaram\" \u8f93\u51fa: true \u793a\u4f8b 2\uff1a \u8f93\u5165: s = \"rat\", t = \"car\" \u8f93\u51fa: false \u8bf4\u660e\uff1a \u4f60\u53ef\u4ee5\u5047\u8bbe\u5b57\u7b26\u4e32\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002 \u8fdb\u9636\uff1a \u5982\u679c\u8f93\u5165\u5b57\u7b26\u4e32\u5305\u542b unicode \u5b57\u7b26\u600e\u4e48\u529e\uff1f\u4f60\u80fd\u5426\u8c03\u6574\u4f60\u7684\u89e3\u6cd5\u6765\u5e94\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff1f Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u7edf\u8ba1\u5e76\u6bd4\u8f83\u4e24\u4e2a\u8f93\u5165\u5b57\u7b26\u4e32\u4e2d\u5404\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u5373\u53ef\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a bool isAnagram ( char * s , char * t ){ int hashMap1 [ 26 ] = { 0 }, hashMap2 [ 26 ] = { 0 }; char * cur = s ; while ( * cur ) { hashMap1 [ * cur - 'a' ] ++ ; cur ++ ; } cur = t ; while ( * cur ) { hashMap2 [ * cur - 'a' ] ++ ; cur ++ ; } int i = 0 ; for ( i = 0 ; i < 26 ; i ++ ) if ( hashMap1 [ i ] != hashMap2 [ i ]) return false ; return true ; }","title":"242. \u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd"},{"location":"coding/leetcode/242.html#242","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"242. \u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd"},{"location":"coding/leetcode/242.html#_1","text":"\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t \uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u5224\u65ad t \u662f\u5426\u662f s \u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: s = \"anagram\", t = \"nagaram\" \u8f93\u51fa: true \u793a\u4f8b 2\uff1a \u8f93\u5165: s = \"rat\", t = \"car\" \u8f93\u51fa: false \u8bf4\u660e\uff1a \u4f60\u53ef\u4ee5\u5047\u8bbe\u5b57\u7b26\u4e32\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002 \u8fdb\u9636\uff1a \u5982\u679c\u8f93\u5165\u5b57\u7b26\u4e32\u5305\u542b unicode \u5b57\u7b26\u600e\u4e48\u529e\uff1f\u4f60\u80fd\u5426\u8c03\u6574\u4f60\u7684\u89e3\u6cd5\u6765\u5e94\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff1f Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/242.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u7edf\u8ba1\u5e76\u6bd4\u8f83\u4e24\u4e2a\u8f93\u5165\u5b57\u7b26\u4e32\u4e2d\u5404\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u5373\u53ef\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a bool isAnagram ( char * s , char * t ){ int hashMap1 [ 26 ] = { 0 }, hashMap2 [ 26 ] = { 0 }; char * cur = s ; while ( * cur ) { hashMap1 [ * cur - 'a' ] ++ ; cur ++ ; } cur = t ; while ( * cur ) { hashMap2 [ * cur - 'a' ] ++ ; cur ++ ; } int i = 0 ; for ( i = 0 ; i < 26 ; i ++ ) if ( hashMap1 [ i ] != hashMap2 [ i ]) return false ; return true ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/26.html","text":"26. \u5220\u9664\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879 \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u6392\u5e8f\u6570\u7ec4\uff0c\u4f60\u9700\u8981\u5728 \u539f\u5730 \u5220\u9664\u91cd\u590d\u51fa\u73b0\u7684\u5143\u7d20\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\uff0c\u8fd4\u56de\u79fb\u9664\u540e\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\u3002 \u4e0d\u8981\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b\u5728 \u539f\u5730 \u4fee\u6539\u8f93\u5165\u6570\u7ec4 \u5e76\u5728\u4f7f\u7528 O(1) O(1) \u989d\u5916\u7a7a\u95f4\u7684\u6761\u4ef6\u4e0b\u5b8c\u6210\u3002 \u793a\u4f8b 1\uff1a \u7ed9\u5b9a\u6570\u7ec4 nums = [1,1,2], \u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u65b0\u7684\u957f\u5ea6 2, \u5e76\u4e14\u539f\u6570\u7ec4 nums \u7684\u524d\u4e24\u4e2a\u5143\u7d20\u88ab\u4fee\u6539\u4e3a 1, 2\u3002 \u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002 \u793a\u4f8b 2\uff1a \u7ed9\u5b9a nums = [0,0,1,1,1,2,2,3,3,4], \u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u65b0\u7684\u957f\u5ea6 5, \u5e76\u4e14\u539f\u6570\u7ec4 nums \u7684\u524d\u4e94\u4e2a\u5143\u7d20\u88ab\u4fee\u6539\u4e3a 0, 1, 2, 3, 4\u3002 \u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002 \u8bf4\u660e\uff1a \u4e3a\u4ec0\u4e48\u8fd4\u56de\u6570\u503c\u662f\u6574\u6570\uff0c\u4f46\u8f93\u51fa\u7684\u7b54\u6848\u662f\u6570\u7ec4\u5462? \u8bf7\u6ce8\u610f\uff0c\u8f93\u5165\u6570\u7ec4\u662f\u4ee5 \u300c\u5f15\u7528\u300d \u65b9\u5f0f\u4f20\u9012\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5728\u51fd\u6570\u91cc\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u5bf9\u4e8e\u8c03\u7528\u8005\u662f\u53ef\u89c1\u7684\u3002 \u4f60\u53ef\u4ee5\u60f3\u8c61\u5185\u90e8\u64cd\u4f5c\u5982\u4e0b: // nums \u662f\u4ee5\u201c\u5f15\u7528\u201d\u65b9\u5f0f\u4f20\u9012\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u5bf9\u5b9e\u53c2\u505a\u4efb\u4f55\u62f7\u8d1d int len = removeDuplicates(nums); // \u5728\u51fd\u6570\u91cc\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u5bf9\u4e8e\u8c03\u7528\u8005\u662f\u53ef\u89c1\u7684\u3002 // \u6839\u636e\u4f60\u7684\u51fd\u6570\u8fd4\u56de\u7684\u957f\u5ea6, \u5b83\u4f1a\u6253\u5370\u51fa\u6570\u7ec4\u4e2d\u8be5\u957f\u5ea6\u8303\u56f4\u5185\u7684\u6240\u6709\u5143\u7d20\u3002 for (int i = 0; i < len; i++) { print(nums[i]); } Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u5f53\u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u4e0d\u5b58\u5728\u91cd\u590d\u5143\u7d20\uff1b \u4f7f\u7528\u4e00\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411\u5220\u9664\u91cd\u590d\u503c\u540e\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\uff0c\u53e6\u4e00\u4e2a\u6570\u503c\u8868\u793a\u5220\u53bb\u5143\u7d20\u7684\u4e2a\u6570\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a int removeDuplicates ( int * nums , int numsSize ){ if ( numsSize < 2 ) return numsSize ; int steps = 0 , i = 0 ; while ( i < numsSize - steps - 1 ) { if ( steps ) nums [ i + 1 ] = nums [ i + steps + 1 ]; if ( nums [ i ] == nums [ i + steps + 1 ]) steps ++ ; else i ++ ; } return numsSize - steps ; }","title":"26. \u5220\u9664\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879"},{"location":"coding/leetcode/26.html#26","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"26. \u5220\u9664\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879"},{"location":"coding/leetcode/26.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6392\u5e8f\u6570\u7ec4\uff0c\u4f60\u9700\u8981\u5728 \u539f\u5730 \u5220\u9664\u91cd\u590d\u51fa\u73b0\u7684\u5143\u7d20\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\uff0c\u8fd4\u56de\u79fb\u9664\u540e\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\u3002 \u4e0d\u8981\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b\u5728 \u539f\u5730 \u4fee\u6539\u8f93\u5165\u6570\u7ec4 \u5e76\u5728\u4f7f\u7528 O(1) O(1) \u989d\u5916\u7a7a\u95f4\u7684\u6761\u4ef6\u4e0b\u5b8c\u6210\u3002 \u793a\u4f8b 1\uff1a \u7ed9\u5b9a\u6570\u7ec4 nums = [1,1,2], \u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u65b0\u7684\u957f\u5ea6 2, \u5e76\u4e14\u539f\u6570\u7ec4 nums \u7684\u524d\u4e24\u4e2a\u5143\u7d20\u88ab\u4fee\u6539\u4e3a 1, 2\u3002 \u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002 \u793a\u4f8b 2\uff1a \u7ed9\u5b9a nums = [0,0,1,1,1,2,2,3,3,4], \u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u65b0\u7684\u957f\u5ea6 5, \u5e76\u4e14\u539f\u6570\u7ec4 nums \u7684\u524d\u4e94\u4e2a\u5143\u7d20\u88ab\u4fee\u6539\u4e3a 0, 1, 2, 3, 4\u3002 \u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002 \u8bf4\u660e\uff1a \u4e3a\u4ec0\u4e48\u8fd4\u56de\u6570\u503c\u662f\u6574\u6570\uff0c\u4f46\u8f93\u51fa\u7684\u7b54\u6848\u662f\u6570\u7ec4\u5462? \u8bf7\u6ce8\u610f\uff0c\u8f93\u5165\u6570\u7ec4\u662f\u4ee5 \u300c\u5f15\u7528\u300d \u65b9\u5f0f\u4f20\u9012\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5728\u51fd\u6570\u91cc\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u5bf9\u4e8e\u8c03\u7528\u8005\u662f\u53ef\u89c1\u7684\u3002 \u4f60\u53ef\u4ee5\u60f3\u8c61\u5185\u90e8\u64cd\u4f5c\u5982\u4e0b: // nums \u662f\u4ee5\u201c\u5f15\u7528\u201d\u65b9\u5f0f\u4f20\u9012\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u5bf9\u5b9e\u53c2\u505a\u4efb\u4f55\u62f7\u8d1d int len = removeDuplicates(nums); // \u5728\u51fd\u6570\u91cc\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u5bf9\u4e8e\u8c03\u7528\u8005\u662f\u53ef\u89c1\u7684\u3002 // \u6839\u636e\u4f60\u7684\u51fd\u6570\u8fd4\u56de\u7684\u957f\u5ea6, \u5b83\u4f1a\u6253\u5370\u51fa\u6570\u7ec4\u4e2d\u8be5\u957f\u5ea6\u8303\u56f4\u5185\u7684\u6240\u6709\u5143\u7d20\u3002 for (int i = 0; i < len; i++) { print(nums[i]); } Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/26.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u5f53\u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u4e0d\u5b58\u5728\u91cd\u590d\u5143\u7d20\uff1b \u4f7f\u7528\u4e00\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411\u5220\u9664\u91cd\u590d\u503c\u540e\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\uff0c\u53e6\u4e00\u4e2a\u6570\u503c\u8868\u793a\u5220\u53bb\u5143\u7d20\u7684\u4e2a\u6570\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a int removeDuplicates ( int * nums , int numsSize ){ if ( numsSize < 2 ) return numsSize ; int steps = 0 , i = 0 ; while ( i < numsSize - steps - 1 ) { if ( steps ) nums [ i + 1 ] = nums [ i + steps + 1 ]; if ( nums [ i ] == nums [ i + steps + 1 ]) steps ++ ; else i ++ ; } return numsSize - steps ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/28.html","text":"28. \u5b9e\u73b0 strStr() \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u5b9e\u73b0 strStr() \u51fd\u6570\u3002 \u7ed9\u5b9a\u4e00\u4e2a haystack \u5b57\u7b26\u4e32\u548c\u4e00\u4e2a needle \u5b57\u7b26\u4e32\uff0c\u5728 haystack \u5b57\u7b26\u4e32\u4e2d\u627e\u51fa needle \u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e (\u4ece0\u5f00\u59cb)\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002 \u793a\u4f8b 1: \u8f93\u5165: haystack = \"hello\", needle = \"ll\" \u8f93\u51fa: 2 \u793a\u4f8b 2: \u8f93\u5165: haystack = \"aaaaa\", needle = \"bba\" \u8f93\u51fa: -1 \u8bf4\u660e: \u5f53 needle \u662f\u7a7a\u5b57\u7b26\u4e32\u65f6\uff0c\u6211\u4eec\u5e94\u5f53\u8fd4\u56de\u4ec0\u4e48\u503c\u5462\uff1f\u8fd9\u662f\u4e00\u4e2a\u5728\u9762\u8bd5\u4e2d\u5f88\u597d\u7684\u95ee\u9898\u3002 \u5bf9\u4e8e\u672c\u9898\u800c\u8a00\uff0c\u5f53 needle \u662f\u7a7a\u5b57\u7b26\u4e32\u65f6\u6211\u4eec\u5e94\u5f53\u8fd4\u56de 0 \u3002\u8fd9\u4e0eC\u8bed\u8a00\u7684 strstr() \u4ee5\u53caJava\u7684 indexOf() \u5b9a\u4e49\u76f8\u7b26\u3002 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u66b4\u529b\u6309\u4f4d\u5339\u914d \u4ee3\u7801\u5982\u4e0b\uff1a int strStr ( char * haystack , char * needle ){ int len1 = strlen ( haystack ), len2 = strlen ( needle ), cur1 = 0 , cur2 = 0 , cur3 = 0 , success = 1 ; if ( ! len2 ) return 0 ; if ( len1 < len2 ) return -1 ; do { success = 1 ; if ( haystack [ cur1 ] == needle [ 0 ]) { cur2 = 0 ; cur3 = 0 ; while ( cur2 < len2 && cur3 + cur1 < len1 && success ) { if ( haystack [ cur1 + cur3 ] != needle [ cur2 ]) success = 0 ; cur3 ++ ; cur2 ++ ; } if ( success ) return cur1 ; } cur1 ++ ; } while ( haystack [ cur1 + len2 - 1 ]); return -1 ; }","title":"28. \u5b9e\u73b0 strStr()"},{"location":"coding/leetcode/28.html#28-strstr","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"28. \u5b9e\u73b0 strStr()"},{"location":"coding/leetcode/28.html#_1","text":"\u5b9e\u73b0 strStr() \u51fd\u6570\u3002 \u7ed9\u5b9a\u4e00\u4e2a haystack \u5b57\u7b26\u4e32\u548c\u4e00\u4e2a needle \u5b57\u7b26\u4e32\uff0c\u5728 haystack \u5b57\u7b26\u4e32\u4e2d\u627e\u51fa needle \u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e (\u4ece0\u5f00\u59cb)\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002 \u793a\u4f8b 1: \u8f93\u5165: haystack = \"hello\", needle = \"ll\" \u8f93\u51fa: 2 \u793a\u4f8b 2: \u8f93\u5165: haystack = \"aaaaa\", needle = \"bba\" \u8f93\u51fa: -1 \u8bf4\u660e: \u5f53 needle \u662f\u7a7a\u5b57\u7b26\u4e32\u65f6\uff0c\u6211\u4eec\u5e94\u5f53\u8fd4\u56de\u4ec0\u4e48\u503c\u5462\uff1f\u8fd9\u662f\u4e00\u4e2a\u5728\u9762\u8bd5\u4e2d\u5f88\u597d\u7684\u95ee\u9898\u3002 \u5bf9\u4e8e\u672c\u9898\u800c\u8a00\uff0c\u5f53 needle \u662f\u7a7a\u5b57\u7b26\u4e32\u65f6\u6211\u4eec\u5e94\u5f53\u8fd4\u56de 0 \u3002\u8fd9\u4e0eC\u8bed\u8a00\u7684 strstr() \u4ee5\u53caJava\u7684 indexOf() \u5b9a\u4e49\u76f8\u7b26\u3002 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/28.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u66b4\u529b\u6309\u4f4d\u5339\u914d \u4ee3\u7801\u5982\u4e0b\uff1a int strStr ( char * haystack , char * needle ){ int len1 = strlen ( haystack ), len2 = strlen ( needle ), cur1 = 0 , cur2 = 0 , cur3 = 0 , success = 1 ; if ( ! len2 ) return 0 ; if ( len1 < len2 ) return -1 ; do { success = 1 ; if ( haystack [ cur1 ] == needle [ 0 ]) { cur2 = 0 ; cur3 = 0 ; while ( cur2 < len2 && cur3 + cur1 < len1 && success ) { if ( haystack [ cur1 + cur3 ] != needle [ cur2 ]) success = 0 ; cur3 ++ ; cur2 ++ ; } if ( success ) return cur1 ; } cur1 ++ ; } while ( haystack [ cur1 + len2 - 1 ]); return -1 ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/315.html","text":"315. \u8ba1\u7b97\u53f3\u4fa7\u5c0f\u4e8e\u5f53\u524d\u5143\u7d20\u7684\u4e2a\u6570 \u00b6 \u96be\u5ea6\uff1a \u56f0\u96be \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \uff0c\u6309\u8981\u6c42\u8fd4\u56de\u4e00\u4e2a\u65b0\u6570\u7ec4 counts \u3002\u6570\u7ec4 counts \u6709\u8be5\u6027\u8d28\uff1a counts[i] \u7684\u503c\u662f nums[i] \u53f3\u4fa7\u5c0f\u4e8e nums[i] \u7684\u5143\u7d20\u7684\u6570\u91cf\u3002 \u793a\u4f8b\uff1a \u8f93\u5165\uff1anums = [5,2,6,1] \u8f93\u51fa\uff1a[2,1,1,0] \u89e3\u91ca\uff1a 5 \u7684\u53f3\u4fa7\u6709 2 \u4e2a\u66f4\u5c0f\u7684\u5143\u7d20 (2 \u548c 1) 2 \u7684\u53f3\u4fa7\u4ec5\u6709 1 \u4e2a\u66f4\u5c0f\u7684\u5143\u7d20 (1) 6 \u7684\u53f3\u4fa7\u6709 1 \u4e2a\u66f4\u5c0f\u7684\u5143\u7d20 (1) 1 \u7684\u53f3\u4fa7\u6709 0 \u4e2a\u66f4\u5c0f\u7684\u5143\u7d20 \u63d0\u793a\uff1a 0 <= nums.length <= 10^5 -10^4 <= nums[i] <= 10^4 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u4ece\u540e\u5f80\u524d\u6784\u9020\u4e00\u4e2a\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u5728\u4e8c\u53c9\u67e5\u627e\u6811\u4e2d\u7ef4\u62a4\u6811\u4e2d\u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u6570\u5b57\u7684\u4e2a\u6570\u3002 \u4e8c\u53c9\u6811\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u57df\u7528\u4e8e\u8ba1\u7b97\u5de6\u5b50\u6811\u7684\u5143\u7d20\u603b\u6570\uff0c\u5373\u5f53\u524d\u6811\u4e2d\u6570\u503c\u5c0f\u4e8e\u8be5\u8282\u70b9\u7684\u5143\u7d20\u603b\u6570\u3002\u5b9e\u73b0\u65b9\u6cd5\u662f\u5728\u5de6\u5b50\u6811\u6dfb\u52a0\u5143\u7d20\u540e\u8be5\u57df\u7684\u503c\u589e\u52a01\u3002 \u5728\u8282\u70b9\u7684\u53f3\u5b50\u6811\u6dfb\u52a0\u5143\u7d20\u65f6\uff0c\u610f\u5473\u7740\u5f53\u524d\u8282\u70b9\u548c\u8282\u70b9\u5de6\u5b50\u6811\u4e2d\u7684\u6240\u6709\u8282\u70b9\u90fd\u662f\u7b26\u5408\u53f3\u4fa7\u5c0f\u4e8e\u5f53\u524d\u5143\u7d20\u7684\u8282\u70b9\u3002\u5728\u9012\u5f52\u8fc7\u7a0b\u4e2d\u9700\u8981\u4f20\u9012\u4e00\u4e2a\u7528\u4f5c\u8ba1\u6570\u5668\u7684\u6307\u9488\u53c2\u6570\uff08\u8ba1\u6570\u7684\u6570\u503c\u5373\u4e3a\u6240\u6c42\u7684\u7ed3\u679c\uff09\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Note: The returned array must be malloced, assume caller calls free(). */ struct TreeNode2 { struct TreeNode2 * left ; struct TreeNode2 * right ; int val ; int subs ; }; struct TreeNode2 * insert ( struct TreeNode2 * dest , int src , int * depth ) { if ( dest == NULL ) { struct TreeNode2 * ret = ( struct TreeNode2 * ) malloc ( sizeof ( struct TreeNode2 )); ret -> left = NULL ; ret -> right = NULL ; ret -> val = src ; ret -> subs = 0 ; return ret ; } if ( src > dest -> val ) { * depth += 1 + dest -> subs ; dest -> right = insert ( dest -> right , src , depth ); } else { dest -> subs ++ ; dest -> left = insert ( dest -> left , src , depth ); } return dest ; } int * countSmaller ( int * nums , int numsSize , int * returnSize ) { * returnSize = numsSize ; int * ret = ( int * ) memset ( malloc ( sizeof ( int ) * numsSize ), 0 , sizeof ( int ) * numsSize ), i = 0 ; if ( numsSize <= 1 ) return ret ; struct TreeNode2 * tempTree = NULL ; for ( i = numsSize - 1 ; i >= 0 ; i -- ) tempTree = insert ( tempTree , nums [ i ], ret + i ); return ret ; }","title":"315. \u8ba1\u7b97\u53f3\u4fa7\u5c0f\u4e8e\u5f53\u524d\u5143\u7d20\u7684\u4e2a\u6570"},{"location":"coding/leetcode/315.html#315","text":"\u96be\u5ea6\uff1a \u56f0\u96be","title":"315. \u8ba1\u7b97\u53f3\u4fa7\u5c0f\u4e8e\u5f53\u524d\u5143\u7d20\u7684\u4e2a\u6570"},{"location":"coding/leetcode/315.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \uff0c\u6309\u8981\u6c42\u8fd4\u56de\u4e00\u4e2a\u65b0\u6570\u7ec4 counts \u3002\u6570\u7ec4 counts \u6709\u8be5\u6027\u8d28\uff1a counts[i] \u7684\u503c\u662f nums[i] \u53f3\u4fa7\u5c0f\u4e8e nums[i] \u7684\u5143\u7d20\u7684\u6570\u91cf\u3002 \u793a\u4f8b\uff1a \u8f93\u5165\uff1anums = [5,2,6,1] \u8f93\u51fa\uff1a[2,1,1,0] \u89e3\u91ca\uff1a 5 \u7684\u53f3\u4fa7\u6709 2 \u4e2a\u66f4\u5c0f\u7684\u5143\u7d20 (2 \u548c 1) 2 \u7684\u53f3\u4fa7\u4ec5\u6709 1 \u4e2a\u66f4\u5c0f\u7684\u5143\u7d20 (1) 6 \u7684\u53f3\u4fa7\u6709 1 \u4e2a\u66f4\u5c0f\u7684\u5143\u7d20 (1) 1 \u7684\u53f3\u4fa7\u6709 0 \u4e2a\u66f4\u5c0f\u7684\u5143\u7d20 \u63d0\u793a\uff1a 0 <= nums.length <= 10^5 -10^4 <= nums[i] <= 10^4 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/315.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u4ece\u540e\u5f80\u524d\u6784\u9020\u4e00\u4e2a\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u5728\u4e8c\u53c9\u67e5\u627e\u6811\u4e2d\u7ef4\u62a4\u6811\u4e2d\u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u6570\u5b57\u7684\u4e2a\u6570\u3002 \u4e8c\u53c9\u6811\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u57df\u7528\u4e8e\u8ba1\u7b97\u5de6\u5b50\u6811\u7684\u5143\u7d20\u603b\u6570\uff0c\u5373\u5f53\u524d\u6811\u4e2d\u6570\u503c\u5c0f\u4e8e\u8be5\u8282\u70b9\u7684\u5143\u7d20\u603b\u6570\u3002\u5b9e\u73b0\u65b9\u6cd5\u662f\u5728\u5de6\u5b50\u6811\u6dfb\u52a0\u5143\u7d20\u540e\u8be5\u57df\u7684\u503c\u589e\u52a01\u3002 \u5728\u8282\u70b9\u7684\u53f3\u5b50\u6811\u6dfb\u52a0\u5143\u7d20\u65f6\uff0c\u610f\u5473\u7740\u5f53\u524d\u8282\u70b9\u548c\u8282\u70b9\u5de6\u5b50\u6811\u4e2d\u7684\u6240\u6709\u8282\u70b9\u90fd\u662f\u7b26\u5408\u53f3\u4fa7\u5c0f\u4e8e\u5f53\u524d\u5143\u7d20\u7684\u8282\u70b9\u3002\u5728\u9012\u5f52\u8fc7\u7a0b\u4e2d\u9700\u8981\u4f20\u9012\u4e00\u4e2a\u7528\u4f5c\u8ba1\u6570\u5668\u7684\u6307\u9488\u53c2\u6570\uff08\u8ba1\u6570\u7684\u6570\u503c\u5373\u4e3a\u6240\u6c42\u7684\u7ed3\u679c\uff09\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Note: The returned array must be malloced, assume caller calls free(). */ struct TreeNode2 { struct TreeNode2 * left ; struct TreeNode2 * right ; int val ; int subs ; }; struct TreeNode2 * insert ( struct TreeNode2 * dest , int src , int * depth ) { if ( dest == NULL ) { struct TreeNode2 * ret = ( struct TreeNode2 * ) malloc ( sizeof ( struct TreeNode2 )); ret -> left = NULL ; ret -> right = NULL ; ret -> val = src ; ret -> subs = 0 ; return ret ; } if ( src > dest -> val ) { * depth += 1 + dest -> subs ; dest -> right = insert ( dest -> right , src , depth ); } else { dest -> subs ++ ; dest -> left = insert ( dest -> left , src , depth ); } return dest ; } int * countSmaller ( int * nums , int numsSize , int * returnSize ) { * returnSize = numsSize ; int * ret = ( int * ) memset ( malloc ( sizeof ( int ) * numsSize ), 0 , sizeof ( int ) * numsSize ), i = 0 ; if ( numsSize <= 1 ) return ret ; struct TreeNode2 * tempTree = NULL ; for ( i = numsSize - 1 ; i >= 0 ; i -- ) tempTree = insert ( tempTree , nums [ i ], ret + i ); return ret ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/344.html","text":"344. \u53cd\u8f6c\u5b57\u7b26\u4e32 \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5176\u4f5c\u7528\u662f\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u53cd\u8f6c\u8fc7\u6765\u3002\u8f93\u5165\u5b57\u7b26\u4e32\u4ee5\u5b57\u7b26\u6570\u7ec4 char[] \u7684\u5f62\u5f0f\u7ed9\u51fa\u3002 \u4e0d\u8981\u7ed9\u53e6\u5916\u7684\u6570\u7ec4\u5206\u914d\u989d\u5916\u7684\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b\u539f\u5730\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u3001\u4f7f\u7528 O(1) \u7684\u989d\u5916\u7a7a\u95f4\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u90fd\u662f ASCII \u7801\u8868\u4e2d\u7684\u53ef\u6253\u5370\u5b57\u7b26\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165\uff1a[\"h\",\"e\",\"l\",\"l\",\"o\"] \u8f93\u51fa\uff1a[\"o\",\"l\",\"l\",\"e\",\"h\"] \u793a\u4f8b 2\uff1a \u8f93\u5165\uff1a[\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"] \u8f93\u51fa\uff1a[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"] Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u5206\u522b\u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u6307\u5411\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u4e0e\u7ed3\u5c3e\uff0c\u4ea4\u6362\u4e24\u8005\u7684\u503c\u540e\u6536\u7f29\u6307\u9488\u3002\uff08\u5de6\u6307\u9488\u53f3\u79fb\uff0c\u53f3\u6307\u9488\u5de6\u79fb\uff09 \u4ee3\u7801\u5982\u4e0b\uff1a void reverseString ( char * s , int sSize ) { if ( sSize <= 1 ) return ; char temp = 0 ; temp = * s ; * s = s [ sSize - 1 ]; s [ sSize - 1 ] = temp ; reverseString ( s + 1 , sSize - 2 ); }","title":"344. \u53cd\u8f6c\u5b57\u7b26\u4e32"},{"location":"coding/leetcode/344.html#344","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"344. \u53cd\u8f6c\u5b57\u7b26\u4e32"},{"location":"coding/leetcode/344.html#_1","text":"\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5176\u4f5c\u7528\u662f\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u53cd\u8f6c\u8fc7\u6765\u3002\u8f93\u5165\u5b57\u7b26\u4e32\u4ee5\u5b57\u7b26\u6570\u7ec4 char[] \u7684\u5f62\u5f0f\u7ed9\u51fa\u3002 \u4e0d\u8981\u7ed9\u53e6\u5916\u7684\u6570\u7ec4\u5206\u914d\u989d\u5916\u7684\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b\u539f\u5730\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u3001\u4f7f\u7528 O(1) \u7684\u989d\u5916\u7a7a\u95f4\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u90fd\u662f ASCII \u7801\u8868\u4e2d\u7684\u53ef\u6253\u5370\u5b57\u7b26\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165\uff1a[\"h\",\"e\",\"l\",\"l\",\"o\"] \u8f93\u51fa\uff1a[\"o\",\"l\",\"l\",\"e\",\"h\"] \u793a\u4f8b 2\uff1a \u8f93\u5165\uff1a[\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"] \u8f93\u51fa\uff1a[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"] Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/344.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u5206\u522b\u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u6307\u5411\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u4e0e\u7ed3\u5c3e\uff0c\u4ea4\u6362\u4e24\u8005\u7684\u503c\u540e\u6536\u7f29\u6307\u9488\u3002\uff08\u5de6\u6307\u9488\u53f3\u79fb\uff0c\u53f3\u6307\u9488\u5de6\u79fb\uff09 \u4ee3\u7801\u5982\u4e0b\uff1a void reverseString ( char * s , int sSize ) { if ( sSize <= 1 ) return ; char temp = 0 ; temp = * s ; * s = s [ sSize - 1 ]; s [ sSize - 1 ] = temp ; reverseString ( s + 1 , sSize - 2 ); }","title":"\u9898\u89e3"},{"location":"coding/leetcode/350.html","text":"350. \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6 II \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e24\u4e2a\u6570\u7ec4\uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\u5b83\u4eec\u7684\u4ea4\u96c6\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165\uff1anums1 = [1,2,2,1], nums2 = [2,2] \u8f93\u51fa\uff1a[2,2] \u793a\u4f8b 2\uff1a \u8f93\u5165\uff1anums1 = [4,9,5], nums2 = [9,4,9,8,4] \u8f93\u51fa\uff1a[4,9] \u8bf4\u660e\uff1a \u8f93\u51fa\u7ed3\u679c\u4e2d\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5e94\u4e0e\u5143\u7d20\u5728\u4e24\u4e2a\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u7684\u6700\u5c0f\u503c\u4e00\u81f4\u3002 \u6211\u4eec\u53ef\u4ee5\u4e0d\u8003\u8651\u8f93\u51fa\u7ed3\u679c\u7684\u987a\u5e8f\u3002 \u8fdb\u9636\uff1a \u5982\u679c\u7ed9\u5b9a\u7684\u6570\u7ec4\u5df2\u7ecf\u6392\u597d\u5e8f\u5462\uff1f\u4f60\u5c06\u5982\u4f55\u4f18\u5316\u4f60\u7684\u7b97\u6cd5\uff1f \u5982\u679c nums1 \u7684\u5927\u5c0f\u6bd4 nums2 \u5c0f\u5f88\u591a\uff0c\u54ea\u79cd\u65b9\u6cd5\u66f4\u4f18\uff1f \u5982\u679c nums2 \u7684\u5143\u7d20\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\uff0c\u5185\u5b58\u662f\u6709\u9650\u7684\uff0c\u5e76\u4e14\u4f60\u4e0d\u80fd\u4e00\u6b21\u52a0\u8f7d\u6240\u6709\u7684\u5143\u7d20\u5230\u5185\u5b58\u4e2d\uff0c\u4f60\u8be5\u600e\u4e48\u529e\uff1f Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u4f7f\u7528\u54c8\u5e0c\u8868\u5b58\u50a8\u6570\u7ec4\u4e2d\u5404\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6ce8\u610f\u6570\u503c\u5728\u4ea4\u96c6\u4e2d\u53ef\u4ee5\u91cd\u590d\u51fa\u73b0\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a #define MIN(x, y) (x > y ? y : x) struct cell { int value ; int times1 ; int times2 ; }; int * intersect ( int * nums1 , int nums1Size , int * nums2 , int nums2Size , int * returnSize ){ int i = 0 , cur , mapSize = nums1Size + nums2Size , * ret = ( int * ) malloc ( sizeof ( int ) * ( nums1Size + nums2Size )); * returnSize = 0 ; struct cell * hashMap = ( struct cell * ) memset ( malloc ( sizeof ( struct cell ) * mapSize ), 0 , sizeof ( struct cell ) * mapSize ); for ( i = 0 ; i < nums1Size ; i ++ ) { cur = ( nums1 [ i ] > 0 ? 1 : -1 ) * ( nums1 [ i ] % mapSize ); while (( hashMap [ cur ]. times1 != 0 || hashMap [ cur ]. times2 ) && hashMap [ cur ]. value != nums1 [ i ]) { cur ++ ; cur = cur == mapSize ? 0 : cur ; } if ( hashMap [ cur ]. times1 == 0 && hashMap [ cur ]. times2 == 0 ) hashMap [ cur ]. value = nums1 [ i ]; hashMap [ cur ]. times1 ++ ; } for ( i = 0 ; i < nums2Size ; i ++ ) { cur = ( nums2 [ i ] > 0 ? 1 : -1 ) * ( nums2 [ i ] % mapSize ); while (( hashMap [ cur ]. times1 != 0 || hashMap [ cur ]. times2 ) && hashMap [ cur ]. value != nums2 [ i ]) { cur ++ ; cur = cur == mapSize ? 0 : cur ; } if ( hashMap [ cur ]. times1 == 0 && hashMap [ cur ]. times2 == 0 ) hashMap [ cur ]. value = nums2 [ i ]; hashMap [ cur ]. times2 ++ ; } for ( i = 0 ; i < mapSize ; i ++ ) while (( hashMap [ i ]. times2 -- ) && ( hashMap [ i ]. times1 -- )) ret [( * returnSize ) ++ ] = hashMap [ i ]. value ; return ret ; }","title":"350. \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6 II"},{"location":"coding/leetcode/350.html#350-ii","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"350. \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6 II"},{"location":"coding/leetcode/350.html#_1","text":"\u7ed9\u5b9a\u4e24\u4e2a\u6570\u7ec4\uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\u5b83\u4eec\u7684\u4ea4\u96c6\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165\uff1anums1 = [1,2,2,1], nums2 = [2,2] \u8f93\u51fa\uff1a[2,2] \u793a\u4f8b 2\uff1a \u8f93\u5165\uff1anums1 = [4,9,5], nums2 = [9,4,9,8,4] \u8f93\u51fa\uff1a[4,9] \u8bf4\u660e\uff1a \u8f93\u51fa\u7ed3\u679c\u4e2d\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5e94\u4e0e\u5143\u7d20\u5728\u4e24\u4e2a\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u7684\u6700\u5c0f\u503c\u4e00\u81f4\u3002 \u6211\u4eec\u53ef\u4ee5\u4e0d\u8003\u8651\u8f93\u51fa\u7ed3\u679c\u7684\u987a\u5e8f\u3002 \u8fdb\u9636\uff1a \u5982\u679c\u7ed9\u5b9a\u7684\u6570\u7ec4\u5df2\u7ecf\u6392\u597d\u5e8f\u5462\uff1f\u4f60\u5c06\u5982\u4f55\u4f18\u5316\u4f60\u7684\u7b97\u6cd5\uff1f \u5982\u679c nums1 \u7684\u5927\u5c0f\u6bd4 nums2 \u5c0f\u5f88\u591a\uff0c\u54ea\u79cd\u65b9\u6cd5\u66f4\u4f18\uff1f \u5982\u679c nums2 \u7684\u5143\u7d20\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\uff0c\u5185\u5b58\u662f\u6709\u9650\u7684\uff0c\u5e76\u4e14\u4f60\u4e0d\u80fd\u4e00\u6b21\u52a0\u8f7d\u6240\u6709\u7684\u5143\u7d20\u5230\u5185\u5b58\u4e2d\uff0c\u4f60\u8be5\u600e\u4e48\u529e\uff1f Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/350.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u4f7f\u7528\u54c8\u5e0c\u8868\u5b58\u50a8\u6570\u7ec4\u4e2d\u5404\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6ce8\u610f\u6570\u503c\u5728\u4ea4\u96c6\u4e2d\u53ef\u4ee5\u91cd\u590d\u51fa\u73b0\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a #define MIN(x, y) (x > y ? y : x) struct cell { int value ; int times1 ; int times2 ; }; int * intersect ( int * nums1 , int nums1Size , int * nums2 , int nums2Size , int * returnSize ){ int i = 0 , cur , mapSize = nums1Size + nums2Size , * ret = ( int * ) malloc ( sizeof ( int ) * ( nums1Size + nums2Size )); * returnSize = 0 ; struct cell * hashMap = ( struct cell * ) memset ( malloc ( sizeof ( struct cell ) * mapSize ), 0 , sizeof ( struct cell ) * mapSize ); for ( i = 0 ; i < nums1Size ; i ++ ) { cur = ( nums1 [ i ] > 0 ? 1 : -1 ) * ( nums1 [ i ] % mapSize ); while (( hashMap [ cur ]. times1 != 0 || hashMap [ cur ]. times2 ) && hashMap [ cur ]. value != nums1 [ i ]) { cur ++ ; cur = cur == mapSize ? 0 : cur ; } if ( hashMap [ cur ]. times1 == 0 && hashMap [ cur ]. times2 == 0 ) hashMap [ cur ]. value = nums1 [ i ]; hashMap [ cur ]. times1 ++ ; } for ( i = 0 ; i < nums2Size ; i ++ ) { cur = ( nums2 [ i ] > 0 ? 1 : -1 ) * ( nums2 [ i ] % mapSize ); while (( hashMap [ cur ]. times1 != 0 || hashMap [ cur ]. times2 ) && hashMap [ cur ]. value != nums2 [ i ]) { cur ++ ; cur = cur == mapSize ? 0 : cur ; } if ( hashMap [ cur ]. times1 == 0 && hashMap [ cur ]. times2 == 0 ) hashMap [ cur ]. value = nums2 [ i ]; hashMap [ cur ]. times2 ++ ; } for ( i = 0 ; i < mapSize ; i ++ ) while (( hashMap [ i ]. times2 -- ) && ( hashMap [ i ]. times1 -- )) ret [( * returnSize ) ++ ] = hashMap [ i ]. value ; return ret ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/36.html","text":"36. \u6709\u6548\u7684\u6570\u72ec \u00b6 \u96be\u5ea6\uff1a \u4e2d\u7b49 \u9898\u76ee \u00b6 \u5224\u65ad\u4e00\u4e2a 9x9 \u7684\u6570\u72ec\u662f\u5426\u6709\u6548\u3002\u53ea\u9700\u8981\u6839\u636e\u4ee5\u4e0b\u89c4\u5219\uff0c\u9a8c\u8bc1\u5df2\u7ecf\u586b\u5165\u7684\u6570\u5b57\u662f\u5426\u6709\u6548\u5373\u53ef\u3002 \u6570\u5b57 1-9 \u5728\u6bcf\u4e00\u884c\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002 \u6570\u5b57 1-9 \u5728\u6bcf\u4e00\u5217\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002 \u6570\u5b57 1-9 \u5728\u6bcf\u4e00\u4e2a\u4ee5\u7c97\u5b9e\u7ebf\u5206\u9694\u7684 3x3 \u5bab\u5185\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002 \u4e0a\u56fe\u662f\u4e00\u4e2a\u90e8\u5206\u586b\u5145\u7684\u6709\u6548\u7684\u6570\u72ec\u3002 \u6570\u72ec\u90e8\u5206\u7a7a\u683c\u5185\u5df2\u586b\u5165\u4e86\u6570\u5b57\uff0c\u7a7a\u767d\u683c\u7528 '.' \u8868\u793a\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: [ [\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"], [\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"], [\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"], [\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"], [\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"], [\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"], [\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"], [\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"], [\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"] ] \u8f93\u51fa: true \u793a\u4f8b 2\uff1a \u8f93\u5165: [ [\"8\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"], [\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"], [\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"], [\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"], [\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"], [\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"], [\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"], [\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"], [\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"] ] \u8f93\u51fa: false \u89e3\u91ca: \u9664\u4e86\u7b2c\u4e00\u884c\u7684\u7b2c\u4e00\u4e2a\u6570\u5b57\u4ece 5 \u6539\u4e3a 8 \u4ee5\u5916\uff0c\u7a7a\u683c\u5185\u5176\u4ed6\u6570\u5b57\u5747\u4e0e \u793a\u4f8b1 \u76f8\u540c\u3002 \u4f46\u7531\u4e8e\u4f4d\u4e8e\u5de6\u4e0a\u89d2\u7684 3x3 \u5bab\u5185\u6709\u4e24\u4e2a 8 \u5b58\u5728, \u56e0\u6b64\u8fd9\u4e2a\u6570\u72ec\u662f\u65e0\u6548\u7684\u3002 \u8bf4\u660e\uff1a \u4e00\u4e2a\u6709\u6548\u7684\u6570\u72ec\uff08\u90e8\u5206\u5df2\u88ab\u586b\u5145\uff09\u4e0d\u4e00\u5b9a\u662f\u53ef\u89e3\u7684\u3002 \u53ea\u9700\u8981\u6839\u636e\u4ee5\u4e0a\u89c4\u5219\uff0c\u9a8c\u8bc1\u5df2\u7ecf\u586b\u5165\u7684\u6570\u5b57\u662f\u5426\u6709\u6548\u5373\u53ef\u3002 \u7ed9\u5b9a\u6570\u72ec\u5e8f\u5217\u53ea\u5305\u542b\u6570\u5b57 1-9 \u548c\u5b57\u7b26 '.' \u3002 \u7ed9\u5b9a\u6570\u72ec\u6c38\u8fdc\u662f 9x9 \u5f62\u5f0f\u7684\u3002 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u6839\u636e\u5b9a\u4e49\u76f4\u63a5\u5224\u65ad\u8f93\u5165\u7684\u6570\u7ec4\u662f\u5426\u6ee1\u8db3\u6570\u72ec\u76843\u4e2a\u6761\u4ef6\u5373\u53ef\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a bool isValidSudoku ( char ** board , int boardSize , int * boardColSize ){ int i = 0 , j = 0 , positions1 [ boardSize ], positions2 [ boardSize ], k = 0 ; for ( i = 0 ; i < boardSize ; i ++ ) { memset ( positions1 , 0 , sizeof ( int ) * boardSize ); memset ( positions2 , 0 , sizeof ( int ) * boardSize ); for ( j = 0 ; j < boardSize ; j ++ ) { if ( board [ i ][ j ] > '0' && positions1 [ board [ i ][ j ] - '1' ]) return false ; if ( board [ j ][ i ] > '0' && positions2 [ board [ j ][ i ] - '1' ]) return false ; if ( board [ i ][ j ] > '0' ) positions1 [ board [ i ][ j ] - '1' ] = 1 ; if ( board [ j ][ i ] > '0' ) positions2 [ board [ j ][ i ] - '1' ] = 1 ; } } for ( i = 0 ; i < 3 ; i ++ ) { for ( j = 0 ; j < 3 ; j ++ ) { memset ( positions1 , 0 , sizeof ( int ) * boardSize ); for ( k = 0 ; k < boardSize ; k ++ ) { if ( board [ i * 3 + k % 3 ][ j * 3 + k / 3 ] > '0' && positions1 [ board [ i * 3 + k % 3 ][ j * 3 + k / 3 ] - '1' ]) return false ; if ( board [ i * 3 + k % 3 ][ j * 3 + k / 3 ] > '0' ) positions1 [ board [ i * 3 + k % 3 ][ j * 3 + k / 3 ] - '1' ] = 1 ; } } } return true ; }","title":"36. \u6709\u6548\u7684\u6570\u72ec"},{"location":"coding/leetcode/36.html#36","text":"\u96be\u5ea6\uff1a \u4e2d\u7b49","title":"36. \u6709\u6548\u7684\u6570\u72ec"},{"location":"coding/leetcode/36.html#_1","text":"\u5224\u65ad\u4e00\u4e2a 9x9 \u7684\u6570\u72ec\u662f\u5426\u6709\u6548\u3002\u53ea\u9700\u8981\u6839\u636e\u4ee5\u4e0b\u89c4\u5219\uff0c\u9a8c\u8bc1\u5df2\u7ecf\u586b\u5165\u7684\u6570\u5b57\u662f\u5426\u6709\u6548\u5373\u53ef\u3002 \u6570\u5b57 1-9 \u5728\u6bcf\u4e00\u884c\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002 \u6570\u5b57 1-9 \u5728\u6bcf\u4e00\u5217\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002 \u6570\u5b57 1-9 \u5728\u6bcf\u4e00\u4e2a\u4ee5\u7c97\u5b9e\u7ebf\u5206\u9694\u7684 3x3 \u5bab\u5185\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002 \u4e0a\u56fe\u662f\u4e00\u4e2a\u90e8\u5206\u586b\u5145\u7684\u6709\u6548\u7684\u6570\u72ec\u3002 \u6570\u72ec\u90e8\u5206\u7a7a\u683c\u5185\u5df2\u586b\u5165\u4e86\u6570\u5b57\uff0c\u7a7a\u767d\u683c\u7528 '.' \u8868\u793a\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: [ [\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"], [\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"], [\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"], [\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"], [\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"], [\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"], [\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"], [\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"], [\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"] ] \u8f93\u51fa: true \u793a\u4f8b 2\uff1a \u8f93\u5165: [ [\"8\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"], [\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"], [\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"], [\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"], [\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"], [\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"], [\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"], [\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"], [\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"] ] \u8f93\u51fa: false \u89e3\u91ca: \u9664\u4e86\u7b2c\u4e00\u884c\u7684\u7b2c\u4e00\u4e2a\u6570\u5b57\u4ece 5 \u6539\u4e3a 8 \u4ee5\u5916\uff0c\u7a7a\u683c\u5185\u5176\u4ed6\u6570\u5b57\u5747\u4e0e \u793a\u4f8b1 \u76f8\u540c\u3002 \u4f46\u7531\u4e8e\u4f4d\u4e8e\u5de6\u4e0a\u89d2\u7684 3x3 \u5bab\u5185\u6709\u4e24\u4e2a 8 \u5b58\u5728, \u56e0\u6b64\u8fd9\u4e2a\u6570\u72ec\u662f\u65e0\u6548\u7684\u3002 \u8bf4\u660e\uff1a \u4e00\u4e2a\u6709\u6548\u7684\u6570\u72ec\uff08\u90e8\u5206\u5df2\u88ab\u586b\u5145\uff09\u4e0d\u4e00\u5b9a\u662f\u53ef\u89e3\u7684\u3002 \u53ea\u9700\u8981\u6839\u636e\u4ee5\u4e0a\u89c4\u5219\uff0c\u9a8c\u8bc1\u5df2\u7ecf\u586b\u5165\u7684\u6570\u5b57\u662f\u5426\u6709\u6548\u5373\u53ef\u3002 \u7ed9\u5b9a\u6570\u72ec\u5e8f\u5217\u53ea\u5305\u542b\u6570\u5b57 1-9 \u548c\u5b57\u7b26 '.' \u3002 \u7ed9\u5b9a\u6570\u72ec\u6c38\u8fdc\u662f 9x9 \u5f62\u5f0f\u7684\u3002 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/36.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u6839\u636e\u5b9a\u4e49\u76f4\u63a5\u5224\u65ad\u8f93\u5165\u7684\u6570\u7ec4\u662f\u5426\u6ee1\u8db3\u6570\u72ec\u76843\u4e2a\u6761\u4ef6\u5373\u53ef\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a bool isValidSudoku ( char ** board , int boardSize , int * boardColSize ){ int i = 0 , j = 0 , positions1 [ boardSize ], positions2 [ boardSize ], k = 0 ; for ( i = 0 ; i < boardSize ; i ++ ) { memset ( positions1 , 0 , sizeof ( int ) * boardSize ); memset ( positions2 , 0 , sizeof ( int ) * boardSize ); for ( j = 0 ; j < boardSize ; j ++ ) { if ( board [ i ][ j ] > '0' && positions1 [ board [ i ][ j ] - '1' ]) return false ; if ( board [ j ][ i ] > '0' && positions2 [ board [ j ][ i ] - '1' ]) return false ; if ( board [ i ][ j ] > '0' ) positions1 [ board [ i ][ j ] - '1' ] = 1 ; if ( board [ j ][ i ] > '0' ) positions2 [ board [ j ][ i ] - '1' ] = 1 ; } } for ( i = 0 ; i < 3 ; i ++ ) { for ( j = 0 ; j < 3 ; j ++ ) { memset ( positions1 , 0 , sizeof ( int ) * boardSize ); for ( k = 0 ; k < boardSize ; k ++ ) { if ( board [ i * 3 + k % 3 ][ j * 3 + k / 3 ] > '0' && positions1 [ board [ i * 3 + k % 3 ][ j * 3 + k / 3 ] - '1' ]) return false ; if ( board [ i * 3 + k % 3 ][ j * 3 + k / 3 ] > '0' ) positions1 [ board [ i * 3 + k % 3 ][ j * 3 + k / 3 ] - '1' ] = 1 ; } } } return true ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/38.html","text":"38. \u5916\u89c2\u6570\u5217 \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 n n \uff08 1 \\leq n \\leq 30 1 \\leq n \\leq 30 \uff09\uff0c\u8f93\u51fa\u5916\u89c2\u6570\u5217\u7684\u7b2c n n \u9879\u3002 \u6ce8\u610f\uff1a\u6574\u6570\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u9879\u5c06\u8868\u793a\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 \u300c\u5916\u89c2\u6570\u5217\u300d\u662f\u4e00\u4e2a\u6574\u6570\u5e8f\u5217\uff0c\u4ece\u6570\u5b57 1 \u5f00\u59cb\uff0c\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u9879\u90fd\u662f\u5bf9\u524d\u4e00\u9879\u7684\u63cf\u8ff0\u3002\u524d\u4e94\u9879\u5982\u4e0b\uff1a 1. 1 2. 11 3. 21 4. 1211 5. 111221 \u7b2c\u4e00\u9879\u662f\u6570\u5b57 1 \u63cf\u8ff0\u524d\u4e00\u9879\uff0c\u8fd9\u4e2a\u6570\u662f 1 \u5373 \u201c\u4e00\u4e2a 1 \u201d\uff0c\u8bb0\u4f5c 11 \u63cf\u8ff0\u524d\u4e00\u9879\uff0c\u8fd9\u4e2a\u6570\u662f 11 \u5373 \u201c\u4e24\u4e2a 1 \u201d \uff0c\u8bb0\u4f5c 21 \u63cf\u8ff0\u524d\u4e00\u9879\uff0c\u8fd9\u4e2a\u6570\u662f 21 \u5373 \u201c\u4e00\u4e2a 2 \u4e00\u4e2a 1 \u201d \uff0c\u8bb0\u4f5c 1211 \u63cf\u8ff0\u524d\u4e00\u9879\uff0c\u8fd9\u4e2a\u6570\u662f 1211 \u5373 \u201c\u4e00\u4e2a 1 \u4e00\u4e2a 2 \u4e24\u4e2a 1 \u201d \uff0c\u8bb0\u4f5c 111221 \u793a\u4f8b 1: \u8f93\u5165: 1 \u8f93\u51fa: \"1\" \u89e3\u91ca\uff1a\u8fd9\u662f\u4e00\u4e2a\u57fa\u672c\u6837\u4f8b\u3002 \u793a\u4f8b 2: \u8f93\u5165: 4 \u8f93\u51fa: \"1211\" \u89e3\u91ca\uff1a\u5f53 n = 3 \u65f6\uff0c\u5e8f\u5217\u662f \"21\"\uff0c\u5176\u4e2d\u6211\u4eec\u6709 \"2\" \u548c \"1\" \u4e24\u7ec4\uff0c\"2\" \u53ef\u4ee5\u8bfb\u4f5c \"12\"\uff0c\u4e5f\u5c31\u662f\u51fa\u73b0\u9891\u6b21 = 1 \u800c \u503c = 2\uff1b\u7c7b\u4f3c \"1\" \u53ef\u4ee5\u8bfb\u4f5c \"11\"\u3002\u6240\u4ee5\u7b54\u6848\u662f \"12\" \u548c \"11\" \u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u4e5f\u5c31\u662f \"1211\"\u3002 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u6839\u636e\u5b9a\u4e49\u8fdb\u884c\u8ba1\u7b97\u5373\u53ef\uff0c\u6ce8\u610f\u6b21\u6570\u90e8\u5206\u53ef\u80fd\u8d85\u8fc710\uff0c\u800c\u6570\u5b57\u90e8\u5206\u4e0d\u4f1a\u8d85\u8fc710\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a char * toStr ( int n ) { char * ret = ( char * ) memset ( malloc ( sizeof ( char ) * 10 ), 0 , sizeof ( char ) * 10 ), temp ; int i = 0 , head = 0 , tail ; while ( n ) { ret [ i ] = n % 10 + '0' ; n /= 10 ; i ++ ; } tail = i - 1 ; while ( head < tail ) { temp = ret [ head ]; ret [ head ] = ret [ tail ]; ret [ tail ] = temp ; } return ret ; } char * countAndSay ( int n ){ if ( n == 1 ) { char * ret = ( char * ) malloc ( sizeof ( char ) * 2 ); ret [ 0 ] = '1' ; ret [ 1 ] = 0 ; return ret ; } char * rec = countAndSay ( n - 1 ), * cur = rec , flag = * cur , * temp = NULL , * ret = ( char * ) memset ( malloc ( sizeof ( char ) * ( strlen ( rec ) * 2 + 1 )), 0 , sizeof ( char ) * ( strlen ( rec ) * 2 + 1 )), * retcur = ret ; int counter = 0 ; while ( * cur ) { if ( * cur == flag ) counter ++ ; else { temp = toStr ( counter ); strcpy ( retcur , temp ); while ( * retcur ) retcur ++ ; * retcur = flag ; * retcur ++ ; flag = * cur ; counter = 1 ; free ( temp ); } cur ++ ; } temp = toStr ( counter ); strcpy ( retcur , temp ); while ( * retcur ) retcur ++ ; * retcur = flag ; free ( temp ); free ( rec ); return ret ; }","title":"38. \u5916\u89c2\u6570\u5217"},{"location":"coding/leetcode/38.html#38","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"38. \u5916\u89c2\u6570\u5217"},{"location":"coding/leetcode/38.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 n n \uff08 1 \\leq n \\leq 30 1 \\leq n \\leq 30 \uff09\uff0c\u8f93\u51fa\u5916\u89c2\u6570\u5217\u7684\u7b2c n n \u9879\u3002 \u6ce8\u610f\uff1a\u6574\u6570\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u9879\u5c06\u8868\u793a\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 \u300c\u5916\u89c2\u6570\u5217\u300d\u662f\u4e00\u4e2a\u6574\u6570\u5e8f\u5217\uff0c\u4ece\u6570\u5b57 1 \u5f00\u59cb\uff0c\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u9879\u90fd\u662f\u5bf9\u524d\u4e00\u9879\u7684\u63cf\u8ff0\u3002\u524d\u4e94\u9879\u5982\u4e0b\uff1a 1. 1 2. 11 3. 21 4. 1211 5. 111221 \u7b2c\u4e00\u9879\u662f\u6570\u5b57 1 \u63cf\u8ff0\u524d\u4e00\u9879\uff0c\u8fd9\u4e2a\u6570\u662f 1 \u5373 \u201c\u4e00\u4e2a 1 \u201d\uff0c\u8bb0\u4f5c 11 \u63cf\u8ff0\u524d\u4e00\u9879\uff0c\u8fd9\u4e2a\u6570\u662f 11 \u5373 \u201c\u4e24\u4e2a 1 \u201d \uff0c\u8bb0\u4f5c 21 \u63cf\u8ff0\u524d\u4e00\u9879\uff0c\u8fd9\u4e2a\u6570\u662f 21 \u5373 \u201c\u4e00\u4e2a 2 \u4e00\u4e2a 1 \u201d \uff0c\u8bb0\u4f5c 1211 \u63cf\u8ff0\u524d\u4e00\u9879\uff0c\u8fd9\u4e2a\u6570\u662f 1211 \u5373 \u201c\u4e00\u4e2a 1 \u4e00\u4e2a 2 \u4e24\u4e2a 1 \u201d \uff0c\u8bb0\u4f5c 111221 \u793a\u4f8b 1: \u8f93\u5165: 1 \u8f93\u51fa: \"1\" \u89e3\u91ca\uff1a\u8fd9\u662f\u4e00\u4e2a\u57fa\u672c\u6837\u4f8b\u3002 \u793a\u4f8b 2: \u8f93\u5165: 4 \u8f93\u51fa: \"1211\" \u89e3\u91ca\uff1a\u5f53 n = 3 \u65f6\uff0c\u5e8f\u5217\u662f \"21\"\uff0c\u5176\u4e2d\u6211\u4eec\u6709 \"2\" \u548c \"1\" \u4e24\u7ec4\uff0c\"2\" \u53ef\u4ee5\u8bfb\u4f5c \"12\"\uff0c\u4e5f\u5c31\u662f\u51fa\u73b0\u9891\u6b21 = 1 \u800c \u503c = 2\uff1b\u7c7b\u4f3c \"1\" \u53ef\u4ee5\u8bfb\u4f5c \"11\"\u3002\u6240\u4ee5\u7b54\u6848\u662f \"12\" \u548c \"11\" \u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u4e5f\u5c31\u662f \"1211\"\u3002 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/38.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u6839\u636e\u5b9a\u4e49\u8fdb\u884c\u8ba1\u7b97\u5373\u53ef\uff0c\u6ce8\u610f\u6b21\u6570\u90e8\u5206\u53ef\u80fd\u8d85\u8fc710\uff0c\u800c\u6570\u5b57\u90e8\u5206\u4e0d\u4f1a\u8d85\u8fc710\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a char * toStr ( int n ) { char * ret = ( char * ) memset ( malloc ( sizeof ( char ) * 10 ), 0 , sizeof ( char ) * 10 ), temp ; int i = 0 , head = 0 , tail ; while ( n ) { ret [ i ] = n % 10 + '0' ; n /= 10 ; i ++ ; } tail = i - 1 ; while ( head < tail ) { temp = ret [ head ]; ret [ head ] = ret [ tail ]; ret [ tail ] = temp ; } return ret ; } char * countAndSay ( int n ){ if ( n == 1 ) { char * ret = ( char * ) malloc ( sizeof ( char ) * 2 ); ret [ 0 ] = '1' ; ret [ 1 ] = 0 ; return ret ; } char * rec = countAndSay ( n - 1 ), * cur = rec , flag = * cur , * temp = NULL , * ret = ( char * ) memset ( malloc ( sizeof ( char ) * ( strlen ( rec ) * 2 + 1 )), 0 , sizeof ( char ) * ( strlen ( rec ) * 2 + 1 )), * retcur = ret ; int counter = 0 ; while ( * cur ) { if ( * cur == flag ) counter ++ ; else { temp = toStr ( counter ); strcpy ( retcur , temp ); while ( * retcur ) retcur ++ ; * retcur = flag ; * retcur ++ ; flag = * cur ; counter = 1 ; free ( temp ); } cur ++ ; } temp = toStr ( counter ); strcpy ( retcur , temp ); while ( * retcur ) retcur ++ ; * retcur = flag ; free ( temp ); free ( rec ); return ret ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/384.html","text":"384. \u6253\u4e71\u6570\u7ec4 \u00b6 \u96be\u5ea6\uff1a \u4e2d\u7b49 \u9898\u76ee \u00b6 \u6253\u4e71\u4e00\u4e2a\u6ca1\u6709\u91cd\u590d\u5143\u7d20\u7684\u6570\u7ec4\u3002 \u793a\u4f8b\uff1a // \u4ee5\u6570\u5b57\u96c6\u5408 1, 2 \u548c 3 \u521d\u59cb\u5316\u6570\u7ec4\u3002 int[] nums = {1,2,3}; Solution solution = new Solution(nums); // \u6253\u4e71\u6570\u7ec4 [1,2,3] \u5e76\u8fd4\u56de\u7ed3\u679c\u3002\u4efb\u4f55 [1,2,3]\u7684\u6392\u5217\u8fd4\u56de\u7684\u6982\u7387\u5e94\u8be5\u76f8\u540c\u3002 solution.shuffle(); // \u91cd\u8bbe\u6570\u7ec4\u5230\u5b83\u7684\u521d\u59cb\u72b6\u6001[1,2,3]\u3002 solution.reset(); // \u968f\u673a\u8fd4\u56de\u6570\u7ec4[1,2,3]\u6253\u4e71\u540e\u7684\u7ed3\u679c\u3002 solution.shuffle(); Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a Fisher-Yates \u6d17\u724c\u7b97\u6cd5\uff0c\u5173\u952e\u5728\u4e8e\u5b9e\u73b0\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u65e0\u653e\u56de\u62bd\u6837\u3002 Fisher-Yates \u6d17\u724c\u7b97\u6cd5\u8ddf\u66b4\u529b\u7b97\u6cd5\u5f88\u50cf\u3002\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0c\u751f\u6210\u4e00\u4e2a\u8303\u56f4\u5728\u5f53\u524d\u4e0b\u6807\u5230\u6570\u7ec4\u672b\u5c3e\u5143\u7d20\u4e0b\u6807\u4e4b\u95f4\u7684\u968f\u673a\u6574\u6570\u3002\u63a5\u4e0b\u6765\uff0c\u5c06\u5f53\u524d\u5143\u7d20\u548c\u968f\u673a\u9009\u51fa\u7684\u4e0b\u6807\u6240\u6307\u7684\u5143\u7d20\u4e92\u76f8\u4ea4\u6362 - \u8fd9\u4e00\u6b65\u6a21\u62df\u4e86\u6bcf\u6b21\u4ece \u201c\u5e3d\u5b50\u201d \u91cc\u9762\u6478\u4e00\u4e2a\u5143\u7d20\u7684\u8fc7\u7a0b\uff0c\u5176\u4e2d\u9009\u53d6\u4e0b\u6807\u8303\u56f4\u7684\u4f9d\u636e\u5728\u4e8e\u6bcf\u4e2a\u88ab\u6478\u51fa\u7684\u5143\u7d20\u90fd\u4e0d\u53ef\u80fd\u518d\u88ab\u6478\u51fa\u6765\u4e86\u3002\u6b64\u5916\u8fd8\u6709\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u7ec6\u8282\uff0c\u5f53\u524d\u5143\u7d20\u662f\u53ef\u4ee5\u548c\u5b83\u672c\u8eab\u4e92\u76f8\u4ea4\u6362\u7684 - \u5426\u5219\u751f\u6210\u6700\u540e\u7684\u6392\u5217\u7ec4\u5408\u7684\u6982\u7387\u5c31\u4e0d\u5bf9\u4e86\u3002 Reference \u4ee3\u7801\u5982\u4e0b\uff1a typedef struct { int size ; int * nums ; } Solution ; Solution * solutionCreate ( int * nums , int numsSize ) { Solution * ret = ( Solution * ) malloc ( sizeof ( Solution )); ret -> size = numsSize ; ret -> nums = ( int * ) memcpy ( malloc ( sizeof ( int ) * numsSize ), nums , sizeof ( int ) * numsSize ); return ret ; } /** Resets the array to its original configuration and return it. */ int * solutionReset ( Solution * obj , int * retSize ) { * retSize = obj -> size ; return obj -> nums ; } /** Returns a random shuffling of the array. */ int * solutionShuffle ( Solution * obj , int * retSize ) { * retSize = obj -> size ; int * ret = ( int * ) memcpy ( malloc ( sizeof ( int ) * obj -> size ), obj -> nums , sizeof ( int ) * obj -> size ), i = 0 , temp , x , y ; unsigned int * seed = malloc ( sizeof ( unsigned int )); * seed += ( unsigned int ) seed ; srand ( * seed ); for ( i = 0 ; i < obj -> size ; i ++ ) { x = i ; y = rand () % ( obj -> size - i ) + i ; temp = ret [ x ]; ret [ x ] = ret [ y ]; ret [ y ] = temp ; } free ( seed ); return ret ; } void solutionFree ( Solution * obj ) { free ( obj -> nums ); free ( obj ); } /** * Your Solution struct will be instantiated and called as such: * Solution* obj = solutionCreate(nums, numsSize); * int* param_1 = solutionReset(obj, retSize); * int* param_2 = solutionShuffle(obj, retSize); * solutionFree(obj); */","title":"384. \u6253\u4e71\u6570\u7ec4"},{"location":"coding/leetcode/384.html#384","text":"\u96be\u5ea6\uff1a \u4e2d\u7b49","title":"384. \u6253\u4e71\u6570\u7ec4"},{"location":"coding/leetcode/384.html#_1","text":"\u6253\u4e71\u4e00\u4e2a\u6ca1\u6709\u91cd\u590d\u5143\u7d20\u7684\u6570\u7ec4\u3002 \u793a\u4f8b\uff1a // \u4ee5\u6570\u5b57\u96c6\u5408 1, 2 \u548c 3 \u521d\u59cb\u5316\u6570\u7ec4\u3002 int[] nums = {1,2,3}; Solution solution = new Solution(nums); // \u6253\u4e71\u6570\u7ec4 [1,2,3] \u5e76\u8fd4\u56de\u7ed3\u679c\u3002\u4efb\u4f55 [1,2,3]\u7684\u6392\u5217\u8fd4\u56de\u7684\u6982\u7387\u5e94\u8be5\u76f8\u540c\u3002 solution.shuffle(); // \u91cd\u8bbe\u6570\u7ec4\u5230\u5b83\u7684\u521d\u59cb\u72b6\u6001[1,2,3]\u3002 solution.reset(); // \u968f\u673a\u8fd4\u56de\u6570\u7ec4[1,2,3]\u6253\u4e71\u540e\u7684\u7ed3\u679c\u3002 solution.shuffle(); Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/384.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a Fisher-Yates \u6d17\u724c\u7b97\u6cd5\uff0c\u5173\u952e\u5728\u4e8e\u5b9e\u73b0\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u65e0\u653e\u56de\u62bd\u6837\u3002 Fisher-Yates \u6d17\u724c\u7b97\u6cd5\u8ddf\u66b4\u529b\u7b97\u6cd5\u5f88\u50cf\u3002\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0c\u751f\u6210\u4e00\u4e2a\u8303\u56f4\u5728\u5f53\u524d\u4e0b\u6807\u5230\u6570\u7ec4\u672b\u5c3e\u5143\u7d20\u4e0b\u6807\u4e4b\u95f4\u7684\u968f\u673a\u6574\u6570\u3002\u63a5\u4e0b\u6765\uff0c\u5c06\u5f53\u524d\u5143\u7d20\u548c\u968f\u673a\u9009\u51fa\u7684\u4e0b\u6807\u6240\u6307\u7684\u5143\u7d20\u4e92\u76f8\u4ea4\u6362 - \u8fd9\u4e00\u6b65\u6a21\u62df\u4e86\u6bcf\u6b21\u4ece \u201c\u5e3d\u5b50\u201d \u91cc\u9762\u6478\u4e00\u4e2a\u5143\u7d20\u7684\u8fc7\u7a0b\uff0c\u5176\u4e2d\u9009\u53d6\u4e0b\u6807\u8303\u56f4\u7684\u4f9d\u636e\u5728\u4e8e\u6bcf\u4e2a\u88ab\u6478\u51fa\u7684\u5143\u7d20\u90fd\u4e0d\u53ef\u80fd\u518d\u88ab\u6478\u51fa\u6765\u4e86\u3002\u6b64\u5916\u8fd8\u6709\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u7ec6\u8282\uff0c\u5f53\u524d\u5143\u7d20\u662f\u53ef\u4ee5\u548c\u5b83\u672c\u8eab\u4e92\u76f8\u4ea4\u6362\u7684 - \u5426\u5219\u751f\u6210\u6700\u540e\u7684\u6392\u5217\u7ec4\u5408\u7684\u6982\u7387\u5c31\u4e0d\u5bf9\u4e86\u3002 Reference \u4ee3\u7801\u5982\u4e0b\uff1a typedef struct { int size ; int * nums ; } Solution ; Solution * solutionCreate ( int * nums , int numsSize ) { Solution * ret = ( Solution * ) malloc ( sizeof ( Solution )); ret -> size = numsSize ; ret -> nums = ( int * ) memcpy ( malloc ( sizeof ( int ) * numsSize ), nums , sizeof ( int ) * numsSize ); return ret ; } /** Resets the array to its original configuration and return it. */ int * solutionReset ( Solution * obj , int * retSize ) { * retSize = obj -> size ; return obj -> nums ; } /** Returns a random shuffling of the array. */ int * solutionShuffle ( Solution * obj , int * retSize ) { * retSize = obj -> size ; int * ret = ( int * ) memcpy ( malloc ( sizeof ( int ) * obj -> size ), obj -> nums , sizeof ( int ) * obj -> size ), i = 0 , temp , x , y ; unsigned int * seed = malloc ( sizeof ( unsigned int )); * seed += ( unsigned int ) seed ; srand ( * seed ); for ( i = 0 ; i < obj -> size ; i ++ ) { x = i ; y = rand () % ( obj -> size - i ) + i ; temp = ret [ x ]; ret [ x ] = ret [ y ]; ret [ y ] = temp ; } free ( seed ); return ret ; } void solutionFree ( Solution * obj ) { free ( obj -> nums ); free ( obj ); } /** * Your Solution struct will be instantiated and called as such: * Solution* obj = solutionCreate(nums, numsSize); * int* param_1 = solutionReset(obj, retSize); * int* param_2 = solutionShuffle(obj, retSize); * solutionFree(obj); */","title":"\u9898\u89e3"},{"location":"coding/leetcode/387.html","text":"387. \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u627e\u5230\u5b83\u7684\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u5b83\u7684\u7d22\u5f15\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002 \u793a\u4f8b\uff1a s = \"leetcode\" \u8fd4\u56de 0 s = \"loveleetcode\" \u8fd4\u56de 2 \u63d0\u793a\uff1a \u4f60\u53ef\u4ee5\u5047\u5b9a\u8be5\u5b57\u7b26\u4e32\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u50a8\u5b57\u7b26\u4e32\u4e2d\u5404\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u3002\u904d\u5386\u5b57\u7b26\u4e32\u8fdb\u884c\u7edf\u8ba1\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a int firstUniqChar ( char * s ){ int hashMap [ 26 ] = { 0 }; char * cur = s ; while ( * cur ) { hashMap [ * cur - 'a' ] ++ ; cur ++ ; } cur = s ; while ( * cur ) { if ( hashMap [ * cur - 'a' ] == 1 ) return ( int )( cur - s ); cur ++ ; } return -1 ; }","title":"387. \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26"},{"location":"coding/leetcode/387.html#387","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"387. \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26"},{"location":"coding/leetcode/387.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u627e\u5230\u5b83\u7684\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u5b83\u7684\u7d22\u5f15\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002 \u793a\u4f8b\uff1a s = \"leetcode\" \u8fd4\u56de 0 s = \"loveleetcode\" \u8fd4\u56de 2 \u63d0\u793a\uff1a \u4f60\u53ef\u4ee5\u5047\u5b9a\u8be5\u5b57\u7b26\u4e32\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/387.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u50a8\u5b57\u7b26\u4e32\u4e2d\u5404\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u3002\u904d\u5386\u5b57\u7b26\u4e32\u8fdb\u884c\u7edf\u8ba1\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a int firstUniqChar ( char * s ){ int hashMap [ 26 ] = { 0 }; char * cur = s ; while ( * cur ) { hashMap [ * cur - 'a' ] ++ ; cur ++ ; } cur = s ; while ( * cur ) { if ( hashMap [ * cur - 'a' ] == 1 ) return ( int )( cur - s ); cur ++ ; } return -1 ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/48.html","text":"48. \u65cb\u8f6c\u56fe\u50cf \u00b6 \u96be\u5ea6\uff1a \u4e2d\u7b49 \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e00\u4e2a n \u00d7 n \u7684\u4e8c\u7ef4\u77e9\u9635\u8868\u793a\u4e00\u4e2a\u56fe\u50cf\u3002 \u5c06\u56fe\u50cf\u987a\u65f6\u9488\u65cb\u8f6c 90 \u5ea6\u3002 \u8bf4\u660e\uff1a \u4f60\u5fc5\u987b\u5728\u539f\u5730\u65cb\u8f6c\u56fe\u50cf\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u9700\u8981\u76f4\u63a5\u4fee\u6539\u8f93\u5165\u7684\u4e8c\u7ef4\u77e9\u9635\u3002\u8bf7\u4e0d\u8981\u4f7f\u7528\u53e6\u4e00\u4e2a\u77e9\u9635\u6765\u65cb\u8f6c\u56fe\u50cf\u3002 \u793a\u4f8b 1\uff1a \u7ed9\u5b9a matrix = [ [1,2,3], [4,5,6], [7,8,9] ], \u539f\u5730\u65cb\u8f6c\u8f93\u5165\u77e9\u9635\uff0c\u4f7f\u5176\u53d8\u4e3a: [ [7,4,1], [8,5,2], [9,6,3] ] \u793a\u4f8b 2\uff1a \u7ed9\u5b9a matrix = [ [ 5, 1, 9,11], [ 2, 4, 8,10], [13, 3, 6, 7], [15,14,12,16] ], \u539f\u5730\u65cb\u8f6c\u8f93\u5165\u77e9\u9635\uff0c\u4f7f\u5176\u53d8\u4e3a: [ [15,13, 2, 5], [14, 3, 4, 1], [12, 6, 8, 9], [16, 7,10,11] ] Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u5c06\u77e9\u9635\u8f6c\u7f6e\u540e\u53cd\u8f6c\u5404\u5217\u7684\u987a\u5e8f\u5373\u53ef\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a void rotate ( int ** matrix , int matrixSize , int * matrixColSize ){ int i = 0 , j = 0 , temp ; for ( i = 0 ; i < matrixSize ; i ++ ) { for ( j = i ; j < matrixSize ; j ++ ) { temp = matrix [ i ][ j ]; matrix [ i ][ j ] = matrix [ j ][ i ]; matrix [ j ][ i ] = temp ; } } for ( i = 0 ; i < matrixSize ; i ++ ) { for ( j = 0 ; j < matrixSize / 2 ; j ++ ) { temp = matrix [ i ][ j ]; matrix [ i ][ j ] = matrix [ i ][ matrixSize - j - 1 ]; matrix [ i ][ matrixSize - j - 1 ] = temp ; } } }","title":"48. \u65cb\u8f6c\u56fe\u50cf"},{"location":"coding/leetcode/48.html#48","text":"\u96be\u5ea6\uff1a \u4e2d\u7b49","title":"48. \u65cb\u8f6c\u56fe\u50cf"},{"location":"coding/leetcode/48.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a n \u00d7 n \u7684\u4e8c\u7ef4\u77e9\u9635\u8868\u793a\u4e00\u4e2a\u56fe\u50cf\u3002 \u5c06\u56fe\u50cf\u987a\u65f6\u9488\u65cb\u8f6c 90 \u5ea6\u3002 \u8bf4\u660e\uff1a \u4f60\u5fc5\u987b\u5728\u539f\u5730\u65cb\u8f6c\u56fe\u50cf\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u9700\u8981\u76f4\u63a5\u4fee\u6539\u8f93\u5165\u7684\u4e8c\u7ef4\u77e9\u9635\u3002\u8bf7\u4e0d\u8981\u4f7f\u7528\u53e6\u4e00\u4e2a\u77e9\u9635\u6765\u65cb\u8f6c\u56fe\u50cf\u3002 \u793a\u4f8b 1\uff1a \u7ed9\u5b9a matrix = [ [1,2,3], [4,5,6], [7,8,9] ], \u539f\u5730\u65cb\u8f6c\u8f93\u5165\u77e9\u9635\uff0c\u4f7f\u5176\u53d8\u4e3a: [ [7,4,1], [8,5,2], [9,6,3] ] \u793a\u4f8b 2\uff1a \u7ed9\u5b9a matrix = [ [ 5, 1, 9,11], [ 2, 4, 8,10], [13, 3, 6, 7], [15,14,12,16] ], \u539f\u5730\u65cb\u8f6c\u8f93\u5165\u77e9\u9635\uff0c\u4f7f\u5176\u53d8\u4e3a: [ [15,13, 2, 5], [14, 3, 4, 1], [12, 6, 8, 9], [16, 7,10,11] ] Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/48.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u5c06\u77e9\u9635\u8f6c\u7f6e\u540e\u53cd\u8f6c\u5404\u5217\u7684\u987a\u5e8f\u5373\u53ef\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a void rotate ( int ** matrix , int matrixSize , int * matrixColSize ){ int i = 0 , j = 0 , temp ; for ( i = 0 ; i < matrixSize ; i ++ ) { for ( j = i ; j < matrixSize ; j ++ ) { temp = matrix [ i ][ j ]; matrix [ i ][ j ] = matrix [ j ][ i ]; matrix [ j ][ i ] = temp ; } } for ( i = 0 ; i < matrixSize ; i ++ ) { for ( j = 0 ; j < matrixSize / 2 ; j ++ ) { temp = matrix [ i ][ j ]; matrix [ i ][ j ] = matrix [ i ][ matrixSize - j - 1 ]; matrix [ i ][ matrixSize - j - 1 ] = temp ; } } }","title":"\u9898\u89e3"},{"location":"coding/leetcode/50.html","text":"50. Pow(x, n) \u00b6 \u96be\u5ea6\uff1a \u4e2d\u7b49 \u9898\u76ee \u00b6 \u5b9e\u73b0 pow(x, n) \uff0c\u5373\u8ba1\u7b97 x \u7684 n \u6b21\u5e42\u51fd\u6570\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: 2.00000, 10 \u8f93\u51fa: 1024.00000 \u793a\u4f8b 2\uff1a \u8f93\u5165: 2.10000, 3 \u8f93\u51fa: 9.26100 \u793a\u4f8b 3\uff1a \u8f93\u5165: 2.00000, -2 \u8f93\u51fa: 0.25000 \u89e3\u91ca: 2^(-2) = (1/2)^2 = 1/4 = 0.25 \u8bf4\u660e\uff1a -100.0 < x < 100.0 n \u662f 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\uff0c\u5176\u6570\u503c\u8303\u56f4\u662f [\u22122^{31}, 2^{31} \u2212 1] [\u22122^{31}, 2^{31} \u2212 1] \u3002 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u5229\u7528\u5feb\u901f\u5e42\u7684\u601d\u8def\uff0c\u5b58\u50a8\u6b21\u6570\u4e3a2\u7684\u6574\u6570\u5e42\u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u7136\u540e\u7528\u8fd9\u4e9b\u7ed3\u679c\u76f8\u4e58\u5f97\u5230\u8f93\u51fa\u7ed3\u679c\u3002\u6ce8\u610f\u6307\u6570\u4e3a\u8d1f\u6570\u7684\u60c5\u51b5\u3002\u5f53\u6307\u6570\u4e3a -2147483648 \u65f6\u4e0d\u80fd\u53d6\u8d1f\uff0c\u6b64\u65f6\u53ef\u4ee5\u5148\u52a0\u4e00\u518d\u53d6\u8d1f\uff0c\u6700\u540e\u9664\u4ee5\u5e95\u6570\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a double myPow ( double x , int n ) { if ( n < 0 ) return 1 / myPow ( x , - ( n + 1 )) / x ; double cache [ 32 ] = { 0 }, ret = 1 ; int i = 0 ; cache [ 0 ] = x ; while ( n ) { if ( n & 1 ) ret *= cache [ i ]; n >>= 1 ; i ++ ; cache [ i ] = cache [ i - 1 ] * cache [ i - 1 ]; } return ret ; }","title":"50. Pow(x, n)"},{"location":"coding/leetcode/50.html#50-powx-n","text":"\u96be\u5ea6\uff1a \u4e2d\u7b49","title":"50. Pow(x, n)"},{"location":"coding/leetcode/50.html#_1","text":"\u5b9e\u73b0 pow(x, n) \uff0c\u5373\u8ba1\u7b97 x \u7684 n \u6b21\u5e42\u51fd\u6570\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: 2.00000, 10 \u8f93\u51fa: 1024.00000 \u793a\u4f8b 2\uff1a \u8f93\u5165: 2.10000, 3 \u8f93\u51fa: 9.26100 \u793a\u4f8b 3\uff1a \u8f93\u5165: 2.00000, -2 \u8f93\u51fa: 0.25000 \u89e3\u91ca: 2^(-2) = (1/2)^2 = 1/4 = 0.25 \u8bf4\u660e\uff1a -100.0 < x < 100.0 n \u662f 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\uff0c\u5176\u6570\u503c\u8303\u56f4\u662f [\u22122^{31}, 2^{31} \u2212 1] [\u22122^{31}, 2^{31} \u2212 1] \u3002 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/50.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u5229\u7528\u5feb\u901f\u5e42\u7684\u601d\u8def\uff0c\u5b58\u50a8\u6b21\u6570\u4e3a2\u7684\u6574\u6570\u5e42\u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u7136\u540e\u7528\u8fd9\u4e9b\u7ed3\u679c\u76f8\u4e58\u5f97\u5230\u8f93\u51fa\u7ed3\u679c\u3002\u6ce8\u610f\u6307\u6570\u4e3a\u8d1f\u6570\u7684\u60c5\u51b5\u3002\u5f53\u6307\u6570\u4e3a -2147483648 \u65f6\u4e0d\u80fd\u53d6\u8d1f\uff0c\u6b64\u65f6\u53ef\u4ee5\u5148\u52a0\u4e00\u518d\u53d6\u8d1f\uff0c\u6700\u540e\u9664\u4ee5\u5e95\u6570\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a double myPow ( double x , int n ) { if ( n < 0 ) return 1 / myPow ( x , - ( n + 1 )) / x ; double cache [ 32 ] = { 0 }, ret = 1 ; int i = 0 ; cache [ 0 ] = x ; while ( n ) { if ( n & 1 ) ret *= cache [ i ]; n >>= 1 ; i ++ ; cache [ i ] = cache [ i - 1 ] * cache [ i - 1 ]; } return ret ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/509.html","text":"509. \u6590\u6ce2\u90a3\u5951\u6570 \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u6590\u6ce2\u90a3\u5951\u6570\uff0c\u901a\u5e38\u7528 F(n) \u8868\u793a\uff0c\u5f62\u6210\u7684\u5e8f\u5217\u79f0\u4e3a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u3002\u8be5\u6570\u5217\u7531 0 \u548c 1 \u5f00\u59cb\uff0c\u540e\u9762\u7684\u6bcf\u4e00\u9879\u6570\u5b57\u90fd\u662f\u524d\u9762\u4e24\u9879\u6570\u5b57\u7684\u548c\u3002\u4e5f\u5c31\u662f\uff1a F(0) = 0, F(1) = 1 F(N) = F(N - 1) + F(N - 2), \u5176\u4e2d N > 1. \u7ed9\u5b9a N \uff0c\u8ba1\u7b97 F(N) \u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165\uff1a2 \u8f93\u51fa\uff1a1 \u89e3\u91ca\uff1aF(2) = F(1) + F(0) = 1 + 0 = 1. \u793a\u4f8b 2\uff1a \u8f93\u5165\uff1a3 \u8f93\u51fa\uff1a2 \u89e3\u91ca\uff1aF(3) = F(2) + F(1) = 1 + 1 = 2. \u793a\u4f8b 3\uff1a \u8f93\u5165\uff1a4 \u8f93\u51fa\uff1a3 \u89e3\u91ca\uff1aF(4) = F(3) + F(2) = 2 + 1 = 3. \u63d0\u793a\uff1a 0\\leq N\\leq30 0\\leq N\\leq30 Reference \u9898\u89e3 \u00b6 \u9012\u5f52 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u653e\u5386\u53f2\u7ed3\u679c\uff0c\u52a0\u901f\u9012\u5f52\u8ba1\u7b97 \u4ee3\u7801\u5982\u4e0b\uff1a int fib_cache ( int N , int ** cache , int * lenCache , int * fullCache ){ if ( ! N ) return 0 ; if ( ! ( * cache )) { * lenCache = 2 ; * fullCache = N + 1 ; * cache = ( int * ) memset ( malloc ( sizeof ( int ) * * fullCache ), 0 , sizeof ( int ) * * fullCache ); ( * cache )[ 0 ] = 1 ; ( * cache )[ 1 ] = 1 ; } if ( N > * lenCache && N <= * fullCache ) ( * cache )[ N -1 ] = fib_cache ( N - 1 , cache , lenCache , fullCache ) + fib_cache ( N - 2 , cache , lenCache , fullCache ); * lenCache = N ; return ( * cache )[ N - 1 ]; } int fib ( int N ){ int * cache = NULL , lenCache = 0 , fullCache = 0 ; return fib_cache ( N , & cache , & lenCache , & fullCache ); } \u8fed\u4ee3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u6839\u636e\u5b9a\u4e49\u63a8\u7b97\u6590\u6ce2\u90a3\u5951\u6570 \u4ee3\u7801\u5982\u4e0b\uff1a int fib ( int N ){ int ret = 0 , next = 1 , tmp ; while ( N ) { tmp = ret ; ret = next ; next = ret + tmp ; N -- ; } return ret ; }","title":"509. \u6590\u6ce2\u90a3\u5951\u6570"},{"location":"coding/leetcode/509.html#509","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"509. \u6590\u6ce2\u90a3\u5951\u6570"},{"location":"coding/leetcode/509.html#_1","text":"\u6590\u6ce2\u90a3\u5951\u6570\uff0c\u901a\u5e38\u7528 F(n) \u8868\u793a\uff0c\u5f62\u6210\u7684\u5e8f\u5217\u79f0\u4e3a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u3002\u8be5\u6570\u5217\u7531 0 \u548c 1 \u5f00\u59cb\uff0c\u540e\u9762\u7684\u6bcf\u4e00\u9879\u6570\u5b57\u90fd\u662f\u524d\u9762\u4e24\u9879\u6570\u5b57\u7684\u548c\u3002\u4e5f\u5c31\u662f\uff1a F(0) = 0, F(1) = 1 F(N) = F(N - 1) + F(N - 2), \u5176\u4e2d N > 1. \u7ed9\u5b9a N \uff0c\u8ba1\u7b97 F(N) \u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165\uff1a2 \u8f93\u51fa\uff1a1 \u89e3\u91ca\uff1aF(2) = F(1) + F(0) = 1 + 0 = 1. \u793a\u4f8b 2\uff1a \u8f93\u5165\uff1a3 \u8f93\u51fa\uff1a2 \u89e3\u91ca\uff1aF(3) = F(2) + F(1) = 1 + 1 = 2. \u793a\u4f8b 3\uff1a \u8f93\u5165\uff1a4 \u8f93\u51fa\uff1a3 \u89e3\u91ca\uff1aF(4) = F(3) + F(2) = 2 + 1 = 3. \u63d0\u793a\uff1a 0\\leq N\\leq30 0\\leq N\\leq30 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/509.html#_2","text":"","title":"\u9898\u89e3"},{"location":"coding/leetcode/509.html#_3","text":"\u57fa\u672c\u601d\u8def\uff1a \u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u653e\u5386\u53f2\u7ed3\u679c\uff0c\u52a0\u901f\u9012\u5f52\u8ba1\u7b97 \u4ee3\u7801\u5982\u4e0b\uff1a int fib_cache ( int N , int ** cache , int * lenCache , int * fullCache ){ if ( ! N ) return 0 ; if ( ! ( * cache )) { * lenCache = 2 ; * fullCache = N + 1 ; * cache = ( int * ) memset ( malloc ( sizeof ( int ) * * fullCache ), 0 , sizeof ( int ) * * fullCache ); ( * cache )[ 0 ] = 1 ; ( * cache )[ 1 ] = 1 ; } if ( N > * lenCache && N <= * fullCache ) ( * cache )[ N -1 ] = fib_cache ( N - 1 , cache , lenCache , fullCache ) + fib_cache ( N - 2 , cache , lenCache , fullCache ); * lenCache = N ; return ( * cache )[ N - 1 ]; } int fib ( int N ){ int * cache = NULL , lenCache = 0 , fullCache = 0 ; return fib_cache ( N , & cache , & lenCache , & fullCache ); }","title":"\u9012\u5f52"},{"location":"coding/leetcode/509.html#_4","text":"\u57fa\u672c\u601d\u8def\uff1a \u6839\u636e\u5b9a\u4e49\u63a8\u7b97\u6590\u6ce2\u90a3\u5951\u6570 \u4ee3\u7801\u5982\u4e0b\uff1a int fib ( int N ){ int ret = 0 , next = 1 , tmp ; while ( N ) { tmp = ret ; ret = next ; next = ret + tmp ; N -- ; } return ret ; }","title":"\u8fed\u4ee3"},{"location":"coding/leetcode/66.html","text":"66. \u52a0\u4e00 \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u7531\u6574\u6570\u7ec4\u6210\u7684\u975e\u7a7a\u6570\u7ec4\u6240\u8868\u793a\u7684\u975e\u8d1f\u6574\u6570\uff0c\u5728\u8be5\u6570\u7684\u57fa\u7840\u4e0a\u52a0\u4e00\u3002 \u6700\u9ad8\u4f4d\u6570\u5b57\u5b58\u653e\u5728\u6570\u7ec4\u7684\u9996\u4f4d\uff0c \u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u53ea\u5b58\u50a8\u5355\u4e2a\u6570\u5b57\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe\u9664\u4e86\u6574\u6570 0 \u4e4b\u5916\uff0c\u8fd9\u4e2a\u6574\u6570\u4e0d\u4f1a\u4ee5\u96f6\u5f00\u5934\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: [1,2,3] \u8f93\u51fa: [1,2,4] \u89e3\u91ca: \u8f93\u5165\u6570\u7ec4\u8868\u793a\u6570\u5b57 123\u3002 \u793a\u4f8b 2\uff1a \u8f93\u5165: [4,3,2,1] \u8f93\u51fa: [4,3,2,2] \u89e3\u91ca: \u8f93\u5165\u6570\u7ec4\u8868\u793a\u6570\u5b57 4321\u3002 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u4ece\u6700\u540e\u4e00\u4f4d\u5f00\u59cb\u52a0\uff0c\u5411\u524d\u5904\u7406\u8fdb\u4f4d\u3002\u6ce8\u610f9999+1\u7684\u7279\u6b8a\u60c5\u51b5\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Note: The returned array must be malloced, assume caller calls free(). */ int * plusOne ( int * digits , int digitsSize , int * returnSize ){ int * ret = ( int * ) malloc ( sizeof ( int ) * ( digitsSize + 1 )), i = digitsSize , add = 1 ; * ret = 0 ; memcpy ( ret + 1 , digits , sizeof ( int ) * digitsSize ); for ( i = digitsSize ; i >= 0 && add ; i -- ) { if ( add = ret [ i ] == 9 ) ret [ i ] = 0 ; else ret [ i ] ++ ; } * returnSize = ( i + 1 ) ? digitsSize : digitsSize + 1 ; return ret + (( i + 1 ) ? 1 : 0 ); }","title":"66. \u52a0\u4e00"},{"location":"coding/leetcode/66.html#66","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"66. \u52a0\u4e00"},{"location":"coding/leetcode/66.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u7531\u6574\u6570\u7ec4\u6210\u7684\u975e\u7a7a\u6570\u7ec4\u6240\u8868\u793a\u7684\u975e\u8d1f\u6574\u6570\uff0c\u5728\u8be5\u6570\u7684\u57fa\u7840\u4e0a\u52a0\u4e00\u3002 \u6700\u9ad8\u4f4d\u6570\u5b57\u5b58\u653e\u5728\u6570\u7ec4\u7684\u9996\u4f4d\uff0c \u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u53ea\u5b58\u50a8\u5355\u4e2a\u6570\u5b57\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe\u9664\u4e86\u6574\u6570 0 \u4e4b\u5916\uff0c\u8fd9\u4e2a\u6574\u6570\u4e0d\u4f1a\u4ee5\u96f6\u5f00\u5934\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: [1,2,3] \u8f93\u51fa: [1,2,4] \u89e3\u91ca: \u8f93\u5165\u6570\u7ec4\u8868\u793a\u6570\u5b57 123\u3002 \u793a\u4f8b 2\uff1a \u8f93\u5165: [4,3,2,1] \u8f93\u51fa: [4,3,2,2] \u89e3\u91ca: \u8f93\u5165\u6570\u7ec4\u8868\u793a\u6570\u5b57 4321\u3002 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/66.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u4ece\u6700\u540e\u4e00\u4f4d\u5f00\u59cb\u52a0\uff0c\u5411\u524d\u5904\u7406\u8fdb\u4f4d\u3002\u6ce8\u610f9999+1\u7684\u7279\u6b8a\u60c5\u51b5\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Note: The returned array must be malloced, assume caller calls free(). */ int * plusOne ( int * digits , int digitsSize , int * returnSize ){ int * ret = ( int * ) malloc ( sizeof ( int ) * ( digitsSize + 1 )), i = digitsSize , add = 1 ; * ret = 0 ; memcpy ( ret + 1 , digits , sizeof ( int ) * digitsSize ); for ( i = digitsSize ; i >= 0 && add ; i -- ) { if ( add = ret [ i ] == 9 ) ret [ i ] = 0 ; else ret [ i ] ++ ; } * returnSize = ( i + 1 ) ? digitsSize : digitsSize + 1 ; return ret + (( i + 1 ) ? 1 : 0 ); }","title":"\u9898\u89e3"},{"location":"coding/leetcode/7.html","text":"7. \u6574\u6570\u53cd\u8f6c \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7ed9\u51fa\u4e00\u4e2a 32 \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570\uff0c\u4f60\u9700\u8981\u5c06\u8fd9\u4e2a\u6574\u6570\u4e2d\u6bcf\u4f4d\u4e0a\u7684\u6570\u5b57\u8fdb\u884c\u53cd\u8f6c\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: 123 \u8f93\u51fa: 321 \u793a\u4f8b 2\uff1a \u8f93\u5165: -123 \u8f93\u51fa: -321 \u793a\u4f8b 3\uff1a \u8f93\u5165: 120 \u8f93\u51fa: 21 \u6ce8\u610f\uff1a \u5047\u8bbe\u6211\u4eec\u7684\u73af\u5883\u53ea\u80fd\u5b58\u50a8\u5f97\u4e0b 32 \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570\uff0c\u5219\u5176\u6570\u503c\u8303\u56f4\u4e3a [\u22122^{31}, 2^{31} \u2212 1] [\u22122^{31}, 2^{31} \u2212 1] \u3002\u8bf7\u6839\u636e\u8fd9\u4e2a\u5047\u8bbe\uff0c\u5982\u679c\u53cd\u8f6c\u540e\u6574\u6570\u6ea2\u51fa\u90a3\u4e48\u5c31\u8fd4\u56de 0\u3002 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u6bcf\u4e00\u6b21\u4ece\u53f3\u4fa7\u63d0\u53d6\u51fa\u6700\u540e\u4e00\u4f4d\u52a0\u5230\u7ed3\u679c\u7684\u53f3\u4fa7\u3002\u6ce8\u610f\u8d1f\u6570 -2147483648 \u5728 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u73af\u5883\u4e0b\u4e0d\u80fd\u53d6\u8d1f\uff0c\u5c06\u4e2d\u95f4\u53d8\u91cf\u58f0\u660e\u4e3a long \u5373\u53ef\u89e3\u51b3\u3002 int reverse ( int x ){ long ret = 0 , testcase = x ; testcase = testcase > 0 ? testcase : - testcase ; while ( testcase ) { ret *= 10 ; ret += testcase % 10 ; testcase /= 10 ; } return (( ret >> 31 ) ? 0 : ret ) * ( x > 0 ? 1 : -1 ); }","title":"7. \u6574\u6570\u53cd\u8f6c"},{"location":"coding/leetcode/7.html#7","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"7. \u6574\u6570\u53cd\u8f6c"},{"location":"coding/leetcode/7.html#_1","text":"\u7ed9\u51fa\u4e00\u4e2a 32 \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570\uff0c\u4f60\u9700\u8981\u5c06\u8fd9\u4e2a\u6574\u6570\u4e2d\u6bcf\u4f4d\u4e0a\u7684\u6570\u5b57\u8fdb\u884c\u53cd\u8f6c\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: 123 \u8f93\u51fa: 321 \u793a\u4f8b 2\uff1a \u8f93\u5165: -123 \u8f93\u51fa: -321 \u793a\u4f8b 3\uff1a \u8f93\u5165: 120 \u8f93\u51fa: 21 \u6ce8\u610f\uff1a \u5047\u8bbe\u6211\u4eec\u7684\u73af\u5883\u53ea\u80fd\u5b58\u50a8\u5f97\u4e0b 32 \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570\uff0c\u5219\u5176\u6570\u503c\u8303\u56f4\u4e3a [\u22122^{31}, 2^{31} \u2212 1] [\u22122^{31}, 2^{31} \u2212 1] \u3002\u8bf7\u6839\u636e\u8fd9\u4e2a\u5047\u8bbe\uff0c\u5982\u679c\u53cd\u8f6c\u540e\u6574\u6570\u6ea2\u51fa\u90a3\u4e48\u5c31\u8fd4\u56de 0\u3002 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/7.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u6bcf\u4e00\u6b21\u4ece\u53f3\u4fa7\u63d0\u53d6\u51fa\u6700\u540e\u4e00\u4f4d\u52a0\u5230\u7ed3\u679c\u7684\u53f3\u4fa7\u3002\u6ce8\u610f\u8d1f\u6570 -2147483648 \u5728 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u73af\u5883\u4e0b\u4e0d\u80fd\u53d6\u8d1f\uff0c\u5c06\u4e2d\u95f4\u53d8\u91cf\u58f0\u660e\u4e3a long \u5373\u53ef\u89e3\u51b3\u3002 int reverse ( int x ){ long ret = 0 , testcase = x ; testcase = testcase > 0 ? testcase : - testcase ; while ( testcase ) { ret *= 10 ; ret += testcase % 10 ; testcase /= 10 ; } return (( ret >> 31 ) ? 0 : ret ) * ( x > 0 ? 1 : -1 ); }","title":"\u9898\u89e3"},{"location":"coding/leetcode/70.html","text":"70. \u722c\u697c\u68af \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u5047\u8bbe\u4f60\u6b63\u5728\u722c\u697c\u68af\u3002\u9700\u8981 n \u9636\u4f60\u624d\u80fd\u5230\u8fbe\u697c\u9876\u3002 \u6bcf\u6b21\u4f60\u53ef\u4ee5\u722c 1 \u6216 2 \u4e2a\u53f0\u9636\u3002\u4f60\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u5462\uff1f \u6ce8\u610f\uff1a\u7ed9\u5b9a n \u662f\u4e00\u4e2a\u6b63\u6574\u6570\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165\uff1a 2 \u8f93\u51fa\uff1a 2 \u89e3\u91ca\uff1a \u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u3002 1. 1 \u9636 + 1 \u9636 2. 2 \u9636 \u793a\u4f8b 2\uff1a \u8f93\u5165\uff1a 3 \u8f93\u51fa\uff1a 3 \u89e3\u91ca\uff1a \u6709\u4e09\u79cd\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u3002 1. 1 \u9636 + 1 \u9636 + 1 \u9636 2. 1 \u9636 + 2 \u9636 3. 2 \u9636 + 1 \u9636 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u50a8\u4e34\u65f6\u7ed3\u679c\uff0c\u9012\u5f52\u8ba1\u7b97\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a int climbStairs_cache ( int n , int ** cache ) { if ( n <= 2 ) return n ; if ( * cache == NULL ) * cache = memset ( malloc ( sizeof ( int ) * n ), 0 , sizeof ( int ) * n ); if ( ! ( * cache )[ n - 1 ]) ( * cache )[ n - 1 ] = climbStairs_cache ( n - 1 , cache ) + climbStairs_cache ( n - 2 , cache ); return ( * cache )[ n - 1 ]; } int climbStairs ( int n ){ int * cache = NULL ; return climbStairs_cache ( n , & cache ); }","title":"70. \u722c\u697c\u68af"},{"location":"coding/leetcode/70.html#70","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"70. \u722c\u697c\u68af"},{"location":"coding/leetcode/70.html#_1","text":"\u5047\u8bbe\u4f60\u6b63\u5728\u722c\u697c\u68af\u3002\u9700\u8981 n \u9636\u4f60\u624d\u80fd\u5230\u8fbe\u697c\u9876\u3002 \u6bcf\u6b21\u4f60\u53ef\u4ee5\u722c 1 \u6216 2 \u4e2a\u53f0\u9636\u3002\u4f60\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u5462\uff1f \u6ce8\u610f\uff1a\u7ed9\u5b9a n \u662f\u4e00\u4e2a\u6b63\u6574\u6570\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165\uff1a 2 \u8f93\u51fa\uff1a 2 \u89e3\u91ca\uff1a \u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u3002 1. 1 \u9636 + 1 \u9636 2. 2 \u9636 \u793a\u4f8b 2\uff1a \u8f93\u5165\uff1a 3 \u8f93\u51fa\uff1a 3 \u89e3\u91ca\uff1a \u6709\u4e09\u79cd\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u3002 1. 1 \u9636 + 1 \u9636 + 1 \u9636 2. 1 \u9636 + 2 \u9636 3. 2 \u9636 + 1 \u9636 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/70.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u50a8\u4e34\u65f6\u7ed3\u679c\uff0c\u9012\u5f52\u8ba1\u7b97\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a int climbStairs_cache ( int n , int ** cache ) { if ( n <= 2 ) return n ; if ( * cache == NULL ) * cache = memset ( malloc ( sizeof ( int ) * n ), 0 , sizeof ( int ) * n ); if ( ! ( * cache )[ n - 1 ]) ( * cache )[ n - 1 ] = climbStairs_cache ( n - 1 , cache ) + climbStairs_cache ( n - 2 , cache ); return ( * cache )[ n - 1 ]; } int climbStairs ( int n ){ int * cache = NULL ; return climbStairs_cache ( n , & cache ); }","title":"\u9898\u89e3"},{"location":"coding/leetcode/779.html","text":"779. \u7b2cK\u4e2a\u8bed\u6cd5\u7b26\u53f7 \u00b6 \u96be\u5ea6\uff1a \u4e2d\u7b49 \u9898\u76ee \u00b6 \u5728\u7b2c\u4e00\u884c\u6211\u4eec\u5199\u4e0a\u4e00\u4e2a 0 \u3002\u63a5\u4e0b\u6765\u7684\u6bcf\u4e00\u884c\uff0c\u5c06\u524d\u4e00\u884c\u4e2d\u7684 0 \u66ff\u6362\u4e3a 01 \uff0c 1 \u66ff\u6362\u4e3a 10 \u3002 \u7ed9\u5b9a\u884c\u6570 N \u548c\u5e8f\u6570 K \uff0c\u8fd4\u56de\u7b2c N \u884c\u4e2d\u7b2c K \u4e2a\u5b57\u7b26\u3002\uff08 K \u4ece 1 \u5f00\u59cb\uff09 \u4f8b\u5b50: \u8f93\u5165: N = 1, K = 1 \u8f93\u51fa: 0 \u8f93\u5165: N = 2, K = 1 \u8f93\u51fa: 0 \u8f93\u5165: N = 2, K = 2 \u8f93\u51fa: 1 \u8f93\u5165: N = 4, K = 5 \u8f93\u51fa: 1 \u89e3\u91ca: \u7b2c\u4e00\u884c: 0 \u7b2c\u4e8c\u884c: 01 \u7b2c\u4e09\u884c: 0110 \u7b2c\u56db\u884c: 01101001 \u6ce8\u610f\uff1a N \u7684\u8303\u56f4 [1, 30] . K \u7684\u8303\u56f4 [1, 2^(N-1)] . Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u6ce8\u610f\u5230\u6bcf\u4e2a\u7ed3\u679c\u5b57\u7b26\u4e32\u53ef\u4ee5\u5206\u4e3a4\u4e2a\u7b49\u957f\u7684\u90e8\u5206\uff0c\u5176\u4e2d\u7b2c1\u30014\u90e8\u5206\u76f8\u540c\uff0c2\u30013\u90e8\u5206\u76f8\u540c\uff0c\u4e24\u7ec4\u7684\u4e8c\u8fdb\u5236\u4e92\u8865\u3002\u540c\u65f6\uff0c\u4efb\u610f\u4e00\u884c\u4ee5\u4e2d\u70b9\u4e3a\u754c\uff0c\u5de6\u53f3\u4e24\u4fa7\u4e92\u8865\u3002\u56e0\u6b64\u53ea\u9700\u8981\u5728\u5de6\u4fa7\u8fdb\u884c\u67e5\u627e\uff0c\u53f3\u4fa7\u90e8\u5206\u53d6\u53cd\u5373\u53ef\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a int kthGrammar ( int N , int K ) { if ( N == 1 ) return 0 ; int unit = 1 << ( N - 2 ); return ! ( K <= unit ) ^ kthGrammar ( N - 1 , (( K - 1 ) & ( unit - 1 )) + 1 ); }","title":"779. \u7b2cK\u4e2a\u8bed\u6cd5\u7b26\u53f7"},{"location":"coding/leetcode/779.html#779-k","text":"\u96be\u5ea6\uff1a \u4e2d\u7b49","title":"779. \u7b2cK\u4e2a\u8bed\u6cd5\u7b26\u53f7"},{"location":"coding/leetcode/779.html#_1","text":"\u5728\u7b2c\u4e00\u884c\u6211\u4eec\u5199\u4e0a\u4e00\u4e2a 0 \u3002\u63a5\u4e0b\u6765\u7684\u6bcf\u4e00\u884c\uff0c\u5c06\u524d\u4e00\u884c\u4e2d\u7684 0 \u66ff\u6362\u4e3a 01 \uff0c 1 \u66ff\u6362\u4e3a 10 \u3002 \u7ed9\u5b9a\u884c\u6570 N \u548c\u5e8f\u6570 K \uff0c\u8fd4\u56de\u7b2c N \u884c\u4e2d\u7b2c K \u4e2a\u5b57\u7b26\u3002\uff08 K \u4ece 1 \u5f00\u59cb\uff09 \u4f8b\u5b50: \u8f93\u5165: N = 1, K = 1 \u8f93\u51fa: 0 \u8f93\u5165: N = 2, K = 1 \u8f93\u51fa: 0 \u8f93\u5165: N = 2, K = 2 \u8f93\u51fa: 1 \u8f93\u5165: N = 4, K = 5 \u8f93\u51fa: 1 \u89e3\u91ca: \u7b2c\u4e00\u884c: 0 \u7b2c\u4e8c\u884c: 01 \u7b2c\u4e09\u884c: 0110 \u7b2c\u56db\u884c: 01101001 \u6ce8\u610f\uff1a N \u7684\u8303\u56f4 [1, 30] . K \u7684\u8303\u56f4 [1, 2^(N-1)] . Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/779.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u6ce8\u610f\u5230\u6bcf\u4e2a\u7ed3\u679c\u5b57\u7b26\u4e32\u53ef\u4ee5\u5206\u4e3a4\u4e2a\u7b49\u957f\u7684\u90e8\u5206\uff0c\u5176\u4e2d\u7b2c1\u30014\u90e8\u5206\u76f8\u540c\uff0c2\u30013\u90e8\u5206\u76f8\u540c\uff0c\u4e24\u7ec4\u7684\u4e8c\u8fdb\u5236\u4e92\u8865\u3002\u540c\u65f6\uff0c\u4efb\u610f\u4e00\u884c\u4ee5\u4e2d\u70b9\u4e3a\u754c\uff0c\u5de6\u53f3\u4e24\u4fa7\u4e92\u8865\u3002\u56e0\u6b64\u53ea\u9700\u8981\u5728\u5de6\u4fa7\u8fdb\u884c\u67e5\u627e\uff0c\u53f3\u4fa7\u90e8\u5206\u53d6\u53cd\u5373\u53ef\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a int kthGrammar ( int N , int K ) { if ( N == 1 ) return 0 ; int unit = 1 << ( N - 2 ); return ! ( K <= unit ) ^ kthGrammar ( N - 1 , (( K - 1 ) & ( unit - 1 )) + 1 ); }","title":"\u9898\u89e3"},{"location":"coding/leetcode/8.html","text":"8. \u5b57\u7b26\u4e32\u8f6c\u6362\u6574\u6570 (atoi) \u00b6 \u96be\u5ea6\uff1a \u4e2d\u7b49 \u9898\u76ee \u00b6 \u8bf7\u4f60\u6765\u5b9e\u73b0\u4e00\u4e2a atoi \u51fd\u6570\uff0c\u4f7f\u5176\u80fd\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570\u3002 \u9996\u5148\uff0c\u8be5\u51fd\u6570\u4f1a\u6839\u636e\u9700\u8981\u4e22\u5f03\u65e0\u7528\u7684\u5f00\u5934\u7a7a\u683c\u5b57\u7b26\uff0c\u76f4\u5230\u5bfb\u627e\u5230\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u7684\u5b57\u7b26\u4e3a\u6b62\u3002\u63a5\u4e0b\u6765\u7684\u8f6c\u5316\u89c4\u5219\u5982\u4e0b\uff1a \u5982\u679c\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u4e3a\u6b63\u6216\u8005\u8d1f\u53f7\u65f6\uff0c\u5219\u5c06\u8be5\u7b26\u53f7\u4e0e\u4e4b\u540e\u9762\u5c3d\u53ef\u80fd\u591a\u7684\u8fde\u7eed\u6570\u5b57\u5b57\u7b26\u7ec4\u5408\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u6709\u7b26\u53f7\u6574\u6570\u3002 \u5047\u5982\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u662f\u6570\u5b57\uff0c\u5219\u76f4\u63a5\u5c06\u5176\u4e0e\u4e4b\u540e\u8fde\u7eed\u7684\u6570\u5b57\u5b57\u7b26\u7ec4\u5408\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u6574\u6570\u3002 \u8be5\u5b57\u7b26\u4e32\u5728\u6709\u6548\u7684\u6574\u6570\u90e8\u5206\u4e4b\u540e\u4e5f\u53ef\u80fd\u4f1a\u5b58\u5728\u591a\u4f59\u7684\u5b57\u7b26\uff0c\u90a3\u4e48\u8fd9\u4e9b\u5b57\u7b26\u53ef\u4ee5\u88ab\u5ffd\u7565\uff0c\u5b83\u4eec\u5bf9\u51fd\u6570\u4e0d\u5e94\u8be5\u9020\u6210\u5f71\u54cd\u3002 \u6ce8\u610f\uff1a\u5047\u5982\u8be5\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u5b57\u7b26\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u6574\u6570\u5b57\u7b26\u3001\u5b57\u7b26\u4e32\u4e3a\u7a7a\u6216\u5b57\u7b26\u4e32\u4ec5\u5305\u542b\u7a7a\u767d\u5b57\u7b26\u65f6\uff0c\u5219\u4f60\u7684\u51fd\u6570\u4e0d\u9700\u8981\u8fdb\u884c\u8f6c\u6362\uff0c\u5373\u65e0\u6cd5\u8fdb\u884c\u6709\u6548\u8f6c\u6362\u3002 \u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u82e5\u51fd\u6570\u4e0d\u80fd\u8fdb\u884c\u6709\u6548\u7684\u8f6c\u6362\u65f6\uff0c\u8bf7\u8fd4\u56de 0 \u3002 \u63d0\u793a\uff1a \u672c\u9898\u4e2d\u7684\u7a7a\u767d\u5b57\u7b26\u53ea\u5305\u62ec\u7a7a\u683c\u5b57\u7b26 ' ' \u3002 \u5047\u8bbe\u6211\u4eec\u7684\u73af\u5883\u53ea\u80fd\u5b58\u50a8 32 \u4f4d\u5927\u5c0f\u7684\u6709\u7b26\u53f7\u6574\u6570\uff0c\u90a3\u4e48\u5176\u6570\u503c\u8303\u56f4\u4e3a [\u22122^{31}, 2^{31} \u2212 1] [\u22122^{31}, 2^{31} \u2212 1] \u3002\u5982\u679c\u6570\u503c\u8d85\u8fc7\u8fd9\u4e2a\u8303\u56f4\uff0c\u8bf7\u8fd4\u56de INT_MAX ( 2^{31} \u2212 1 2^{31} \u2212 1 )\u6216 INT_MIN ( \u22122^{31} \u22122^{31} ) \u3002 \u793a\u4f8b 1: \u8f93\u5165: \"42\" \u8f93\u51fa: 42 \u793a\u4f8b 2: \u8f93\u5165: \" -42\" \u8f93\u51fa: -42 \u89e3\u91ca: \u7b2c\u4e00\u4e2a\u975e\u7a7a\u767d\u5b57\u7b26\u4e3a '-', \u5b83\u662f\u4e00\u4e2a\u8d1f\u53f7\u3002 \u6211\u4eec\u5c3d\u53ef\u80fd\u5c06\u8d1f\u53f7\u4e0e\u540e\u9762\u6240\u6709\u8fde\u7eed\u51fa\u73b0\u7684\u6570\u5b57\u7ec4\u5408\u8d77\u6765\uff0c\u6700\u540e\u5f97\u5230 -42 \u3002 \u793a\u4f8b 3: \u8f93\u5165: \"4193 with words\" \u8f93\u51fa: 4193 \u89e3\u91ca: \u8f6c\u6362\u622a\u6b62\u4e8e\u6570\u5b57 '3' \uff0c\u56e0\u4e3a\u5b83\u7684\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e0d\u4e3a\u6570\u5b57\u3002 \u793a\u4f8b 4: \u8f93\u5165: \"words and 987\" \u8f93\u51fa: 0 \u89e3\u91ca: \u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u662f 'w', \u4f46\u5b83\u4e0d\u662f\u6570\u5b57\u6216\u6b63\u3001\u8d1f\u53f7\u3002 \u56e0\u6b64\u65e0\u6cd5\u6267\u884c\u6709\u6548\u7684\u8f6c\u6362\u3002 \u793a\u4f8b 5: \u8f93\u5165: \"-91283472332\" \u8f93\u51fa: -2147483648 \u89e3\u91ca: \u6570\u5b57 \"-91283472332\" \u8d85\u8fc7 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u8303\u56f4\u3002 \u56e0\u6b64\u8fd4\u56de INT_MIN (\u2212231) \u3002 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u6ce8\u610f\u4e00\u4e2a\u6709\u6548\u7684\u6570\u5b57\u5b57\u7b26\u4e32\u53ef\u4ee5\u4ee5 0-9 \u3001 '-' \u3001 '+' \u548c\u7a7a\u683c ' ' \u5f00\u5934\u3002 \u4e3a\u4e86\u907f\u514d\u6ea2\u51fa\uff0c\u5e94\u5f53\u4f7f\u7528 long \u7c7b\u578b\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a int myAtoi ( char * str ){ int flag = 0 ; char * cur = str ; while ( * cur && * cur == ' ' ) cur ++ ; if ( * cur == '-' || * cur == '+' ) flag = * ( cur ++ ) - '+' ; if ( * cur < '0' || * cur > '9' ) return 0 ; long ret = 0 ; while ( * cur >= '0' && * cur <= '9' ) { ret *= 10 ; ret += * cur - '0' ; cur ++ ; if ( ret >= - ( long ) INT_MIN || ( ret == ( long ) INT_MAX && ! flag )) return flag ? INT_MIN : INT_MAX ; } return flag ? - ret : ret ; }","title":"8. \u5b57\u7b26\u4e32\u8f6c\u6362\u6574\u6570 (atoi)"},{"location":"coding/leetcode/8.html#8-atoi","text":"\u96be\u5ea6\uff1a \u4e2d\u7b49","title":"8. \u5b57\u7b26\u4e32\u8f6c\u6362\u6574\u6570 (atoi)"},{"location":"coding/leetcode/8.html#_1","text":"\u8bf7\u4f60\u6765\u5b9e\u73b0\u4e00\u4e2a atoi \u51fd\u6570\uff0c\u4f7f\u5176\u80fd\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570\u3002 \u9996\u5148\uff0c\u8be5\u51fd\u6570\u4f1a\u6839\u636e\u9700\u8981\u4e22\u5f03\u65e0\u7528\u7684\u5f00\u5934\u7a7a\u683c\u5b57\u7b26\uff0c\u76f4\u5230\u5bfb\u627e\u5230\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u7684\u5b57\u7b26\u4e3a\u6b62\u3002\u63a5\u4e0b\u6765\u7684\u8f6c\u5316\u89c4\u5219\u5982\u4e0b\uff1a \u5982\u679c\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u4e3a\u6b63\u6216\u8005\u8d1f\u53f7\u65f6\uff0c\u5219\u5c06\u8be5\u7b26\u53f7\u4e0e\u4e4b\u540e\u9762\u5c3d\u53ef\u80fd\u591a\u7684\u8fde\u7eed\u6570\u5b57\u5b57\u7b26\u7ec4\u5408\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u6709\u7b26\u53f7\u6574\u6570\u3002 \u5047\u5982\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u662f\u6570\u5b57\uff0c\u5219\u76f4\u63a5\u5c06\u5176\u4e0e\u4e4b\u540e\u8fde\u7eed\u7684\u6570\u5b57\u5b57\u7b26\u7ec4\u5408\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u6574\u6570\u3002 \u8be5\u5b57\u7b26\u4e32\u5728\u6709\u6548\u7684\u6574\u6570\u90e8\u5206\u4e4b\u540e\u4e5f\u53ef\u80fd\u4f1a\u5b58\u5728\u591a\u4f59\u7684\u5b57\u7b26\uff0c\u90a3\u4e48\u8fd9\u4e9b\u5b57\u7b26\u53ef\u4ee5\u88ab\u5ffd\u7565\uff0c\u5b83\u4eec\u5bf9\u51fd\u6570\u4e0d\u5e94\u8be5\u9020\u6210\u5f71\u54cd\u3002 \u6ce8\u610f\uff1a\u5047\u5982\u8be5\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u5b57\u7b26\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u6574\u6570\u5b57\u7b26\u3001\u5b57\u7b26\u4e32\u4e3a\u7a7a\u6216\u5b57\u7b26\u4e32\u4ec5\u5305\u542b\u7a7a\u767d\u5b57\u7b26\u65f6\uff0c\u5219\u4f60\u7684\u51fd\u6570\u4e0d\u9700\u8981\u8fdb\u884c\u8f6c\u6362\uff0c\u5373\u65e0\u6cd5\u8fdb\u884c\u6709\u6548\u8f6c\u6362\u3002 \u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u82e5\u51fd\u6570\u4e0d\u80fd\u8fdb\u884c\u6709\u6548\u7684\u8f6c\u6362\u65f6\uff0c\u8bf7\u8fd4\u56de 0 \u3002 \u63d0\u793a\uff1a \u672c\u9898\u4e2d\u7684\u7a7a\u767d\u5b57\u7b26\u53ea\u5305\u62ec\u7a7a\u683c\u5b57\u7b26 ' ' \u3002 \u5047\u8bbe\u6211\u4eec\u7684\u73af\u5883\u53ea\u80fd\u5b58\u50a8 32 \u4f4d\u5927\u5c0f\u7684\u6709\u7b26\u53f7\u6574\u6570\uff0c\u90a3\u4e48\u5176\u6570\u503c\u8303\u56f4\u4e3a [\u22122^{31}, 2^{31} \u2212 1] [\u22122^{31}, 2^{31} \u2212 1] \u3002\u5982\u679c\u6570\u503c\u8d85\u8fc7\u8fd9\u4e2a\u8303\u56f4\uff0c\u8bf7\u8fd4\u56de INT_MAX ( 2^{31} \u2212 1 2^{31} \u2212 1 )\u6216 INT_MIN ( \u22122^{31} \u22122^{31} ) \u3002 \u793a\u4f8b 1: \u8f93\u5165: \"42\" \u8f93\u51fa: 42 \u793a\u4f8b 2: \u8f93\u5165: \" -42\" \u8f93\u51fa: -42 \u89e3\u91ca: \u7b2c\u4e00\u4e2a\u975e\u7a7a\u767d\u5b57\u7b26\u4e3a '-', \u5b83\u662f\u4e00\u4e2a\u8d1f\u53f7\u3002 \u6211\u4eec\u5c3d\u53ef\u80fd\u5c06\u8d1f\u53f7\u4e0e\u540e\u9762\u6240\u6709\u8fde\u7eed\u51fa\u73b0\u7684\u6570\u5b57\u7ec4\u5408\u8d77\u6765\uff0c\u6700\u540e\u5f97\u5230 -42 \u3002 \u793a\u4f8b 3: \u8f93\u5165: \"4193 with words\" \u8f93\u51fa: 4193 \u89e3\u91ca: \u8f6c\u6362\u622a\u6b62\u4e8e\u6570\u5b57 '3' \uff0c\u56e0\u4e3a\u5b83\u7684\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e0d\u4e3a\u6570\u5b57\u3002 \u793a\u4f8b 4: \u8f93\u5165: \"words and 987\" \u8f93\u51fa: 0 \u89e3\u91ca: \u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u662f 'w', \u4f46\u5b83\u4e0d\u662f\u6570\u5b57\u6216\u6b63\u3001\u8d1f\u53f7\u3002 \u56e0\u6b64\u65e0\u6cd5\u6267\u884c\u6709\u6548\u7684\u8f6c\u6362\u3002 \u793a\u4f8b 5: \u8f93\u5165: \"-91283472332\" \u8f93\u51fa: -2147483648 \u89e3\u91ca: \u6570\u5b57 \"-91283472332\" \u8d85\u8fc7 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u8303\u56f4\u3002 \u56e0\u6b64\u8fd4\u56de INT_MIN (\u2212231) \u3002 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/8.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u6ce8\u610f\u4e00\u4e2a\u6709\u6548\u7684\u6570\u5b57\u5b57\u7b26\u4e32\u53ef\u4ee5\u4ee5 0-9 \u3001 '-' \u3001 '+' \u548c\u7a7a\u683c ' ' \u5f00\u5934\u3002 \u4e3a\u4e86\u907f\u514d\u6ea2\u51fa\uff0c\u5e94\u5f53\u4f7f\u7528 long \u7c7b\u578b\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a int myAtoi ( char * str ){ int flag = 0 ; char * cur = str ; while ( * cur && * cur == ' ' ) cur ++ ; if ( * cur == '-' || * cur == '+' ) flag = * ( cur ++ ) - '+' ; if ( * cur < '0' || * cur > '9' ) return 0 ; long ret = 0 ; while ( * cur >= '0' && * cur <= '9' ) { ret *= 10 ; ret += * cur - '0' ; cur ++ ; if ( ret >= - ( long ) INT_MIN || ( ret == ( long ) INT_MAX && ! flag )) return flag ? INT_MIN : INT_MAX ; } return flag ? - ret : ret ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/88.html","text":"88. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4 \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u7ed9\u4f60\u4e24\u4e2a\u6709\u5e8f\u6574\u6570\u6570\u7ec4 nums1 \u548c nums2 \uff0c\u8bf7\u4f60\u5c06 nums2 \u5408\u5e76\u5230 nums1 \u4e2d\uff0c\u4f7f nums1 \u6210\u4e3a\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\u3002 \u8bf4\u660e: \u521d\u59cb\u5316 nums1 \u548c nums2 \u7684\u5143\u7d20\u6570\u91cf\u5206\u522b\u4e3a m \u548c n \u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe nums1 \u6709\u8db3\u591f\u7684\u7a7a\u95f4\uff08\u7a7a\u95f4\u5927\u5c0f\u5927\u4e8e\u6216\u7b49\u4e8e m + n \uff09\u6765\u4fdd\u5b58 nums2 \u4e2d\u7684\u5143\u7d20\u3002 \u793a\u4f8b\uff1a \u8f93\u5165: nums1 = [1,2,3,0,0,0], m = 3 nums2 = [2,5,6], n = 3 \u8f93\u51fa: [1,2,2,3,5,6] Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u76f4\u63a5\u5728 nums1 \u7684\u5185\u5b58\u7a7a\u95f4\u4e0a\u4ece\u540e\u5411\u524d\u539f\u4f4d\u5408\u5e76\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a #define MAX(x, y) (x > y ? x : y) void merge ( int * nums1 , int nums1Size , int m , int * nums2 , int nums2Size , int n ){ int x = m - 1 , y = n - 1 ; while ( y >= 0 && x >= 0 ) { nums1 [ x + y + 1 ] = MAX ( nums1 [ x ], nums2 [ y ]); if ( nums1 [ x ] > nums2 [ y ]) x -- ; else y -- ; } if ( y >= 0 ) memcpy ( nums1 , nums2 , sizeof ( int ) * ( y + 1 )); }","title":"88. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4"},{"location":"coding/leetcode/88.html#88","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"88. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4"},{"location":"coding/leetcode/88.html#_1","text":"\u7ed9\u4f60\u4e24\u4e2a\u6709\u5e8f\u6574\u6570\u6570\u7ec4 nums1 \u548c nums2 \uff0c\u8bf7\u4f60\u5c06 nums2 \u5408\u5e76\u5230 nums1 \u4e2d\uff0c\u4f7f nums1 \u6210\u4e3a\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\u3002 \u8bf4\u660e: \u521d\u59cb\u5316 nums1 \u548c nums2 \u7684\u5143\u7d20\u6570\u91cf\u5206\u522b\u4e3a m \u548c n \u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe nums1 \u6709\u8db3\u591f\u7684\u7a7a\u95f4\uff08\u7a7a\u95f4\u5927\u5c0f\u5927\u4e8e\u6216\u7b49\u4e8e m + n \uff09\u6765\u4fdd\u5b58 nums2 \u4e2d\u7684\u5143\u7d20\u3002 \u793a\u4f8b\uff1a \u8f93\u5165: nums1 = [1,2,3,0,0,0], m = 3 nums2 = [2,5,6], n = 3 \u8f93\u51fa: [1,2,2,3,5,6] Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/88.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u76f4\u63a5\u5728 nums1 \u7684\u5185\u5b58\u7a7a\u95f4\u4e0a\u4ece\u540e\u5411\u524d\u539f\u4f4d\u5408\u5e76\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a #define MAX(x, y) (x > y ? x : y) void merge ( int * nums1 , int nums1Size , int m , int * nums2 , int nums2Size , int n ){ int x = m - 1 , y = n - 1 ; while ( y >= 0 && x >= 0 ) { nums1 [ x + y + 1 ] = MAX ( nums1 [ x ], nums2 [ y ]); if ( nums1 [ x ] > nums2 [ y ]) x -- ; else y -- ; } if ( y >= 0 ) memcpy ( nums1 , nums2 , sizeof ( int ) * ( y + 1 )); }","title":"\u9898\u89e3"},{"location":"coding/leetcode/9.html","text":"9. \u56de\u6587\u6570 \u00b6 \u96be\u5ea6\uff1a \u7b80\u5355 \u9898\u76ee \u00b6 \u5224\u65ad\u4e00\u4e2a\u6574\u6570\u662f\u5426\u662f\u56de\u6587\u6570\u3002\u56de\u6587\u6570\u662f\u6307\u6b63\u5e8f\uff08\u4ece\u5de6\u5411\u53f3\uff09\u548c\u5012\u5e8f\uff08\u4ece\u53f3\u5411\u5de6\uff09\u8bfb\u90fd\u662f\u4e00\u6837\u7684\u6574\u6570\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: 121 \u8f93\u51fa: true \u793a\u4f8b 2\uff1a \u8f93\u5165: -121 \u8f93\u51fa: false \u89e3\u91ca: \u4ece\u5de6\u5411\u53f3\u8bfb, \u4e3a -121 \u3002 \u4ece\u53f3\u5411\u5de6\u8bfb, \u4e3a 121- \u3002\u56e0\u6b64\u5b83\u4e0d\u662f\u4e00\u4e2a\u56de\u6587\u6570\u3002 \u793a\u4f8b 3\uff1a \u8f93\u5165: 10 \u8f93\u51fa: false \u89e3\u91ca: \u4ece\u53f3\u5411\u5de6\u8bfb, \u4e3a 01 \u3002\u56e0\u6b64\u5b83\u4e0d\u662f\u4e00\u4e2a\u56de\u6587\u6570\u3002 \u8fdb\u9636\uff1a \u4f60\u80fd\u4e0d\u5c06\u6574\u6570\u8f6c\u4e3a\u5b57\u7b26\u4e32\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u5c0f\u4e8e0\u7684\u6570\u5fc5\u7136\u4e0d\u662f\u56de\u6587\u6570\uff1b \u5bf9\u4e8e\u975e\u8d1f\u6574\u6570\uff0c\u53ea\u9700\u8981\u5224\u65ad\u6309\u4f4d\u53cd\u8f6c\u540e\u7684\u6570\u503c\u4e0e\u539f\u6570\u503c\u662f\u5426\u76f8\u7b49\u5373\u53ef\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a bool isPalindrome ( int x ){ if ( x < 0 ) return false ; long transformed = 0 , original = x ; while ( x ) { transformed *= 10 ; transformed += x % 10 ; x /= 10 ; } return transformed == original ; }","title":"9. \u56de\u6587\u6570"},{"location":"coding/leetcode/9.html#9","text":"\u96be\u5ea6\uff1a \u7b80\u5355","title":"9. \u56de\u6587\u6570"},{"location":"coding/leetcode/9.html#_1","text":"\u5224\u65ad\u4e00\u4e2a\u6574\u6570\u662f\u5426\u662f\u56de\u6587\u6570\u3002\u56de\u6587\u6570\u662f\u6307\u6b63\u5e8f\uff08\u4ece\u5de6\u5411\u53f3\uff09\u548c\u5012\u5e8f\uff08\u4ece\u53f3\u5411\u5de6\uff09\u8bfb\u90fd\u662f\u4e00\u6837\u7684\u6574\u6570\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: 121 \u8f93\u51fa: true \u793a\u4f8b 2\uff1a \u8f93\u5165: -121 \u8f93\u51fa: false \u89e3\u91ca: \u4ece\u5de6\u5411\u53f3\u8bfb, \u4e3a -121 \u3002 \u4ece\u53f3\u5411\u5de6\u8bfb, \u4e3a 121- \u3002\u56e0\u6b64\u5b83\u4e0d\u662f\u4e00\u4e2a\u56de\u6587\u6570\u3002 \u793a\u4f8b 3\uff1a \u8f93\u5165: 10 \u8f93\u51fa: false \u89e3\u91ca: \u4ece\u53f3\u5411\u5de6\u8bfb, \u4e3a 01 \u3002\u56e0\u6b64\u5b83\u4e0d\u662f\u4e00\u4e2a\u56de\u6587\u6570\u3002 \u8fdb\u9636\uff1a \u4f60\u80fd\u4e0d\u5c06\u6574\u6570\u8f6c\u4e3a\u5b57\u7b26\u4e32\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/9.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u5c0f\u4e8e0\u7684\u6570\u5fc5\u7136\u4e0d\u662f\u56de\u6587\u6570\uff1b \u5bf9\u4e8e\u975e\u8d1f\u6574\u6570\uff0c\u53ea\u9700\u8981\u5224\u65ad\u6309\u4f4d\u53cd\u8f6c\u540e\u7684\u6570\u503c\u4e0e\u539f\u6570\u503c\u662f\u5426\u76f8\u7b49\u5373\u53ef\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a bool isPalindrome ( int x ){ if ( x < 0 ) return false ; long transformed = 0 , original = x ; while ( x ) { transformed *= 10 ; transformed += x % 10 ; x /= 10 ; } return transformed == original ; }","title":"\u9898\u89e3"},{"location":"coding/leetcode/98.html","text":"98. \u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811 \u00b6 \u96be\u5ea6\uff1a \u4e2d\u7b49 \u9898\u76ee \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u5224\u65ad\u5176\u662f\u5426\u662f\u4e00\u4e2a\u6709\u6548\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u3002 \u5047\u8bbe\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811\u5177\u6709\u5982\u4e0b\u7279\u5f81\uff1a \u8282\u70b9\u7684\u5de6\u5b50\u6811\u53ea\u5305\u542b\u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u6570\u3002 \u8282\u70b9\u7684\u53f3\u5b50\u6811\u53ea\u5305\u542b\u5927\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u6570\u3002 \u6240\u6709\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u81ea\u8eab\u5fc5\u987b\u4e5f\u662f\u4e8c\u53c9\u641c\u7d22\u6811\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: 2 / \\ 1 3 \u8f93\u51fa: true \u793a\u4f8b 2\uff1a \u8f93\u5165: 5 / \\ 1 4 / \\ 3 6 \u8f93\u51fa: false \u89e3\u91ca: \u8f93\u5165\u4e3a: [5,1,4,null,null,3,6]\u3002 \u6839\u8282\u70b9\u7684\u503c\u4e3a 5 \uff0c\u4f46\u662f\u5176\u53f3\u5b50\u8282\u70b9\u503c\u4e3a 4 \u3002 Reference \u9898\u89e3 \u00b6 \u57fa\u672c\u601d\u8def\uff1a \u5c06\u4e8c\u53c9\u67e5\u627e\u6811\u4e2d\u5e8f\u5c55\u5f00\u4e3a\u94fe\u8868\uff0c\u5224\u65ad\u94fe\u8868\u662f\u5426\u662f\u6709\u5e8f\u7684\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Definition for a binary tree node. * struct TreeNode { * int val; * struct TreeNode *left; * struct TreeNode *right; * }; */ struct ListNode * insert ( struct ListNode * List , int val ) { struct ListNode * ret = malloc ( sizeof ( struct ListNode )); ret -> val = val ; ret -> next = List ; return ret ; } struct ListNode * toList ( struct TreeNode * root , struct ListNode * List ) { if ( root == NULL ) return List ; List = toList ( root -> right , List ); List = insert ( List , root -> val ); List = toList ( root -> left , List ); return List ; } bool isValidBST ( struct TreeNode * root ){ if ( root == NULL ) return true ; struct ListNode * rec = toList ( root , NULL ), * cur = rec ; do { if ( cur -> next == NULL ) break ; if ( cur -> val >= cur -> next -> val ) return false ; cur = cur -> next ; } while ( true ); return true ; }","title":"98. \u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811"},{"location":"coding/leetcode/98.html#98","text":"\u96be\u5ea6\uff1a \u4e2d\u7b49","title":"98. \u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811"},{"location":"coding/leetcode/98.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u5224\u65ad\u5176\u662f\u5426\u662f\u4e00\u4e2a\u6709\u6548\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u3002 \u5047\u8bbe\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811\u5177\u6709\u5982\u4e0b\u7279\u5f81\uff1a \u8282\u70b9\u7684\u5de6\u5b50\u6811\u53ea\u5305\u542b\u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u6570\u3002 \u8282\u70b9\u7684\u53f3\u5b50\u6811\u53ea\u5305\u542b\u5927\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u6570\u3002 \u6240\u6709\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u81ea\u8eab\u5fc5\u987b\u4e5f\u662f\u4e8c\u53c9\u641c\u7d22\u6811\u3002 \u793a\u4f8b 1\uff1a \u8f93\u5165: 2 / \\ 1 3 \u8f93\u51fa: true \u793a\u4f8b 2\uff1a \u8f93\u5165: 5 / \\ 1 4 / \\ 3 6 \u8f93\u51fa: false \u89e3\u91ca: \u8f93\u5165\u4e3a: [5,1,4,null,null,3,6]\u3002 \u6839\u8282\u70b9\u7684\u503c\u4e3a 5 \uff0c\u4f46\u662f\u5176\u53f3\u5b50\u8282\u70b9\u503c\u4e3a 4 \u3002 Reference","title":"\u9898\u76ee"},{"location":"coding/leetcode/98.html#_2","text":"\u57fa\u672c\u601d\u8def\uff1a \u5c06\u4e8c\u53c9\u67e5\u627e\u6811\u4e2d\u5e8f\u5c55\u5f00\u4e3a\u94fe\u8868\uff0c\u5224\u65ad\u94fe\u8868\u662f\u5426\u662f\u6709\u5e8f\u7684\u3002 \u4ee3\u7801\u5982\u4e0b\uff1a /** * Definition for a binary tree node. * struct TreeNode { * int val; * struct TreeNode *left; * struct TreeNode *right; * }; */ struct ListNode * insert ( struct ListNode * List , int val ) { struct ListNode * ret = malloc ( sizeof ( struct ListNode )); ret -> val = val ; ret -> next = List ; return ret ; } struct ListNode * toList ( struct TreeNode * root , struct ListNode * List ) { if ( root == NULL ) return List ; List = toList ( root -> right , List ); List = insert ( List , root -> val ); List = toList ( root -> left , List ); return List ; } bool isValidBST ( struct TreeNode * root ){ if ( root == NULL ) return true ; struct ListNode * rec = toList ( root , NULL ), * cur = rec ; do { if ( cur -> next == NULL ) break ; if ( cur -> val >= cur -> next -> val ) return false ; cur = cur -> next ; } while ( true ); return true ; }","title":"\u9898\u89e3"},{"location":"coding/python/killable-thread.html","text":"Python\u5173\u95ed\u7ebf\u7a0b \u00b6 \u4f7f\u7528 PyThreadState_SetAsyncExc \u51fd\u6570\u5728\u5b50\u7ebf\u7a0b\u4e2d\u5f15\u53d1\u5f02\u5e38\uff0c\u4ece\u800c\u4f7f\u7ebf\u7a0b\u63d0\u524d\u7ed3\u675f\u3002 \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a import threading import ctypes import time class thread_with_exception ( threading . Thread ): def __init__ ( self , name ): threading . Thread . __init__ ( self ) self . name = name def run ( self ): # target function of the thread class try : while True : print ( 'running ' + self . name ) finally : print ( 'ended' ) def get_id ( self ): # returns id of the respective thread if hasattr ( self , '_thread_id' ): return self . _thread_id for id , thread in threading . _active . items (): if thread is self : return id def raise_exception ( self ): thread_id = self . get_id () res = ctypes . pythonapi . PyThreadState_SetAsyncExc ( thread_id , ctypes . py_object ( SystemExit )) if res > 1 : ctypes . pythonapi . PyThreadState_SetAsyncExc ( thread_id , 0 ) print ( 'Exception raise failure' ) t1 = thread_with_exception ( 'Thread 1' ) t1 . start () time . sleep ( 2 ) t1 . raise_exception () t1 . join () \u628a run() \u4e2d\u6267\u884c\u7684\u64cd\u4f5c\u4ee5\u53c2\u6570\u7684\u5f62\u5f0f\u4f20\u9012\uff1a class KillableThread ( threading . Thread ): \"\"\" A thread class extending threading.Thread, provides a kill() method to stop the thread and a getResult() method to get the return value of the thread. \"\"\" def __init__ ( self , func : Callable , * args , ** kwargs ): super () . __init__ () self . func : Callable = func self . funcArg : dict = kwargs self . funcTup : Tuple = args self . result : Any = None self . exception : Any = None def run ( self ): \"\"\" Executes the function here \"\"\" try : self . result = self . func ( * self . funcTup , ** self . funcArg ) except BaseException as e : self . exception = e def get_id ( self ): \"\"\" Get the id of the thread \"\"\" if hasattr ( self , '_thread_id' ): return self . _thread_id for id , thread in threading . _active . items (): if thread is self : return id def kill ( self ): \"\"\" Stops the thread \"\"\" thread_id = self . get_id () res = ctypes . pythonapi . PyThreadState_SetAsyncExc ( thread_id , ctypes . py_object ( SystemExit )) if res > 1 : ctypes . pythonapi . PyThreadState_SetAsyncExc ( thread_id , 0 ) print ( 'Exception raise failure' ) def getResult ( self ): if self . exception is None : return self . result else : raise self . exception \u6765\u6e90\uff1a https://www.geeksforgeeks.org/python-different-ways-to-kill-a-thread","title":"\u5173\u95ed\u8fd0\u884c\u7684\u7ebf\u7a0b"},{"location":"coding/python/killable-thread.html#python","text":"\u4f7f\u7528 PyThreadState_SetAsyncExc \u51fd\u6570\u5728\u5b50\u7ebf\u7a0b\u4e2d\u5f15\u53d1\u5f02\u5e38\uff0c\u4ece\u800c\u4f7f\u7ebf\u7a0b\u63d0\u524d\u7ed3\u675f\u3002 \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a import threading import ctypes import time class thread_with_exception ( threading . Thread ): def __init__ ( self , name ): threading . Thread . __init__ ( self ) self . name = name def run ( self ): # target function of the thread class try : while True : print ( 'running ' + self . name ) finally : print ( 'ended' ) def get_id ( self ): # returns id of the respective thread if hasattr ( self , '_thread_id' ): return self . _thread_id for id , thread in threading . _active . items (): if thread is self : return id def raise_exception ( self ): thread_id = self . get_id () res = ctypes . pythonapi . PyThreadState_SetAsyncExc ( thread_id , ctypes . py_object ( SystemExit )) if res > 1 : ctypes . pythonapi . PyThreadState_SetAsyncExc ( thread_id , 0 ) print ( 'Exception raise failure' ) t1 = thread_with_exception ( 'Thread 1' ) t1 . start () time . sleep ( 2 ) t1 . raise_exception () t1 . join () \u628a run() \u4e2d\u6267\u884c\u7684\u64cd\u4f5c\u4ee5\u53c2\u6570\u7684\u5f62\u5f0f\u4f20\u9012\uff1a class KillableThread ( threading . Thread ): \"\"\" A thread class extending threading.Thread, provides a kill() method to stop the thread and a getResult() method to get the return value of the thread. \"\"\" def __init__ ( self , func : Callable , * args , ** kwargs ): super () . __init__ () self . func : Callable = func self . funcArg : dict = kwargs self . funcTup : Tuple = args self . result : Any = None self . exception : Any = None def run ( self ): \"\"\" Executes the function here \"\"\" try : self . result = self . func ( * self . funcTup , ** self . funcArg ) except BaseException as e : self . exception = e def get_id ( self ): \"\"\" Get the id of the thread \"\"\" if hasattr ( self , '_thread_id' ): return self . _thread_id for id , thread in threading . _active . items (): if thread is self : return id def kill ( self ): \"\"\" Stops the thread \"\"\" thread_id = self . get_id () res = ctypes . pythonapi . PyThreadState_SetAsyncExc ( thread_id , ctypes . py_object ( SystemExit )) if res > 1 : ctypes . pythonapi . PyThreadState_SetAsyncExc ( thread_id , 0 ) print ( 'Exception raise failure' ) def getResult ( self ): if self . exception is None : return self . result else : raise self . exception \u6765\u6e90\uff1a https://www.geeksforgeeks.org/python-different-ways-to-kill-a-thread","title":"Python\u5173\u95ed\u7ebf\u7a0b"},{"location":"latex/index.html","text":"LaTeX \u00b6 \u8bb0\u5f55LaTeX\u7684\u4f7f\u7528\u3002 LaTeX\u6570\u5b66\u516c\u5f0f LaTeX\u8bed\u53e5\u73af\u5883 \u4f7f\u7528LaTeX\u521b\u5efa\u5e7b\u706f\u7247","title":"\u76ee\u5f55"},{"location":"latex/index.html#latex","text":"\u8bb0\u5f55LaTeX\u7684\u4f7f\u7528\u3002 LaTeX\u6570\u5b66\u516c\u5f0f LaTeX\u8bed\u53e5\u73af\u5883 \u4f7f\u7528LaTeX\u521b\u5efa\u5e7b\u706f\u7247","title":"LaTeX"},{"location":"latex/cheatsheet.html","text":"LaTeX \u6570\u5b66\u516c\u5f0f \u00b6 \u6536\u96c6 \\LaTeX \\LaTeX \u5e38\u7528\u7684\u6570\u5b66\u516c\u5f0f\u547d\u4ee4 \u5b57\u6bcd\u53d8\u4f53 \u00b6 \u5e38\u7528\u547d\u4ee4\u6709\uff1a \\mathcal \u3001 \\mathbb \u3001 \\mathfrak \u3001 \\mathsf \u3001 \\mathbf \u3001 \\boldsymbol \u3001 \\mathit \u3001 \\mathrm \u7b49\u3002\u5176\u4e2d \\mathcal \u3001 \\mathbb \u4ec5\u9002\u7528\u4e8e\u5927\u5199\u5b57\u6bcd\uff0c\u5176\u4f59\u547d\u4ee4\u5927\u5199\u3001\u5c0f\u5199\u5b57\u6bcd\u901a\u7528 \\mathcal{A} \uff1a \\mathcal A \\mathcal A \\mathbb{A} \uff1a \\mathbb A \\mathbb A \\mathfrak{A} \uff1a \\mathfrak A \\mathfrak A \\mathsf{A} \uff1a \\mathsf A \\mathsf A \\mathbf{A} \uff1a \\mathbf A \\mathbf A \\boldsymbol{A} \uff1a \\boldsymbol A \\boldsymbol A \\mathit{A} \uff1a \\mathit A \\mathit A \uff08\u65e0\u6548\u679c\uff09 \\mathrm{A} \uff1a \\mathrm A \\mathrm A \\mathscr{A} \uff1a \\mathscr A \\mathscr A \uff08\u9700\u8981\u5f15\u5165\u5b8f\u5305 mathrsfs \uff09 \u5e0c\u814a\u5b57\u6bcd \u00b6 \u5c0f\u5199 \u547d\u4ee4 \u5927\u5199 \u547d\u4ee4 \u53d8\u4f53 \u547d\u4ee4 \\alpha \\alpha \\alpha A A A \\beta \\beta \\beta B B B \\gamma \\gamma \\gamma \\Gamma \\Gamma \\Gamma \\varGamma \\varGamma \\varGamma \\delta \\delta \\delta \\Delta \\Delta \\Delta \\varDelta \\varDelta \\varDelta \\epsilon \\epsilon \\epsilonn E E E \\varepsilon \\varepsilon \\varepsilon \\zeta \\zeta \\zeta Z Z Z \\eta \\eta \\eta H H H \\theta \\theta \\theta \\Theta \\Theta \\Theta \\vartheta,\\varTheta \\vartheta,\\varTheta \\vartheta,\\varTheta \\iota \\iota \\iota I I I \\kappa \\kappa \\kappa K K K \\varkappa \\varkappa \\varkappa \\lambda \\lambda \\lambda \\Lambda \\Lambda \\Lambda \\varLambda \\varLambda \\varLambda \\mu \\mu \\mu M M M \\nu \\nu \\nu N N N \\xi \\xi \\xi \\Xi \\Xi \\Xi \\varXi \\varXi \\varXi o o o O O O \\pi \\pi \\pi \\Pi \\Pi \\Pi \\varpi, \\varPi \\varpi, \\varPi \\varpi,\\varPi \\rho \\rho \\rho P P P \\varrho \\varrho \\varrho \\sigma \\sigma \\sigma \\Sigma \\Sigma \\Sigma \\varsigma, \\varSigma \\varsigma, \\varSigma \\varsigma,\\varSigma \\tau \\tau \\tau T T T \\upsilon \\upsilon \\upsilon \\Upsilon \\Upsilon \\Upsilon \\varUpsilon \\varUpsilon \\varUpsilon \\phi \\phi \\phi \\Phi \\Phi \\Phi \\varphi, \\varPhi \\varphi, \\varPhi \\varphi,\\varPhi \\chi \\chi \\chi X X X \\psi \\psi \\psi \\Psi \\Psi \\Psi \\varPsi \\varPsi \\varPsi \\omega \\omega \\omega \\Omega \\Omega \\Omega \\varOmega \\varOmega \\varOmega \u8fd0\u7b97\u7b26 \u00b6 \u5e38\u89c1\u8fd0\u7b97\u7b26\u5217\u4e8e\u4e0b\u8868\uff1a \u6570\u5b66\u8fd0\u7b97 \u00b6 \u8fd0\u7b97\u7b26 \u547d\u4ee4 \\times \\times \\times \\div \\div \\div \\odot \\odot \\odot \\oplus \\oplus \\oplus \\otimes \\otimes \\otimes \u96c6\u5408\u8fd0\u7b97 \u00b6 \u8fd0\u7b97\u7b26 \u547d\u4ee4 \\in \\in \\in \\ni \\ni \\ni \\subset \\subset \\subset \\subseteq \\subseteq \\subseteq \\subseteqq \\subseteqq \\oplsubseteqqu \\subsetneq \\subsetneq \\subsetneq \\subsetneqq \\subsetneqq \\subsetneqq \\supset \\supset \\subset \\supseteq \\supseteq \\subseteq \\supseteqq \\supseteqq \\oplsubseteqqu \\supsetneq \\supsetneq \\subsetneq \\supsetneqq \\supsetneqq \\subsetneqq \\cap \\cap \\cap \\cup \\cup \\cup \u5173\u7cfb\u8fd0\u7b97\u7b26 \u00b6 \u8fd0\u7b97\u7b26 \u547d\u4ee4 \\geq \\geq \\geq \\geqq \\geqq \\geqq \\geqslant \\geqslant \\geqslant \\gg \\gg \\gg \\ggg \\ggg \\ggg \\leq \\leq \\leq \\leqq \\leqq \\leqq \\leqslant \\leqslant \\leqslant \\ll \\ll \\ll \\lll \\lll \\lll \\sim \\sim \\sim \\approx \\approx \\approx \u903b\u8f91\u8fd0\u7b97\u7b26 \u00b6 \u8fd0\u7b97\u7b26 \u547d\u4ee4 \\lnot \\lnot \\lnot \\land \\land \\land \\lor \\lor \\lor \\forall \\forall \\forall \\exists \\exists \\exists \u51fd\u6570\u4e0e\u590d\u6742\u8fd0\u7b97 \u00b6 \u8fd0\u7b97\u7b26 \u547d\u4ee4 \\frac ab \\frac ab \\frac{a}{b} \\sum_i^n f \\sum_i^n f \\sum_{i}^{n} f \\prod_i^n f \\prod_i^n f \\prod_{i}^{n} f \\sqrt[x]{y} \\sqrt[x]{y} \\sqrt[x]{y} \\int_a^bf(x)\\mathrm dx \\int_a^bf(x)\\mathrm dx \\int_a^bf(x)\\mathrm dx \\oint_Df(x)\\mathrm dx \\oint_Df(x)\\mathrm dx \\oint_Df(x)\\mathrm dx \\iint_Df(x)\\mathrm dx \\iint_Df(x)\\mathrm dx \\iint_Df(x)\\mathrm dx \\iiint_Df(x)\\mathrm dx \\iiint_Df(x)\\mathrm dx \\iiint_Df(x)\\mathrm dx \\partial \\partial \\partial \\log \\log \\log \\ln \\ln \\ln \\lg \\lg \\lg \\exp \\exp \\exp a\\mod b a\\mod b a\\mod b \\max \\max \\max \\min \\min \\min \\arg \\arg \\arg \\sin \\sin \\sin \\cos \\cos \\cos \\tan \\tan \\tan \\cot \\cot \\cot \\sinh \\sinh \\sinh \\cosh \\cosh \\cosh \\tanh \\tanh \\tanh \\coth \\coth \\coth \\arcsin \\arcsin \\arcsin \\arccos \\arccos \\arccos \\arctan \\arctan \\arctan \\ker \\ker \\ker \\dim \\dim \\dim \\det \\det \\det \\lim \\lim \\lim \\inf \\inf \\inf \u62ec\u53f7 \u00b6 \u8fd0\u7b97\u7b26 \u547d\u4ee4 \\{ \\{ \\{ \\} \\} \\} \\langle \\langle \\langle \\rangle \\rangle \\rangle \\lceil \\lceil \\lceil \\rceil \\rceil \\rceil \\lfloor \\lfloor \\lfloor \\rfloor \\rfloor \\rfloor \\| \\| \\|","title":"\u6570\u5b66\u516c\u5f0f"},{"location":"latex/cheatsheet.html#latex","text":"\u6536\u96c6 \\LaTeX \\LaTeX \u5e38\u7528\u7684\u6570\u5b66\u516c\u5f0f\u547d\u4ee4","title":"LaTeX \u6570\u5b66\u516c\u5f0f"},{"location":"latex/cheatsheet.html#_1","text":"\u5e38\u7528\u547d\u4ee4\u6709\uff1a \\mathcal \u3001 \\mathbb \u3001 \\mathfrak \u3001 \\mathsf \u3001 \\mathbf \u3001 \\boldsymbol \u3001 \\mathit \u3001 \\mathrm \u7b49\u3002\u5176\u4e2d \\mathcal \u3001 \\mathbb \u4ec5\u9002\u7528\u4e8e\u5927\u5199\u5b57\u6bcd\uff0c\u5176\u4f59\u547d\u4ee4\u5927\u5199\u3001\u5c0f\u5199\u5b57\u6bcd\u901a\u7528 \\mathcal{A} \uff1a \\mathcal A \\mathcal A \\mathbb{A} \uff1a \\mathbb A \\mathbb A \\mathfrak{A} \uff1a \\mathfrak A \\mathfrak A \\mathsf{A} \uff1a \\mathsf A \\mathsf A \\mathbf{A} \uff1a \\mathbf A \\mathbf A \\boldsymbol{A} \uff1a \\boldsymbol A \\boldsymbol A \\mathit{A} \uff1a \\mathit A \\mathit A \uff08\u65e0\u6548\u679c\uff09 \\mathrm{A} \uff1a \\mathrm A \\mathrm A \\mathscr{A} \uff1a \\mathscr A \\mathscr A \uff08\u9700\u8981\u5f15\u5165\u5b8f\u5305 mathrsfs \uff09","title":"\u5b57\u6bcd\u53d8\u4f53"},{"location":"latex/cheatsheet.html#_2","text":"\u5c0f\u5199 \u547d\u4ee4 \u5927\u5199 \u547d\u4ee4 \u53d8\u4f53 \u547d\u4ee4 \\alpha \\alpha \\alpha A A A \\beta \\beta \\beta B B B \\gamma \\gamma \\gamma \\Gamma \\Gamma \\Gamma \\varGamma \\varGamma \\varGamma \\delta \\delta \\delta \\Delta \\Delta \\Delta \\varDelta \\varDelta \\varDelta \\epsilon \\epsilon \\epsilonn E E E \\varepsilon \\varepsilon \\varepsilon \\zeta \\zeta \\zeta Z Z Z \\eta \\eta \\eta H H H \\theta \\theta \\theta \\Theta \\Theta \\Theta \\vartheta,\\varTheta \\vartheta,\\varTheta \\vartheta,\\varTheta \\iota \\iota \\iota I I I \\kappa \\kappa \\kappa K K K \\varkappa \\varkappa \\varkappa \\lambda \\lambda \\lambda \\Lambda \\Lambda \\Lambda \\varLambda \\varLambda \\varLambda \\mu \\mu \\mu M M M \\nu \\nu \\nu N N N \\xi \\xi \\xi \\Xi \\Xi \\Xi \\varXi \\varXi \\varXi o o o O O O \\pi \\pi \\pi \\Pi \\Pi \\Pi \\varpi, \\varPi \\varpi, \\varPi \\varpi,\\varPi \\rho \\rho \\rho P P P \\varrho \\varrho \\varrho \\sigma \\sigma \\sigma \\Sigma \\Sigma \\Sigma \\varsigma, \\varSigma \\varsigma, \\varSigma \\varsigma,\\varSigma \\tau \\tau \\tau T T T \\upsilon \\upsilon \\upsilon \\Upsilon \\Upsilon \\Upsilon \\varUpsilon \\varUpsilon \\varUpsilon \\phi \\phi \\phi \\Phi \\Phi \\Phi \\varphi, \\varPhi \\varphi, \\varPhi \\varphi,\\varPhi \\chi \\chi \\chi X X X \\psi \\psi \\psi \\Psi \\Psi \\Psi \\varPsi \\varPsi \\varPsi \\omega \\omega \\omega \\Omega \\Omega \\Omega \\varOmega \\varOmega \\varOmega","title":"\u5e0c\u814a\u5b57\u6bcd"},{"location":"latex/cheatsheet.html#_3","text":"\u5e38\u89c1\u8fd0\u7b97\u7b26\u5217\u4e8e\u4e0b\u8868\uff1a","title":"\u8fd0\u7b97\u7b26"},{"location":"latex/cheatsheet.html#_4","text":"\u8fd0\u7b97\u7b26 \u547d\u4ee4 \\times \\times \\times \\div \\div \\div \\odot \\odot \\odot \\oplus \\oplus \\oplus \\otimes \\otimes \\otimes","title":"\u6570\u5b66\u8fd0\u7b97"},{"location":"latex/cheatsheet.html#_5","text":"\u8fd0\u7b97\u7b26 \u547d\u4ee4 \\in \\in \\in \\ni \\ni \\ni \\subset \\subset \\subset \\subseteq \\subseteq \\subseteq \\subseteqq \\subseteqq \\oplsubseteqqu \\subsetneq \\subsetneq \\subsetneq \\subsetneqq \\subsetneqq \\subsetneqq \\supset \\supset \\subset \\supseteq \\supseteq \\subseteq \\supseteqq \\supseteqq \\oplsubseteqqu \\supsetneq \\supsetneq \\subsetneq \\supsetneqq \\supsetneqq \\subsetneqq \\cap \\cap \\cap \\cup \\cup \\cup","title":"\u96c6\u5408\u8fd0\u7b97"},{"location":"latex/cheatsheet.html#_6","text":"\u8fd0\u7b97\u7b26 \u547d\u4ee4 \\geq \\geq \\geq \\geqq \\geqq \\geqq \\geqslant \\geqslant \\geqslant \\gg \\gg \\gg \\ggg \\ggg \\ggg \\leq \\leq \\leq \\leqq \\leqq \\leqq \\leqslant \\leqslant \\leqslant \\ll \\ll \\ll \\lll \\lll \\lll \\sim \\sim \\sim \\approx \\approx \\approx","title":"\u5173\u7cfb\u8fd0\u7b97\u7b26"},{"location":"latex/cheatsheet.html#_7","text":"\u8fd0\u7b97\u7b26 \u547d\u4ee4 \\lnot \\lnot \\lnot \\land \\land \\land \\lor \\lor \\lor \\forall \\forall \\forall \\exists \\exists \\exists","title":"\u903b\u8f91\u8fd0\u7b97\u7b26"},{"location":"latex/cheatsheet.html#_8","text":"\u8fd0\u7b97\u7b26 \u547d\u4ee4 \\frac ab \\frac ab \\frac{a}{b} \\sum_i^n f \\sum_i^n f \\sum_{i}^{n} f \\prod_i^n f \\prod_i^n f \\prod_{i}^{n} f \\sqrt[x]{y} \\sqrt[x]{y} \\sqrt[x]{y} \\int_a^bf(x)\\mathrm dx \\int_a^bf(x)\\mathrm dx \\int_a^bf(x)\\mathrm dx \\oint_Df(x)\\mathrm dx \\oint_Df(x)\\mathrm dx \\oint_Df(x)\\mathrm dx \\iint_Df(x)\\mathrm dx \\iint_Df(x)\\mathrm dx \\iint_Df(x)\\mathrm dx \\iiint_Df(x)\\mathrm dx \\iiint_Df(x)\\mathrm dx \\iiint_Df(x)\\mathrm dx \\partial \\partial \\partial \\log \\log \\log \\ln \\ln \\ln \\lg \\lg \\lg \\exp \\exp \\exp a\\mod b a\\mod b a\\mod b \\max \\max \\max \\min \\min \\min \\arg \\arg \\arg \\sin \\sin \\sin \\cos \\cos \\cos \\tan \\tan \\tan \\cot \\cot \\cot \\sinh \\sinh \\sinh \\cosh \\cosh \\cosh \\tanh \\tanh \\tanh \\coth \\coth \\coth \\arcsin \\arcsin \\arcsin \\arccos \\arccos \\arccos \\arctan \\arctan \\arctan \\ker \\ker \\ker \\dim \\dim \\dim \\det \\det \\det \\lim \\lim \\lim \\inf \\inf \\inf","title":"\u51fd\u6570\u4e0e\u590d\u6742\u8fd0\u7b97"},{"location":"latex/cheatsheet.html#_9","text":"\u8fd0\u7b97\u7b26 \u547d\u4ee4 \\{ \\{ \\{ \\} \\} \\} \\langle \\langle \\langle \\rangle \\rangle \\rangle \\lceil \\lceil \\lceil \\rceil \\rceil \\rceil \\lfloor \\lfloor \\lfloor \\rfloor \\rfloor \\rfloor \\| \\| \\|","title":"\u62ec\u53f7"},{"location":"latex/environ.html","text":"LaTeX\u8bed\u53e5\u5757\uff08\u73af\u5883\uff09 \u00b6 \u5217\u8868\u73af\u5883 \u00b6 \u5728LaTeX\u4e2d\uff0c enumerate \u73af\u5883\u5b9a\u4e49\u4e86\u7f16\u53f7\u5217\u8868\uff0c itemize \u73af\u5883\u4e0e description \u73af\u5883\u5b9a\u4e49\u4e86\u7b26\u53f7\u5217\u8868\u3002\u6240\u6709\u7684\u5217\u8868\u4f7f\u7528 \\item \u547d\u4ee4\u5b9a\u4e49\u5217\u8868\u9879\u3002\u5217\u8868\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4f7f\u7528\u7684\u7f16\u53f7\u4e0e\u7b26\u53f7\u3002 \u5f53\u5217\u8868\u88ab\u5d4c\u5957\u65f6\uff0c\u4e0d\u540c\u5c42\u6b21\u7684\u5217\u8868\u4f1a\u4f7f\u7528\u4e0d\u540c\u7684\u7f16\u53f7\u4ee5\u907f\u514d\u6df7\u6dc6\u3002 enumerate \u73af\u5883 \u00b6 enumerate \u73af\u5883\u7684\u4f7f\u7528\u65b9\u5f0f\u5982\u4e0b\uff1a \\begin { enumerate } \\item This is an item. \\item This is an item. \\item This is an item. \\end { enumerate } \u6e32\u67d3\u540e\u7684\u6548\u679c\uff1a This is an item. This is an item. This is an item. enumerate \u73af\u5883\u9ed8\u8ba4\u4f7f\u7528 1. 2. 3. ... \u8fdb\u884c\u7f16\u53f7\uff0c\u81ea\u5b9a\u4e49\u7f16\u53f7\u901a\u8fc7\u5728 \\begin{enumerate} \u540e\u6dfb\u52a0\u53c2\u6570\u5b9e\u73b0\u3002 \\begin { enumerate } [A.] \\item This is an item. \\item This is an item. \\item This is an item. \\end { enumerate } \u6e32\u67d3\u540e\u7684\u6548\u679c\uff1a A. This is an item. B. This is an item. C. This is an item. \u81ea\u5b9a\u4e49\u7f16\u53f7\u5217\u8868\u9700\u8981\u5f15\u5165 enumerate \u5305 \uff1a \\usepackage{enumerate} itemize \u73af\u5883 \u00b6 itemize \u73af\u5883\u7528\u4e8e\u751f\u6210\u7b26\u53f7\u5217\u8868\uff0c\u4f7f\u7528\u65b9\u5f0f\u5982\u4e0b\uff1a \\begin { itemize } \\item This is an item. \\item This is an item. \\item This is an item. \\end { itemize } \u6e32\u67d3\u540e\u7684\u6548\u679c\uff1a This is an item. This is an item. This is an item. \\item \u547d\u4ee4\u53ef\u4ee5\u4f7f\u7528\u4e2d\u62ec\u53f7\u6307\u5b9a\u5f53\u524d\u9879\u4f7f\u7528\u7684\u7b26\u53f7\uff0c\u5982 \\item[-] \u4f7f\u7528 - \u4f5c\u4e3a\u7b26\u53f7","title":"\u73af\u5883"},{"location":"latex/environ.html#latex","text":"","title":"LaTeX\u8bed\u53e5\u5757\uff08\u73af\u5883\uff09"},{"location":"latex/environ.html#_1","text":"\u5728LaTeX\u4e2d\uff0c enumerate \u73af\u5883\u5b9a\u4e49\u4e86\u7f16\u53f7\u5217\u8868\uff0c itemize \u73af\u5883\u4e0e description \u73af\u5883\u5b9a\u4e49\u4e86\u7b26\u53f7\u5217\u8868\u3002\u6240\u6709\u7684\u5217\u8868\u4f7f\u7528 \\item \u547d\u4ee4\u5b9a\u4e49\u5217\u8868\u9879\u3002\u5217\u8868\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4f7f\u7528\u7684\u7f16\u53f7\u4e0e\u7b26\u53f7\u3002 \u5f53\u5217\u8868\u88ab\u5d4c\u5957\u65f6\uff0c\u4e0d\u540c\u5c42\u6b21\u7684\u5217\u8868\u4f1a\u4f7f\u7528\u4e0d\u540c\u7684\u7f16\u53f7\u4ee5\u907f\u514d\u6df7\u6dc6\u3002","title":"\u5217\u8868\u73af\u5883"},{"location":"latex/environ.html#enumerate","text":"enumerate \u73af\u5883\u7684\u4f7f\u7528\u65b9\u5f0f\u5982\u4e0b\uff1a \\begin { enumerate } \\item This is an item. \\item This is an item. \\item This is an item. \\end { enumerate } \u6e32\u67d3\u540e\u7684\u6548\u679c\uff1a This is an item. This is an item. This is an item. enumerate \u73af\u5883\u9ed8\u8ba4\u4f7f\u7528 1. 2. 3. ... \u8fdb\u884c\u7f16\u53f7\uff0c\u81ea\u5b9a\u4e49\u7f16\u53f7\u901a\u8fc7\u5728 \\begin{enumerate} \u540e\u6dfb\u52a0\u53c2\u6570\u5b9e\u73b0\u3002 \\begin { enumerate } [A.] \\item This is an item. \\item This is an item. \\item This is an item. \\end { enumerate } \u6e32\u67d3\u540e\u7684\u6548\u679c\uff1a A. This is an item. B. This is an item. C. This is an item. \u81ea\u5b9a\u4e49\u7f16\u53f7\u5217\u8868\u9700\u8981\u5f15\u5165 enumerate \u5305 \uff1a \\usepackage{enumerate}","title":"enumerate\u73af\u5883"},{"location":"latex/environ.html#itemize","text":"itemize \u73af\u5883\u7528\u4e8e\u751f\u6210\u7b26\u53f7\u5217\u8868\uff0c\u4f7f\u7528\u65b9\u5f0f\u5982\u4e0b\uff1a \\begin { itemize } \\item This is an item. \\item This is an item. \\item This is an item. \\end { itemize } \u6e32\u67d3\u540e\u7684\u6548\u679c\uff1a This is an item. This is an item. This is an item. \\item \u547d\u4ee4\u53ef\u4ee5\u4f7f\u7528\u4e2d\u62ec\u53f7\u6307\u5b9a\u5f53\u524d\u9879\u4f7f\u7528\u7684\u7b26\u53f7\uff0c\u5982 \\item[-] \u4f7f\u7528 - \u4f5c\u4e3a\u7b26\u53f7","title":"itemize\u73af\u5883"},{"location":"latex/slides.html","text":"\u4f7f\u7528LaTeX\u521b\u5efa\u5e7b\u706f\u7247 \u00b6 \u9996\u5148\uff0c\u9700\u8981\u6307\u5b9a documentclass \u4e3a beamer \u7c7b\u578b\uff1a \\documentclass { beamer } \u6bcf\u4e00\u5f20\u5e7b\u706f\u7247\u4f7f\u7528 frame \u73af\u5883\uff0c\u5982\u4e0b\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7a7a\u767d\u5e7b\u706f\u7247\uff1a \\begin { frame } \\end { frame } \u7b2c\u4e00\u9875PPT\u901a\u5e38\u663e\u793aPPT\u7684\u6807\u9898\u3001\u4f5c\u8005\u7684\u4e2a\u4eba\u4fe1\u606f\u7b49\u5185\u5bb9\uff1a \\title { \u6807\u9898 } \\subtitle { \u526f\u6807\u9898 } \\author { \u4f5c\u8005 } \\institute { \u7ec4\u7ec7 } \\date { \\today } % \u663e\u793a\u65e5\u671f \\titlepage","title":"\u5e7b\u706f\u7247"},{"location":"latex/slides.html#latex","text":"\u9996\u5148\uff0c\u9700\u8981\u6307\u5b9a documentclass \u4e3a beamer \u7c7b\u578b\uff1a \\documentclass { beamer } \u6bcf\u4e00\u5f20\u5e7b\u706f\u7247\u4f7f\u7528 frame \u73af\u5883\uff0c\u5982\u4e0b\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7a7a\u767d\u5e7b\u706f\u7247\uff1a \\begin { frame } \\end { frame } \u7b2c\u4e00\u9875PPT\u901a\u5e38\u663e\u793aPPT\u7684\u6807\u9898\u3001\u4f5c\u8005\u7684\u4e2a\u4eba\u4fe1\u606f\u7b49\u5185\u5bb9\uff1a \\title { \u6807\u9898 } \\subtitle { \u526f\u6807\u9898 } \\author { \u4f5c\u8005 } \\institute { \u7ec4\u7ec7 } \\date { \\today } % \u663e\u793a\u65e5\u671f \\titlepage","title":"\u4f7f\u7528LaTeX\u521b\u5efa\u5e7b\u706f\u7247"},{"location":"math/index.html","text":"\u6570\u5b66 \u00b6 \u4ee5\u4e0b\u6574\u7406\u4e86\u6570\u5b66\u8bfe\u4e0a\u7684\u5185\u5bb9 \u5fae\u79ef\u5206 \u7ebf\u6027\u4ee3\u6570 \u79bb\u6563\u6570\u5b66 \u6982\u7387\u8bba\u4e0e\u6570\u7406\u7edf\u8ba1 \u8fd0\u7b79\u5b66 \u5bf9\u7b56\u3001\u51b3\u7b56\u4e0e\u6392\u961f\u8bba \u52a8\u6001\u7cfb\u7edf\u5206\u6790\u4e0e\u63a7\u5236","title":"\u76ee\u5f55"},{"location":"math/index.html#_1","text":"\u4ee5\u4e0b\u6574\u7406\u4e86\u6570\u5b66\u8bfe\u4e0a\u7684\u5185\u5bb9 \u5fae\u79ef\u5206 \u7ebf\u6027\u4ee3\u6570 \u79bb\u6563\u6570\u5b66 \u6982\u7387\u8bba\u4e0e\u6570\u7406\u7edf\u8ba1 \u8fd0\u7b79\u5b66 \u5bf9\u7b56\u3001\u51b3\u7b56\u4e0e\u6392\u961f\u8bba \u52a8\u6001\u7cfb\u7edf\u5206\u6790\u4e0e\u63a7\u5236","title":"\u6570\u5b66"},{"location":"math/discrete-mathematics/index.html","text":"\u79bb\u6563\u6570\u5b66 \u00b6 \u6839\u636e\u300a\u6570\u7406\u903b\u8f91\u4e0e\u96c6\u5408\u8bba\u300b\uff0c\u77f3\u7eaf\u4e00\u7b49\uff0c\u6e05\u534e\u5927\u5b66\u51fa\u7248\u793e\u4e0e\u6e05\u534e\u5927\u5b66\u8ba1\u7b97\u673a\u7cfb\u201c\u79bb\u6563\u6570\u5b66\u201d\u8bfe\u7a0b\u6574\u7406\u3002 \u7b2c\u4e00\u7ae0 \u547d\u9898\u903b\u8f91\u7684\u57fa\u672c\u6982\u5ff5 \u7b2c\u4e8c\u7ae0 \u547d\u9898\u903b\u8f91\u7684\u7b49\u503c\u548c\u63a8\u7406\u6f14\u7b97","title":"\u76ee\u5f55"},{"location":"math/discrete-mathematics/index.html#_1","text":"\u6839\u636e\u300a\u6570\u7406\u903b\u8f91\u4e0e\u96c6\u5408\u8bba\u300b\uff0c\u77f3\u7eaf\u4e00\u7b49\uff0c\u6e05\u534e\u5927\u5b66\u51fa\u7248\u793e\u4e0e\u6e05\u534e\u5927\u5b66\u8ba1\u7b97\u673a\u7cfb\u201c\u79bb\u6563\u6570\u5b66\u201d\u8bfe\u7a0b\u6574\u7406\u3002 \u7b2c\u4e00\u7ae0 \u547d\u9898\u903b\u8f91\u7684\u57fa\u672c\u6982\u5ff5 \u7b2c\u4e8c\u7ae0 \u547d\u9898\u903b\u8f91\u7684\u7b49\u503c\u548c\u63a8\u7406\u6f14\u7b97","title":"\u79bb\u6563\u6570\u5b66"},{"location":"math/discrete-mathematics/chapter-1.html","text":"\u547d\u9898\u903b\u8f91\u7684\u57fa\u672c\u6982\u5ff5 \u00b6 \u547d\u9898\u662f\u4e00\u4e2a\u975e\u771f\u5373\u5047\u7684\u9648\u8ff0\u53e5\u3002 \u547d\u9898\u4e0d\u53ef\u80fd\u975e\u771f\u975e\u5047\uff0c\u4e5f\u4e0d\u53ef\u80fd\u65e2\u771f\u53c8\u5047 \u547d\u9898\u7684\u771f\u5047\u6027\u53ef\u4ee5\u5f85\u5b9a \u547d\u9898\u7684\u771f\u5047\u53ef\u4ee5\u7528True\u6216False\u8868\u793a\uff0c\u4e5f\u53ef\u4ee5\u75281\u62160\u8868\u793a \u547d\u9898\u53ef\u4ee5\u901a\u8fc7\u4e0e\u3001\u6216\u3001\u975e\u7b49\u903b\u8f91\u8054\u7ed3\u8bcd\u8fde\u63a5\uff0c\u5f97\u5230\u590d\u5408\u547d\u9898 \u5f53\u4e0d\u6307\u5b9a\u547d\u9898\u7684\u5177\u4f53\u5185\u5bb9\u65f6\uff0c\u79f0\u8be5\u547d\u9898\u4e3a\u547d\u9898\u53d8\u9879\uff0c\u5bf9\u5e94\u7684\u5177\u4f53\u547d\u9898\u79f0\u4e3a\u8be5\u547d\u9898\u53d8\u9879\u7684\u4e00\u4e2a\u89e3\u91ca\u3002\u547d\u9898\u53d8\u9879\u7684\u89e3\u91ca\u53ef\u4ee5\u662f\u4efb\u610f\u547d\u9898\u3002 \u903b\u8f91\u8054\u7ed3\u8bcd \u00b6 \u547d\u9898\u903b\u8f91\u4e2d\u5e38\u7528\u7684\u903b\u8f91\u8054\u7ed3\u8bcd\u4e3a\u4e0e\uff08 \\land \\land \uff0c\u5408\u53d6\uff09\u3001\u6216\uff08 \\lor \\lor \uff0c\u6790\u53d6\uff09\u3001\u975e\uff08 \\lnot \\lnot \uff0c\u5426\u5b9a\uff09\u3001\u8574\u542b\uff08 \\rightarrow \\rightarrow \uff09\u3001\u53cc\u8574\u542b\uff08 \\leftrightarrow \\leftrightarrow \uff09\u7b49\u3002\u9664 \\lnot \\lnot \u4e3a\u4e00\u5143\u8fd0\u7b97\u7b26\u4ee5\u5916\uff0c\u5176\u4f59\u903b\u8f91\u8fd0\u7b97\u7b26\u5747\u4e3a\u4e8c\u5143\u8fd0\u7b97\u7b26\u3002\u8fd9\u4e9b\u8fd0\u7b97\u7b26\u7684\u771f\u503c\u8868\u5982\u4e0b\u6240\u5217\uff1a \u4e0e P P Q Q P\\land Q P\\land Q 0 0 0 0 1 0 1 0 0 1 1 1 \u6216 P P Q Q P\\lor Q P\\lor Q 0 0 0 0 1 1 1 0 1 1 1 1 \u975e P P \\lnot P \\lnot P 0 1 1 0 \u8574\u542b P P Q Q P\\rightarrow Q P\\rightarrow Q 0 0 1 0 1 1 1 0 0 1 1 1 \u53cc\u8574\u542b P P Q Q P\\leftrightarrow Q P\\leftrightarrow Q 0 0 1 0 1 0 1 0 0 1 1 1 \u6b64\u5916\uff0c\u5982\u4e0b\u903b\u8f91\u8054\u7ed3\u8bcd\u4e5f\u8f83\u4e3a\u5e38\u7528\uff1a \u4e0e\u975e\uff1a A\\uparrow B = \\lnot (A\\land B) A\\uparrow B = \\lnot (A\\land B) \u6216\u975e\uff1a A\\downarrow B = \\lnot (A\\lor B) A\\downarrow B = \\lnot (A\\lor B) \u5f02\u6216\uff1a A\\overline \\lor B = (A\\lor B)\\land (\\lnot A\\lor \\lnot B) A\\overline \\lor B = (A\\lor B)\\land (\\lnot A\\lor \\lnot B) \u5408\u5f0f\u516c\u5f0f \u00b6 \u5408\u5f0f\u516c\u5f0f\uff08\u7b80\u79f0\u516c\u5f0f\uff09\u6309\u7167\u5982\u4e0b\u89c4\u5219\u5b9a\u4e49\u5982\u4e0b\uff1a \u7b80\u5355\u547d\u9898\u662f\u5408\u5f0f\u516c\u5f0f \u82e5 A A \u4e3a\u5408\u5f0f\u516c\u5f0f\uff0c \\lnot A \\lnot A \u4e3a\u5408\u5f0f\u516c\u5f0f \u82e5 A, B A, B \u4e3a\u5408\u5f0f\u516c\u5f0f\uff0c A\\land B, A\\lor B, A\\rightarrow B, A\\leftrightarrow B A\\land B, A\\lor B, A\\rightarrow B, A\\leftrightarrow B \u5747\u4e3a\u5408\u5f0f\u516c\u5f0f \u5f53\u4e14\u4ec5\u5f53\u7ecf\u8fc7\u6709\u9650\u6b21\u5e94\u7528\u524d\u4e09\u6761\u89c4\u5219\u6240\u5f97\u5230\u7684\u516c\u5f0f\u79f0\u4e3a\u5408\u5f0f\u516c\u5f0f \u5408\u5f0f\u516c\u5f0f\u4e2d\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u6392\u5217\u5982\u4e0b\uff1a \\lnot > \\land > \\lor > \\rightarrow > \\leftrightarrow \\lnot > \\land > \\lor > \\rightarrow > \\leftrightarrow \u5982\u679c\u5408\u5f0f\u516c\u5f0f\u4e2d\u7684\u6240\u6709\u547d\u9898\u53d8\u9879\u5728\u4efb\u610f\u89e3\u91ca\u4e0b\u90fd\u4e3a\u771f\uff0c\u79f0\u5408\u5f0f\u516c\u5f0f\u4e3a \u91cd\u8a00\u5f0f \u6216 \u6c38\u771f\u5f0f \u3002\u5982\u679c\u5408\u5f0f\u516c\u5f0f\u5728\u67d0\u4e2a\u89e3\u91ca\u4e0b\u4e3a\u771f\uff0c\u79f0\u5408\u5f0f\u516c\u5f0f \u53ef\u6ee1\u8db3 \u3002\u5982\u679c\u5408\u5f0f\u516c\u5f0f\u4e2d\u7684\u6240\u6709\u547d\u9898\u53d8\u9879\u5728\u4efb\u610f\u89e3\u91ca\u4e0b\u90fd\u4e3a\u5047\uff0c\u79f0\u5408\u5f0f\u516c\u5f0f\u4e3a \u77db\u76fe\u5f0f \u6216 \u6c38\u5047\u5f0f \u3002\u4e24\u4e2a\u91cd\u8a00\u5f0f\u4f7f\u7528 \\land, \\lor, \\rightarrow, \\leftrightarrow \\land, \\lor, \\rightarrow, \\leftrightarrow \u8fde\u63a5\u540e\u5f97\u5230\u7684\u5408\u5f0f\u516c\u5f0f\u4ecd\u4e3a\u91cd\u8a00\u5f0f\u3002 \u91cd\u8a00\u5f0f\u7684\u4ee3\u5165\u89c4\u5219 \u00b6 \u82e5 A A \u4e3a\u91cd\u8a00\u5f0f\uff0c\u5c06 A A \u4e2d\u7684\u6240\u6709\u547d\u9898\u53d8\u9879 C C \u66ff\u6362\u4e3a\u5408\u5f0f\u516c\u5f0f D D \uff0c\u5219\u66ff\u6362\u540e\u7684\u5408\u5f0f\u516c\u5f0f\u4ecd\u4e3a\u91cd\u8a00\u5f0f\u3002\u8bb0\u4f5c \\frac CD \\frac CD \u4ee3\u5165\u89c4\u5219\u53ea\u80fd\u5bf9\u516c\u5f0f\u4e2d\u7684\u547d\u9898\u53d8\u9879\u8fdb\u884c\u66ff\u4ee3\uff0c\u800c\u4e0d\u80fd\u66ff\u4ee3\u516c\u5f0f\u4e2d\u7684\u4e00\u4e2a\u590d\u5408\u547d\u9898 \u5bf9\u516c\u5f0f\u4e2d\u7684\u67d0\u4e2a\u547d\u9898\u53d8\u9879\u8fdb\u884c\u4ee3\u5165\u65f6\uff0c\u5fc5\u987b\u4ee3\u5165\u516c\u5f0f\u4e2d\u51fa\u73b0\u7684\u6240\u6709\u547d\u9898\u53d8\u9879","title":"\u547d\u9898\u903b\u8f91\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"math/discrete-mathematics/chapter-1.html#_1","text":"\u547d\u9898\u662f\u4e00\u4e2a\u975e\u771f\u5373\u5047\u7684\u9648\u8ff0\u53e5\u3002 \u547d\u9898\u4e0d\u53ef\u80fd\u975e\u771f\u975e\u5047\uff0c\u4e5f\u4e0d\u53ef\u80fd\u65e2\u771f\u53c8\u5047 \u547d\u9898\u7684\u771f\u5047\u6027\u53ef\u4ee5\u5f85\u5b9a \u547d\u9898\u7684\u771f\u5047\u53ef\u4ee5\u7528True\u6216False\u8868\u793a\uff0c\u4e5f\u53ef\u4ee5\u75281\u62160\u8868\u793a \u547d\u9898\u53ef\u4ee5\u901a\u8fc7\u4e0e\u3001\u6216\u3001\u975e\u7b49\u903b\u8f91\u8054\u7ed3\u8bcd\u8fde\u63a5\uff0c\u5f97\u5230\u590d\u5408\u547d\u9898 \u5f53\u4e0d\u6307\u5b9a\u547d\u9898\u7684\u5177\u4f53\u5185\u5bb9\u65f6\uff0c\u79f0\u8be5\u547d\u9898\u4e3a\u547d\u9898\u53d8\u9879\uff0c\u5bf9\u5e94\u7684\u5177\u4f53\u547d\u9898\u79f0\u4e3a\u8be5\u547d\u9898\u53d8\u9879\u7684\u4e00\u4e2a\u89e3\u91ca\u3002\u547d\u9898\u53d8\u9879\u7684\u89e3\u91ca\u53ef\u4ee5\u662f\u4efb\u610f\u547d\u9898\u3002","title":"\u547d\u9898\u903b\u8f91\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"math/discrete-mathematics/chapter-1.html#_2","text":"\u547d\u9898\u903b\u8f91\u4e2d\u5e38\u7528\u7684\u903b\u8f91\u8054\u7ed3\u8bcd\u4e3a\u4e0e\uff08 \\land \\land \uff0c\u5408\u53d6\uff09\u3001\u6216\uff08 \\lor \\lor \uff0c\u6790\u53d6\uff09\u3001\u975e\uff08 \\lnot \\lnot \uff0c\u5426\u5b9a\uff09\u3001\u8574\u542b\uff08 \\rightarrow \\rightarrow \uff09\u3001\u53cc\u8574\u542b\uff08 \\leftrightarrow \\leftrightarrow \uff09\u7b49\u3002\u9664 \\lnot \\lnot \u4e3a\u4e00\u5143\u8fd0\u7b97\u7b26\u4ee5\u5916\uff0c\u5176\u4f59\u903b\u8f91\u8fd0\u7b97\u7b26\u5747\u4e3a\u4e8c\u5143\u8fd0\u7b97\u7b26\u3002\u8fd9\u4e9b\u8fd0\u7b97\u7b26\u7684\u771f\u503c\u8868\u5982\u4e0b\u6240\u5217\uff1a \u4e0e P P Q Q P\\land Q P\\land Q 0 0 0 0 1 0 1 0 0 1 1 1 \u6216 P P Q Q P\\lor Q P\\lor Q 0 0 0 0 1 1 1 0 1 1 1 1 \u975e P P \\lnot P \\lnot P 0 1 1 0 \u8574\u542b P P Q Q P\\rightarrow Q P\\rightarrow Q 0 0 1 0 1 1 1 0 0 1 1 1 \u53cc\u8574\u542b P P Q Q P\\leftrightarrow Q P\\leftrightarrow Q 0 0 1 0 1 0 1 0 0 1 1 1 \u6b64\u5916\uff0c\u5982\u4e0b\u903b\u8f91\u8054\u7ed3\u8bcd\u4e5f\u8f83\u4e3a\u5e38\u7528\uff1a \u4e0e\u975e\uff1a A\\uparrow B = \\lnot (A\\land B) A\\uparrow B = \\lnot (A\\land B) \u6216\u975e\uff1a A\\downarrow B = \\lnot (A\\lor B) A\\downarrow B = \\lnot (A\\lor B) \u5f02\u6216\uff1a A\\overline \\lor B = (A\\lor B)\\land (\\lnot A\\lor \\lnot B) A\\overline \\lor B = (A\\lor B)\\land (\\lnot A\\lor \\lnot B)","title":"\u903b\u8f91\u8054\u7ed3\u8bcd"},{"location":"math/discrete-mathematics/chapter-1.html#_3","text":"\u5408\u5f0f\u516c\u5f0f\uff08\u7b80\u79f0\u516c\u5f0f\uff09\u6309\u7167\u5982\u4e0b\u89c4\u5219\u5b9a\u4e49\u5982\u4e0b\uff1a \u7b80\u5355\u547d\u9898\u662f\u5408\u5f0f\u516c\u5f0f \u82e5 A A \u4e3a\u5408\u5f0f\u516c\u5f0f\uff0c \\lnot A \\lnot A \u4e3a\u5408\u5f0f\u516c\u5f0f \u82e5 A, B A, B \u4e3a\u5408\u5f0f\u516c\u5f0f\uff0c A\\land B, A\\lor B, A\\rightarrow B, A\\leftrightarrow B A\\land B, A\\lor B, A\\rightarrow B, A\\leftrightarrow B \u5747\u4e3a\u5408\u5f0f\u516c\u5f0f \u5f53\u4e14\u4ec5\u5f53\u7ecf\u8fc7\u6709\u9650\u6b21\u5e94\u7528\u524d\u4e09\u6761\u89c4\u5219\u6240\u5f97\u5230\u7684\u516c\u5f0f\u79f0\u4e3a\u5408\u5f0f\u516c\u5f0f \u5408\u5f0f\u516c\u5f0f\u4e2d\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u6392\u5217\u5982\u4e0b\uff1a \\lnot > \\land > \\lor > \\rightarrow > \\leftrightarrow \\lnot > \\land > \\lor > \\rightarrow > \\leftrightarrow \u5982\u679c\u5408\u5f0f\u516c\u5f0f\u4e2d\u7684\u6240\u6709\u547d\u9898\u53d8\u9879\u5728\u4efb\u610f\u89e3\u91ca\u4e0b\u90fd\u4e3a\u771f\uff0c\u79f0\u5408\u5f0f\u516c\u5f0f\u4e3a \u91cd\u8a00\u5f0f \u6216 \u6c38\u771f\u5f0f \u3002\u5982\u679c\u5408\u5f0f\u516c\u5f0f\u5728\u67d0\u4e2a\u89e3\u91ca\u4e0b\u4e3a\u771f\uff0c\u79f0\u5408\u5f0f\u516c\u5f0f \u53ef\u6ee1\u8db3 \u3002\u5982\u679c\u5408\u5f0f\u516c\u5f0f\u4e2d\u7684\u6240\u6709\u547d\u9898\u53d8\u9879\u5728\u4efb\u610f\u89e3\u91ca\u4e0b\u90fd\u4e3a\u5047\uff0c\u79f0\u5408\u5f0f\u516c\u5f0f\u4e3a \u77db\u76fe\u5f0f \u6216 \u6c38\u5047\u5f0f \u3002\u4e24\u4e2a\u91cd\u8a00\u5f0f\u4f7f\u7528 \\land, \\lor, \\rightarrow, \\leftrightarrow \\land, \\lor, \\rightarrow, \\leftrightarrow \u8fde\u63a5\u540e\u5f97\u5230\u7684\u5408\u5f0f\u516c\u5f0f\u4ecd\u4e3a\u91cd\u8a00\u5f0f\u3002","title":"\u5408\u5f0f\u516c\u5f0f"},{"location":"math/discrete-mathematics/chapter-1.html#_4","text":"\u82e5 A A \u4e3a\u91cd\u8a00\u5f0f\uff0c\u5c06 A A \u4e2d\u7684\u6240\u6709\u547d\u9898\u53d8\u9879 C C \u66ff\u6362\u4e3a\u5408\u5f0f\u516c\u5f0f D D \uff0c\u5219\u66ff\u6362\u540e\u7684\u5408\u5f0f\u516c\u5f0f\u4ecd\u4e3a\u91cd\u8a00\u5f0f\u3002\u8bb0\u4f5c \\frac CD \\frac CD \u4ee3\u5165\u89c4\u5219\u53ea\u80fd\u5bf9\u516c\u5f0f\u4e2d\u7684\u547d\u9898\u53d8\u9879\u8fdb\u884c\u66ff\u4ee3\uff0c\u800c\u4e0d\u80fd\u66ff\u4ee3\u516c\u5f0f\u4e2d\u7684\u4e00\u4e2a\u590d\u5408\u547d\u9898 \u5bf9\u516c\u5f0f\u4e2d\u7684\u67d0\u4e2a\u547d\u9898\u53d8\u9879\u8fdb\u884c\u4ee3\u5165\u65f6\uff0c\u5fc5\u987b\u4ee3\u5165\u516c\u5f0f\u4e2d\u51fa\u73b0\u7684\u6240\u6709\u547d\u9898\u53d8\u9879","title":"\u91cd\u8a00\u5f0f\u7684\u4ee3\u5165\u89c4\u5219"},{"location":"math/discrete-mathematics/chapter-2.html","text":"\u547d\u9898\u903b\u8f91\u7684\u7b49\u503c\u548c\u63a8\u7406\u6f14\u7b97 \u00b6 \u7b49\u503c\uff1a\u8bbe A, B A, B \u4e3a\u516c\u5f0f\uff0c P_1, \\dots, P_n P_1, \\dots, P_n \u662f\u51fa\u73b0\u5728 A, B A, B \u4e2d\u6240\u6709\u7684\u547d\u9898\u53d8\u9879\uff0c\u82e5\u5bf9\u4e8e\u4efb\u610f\u7684\u4e00\u7ec4 \\left\\langle P_1, \\dots, P_n\\right\\rangle \\left\\langle P_1, \\dots, P_n\\right\\rangle \uff0c\u90fd\u6709 A=B A=B \uff0c\u5219\u79f0\u516c\u5f0f A A \u4e0e\u516c\u5f0f B B \u7b49\u503c\uff08\u7b49\u4ef7\uff09\uff0c\u8bb0\u4e3a A\\Leftrightarrow B A\\Leftrightarrow B \u6216 A=B A=B \u3002 \u7b49\u503c\u5173\u7cfb\u6ee1\u8db3\u81ea\u53cd\u6027\u3001\u5bf9\u79f0\u6027\u4e0e\u4f20\u9012\u6027\uff1a A=A A=A \u82e5 A=B A=B \uff0c\u5219 B=A B=A \u82e5 A=B, B=C A=B, B=C \uff0c\u5219 A=C A=C A=B A=B \u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u662f A\\leftrightarrow B A\\leftrightarrow B \u4e3a\u91cd\u8a00\u5f0f\u3002 \u7b49\u503c\u516c\u5f0f \u00b6 \u57fa\u672c\u7684\u7b49\u503c\u516c\u5f0f\u5217\u4e3e\u5982\u4e0b\uff1a \u53cc\u91cd\u5426\u5b9a\u5f8b P = \\lnot \\lnot P P = \\lnot \\lnot P \u7ed3\u5408\u5f8b (P\\lor Q)\\lor R = P \\lor (Q\\lor R) (P\\lor Q)\\lor R = P \\lor (Q\\lor R) (P\\land Q)\\land R = P \\land (Q\\land R) (P\\land Q)\\land R = P \\land (Q\\land R) (P\\leftrightarrow Q)\\leftrightarrow R = P \\leftrightarrow (Q\\leftrightarrow R) (P\\leftrightarrow Q)\\leftrightarrow R = P \\leftrightarrow (Q\\leftrightarrow R) \u8fd0\u7b97\u7b26 \\rightarrow \\rightarrow \u4e0d\u6ee1\u8db3\u7ed3\u5408\u5f8b \u4ea4\u6362\u5f8b P\\lor Q = Q\\lor P P\\lor Q = Q\\lor P P\\land Q = Q\\land P P\\land Q = Q\\land P P\\leftrightarrow Q = Q\\leftrightarrow P P\\leftrightarrow Q = Q\\leftrightarrow P \u8fd0\u7b97\u7b26 \\rightarrow \\rightarrow \u4e0d\u6ee1\u8db3\u4ea4\u6362\u5f8b \u5206\u914d\u5f8b P\\lor (Q\\land R) = (P\\lor Q)\\land (P\\lor R) P\\lor (Q\\land R) = (P\\lor Q)\\land (P\\lor R) P\\land (Q\\lor R) = (P\\land Q)\\lor (P\\land R) P\\land (Q\\lor R) = (P\\land Q)\\lor (P\\land R) P\\rightarrow (Q\\rightarrow R) = (P\\rightarrow Q)\\rightarrow (P\\rightarrow R) P\\rightarrow (Q\\rightarrow R) = (P\\rightarrow Q)\\rightarrow (P\\rightarrow R) \u8fd0\u7b97\u7b26 \\leftrightarrow \\leftrightarrow \u4e0d\u6ee1\u8db3\u5206\u914d\u5f8b \u6052\u7b49\u5f8b P\\lor P = P P\\lor P = P P\\land P = P P\\land P = P P\\rightarrow P = T P\\rightarrow P = T P\\leftrightarrow P = T P\\leftrightarrow P = T \u5438\u6536\u7387 P\\lor (P\\land Q) = P P\\lor (P\\land Q) = P P\\land (P\\lor Q) = P P\\land (P\\lor Q) = P \u6469\u6839\u5f8b \\lnot (P\\lor Q) = \\lnot P\\land \\lnot Q \\lnot (P\\lor Q) = \\lnot P\\land \\lnot Q \\lnot (P\\land Q) = \\lnot P\\lor \\lnot Q \\lnot (P\\land Q) = \\lnot P\\lor \\lnot Q \\lnot (P\\rightarrow Q) = P\\land \\lnot Q \\lnot (P\\rightarrow Q) = P\\land \\lnot Q \\lnot (P\\leftrightarrow Q) = (P\\land \\lnot Q) \\lor (\\lnot P\\land Q) \\lnot (P\\leftrightarrow Q) = (P\\land \\lnot Q) \\lor (\\lnot P\\land Q) \u540c\u4e00\u5f8b P\\lor F = P P\\lor F = P P\\land P = T P\\land P = T T\\rightarrow P = P T\\rightarrow P = P T\\leftrightarrow P = P T\\leftrightarrow P = P P\\rightarrow F = \\lnot P P\\rightarrow F = \\lnot P P\\leftrightarrow F = \\lnot P P\\leftrightarrow F = \\lnot P \u96f6\u5f8b P\\lor T = T P\\lor T = T P\\land F = F P\\land F = F P\\rightarrow T = T P\\rightarrow T = T F\\rightarrow P = T F\\rightarrow P = T \u8865\u4f59\u5f8b P\\lor \\lnot P = T P\\lor \\lnot P = T P\\land \\lnot P = F P\\land \\lnot P = F P\\rightarrow \\lnot P = \\lnot P P\\rightarrow \\lnot P = \\lnot P P\\leftrightarrow \\lnot P = F P\\leftrightarrow \\lnot P = F \u5176\u4ed6\u5e38\u7528\u7684\u7b49\u503c\u516c\u5f0f P\\rightarrow Q = \\lnot Q\\rightarrow \\lnot P P\\rightarrow Q = \\lnot Q\\rightarrow \\lnot P \uff08\u9006\u5426\u547d\u9898\uff09 P\\rightarrow (Q\\rightarrow R) = (P\\land Q)\\rightarrow R P\\rightarrow (Q\\rightarrow R) = (P\\land Q)\\rightarrow R (P\\rightarrow R)\\land (Q\\rightarrow R) = (P\\lor Q) \\rightarrow R (P\\rightarrow R)\\land (Q\\rightarrow R) = (P\\lor Q) \\rightarrow R \u7531\u516c\u5f0f2\u7684\u76f4\u63a5\u63a8\u8bba\uff1a P\\rightarrow (Q\\rightarrow R) = Q\\rightarrow (P\\rightarrow R) P\\rightarrow (Q\\rightarrow R) = Q\\rightarrow (P\\rightarrow R) \u7f6e\u6362\uff1a\u5bf9\u516c\u5f0f A A \u7684\u5b50\u516c\u5f0f B B \uff0c\u4f7f\u7528\u4e0e\u4e4b\u7b49\u503c\u7684\u516c\u5f0f\u8fdb\u884c\u4ee3\u6362\u79f0\u4e3a\u7f6e\u6362 \u8bbe\u7f6e\u6362\u540e\u7684\u516c\u5f0f\u4e3a C C \uff0c\u5219\u5fc5\u6709 A=C A=C \u4ece\u771f\u503c\u8868\u8ba1\u7b97\u751f\u6210\u547d\u9898\u516c\u5f0f \u00b6 \u4ece\u771f\u503c\u8868\u751f\u6210\u547d\u9898\u516c\u5f0f\u6709\u4e24\u79cd\u65b9\u6cd5\uff0c\u65e2\u53ef\u4ee5\u901a\u8fc7\u503c\u4e3a T T \u7684\u884c\u751f\u6210\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u503c\u4e3a F F \u7684\u884c\u751f\u6210 \u4ece\u503c\u4e3a T T \u7684\u884c\u751f\u6210 \u00b6 \u5bf9\u4e8e\u5305\u542b n n \u4e2a\u547d\u9898\u53d8\u5143 P_1, \\dots, P_n P_1, \\dots, P_n \u7684\u547d\u9898\u516c\u5f0f\uff0c\u5199\u51fa\u5982\u4e0b\u5408\u53d6\u5f0f\uff1a P_1\\land P_2\\land \\dots \\land P_n P_1\\land P_2\\land \\dots \\land P_n \u5bf9\u4e8e\u771f\u503c\u8868\u7684\u6bcf\u4e2a\u53d6\u503c\u4e3a T T \u7684\u884c\uff0c\u82e5\u5bf9\u5e94\u7684 P_i P_i \u4e3a F F \uff0c\u5219\u5c06\u5408\u53d6\u5f0f\u4e2d\u7684\u5bf9\u5e94 P_i P_i \u66ff\u6362\u4e3a \\lnot P_i \\lnot P_i \u3002\u5c06\u6240\u5f97\u7684\u516c\u5f0f\u4f7f\u7528\u6790\u53d6\u8fd0\u7b97\u7b26\u8fde\u63a5\u5373\u5f97\u7b26\u5408\u771f\u503c\u8868\u7684\u547d\u9898\u516c\u5f0f\u3002 \u4ece\u503c\u4e3a F F \u7684\u884c\u751f\u6210 \u00b6 \u5bf9\u4e8e\u5305\u542b n n \u4e2a\u547d\u9898\u53d8\u5143 P_1, \\dots, P_n P_1, \\dots, P_n \u7684\u547d\u9898\u516c\u5f0f\uff0c\u5199\u51fa\u5982\u4e0b\u6790\u53d6\u5f0f\uff1a P_1\\lor P_2\\lor \\dots \\lor P_n P_1\\lor P_2\\lor \\dots \\lor P_n \u5bf9\u4e8e\u771f\u503c\u8868\u7684\u6bcf\u4e2a\u53d6\u503c\u4e3a F F \u7684\u884c\uff0c\u82e5\u5bf9\u5e94\u7684 P_i P_i \u4e3a T T \uff0c\u5219\u5c06\u6790\u53d6\u5f0f\u4e2d\u7684\u5bf9\u5e94 P_i P_i \u66ff\u6362\u4e3a \\lnot P_i \\lnot P_i \u3002\u5c06\u6240\u5f97\u7684\u516c\u5f0f\u4f7f\u7528\u5408\u53d6\u8fd0\u7b97\u7b26\u8fde\u63a5\u5373\u5f97\u7b26\u5408\u771f\u503c\u8868\u7684\u547d\u9898\u516c\u5f0f\u3002 \u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6 \u00b6 \u8bbe\u96c6\u5408 A A \u4e3a\u7531\u8054\u7ed3\u8bcd\u7ec4\u6210\u7684\u96c6\u5408\uff0c\u82e5\u4efb\u610f\u547d\u9898\u516c\u5f0f\u90fd\u6709\u901a\u8fc7\u547d\u9898\u516c\u5f0f\u4f7f\u7528 A A \u4e2d\u7684\u8054\u7ed3\u8bcd\u7ec4\u5408\u800c\u6210\u7684\u516c\u5f0f\u4e0e\u4e4b\u7b49\u503c\uff0c\u5219 A A \u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6 \u901a\u8fc7\u5982\u4e0a\u5bf9\u771f\u503c\u8868\u7684\u5206\u6790\uff0c\u4efb\u4f55\u771f\u503c\u8868\u90fd\u80fd\u4f7f\u7528 \\{\\land, \\lor, \\lnot\\} \\{\\land, \\lor, \\lnot\\} \u4e09\u4e2a\u8fd0\u7b97\u7b26\u8868\u793a\u51fa\u4e00\u4e2a\u547d\u9898\u516c\u5f0f\u3002\u5047\u8bbe\u5b58\u5728\u4e00\u4e2a\u516c\u5f0f P P \uff0c\u4e0d\u5b58\u5728 \\{\\land, \\lor, \\lnot\\} \\{\\land, \\lor, \\lnot\\} \u7ec4\u6210\u7684\u516c\u5f0f\u4e0e\u4e4b\u7b49\u503c\u3002\u4f46\u901a\u8fc7 P P \u7684\u771f\u503c\u8868\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u4e2a\u547d\u9898\u516c\u5f0f Q Q \uff0c\u5219 Q Q \u4e0e P P \u7684\u771f\u503c\u8868\u76f8\u540c\uff0c P=Q P=Q \uff0c\u77db\u76fe\u3002\u56e0\u6b64 \\{\\land, \\lor, \\lnot\\} \\{\\land, \\lor, \\lnot\\} \u662f\u5b8c\u5907\u7684\u3002 \u4ee5\u4e0b\u5217\u51fa\u4e86\u4e00\u90e8\u5206\u8054\u7ed3\u8bcd\u7684\u6700\u5c0f\u5b8c\u5907\u96c6\uff1a \\{\\lor, \\lnot\\} \\{\\lor, \\lnot\\} \\{\\land, \\lnot\\} \\{\\land, \\lnot\\} \\{\\uparrow\\} \\{\\uparrow\\} \\{\\downarrow\\} \\{\\downarrow\\} \\{\\lnot, \\rightarrow\\} \\{\\lnot, \\rightarrow\\} \u5982\u679c A A \u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6\uff0c\u96c6\u5408 B B \u4e2d\u7684\u8054\u7ed3\u8bcd\u53ef\u4ee5\u901a\u8fc7\u7ec4\u5408\u5f97\u5230\u4e0e A A \u4e2d\u8054\u7ed3\u8bcd\u7b49\u4ef7\u7684\u8054\u7ed3\u8bcd\uff0c\u5219 B B \u4e5f\u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6\u3002 \u8bc1\u660e\uff1a \\{\\lor, \\lnot\\} \\{\\lor, \\lnot\\} \u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6\uff1a P\\land Q = \\lnot (\\lnot P\\lor \\lnot Q) P\\land Q = \\lnot (\\lnot P\\lor \\lnot Q) \u8bc1\u660e\uff1a \\{\\land, \\lnot\\} \\{\\land, \\lnot\\} \u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6\uff1a P\\lor Q = \\lnot (\\lnot P\\land \\lnot Q) P\\lor Q = \\lnot (\\lnot P\\land \\lnot Q) \u8bc1\u660e\uff1a \\{\\uparrow\\} \\{\\uparrow\\} \u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6\uff1a \u8bc1\u660e \\lnot P \\lnot P \u53ef\u4ee5\u4ec5\u4f7f\u7528 \\uparrow \\uparrow \u8fd0\u7b97\u7b26\u8868\u793a\uff1a $$ \\begin{aligned} \\lnot P &= \\lnot (P\\land P) \\ &= P\\uparrow P \\end{aligned} $$ \u8bc1\u660e P\\land Q P\\land Q \u53ef\u4ee5\u4ec5\u4f7f\u7528 \\uparrow \\uparrow \u8fd0\u7b97\u7b26\u8868\u793a\uff1a $$ \\begin{aligned} P\\land Q&= \\lnot \\lnot (P\\land Q) \\ &= \\lnot (P\\uparrow Q) \\ &= (P\\uparrow Q) \\uparrow (P\\uparrow Q) \\end{aligned} $$ \u8bc1\u660e\uff1a \\{\\downarrow\\} \\{\\downarrow\\} \u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6\uff1a \u8bc1\u660e \\lnot P \\lnot P \u53ef\u4ee5\u4ec5\u4f7f\u7528 \\downarrow \\downarrow \u8fd0\u7b97\u7b26\u8868\u793a\uff1a $$ \\begin{aligned} \\lnot P &= \\lnot (P\\lor P) \\ &= P\\downarrow P \\end{aligned} $$ \u8bc1\u660e P\\lor Q P\\lor Q \u53ef\u4ee5\u4ec5\u4f7f\u7528 \\downarrow \\downarrow \u8fd0\u7b97\u7b26\u8868\u793a\uff1a $$ \\begin{aligned} P\\lor Q&= \\lnot \\lnot (P\\lor Q) \\ &= \\lnot (P\\downarrow Q) \\ &= (P\\downarrow Q) \\downarrow (P\\downarrow Q) \\end{aligned} $$ \u8bc1\u660e\uff1a \\{\\rightarrow, \\lnot\\} \\{\\rightarrow, \\lnot\\} \u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6\uff1a P\\lor Q = \\lnot \\lnot P\\lor Q = \\lnot P\\rightarrow Q P\\lor Q = \\lnot \\lnot P\\lor Q = \\lnot P\\rightarrow Q","title":"\u547d\u9898\u903b\u8f91\u7684\u7b49\u503c\u548c\u63a8\u7406\u6f14\u7b97"},{"location":"math/discrete-mathematics/chapter-2.html#_1","text":"\u7b49\u503c\uff1a\u8bbe A, B A, B \u4e3a\u516c\u5f0f\uff0c P_1, \\dots, P_n P_1, \\dots, P_n \u662f\u51fa\u73b0\u5728 A, B A, B \u4e2d\u6240\u6709\u7684\u547d\u9898\u53d8\u9879\uff0c\u82e5\u5bf9\u4e8e\u4efb\u610f\u7684\u4e00\u7ec4 \\left\\langle P_1, \\dots, P_n\\right\\rangle \\left\\langle P_1, \\dots, P_n\\right\\rangle \uff0c\u90fd\u6709 A=B A=B \uff0c\u5219\u79f0\u516c\u5f0f A A \u4e0e\u516c\u5f0f B B \u7b49\u503c\uff08\u7b49\u4ef7\uff09\uff0c\u8bb0\u4e3a A\\Leftrightarrow B A\\Leftrightarrow B \u6216 A=B A=B \u3002 \u7b49\u503c\u5173\u7cfb\u6ee1\u8db3\u81ea\u53cd\u6027\u3001\u5bf9\u79f0\u6027\u4e0e\u4f20\u9012\u6027\uff1a A=A A=A \u82e5 A=B A=B \uff0c\u5219 B=A B=A \u82e5 A=B, B=C A=B, B=C \uff0c\u5219 A=C A=C A=B A=B \u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u662f A\\leftrightarrow B A\\leftrightarrow B \u4e3a\u91cd\u8a00\u5f0f\u3002","title":"\u547d\u9898\u903b\u8f91\u7684\u7b49\u503c\u548c\u63a8\u7406\u6f14\u7b97"},{"location":"math/discrete-mathematics/chapter-2.html#_2","text":"\u57fa\u672c\u7684\u7b49\u503c\u516c\u5f0f\u5217\u4e3e\u5982\u4e0b\uff1a \u53cc\u91cd\u5426\u5b9a\u5f8b P = \\lnot \\lnot P P = \\lnot \\lnot P \u7ed3\u5408\u5f8b (P\\lor Q)\\lor R = P \\lor (Q\\lor R) (P\\lor Q)\\lor R = P \\lor (Q\\lor R) (P\\land Q)\\land R = P \\land (Q\\land R) (P\\land Q)\\land R = P \\land (Q\\land R) (P\\leftrightarrow Q)\\leftrightarrow R = P \\leftrightarrow (Q\\leftrightarrow R) (P\\leftrightarrow Q)\\leftrightarrow R = P \\leftrightarrow (Q\\leftrightarrow R) \u8fd0\u7b97\u7b26 \\rightarrow \\rightarrow \u4e0d\u6ee1\u8db3\u7ed3\u5408\u5f8b \u4ea4\u6362\u5f8b P\\lor Q = Q\\lor P P\\lor Q = Q\\lor P P\\land Q = Q\\land P P\\land Q = Q\\land P P\\leftrightarrow Q = Q\\leftrightarrow P P\\leftrightarrow Q = Q\\leftrightarrow P \u8fd0\u7b97\u7b26 \\rightarrow \\rightarrow \u4e0d\u6ee1\u8db3\u4ea4\u6362\u5f8b \u5206\u914d\u5f8b P\\lor (Q\\land R) = (P\\lor Q)\\land (P\\lor R) P\\lor (Q\\land R) = (P\\lor Q)\\land (P\\lor R) P\\land (Q\\lor R) = (P\\land Q)\\lor (P\\land R) P\\land (Q\\lor R) = (P\\land Q)\\lor (P\\land R) P\\rightarrow (Q\\rightarrow R) = (P\\rightarrow Q)\\rightarrow (P\\rightarrow R) P\\rightarrow (Q\\rightarrow R) = (P\\rightarrow Q)\\rightarrow (P\\rightarrow R) \u8fd0\u7b97\u7b26 \\leftrightarrow \\leftrightarrow \u4e0d\u6ee1\u8db3\u5206\u914d\u5f8b \u6052\u7b49\u5f8b P\\lor P = P P\\lor P = P P\\land P = P P\\land P = P P\\rightarrow P = T P\\rightarrow P = T P\\leftrightarrow P = T P\\leftrightarrow P = T \u5438\u6536\u7387 P\\lor (P\\land Q) = P P\\lor (P\\land Q) = P P\\land (P\\lor Q) = P P\\land (P\\lor Q) = P \u6469\u6839\u5f8b \\lnot (P\\lor Q) = \\lnot P\\land \\lnot Q \\lnot (P\\lor Q) = \\lnot P\\land \\lnot Q \\lnot (P\\land Q) = \\lnot P\\lor \\lnot Q \\lnot (P\\land Q) = \\lnot P\\lor \\lnot Q \\lnot (P\\rightarrow Q) = P\\land \\lnot Q \\lnot (P\\rightarrow Q) = P\\land \\lnot Q \\lnot (P\\leftrightarrow Q) = (P\\land \\lnot Q) \\lor (\\lnot P\\land Q) \\lnot (P\\leftrightarrow Q) = (P\\land \\lnot Q) \\lor (\\lnot P\\land Q) \u540c\u4e00\u5f8b P\\lor F = P P\\lor F = P P\\land P = T P\\land P = T T\\rightarrow P = P T\\rightarrow P = P T\\leftrightarrow P = P T\\leftrightarrow P = P P\\rightarrow F = \\lnot P P\\rightarrow F = \\lnot P P\\leftrightarrow F = \\lnot P P\\leftrightarrow F = \\lnot P \u96f6\u5f8b P\\lor T = T P\\lor T = T P\\land F = F P\\land F = F P\\rightarrow T = T P\\rightarrow T = T F\\rightarrow P = T F\\rightarrow P = T \u8865\u4f59\u5f8b P\\lor \\lnot P = T P\\lor \\lnot P = T P\\land \\lnot P = F P\\land \\lnot P = F P\\rightarrow \\lnot P = \\lnot P P\\rightarrow \\lnot P = \\lnot P P\\leftrightarrow \\lnot P = F P\\leftrightarrow \\lnot P = F \u5176\u4ed6\u5e38\u7528\u7684\u7b49\u503c\u516c\u5f0f P\\rightarrow Q = \\lnot Q\\rightarrow \\lnot P P\\rightarrow Q = \\lnot Q\\rightarrow \\lnot P \uff08\u9006\u5426\u547d\u9898\uff09 P\\rightarrow (Q\\rightarrow R) = (P\\land Q)\\rightarrow R P\\rightarrow (Q\\rightarrow R) = (P\\land Q)\\rightarrow R (P\\rightarrow R)\\land (Q\\rightarrow R) = (P\\lor Q) \\rightarrow R (P\\rightarrow R)\\land (Q\\rightarrow R) = (P\\lor Q) \\rightarrow R \u7531\u516c\u5f0f2\u7684\u76f4\u63a5\u63a8\u8bba\uff1a P\\rightarrow (Q\\rightarrow R) = Q\\rightarrow (P\\rightarrow R) P\\rightarrow (Q\\rightarrow R) = Q\\rightarrow (P\\rightarrow R) \u7f6e\u6362\uff1a\u5bf9\u516c\u5f0f A A \u7684\u5b50\u516c\u5f0f B B \uff0c\u4f7f\u7528\u4e0e\u4e4b\u7b49\u503c\u7684\u516c\u5f0f\u8fdb\u884c\u4ee3\u6362\u79f0\u4e3a\u7f6e\u6362 \u8bbe\u7f6e\u6362\u540e\u7684\u516c\u5f0f\u4e3a C C \uff0c\u5219\u5fc5\u6709 A=C A=C","title":"\u7b49\u503c\u516c\u5f0f"},{"location":"math/discrete-mathematics/chapter-2.html#_3","text":"\u4ece\u771f\u503c\u8868\u751f\u6210\u547d\u9898\u516c\u5f0f\u6709\u4e24\u79cd\u65b9\u6cd5\uff0c\u65e2\u53ef\u4ee5\u901a\u8fc7\u503c\u4e3a T T \u7684\u884c\u751f\u6210\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u503c\u4e3a F F \u7684\u884c\u751f\u6210","title":"\u4ece\u771f\u503c\u8868\u8ba1\u7b97\u751f\u6210\u547d\u9898\u516c\u5f0f"},{"location":"math/discrete-mathematics/chapter-2.html#tt","text":"\u5bf9\u4e8e\u5305\u542b n n \u4e2a\u547d\u9898\u53d8\u5143 P_1, \\dots, P_n P_1, \\dots, P_n \u7684\u547d\u9898\u516c\u5f0f\uff0c\u5199\u51fa\u5982\u4e0b\u5408\u53d6\u5f0f\uff1a P_1\\land P_2\\land \\dots \\land P_n P_1\\land P_2\\land \\dots \\land P_n \u5bf9\u4e8e\u771f\u503c\u8868\u7684\u6bcf\u4e2a\u53d6\u503c\u4e3a T T \u7684\u884c\uff0c\u82e5\u5bf9\u5e94\u7684 P_i P_i \u4e3a F F \uff0c\u5219\u5c06\u5408\u53d6\u5f0f\u4e2d\u7684\u5bf9\u5e94 P_i P_i \u66ff\u6362\u4e3a \\lnot P_i \\lnot P_i \u3002\u5c06\u6240\u5f97\u7684\u516c\u5f0f\u4f7f\u7528\u6790\u53d6\u8fd0\u7b97\u7b26\u8fde\u63a5\u5373\u5f97\u7b26\u5408\u771f\u503c\u8868\u7684\u547d\u9898\u516c\u5f0f\u3002","title":"\u4ece\u503c\u4e3aTT\u7684\u884c\u751f\u6210"},{"location":"math/discrete-mathematics/chapter-2.html#ff","text":"\u5bf9\u4e8e\u5305\u542b n n \u4e2a\u547d\u9898\u53d8\u5143 P_1, \\dots, P_n P_1, \\dots, P_n \u7684\u547d\u9898\u516c\u5f0f\uff0c\u5199\u51fa\u5982\u4e0b\u6790\u53d6\u5f0f\uff1a P_1\\lor P_2\\lor \\dots \\lor P_n P_1\\lor P_2\\lor \\dots \\lor P_n \u5bf9\u4e8e\u771f\u503c\u8868\u7684\u6bcf\u4e2a\u53d6\u503c\u4e3a F F \u7684\u884c\uff0c\u82e5\u5bf9\u5e94\u7684 P_i P_i \u4e3a T T \uff0c\u5219\u5c06\u6790\u53d6\u5f0f\u4e2d\u7684\u5bf9\u5e94 P_i P_i \u66ff\u6362\u4e3a \\lnot P_i \\lnot P_i \u3002\u5c06\u6240\u5f97\u7684\u516c\u5f0f\u4f7f\u7528\u5408\u53d6\u8fd0\u7b97\u7b26\u8fde\u63a5\u5373\u5f97\u7b26\u5408\u771f\u503c\u8868\u7684\u547d\u9898\u516c\u5f0f\u3002","title":"\u4ece\u503c\u4e3aFF\u7684\u884c\u751f\u6210"},{"location":"math/discrete-mathematics/chapter-2.html#_4","text":"\u8bbe\u96c6\u5408 A A \u4e3a\u7531\u8054\u7ed3\u8bcd\u7ec4\u6210\u7684\u96c6\u5408\uff0c\u82e5\u4efb\u610f\u547d\u9898\u516c\u5f0f\u90fd\u6709\u901a\u8fc7\u547d\u9898\u516c\u5f0f\u4f7f\u7528 A A \u4e2d\u7684\u8054\u7ed3\u8bcd\u7ec4\u5408\u800c\u6210\u7684\u516c\u5f0f\u4e0e\u4e4b\u7b49\u503c\uff0c\u5219 A A \u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6 \u901a\u8fc7\u5982\u4e0a\u5bf9\u771f\u503c\u8868\u7684\u5206\u6790\uff0c\u4efb\u4f55\u771f\u503c\u8868\u90fd\u80fd\u4f7f\u7528 \\{\\land, \\lor, \\lnot\\} \\{\\land, \\lor, \\lnot\\} \u4e09\u4e2a\u8fd0\u7b97\u7b26\u8868\u793a\u51fa\u4e00\u4e2a\u547d\u9898\u516c\u5f0f\u3002\u5047\u8bbe\u5b58\u5728\u4e00\u4e2a\u516c\u5f0f P P \uff0c\u4e0d\u5b58\u5728 \\{\\land, \\lor, \\lnot\\} \\{\\land, \\lor, \\lnot\\} \u7ec4\u6210\u7684\u516c\u5f0f\u4e0e\u4e4b\u7b49\u503c\u3002\u4f46\u901a\u8fc7 P P \u7684\u771f\u503c\u8868\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u4e2a\u547d\u9898\u516c\u5f0f Q Q \uff0c\u5219 Q Q \u4e0e P P \u7684\u771f\u503c\u8868\u76f8\u540c\uff0c P=Q P=Q \uff0c\u77db\u76fe\u3002\u56e0\u6b64 \\{\\land, \\lor, \\lnot\\} \\{\\land, \\lor, \\lnot\\} \u662f\u5b8c\u5907\u7684\u3002 \u4ee5\u4e0b\u5217\u51fa\u4e86\u4e00\u90e8\u5206\u8054\u7ed3\u8bcd\u7684\u6700\u5c0f\u5b8c\u5907\u96c6\uff1a \\{\\lor, \\lnot\\} \\{\\lor, \\lnot\\} \\{\\land, \\lnot\\} \\{\\land, \\lnot\\} \\{\\uparrow\\} \\{\\uparrow\\} \\{\\downarrow\\} \\{\\downarrow\\} \\{\\lnot, \\rightarrow\\} \\{\\lnot, \\rightarrow\\} \u5982\u679c A A \u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6\uff0c\u96c6\u5408 B B \u4e2d\u7684\u8054\u7ed3\u8bcd\u53ef\u4ee5\u901a\u8fc7\u7ec4\u5408\u5f97\u5230\u4e0e A A \u4e2d\u8054\u7ed3\u8bcd\u7b49\u4ef7\u7684\u8054\u7ed3\u8bcd\uff0c\u5219 B B \u4e5f\u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6\u3002 \u8bc1\u660e\uff1a \\{\\lor, \\lnot\\} \\{\\lor, \\lnot\\} \u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6\uff1a P\\land Q = \\lnot (\\lnot P\\lor \\lnot Q) P\\land Q = \\lnot (\\lnot P\\lor \\lnot Q) \u8bc1\u660e\uff1a \\{\\land, \\lnot\\} \\{\\land, \\lnot\\} \u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6\uff1a P\\lor Q = \\lnot (\\lnot P\\land \\lnot Q) P\\lor Q = \\lnot (\\lnot P\\land \\lnot Q) \u8bc1\u660e\uff1a \\{\\uparrow\\} \\{\\uparrow\\} \u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6\uff1a \u8bc1\u660e \\lnot P \\lnot P \u53ef\u4ee5\u4ec5\u4f7f\u7528 \\uparrow \\uparrow \u8fd0\u7b97\u7b26\u8868\u793a\uff1a $$ \\begin{aligned} \\lnot P &= \\lnot (P\\land P) \\ &= P\\uparrow P \\end{aligned} $$ \u8bc1\u660e P\\land Q P\\land Q \u53ef\u4ee5\u4ec5\u4f7f\u7528 \\uparrow \\uparrow \u8fd0\u7b97\u7b26\u8868\u793a\uff1a $$ \\begin{aligned} P\\land Q&= \\lnot \\lnot (P\\land Q) \\ &= \\lnot (P\\uparrow Q) \\ &= (P\\uparrow Q) \\uparrow (P\\uparrow Q) \\end{aligned} $$ \u8bc1\u660e\uff1a \\{\\downarrow\\} \\{\\downarrow\\} \u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6\uff1a \u8bc1\u660e \\lnot P \\lnot P \u53ef\u4ee5\u4ec5\u4f7f\u7528 \\downarrow \\downarrow \u8fd0\u7b97\u7b26\u8868\u793a\uff1a $$ \\begin{aligned} \\lnot P &= \\lnot (P\\lor P) \\ &= P\\downarrow P \\end{aligned} $$ \u8bc1\u660e P\\lor Q P\\lor Q \u53ef\u4ee5\u4ec5\u4f7f\u7528 \\downarrow \\downarrow \u8fd0\u7b97\u7b26\u8868\u793a\uff1a $$ \\begin{aligned} P\\lor Q&= \\lnot \\lnot (P\\lor Q) \\ &= \\lnot (P\\downarrow Q) \\ &= (P\\downarrow Q) \\downarrow (P\\downarrow Q) \\end{aligned} $$ \u8bc1\u660e\uff1a \\{\\rightarrow, \\lnot\\} \\{\\rightarrow, \\lnot\\} \u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6\uff1a P\\lor Q = \\lnot \\lnot P\\lor Q = \\lnot P\\rightarrow Q P\\lor Q = \\lnot \\lnot P\\lor Q = \\lnot P\\rightarrow Q","title":"\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6"},{"location":"math/queue-theory/index.html","text":"\u5bf9\u7b56\u3001\u51b3\u7b56\u4e0e\u6392\u961f\u8bba \u00b6 \u8bfe\u7a0b\u76ee\u5f55\uff1a Chapter 1\uff0c Chapter 2\uff0c Chapter 3\uff0c Chapter 4\uff0c Chapter 5\uff0c Chapter 6\uff0c Chapter 7\uff0c Chapter 8\uff0c Chapter 9\uff0c Chapter 10\uff0c Chapter 11\uff0c Chapter 12 \uff0c\u5e38\u89c1\u7684\u6392\u961f\u6a21\u578b","title":"\u76ee\u5f55"},{"location":"math/queue-theory/index.html#_1","text":"\u8bfe\u7a0b\u76ee\u5f55\uff1a Chapter 1\uff0c Chapter 2\uff0c Chapter 3\uff0c Chapter 4\uff0c Chapter 5\uff0c Chapter 6\uff0c Chapter 7\uff0c Chapter 8\uff0c Chapter 9\uff0c Chapter 10\uff0c Chapter 11\uff0c Chapter 12 \uff0c\u5e38\u89c1\u7684\u6392\u961f\u6a21\u578b","title":"\u5bf9\u7b56\u3001\u51b3\u7b56\u4e0e\u6392\u961f\u8bba"},{"location":"math/queue-theory/chapter-12.html","text":"\u5e38\u89c1\u6392\u961f\u6a21\u578b \u00b6 \u4e00\u4e2a\u6392\u961f\u6a21\u578b\u4e3b\u8981\u7531\u4ee5\u4e0b\u90e8\u5206\u7ec4\u6210 \u987e\u5ba2\uff08\u5b9e\u4f53\uff09\u5904\u7406 \u5b9e\u4f53\u6392\u961f\u7b49\u5f85\u5904\u7406\uff08\u7cfb\u7edf\u7684\u6392\u961f\u7b56\u7565\u53ef\u80fd\u4e0d\u540c\uff0c\u635f\u5931\u5236\u4e0d\u5141\u8bb8\u6392\u961f\u3001\u6df7\u5408\u5236\u5141\u8bb8\u6392\u6709\u9650\u957f\u5ea6\u7684\u961f\u5217\uff09 \u5b9e\u4f53\u5904\u7406\u5b8c\u6bd5\uff0c\u79bb\u5f00\u7cfb\u7edf \u6392\u961f\u6a21\u578b\u7684\u63cf\u8ff0 \u00b6 \u8fdb\u5165\u7cfb\u7edf \u00b6 \u5047\u8bbe\u8fdb\u5165\u7cfb\u7edf\u7684\u5b9e\u4f53\u6570\u91cf\u65e0\u9650\u3002\u8003\u5bdf\u76f8\u90bb\u4e24\u4e2a\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\u7684\u65f6\u95f4\u5dee\uff1a \u5bf9\u4e8e\u5b9a\u957f\u5206\u5e03\uff0c\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\u7684\u65f6\u95f4\u5dee\u4e3a\u5e38\u91cf t t \uff0c t t \u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a\uff1a f(t; \\alpha)=\\left\\{ \\begin{aligned} & 1 & t=\\alpha \\\\ & 0 & t\\not =\\alpha \\end{aligned} \\right . f(t; \\alpha)=\\left\\{ \\begin{aligned} & 1 & t=\\alpha \\\\ & 0 & t\\not =\\alpha \\end{aligned} \\right . Poisson \u6d41\uff0c\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\u7684\u65f6\u95f4\u5dee\u72ec\u7acb\u540c\u5206\u5e03\uff0c\u670d\u4ece\u53c2\u6570\u4e3a \\lambda \\lambda \u7684\u6307\u6570\u5206\u5e03 f_{\\xi_i}(t; \\lambda)=\\left\\{ \\begin{aligned} & \\lambda e^{-\\lambda t} & t\\geq 0 \\\\ & 0 & t < 0 \\end{aligned} \\right . f_{\\xi_i}(t; \\lambda)=\\left\\{ \\begin{aligned} & \\lambda e^{-\\lambda t} & t\\geq 0 \\\\ & 0 & t < 0 \\end{aligned} \\right . Erlang \u5206\u5e03\uff0c\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\u7684\u65f6\u95f4\u5dee\u72ec\u7acb\u540c\u5206\u5e03\uff0c\u670d\u4ece\u5982\u4e0b\u516c\u5f0f\u6240\u793a\u7684\u5206\u5e03\u3002\u82e5\u67d0\u4e2a\u7cfb\u7edf\u4e2d\u6709 K K \u4e2a\u5e76\u8054\u7684\u670d\u52a1\u53f0\uff0c\u8f93\u5165\u5b9e\u4f53\u4e3a Poisson \u6d41\uff0c\u5219\u7b2c K K \u4e2a\u670d\u52a1\u53f0\u7684\u987e\u5ba2\u6d41\u4e3a Erlang \u6d41\uff0c\u524d\u9762\u6240\u6709 K - 1 K - 1 \u4e2a\u670d\u52a1\u53f0\u5728\u7b2c\u4e00\u4e2a\u5b9e\u4f53\u5230\u8fbe\u4ee5\u540e\u7684\u8f93\u5165\u6d41\u540c\u6837\u4e3a Erlang \u6d41\u3002 f(t; \\lambda, K)=\\left\\{ \\begin{aligned} & \\frac{\\lambda(\\lambda t)^{K-1}}{(K-1)!} & t\\geq 0 \\\\ & 0 & t < 0 \\end{aligned} \\right . f(t; \\lambda, K)=\\left\\{ \\begin{aligned} & \\frac{\\lambda(\\lambda t)^{K-1}}{(K-1)!} & t\\geq 0 \\\\ & 0 & t < 0 \\end{aligned} \\right . \u5b9e\u4f53\u6392\u961f\u4e0e\u5904\u7406 \u00b6 \u7cfb\u7edf\u4e2d\u53ef\u80fd\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u670d\u52a1\u53f0\u3002\u5728\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u670d\u52a1\u53f0\u90fd\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u65f6\uff0c\u65b0\u8fdb\u5165\u7684\u5b9e\u4f53\u65e0\u6cd5\u7acb\u5373\u8fdb\u884c\u5904\u7406\uff0c\u800c\u662f\u8fdb\u5165\u961f\u5217\u6216\u76f4\u63a5\u79bb\u5f00\uff0c\u53d6\u51b3\u4e8e\u7cfb\u7edf\u7684\u6392\u961f\u7b56\u7565\u3002\u6392\u961f\u7b56\u7565\u53ef\u4ee5\u5206\u4e3a\u635f\u5931\u5236\u3001\u7b49\u5f85\u5236\u4e0e\u6df7\u5408\u5236\u3002 \u5728\u635f\u5931\u5236\u7cfb\u7edf\u4e2d\uff0c\u5982\u679c\u65b0\u8fdb\u5165\u7684\u5b9e\u4f53\u4e0d\u80fd\u88ab\u7acb\u5373\u5904\u7406\uff0c\u5219\u4f1a\u79bb\u5f00\u7cfb\u7edf\u3002 \u5728\u7b49\u5f85\u5236\u7cfb\u7edf\u4e2d\uff0c\u5982\u679c\u65b0\u8fdb\u5165\u7684\u5b9e\u4f53\u4e0d\u80fd\u88ab\u7acb\u5373\u5904\u7406\uff0c\u5219\u4f1a\u5728\u961f\u5217\u4e2d\u7b49\u5f85\uff0c\u76f4\u5230\u88ab\u5904\u7406\u3002 \u5728\u6df7\u5408\u5236\u7cfb\u7edf\u4e2d\uff0c\u5982\u679c\u65b0\u8fdb\u5165\u7684\u5b9e\u4f53\u4e0d\u80fd\u88ab\u7acb\u5373\u5904\u7406\u4e14\u6b64\u65f6\u7684\u961f\u5217\u957f\u5ea6\u5927\u4e8e\u67d0\u4e00\u5e38\u6570\u503c\uff0c\u5219\u4f1a\u79bb\u5f00\u7cfb\u7edf\uff0c\u5426\u5219\u4f1a\u8fdb\u5165\u961f\u5217\u7b49\u5f85\u3002 \u5b9e\u4f53\u5728\u6392\u961f\u8fc7\u7a0b\u4e2d\u7684\u884c\u4e3a\u53ef\u4ee5\u5206\u4e3a\u5982\u4e0b\u7c7b\u578b\uff1a \u79bb\u5f00\uff1a\u5f53\u5b9e\u4f53\u5f97\u77e5\u9700\u8981\u7b49\u5f85\u6216\u6ca1\u6709\u8010\u5fc3\u7ee7\u7eed\u7b49\u5f85\u65f6\uff0c\u5b9e\u4f53\u53ef\u80fd\u9000\u51fa\u961f\u5217 \u53d8\u6362\uff1a\u5373\u5b9e\u4f53\u4e3a\u51cf\u5c11\u6392\u961f\u65f6\u95f4\u800c\u5728\u4e0d\u540c\u670d\u52a1\u53f0\u7684\u961f\u5217\u4e4b\u95f4\u79fb\u52a8 \u670d\u52a1\u53f0\u4f1a\u6309\u7167\u5982\u4e0b\u53ef\u80fd\u7684\u65b9\u5f0f\u8fdb\u884c\u670d\u52a1\uff1a FCFS\uff1a\u5148\u8fdb\u5165\u961f\u5217\u7684\u5148\u8fdb\u884c\u5904\u7406 LCFS\uff1a\u540e\u8fdb\u5165\u961f\u5217\u7684\u5148\u8fdb\u884c\u5904\u7406 \u968f\u673a\u5904\u7406 PS\uff1a\u4f18\u5148\u7ea7\u9ad8\u7684\u5b9e\u4f53\u5148\u8fdb\u884c\u5904\u7406 \u65ad\u7eed\u5904\u7406\uff1a\u5728\u5904\u7406\u67d0\u4e2a\u5b9e\u4f53\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u8f6c\u800c\u5904\u7406\u53e6\u4e00\u4e2a\u5b9e\u4f53\uff0c\u4e0d\u65ad\u5faa\u73af\u76f4\u5230\u5b9e\u4f53\u5904\u7406\u5b8c\u6210 \u5728\u7cfb\u7edf\u4e2d\u7684\u670d\u52a1\u53f0\u7684\u670d\u52a1\u65f6\u95f4\u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u6982\u7387\u5206\u5e03\u4e3a\u5e38\u6570\u3001\u6307\u6570\u5206\u5e03\u3001K\u7ea7 Erlang \u5206\u5e03\u3001\u4e00\u822c\u5206\u5e03\u7b49\u3002 \u7cfb\u7edf\u7684\u7b26\u53f7\u8868\u793a \u00b6 Kendall\u8bb0\u53f7\uff0c\u683c\u5f0f\u4e3a X/Y/Z/A/B/C X/Y/Z/A/B/C X X \u8868\u793a\u5b9e\u4f53\u5230\u8fbe\u95f4\u9694\u65f6\u95f4\u7684\u5206\u5e03 M M \u8868\u793a\u5230\u8fbe\u8fc7\u7a0b\u4e3a Poisson \u8fc7\u7a0b\uff08\u95f4\u9694\u65f6\u95f4\u670d\u4ece\u6307\u6570\u5206\u5e03\uff09\u6216\u8d1f\u6307\u6570\u5206\u5e03 D D \u8868\u793a\u95f4\u9694\u65f6\u95f4\u4e3a\u5e38\u6570 E_k E_k \u8868\u793a\u95f4\u9694\u65f6\u95f4\u670d\u4ece k k \u9636 Erlang \u5206\u5e03 G G \u8868\u793a\u95f4\u9694\u65f6\u95f4\u670d\u4ece\u4e00\u822c\u3001\u76f8\u4e92\u72ec\u7acb\u7684\u968f\u673a\u5206\u5e03 Y Y \u8868\u793a\u670d\u52a1\u53f0\u5355\u6b21\u670d\u52a1\u65f6\u95f4\u7684\u5206\u5e03\uff0c\u8bb0\u53f7\u4e0e X X \u7684\u542b\u4e49\u76f8\u540c Z Z \u8868\u793a\u670d\u52a1\u53f0\u4e2a\u6570 A A \u8868\u793a\u7cfb\u7edf\u7684\u7b49\u5f85\u7a7a\u95f4\u5bb9\u91cf\uff0c 0 0 \u4e3a\u635f\u5931\u5236\u7cfb\u7edf\uff0c \\infty \\infty \u4e3a\u7b49\u5f85\u5236\u7cfb\u7edf\uff0c\u5426\u5219\u4e3a\u6df7\u5408\u5236\u7cfb\u7edf\u3002 B B \u8868\u793a\u5b9e\u4f53\u7684\u603b\u6570\u91cf\uff0c \\infty \\infty \u8868\u793a\u5b9e\u4f53\u6e90\u65e0\u9650 C C \u8868\u793a\u670d\u52a1\u89c4\u5219 A, B, C A, B, C \u53c2\u6570\u53ef\u4ee5\u7701\u7565\u3002\u5206\u522b\u7b49\u4ef7\u4e8e \\infty, \\infty, \\mathit{FCFS} \\infty, \\infty, \\mathit{FCFS} \u7cfb\u7edf\u7684\u89c2\u6d4b\u6307\u6807 \u00b6 \u8861\u91cf\u7cfb\u7edf\u6027\u80fd\u7684\u5e38\u7528\u89c2\u6d4b\u6307\u6807\u4e3a\uff1a N(L) N(L) \uff1a\u7a33\u6001\u7cfb\u7edf\u7684\u961f\u957f\uff08\u6307\u7cfb\u7edf\u5185\u6240\u6709\u7684\u5b9e\u4f53\u6570\u91cf\uff09 N_q(L_q) N_q(L_q) \u7a33\u6001\u7cfb\u7edf\u7684\u6392\u961f\u957f T(W) T(W) \uff1a\u987e\u5ba2\u5728\u7a33\u6001\u7cfb\u7edf\u4e2d\u7684\u505c\u7559\u65f6\u95f4\uff08\u5904\u7406+\u7b49\u5f85\uff09 T_q(W_q) T_q(W_q) \uff1a\u987e\u5ba2\u5728\u7a33\u6001\u7cfb\u7edf\u4e2d\u7684\u7b49\u5f85\u65f6\u95f4 p_n p_n \uff1a\u7a33\u6001\u7cfb\u7edf\u4efb\u610f\u65f6\u523b\u72b6\u6001\u4e3a n n \u7684\u6982\u7387\uff0c p_n=P(N=n)=\\lim_{t\\rightarrow \\infty}P(N(t) = n) p_n=P(N=n)=\\lim_{t\\rightarrow \\infty}P(N(t) = n) \\rho \\rho \uff1a\u5229\u7528\u7387 p_D p_D \uff1a\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\u65f6\u9700\u8981\u7b49\u5f85\u7684\u6982\u7387 \u82e5\u5c06\u7cfb\u7edf\u89c6\u4e3a\u7ba1\u9053\uff0c\u7cfb\u7edf\u4e2d\u5b9e\u4f53\u7684\u6570\u91cf\u7b49\u4e8e\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\u7684\u901f\u5ea6\u4e0e\u7cfb\u7edf\u5e73\u5747\u54cd\u5e94\uff08\u5904\u7406\uff09\u65f6\u95f4\u4e4b\u79ef\u3002 \u5bf9\u4e8e M/M/s M/M/s \u7cfb\u7edf\uff0c\u4ee4 \\lambda \\lambda \u4e3a\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\u7684\u901f\u5ea6\uff0c \\mu \\mu \u4e3a\u670d\u52a1\u53f0\u5904\u7406\u5b9e\u4f53\u7684\u901f\u5ea6\uff0c s s \u4e3a\u670d\u52a1\u53f0\u7684\u6570\u91cf\uff0c\u5219\uff1a \\begin{aligned} L &= \\lambda_e W \\\\ L_q &= \\lambda_e W_q \\end{aligned} \\begin{aligned} L &= \\lambda_e W \\\\ L_q &= \\lambda_e W_q \\end{aligned} \u968f\u673a\u8fc7\u7a0b \u00b6 \u5e38\u89c1\u7684\u968f\u673a\u8fc7\u7a0b\u6709 Markov \u8fc7\u7a0b\u3001\u751f\u706d\u8fc7\u7a0b\u3001 Poisson \u8fc7\u7a0b\u7b49\u3002\u6240\u6709\u7684 Poisson \u8fc7\u7a0b\u90fd\u662f\u751f\u706d\u8fc7\u7a0b\uff0c\u6240\u6709\u7684\u751f\u706d\u8fc7\u7a0b\u90fd\u662f Markov \u8fc7\u7a0b\u3002 Markov \u8fc7\u7a0b \u00b6 \u7279\u70b9\uff1a t_0 t_0 \u65f6\u523b\u7684\u72b6\u6001\u4e0e\u4efb\u610f t<t_0 t<t_0 \u65f6\u7684\u72b6\u6001\u65e0\u5173 Markov \u94fe\u7531\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u4e2d\u7684\u79bb\u6563\u72b6\u6001\u7ec4\u5408\u3002\u5bf9\u4e8e Markov \u8fc7\u7a0b\uff0c\u7cfb\u7edf\u65e0\u8bb0\u5fc6\u6027\uff0c\u5f53\u524d\u7684\u72b6\u6001\u4e0d\u4f1a\u5bf9\u540e\u9762\u7684\u72b6\u6001\u4ea7\u751f\u5f71\u54cd\u3002 M/M/s M/M/s \u7cfb\u7edf\u53ef\u4ee5\u4f7f\u7528 Markov \u8fc7\u7a0b\u5efa\u6a21\u3002\u961f\u5217\u4e2d\u5b9e\u4f53\u7684\u6570\u91cf\u662f\u4e00\u4e2a Markov \u94fe\u3002 \u751f\u706d\u8fc7\u7a0b \u00b6 \u751f\u706d\u8fc7\u7a0b\u6309\u5982\u4e0b\u56fe\u8fdb\u884c\u63cf\u8ff0\uff08\u72b6\u6001\u8f6c\u79fb\u56fe\uff09\uff1a \u5047\u8bbe\u5b9e\u4f53\u79bb\u6563\u8fdb\u5165\u7684 M/M/s M/M/s \u7cfb\u7edf\uff0c\u961f\u5217\u4e2d\u7684\u5b9e\u4f53\u6570\u91cf\u670d\u4ece\u751f\u706d\u8fc7\u7a0b Poisson \u8fc7\u7a0b \u00b6 \u5b9e\u4f53\u8fdb\u5165\u7684\u65f6\u95f4\u5dee\u76f8\u4e92\u72ec\u7acb\u4e14\u670d\u4ece\u540c\u4e00\u6307\u6570\u5206\u5e03\u7684\u8fc7\u7a0b \u751f\u706d\u8fc7\u7a0b \u00b6 \u5bf9\u4e8e\u751f\u706d\u8fc7\u7a0b\uff0c\u6709\u5982\u4e0b\u5047\u8bbe \u6bcf\u4e2a\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf \u5b9a\u4e49\u7cfb\u7edf\u7684\u72b6\u6001\u4e3a\u7cfb\u7edf\u4e2d\u7684\u5b9e\u4f53\u6570\u91cf n n \u4e00\u4e2a\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\uff0c\u7cfb\u7edf\u7684\u72b6\u6001\u7531 n-1 n-1 \u8f6c\u53d8\u4e3a n n \u4e00\u4e2a\u5b9e\u4f53\u79bb\u5f00\u7cfb\u7edf\uff0c\u7cfb\u7edf\u7684\u72b6\u6001\u7531 n n \u8f6c\u53d8\u4e3a n+1 n+1 \u7cfb\u7edf\u5904\u4e8e\u72b6\u6001 n n \u65f6\uff0c\u5b9a\u4e49\u5b9e\u4f53\u8fdb\u5165\u7684\u901f\u5ea6\u4e3a \\lambda _n \\lambda _n \uff0c\u7cfb\u7edf\u7684\u5904\u7406\u901f\u5ea6\u4e3a \\mu_n \\mu_n \u3002\u5bf9\u4e8e \\lambda_n \\lambda_n \uff0c n\\geq 0 n\\geq 0 \uff1b\u5bf9\u4e8e \\mu_n \\mu_n \uff0c n>0 n>0 \u95ee\u9898\uff1a\u7cfb\u7edf\u5904\u4e8e\u7a33\u5b9a\u72b6\u6001\u65f6\uff0c\u751f\u706d\u7cfb\u7edf\u5904\u4e8e\u72b6\u6001 n n \u7684\u6982\u7387 p_n p_n \uff1f \u5bf9\u4e8e\u5904\u4e8e\u72b6\u6001 j j \u7684\u7cfb\u7edf\uff0c\u8003\u5bdf\u4e00\u4e2a\u6781\u77ed\u7684\u65f6\u95f4\u95f4\u9694 \\Delta t \\Delta t \uff0c\u7531\u4e8e \\Delta t \\Delta t \u6781\u77ed\uff0c\u53ef\u4ee5\u5ffd\u7565 \\Delta t \\Delta t \u65f6\u95f4\u5185\u4e24\u4e2a\u5b9e\u4f53\u540c\u65f6\u8fdb\u5165/\u79bb\u5f00\u7cfb\u7edf\u6216\u4e00\u4e2a\u5b9e\u4f53\u8fdb\u5165\u3001\u4e00\u4e2a\u5b9e\u4f53\u79bb\u5f00\u7cfb\u7edf\u7684\u60c5\u51b5\u3002 \\Delta t \\Delta t \u65f6\u95f4\u5185\u7cfb\u7edf\u53d1\u751f\u53d8\u5316\u7684\u6982\u7387\u5982\u4e0b\uff1a \u4e00\u4e2a\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\uff1a P(n(t+\\Delta t)=j+1 | n(t) = j)=\\lambda_j\\Delta t P(n(t+\\Delta t)=j+1 | n(t) = j)=\\lambda_j\\Delta t \u4e00\u4e2a\u5b9e\u4f53\u79bb\u5f00\u7cfb\u7edf\uff1a P(n(t+\\Delta t)=j-1| n(t) = j) = \\mu_j\\Delta t P(n(t+\\Delta t)=j-1| n(t) = j) = \\mu_j\\Delta t \u7cfb\u7edf\u5728 \\Delta t \\Delta t \u65f6\u95f4\u5185\u6ca1\u6709\u53d1\u751f\u72b6\u6001\u6539\u53d8\uff1a P(n(t+\\Delta t) = j | n(t)=j) = 1 - (\\lambda_j+\\mu_j)\\Delta t P(n(t+\\Delta t) = j | n(t)=j) = 1 - (\\lambda_j+\\mu_j)\\Delta t \u6839\u636e\u5047\u8bbe\uff0c\u5904\u4e8e\u72b6\u6001 i i \u7684\u7cfb\u7edf\u5728 t+\\Delta t t+\\Delta t \u65f6\u53ea\u53ef\u80fd\u5904\u4e8e i-1, i, i+1 i-1, i, i+1 \u4e09\u79cd\u72b6\u6001\u4e2d\u7684\u4e00\u79cd\u3002\u4e5f\u5373\uff0c\u5904\u4e8e\u72b6\u6001 i i \u7684\u7cfb\u7edf\u5728 t-\\Delta t t-\\Delta t \u65f6\u53ea\u53ef\u80fd\u5904\u4e8e i-1, i, i+1 i-1, i, i+1 \u4e09\u79cd\u72b6\u6001\u4e2d\u7684\u4e00\u79cd\u3002\u7531\u6b64\uff0c\u53ef\u4ee5\u5217\u5f0f\u5982\u4e0b\uff1a \\begin{aligned} p_0(t+\\Delta t) &= (1-\\lambda_0\\Delta t)p_0(t) + \\mu_1\\Delta tp_1(t) \\\\ p_j(t+\\Delta t) &= \\lambda_{j-1}\\Delta tp_{j-1}(t)+(1-\\mu_j\\Delta t-\\lambda_j\\Delta t)p_j(t)+\\mu_{j+1}\\Delta tp_{j+1}(t) \\end{aligned} \\begin{aligned} p_0(t+\\Delta t) &= (1-\\lambda_0\\Delta t)p_0(t) + \\mu_1\\Delta tp_1(t) \\\\ p_j(t+\\Delta t) &= \\lambda_{j-1}\\Delta tp_{j-1}(t)+(1-\\mu_j\\Delta t-\\lambda_j\\Delta t)p_j(t)+\\mu_{j+1}\\Delta tp_{j+1}(t) \\end{aligned} \u6574\u7406\u540e\u53d6\u6781\u9650 \\Delta t\\rightarrow 0 \\Delta t\\rightarrow 0 \uff0c\u4e0a\u5f0f\u53d8\u4e3a\u5bfc\u6570\u5f62\u5f0f\uff1a \\begin{aligned} &\\lim_{\\Delta t\\rightarrow 0} \\frac{p_j(t+\\Delta t)-p_j(t)}{\\Delta t}=\\lambda_{j-1}p_{j-1}(t)+\\mu_{j+1}p_{j+1}(t) - (\\mu_j+\\lambda_j)p_j(t) \\\\ \\Rightarrow &\\frac{\\mathrm dp_j(t)}{\\mathrm dt}=\\lambda_{j-1}p_{j-1}(t)+\\mu_{j+1}p_{j+1}(t) - (\\mu_j+\\lambda_j)p_j(t) \\end{aligned} \\begin{aligned} &\\lim_{\\Delta t\\rightarrow 0} \\frac{p_j(t+\\Delta t)-p_j(t)}{\\Delta t}=\\lambda_{j-1}p_{j-1}(t)+\\mu_{j+1}p_{j+1}(t) - (\\mu_j+\\lambda_j)p_j(t) \\\\ \\Rightarrow &\\frac{\\mathrm dp_j(t)}{\\mathrm dt}=\\lambda_{j-1}p_{j-1}(t)+\\mu_{j+1}p_{j+1}(t) - (\\mu_j+\\lambda_j)p_j(t) \\end{aligned} \u5f53 t\\rightarrow \\infty t\\rightarrow \\infty \u65f6\uff0c\u7cfb\u7edf\u8d8b\u4e8e\u7a33\u6001\uff0c\u5219\u6709 \\lim_{t\\rightarrow \\infty}p_j(t) = p_j \\lim_{t\\rightarrow \\infty}p_j(t) = p_j \uff0c\u6536\u655b\u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u4e3a \\lim_{t\\rightarrow\\infty} \\frac{\\mathrm dp_j(t)}{\\mathrm dt}=0 \\lim_{t\\rightarrow\\infty} \\frac{\\mathrm dp_j(t)}{\\mathrm dt}=0 \u3002\u5373 \\lambda_{j-1}p_{j-1}(t)+\\mu_{j+1}p_{j+1}(t) - (\\mu_j+\\lambda_j)p_j(t)=0 \\lambda_{j-1}p_{j-1}(t)+\\mu_{j+1}p_{j+1}(t) - (\\mu_j+\\lambda_j)p_j(t)=0 \u3002 \u89e3 p_{j+1} p_{j+1} \uff0c\u89e3\u5f97\uff1a p_{j+1} = \\left(\\frac{\\mu_j+\\lambda_j}{\\mu_{j+1}}\\right)p_j-\\frac{\\lambda_{j-1}}{\\mu_{j+1}}p_{j-1} p_{j+1} = \\left(\\frac{\\mu_j+\\lambda_j}{\\mu_{j+1}}\\right)p_j-\\frac{\\lambda_{j-1}}{\\mu_{j+1}}p_{j-1} \u5bf9\u4e8e p_1 p_1 \uff0c\u6709 p_1=\\frac{\\lambda_0}{\\mu_1}p_0 p_1=\\frac{\\lambda_0}{\\mu_1}p_0 \u3002 \u6839\u636e\u9012\u63a8\u516c\u5f0f\uff0c\u53ef\u4ee5\u7528 p_0 p_0 \u8868\u793a\u51fa p_j p_j \uff1a \\begin{aligned} p_2&=\\left(\\frac{\\mu_1+\\lambda_1}{\\mu_2}\\right)p_1-\\frac{\\lambda _0}{\\mu_2}p_0 = \\frac{\\lambda_0(\\mu_1+\\lambda_1)}{\\mu_1\\mu_2}p_0-\\frac{\\lambda_0}{\\mu_2}p_0=\\frac{\\lambda_0\\lambda_1}{\\mu_1\\mu_2}p_0 \\\\ p_3&=\\left(\\frac{\\mu_2+\\lambda_2}{\\mu_3}\\right)p_2-\\frac{\\lambda_1}{\\mu_3}p_1=\\frac{\\lambda_0\\lambda_1(\\mu_2+\\lambda_2)}{\\mu_1\\mu_2\\mu_3}p_0-\\frac{\\lambda_0\\lambda_1}{\\mu_1\\mu_3}p_0=\\frac{\\lambda_0\\lambda_1\\lambda_2}{\\mu_1\\mu_2\\mu_3}p_0 \\\\ &\\vdots \\\\ &p_j = \\frac{\\lambda_0\\lambda_1\\cdots\\lambda_{j-1}}{\\mu_1\\mu_2\\cdots\\mu_j}p_0=p_0\\prod_{i = 1}^{j}\\frac{\\lambda_{i-1}}{\\mu_i} \\end{aligned} \\begin{aligned} p_2&=\\left(\\frac{\\mu_1+\\lambda_1}{\\mu_2}\\right)p_1-\\frac{\\lambda _0}{\\mu_2}p_0 = \\frac{\\lambda_0(\\mu_1+\\lambda_1)}{\\mu_1\\mu_2}p_0-\\frac{\\lambda_0}{\\mu_2}p_0=\\frac{\\lambda_0\\lambda_1}{\\mu_1\\mu_2}p_0 \\\\ p_3&=\\left(\\frac{\\mu_2+\\lambda_2}{\\mu_3}\\right)p_2-\\frac{\\lambda_1}{\\mu_3}p_1=\\frac{\\lambda_0\\lambda_1(\\mu_2+\\lambda_2)}{\\mu_1\\mu_2\\mu_3}p_0-\\frac{\\lambda_0\\lambda_1}{\\mu_1\\mu_3}p_0=\\frac{\\lambda_0\\lambda_1\\lambda_2}{\\mu_1\\mu_2\\mu_3}p_0 \\\\ &\\vdots \\\\ &p_j = \\frac{\\lambda_0\\lambda_1\\cdots\\lambda_{j-1}}{\\mu_1\\mu_2\\cdots\\mu_j}p_0=p_0\\prod_{i = 1}^{j}\\frac{\\lambda_{i-1}}{\\mu_i} \\end{aligned} \u7531\u4e8e\u7cfb\u7edf\u7684\u72b6\u6001\u53ea\u53ef\u80fd\u53d6 0\\sim\\infty 0\\sim\\infty \u4e4b\u95f4\u7684\u6574\u6570\u503c\uff0c\u6982\u7387\u4e4b\u548c\u4e3a 1 1 \uff0c\u53ef\u4ee5\u8ba1\u7b97\u51fa p_0 p_0 \uff1a p_0=\\frac{1}{1+\\sum_{n=1}^\\infty \\prod_{i=0}^{n}\\frac{\\lambda_{i-1}}{\\mu_i}} p_0=\\frac{1}{1+\\sum_{n=1}^\\infty \\prod_{i=0}^{n}\\frac{\\lambda_{i-1}}{\\mu_i}} M/M/1\u961f\u5217 \u00b6 \u5bf9\u4e8e M/M/1 M/M/1 \u7cfb\u7edf\uff0c \\lambda_0=\\lambda_1=\\cdots=\\lambda_n=\\lambda, \\mu_1=\\cdots=\\mu_n=\\mu \\lambda_0=\\lambda_1=\\cdots=\\lambda_n=\\lambda, \\mu_1=\\cdots=\\mu_n=\\mu \u3002 \u7531\u6b64\uff0c\u8ba1\u7b97\u51fa M/M/1 M/M/1 \u7cfb\u7edf\u5728\u7a33\u6001\u65f6\u5904\u4e8e p_0 p_0 \u7684\u6982\u7387\uff1a p_0=\\frac{1}{1+\\sum_{n=1}^\\infty \\prod_{i=0}^{n}\\frac{\\lambda}{\\mu}} = \\frac{1}{1+\\sum_{n=1}^\\infty \\rho^n}=\\frac{1}{\\sum_{n=0}^\\infty \\rho^n}=1-\\rho p_0=\\frac{1}{1+\\sum_{n=1}^\\infty \\prod_{i=0}^{n}\\frac{\\lambda}{\\mu}} = \\frac{1}{1+\\sum_{n=1}^\\infty \\rho^n}=\\frac{1}{\\sum_{n=0}^\\infty \\rho^n}=1-\\rho \u6982\u7387\u5206\u5e03\u4e3a\uff1a P(N=n)=\\rho^n(1-\\rho) P(N=n)=\\rho^n(1-\\rho) M/M/s\u961f\u5217 \u00b6 \u5bf9\u4e8e M/M/s M/M/s \u7cfb\u7edf\uff0c \\lambda_i, \\mu_i \\lambda_i, \\mu_i \u670d\u4ece\u5982\u4e0b\u89c4\u5f8b\uff1a \\lambda_i = \\lambda \\qquad i=0, 1\\cdots, \\infty \\lambda_i = \\lambda \\qquad i=0, 1\\cdots, \\infty \\mu_i = \\max\\{i, s\\}\\mu \\qquad i=1, 2, \\cdots, \\infty \\mu_i = \\max\\{i, s\\}\\mu \\qquad i=1, 2, \\cdots, \\infty \u8ba1\u7b97\u51fa M/M/s M/M/s \u7cfb\u7edf\u5728\u7a33\u6001\u65f6\u5904\u4e8e p_0 p_0 \u7684\u6982\u7387\uff0c\u4ee4 \\rho_0=\\frac{\\lambda}{\\mu} \\rho_0=\\frac{\\lambda}{\\mu} \uff1a \\begin{aligned} p_0&=\\frac{1}{1+\\sum_{n=1}^\\infty \\prod_{i=0}^{n}\\frac{\\lambda}{\\max\\{i, s\\}\\mu}} \\\\ &= \\frac{1}{\\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}+\\sum_{i=s}^\\infty \\frac{\\rho_0^i}{s!s^{i-s}}} \\\\ &=\\frac{1}{\\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}+\\frac{\\rho_0^s}{s!}\\sum_{i=0}^\\infty \\frac{\\rho_0^i}{s^i}} \\\\ &=\\frac{1}{\\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}} \\end{aligned} \\begin{aligned} p_0&=\\frac{1}{1+\\sum_{n=1}^\\infty \\prod_{i=0}^{n}\\frac{\\lambda}{\\max\\{i, s\\}\\mu}} \\\\ &= \\frac{1}{\\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}+\\sum_{i=s}^\\infty \\frac{\\rho_0^i}{s!s^{i-s}}} \\\\ &=\\frac{1}{\\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}+\\frac{\\rho_0^s}{s!}\\sum_{i=0}^\\infty \\frac{\\rho_0^i}{s^i}} \\\\ &=\\frac{1}{\\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}} \\end{aligned} \u8bbe \\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}=T \\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}=T \uff0c p_i p_i \u53ef\u4ee5\u901a\u8fc7 p_0 p_0 \u63a8\u5bfc\u5f97\uff1a p_i=\\frac{\\lambda_0\\lambda_1\\cdots\\lambda_{i-1}}{\\mu_1\\mu_2\\cdots\\mu_i}p_0=\\left\\{ \\begin{aligned} & \\frac{\\rho_0^i}{i!}p_0=\\frac{\\rho_0^i}{i!\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)} & i\\leq s \\\\ & \\frac{\\rho_0^i}{s!s^{i-s}}p_0=\\frac{\\rho_0^i}{s!s^{i-s}\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)} & i > s \\end{aligned} \\right. p_i=\\frac{\\lambda_0\\lambda_1\\cdots\\lambda_{i-1}}{\\mu_1\\mu_2\\cdots\\mu_i}p_0=\\left\\{ \\begin{aligned} & \\frac{\\rho_0^i}{i!}p_0=\\frac{\\rho_0^i}{i!\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)} & i\\leq s \\\\ & \\frac{\\rho_0^i}{s!s^{i-s}}p_0=\\frac{\\rho_0^i}{s!s^{i-s}\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)} & i > s \\end{aligned} \\right. \u5f53 n \\geq s n \\geq s \u65f6\uff0c\u987e\u5ba2\u5230\u8fbe\u7cfb\u7edf\u65f6\u9700\u8981\u7b49\u5f85\uff0c\u5219\u6709\uff1a p_D=\\sum_{i=s}^\\infty p_i= \\sum_{i=s}^\\infty \\frac{\\rho^i_0}{s!s^{i-s}}p_0 = \\frac{\\rho^s_0p_0}{(s-1)!(s-\\rho_0)}=\\frac{\\rho^s_0}{(s-1)!(s-\\rho_0)T+\\rho_0^s} p_D=\\sum_{i=s}^\\infty p_i= \\sum_{i=s}^\\infty \\frac{\\rho^i_0}{s!s^{i-s}}p_0 = \\frac{\\rho^s_0p_0}{(s-1)!(s-\\rho_0)}=\\frac{\\rho^s_0}{(s-1)!(s-\\rho_0)T+\\rho_0^s} \u5f53 N\\leq s N\\leq s \u65f6\uff0c\u7cfb\u7edf\u4e2d\u6ca1\u6709\u961f\u5217\uff0c L_q=0 L_q=0 \uff0c\u5f53 N>s N>s \u65f6\uff0c\u961f\u5217\u957f\u5ea6\u4e3a N-s N-s \uff0c\u56e0\u6b64\u7a33\u6001\u65f6\u7684\u5e73\u5747\u6392\u961f\u957f\u4e3a\uff1a \\begin{aligned} L_q&=\\sum_{i=s + 1}^\\infty (i - s)p_i \\\\ &=\\sum_{i=s}^\\infty (i-s)\\frac{\\rho^i_0}{s!s^{i-s}}p_0 \\\\ &= \\frac{\\rho^s_0p_0}{s!}\\sum_{i=0}^\\infty \\frac{i\\rho_0^i}{s^i} \\\\ &= \\frac{\\rho^s_0p_0}{s!}\\sum_{i=1}^\\infty \\left(\\frac{\\rho_0}{s}\\right)^i\\frac{s}{s-\\rho_0} \\\\ &= \\frac{\\rho^s_0p_0}{(s-1)!(s-\\rho)}\\frac{\\rho_0/s}{1-\\rho_0/s} \\\\ &= \\frac{\\rho^{s+1}_0p_0}{(s-1)!(s-\\rho_0)^2} \\end{aligned} \\begin{aligned} L_q&=\\sum_{i=s + 1}^\\infty (i - s)p_i \\\\ &=\\sum_{i=s}^\\infty (i-s)\\frac{\\rho^i_0}{s!s^{i-s}}p_0 \\\\ &= \\frac{\\rho^s_0p_0}{s!}\\sum_{i=0}^\\infty \\frac{i\\rho_0^i}{s^i} \\\\ &= \\frac{\\rho^s_0p_0}{s!}\\sum_{i=1}^\\infty \\left(\\frac{\\rho_0}{s}\\right)^i\\frac{s}{s-\\rho_0} \\\\ &= \\frac{\\rho^s_0p_0}{(s-1)!(s-\\rho)}\\frac{\\rho_0/s}{1-\\rho_0/s} \\\\ &= \\frac{\\rho^{s+1}_0p_0}{(s-1)!(s-\\rho_0)^2} \\end{aligned} \u72b6\u6001\u4e3a n n \u7684\u7a33\u6001\u65f6\u7cfb\u7edf\u63a5\u53d7\u670d\u52a1\u7684\u5b9e\u4f53\u6570\u91cf\u4e3a\uff1a \\left\\{ \\begin{aligned} &n & n\\leq s \\\\ &s & n> s \\end{aligned} \\right . \\left\\{ \\begin{aligned} &n & n\\leq s \\\\ &s & n> s \\end{aligned} \\right . \u56e0\u6b64\uff0c\u7a33\u6001\u7cfb\u7edf\u4e2d\u63a5\u53d7\u670d\u52a1\u7684\u5b9e\u4f53\u5e73\u5747\u6570\u91cf\u4e3a\uff1a \\begin{aligned} L-L_q&=\\sum_{i=0}^s ip_i+\\sum_{i=s+1}^\\infty sp_i \\\\ &=\\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}p_0+s\\sum_{i=s+1}^\\infty \\frac{\\rho_0^i}{s!s^{i-s}}p_0 \\\\ &= \\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}p_0 + \\frac{\\rho_0^sp_0}{(s-1)!}\\sum_{i=1}^\\infty \\frac{\\rho_0^i}{s^i} \\\\ &= \\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}p_0 + \\frac{\\rho_0^{s+1}p_0}{(s-1)!(s-\\rho_0)} \\\\ &= \\frac{\\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}}{\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)} + \\frac{\\rho_0^{s+1}p_0}{(s-1)!(s-\\rho_0)} \\\\ &= \\frac{\\rho_0 T+1}{T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}} + \\frac{\\rho_0^{s+1}}{(s-1)!(s-\\rho_0)T+\\rho_0^s} \\\\ &= \\frac{(\\rho_0 T+1)(s-1)!(s-\\rho_0) + \\rho_0^{s+1}}{(s-1)!(s-\\rho_0)T+\\rho_0^s}\\\\ &= \\rho_0 + \\frac{(s-1)!(s-\\rho_0)}{(s-1)!(s-\\rho_0)T+\\rho_0^s} \\end{aligned} \\begin{aligned} L-L_q&=\\sum_{i=0}^s ip_i+\\sum_{i=s+1}^\\infty sp_i \\\\ &=\\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}p_0+s\\sum_{i=s+1}^\\infty \\frac{\\rho_0^i}{s!s^{i-s}}p_0 \\\\ &= \\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}p_0 + \\frac{\\rho_0^sp_0}{(s-1)!}\\sum_{i=1}^\\infty \\frac{\\rho_0^i}{s^i} \\\\ &= \\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}p_0 + \\frac{\\rho_0^{s+1}p_0}{(s-1)!(s-\\rho_0)} \\\\ &= \\frac{\\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}}{\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)} + \\frac{\\rho_0^{s+1}p_0}{(s-1)!(s-\\rho_0)} \\\\ &= \\frac{\\rho_0 T+1}{T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}} + \\frac{\\rho_0^{s+1}}{(s-1)!(s-\\rho_0)T+\\rho_0^s} \\\\ &= \\frac{(\\rho_0 T+1)(s-1)!(s-\\rho_0) + \\rho_0^{s+1}}{(s-1)!(s-\\rho_0)T+\\rho_0^s}\\\\ &= \\rho_0 + \\frac{(s-1)!(s-\\rho_0)}{(s-1)!(s-\\rho_0)T+\\rho_0^s} \\end{aligned} \u987e\u5ba2\u7684\u5e73\u5747\u9017\u7559\u65f6\u95f4 W=\\frac{L}{\\lambda} W=\\frac{L}{\\lambda} \uff1a \\begin{aligned} W&=\\frac{L}{\\lambda} \\\\ &= \\frac{\\sum_{i=0}^\\infty ip_i}{\\lambda} \\\\ &= \\frac{\\sum_{i=1}^s \\left(\\frac{\\rho_0^i}{(i-1)!\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)}\\right) + \\sum_{i=s+1}^\\infty \\left(i\\frac{\\rho_0^i}{s!s^{i-s}\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)}\\right) }{\\lambda} \\\\ &= \\frac{\\frac{T(s-1)!(s-\\rho_0)}{T(s-1)!(s-\\rho_0) + \\rho_0^s} + \\frac{\\rho_0^{s+1}(s-\\rho_0+1)/(s-\\rho_0)}{T(s-1)!(s-\\rho_0) + \\rho_0^s}}{\\lambda} \\\\ &= \\frac{T(s-1)!(s-\\rho_0) + \\rho_0^{s+1}(s-\\rho_0+1)/(s-\\rho_0)}{\\lambda(T(s-1)!(s-\\rho_0) + \\rho_0^s)} \\end{aligned} \\begin{aligned} W&=\\frac{L}{\\lambda} \\\\ &= \\frac{\\sum_{i=0}^\\infty ip_i}{\\lambda} \\\\ &= \\frac{\\sum_{i=1}^s \\left(\\frac{\\rho_0^i}{(i-1)!\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)}\\right) + \\sum_{i=s+1}^\\infty \\left(i\\frac{\\rho_0^i}{s!s^{i-s}\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)}\\right) }{\\lambda} \\\\ &= \\frac{\\frac{T(s-1)!(s-\\rho_0)}{T(s-1)!(s-\\rho_0) + \\rho_0^s} + \\frac{\\rho_0^{s+1}(s-\\rho_0+1)/(s-\\rho_0)}{T(s-1)!(s-\\rho_0) + \\rho_0^s}}{\\lambda} \\\\ &= \\frac{T(s-1)!(s-\\rho_0) + \\rho_0^{s+1}(s-\\rho_0+1)/(s-\\rho_0)}{\\lambda(T(s-1)!(s-\\rho_0) + \\rho_0^s)} \\end{aligned}","title":"Chapter 12"},{"location":"math/queue-theory/chapter-12.html#_1","text":"\u4e00\u4e2a\u6392\u961f\u6a21\u578b\u4e3b\u8981\u7531\u4ee5\u4e0b\u90e8\u5206\u7ec4\u6210 \u987e\u5ba2\uff08\u5b9e\u4f53\uff09\u5904\u7406 \u5b9e\u4f53\u6392\u961f\u7b49\u5f85\u5904\u7406\uff08\u7cfb\u7edf\u7684\u6392\u961f\u7b56\u7565\u53ef\u80fd\u4e0d\u540c\uff0c\u635f\u5931\u5236\u4e0d\u5141\u8bb8\u6392\u961f\u3001\u6df7\u5408\u5236\u5141\u8bb8\u6392\u6709\u9650\u957f\u5ea6\u7684\u961f\u5217\uff09 \u5b9e\u4f53\u5904\u7406\u5b8c\u6bd5\uff0c\u79bb\u5f00\u7cfb\u7edf","title":"\u5e38\u89c1\u6392\u961f\u6a21\u578b"},{"location":"math/queue-theory/chapter-12.html#_2","text":"","title":"\u6392\u961f\u6a21\u578b\u7684\u63cf\u8ff0"},{"location":"math/queue-theory/chapter-12.html#_3","text":"\u5047\u8bbe\u8fdb\u5165\u7cfb\u7edf\u7684\u5b9e\u4f53\u6570\u91cf\u65e0\u9650\u3002\u8003\u5bdf\u76f8\u90bb\u4e24\u4e2a\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\u7684\u65f6\u95f4\u5dee\uff1a \u5bf9\u4e8e\u5b9a\u957f\u5206\u5e03\uff0c\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\u7684\u65f6\u95f4\u5dee\u4e3a\u5e38\u91cf t t \uff0c t t \u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a\uff1a f(t; \\alpha)=\\left\\{ \\begin{aligned} & 1 & t=\\alpha \\\\ & 0 & t\\not =\\alpha \\end{aligned} \\right . f(t; \\alpha)=\\left\\{ \\begin{aligned} & 1 & t=\\alpha \\\\ & 0 & t\\not =\\alpha \\end{aligned} \\right . Poisson \u6d41\uff0c\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\u7684\u65f6\u95f4\u5dee\u72ec\u7acb\u540c\u5206\u5e03\uff0c\u670d\u4ece\u53c2\u6570\u4e3a \\lambda \\lambda \u7684\u6307\u6570\u5206\u5e03 f_{\\xi_i}(t; \\lambda)=\\left\\{ \\begin{aligned} & \\lambda e^{-\\lambda t} & t\\geq 0 \\\\ & 0 & t < 0 \\end{aligned} \\right . f_{\\xi_i}(t; \\lambda)=\\left\\{ \\begin{aligned} & \\lambda e^{-\\lambda t} & t\\geq 0 \\\\ & 0 & t < 0 \\end{aligned} \\right . Erlang \u5206\u5e03\uff0c\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\u7684\u65f6\u95f4\u5dee\u72ec\u7acb\u540c\u5206\u5e03\uff0c\u670d\u4ece\u5982\u4e0b\u516c\u5f0f\u6240\u793a\u7684\u5206\u5e03\u3002\u82e5\u67d0\u4e2a\u7cfb\u7edf\u4e2d\u6709 K K \u4e2a\u5e76\u8054\u7684\u670d\u52a1\u53f0\uff0c\u8f93\u5165\u5b9e\u4f53\u4e3a Poisson \u6d41\uff0c\u5219\u7b2c K K \u4e2a\u670d\u52a1\u53f0\u7684\u987e\u5ba2\u6d41\u4e3a Erlang \u6d41\uff0c\u524d\u9762\u6240\u6709 K - 1 K - 1 \u4e2a\u670d\u52a1\u53f0\u5728\u7b2c\u4e00\u4e2a\u5b9e\u4f53\u5230\u8fbe\u4ee5\u540e\u7684\u8f93\u5165\u6d41\u540c\u6837\u4e3a Erlang \u6d41\u3002 f(t; \\lambda, K)=\\left\\{ \\begin{aligned} & \\frac{\\lambda(\\lambda t)^{K-1}}{(K-1)!} & t\\geq 0 \\\\ & 0 & t < 0 \\end{aligned} \\right . f(t; \\lambda, K)=\\left\\{ \\begin{aligned} & \\frac{\\lambda(\\lambda t)^{K-1}}{(K-1)!} & t\\geq 0 \\\\ & 0 & t < 0 \\end{aligned} \\right .","title":"\u8fdb\u5165\u7cfb\u7edf"},{"location":"math/queue-theory/chapter-12.html#_4","text":"\u7cfb\u7edf\u4e2d\u53ef\u80fd\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u670d\u52a1\u53f0\u3002\u5728\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u670d\u52a1\u53f0\u90fd\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u65f6\uff0c\u65b0\u8fdb\u5165\u7684\u5b9e\u4f53\u65e0\u6cd5\u7acb\u5373\u8fdb\u884c\u5904\u7406\uff0c\u800c\u662f\u8fdb\u5165\u961f\u5217\u6216\u76f4\u63a5\u79bb\u5f00\uff0c\u53d6\u51b3\u4e8e\u7cfb\u7edf\u7684\u6392\u961f\u7b56\u7565\u3002\u6392\u961f\u7b56\u7565\u53ef\u4ee5\u5206\u4e3a\u635f\u5931\u5236\u3001\u7b49\u5f85\u5236\u4e0e\u6df7\u5408\u5236\u3002 \u5728\u635f\u5931\u5236\u7cfb\u7edf\u4e2d\uff0c\u5982\u679c\u65b0\u8fdb\u5165\u7684\u5b9e\u4f53\u4e0d\u80fd\u88ab\u7acb\u5373\u5904\u7406\uff0c\u5219\u4f1a\u79bb\u5f00\u7cfb\u7edf\u3002 \u5728\u7b49\u5f85\u5236\u7cfb\u7edf\u4e2d\uff0c\u5982\u679c\u65b0\u8fdb\u5165\u7684\u5b9e\u4f53\u4e0d\u80fd\u88ab\u7acb\u5373\u5904\u7406\uff0c\u5219\u4f1a\u5728\u961f\u5217\u4e2d\u7b49\u5f85\uff0c\u76f4\u5230\u88ab\u5904\u7406\u3002 \u5728\u6df7\u5408\u5236\u7cfb\u7edf\u4e2d\uff0c\u5982\u679c\u65b0\u8fdb\u5165\u7684\u5b9e\u4f53\u4e0d\u80fd\u88ab\u7acb\u5373\u5904\u7406\u4e14\u6b64\u65f6\u7684\u961f\u5217\u957f\u5ea6\u5927\u4e8e\u67d0\u4e00\u5e38\u6570\u503c\uff0c\u5219\u4f1a\u79bb\u5f00\u7cfb\u7edf\uff0c\u5426\u5219\u4f1a\u8fdb\u5165\u961f\u5217\u7b49\u5f85\u3002 \u5b9e\u4f53\u5728\u6392\u961f\u8fc7\u7a0b\u4e2d\u7684\u884c\u4e3a\u53ef\u4ee5\u5206\u4e3a\u5982\u4e0b\u7c7b\u578b\uff1a \u79bb\u5f00\uff1a\u5f53\u5b9e\u4f53\u5f97\u77e5\u9700\u8981\u7b49\u5f85\u6216\u6ca1\u6709\u8010\u5fc3\u7ee7\u7eed\u7b49\u5f85\u65f6\uff0c\u5b9e\u4f53\u53ef\u80fd\u9000\u51fa\u961f\u5217 \u53d8\u6362\uff1a\u5373\u5b9e\u4f53\u4e3a\u51cf\u5c11\u6392\u961f\u65f6\u95f4\u800c\u5728\u4e0d\u540c\u670d\u52a1\u53f0\u7684\u961f\u5217\u4e4b\u95f4\u79fb\u52a8 \u670d\u52a1\u53f0\u4f1a\u6309\u7167\u5982\u4e0b\u53ef\u80fd\u7684\u65b9\u5f0f\u8fdb\u884c\u670d\u52a1\uff1a FCFS\uff1a\u5148\u8fdb\u5165\u961f\u5217\u7684\u5148\u8fdb\u884c\u5904\u7406 LCFS\uff1a\u540e\u8fdb\u5165\u961f\u5217\u7684\u5148\u8fdb\u884c\u5904\u7406 \u968f\u673a\u5904\u7406 PS\uff1a\u4f18\u5148\u7ea7\u9ad8\u7684\u5b9e\u4f53\u5148\u8fdb\u884c\u5904\u7406 \u65ad\u7eed\u5904\u7406\uff1a\u5728\u5904\u7406\u67d0\u4e2a\u5b9e\u4f53\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u8f6c\u800c\u5904\u7406\u53e6\u4e00\u4e2a\u5b9e\u4f53\uff0c\u4e0d\u65ad\u5faa\u73af\u76f4\u5230\u5b9e\u4f53\u5904\u7406\u5b8c\u6210 \u5728\u7cfb\u7edf\u4e2d\u7684\u670d\u52a1\u53f0\u7684\u670d\u52a1\u65f6\u95f4\u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u6982\u7387\u5206\u5e03\u4e3a\u5e38\u6570\u3001\u6307\u6570\u5206\u5e03\u3001K\u7ea7 Erlang \u5206\u5e03\u3001\u4e00\u822c\u5206\u5e03\u7b49\u3002","title":"\u5b9e\u4f53\u6392\u961f\u4e0e\u5904\u7406"},{"location":"math/queue-theory/chapter-12.html#_5","text":"Kendall\u8bb0\u53f7\uff0c\u683c\u5f0f\u4e3a X/Y/Z/A/B/C X/Y/Z/A/B/C X X \u8868\u793a\u5b9e\u4f53\u5230\u8fbe\u95f4\u9694\u65f6\u95f4\u7684\u5206\u5e03 M M \u8868\u793a\u5230\u8fbe\u8fc7\u7a0b\u4e3a Poisson \u8fc7\u7a0b\uff08\u95f4\u9694\u65f6\u95f4\u670d\u4ece\u6307\u6570\u5206\u5e03\uff09\u6216\u8d1f\u6307\u6570\u5206\u5e03 D D \u8868\u793a\u95f4\u9694\u65f6\u95f4\u4e3a\u5e38\u6570 E_k E_k \u8868\u793a\u95f4\u9694\u65f6\u95f4\u670d\u4ece k k \u9636 Erlang \u5206\u5e03 G G \u8868\u793a\u95f4\u9694\u65f6\u95f4\u670d\u4ece\u4e00\u822c\u3001\u76f8\u4e92\u72ec\u7acb\u7684\u968f\u673a\u5206\u5e03 Y Y \u8868\u793a\u670d\u52a1\u53f0\u5355\u6b21\u670d\u52a1\u65f6\u95f4\u7684\u5206\u5e03\uff0c\u8bb0\u53f7\u4e0e X X \u7684\u542b\u4e49\u76f8\u540c Z Z \u8868\u793a\u670d\u52a1\u53f0\u4e2a\u6570 A A \u8868\u793a\u7cfb\u7edf\u7684\u7b49\u5f85\u7a7a\u95f4\u5bb9\u91cf\uff0c 0 0 \u4e3a\u635f\u5931\u5236\u7cfb\u7edf\uff0c \\infty \\infty \u4e3a\u7b49\u5f85\u5236\u7cfb\u7edf\uff0c\u5426\u5219\u4e3a\u6df7\u5408\u5236\u7cfb\u7edf\u3002 B B \u8868\u793a\u5b9e\u4f53\u7684\u603b\u6570\u91cf\uff0c \\infty \\infty \u8868\u793a\u5b9e\u4f53\u6e90\u65e0\u9650 C C \u8868\u793a\u670d\u52a1\u89c4\u5219 A, B, C A, B, C \u53c2\u6570\u53ef\u4ee5\u7701\u7565\u3002\u5206\u522b\u7b49\u4ef7\u4e8e \\infty, \\infty, \\mathit{FCFS} \\infty, \\infty, \\mathit{FCFS}","title":"\u7cfb\u7edf\u7684\u7b26\u53f7\u8868\u793a"},{"location":"math/queue-theory/chapter-12.html#_6","text":"\u8861\u91cf\u7cfb\u7edf\u6027\u80fd\u7684\u5e38\u7528\u89c2\u6d4b\u6307\u6807\u4e3a\uff1a N(L) N(L) \uff1a\u7a33\u6001\u7cfb\u7edf\u7684\u961f\u957f\uff08\u6307\u7cfb\u7edf\u5185\u6240\u6709\u7684\u5b9e\u4f53\u6570\u91cf\uff09 N_q(L_q) N_q(L_q) \u7a33\u6001\u7cfb\u7edf\u7684\u6392\u961f\u957f T(W) T(W) \uff1a\u987e\u5ba2\u5728\u7a33\u6001\u7cfb\u7edf\u4e2d\u7684\u505c\u7559\u65f6\u95f4\uff08\u5904\u7406+\u7b49\u5f85\uff09 T_q(W_q) T_q(W_q) \uff1a\u987e\u5ba2\u5728\u7a33\u6001\u7cfb\u7edf\u4e2d\u7684\u7b49\u5f85\u65f6\u95f4 p_n p_n \uff1a\u7a33\u6001\u7cfb\u7edf\u4efb\u610f\u65f6\u523b\u72b6\u6001\u4e3a n n \u7684\u6982\u7387\uff0c p_n=P(N=n)=\\lim_{t\\rightarrow \\infty}P(N(t) = n) p_n=P(N=n)=\\lim_{t\\rightarrow \\infty}P(N(t) = n) \\rho \\rho \uff1a\u5229\u7528\u7387 p_D p_D \uff1a\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\u65f6\u9700\u8981\u7b49\u5f85\u7684\u6982\u7387 \u82e5\u5c06\u7cfb\u7edf\u89c6\u4e3a\u7ba1\u9053\uff0c\u7cfb\u7edf\u4e2d\u5b9e\u4f53\u7684\u6570\u91cf\u7b49\u4e8e\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\u7684\u901f\u5ea6\u4e0e\u7cfb\u7edf\u5e73\u5747\u54cd\u5e94\uff08\u5904\u7406\uff09\u65f6\u95f4\u4e4b\u79ef\u3002 \u5bf9\u4e8e M/M/s M/M/s \u7cfb\u7edf\uff0c\u4ee4 \\lambda \\lambda \u4e3a\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\u7684\u901f\u5ea6\uff0c \\mu \\mu \u4e3a\u670d\u52a1\u53f0\u5904\u7406\u5b9e\u4f53\u7684\u901f\u5ea6\uff0c s s \u4e3a\u670d\u52a1\u53f0\u7684\u6570\u91cf\uff0c\u5219\uff1a \\begin{aligned} L &= \\lambda_e W \\\\ L_q &= \\lambda_e W_q \\end{aligned} \\begin{aligned} L &= \\lambda_e W \\\\ L_q &= \\lambda_e W_q \\end{aligned}","title":"\u7cfb\u7edf\u7684\u89c2\u6d4b\u6307\u6807"},{"location":"math/queue-theory/chapter-12.html#_7","text":"\u5e38\u89c1\u7684\u968f\u673a\u8fc7\u7a0b\u6709 Markov \u8fc7\u7a0b\u3001\u751f\u706d\u8fc7\u7a0b\u3001 Poisson \u8fc7\u7a0b\u7b49\u3002\u6240\u6709\u7684 Poisson \u8fc7\u7a0b\u90fd\u662f\u751f\u706d\u8fc7\u7a0b\uff0c\u6240\u6709\u7684\u751f\u706d\u8fc7\u7a0b\u90fd\u662f Markov \u8fc7\u7a0b\u3002","title":"\u968f\u673a\u8fc7\u7a0b"},{"location":"math/queue-theory/chapter-12.html#markov","text":"\u7279\u70b9\uff1a t_0 t_0 \u65f6\u523b\u7684\u72b6\u6001\u4e0e\u4efb\u610f t<t_0 t<t_0 \u65f6\u7684\u72b6\u6001\u65e0\u5173 Markov \u94fe\u7531\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u4e2d\u7684\u79bb\u6563\u72b6\u6001\u7ec4\u5408\u3002\u5bf9\u4e8e Markov \u8fc7\u7a0b\uff0c\u7cfb\u7edf\u65e0\u8bb0\u5fc6\u6027\uff0c\u5f53\u524d\u7684\u72b6\u6001\u4e0d\u4f1a\u5bf9\u540e\u9762\u7684\u72b6\u6001\u4ea7\u751f\u5f71\u54cd\u3002 M/M/s M/M/s \u7cfb\u7edf\u53ef\u4ee5\u4f7f\u7528 Markov \u8fc7\u7a0b\u5efa\u6a21\u3002\u961f\u5217\u4e2d\u5b9e\u4f53\u7684\u6570\u91cf\u662f\u4e00\u4e2a Markov \u94fe\u3002","title":"Markov \u8fc7\u7a0b"},{"location":"math/queue-theory/chapter-12.html#_8","text":"\u751f\u706d\u8fc7\u7a0b\u6309\u5982\u4e0b\u56fe\u8fdb\u884c\u63cf\u8ff0\uff08\u72b6\u6001\u8f6c\u79fb\u56fe\uff09\uff1a \u5047\u8bbe\u5b9e\u4f53\u79bb\u6563\u8fdb\u5165\u7684 M/M/s M/M/s \u7cfb\u7edf\uff0c\u961f\u5217\u4e2d\u7684\u5b9e\u4f53\u6570\u91cf\u670d\u4ece\u751f\u706d\u8fc7\u7a0b","title":"\u751f\u706d\u8fc7\u7a0b"},{"location":"math/queue-theory/chapter-12.html#poisson","text":"\u5b9e\u4f53\u8fdb\u5165\u7684\u65f6\u95f4\u5dee\u76f8\u4e92\u72ec\u7acb\u4e14\u670d\u4ece\u540c\u4e00\u6307\u6570\u5206\u5e03\u7684\u8fc7\u7a0b","title":"Poisson \u8fc7\u7a0b"},{"location":"math/queue-theory/chapter-12.html#_9","text":"\u5bf9\u4e8e\u751f\u706d\u8fc7\u7a0b\uff0c\u6709\u5982\u4e0b\u5047\u8bbe \u6bcf\u4e2a\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf \u5b9a\u4e49\u7cfb\u7edf\u7684\u72b6\u6001\u4e3a\u7cfb\u7edf\u4e2d\u7684\u5b9e\u4f53\u6570\u91cf n n \u4e00\u4e2a\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\uff0c\u7cfb\u7edf\u7684\u72b6\u6001\u7531 n-1 n-1 \u8f6c\u53d8\u4e3a n n \u4e00\u4e2a\u5b9e\u4f53\u79bb\u5f00\u7cfb\u7edf\uff0c\u7cfb\u7edf\u7684\u72b6\u6001\u7531 n n \u8f6c\u53d8\u4e3a n+1 n+1 \u7cfb\u7edf\u5904\u4e8e\u72b6\u6001 n n \u65f6\uff0c\u5b9a\u4e49\u5b9e\u4f53\u8fdb\u5165\u7684\u901f\u5ea6\u4e3a \\lambda _n \\lambda _n \uff0c\u7cfb\u7edf\u7684\u5904\u7406\u901f\u5ea6\u4e3a \\mu_n \\mu_n \u3002\u5bf9\u4e8e \\lambda_n \\lambda_n \uff0c n\\geq 0 n\\geq 0 \uff1b\u5bf9\u4e8e \\mu_n \\mu_n \uff0c n>0 n>0 \u95ee\u9898\uff1a\u7cfb\u7edf\u5904\u4e8e\u7a33\u5b9a\u72b6\u6001\u65f6\uff0c\u751f\u706d\u7cfb\u7edf\u5904\u4e8e\u72b6\u6001 n n \u7684\u6982\u7387 p_n p_n \uff1f \u5bf9\u4e8e\u5904\u4e8e\u72b6\u6001 j j \u7684\u7cfb\u7edf\uff0c\u8003\u5bdf\u4e00\u4e2a\u6781\u77ed\u7684\u65f6\u95f4\u95f4\u9694 \\Delta t \\Delta t \uff0c\u7531\u4e8e \\Delta t \\Delta t \u6781\u77ed\uff0c\u53ef\u4ee5\u5ffd\u7565 \\Delta t \\Delta t \u65f6\u95f4\u5185\u4e24\u4e2a\u5b9e\u4f53\u540c\u65f6\u8fdb\u5165/\u79bb\u5f00\u7cfb\u7edf\u6216\u4e00\u4e2a\u5b9e\u4f53\u8fdb\u5165\u3001\u4e00\u4e2a\u5b9e\u4f53\u79bb\u5f00\u7cfb\u7edf\u7684\u60c5\u51b5\u3002 \\Delta t \\Delta t \u65f6\u95f4\u5185\u7cfb\u7edf\u53d1\u751f\u53d8\u5316\u7684\u6982\u7387\u5982\u4e0b\uff1a \u4e00\u4e2a\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\uff1a P(n(t+\\Delta t)=j+1 | n(t) = j)=\\lambda_j\\Delta t P(n(t+\\Delta t)=j+1 | n(t) = j)=\\lambda_j\\Delta t \u4e00\u4e2a\u5b9e\u4f53\u79bb\u5f00\u7cfb\u7edf\uff1a P(n(t+\\Delta t)=j-1| n(t) = j) = \\mu_j\\Delta t P(n(t+\\Delta t)=j-1| n(t) = j) = \\mu_j\\Delta t \u7cfb\u7edf\u5728 \\Delta t \\Delta t \u65f6\u95f4\u5185\u6ca1\u6709\u53d1\u751f\u72b6\u6001\u6539\u53d8\uff1a P(n(t+\\Delta t) = j | n(t)=j) = 1 - (\\lambda_j+\\mu_j)\\Delta t P(n(t+\\Delta t) = j | n(t)=j) = 1 - (\\lambda_j+\\mu_j)\\Delta t \u6839\u636e\u5047\u8bbe\uff0c\u5904\u4e8e\u72b6\u6001 i i \u7684\u7cfb\u7edf\u5728 t+\\Delta t t+\\Delta t \u65f6\u53ea\u53ef\u80fd\u5904\u4e8e i-1, i, i+1 i-1, i, i+1 \u4e09\u79cd\u72b6\u6001\u4e2d\u7684\u4e00\u79cd\u3002\u4e5f\u5373\uff0c\u5904\u4e8e\u72b6\u6001 i i \u7684\u7cfb\u7edf\u5728 t-\\Delta t t-\\Delta t \u65f6\u53ea\u53ef\u80fd\u5904\u4e8e i-1, i, i+1 i-1, i, i+1 \u4e09\u79cd\u72b6\u6001\u4e2d\u7684\u4e00\u79cd\u3002\u7531\u6b64\uff0c\u53ef\u4ee5\u5217\u5f0f\u5982\u4e0b\uff1a \\begin{aligned} p_0(t+\\Delta t) &= (1-\\lambda_0\\Delta t)p_0(t) + \\mu_1\\Delta tp_1(t) \\\\ p_j(t+\\Delta t) &= \\lambda_{j-1}\\Delta tp_{j-1}(t)+(1-\\mu_j\\Delta t-\\lambda_j\\Delta t)p_j(t)+\\mu_{j+1}\\Delta tp_{j+1}(t) \\end{aligned} \\begin{aligned} p_0(t+\\Delta t) &= (1-\\lambda_0\\Delta t)p_0(t) + \\mu_1\\Delta tp_1(t) \\\\ p_j(t+\\Delta t) &= \\lambda_{j-1}\\Delta tp_{j-1}(t)+(1-\\mu_j\\Delta t-\\lambda_j\\Delta t)p_j(t)+\\mu_{j+1}\\Delta tp_{j+1}(t) \\end{aligned} \u6574\u7406\u540e\u53d6\u6781\u9650 \\Delta t\\rightarrow 0 \\Delta t\\rightarrow 0 \uff0c\u4e0a\u5f0f\u53d8\u4e3a\u5bfc\u6570\u5f62\u5f0f\uff1a \\begin{aligned} &\\lim_{\\Delta t\\rightarrow 0} \\frac{p_j(t+\\Delta t)-p_j(t)}{\\Delta t}=\\lambda_{j-1}p_{j-1}(t)+\\mu_{j+1}p_{j+1}(t) - (\\mu_j+\\lambda_j)p_j(t) \\\\ \\Rightarrow &\\frac{\\mathrm dp_j(t)}{\\mathrm dt}=\\lambda_{j-1}p_{j-1}(t)+\\mu_{j+1}p_{j+1}(t) - (\\mu_j+\\lambda_j)p_j(t) \\end{aligned} \\begin{aligned} &\\lim_{\\Delta t\\rightarrow 0} \\frac{p_j(t+\\Delta t)-p_j(t)}{\\Delta t}=\\lambda_{j-1}p_{j-1}(t)+\\mu_{j+1}p_{j+1}(t) - (\\mu_j+\\lambda_j)p_j(t) \\\\ \\Rightarrow &\\frac{\\mathrm dp_j(t)}{\\mathrm dt}=\\lambda_{j-1}p_{j-1}(t)+\\mu_{j+1}p_{j+1}(t) - (\\mu_j+\\lambda_j)p_j(t) \\end{aligned} \u5f53 t\\rightarrow \\infty t\\rightarrow \\infty \u65f6\uff0c\u7cfb\u7edf\u8d8b\u4e8e\u7a33\u6001\uff0c\u5219\u6709 \\lim_{t\\rightarrow \\infty}p_j(t) = p_j \\lim_{t\\rightarrow \\infty}p_j(t) = p_j \uff0c\u6536\u655b\u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u4e3a \\lim_{t\\rightarrow\\infty} \\frac{\\mathrm dp_j(t)}{\\mathrm dt}=0 \\lim_{t\\rightarrow\\infty} \\frac{\\mathrm dp_j(t)}{\\mathrm dt}=0 \u3002\u5373 \\lambda_{j-1}p_{j-1}(t)+\\mu_{j+1}p_{j+1}(t) - (\\mu_j+\\lambda_j)p_j(t)=0 \\lambda_{j-1}p_{j-1}(t)+\\mu_{j+1}p_{j+1}(t) - (\\mu_j+\\lambda_j)p_j(t)=0 \u3002 \u89e3 p_{j+1} p_{j+1} \uff0c\u89e3\u5f97\uff1a p_{j+1} = \\left(\\frac{\\mu_j+\\lambda_j}{\\mu_{j+1}}\\right)p_j-\\frac{\\lambda_{j-1}}{\\mu_{j+1}}p_{j-1} p_{j+1} = \\left(\\frac{\\mu_j+\\lambda_j}{\\mu_{j+1}}\\right)p_j-\\frac{\\lambda_{j-1}}{\\mu_{j+1}}p_{j-1} \u5bf9\u4e8e p_1 p_1 \uff0c\u6709 p_1=\\frac{\\lambda_0}{\\mu_1}p_0 p_1=\\frac{\\lambda_0}{\\mu_1}p_0 \u3002 \u6839\u636e\u9012\u63a8\u516c\u5f0f\uff0c\u53ef\u4ee5\u7528 p_0 p_0 \u8868\u793a\u51fa p_j p_j \uff1a \\begin{aligned} p_2&=\\left(\\frac{\\mu_1+\\lambda_1}{\\mu_2}\\right)p_1-\\frac{\\lambda _0}{\\mu_2}p_0 = \\frac{\\lambda_0(\\mu_1+\\lambda_1)}{\\mu_1\\mu_2}p_0-\\frac{\\lambda_0}{\\mu_2}p_0=\\frac{\\lambda_0\\lambda_1}{\\mu_1\\mu_2}p_0 \\\\ p_3&=\\left(\\frac{\\mu_2+\\lambda_2}{\\mu_3}\\right)p_2-\\frac{\\lambda_1}{\\mu_3}p_1=\\frac{\\lambda_0\\lambda_1(\\mu_2+\\lambda_2)}{\\mu_1\\mu_2\\mu_3}p_0-\\frac{\\lambda_0\\lambda_1}{\\mu_1\\mu_3}p_0=\\frac{\\lambda_0\\lambda_1\\lambda_2}{\\mu_1\\mu_2\\mu_3}p_0 \\\\ &\\vdots \\\\ &p_j = \\frac{\\lambda_0\\lambda_1\\cdots\\lambda_{j-1}}{\\mu_1\\mu_2\\cdots\\mu_j}p_0=p_0\\prod_{i = 1}^{j}\\frac{\\lambda_{i-1}}{\\mu_i} \\end{aligned} \\begin{aligned} p_2&=\\left(\\frac{\\mu_1+\\lambda_1}{\\mu_2}\\right)p_1-\\frac{\\lambda _0}{\\mu_2}p_0 = \\frac{\\lambda_0(\\mu_1+\\lambda_1)}{\\mu_1\\mu_2}p_0-\\frac{\\lambda_0}{\\mu_2}p_0=\\frac{\\lambda_0\\lambda_1}{\\mu_1\\mu_2}p_0 \\\\ p_3&=\\left(\\frac{\\mu_2+\\lambda_2}{\\mu_3}\\right)p_2-\\frac{\\lambda_1}{\\mu_3}p_1=\\frac{\\lambda_0\\lambda_1(\\mu_2+\\lambda_2)}{\\mu_1\\mu_2\\mu_3}p_0-\\frac{\\lambda_0\\lambda_1}{\\mu_1\\mu_3}p_0=\\frac{\\lambda_0\\lambda_1\\lambda_2}{\\mu_1\\mu_2\\mu_3}p_0 \\\\ &\\vdots \\\\ &p_j = \\frac{\\lambda_0\\lambda_1\\cdots\\lambda_{j-1}}{\\mu_1\\mu_2\\cdots\\mu_j}p_0=p_0\\prod_{i = 1}^{j}\\frac{\\lambda_{i-1}}{\\mu_i} \\end{aligned} \u7531\u4e8e\u7cfb\u7edf\u7684\u72b6\u6001\u53ea\u53ef\u80fd\u53d6 0\\sim\\infty 0\\sim\\infty \u4e4b\u95f4\u7684\u6574\u6570\u503c\uff0c\u6982\u7387\u4e4b\u548c\u4e3a 1 1 \uff0c\u53ef\u4ee5\u8ba1\u7b97\u51fa p_0 p_0 \uff1a p_0=\\frac{1}{1+\\sum_{n=1}^\\infty \\prod_{i=0}^{n}\\frac{\\lambda_{i-1}}{\\mu_i}} p_0=\\frac{1}{1+\\sum_{n=1}^\\infty \\prod_{i=0}^{n}\\frac{\\lambda_{i-1}}{\\mu_i}}","title":"\u751f\u706d\u8fc7\u7a0b"},{"location":"math/queue-theory/chapter-12.html#mm1","text":"\u5bf9\u4e8e M/M/1 M/M/1 \u7cfb\u7edf\uff0c \\lambda_0=\\lambda_1=\\cdots=\\lambda_n=\\lambda, \\mu_1=\\cdots=\\mu_n=\\mu \\lambda_0=\\lambda_1=\\cdots=\\lambda_n=\\lambda, \\mu_1=\\cdots=\\mu_n=\\mu \u3002 \u7531\u6b64\uff0c\u8ba1\u7b97\u51fa M/M/1 M/M/1 \u7cfb\u7edf\u5728\u7a33\u6001\u65f6\u5904\u4e8e p_0 p_0 \u7684\u6982\u7387\uff1a p_0=\\frac{1}{1+\\sum_{n=1}^\\infty \\prod_{i=0}^{n}\\frac{\\lambda}{\\mu}} = \\frac{1}{1+\\sum_{n=1}^\\infty \\rho^n}=\\frac{1}{\\sum_{n=0}^\\infty \\rho^n}=1-\\rho p_0=\\frac{1}{1+\\sum_{n=1}^\\infty \\prod_{i=0}^{n}\\frac{\\lambda}{\\mu}} = \\frac{1}{1+\\sum_{n=1}^\\infty \\rho^n}=\\frac{1}{\\sum_{n=0}^\\infty \\rho^n}=1-\\rho \u6982\u7387\u5206\u5e03\u4e3a\uff1a P(N=n)=\\rho^n(1-\\rho) P(N=n)=\\rho^n(1-\\rho)","title":"M/M/1\u961f\u5217"},{"location":"math/queue-theory/chapter-12.html#mms","text":"\u5bf9\u4e8e M/M/s M/M/s \u7cfb\u7edf\uff0c \\lambda_i, \\mu_i \\lambda_i, \\mu_i \u670d\u4ece\u5982\u4e0b\u89c4\u5f8b\uff1a \\lambda_i = \\lambda \\qquad i=0, 1\\cdots, \\infty \\lambda_i = \\lambda \\qquad i=0, 1\\cdots, \\infty \\mu_i = \\max\\{i, s\\}\\mu \\qquad i=1, 2, \\cdots, \\infty \\mu_i = \\max\\{i, s\\}\\mu \\qquad i=1, 2, \\cdots, \\infty \u8ba1\u7b97\u51fa M/M/s M/M/s \u7cfb\u7edf\u5728\u7a33\u6001\u65f6\u5904\u4e8e p_0 p_0 \u7684\u6982\u7387\uff0c\u4ee4 \\rho_0=\\frac{\\lambda}{\\mu} \\rho_0=\\frac{\\lambda}{\\mu} \uff1a \\begin{aligned} p_0&=\\frac{1}{1+\\sum_{n=1}^\\infty \\prod_{i=0}^{n}\\frac{\\lambda}{\\max\\{i, s\\}\\mu}} \\\\ &= \\frac{1}{\\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}+\\sum_{i=s}^\\infty \\frac{\\rho_0^i}{s!s^{i-s}}} \\\\ &=\\frac{1}{\\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}+\\frac{\\rho_0^s}{s!}\\sum_{i=0}^\\infty \\frac{\\rho_0^i}{s^i}} \\\\ &=\\frac{1}{\\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}} \\end{aligned} \\begin{aligned} p_0&=\\frac{1}{1+\\sum_{n=1}^\\infty \\prod_{i=0}^{n}\\frac{\\lambda}{\\max\\{i, s\\}\\mu}} \\\\ &= \\frac{1}{\\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}+\\sum_{i=s}^\\infty \\frac{\\rho_0^i}{s!s^{i-s}}} \\\\ &=\\frac{1}{\\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}+\\frac{\\rho_0^s}{s!}\\sum_{i=0}^\\infty \\frac{\\rho_0^i}{s^i}} \\\\ &=\\frac{1}{\\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}} \\end{aligned} \u8bbe \\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}=T \\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}=T \uff0c p_i p_i \u53ef\u4ee5\u901a\u8fc7 p_0 p_0 \u63a8\u5bfc\u5f97\uff1a p_i=\\frac{\\lambda_0\\lambda_1\\cdots\\lambda_{i-1}}{\\mu_1\\mu_2\\cdots\\mu_i}p_0=\\left\\{ \\begin{aligned} & \\frac{\\rho_0^i}{i!}p_0=\\frac{\\rho_0^i}{i!\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)} & i\\leq s \\\\ & \\frac{\\rho_0^i}{s!s^{i-s}}p_0=\\frac{\\rho_0^i}{s!s^{i-s}\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)} & i > s \\end{aligned} \\right. p_i=\\frac{\\lambda_0\\lambda_1\\cdots\\lambda_{i-1}}{\\mu_1\\mu_2\\cdots\\mu_i}p_0=\\left\\{ \\begin{aligned} & \\frac{\\rho_0^i}{i!}p_0=\\frac{\\rho_0^i}{i!\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)} & i\\leq s \\\\ & \\frac{\\rho_0^i}{s!s^{i-s}}p_0=\\frac{\\rho_0^i}{s!s^{i-s}\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)} & i > s \\end{aligned} \\right. \u5f53 n \\geq s n \\geq s \u65f6\uff0c\u987e\u5ba2\u5230\u8fbe\u7cfb\u7edf\u65f6\u9700\u8981\u7b49\u5f85\uff0c\u5219\u6709\uff1a p_D=\\sum_{i=s}^\\infty p_i= \\sum_{i=s}^\\infty \\frac{\\rho^i_0}{s!s^{i-s}}p_0 = \\frac{\\rho^s_0p_0}{(s-1)!(s-\\rho_0)}=\\frac{\\rho^s_0}{(s-1)!(s-\\rho_0)T+\\rho_0^s} p_D=\\sum_{i=s}^\\infty p_i= \\sum_{i=s}^\\infty \\frac{\\rho^i_0}{s!s^{i-s}}p_0 = \\frac{\\rho^s_0p_0}{(s-1)!(s-\\rho_0)}=\\frac{\\rho^s_0}{(s-1)!(s-\\rho_0)T+\\rho_0^s} \u5f53 N\\leq s N\\leq s \u65f6\uff0c\u7cfb\u7edf\u4e2d\u6ca1\u6709\u961f\u5217\uff0c L_q=0 L_q=0 \uff0c\u5f53 N>s N>s \u65f6\uff0c\u961f\u5217\u957f\u5ea6\u4e3a N-s N-s \uff0c\u56e0\u6b64\u7a33\u6001\u65f6\u7684\u5e73\u5747\u6392\u961f\u957f\u4e3a\uff1a \\begin{aligned} L_q&=\\sum_{i=s + 1}^\\infty (i - s)p_i \\\\ &=\\sum_{i=s}^\\infty (i-s)\\frac{\\rho^i_0}{s!s^{i-s}}p_0 \\\\ &= \\frac{\\rho^s_0p_0}{s!}\\sum_{i=0}^\\infty \\frac{i\\rho_0^i}{s^i} \\\\ &= \\frac{\\rho^s_0p_0}{s!}\\sum_{i=1}^\\infty \\left(\\frac{\\rho_0}{s}\\right)^i\\frac{s}{s-\\rho_0} \\\\ &= \\frac{\\rho^s_0p_0}{(s-1)!(s-\\rho)}\\frac{\\rho_0/s}{1-\\rho_0/s} \\\\ &= \\frac{\\rho^{s+1}_0p_0}{(s-1)!(s-\\rho_0)^2} \\end{aligned} \\begin{aligned} L_q&=\\sum_{i=s + 1}^\\infty (i - s)p_i \\\\ &=\\sum_{i=s}^\\infty (i-s)\\frac{\\rho^i_0}{s!s^{i-s}}p_0 \\\\ &= \\frac{\\rho^s_0p_0}{s!}\\sum_{i=0}^\\infty \\frac{i\\rho_0^i}{s^i} \\\\ &= \\frac{\\rho^s_0p_0}{s!}\\sum_{i=1}^\\infty \\left(\\frac{\\rho_0}{s}\\right)^i\\frac{s}{s-\\rho_0} \\\\ &= \\frac{\\rho^s_0p_0}{(s-1)!(s-\\rho)}\\frac{\\rho_0/s}{1-\\rho_0/s} \\\\ &= \\frac{\\rho^{s+1}_0p_0}{(s-1)!(s-\\rho_0)^2} \\end{aligned} \u72b6\u6001\u4e3a n n \u7684\u7a33\u6001\u65f6\u7cfb\u7edf\u63a5\u53d7\u670d\u52a1\u7684\u5b9e\u4f53\u6570\u91cf\u4e3a\uff1a \\left\\{ \\begin{aligned} &n & n\\leq s \\\\ &s & n> s \\end{aligned} \\right . \\left\\{ \\begin{aligned} &n & n\\leq s \\\\ &s & n> s \\end{aligned} \\right . \u56e0\u6b64\uff0c\u7a33\u6001\u7cfb\u7edf\u4e2d\u63a5\u53d7\u670d\u52a1\u7684\u5b9e\u4f53\u5e73\u5747\u6570\u91cf\u4e3a\uff1a \\begin{aligned} L-L_q&=\\sum_{i=0}^s ip_i+\\sum_{i=s+1}^\\infty sp_i \\\\ &=\\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}p_0+s\\sum_{i=s+1}^\\infty \\frac{\\rho_0^i}{s!s^{i-s}}p_0 \\\\ &= \\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}p_0 + \\frac{\\rho_0^sp_0}{(s-1)!}\\sum_{i=1}^\\infty \\frac{\\rho_0^i}{s^i} \\\\ &= \\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}p_0 + \\frac{\\rho_0^{s+1}p_0}{(s-1)!(s-\\rho_0)} \\\\ &= \\frac{\\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}}{\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)} + \\frac{\\rho_0^{s+1}p_0}{(s-1)!(s-\\rho_0)} \\\\ &= \\frac{\\rho_0 T+1}{T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}} + \\frac{\\rho_0^{s+1}}{(s-1)!(s-\\rho_0)T+\\rho_0^s} \\\\ &= \\frac{(\\rho_0 T+1)(s-1)!(s-\\rho_0) + \\rho_0^{s+1}}{(s-1)!(s-\\rho_0)T+\\rho_0^s}\\\\ &= \\rho_0 + \\frac{(s-1)!(s-\\rho_0)}{(s-1)!(s-\\rho_0)T+\\rho_0^s} \\end{aligned} \\begin{aligned} L-L_q&=\\sum_{i=0}^s ip_i+\\sum_{i=s+1}^\\infty sp_i \\\\ &=\\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}p_0+s\\sum_{i=s+1}^\\infty \\frac{\\rho_0^i}{s!s^{i-s}}p_0 \\\\ &= \\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}p_0 + \\frac{\\rho_0^sp_0}{(s-1)!}\\sum_{i=1}^\\infty \\frac{\\rho_0^i}{s^i} \\\\ &= \\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}p_0 + \\frac{\\rho_0^{s+1}p_0}{(s-1)!(s-\\rho_0)} \\\\ &= \\frac{\\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}}{\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)} + \\frac{\\rho_0^{s+1}p_0}{(s-1)!(s-\\rho_0)} \\\\ &= \\frac{\\rho_0 T+1}{T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}} + \\frac{\\rho_0^{s+1}}{(s-1)!(s-\\rho_0)T+\\rho_0^s} \\\\ &= \\frac{(\\rho_0 T+1)(s-1)!(s-\\rho_0) + \\rho_0^{s+1}}{(s-1)!(s-\\rho_0)T+\\rho_0^s}\\\\ &= \\rho_0 + \\frac{(s-1)!(s-\\rho_0)}{(s-1)!(s-\\rho_0)T+\\rho_0^s} \\end{aligned} \u987e\u5ba2\u7684\u5e73\u5747\u9017\u7559\u65f6\u95f4 W=\\frac{L}{\\lambda} W=\\frac{L}{\\lambda} \uff1a \\begin{aligned} W&=\\frac{L}{\\lambda} \\\\ &= \\frac{\\sum_{i=0}^\\infty ip_i}{\\lambda} \\\\ &= \\frac{\\sum_{i=1}^s \\left(\\frac{\\rho_0^i}{(i-1)!\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)}\\right) + \\sum_{i=s+1}^\\infty \\left(i\\frac{\\rho_0^i}{s!s^{i-s}\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)}\\right) }{\\lambda} \\\\ &= \\frac{\\frac{T(s-1)!(s-\\rho_0)}{T(s-1)!(s-\\rho_0) + \\rho_0^s} + \\frac{\\rho_0^{s+1}(s-\\rho_0+1)/(s-\\rho_0)}{T(s-1)!(s-\\rho_0) + \\rho_0^s}}{\\lambda} \\\\ &= \\frac{T(s-1)!(s-\\rho_0) + \\rho_0^{s+1}(s-\\rho_0+1)/(s-\\rho_0)}{\\lambda(T(s-1)!(s-\\rho_0) + \\rho_0^s)} \\end{aligned} \\begin{aligned} W&=\\frac{L}{\\lambda} \\\\ &= \\frac{\\sum_{i=0}^\\infty ip_i}{\\lambda} \\\\ &= \\frac{\\sum_{i=1}^s \\left(\\frac{\\rho_0^i}{(i-1)!\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)}\\right) + \\sum_{i=s+1}^\\infty \\left(i\\frac{\\rho_0^i}{s!s^{i-s}\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)}\\right) }{\\lambda} \\\\ &= \\frac{\\frac{T(s-1)!(s-\\rho_0)}{T(s-1)!(s-\\rho_0) + \\rho_0^s} + \\frac{\\rho_0^{s+1}(s-\\rho_0+1)/(s-\\rho_0)}{T(s-1)!(s-\\rho_0) + \\rho_0^s}}{\\lambda} \\\\ &= \\frac{T(s-1)!(s-\\rho_0) + \\rho_0^{s+1}(s-\\rho_0+1)/(s-\\rho_0)}{\\lambda(T(s-1)!(s-\\rho_0) + \\rho_0^s)} \\end{aligned}","title":"M/M/s\u961f\u5217"}],"index":{"fieldVectors":[["title/index.html",[0,5.879]],["text/index.html",[1,3.943,2,7.214,3,0.776,4,3.943,5,5.848,6,3.943,7,3.943,8,3.943,9,5.698,10,5.698,11,7.329,12,7.329,13,5.698,14,7.774,15,7.329,16,5.698,17,5.698,18,7.329,19,5.698,20,5.698,21,5.698,22,7.329,23,3.943,24,5.698,25,3.943,26,5.848,27,5.698,28,5.698,29,7.774,30,7.774,31,3.943,32,5.698,33,5.698,34,5.698,35,4.981,36,3.943,37,3.943,38,5.698,39,3.943,40,5.698,41,3.943,42,5.698,43,6.691,44,3.943,45,3.943,46,3.447,47,3.943,48,3.943,49,3.943,50,3.943,51,3.943,52,3.943,53,3.447,54,4.532,55,3.943,56,3.136,57,3.943,58,5.287,59,3.943,60,3.136,61,3.447,62,3.943,63,5.287,64,3.447,65,4.981,66,3.943,67,3.015,68,3.447,69,3.943,70,3.943,71,3.943,72,3.943,73,3.943,74,3.136,75,5.698,76,3.943,77,3.943,78,3.943,79,3.447,80,3.943]],["title/index.html#welcome-to-mkdocs",[1,3.987,2,3.699]],["text/index.html#welcome-to-mkdocs",[3,0.616,4,7.664,5,6.699,6,7.664,7,7.664]],["title/index.html#customization",[8,5.299]],["text/index.html#customization",[3,0.77,9,6.485,10,6.485,11,7.949,12,7.949,13,6.485,14,8.325,15,7.949,16,6.485,17,6.485,18,7.949,19,6.485,20,6.485,21,6.485,22,7.949,23,4.739,24,6.485,25,4.739,26,6.462,27,6.485,28,6.485,29,8.325,30,8.325,31,4.739,32,6.485,33,6.485,34,6.485,35,5.668,36,4.739,37,4.739,38,6.485,39,4.739,40,6.485,41,4.739,42,6.485,43,7.393,44,4.739,45,4.739,46,4.142,47,4.739,48,4.739,49,4.739,50,4.739,51,4.739,52,4.739]],["title/index.html#commands",[53,4.632]],["text/index.html#commands",[2,8.471,5,5.988,54,6.536,55,6.851,56,5.448,57,6.851,58,6.357,59,6.851,60,5.448,61,5.988,62,6.851,63,6.357,64,5.988,65,7.183,66,6.851,67,5.238,68,5.988,69,6.851,70,6.851,71,6.851]],["title/index.html#project-layout",[58,3.699,72,3.987]],["text/index.html#project-layout",[3,0.747,5,6.324,63,6.713,73,7.235,74,5.754,75,8.488,76,7.235,77,7.235,78,7.235,79,6.324,80,7.235]],["title/about.html",[]],["text/about.html",[3,0.706,81,8.503,82,6.369,83,8.503]],["title/covid.html",[84,3.699,85,3.171]],["text/covid.html",[3,0.706,84,7.111,85,6.095,86,7.664]],["title/covid.html#covid-2019-trend",[84,2.965,85,2.541,86,3.196]],["text/covid.html#covid-2019-trend",[3,0.631]],["title/weixin-2020.html",[87,5.879]],["text/weixin-2020.html",[3,0.808]],["title/weixin-2020.html#_1",[3,0.426]],["text/weixin-2020.html#_1",[3,0.807]],["title/coding/index.html",[3,0.426]],["text/coding/index.html",[3,0.788,88,5.885,89,5.659,90,7.401]],["title/coding/index.html#_1",[3,0.426]],["text/coding/index.html#_1",[3,0.778,88,5.954,89,5.724,90,7.486]],["title/coding/configuration.html",[3,0.426]],["text/coding/configuration.html",[3,0.761,91,6.369]],["title/coding/configuration.html#_1",[3,0.426]],["text/coding/configuration.html#_1",[]],["title/coding/configuration.html#_2",[3,0.426]],["text/coding/configuration.html#_2",[91,6.524]],["title/coding/dsa.html",[3,0.426]],["text/coding/dsa.html",[3,0.801]],["title/coding/dsa.html#_1",[3,0.426]],["text/coding/dsa.html#_1",[3,0.798]],["title/coding/leetcode.html",[3,0.426]],["text/coding/leetcode.html",[3,0.804,88,4.475,92,0.822,93,3.09,94,3.594,95,5.627,96,2.736,97,4.303,98,4.303,99,4.018,100,4.303,101,4.018,102,4.676,103,5.627,104,4.676,105,4.676,106,4.303,107,4.152,108,4.475,109,2.103,110,4.676,111,4.676,112,4.676,113,4.676,114,4.643,115,4.676,116,4.676,117,4.676,118,4.676,119,4.676,120,4.676,121,4.676,122,4.676,123,4.676,124,4.676,125,4.676]],["title/coding/leetcode.html#leetcode",[3,0.321,88,3.171]],["text/coding/leetcode.html#leetcode",[3,0.803,92,0.833,93,3.131,94,3.641,95,5.702,96,2.772,97,4.36,98,4.36,99,4.071,100,4.36,101,4.071,102,4.738,103,5.702,104,4.738,105,4.738,106,4.36,107,4.207,108,4.534,109,2.131,110,4.738,111,4.738,112,4.738,113,4.738,114,4.683,115,4.738,116,4.738,117,4.738,118,4.738,119,4.738,120,4.738,121,4.738,122,4.738,123,4.738,124,4.738,125,4.738]],["title/coding/python.html",[3,0.426]],["text/coding/python.html",[3,0.771,89,6.666]],["title/coding/python.html#python",[89,4.052]],["text/coding/python.html#python",[]],["title/coding/python.html#_1",[3,0.426]],["text/coding/python.html#_1",[]],["title/coding/python.html#_2",[3,0.426]],["text/coding/python.html#_2",[89,6.002]],["title/coding/configuration/nginx-rtmp.html",[91,4.404]],["text/coding/configuration/nginx-rtmp.html",[3,0.795,26,0.633,46,3.643,53,0.633,56,6.754,61,2.809,64,2.091,65,0.633,67,1.829,74,0.576,79,0.633,85,1.076,91,0.602,92,0.905,94,0.864,100,0.554,126,3.716,127,1.354,128,1.354,129,1.767,130,0.725,131,1.256,132,0.725,133,0.725,134,0.725,135,2.622,136,0.725,137,3.306,138,0.725,139,0.725,140,2.622,141,0.725,142,0.725,143,1.256,144,4.068,145,2.469,146,0.725,147,1.256,148,1.905,149,0.725,150,1.354,151,0.725,152,1.354,153,0.725,154,1.354,155,1.256,156,0.725,157,0.37,158,0.725,159,0.725,160,0.725,161,0.725,162,2.219,163,0.725,164,1.256,165,1.256,166,0.725,167,0.725,168,0.725,169,0.725,170,0.725,171,0.725,172,0.725,173,0.725,174,0.725,175,4.336,176,0.725,177,1.665,178,0.725,179,1.366,180,1.354,181,1.354,182,0.725,183,0.725,184,1.354,185,1.256,186,1.767,187,1.256,188,0.725,189,3.306,190,1.583,191,0.725,192,1.256,193,0.725,194,2.219,195,2.219,196,1.767,197,1.957,198,0.725,199,0.725,200,0.725,201,0.725,202,0.725,203,0.725,204,0.725,205,0.725,206,0.725,207,1.354,208,0.725,209,2.622,210,0.725,211,0.725,212,0.633,213,0.725,214,0.725,215,0.725,216,1.767,217,0.725,218,0.725,219,0.725,220,1.905,221,1.354,222,0.725,223,0.725,224,0.725,225,0.725,226,0.725,227,0.633,228,1.354,229,0.725,230,0.966,231,1.354,232,0.725,233,0.725,234,0.725,235,0.725,236,0.725,237,0.602,238,0.725,239,1.366,240,1.354,241,1.354,242,1.767,243,0.725,244,0.341,245,1.767,246,0.725,247,1.354,248,0.576,249,0.725,250,0.725,251,0.725,252,0.336,253,0.725,254,1.905,255,1.354,256,0.725,257,0.725,258,0.725,259,0.725,260,1.256,261,0.725,262,2.825,263,1.905,264,1.354,265,0.725,266,0.725,267,0.725,268,0.725,269,0.725,270,1.354,271,1.354,272,0.725,273,0.725,274,0.725,275,7.135,276,4.673,277,0.773,278,1.665,279,0.725,280,4.431,281,6.665,282,8.832,283,0.725,284,0.633,285,2.825,286,3.213,287,7.572,288,0.725,289,0.725,290,0.725,291,0.725,292,0.725,293,0.725,294,0.725,295,2.392,296,1.354,297,1.354,298,0.539,299,5.929,300,5.29,301,4.431,302,8.313,303,2.392,304,0.546,305,0.725,306,0.725,307,1.354,308,2.392,309,1.354,310,3.315,311,8.622,312,0.136,313,0.725,314,0.725,315,1.354,316,3.39,317,0.725,318,0.725,319,0.725,320,6.815,321,4.673,322,6.725,323,6.725,324,1.354,325,1.354,326,1.354,327,3.88,328,3.88,329,1.354,330,2.392,331,0.725,332,1.183,333,2.392,334,0.725,335,1.008,336,1.905,337,1.354,338,2.825,339,1.905,340,1.905,341,1.905,342,0.725,343,0.725,344,0.602,345,5.29,346,4.895,347,5.929,348,5.632,349,2.825,350,1.354,351,4.431,352,0.725,353,0.725,354,0.725,355,0.725,356,0.173,357,0.364,358,5.29,359,1.354,360,0.725,361,0.663,362,0.725,363,0.725,364,0.725,365,0.725,366,0.725,367,0.725,368,0.725,369,0.725,370,0.725,371,0.725,372,0.725,373,0.725,374,1.354,375,1.354,376,0.725,377,0.725,378,1.665,379,0.633,380,0.725,381,1.354,382,1.905,383,0.725,384,1.354,385,0.725,386,1.354,387,1.354,388,0.602,389,2.392,390,2.392,391,2.825,392,0.725,393,3.391,394,1.354,395,1.905,396,0.517,397,1.354,398,1.905,399,2.392,400,0.887,401,3.213,402,0.725,403,1.354,404,1.905,405,1.905,406,0.422,407,1.354,408,0.633,409,0.398,410,0.725,411,0.725,412,1.354,413,2.825,414,3.213,415,1.035,416,1.354,417,0.725,418,0.725,419,0.725,420,0.725,421,0.725,422,1.354,423,0.725,424,0.725,425,0.725,426,0.331,427,0.725,428,0.725,429,0.725,430,0.725,431,0.725,432,0.725,433,1.354,434,0.725,435,1.905,436,0.725,437,1.354,438,0.725,439,0.725,440,0.725,441,0.999,442,1.905,443,0.725,444,0.725,445,0.725,446,0.725,447,0.725,448,0.725,449,0.725,450,0.725,451,0.725,452,1.354,453,0.725,454,0.725,455,0.725,456,0.725,457,0.633]],["title/coding/configuration/nginx-rtmp.html#nginxrtmp",[91,4.404]],["text/coding/configuration/nginx-rtmp.html#nginxrtmp",[]],["title/coding/configuration/nginx-rtmp.html#_1",[3,0.426]],["text/coding/configuration/nginx-rtmp.html#_1",[3,0.745,65,4.793,85,4.361,126,6.326,127,7.149,128,7.149,129,6.634,130,5.484,131,5.088,132,5.484,133,5.484,134,5.484,135,5.088,136,5.484,137,6.634,138,5.484,139,5.484,140,6.634,141,5.484,142,5.484,143,5.088,144,4.557,145,4.793,146,5.484,147,5.088,148,7.955,149,5.484,150,7.149,151,5.484,152,7.149,153,5.484,154,7.149,155,5.088,156,5.484,157,2.802,158,5.484,159,5.484,160,5.484,161,5.484,162,5.088,163,5.484,164,5.088,165,5.088,166,5.484,167,5.484,168,5.484,169,5.484,170,5.484,171,5.484,172,5.484,173,5.484,174,5.484,175,5.088]],["title/coding/configuration/nginx-rtmp.html#_2",[3,0.426]],["text/coding/configuration/nginx-rtmp.html#_2",[3,0.806,74,2.857,126,5.042,131,3.333,135,6.505,137,6.946,140,5.883,144,2.985,145,4.652,147,3.333,162,5.883,164,3.333,165,3.333,175,8.035,176,3.592,177,5.542,178,3.592,179,3.621,180,5.323,181,5.323,182,3.592,183,3.592,184,5.323,185,3.333,186,3.333,187,3.333,188,3.592,189,7.275,190,4.423,191,3.592,192,3.333,193,3.592,194,3.333,195,3.333,196,3.333,197,4.559,198,3.592,199,3.592,200,3.592,201,3.592,202,3.592,203,3.592,204,3.592,205,3.592,206,3.592,207,5.323,208,3.592,209,3.333,210,3.592,211,3.592,212,3.14,213,3.592,214,3.592,215,3.592,216,4.939,217,3.592,218,3.592,219,3.592,220,6.34,221,5.323,222,3.592,223,3.592,224,3.592,225,3.592,226,3.592,227,3.14,228,5.323,229,3.592,230,3.8,231,5.323,232,3.592,233,3.592,234,3.592]],["title/coding/configuration/nginx-rtmp.html#msvc",[235,5.299]],["text/coding/configuration/nginx-rtmp.html#msvc",[3,0.805,53,4.579,67,5.948,85,4.166,92,1.137,126,5.518,129,4.861,144,5.766,155,4.861,236,5.239,237,4.354,238,5.239,239,2.992,240,6.938,241,6.938,242,6.438,243,5.239,244,2.469,245,4.861,246,5.239,247,6.938,248,4.166,249,5.239,250,5.239,251,5.239,252,2.431,253,5.239,254,7.779,255,6.938,256,5.239,257,5.239,258,5.239,259,5.239,260,4.861]],["title/coding/configuration/nginx-rtmp.html#nginx",[126,4.214]],["text/coding/configuration/nginx-rtmp.html#nginx",[3,0.788,26,0.794,46,4.185,56,7.018,61,3.303,64,2.51,67,0.695,79,0.794,92,0.934,94,1.066,100,0.695,126,1.328,143,0.843,144,3.73,145,1.459,179,0.519,185,0.843,186,1.549,187,0.843,189,0.843,190,0.755,192,0.843,194,2.149,195,2.149,196,1.549,197,0.553,209,2.665,216,0.843,239,1.323,242,0.843,245,1.549,260,0.843,261,0.909,262,3.355,263,2.316,264,1.669,265,0.909,266,0.909,267,0.909,268,0.909,269,0.909,270,1.669,271,1.669,272,0.909,273,0.909,274,0.909,275,7.643,276,5.302,277,0.953,278,2.024,279,0.909,280,5.058,281,7.061,282,9.109,283,0.909,284,0.794,285,3.355,286,3.779,287,8.032,288,0.909,289,0.909,290,0.909,291,0.909,292,0.909,293,0.909,294,0.909,295,2.872,296,1.669,297,1.669,298,0.665,299,6.53,300,5.915,301,5.058,302,8.673,303,2.872,304,0.673,305,0.909,306,0.909,307,1.669,308,2.872,309,1.669,310,3.808,311,8.934,312,0.171,313,0.909,314,0.909,315,1.669,316,3.826,317,0.909,318,0.909,319,0.909,320,7.354,321,5.302,322,7.272,323,7.272,324,1.669,325,1.669,326,1.669,327,4.488,328,4.488,329,1.669,330,2.872,331,0.909,332,1.459,333,2.872,334,0.909,335,1.226,336,2.316,337,1.669,338,3.355,339,2.316,340,2.316,341,2.316,342,0.909,343,0.909,344,0.755,345,5.915,346,5.525,347,6.53,348,6.246,349,3.355,350,1.669,351,5.058,352,0.909,353,0.909,354,0.909,355,0.909,356,0.216,357,0.456,358,5.915,359,1.669,360,0.909,361,0.78,362,0.909,363,0.909,364,0.909,365,0.909,366,0.909,367,0.909,368,0.909,369,0.909,370,0.909,371,0.909,372,0.909,373,0.909,374,1.669,375,1.669,376,0.909,377,0.909,378,2.024,379,0.794,380,0.909,381,1.669,382,2.316,383,0.909,384,1.669,385,0.909,386,1.669,387,1.669,388,0.755,389,2.872,390,2.872,391,3.355,392,0.909,393,3.923,394,1.669,395,2.316,396,0.649,397,1.669,398,2.316,399,2.872,400,1.094,401,3.779,402,0.909,403,1.669,404,2.316,405,2.316,406,0.53,407,1.669,408,0.794,409,0.499,410,0.909,411,0.909,412,1.669,413,3.355,414,3.779,415,1.276,416,1.669,417,0.909,418,0.909,419,0.909,420,0.909,421,0.909,422,1.669,423,0.909,424,0.909,425,0.909,426,0.415,427,0.909,428,0.909,429,0.909,430,0.909,431,0.909,432,0.909,433,1.669,434,0.909,435,2.316,436,0.909,437,1.669,438,0.909,439,0.909,440,0.909,441,1.232,442,2.316,443,0.909,444,0.909,445,0.909,446,0.909,447,0.909,448,0.909,449,0.909,450,0.909,451,0.909,452,1.669,453,0.909,454,0.909,455,0.909,456,0.909,457,0.794]],["title/coding/dsa/vector-and-list.html",[3,0.426]],["text/coding/dsa/vector-and-list.html",[3,0.813,281,4.47,316,3.542,406,3.981,458,5.115,459,4.067,460,5.115,461,5.115,462,5.115,463,5.115,464,5.115,465,5.115,466,5.115,467,5.115,468,4.47,469,5.115,470,5.115,471,5.115,472,5.115,473,1.169,474,5.115,475,5.115,476,5.115,477,5.115]],["title/coding/dsa/vector-and-list.html#_1",[3,0.426]],["text/coding/dsa/vector-and-list.html#_1",[3,0.713]],["title/coding/dsa/vector-and-list.html#_2",[3,0.426]],["text/coding/dsa/vector-and-list.html#_2",[3,0.804,316,4.695,458,6.779,459,5.391,460,6.779,461,6.779,462,6.779,463,6.779,464,6.779]],["title/coding/dsa/vector-and-list.html#_3",[3,0.426]],["text/coding/dsa/vector-and-list.html#_3",[3,0.81,281,5.19,406,4.387,465,5.938,466,5.938,467,5.938,468,5.19,469,5.938,470,5.938,471,5.938,472,5.938,473,1.358,474,5.938,475,5.938,476,5.938,477,5.938]],["title/coding/leetcode/1.html",[3,0.321,92,0.583]],["text/coding/leetcode/1.html",[3,0.813,92,0.69,93,2.043,96,1.809,244,1.07,252,2.796,312,1.134,335,3.425,356,1.126,361,1.737,415,4.607,473,1.688,478,4.36,479,1.676,480,1.986,481,2.272,482,2.272,483,0.53,484,1.488,485,1.416,486,2.068,487,1.488,488,1.488,489,1.353,490,1.298,491,2.319,492,2.272,493,2.272,494,4.792,495,4.173,496,4.792,497,2.272,498,3.855,499,2.945,500,5.972,501,4.757,502,2.262,503,1.905,504,7.131,505,4.734,506,5.87,507,1.161,508,2.576,509,1.676,510,1.488]],["title/coding/leetcode/1.html#1",[3,0.321,92,0.583]],["text/coding/leetcode/1.html#1",[3,0.713]],["title/coding/leetcode/1.html#_1",[3,0.426]],["text/coding/leetcode/1.html#_1",[3,0.798,92,0.96,93,4.401,96,3.897,312,1.508,361,1.357,415,6.128,478,4.401,479,4.849,480,5.744,481,6.572,482,6.572,483,1.534]],["title/coding/leetcode/1.html#_2",[3,0.426]],["text/coding/leetcode/1.html#_2",[3,0.813,92,0.358,244,1.156,252,2.91,312,0.937,335,3.549,356,1.186,361,1.748,415,3.807,473,1.734,478,4.276,484,1.607,485,1.529,486,2.179,487,1.607,488,1.607,489,1.461,490,1.401,491,2.468,492,2.453,493,2.453,494,4.988,495,4.343,496,4.988,497,2.453,498,3.995,499,3.104,500,6.168,501,4.829,502,2.367,503,2.008,504,7.343,505,4.854,506,6.031,507,1.253,508,2.742,509,1.81,510,1.607]],["title/coding/leetcode/101.html",[3,0.321,511,3.699]],["text/coding/leetcode/101.html",[3,0.81,92,0.846,244,1.899,252,3.787,304,2.334,312,1.393,356,1.868,357,2.024,441,5.462,473,0.921,483,0.94,511,3.739,512,4.029,513,2.323,514,4.029,515,2.4,516,3.205,517,3.205,518,2.877,519,6.491,520,3.584,521,5.126,522,4.982,523,3.448,524,7.403,525,8.162,526,8.162,527,4.029,528,2.059]],["title/coding/leetcode/101.html#101",[3,0.321,511,3.699]],["text/coding/leetcode/101.html#101",[3,0.713]],["title/coding/leetcode/101.html#_1",[3,0.426]],["text/coding/leetcode/101.html#_1",[3,0.8,92,1.175,304,3.242,312,1.697,483,1.542,512,6.606,513,2.83,514,6.606]],["title/coding/leetcode/101.html#_2",[3,0.426]],["text/coding/leetcode/101.html#_2",[3,0.808,244,2.177,252,3.958,356,1.966,357,2.321,441,5.803,473,1.056,515,2.752,516,3.675,517,3.675,518,3.299,519,6.784,520,3.861,521,5.446,522,5.293,523,3.796,524,7.865,525,8.53,526,8.53,527,4.621,528,2.361]],["title/coding/leetcode/102.html",[3,0.321,529,3.699]],["text/coding/leetcode/102.html",[3,0.813,92,1.094,93,1.109,96,0.982,244,3.055,252,2.357,316,2.337,356,1.455,361,1.403,426,1.543,441,4.17,473,1.98,480,1.765,483,0.471,484,1.323,485,3.808,486,2.473,487,1.323,488,1.323,489,1.203,490,3.704,491,1.259,499,4.403,502,3.101,503,2.464,510,1.323,513,1.059,515,1.203,516,1.606,517,1.606,518,1.442,519,4.04,520,1.786,521,2.337,522,2.272,529,1.874,530,2.02,531,2.02,532,2.02,533,2.02,534,4.441,535,1.765,536,1.765,537,1.606,538,2.59,539,4.441,540,6.484,541,6.109,542,6.484,543,5.651,544,2.211,545,4.348,546,5.651,547,5.651,548,5.651,549,5.651,550,6.109]],["title/coding/leetcode/102.html#102",[3,0.321,529,3.699]],["text/coding/leetcode/102.html#102",[3,0.713]],["title/coding/leetcode/102.html#_1",[3,0.426]],["text/coding/leetcode/102.html#_1",[3,0.798,93,3.782,96,3.349,480,6.02,483,1.607,513,2.587,530,6.887,531,6.887,532,6.887,533,6.887]],["title/coding/leetcode/102.html#_2",[3,0.426]],["text/coding/leetcode/102.html#_2",[3,0.813,92,1.113,244,3.129,252,2.437,316,2.443,356,1.494,361,1.434,426,1.612,441,4.294,473,2,484,1.395,485,3.91,486,2.547,487,1.395,488,1.395,489,1.268,490,3.793,491,1.327,499,4.493,502,3.156,503,2.53,510,1.395,515,1.268,516,1.693,517,1.693,518,1.52,519,4.176,520,1.867,521,2.443,522,2.374,534,4.589,535,1.861,536,1.861,537,1.693,538,2.69,539,4.589,540,6.642,541,6.272,542,6.642,543,5.819,544,2.311,545,4.515,546,5.819,547,5.819,548,5.819,549,5.819,550,6.272]],["title/coding/leetcode/118.html",[3,0.321,112,3.313]],["text/coding/leetcode/118.html",[3,0.813,92,1.256,112,2.175,244,1.965,284,3.646,298,1.042,312,0.785,316,2.888,356,1.645,361,1.225,473,2.048,483,0.611,484,1.715,485,4.304,486,3.17,487,1.715,488,1.715,489,1.559,490,2.97,499,3.242,502,3.21,503,3.033,534,5.663,535,2.287,536,2.287,544,2.733,551,8.257,552,2.617,553,2.617,554,2.287,555,2.617,556,3.646,557,5.932,558,3.837,559,5.2,560,6.479]],["title/coding/leetcode/118.html#118",[3,0.321,112,3.313]],["text/coding/leetcode/118.html#118",[3,0.713]],["title/coding/leetcode/118.html#_1",[3,0.426]],["text/coding/leetcode/118.html#_1",[3,0.787,92,1.04,298,2.832,483,1.661,551,7.8,552,7.115,553,7.115,554,6.219,555,7.115]],["title/coding/leetcode/118.html#_2",[3,0.426]],["text/coding/leetcode/118.html#_2",[3,0.813,92,1.257,244,2.055,284,3.812,312,0.821,316,3.02,356,1.685,361,1.264,473,2.068,484,1.814,485,4.41,486,3.24,487,1.814,488,1.814,489,1.649,490,3.082,499,3.363,502,3.268,503,3.093,534,5.821,535,2.42,536,2.42,544,2.857,551,8.218,556,3.812,557,6.122,558,3.981,559,5.396,560,6.66]],["title/coding/leetcode/119.html",[3,0.257,113,2.656,114,2.041]],["text/coding/leetcode/119.html",[3,0.811,92,1.194,113,3.359,114,2.582,356,1.616,361,1.401,409,4.071,473,2.034,483,0.943,484,2.648,485,2.52,486,2.539,487,2.648,488,2.648,489,2.408,490,2.309,499,4.893,502,3.07,503,2.339,507,2.065,513,1.268,554,3.533,561,5.801,562,5.801,563,2.309,564,6.785,565,8.17,566,7.413,567,4.042]],["title/coding/leetcode/119.html#119-ii",[3,0.257,113,2.656,114,2.041]],["text/coding/leetcode/119.html#119-ii",[3,0.713]],["title/coding/leetcode/119.html#_1",[3,0.426]],["text/coding/leetcode/119.html#_1",[3,0.792,409,5.04,483,1.625,513,2.184,554,6.085,561,8.298,562,8.298]],["title/coding/leetcode/119.html#_2",[3,0.426]],["text/coding/leetcode/119.html#_2",[3,0.81,92,1.235,356,1.712,361,1.484,473,2.08,484,2.943,485,2.8,486,2.735,487,2.943,488,2.943,489,2.676,490,2.566,499,5.091,502,3.218,503,2.52,507,2.295,563,2.566,564,7.187,565,8.456,566,7.77,567,4.492]],["title/coding/leetcode/120.html",[3,0.321,568,3.313]],["text/coding/leetcode/120.html",[3,0.811,92,1.234,109,2.187,298,1.629,312,1.102,356,1.394,361,1.694,426,2.676,473,1.804,479,4.318,483,0.955,491,2.552,505,5.385,509,3.02,513,1.284,538,4.07,568,3.402,569,4.093,570,4.093,571,4.093,572,5.116,573,3.255,574,4.093,575,6.832,576,7.456,577,5.853,578,7.888]],["title/coding/leetcode/120.html#120",[3,0.321,568,3.313]],["text/coding/leetcode/120.html#120",[3,0.713]],["title/coding/leetcode/120.html#_1",[3,0.426]],["text/coding/leetcode/120.html#_1",[3,0.804,92,1.15,109,2.94,298,2.539,312,1.481,479,5.805,483,1.488,513,2.001,569,6.377,570,6.377,571,6.377,572,6.877]],["title/coding/leetcode/120.html#_2",[3,0.426]],["text/coding/leetcode/120.html#_2",[3,0.809,92,1.224,356,1.565,361,1.784,426,3.002,473,1.916,491,3.009,505,5.61,509,3.562,538,4.446,573,3.839,574,4.828,575,7.464,576,8.011,577,6.568,578,8.379]],["title/coding/leetcode/121.html",[3,0.321,579,3.313]],["text/coding/leetcode/121.html",[3,0.812,92,1.177,93,2.376,298,2.804,312,1.146,356,1.031,361,1.725,473,1.748,483,1.01,495,5.293,505,3.795,510,5.278,579,3.596,580,3.782,581,4.615,582,3.782,583,6.088,584,6.088,585,3.782,586,6.681,587,5.321,588,7.644]],["title/coding/leetcode/121.html#121",[3,0.321,579,3.313]],["text/coding/leetcode/121.html#121",[3,0.713]],["title/coding/leetcode/121.html#_1",[3,0.426]],["text/coding/leetcode/121.html#_1",[3,0.806,92,1.288,93,3.401,298,3.352,312,1.454,361,1.595,483,1.446,580,5.414,581,5.517,582,5.414]],["title/coding/leetcode/121.html#_2",[3,0.426]],["text/coding/leetcode/121.html#_2",[3,0.809,92,0.772,356,1.258,361,1.715,473,1.899,495,5.753,505,4.348,510,5.659,583,6.976,584,6.976,585,4.617,586,7.261,587,6.097,588,8.307]],["title/coding/leetcode/122.html",[3,0.257,114,2.041,115,2.656]],["text/coding/leetcode/122.html",[3,0.812,92,1.302,93,1.995,114,2.32,115,3.019,157,2.742,298,3.133,304,3.174,312,1.327,356,1.279,361,1.552,473,1.612,483,0.848,501,4.472,508,2.516,513,2.47,580,3.175,581,3.516,582,3.175,585,4.691,586,6.161,587,6.161,589,3.633,590,3.633,591,3.633,592,5.367,593,4.42]],["title/coding/leetcode/122.html#122-ii",[3,0.257,114,2.041,115,2.656]],["text/coding/leetcode/122.html#122-ii",[3,0.713]],["title/coding/leetcode/122.html#_1",[3,0.426]],["text/coding/leetcode/122.html#_1",[3,0.811,92,1.316,93,2.661,157,3.364,298,3.445,304,3.49,312,1.408,361,1.544,483,1.131,513,2.715,580,4.236,581,4.314,582,4.236,589,4.846,590,4.846,591,4.846]],["title/coding/leetcode/122.html#_2",[3,0.426]],["text/coding/leetcode/122.html#_2",[3,0.808,92,1.218,312,1.002,356,1.671,361,1.448,473,1.906,501,4.979,508,3.688,585,6.13,586,7.285,587,7.285,592,7.013,593,5.431]],["title/coding/leetcode/125.html",[3,0.321,116,3.313]],["text/coding/leetcode/125.html",[3,0.812,92,0.737,96,1.625,106,2.555,116,2.777,239,5.153,277,4.858,312,0.629,356,1.611,357,2.533,361,1.498,473,0.764,483,0.78,523,3.617,528,2.576,593,4.684,594,3.341,595,3.341,596,3.341,597,3.341,598,3.341,599,2.921,600,3.341,601,2.386,602,3.341,603,7.259,604,3.516,605,3.72,606,5.042,607,7.259,608,7.259,609,3.492,610,2.657,611,2.657,612,6.764]],["title/coding/leetcode/125.html#125",[3,0.321,116,3.313]],["text/coding/leetcode/125.html#125",[3,0.713]],["title/coding/leetcode/125.html#_1",[3,0.426]],["text/coding/leetcode/125.html#_1",[3,0.786,92,1.028,312,1.325,357,3.536,483,1.642,528,3.596,594,7.038,595,7.038,596,7.038,597,7.038,598,7.038,599,6.151]],["title/coding/leetcode/125.html#_2",[3,0.426]],["text/coding/leetcode/125.html#_2",[3,0.812,92,0.528,96,1.756,106,2.762,239,5.223,277,4.952,356,1.675,357,1.815,361,1.549,473,0.826,523,3.789,528,1.846,593,4.868,600,3.612,601,2.579,602,3.612,603,7.503,604,3.655,605,3.943,606,5.345,607,7.503,608,7.503,609,3.701,610,2.873,611,2.873,612,6.895]],["title/coding/leetcode/13.html",[3,0.321,97,3.048]],["text/coding/leetcode/13.html",[3,0.812,92,1.208,96,2.437,97,1.894,107,4.24,114,3.201,157,2.937,179,3.847,239,2.279,298,2.82,304,2.716,312,0.751,332,4.381,356,0.59,361,0.511,388,5.887,396,4.5,400,4.413,426,3.238,473,0.912,483,0.578,501,4.289,502,3.369,508,4.364,513,1.573,604,2.075,613,5.357,614,4.394,615,5.333,616,2.476,617,2.476,618,2.476,619,2.476,620,2.476,621,2.476,622,5.012,623,3.99,624,2.476,625,3.488,626,2.165,627,3.99,628,2.476,629,3.99,630,2.476,631,2.476,632,2.476,633,2.476,634,2.476,635,2.476,636,2.476,637,2.476,638,2.476,639,2.476,640,2.476,641,2.476,642,2.476,643,2.476,644,2.476,645,7.084]],["title/coding/leetcode/13.html#13",[3,0.321,97,3.048]],["text/coding/leetcode/13.html#13",[3,0.713]],["title/coding/leetcode/13.html#_1",[3,0.426]],["text/coding/leetcode/13.html#_1",[3,0.809,92,1.113,96,3.16,107,4.796,114,4.151,157,2.806,179,4.088,298,3.169,304,3.21,312,1.034,332,5.681,388,6.331,396,4.641,400,4.689,426,3.483,483,0.875,513,2.04,613,5.691,614,4.199,615,5.096,616,3.749,617,3.749,618,3.749,619,3.749,620,3.749,621,3.749,622,6.5,623,5.492,624,3.749,625,4.801,626,3.277,627,5.492,628,3.749,629,5.492,630,3.749,631,3.749,632,3.749,633,3.749,634,3.749,635,3.749,636,3.749,637,3.749,638,3.749,639,3.749,640,3.749,641,3.749,642,3.749]],["title/coding/leetcode/13.html#_2",[3,0.426]],["text/coding/leetcode/13.html#_2",[3,0.812,92,1.246,107,2.874,157,2.886,179,3.226,239,3.226,298,1.551,356,0.928,361,0.804,388,4.694,396,4.033,400,3.701,426,2.582,473,1.292,501,4.846,502,3.742,508,5.358,604,2.937,613,4.492,614,4.319,615,5.241,643,3.896,644,3.896,645,8.323]],["title/coding/leetcode/136.html",[3,0.321,117,3.313]],["text/coding/leetcode/136.html",[3,0.811,92,0.969,117,4.073,179,4.811,304,1.977,312,0.922,335,4.699,356,1.168,361,1.664,473,1.843,478,3.644,483,1.144,498,3.952,502,3.115,646,4.901,647,4.901,648,4.901,649,4.901]],["title/coding/leetcode/136.html#136",[3,0.321,117,3.313]],["text/coding/leetcode/136.html#136",[3,0.713]],["title/coding/leetcode/136.html#_1",[3,0.426]],["text/coding/leetcode/136.html#_1",[3,0.791,92,1.232,304,2.885,312,1.347,483,1.67,646,7.155,647,7.155]],["title/coding/leetcode/136.html#_2",[3,0.426]],["text/coding/leetcode/136.html#_2",[3,0.809,179,4.98,335,4.822,356,1.295,361,1.734,473,1.921,478,3.905,498,4.235,502,3.281,648,5.438,649,5.438]],["title/coding/leetcode/14.html",[3,0.321,98,3.048]],["text/coding/leetcode/14.html",[3,0.813,92,1.225,98,2.126,109,1.039,244,1.31,312,1.155,356,1.59,361,1.631,473,1.237,483,0.649,486,2.368,502,2.241,503,2.99,507,2.765,508,1.925,544,1.822,558,4.527,593,4.621,604,4.569,605,2.051,650,2.78,651,2.78,652,2.78,653,2.43,654,5.411,655,5.411,656,4.376,657,4.527,658,4.527,659,4.376,660,6.481,661,7.682,662,6.673]],["title/coding/leetcode/14.html#14",[3,0.321,98,3.048]],["text/coding/leetcode/14.html#14",[3,0.713]],["title/coding/leetcode/14.html#_1",[3,0.426]],["text/coding/leetcode/14.html#_1",[3,0.802,92,1.012,312,1.303,483,1.616,605,5.109,650,6.924,651,6.924,652,6.924]],["title/coding/leetcode/14.html#_2",[3,0.426]],["text/coding/leetcode/14.html#_2",[3,0.813,92,1.228,109,1.116,244,1.407,312,1.066,356,1.644,361,1.668,473,1.295,486,2.479,502,2.346,503,3.071,507,2.894,508,2.068,544,1.956,558,4.706,593,4.78,604,4.632,653,2.61,654,5.664,655,5.664,656,4.627,657,4.706,658,4.706,659,4.627,660,6.656,661,7.869,662,6.902]],["title/coding/leetcode/155.html",[3,0.321,663,3.699]],["text/coding/leetcode/155.html",[3,0.811,54,2.197,82,2.296,92,0.787,252,2.837,312,1.014,344,6.958,356,1.284,361,1.112,426,3.504,473,1.753,483,0.645,486,1.209,489,1.646,490,1.578,491,1.722,494,3.462,495,4.894,503,1.756,507,1.412,509,2.038,513,1.691,520,2.852,538,3.21,563,3.078,573,2.197,663,2.563,664,2.762,665,5.388,666,2.762,667,4.354,668,2.762,669,2.762,670,2.762,671,2.762,672,8.067,673,4.354,674,2.762,675,4.354,676,2.762,677,2.762,678,6.115,679,2.415,680,2.762,681,2.762,682,2.762,683,2.762,684,4.354,685,2.762,686,7.901,687,2.762,688,2.762,689,2.762,690,2.762,691,2.415,692,2.415,693,2.762,694,2.762,695,2.762,696,2.762,697,2.762,698,2.762,699,2.762]],["title/coding/leetcode/155.html#155",[3,0.321,663,3.699]],["text/coding/leetcode/155.html#155",[3,0.713]],["title/coding/leetcode/155.html#_1",[3,0.426]],["text/coding/leetcode/155.html#_1",[3,0.805,54,4.495,312,1.519,344,6.707,361,1.167,426,2.584,483,1.319,513,2.532,664,5.652,665,8.071,666,5.652,667,7.291,668,5.652,669,5.652,670,5.652,671,5.652,672,7.489,673,7.291,674,5.652,675,7.291,676,5.652,677,5.652]],["title/coding/leetcode/155.html#_2",[3,0.426]],["text/coding/leetcode/155.html#_2",[3,0.81,82,2.728,92,0.878,252,3.11,344,6.901,356,1.431,361,1.027,426,3.599,473,1.854,486,1.436,489,1.955,490,1.875,491,2.046,494,3.956,495,5.249,503,2.006,507,1.677,509,2.421,520,3.179,538,3.578,563,3.431,573,2.61,672,8.092,678,6.702,679,2.869,680,3.282,681,3.282,682,3.282,683,3.282,684,4.974,685,3.282,686,8.111,687,3.282,688,3.282,689,3.282,690,3.282,691,2.869,692,2.869,693,3.282,694,3.282,695,3.282,696,3.282,697,3.282,698,3.282,699,3.282]],["title/coding/leetcode/189.html",[3,0.321,118,3.313]],["text/coding/leetcode/189.html",[3,0.811,92,1.219,118,3.002,197,3.874,277,4.286,312,1.412,356,0.861,361,1.103,409,5.087,473,1.796,478,4.681,483,0.843,498,4.842,513,1.677,563,3.053,612,5.967,614,4.087,700,3.612,701,5.345,702,3.612,703,3.612,704,3.612,705,5.345,706,3.612,707,3.612,708,3.943,709,5.591,710,3.157]],["title/coding/leetcode/189.html#189",[3,0.321,118,3.313]],["text/coding/leetcode/189.html#189",[3,0.713]],["title/coding/leetcode/189.html#_1",[3,0.426]],["text/coding/leetcode/189.html#_1",[3,0.805,92,1.345,312,1.608,409,4.69,483,1.325,513,2.294,614,5.59,700,5.677,701,7.311,702,5.677,703,5.677,704,5.677,705,7.311,706,5.677,707,5.677,708,5.394]],["title/coding/leetcode/189.html#_2",[3,0.426]],["text/coding/leetcode/189.html#_2",[3,0.809,92,0.663,197,4.402,277,4.683,312,0.854,356,1.081,361,1.3,409,5.14,473,1.94,478,4.945,498,5.182,563,3.596,612,6.52,709,6.207,710,3.968]],["title/coding/leetcode/19.html",[109,1.49,711,3.699]],["text/coding/leetcode/19.html",[3,0.811,92,1.065,109,3.186,197,2.373,244,3.131,252,3.59,277,4.163,298,2.248,304,1.571,312,1.251,356,1.583,361,1.166,473,1.519,483,0.909,501,4.909,513,1.772,515,2.321,520,2.062,711,3.615,712,2.698,713,2.698,714,2.552,715,4.823,716,5.176,717,3.896,718,7.288]],["title/coding/leetcode/19.html#19-n",[109,1.49,711,3.699]],["text/coding/leetcode/19.html#19-n",[3,0.713]],["title/coding/leetcode/19.html#_1",[3,0.426]],["text/coding/leetcode/19.html#_1",[3,0.796,92,1.189,109,3.268,298,3.24,304,2.72,312,1.646,483,1.574,513,2.554]],["title/coding/leetcode/19.html#_2",[3,0.426]],["text/coding/leetcode/19.html#_2",[3,0.81,92,0.898,109,2.873,197,2.671,244,3.343,252,3.757,277,4.392,356,1.69,361,1.269,473,1.622,501,5.026,515,2.612,520,2.321,712,3.037,713,3.037,714,2.873,715,5.047,716,5.323,717,4.385,718,7.689]],["title/coding/leetcode/198.html",[3,0.321,719,3.699]],["text/coding/leetcode/198.html",[3,0.812,92,1.313,96,2.409,298,1.3,304,1.998,312,1.424,356,1.18,361,1.623,426,2.265,473,1.797,478,4.154,483,0.762,486,1.429,491,2.036,498,4.682,503,1.998,507,1.669,510,3.246,513,2.097,537,2.597,538,3.567,614,2.497,626,2.854,719,3.03,720,2.854,721,3.265,722,3.538,723,2.854,724,2.854,725,7.564,726,4.955,727,4.955,728,4.955,729,3.265,730,7.86]],["title/coding/leetcode/198.html#198",[3,0.321,719,3.699]],["text/coding/leetcode/198.html#198",[3,0.713]],["title/coding/leetcode/198.html#_1",[3,0.426]],["text/coding/leetcode/198.html#_1",[3,0.809,92,1.335,96,3.486,298,2.192,304,2.891,312,1.5,361,1.48,483,1.285,513,2.649,614,4.211,626,4.814,720,4.814,721,5.507,722,5.118,723,4.814,724,4.814]],["title/coding/leetcode/198.html#_2",[3,0.426]],["text/coding/leetcode/198.html#_2",[3,0.811,92,1.262,312,1.286,356,1.394,361,1.628,426,2.676,473,1.932,478,4.506,486,1.791,491,2.552,498,5.032,503,2.36,507,2.092,510,3.835,537,3.255,538,4.07,725,8.205,726,5.853,727,5.853,728,5.853,729,4.093,730,8.447]],["title/coding/leetcode/204.html",[3,0.321,731,3.699]],["text/coding/leetcode/204.html",[3,0.812,60,2.637,92,1.24,93,3.7,109,3.223,157,2.561,248,6.051,298,1.32,304,2.022,312,1.432,356,0.79,361,1.035,473,1.54,483,0.774,486,1.451,502,2.503,503,2.022,505,4.743,507,1.694,513,2.663,604,3.956,731,3.077,732,4.381,733,3.316,734,6.044,735,3.316,736,7.234,737,3.316,738,5.013,739,3.316,740,3.316]],["title/coding/leetcode/204.html#204",[3,0.321,731,3.699]],["text/coding/leetcode/204.html#204",[3,0.713]],["title/coding/leetcode/204.html#_1",[3,0.426]],["text/coding/leetcode/204.html#_1",[3,0.792,93,3.844,109,2.616,157,4.254,298,2.786,304,3.357,312,1.317,483,1.634,513,2.196]],["title/coding/leetcode/204.html#_2",[3,0.426]],["text/coding/leetcode/204.html#_2",[3,0.812,60,2.857,92,1.265,93,3.482,109,3.236,248,6.235,312,1.409,356,0.856,361,1.099,473,1.603,486,1.572,502,2.626,503,2.146,505,4.887,507,1.836,513,2.67,604,4.076,732,4.652,733,3.592,734,6.34,735,3.592,736,7.486,737,3.592,738,5.323,739,3.592,740,3.592]],["title/coding/leetcode/206.html",[3,0.321,119,3.313]],["text/coding/leetcode/206.html",[3,0.81,92,0.879,119,3.536,244,3.289,252,3.715,277,4.88,298,2.395,304,2.426,312,1.133,356,1.433,473,0.973,483,0.993,513,1.888,515,2.535,520,2.252,657,5.598,658,6.303,712,2.947,713,2.947,714,2.788,715,4.99,716,5.359,741,4.255,742,6.997]],["title/coding/leetcode/206.html#206",[3,0.321,119,3.313]],["text/coding/leetcode/206.html#206",[3,0.713]],["title/coding/leetcode/206.html#_1",[3,0.426]],["text/coding/leetcode/206.html#_1",[3,0.768,92,1.224,244,3.948,298,3.335,304,3.379,312,1.577,483,1.651,513,2.629]],["title/coding/leetcode/206.html#_2",[3,0.426]],["text/coding/leetcode/206.html#_2",[3,0.809,244,2.209,252,3.848,277,5.012,356,1.533,473,1.072,515,2.792,520,2.481,657,5.838,658,6.474,712,3.246,713,3.246,714,3.071,715,5.17,716,5.466,741,4.688,742,7.249]],["title/coding/leetcode/21.html",[3,0.321,99,2.846]],["text/coding/leetcode/21.html",[3,0.809,92,1.139,99,3.23,252,3.8,304,3.143,312,1.182,356,1.857,473,1.034,483,1.056,513,1.971,515,2.694,520,3.818,712,3.133,713,3.133,714,2.964,715,5.104,716,4.877,743,7.214,744,8.861,745,8.861]],["title/coding/leetcode/21.html#21",[3,0.321,99,2.846]],["text/coding/leetcode/21.html#21",[3,0.713]],["title/coding/leetcode/21.html#_1",[3,0.426]],["text/coding/leetcode/21.html#_1",[3,0.745,92,1.353,304,3.735,312,1.587,483,1.67,513,2.646]],["title/coding/leetcode/21.html#_2",[3,0.426]],["text/coding/leetcode/21.html#_2",[3,0.809,252,3.929,356,1.932,473,1.138,515,2.964,520,4.012,712,3.446,713,3.446,714,3.26,715,5.278,716,5.044,743,7.581,744,9.063,745,9.063]],["title/coding/leetcode/217.html",[3,0.321,120,3.313]],["text/coding/leetcode/217.html",[3,0.811,92,1.052,120,3.746,312,1.179,335,3.316,356,1.854,357,3.91,361,0.93,473,1.985,478,4.273,483,1.052,498,4.635,503,1.818,513,1.414,523,2.685,528,3.976,563,3.578,720,3.94,746,4.508,747,4.508,748,6.265,749,6.265,750,4.508,751,4.508]],["title/coding/leetcode/217.html#217",[3,0.321,120,3.313]],["text/coding/leetcode/217.html#217",[3,0.713]],["title/coding/leetcode/217.html#_1",[3,0.426]],["text/coding/leetcode/217.html#_1",[3,0.795,92,1.001,312,1.29,357,4.129,483,1.599,513,2.15,528,4.499,720,5.988,746,6.851,747,6.851]],["title/coding/leetcode/217.html#_2",[3,0.426]],["text/coding/leetcode/217.html#_2",[3,0.81,92,0.998,312,0.963,335,3.614,356,1.954,357,3.43,361,1.056,473,2.052,478,4.504,498,4.886,503,2.063,523,3.047,528,2.613,563,3.9,748,6.828,749,6.828,750,5.115,751,5.115]],["title/coding/leetcode/234.html",[3,0.321,752,3.699]],["text/coding/leetcode/234.html",[3,0.811,92,1.004,244,2.916,252,3.906,277,3.535,312,1.385,356,1.474,357,2.594,361,1.066,473,1.571,483,0.805,486,1.509,502,2.845,503,1.391,515,2.054,520,4.237,523,2.054,528,2.638,572,4.513,593,4.286,610,2.742,657,6.211,658,5.429,708,3.809,709,5.464,712,2.388,713,2.388,714,2.259,715,5.248,716,4.769,752,3.2,753,5.163]],["title/coding/leetcode/234.html#234",[3,0.321,752,3.699]],["text/coding/leetcode/234.html#234",[3,0.713]],["title/coding/leetcode/234.html#_1",[3,0.426]],["text/coding/leetcode/234.html#_1",[3,0.789,92,1.332,312,1.715,357,3.424,483,1.59,528,3.482,572,7.161,708,6.044]],["title/coding/leetcode/234.html#_2",[3,0.426]],["text/coding/leetcode/234.html#_2",[3,0.811,244,3.089,252,4.008,277,3.744,312,0.716,356,1.562,357,1.911,361,1.146,473,1.648,486,1.665,502,2.984,503,1.534,515,2.266,520,4.373,523,2.266,528,1.944,593,4.539,610,3.025,657,6.372,658,5.654,709,5.731,712,2.634,713,2.634,714,2.492,715,5.384,716,4.922,753,5.551]],["title/coding/leetcode/237.html",[3,0.321,121,3.313]],["text/coding/leetcode/237.html",[3,0.809,92,1.198,96,3.32,121,4.251,252,2.373,277,4.39,298,3.06,304,2.754,312,0.963,483,1.194,518,6.408,520,3.614,563,2.921,715,3.188,716,4.886,754,7.686,755,5.115,756,5.115,757,5.115]],["title/coding/leetcode/237.html#237",[3,0.321,121,3.313]],["text/coding/leetcode/237.html#237",[3,0.713]],["title/coding/leetcode/237.html#_1",[3,0.426]],["text/coding/leetcode/237.html#_1",[3,0.803,92,1.284,96,3.735,277,4.789,298,3.338,304,3.097,312,1.155,483,1.432,518,5.484,754,8.385,755,6.135,756,6.135]],["title/coding/leetcode/237.html#_2",[3,0.426]],["text/coding/leetcode/237.html#_2",[3,0.801,252,3.05,518,6.59,520,4.241,563,3.754,715,4.097,716,5.362,757,6.572]],["title/coding/leetcode/24.html",[3,0.321,100,3.048]],["text/coding/leetcode/24.html",[3,0.809,92,0.962,100,3.705,252,3.893,277,5.056,304,2.655,312,1.239,356,1.569,473,1.108,483,1.131,513,2.066,515,2.887,520,2.565,712,3.356,713,3.356,714,3.175,715,5.23,716,5.155,758,6.584,759,8.024,760,6.584]],["title/coding/leetcode/24.html#24",[3,0.321,100,3.048]],["text/coding/leetcode/24.html#24",[3,0.713]],["title/coding/leetcode/24.html#_1",[3,0.426]],["text/coding/leetcode/24.html#_1",[3,0.763,92,1.244,304,3.435,312,1.603,483,1.698,513,2.672]],["title/coding/leetcode/24.html#_2",[3,0.426]],["text/coding/leetcode/24.html#_2",[3,0.807,252,4.013,277,5.173,356,1.666,473,1.213,515,3.159,520,2.807,712,3.673,713,3.673,714,3.475,715,5.391,716,5.291,758,6.994,759,8.321,760,6.994]],["title/coding/leetcode/242.html",[3,0.321,122,3.313]],["text/coding/leetcode/242.html",[3,0.813,92,0.606,101,4.913,122,3.445,239,4.706,312,0.78,356,1.407,357,2.968,361,1.548,406,4.804,473,1.351,483,0.968,501,4.76,523,2.47,528,3.018,599,3.624,604,3.577,761,4.146,762,4.146,763,4.146,764,4.146,765,4.146,766,6.881,767,6.881]],["title/coding/leetcode/242.html#242",[3,0.321,122,3.313]],["text/coding/leetcode/242.html#242",[3,0.713]],["title/coding/leetcode/242.html#_1",[3,0.426]],["text/coding/leetcode/242.html#_1",[3,0.802,92,0.936,239,5.097,312,1.206,357,3.22,406,5.204,483,1.496,528,3.275,599,5.602,761,6.409,762,6.409,763,6.409,764,6.409]],["title/coding/leetcode/242.html#_2",[3,0.426]],["text/coding/leetcode/242.html#_2",[3,0.812,101,5.36,239,3.78,356,1.577,357,2.453,361,1.661,406,3.859,473,1.513,501,4.956,523,2.908,528,2.495,604,3.903,765,4.883,766,7.508,767,7.508]],["title/coding/leetcode/26.html",[3,0.321,101,2.846]],["text/coding/leetcode/26.html",[3,0.812,92,1.233,101,2.913,298,1.624,304,1.646,312,1.483,356,1.391,361,1.537,473,1.874,478,4.896,483,0.952,498,4.693,513,1.28,593,4.044,708,4.309,768,4.08,769,4.08,770,4.08,771,4.08,772,4.08,773,8.44]],["title/coding/leetcode/26.html#26",[3,0.321,101,2.846]],["text/coding/leetcode/26.html#26",[3,0.713]],["title/coding/leetcode/26.html#_1",[3,0.426]],["text/coding/leetcode/26.html#_1",[3,0.809,92,1.172,298,2.221,304,2.25,312,1.597,361,1.492,473,1.653,478,4.827,483,1.302,513,1.75,593,5.006,708,5.334,768,5.578,769,5.578,770,5.578,771,5.578]],["title/coding/leetcode/26.html#_2",[3,0.426]],["text/coding/leetcode/26.html#_2",[3,0.809,92,1.224,312,1.015,356,1.685,361,1.46,473,1.915,478,4.775,498,5.18,772,5.392,773,9.093]],["title/coding/leetcode/28.html",[3,0.257,102,2.656,774,2.656]],["text/coding/leetcode/28.html",[3,0.812,92,1.211,102,2.928,179,2.013,312,0.988,356,1.654,361,1.779,473,1.2,483,0.822,604,2.728,611,4.173,657,5.949,658,5.478,742,6.49,774,5.772,775,7.857,776,7.997,777,3.524,778,3.08,779,3.524,780,3.524,781,3.524,782,3.524,783,6.269,784,7.426,785,7.426]],["title/coding/leetcode/28.html#28-strstr",[3,0.257,102,2.656,774,2.656]],["text/coding/leetcode/28.html#28-strstr",[3,0.713]],["title/coding/leetcode/28.html#_1",[3,0.426]],["text/coding/leetcode/28.html#_1",[3,0.802,92,1.215,179,3.439,312,1.429,361,1.567,483,1.405,774,6.308,775,8.099,776,8.525,777,6.021,778,5.262,779,6.021,780,6.021,781,6.021,782,6.021]],["title/coding/leetcode/28.html#_2",[3,0.426]],["text/coding/leetcode/28.html#_2",[3,0.811,92,1.167,356,1.802,361,1.798,473,1.369,604,3.114,611,4.763,657,6.291,658,5.892,742,6.98,774,3.513,775,7.41,776,7.02,783,6.955,784,7.986,785,7.986]],["title/coding/leetcode/315.html",[3,0.321,123,3.313]],["text/coding/leetcode/315.html",[3,0.812,92,1.172,123,2.243,244,2.844,252,3.633,298,1.074,312,0.999,356,1.567,361,1.444,459,4.8,473,1.903,478,3.315,483,0.63,484,1.768,485,1.682,486,2.323,487,1.768,488,1.768,489,1.608,490,1.542,498,4.168,499,2.664,502,3.321,503,2.14,507,1.379,520,2.809,521,4.18,522,4.062,581,1.768,723,2.359,724,4.639,786,4.274,787,2.699,788,2.699,789,2.699,790,2.699,791,4.274,792,7.829,793,6.036,794,8.019,795,6.578,796,6.036,797,2.699,798,5.307]],["title/coding/leetcode/315.html#315",[3,0.321,123,3.313]],["text/coding/leetcode/315.html#315",[3,0.713]],["title/coding/leetcode/315.html#_1",[3,0.426]],["text/coding/leetcode/315.html#_1",[3,0.802,92,1.341,298,2.385,312,1.561,361,1.562,478,4.156,483,1.399,581,3.926,723,5.238,724,7.251,786,7.568,787,5.993,788,5.993,789,5.993,790,5.993,791,7.568]],["title/coding/leetcode/315.html#_2",[3,0.426]],["text/coding/leetcode/315.html#_2",[3,0.811,92,0.95,244,3.062,252,3.788,356,1.671,361,1.342,459,5.169,473,1.967,478,2.611,484,2.027,485,1.928,486,2.534,487,2.027,488,2.027,489,1.843,490,1.767,498,4.411,499,2.964,502,3.452,503,2.335,507,1.581,520,3.065,521,4.501,522,4.374,792,8.164,793,6.499,794,8.335,795,7.014,796,6.499,797,3.093,798,5.791]],["title/coding/leetcode/344.html",[3,0.321,124,3.313]],["text/coding/leetcode/344.html",[3,0.809,92,1.257,124,4.336,197,4.728,239,5.05,312,1.302,356,1.243,361,1.077,473,1.193,483,1.218,563,2.98,604,4.036,708,3.85,799,5.218,800,5.218,801,5.218,802,6.919,803,6.919,804,8.603]],["title/coding/leetcode/344.html#344",[3,0.321,124,3.313]],["text/coding/leetcode/344.html#344",[3,0.713]],["title/coding/leetcode/344.html#_1",[3,0.426]],["text/coding/leetcode/344.html#_1",[3,0.782,92,1.04,312,1.339,483,1.661,604,3.699,708,5.249,799,7.115,800,7.115,801,7.115,802,8.406]],["title/coding/leetcode/344.html#_2",[3,0.426]],["text/coding/leetcode/344.html#_2",[3,0.806,92,1.263,197,4.999,239,5.211,312,1.102,356,1.395,361,1.209,473,1.339,563,3.345,604,3.878,803,7.459,804,8.924]],["title/coding/leetcode/350.html",[3,0.257,114,2.041,805,2.965]],["text/coding/leetcode/350.html",[3,0.814,92,0.878,114,1.443,252,2.788,312,0.425,356,0.538,361,1.735,426,1.693,473,1.812,483,0.527,486,1.621,491,1.409,494,4.779,495,4.47,499,2.934,500,6.22,501,4.939,502,1.949,503,1.898,506,6.823,507,1.155,538,2.804,573,1.797,805,2.097,806,5.659,807,2.26,808,5.859,809,3.704,810,2.26,811,2.26,812,2.26,813,6.817,814,6.817,815,2.26,816,4.759,817,4.759]],["title/coding/leetcode/350.html#350-ii",[3,0.257,114,2.041,805,2.965]],["text/coding/leetcode/350.html#350-ii",[3,0.713]],["title/coding/leetcode/350.html#_1",[3,0.426]],["text/coding/leetcode/350.html#_1",[3,0.799,92,0.96,312,1.237,483,1.534,806,6.877,807,6.572,808,7.159,809,8.014,810,6.572,811,6.572,812,6.572]],["title/coding/leetcode/350.html#_2",[3,0.426]],["text/coding/leetcode/350.html#_2",[3,0.814,92,0.833,252,2.905,356,0.582,361,1.766,426,1.805,473,1.853,486,1.728,491,1.523,494,4.978,495,4.636,499,3.096,500,6.409,501,4.999,502,2.057,503,2.003,506,6.933,507,1.249,538,2.959,573,1.943,806,4.978,808,4.978,813,7.045,814,7.045,815,2.444,816,4.985,817,4.985]],["title/coding/leetcode/36.html",[3,0.321,104,3.313]],["text/coding/leetcode/36.html",[3,0.813,92,1.214,94,2.369,96,2.65,104,1.881,298,0.901,312,0.426,356,1.298,357,2.738,361,1.755,409,4.355,473,1.477,483,0.528,503,1.901,505,5.396,507,2.408,513,2.716,523,1.348,528,1.896,604,1.177,818,3.71,819,3.71,820,2.264,821,3.71,822,3.71,823,3.71,824,3.71,825,3.71,826,3.71,827,3.71,828,3.71,829,2.264,830,2.264,831,8.072,832,7.372,833,2.264,834,6.822,835,5.45]],["title/coding/leetcode/36.html#36",[3,0.321,104,3.313]],["text/coding/leetcode/36.html#36",[3,0.713]],["title/coding/leetcode/36.html#_1",[3,0.426]],["text/coding/leetcode/36.html#_1",[3,0.807,92,1.298,94,4.467,96,4.046,298,2.111,312,0.998,357,2.665,483,1.238,528,2.71,818,6.994,819,6.994,820,5.304,821,6.994,822,6.994,823,6.994,824,6.994,825,6.994,826,6.994,827,6.994,828,6.994,829,5.304]],["title/coding/leetcode/36.html#_2",[3,0.426]],["text/coding/leetcode/36.html#_2",[3,0.813,92,1.142,356,1.433,357,2.655,361,1.817,409,4.563,473,1.596,503,2.131,505,5.571,507,2.701,513,2.804,523,1.598,528,1.371,604,1.394,830,2.682,831,8.433,832,7.813,833,2.682,834,7.313,835,6.015]],["title/coding/leetcode/38.html",[3,0.321,105,3.313]],["text/coding/leetcode/38.html",[3,0.813,92,1.305,99,3.719,105,1.747,109,3.003,157,2.661,197,4.504,244,0.99,277,2.975,298,0.837,304,1.407,312,1.392,356,1.066,361,1.427,473,1.191,479,4.263,483,0.49,486,1.958,490,2.555,496,4.595,501,3.422,502,3.328,503,2.33,507,1.783,513,1.095,558,4.263,604,4.11,611,2.775,612,4.595,722,2.491,836,4.552,837,3.05,838,5.778,839,3.489,840,2.102,841,4.474,842,3.489,843,7.395,844,5.778,845,3.489]],["title/coding/leetcode/38.html#38",[3,0.321,105,3.313]],["text/coding/leetcode/38.html#38",[3,0.713]],["title/coding/leetcode/38.html#_1",[3,0.426]],["text/coding/leetcode/38.html#_1",[3,0.806,92,1.408,99,5.658,109,3.282,298,1.873,304,2.602,312,1.653,479,6.127,483,1.098,513,2.025,722,4.607,836,6.927,837,5.64,838,8.304,839,6.453]],["title/coding/leetcode/38.html#_2",[3,0.426]],["text/coding/leetcode/38.html#_2",[3,0.813,92,1.098,109,2.704,157,3.028,197,4.836,244,1.231,277,3.384,312,0.977,356,1.237,361,1.551,473,1.355,486,2.273,490,2.966,496,5.148,501,3.788,502,3.516,503,2.61,507,2.128,558,4.776,604,4.356,611,3.312,612,5.148,840,2.612,841,5.193,842,4.164,843,7.94,844,6.473,845,4.164]],["title/coding/leetcode/384.html",[3,0.321,846,3.699]],["text/coding/leetcode/384.html",[3,0.812,54,1.951,74,1.951,92,0.358,197,3.033,248,3.96,252,1.838,312,0.462,316,5.085,356,1.494,361,0.817,426,2.613,473,2.038,478,4.033,483,0.924,485,2.468,486,2.501,489,1.461,490,2.844,498,3.736,502,3.225,503,2.705,513,0.77,538,3.405,544,2.594,556,5.862,563,1.401,679,2.144,686,7.311,691,2.144,692,2.144,846,2.276,847,4.988,848,7.529,849,2.453,850,3.96,851,2.453,852,3.96,853,3.96,854,2.453,855,2.453,856,2.144,857,2.453,858,2.453,859,2.453,860,2.453,861,6.272,862,2.453,863,2.453,864,2.453,865,2.453,866,2.453,867,2.453,868,2.453,869,2.453,870,2.453]],["title/coding/leetcode/384.html#384",[3,0.321,846,3.699]],["text/coding/leetcode/384.html#384",[3,0.713]],["title/coding/leetcode/384.html#_1",[3,0.426]],["text/coding/leetcode/384.html#_1",[3,0.792,54,5.28,92,0.97,312,1.25,473,1.518,478,3.646,483,1.55,513,2.083,847,7.361,848,7.483,849,6.64,850,8.064,851,6.64]],["title/coding/leetcode/384.html#_2",[3,0.426]],["text/coding/leetcode/384.html#_2",[3,0.812,74,2.111,197,3.197,248,4.175,252,1.958,316,5.234,356,1.554,361,0.871,426,2.734,473,2.053,478,4,483,0.62,485,2.63,486,2.617,489,1.581,490,2.998,498,3.887,502,3.305,503,2.802,538,3.562,544,2.764,556,6.072,563,1.516,679,2.32,686,7.449,691,2.32,692,2.32,848,7.404,852,4.219,853,4.219,854,2.655,855,2.655,856,2.32,857,2.655,858,2.655,859,2.655,860,2.655,861,6.525,862,2.655,863,2.655,864,2.655,865,2.655,866,2.655,867,2.655,868,2.655,869,2.655,870,2.655]],["title/coding/leetcode/387.html",[3,0.321,125,3.313]],["text/coding/leetcode/387.html",[3,0.812,88,3.898,92,1.099,101,3.499,125,4.073,239,4.959,312,0.922,356,1.581,361,1.37,473,1.72,483,1.144,501,5.027,506,5.982,604,3.45,871,4.901,872,4.901]],["title/coding/leetcode/387.html#387",[3,0.321,125,3.313]],["text/coding/leetcode/387.html#387",[3,0.713]],["title/coding/leetcode/387.html#_1",[3,0.426]],["text/coding/leetcode/387.html#_1",[3,0.788,88,5.69,92,1.045,239,4.817,312,1.347,361,1.477,483,1.67,871,7.155]],["title/coding/leetcode/387.html#_2",[3,0.426]],["text/coding/leetcode/387.html#_2",[3,0.81,92,1.039,101,3.882,239,4.799,356,1.694,361,1.122,473,1.811,501,5.132,506,6.3,604,3.696,872,5.438]],["title/coding/leetcode/48.html",[3,0.321,106,3.048]],["text/coding/leetcode/48.html",[3,0.812,92,1.08,93,1.914,94,2.226,96,1.695,97,2.665,98,2.665,106,2.665,109,1.945,197,4.502,298,2.072,304,2.099,312,1.3,361,1.526,379,3.047,473,1.579,483,0.814,505,5.666,513,1.633,563,1.991,581,3.41,625,3.047,710,3.047,722,2.489,847,2.772,873,8.096,874,3.486,875,3.486,876,3.486,877,3.486,878,3.486,879,3.486,880,3.486,881,3.486,882,3.486,883,3.486,884,8.035,885,3.486]],["title/coding/leetcode/48.html#48",[3,0.321,106,3.048]],["text/coding/leetcode/48.html#48",[3,0.713]],["title/coding/leetcode/48.html#_1",[3,0.426]],["text/coding/leetcode/48.html#_1",[3,0.8,92,1.184,93,3.131,94,3.641,96,2.772,97,4.36,98,4.36,109,2.74,298,2.919,304,2.957,312,1.525,379,4.984,483,1.331,513,2.301,581,4.804,625,4.984,722,4.071,847,4.534,873,6.803,874,5.702,875,5.702,876,5.702,877,5.702,878,5.702,879,5.702,880,5.702,881,5.702,882,5.702,883,5.702]],["title/coding/leetcode/48.html#_2",[3,0.426]],["text/coding/leetcode/48.html#_2",[3,0.812,92,0.889,197,4.906,312,0.814,361,1.663,473,1.748,505,5.864,563,2.471,710,3.782,873,8.266,884,8.584,885,4.326]],["title/coding/leetcode/50.html",[107,2.358,108,2.541,109,1.194]],["text/coding/leetcode/50.html",[3,0.811,92,1.292,107,2.901,108,4.522,109,3.304,157,2.009,312,1.462,356,1.354,361,1.511,426,3.7,473,1.3,483,0.918,502,2.766,513,1.784,609,3.937,886,5.686,887,3.931,888,3.931,889,3.931,890,3.931,891,3.931,892,3.931,893,3.931,894,5.686,895,5.82,896,3.126,897,6.679,898,5.686,899,6.437]],["title/coding/leetcode/50.html#50-powx-n",[107,2.358,108,2.541,109,1.194]],["text/coding/leetcode/50.html#50-powx-n",[3,0.713]],["title/coding/leetcode/50.html#_1",[3,0.426]],["text/coding/leetcode/50.html#_1",[3,0.801,92,1.197,108,4.637,109,3.06,157,2.979,312,1.624,426,3.4,483,1.361,513,2.334,609,4.038,886,7.437,887,5.83,888,5.83,889,5.83,890,5.83,891,5.83,892,5.83,893,5.83,894,7.437,895,6.86]],["title/coding/leetcode/50.html#_2",[3,0.426]],["text/coding/leetcode/50.html#_2",[3,0.81,92,1.301,109,3.256,312,0.933,356,1.593,361,1.672,426,3.702,473,1.529,502,3.133,609,3.433,896,3.943,897,7.566,898,6.687,899,6.929]],["title/coding/leetcode/509.html",[3,0.321,237,3.313]],["text/coding/leetcode/509.html",[3,0.812,92,1.303,109,3.282,237,2.202,244,1.248,304,1.068,312,1.422,356,1.423,361,1.606,473,1.948,483,0.618,486,1.159,502,2.7,503,1.698,507,1.354,513,1.874,716,3.123,899,6.473,900,6.519,901,4.212,902,5.242,903,5.242,904,4.212,905,2.649,906,4.212,907,4.212,908,5.973,909,7.553,910,7.781,911,3.908,912,5.242]],["title/coding/leetcode/509.html#509",[3,0.321,237,3.313]],["text/coding/leetcode/509.html#509",[3,0.713]],["title/coding/leetcode/509.html#_1",[3,0.426]],["text/coding/leetcode/509.html#_1",[3,0.802,92,1.383,109,2.614,304,2.139,312,1.672,361,1.616,483,1.238,513,2.611,900,8.649,901,6.994,902,7.826,903,7.826,904,6.994,905,5.304,906,6.994,907,6.994]],["title/coding/leetcode/509.html#_2",[3,0.426]],["text/coding/leetcode/509.html#_2",[]],["title/coding/leetcode/509.html#_3",[3,0.426]],["text/coding/leetcode/509.html#_3",[3,0.812,92,1.196,109,3.342,244,1.741,312,1.023,356,1.536,361,1.563,473,2.021,486,1.617,503,2.192,507,1.888,899,7.029,908,7.107,909,8.4,910,8.573,911,3.429]],["title/coding/leetcode/509.html#_4",[3,0.426]],["text/coding/leetcode/509.html#_4",[3,0.804,92,0.905,109,3.147,356,1.476,361,1.279,473,1.926,502,3.758,716,5.016,911,5.747,912,8.421]],["title/coding/leetcode/66.html",[3,0.321,110,3.313]],["text/coding/leetcode/66.html",[3,0.813,92,1.245,96,1.889,110,3.228,212,5.798,312,0.731,356,1.343,361,1.595,473,1.948,483,0.906,484,2.545,485,2.421,486,2.467,487,2.545,488,2.545,489,2.314,490,2.218,499,3.513,502,3.444,503,2.273,544,2.545,847,3.089,913,3.884,914,3.395,915,3.884,916,3.884,917,3.884,918,3.884,919,3.884,920,5.636,921,8.315]],["title/coding/leetcode/66.html#66",[3,0.321,110,3.313]],["text/coding/leetcode/66.html#66",[3,0.713]],["title/coding/leetcode/66.html#_1",[3,0.426]],["text/coding/leetcode/66.html#_1",[3,0.799,92,1.001,312,1.29,361,1.414,483,1.599,847,5.448,913,6.851,914,5.988,915,6.851,916,6.851,917,6.851]],["title/coding/leetcode/66.html#_2",[3,0.426]],["text/coding/leetcode/66.html#_2",[3,0.812,92,1.254,96,2.104,212,6.157,356,1.45,361,1.578,473,2.004,484,2.835,485,2.697,486,2.664,487,2.835,488,2.835,489,2.577,490,2.471,499,3.795,502,3.555,503,2.455,544,2.835,918,4.326,919,4.326,920,6.088,921,8.584]],["title/coding/leetcode/7.html",[3,0.321,93,2.189]],["text/coding/leetcode/7.html",[3,0.81,92,1.201,93,2.51,99,3.264,157,3.707,312,0.86,356,1.089,361,1.697,426,3.316,473,1.447,483,1.067,502,3.404,513,1.434,568,3.799,609,5.024,709,3.636,895,6.226,896,3.636,914,5.53,922,6.326,923,5.031,924,8.884,925,4.571]],["title/coding/leetcode/7.html#7",[3,0.321,93,2.189]],["text/coding/leetcode/7.html#7",[3,0.713]],["title/coding/leetcode/7.html#_1",[3,0.426]],["text/coding/leetcode/7.html#_1",[3,0.798,92,1.255,99,4.622,312,1.218,361,1.336,483,1.511,513,2.031,568,5.38,609,5.499,895,7.122,914,6.94,922,7.94]],["title/coding/leetcode/7.html#_2",[3,0.426]],["text/coding/leetcode/7.html#_2",[3,0.808,92,1.039,157,4.048,356,1.295,361,1.734,426,3.621,473,1.626,502,3.611,609,3.766,709,4.324,896,4.324,923,5.654,924,9.242,925,5.438]],["title/coding/leetcode/70.html",[3,0.321,111,3.313]],["text/coding/leetcode/70.html",[3,0.812,92,1.345,109,3.415,111,3.125,244,2.593,312,1.67,356,1.551,361,0.776,473,1.93,483,0.877,486,1.645,503,2.22,507,1.921,513,2.043,899,6.961,926,7.166,927,3.76]],["title/coding/leetcode/70.html#70",[3,0.321,111,3.313]],["text/coding/leetcode/70.html#70",[3,0.713]],["title/coding/leetcode/70.html#_1",[3,0.426]],["text/coding/leetcode/70.html#_1",[3,0.807,92,1.403,109,2.779,312,1.782,483,1.361,513,2.57]],["title/coding/leetcode/70.html#_2",[3,0.426]],["text/coding/leetcode/70.html#_2",[3,0.81,92,1.154,109,3.489,244,3.025,312,1.209,356,1.748,361,0.964,473,2.042,486,2.044,503,2.589,507,2.387,899,7.292,926,7.901,927,4.671]],["title/coding/leetcode/779.html",[409,2.189,928,3.699]],["text/coding/leetcode/779.html",[3,0.81,92,1.373,109,3.383,157,2.118,298,1.65,304,1.672,312,1.412,356,1.407,361,1.701,409,5.021,473,1.715,483,0.968,837,3.624,928,3.847,929,5.163,930,4.146,931,4.146,932,4.146,933,4.146,934,5.907,935,6.881]],["title/coding/leetcode/779.html#779-k",[409,2.189,928,3.699]],["text/coding/leetcode/779.html#779-k",[3,0.713]],["title/coding/leetcode/779.html#_1",[3,0.426]],["text/coding/leetcode/779.html#_1",[3,0.806,92,1.369,109,3.374,157,2.677,298,2.085,304,2.113,312,1.464,361,1.778,409,5.035,483,1.223,837,4.579,929,6.064,930,5.239,931,5.239,932,5.239]],["title/coding/leetcode/779.html#_2",[3,0.426]],["text/coding/leetcode/779.html#_2",[3,0.805,92,1.335,109,3.234,312,1.107,356,1.782,361,1.214,409,4.517,473,1.979,933,5.883,934,7.481,935,8.225]],["title/coding/leetcode/8.html",[3,0.257,94,2.041,936,2.793]],["text/coding/leetcode/8.html",[3,0.814,92,1.014,94,1.929,96,2.774,157,1.544,298,1.203,304,1.218,312,0.569,356,1.359,361,1.674,473,1.067,483,0.705,496,5.518,501,4.76,502,3.167,513,1.465,604,2.427,609,3.233,660,4.08,895,6.282,896,2.402,923,5.104,936,4.08,937,5.294,938,5.956,939,6.939,940,4.668,941,4.668,942,3.021,943,2.641,944,4.668,945,3.021,946,3.021]],["title/coding/leetcode/8.html#8-atoi",[3,0.257,94,2.041,936,2.793]],["text/coding/leetcode/8.html#8-atoi",[3,0.713]],["title/coding/leetcode/8.html#_1",[3,0.426]],["text/coding/leetcode/8.html#_1",[3,0.811,92,1.221,298,1.907,304,1.933,312,0.902,361,1.349,483,1.118,513,2.05,609,4.525,895,7.145,896,3.811,936,4.188,937,4.446,938,6.063,939,8.358,940,6.534,941,6.534,942,4.792,943,4.188,944,6.534,945,4.792]],["title/coding/leetcode/8.html#_2",[3,0.426]],["text/coding/leetcode/8.html#_2",[3,0.813,96,3.346,157,2.118,356,1.639,361,1.75,473,1.351,496,6.304,501,5.064,502,3.511,604,3.071,660,5.163,923,5.964,937,5.481,938,5.481,946,4.146]],["title/coding/leetcode/88.html",[3,0.321,947,3.699]],["text/coding/leetcode/88.html",[3,0.811,92,1.06,109,2.881,361,1.365,400,5.051,426,3.887,473,1.944,483,0.901,491,2.407,503,1.557,510,2.529,513,1.761,537,3.07,538,5.315,539,3.375,544,2.529,563,2.205,806,7.174,808,6.894,816,3.375,817,3.375,947,3.582,948,3.861,949,3.861,950,3.861]],["title/coding/leetcode/88.html#88",[3,0.321,947,3.699]],["text/coding/leetcode/88.html#88",[3,0.713]],["title/coding/leetcode/88.html#_1",[3,0.426]],["text/coding/leetcode/88.html#_1",[3,0.803,109,3.133,400,5.494,483,1.432,513,2.41,806,7.341,808,7.196,948,6.135,949,6.135,950,6.135]],["title/coding/leetcode/88.html#_2",[3,0.426]],["text/coding/leetcode/88.html#_2",[3,0.809,92,1.151,109,2.387,361,1.509,400,4.186,426,4.075,473,2.038,491,2.891,503,1.87,510,3.038,537,3.688,538,5.508,539,4.053,544,3.038,563,2.649,806,6.791,808,6.264,816,4.053,817,4.053]],["title/coding/leetcode/9.html",[3,0.321,96,1.939]],["text/coding/leetcode/9.html",[3,0.811,92,0.724,96,2.41,157,4.138,312,0.933,356,1.593,357,3.801,361,1.562,426,3.983,473,1.134,483,1.157,513,1.556,523,2.953,528,2.533,579,6.731,610,3.943,856,5.844,923,3.943,929,4.333,951,8.099]],["title/coding/leetcode/9.html#9",[3,0.321,96,1.939]],["text/coding/leetcode/9.html#9",[3,0.713]],["title/coding/leetcode/9.html#_1",[3,0.426]],["text/coding/leetcode/9.html#_1",[3,0.805,92,0.946,157,3.308,312,1.218,357,3.989,483,1.511,513,2.031,528,3.308,579,7.443,929,5.658]],["title/coding/leetcode/9.html#_2",[3,0.426]],["text/coding/leetcode/9.html#_2",[3,0.804,157,4.239,356,1.803,357,3.011,361,1.712,426,4.195,473,1.37,523,3.57,610,4.766,856,6.615,923,4.766,951,8.714]],["title/coding/leetcode/98.html",[3,0.321,952,3.699]],["text/coding/leetcode/98.html",[3,0.811,92,0.859,244,3.101,252,4.015,298,1.928,304,1.953,312,0.912,356,1.781,357,2.433,441,5.918,459,3.852,473,1.107,483,0.74,486,1.387,501,4.106,502,2.726,503,1.278,508,2.195,513,1.52,515,1.888,516,2.52,517,2.52,518,2.263,519,5.639,520,4.117,521,3.354,522,3.26,523,1.888,528,3.363,558,3.573,581,2.076,714,5.589,715,4.849,716,3.921,952,2.941,953,3.169,954,6.582,955,3.169]],["title/coding/leetcode/98.html#98",[3,0.321,952,3.699]],["text/coding/leetcode/98.html#98",[3,0.713]],["title/coding/leetcode/98.html#_1",[3,0.426]],["text/coding/leetcode/98.html#_1",[3,0.804,92,1.249,298,3.141,304,3.183,312,1.485,357,3.22,483,1.496,513,2.476,528,3.275,581,4.199,953,6.409]],["title/coding/leetcode/98.html#_2",[3,0.426]],["text/coding/leetcode/98.html#_2",[3,0.81,244,3.299,252,4.123,356,1.866,357,1.8,441,6.143,459,4.224,473,1.214,486,1.568,501,4.301,502,2.899,503,1.445,508,2.481,515,2.134,516,2.849,517,2.849,518,2.558,519,5.946,520,4.29,521,3.678,522,3.575,523,2.134,528,3.235,558,3.919,714,5.751,715,5.053,716,4.171,954,7.001,955,3.582]],["title/coding/python/killable-thread.html",[3,0.426]],["text/coding/python/killable-thread.html",[3,0.809,35,3.271,56,4.362,60,1.819,68,4.794,82,1.901,89,1.749,92,0.694,310,2.976,312,0.431,356,1.633,361,0.772,378,5.675,415,1.749,457,3.271,468,4.794,495,1.584,528,1.169,956,6.048,957,4.748,958,8.863,959,6.853,960,3.742,961,7.4,962,5.485,963,9.286,964,5.485,965,3.742,966,2.288,967,1.749,968,5.485,969,2.288,970,3.742,971,5.485,972,3.742,973,2.861,974,3.742,975,6.493,976,5.485,977,5.485,978,3.742,979,3.742,980,6.853,981,4.748,982,3.742,983,5.485,984,2.288,985,2.288,986,2.288,987,2.288,988,2.288,989,2.288,990,4.748,991,3.742,992,3.742,993,5.485,994,3.742,995,3.271,996,3.742,997,2.288,998,3.742,999,2.288,1000,3.742,1001,2.288,1002,4.748,1003,4.748,1004,2.288,1005,2.288,1006,2.976,1007,2.288,1008,2.288,1009,2.288]],["title/coding/python/killable-thread.html#python",[89,4.052]],["text/coding/python/killable-thread.html#python",[3,0.809,35,3.28,56,4.371,60,1.826,68,4.804,82,1.908,92,0.695,310,2.984,312,0.432,356,1.635,361,0.775,378,5.685,415,1.756,457,3.28,468,4.804,495,1.59,528,1.173,956,6.06,957,4.759,958,8.868,959,6.863,960,3.753,961,7.409,962,5.497,963,9.29,964,5.497,965,3.753,966,2.296,967,1.756,968,5.497,969,2.296,970,3.753,971,5.497,972,3.753,973,2.869,974,3.753,975,6.504,976,5.497,977,5.497,978,3.753,979,3.753,980,6.863,981,4.759,982,3.753,983,5.497,984,2.296,985,2.296,986,2.296,987,2.296,988,2.296,989,2.296,990,4.759,991,3.753,992,3.753,993,5.497,994,3.753,995,3.28,996,3.753,997,2.296,998,3.753,999,2.296,1000,3.753,1001,2.296,1002,4.759,1003,4.759,1004,2.296,1005,2.296,1006,2.984,1007,2.296,1008,2.296,1009,2.296]],["title/latex/index.html",[3,0.426]],["text/latex/index.html",[3,0.613,1010,6.461]],["title/latex/index.html#latex",[1010,3.566]],["text/latex/index.html#latex",[1010,6.381]],["title/latex/cheatsheet.html",[3,0.426]],["text/latex/cheatsheet.html",[3,0.776,67,3.086,109,1.508,190,3.354,227,3.527,230,4.137,310,3.209,335,3.066,393,3.527,400,2.644,406,2.353,409,2.216,426,1.845,509,2.977,510,2.644,601,2.881,605,2.977,778,3.527,836,3.527,995,3.527,1006,3.209,1010,2.716,1011,4.758,1012,4.758,1013,4.036,1014,4.036,1015,4.036,1016,4.036,1017,4.036,1018,4.036,1019,1.823,1020,1.823,1021,1.823,1022,1.823,1023,1.823,1024,1.823,1025,1.823,1026,1.823,1027,1.823,1028,3.096,1029,1.823,1030,3.527,1031,4.036,1032,5.794,1033,4.036,1034,5.064,1035,4.036,1036,3.096,1037,1.823,1038,4.036,1039,4.036,1040,4.036,1041,5.794,1042,4.036,1043,4.036,1044,4.036,1045,4.036,1046,4.43,1047,4.036,1048,3.527,1049,4.036,1050,5.794,1051,4.036,1052,5.794,1053,5.794,1054,4.758,1055,1.823,1056,3.354,1057,4.036,1058,5.794,1059,4.758,1060,1.823,1061,4.036,1062,5.794,1063,4.036,1064,5.794,1065,4.758,1066,1.823,1067,4.036,1068,5.794,1069,4.036,1070,5.794,1071,4.036,1072,4.036,1073,4.036,1074,4.036,1075,4.036,1076,4.758,1077,4.758,1078,3.096,1079,3.096,1080,4.758,1081,4.758,1082,3.096,1083,3.096,1084,3.096,1085,3.096,1086,3.096,1087,4.036,1088,4.036,1089,3.527,1090,4.036,1091,4.036,1092,4.036,1093,4.036,1094,4.036,1095,4.036,1096,4.036,1097,4.036,1098,4.036,1099,2.795,1100,2.881,1101,2.881,1102,4.036,1103,2.706,1104,3.096,1105,1.823,1106,3.096,1107,1.823,1108,3.096,1109,1.823,1110,4.036,1111,4.036,1112,7.408,1113,4.036,1114,4.036,1115,4.036,1116,4.036,1117,4.036,1118,4.036,1119,4.036,1120,4.036,1121,4.036,1122,4.036,1123,4.036,1124,4.036,1125,4.036,1126,4.036,1127,4.036,1128,4.036,1129,4.036,1130,4.036,1131,4.036,1132,4.036,1133,4.036,1134,4.036,1135,4.036,1136,4.036,1137,4.036,1138,4.036,1139,4.036,1140,4.036,1141,4.036,1142,4.036]],["title/latex/cheatsheet.html#latex",[3,0.321,1010,2.683]],["text/latex/cheatsheet.html#latex",[3,0.708,1010,5.927]],["title/latex/cheatsheet.html#_1",[3,0.426]],["text/latex/cheatsheet.html#_1",[3,0.798,1011,8.583,1012,8.583,1013,8.138,1014,8.138,1015,8.138,1016,8.138,1017,8.138,1018,8.138,1019,5.752,1020,5.752,1021,5.752,1022,5.752,1023,5.752,1024,5.752,1025,5.752,1026,5.752,1027,5.752,1028,7.374,1029,5.752]],["title/latex/cheatsheet.html#_2",[3,0.426]],["text/latex/cheatsheet.html#_2",[3,0.633,67,4.88,109,2.385,335,3.378,400,4.181,406,3.721,409,3.505,426,2.917,601,4.557,605,4.709,1006,5.076,1030,5.578,1031,6.382,1032,7.872,1033,6.382,1034,6.88,1035,6.382,1036,5.367,1037,3.633,1038,6.382,1039,6.382,1040,6.382,1041,7.872,1042,6.382,1043,6.382,1044,6.382,1045,6.382,1046,6.019,1047,6.382,1048,5.578,1049,6.382,1050,7.872,1051,6.382,1052,7.872,1053,7.872,1054,7.049,1055,3.633,1056,5.304,1057,6.382,1058,7.872,1059,7.049,1060,3.633,1061,6.382,1062,7.872,1063,6.382,1064,7.872,1065,7.049,1066,3.633,1067,6.382,1068,7.872,1069,6.382,1070,7.872,1071,6.382]],["title/latex/cheatsheet.html#_3",[3,0.426]],["text/latex/cheatsheet.html#_3",[3,0.631]],["title/latex/cheatsheet.html#_4",[3,0.426]],["text/latex/cheatsheet.html#_4",[3,0.678,310,7.131,393,7.838,1072,8.967,1073,8.967,1074,8.967]],["title/latex/cheatsheet.html#_5",[3,0.426]],["text/latex/cheatsheet.html#_5",[3,0.629,1075,8.495,1076,8.878,1077,8.878,1078,7.82,1079,7.82,1080,8.878,1081,8.878,1082,7.82,1083,7.82,1084,7.82,1085,7.82,1086,7.82,1087,8.495,1088,8.495]],["title/latex/cheatsheet.html#_6",[3,0.426]],["text/latex/cheatsheet.html#_6",[3,0.635,778,7.475,836,7.475,1089,7.475,1090,8.552,1091,8.552,1092,8.552,1093,8.552,1094,8.552,1095,8.552,1096,8.552,1097,8.552,1098,8.552]],["title/latex/cheatsheet.html#_7",[3,0.426]],["text/latex/cheatsheet.html#_7",[3,0.678,227,7.838,1099,6.21,1100,6.402,1101,6.402,1102,8.967]],["title/latex/cheatsheet.html#_8",[3,0.426]],["text/latex/cheatsheet.html#_8",[3,0.503,190,5.973,230,6.037,335,3.804,509,5.303,510,4.709,995,6.282,1103,5.463,1104,6.25,1105,4.492,1106,6.25,1107,4.492,1108,6.25,1109,4.492,1110,7.187,1111,7.187,1112,9.274,1113,7.187,1114,7.187,1115,7.187,1116,7.187,1117,7.187,1118,7.187,1119,7.187,1120,7.187,1121,7.187,1122,7.187,1123,7.187,1124,7.187,1125,7.187,1126,7.187,1127,7.187,1128,7.187,1129,7.187,1130,7.187,1131,7.187,1132,7.187,1133,7.187,1134,7.187,1135,7.187,1136,7.187]],["title/latex/cheatsheet.html#_9",[3,0.426]],["text/latex/cheatsheet.html#_9",[3,0.788,1137,8.725,1138,8.725,1139,8.725,1140,8.725,1141,8.725,1142,8.725]],["title/latex/environ.html",[3,0.426]],["text/latex/environ.html",[3,0.804,92,0.716,179,2.799,312,0.922,335,2.594,513,1.538,967,5.752,973,7.613,1010,4.466,1143,8.001,1144,4.901,1145,6.251,1146,4.901,1147,4.901]],["title/latex/environ.html#latex",[1010,3.566]],["text/latex/environ.html#latex",[]],["title/latex/environ.html#_1",[3,0.426]],["text/latex/environ.html#_1",[3,0.767,973,6.599,1010,5.009,1143,6.506,1144,7.443]],["title/latex/environ.html#enumerate",[1143,4.632]],["text/latex/environ.html#enumerate",[3,0.794,92,0.868,179,3.391,312,1.118,335,3.142,513,1.863,967,5.753,973,7.545,1143,8.128,1145,6.253,1146,5.938,1147,5.938]],["title/latex/environ.html#itemize",[973,4.052]],["text/latex/environ.html#itemize",[3,0.786,967,5.211,973,7.577,1145,5.664]],["title/latex/slides.html",[3,0.426]],["text/latex/slides.html",[3,0.807,278,5.388,967,4.713,1010,4.149,1145,5.123,1148,7.704,1149,7.704,1150,8.403,1151,6.164,1152,6.164,1153,6.164,1154,6.164,1155,6.164,1156,6.164,1157,6.164]],["title/latex/slides.html#latex",[1010,3.566]],["text/latex/slides.html#latex",[3,0.806,278,5.44,967,4.759,1145,5.172,1148,7.75,1149,7.75,1150,8.44,1151,6.224,1152,6.224,1153,6.224,1154,6.224,1155,6.224,1156,6.224,1157,6.224]],["title/math/index.html",[3,0.426]],["text/math/index.html",[3,0.796]],["title/math/index.html#_1",[3,0.426]],["text/math/index.html#_1",[3,0.79]],["title/math/discrete-mathematics/index.html",[3,0.426]],["text/math/discrete-mathematics/index.html",[3,0.786]],["title/math/discrete-mathematics/index.html#_1",[3,0.426]],["text/math/discrete-mathematics/index.html#_1",[3,0.773]],["title/math/discrete-mathematics/chapter-1.html",[3,0.426]],["text/math/discrete-mathematics/chapter-1.html",[3,0.8,92,1.38,177,4.118,179,2.691,335,4.908,361,1.937,396,3.363,601,6.126,1099,6.287,1100,5.262,1101,5.661,1103,4.118,1158,3.057,1159,5.438,1160,6.125,1161,7.437,1162,3.915,1163,3.915,1164,3.915,1165,4.118,1166,4.711,1167,5.993,1168,4.711,1169,7.358,1170,4.711,1171,4.711,1172,4.711,1173,4.118]],["title/math/discrete-mathematics/chapter-1.html#_1",[3,0.426]],["text/math/discrete-mathematics/chapter-1.html#_1",[3,0.772,1158,7.619]],["title/math/discrete-mathematics/chapter-1.html#_2",[3,0.426]],["text/math/discrete-mathematics/chapter-1.html#_2",[3,0.77,92,1.417,335,4.799,361,1.993,601,6.474,1099,6.386,1100,4.086,1101,5.248,1159,4.223,1160,4.757,1161,7.763,1162,4.757,1163,4.757,1164,4.757,1165,5.003,1166,5.724,1167,5.311,1168,5.724,1169,7.534,1170,5.724,1171,5.724]],["title/math/discrete-mathematics/chapter-1.html#_3",[3,0.426]],["text/math/discrete-mathematics/chapter-1.html#_3",[3,0.803,335,5.013,1099,5.876,1100,6.058,1101,6.058,1159,6.26,1160,7.051,1167,6.708,1169,6.708,1172,7.229,1173,6.319]],["title/math/discrete-mathematics/chapter-1.html#_4",[3,0.426]],["text/math/discrete-mathematics/chapter-1.html#_4",[3,0.779,177,7.419,179,4.848,396,6.06,1103,7.419]],["title/math/discrete-mathematics/chapter-2.html",[3,0.426]],["text/math/discrete-mathematics/chapter-2.html",[3,0.799,109,1.337,179,1.237,230,5.471,312,0.228,335,3.703,406,4.649,601,6.689,1099,6.606,1100,4.778,1101,4.996,1159,4.334,1160,2.973,1161,7.64,1162,7.269,1163,7.217,1164,6.734,1165,5.529,1173,3.127,1174,4.22,1175,5.529,1176,4.492,1177,2.166,1178,2.166,1179,5.874,1180,2.166,1181,2.166,1182,2.166,1183,3.32,1184,3.578,1185,8.502,1186,4.571,1187,3.578,1188,4.571,1189,2.166,1190,3.578,1191,6.325,1192,3.578,1193,1.894,1194,2.166,1195,2.166,1196,2.166,1197,2.166,1198,2.166,1199,5.257,1200,2.166,1201,2.166,1202,2.166,1203,5.608,1204,5.608,1205,2.736,1206,3.578,1207,2.736,1208,3.578]],["title/math/discrete-mathematics/chapter-2.html#_1",[3,0.426]],["text/math/discrete-mathematics/chapter-2.html#_1",[3,0.789,335,5.031,1173,7.478,1174,6.804,1175,7.478,1176,5.606,1177,7.332,1178,7.332,1179,9.507,1180,7.332,1181,7.332,1182,7.332,1183,6.803]],["title/math/discrete-mathematics/chapter-2.html#_2",[3,0.426]],["text/math/discrete-mathematics/chapter-2.html#_2",[3,0.793,179,1.92,230,5.668,312,0.378,335,1.779,406,4.874,601,6.875,1099,6.503,1100,2.4,1101,3.617,1159,4.497,1160,4.21,1161,7.562,1162,7.613,1163,7.441,1164,7.369,1165,6.686,1183,3.12,1184,5.065,1185,9.216,1186,6.095,1187,5.065,1188,6.095,1189,3.362,1190,5.065,1191,7.649,1192,5.065,1193,2.939,1194,3.362,1195,3.362,1196,3.362]],["title/math/discrete-mathematics/chapter-2.html#_3",[3,0.426]],["text/math/discrete-mathematics/chapter-2.html#_3",[3,0.738,230,6.224,406,5.083]],["title/math/discrete-mathematics/chapter-2.html#tt",[1209,5.879]],["text/math/discrete-mathematics/chapter-2.html#tt",[3,0.773,109,2.94,230,5.617,406,4.588,1099,5.449,1100,5.617,1174,6.257,1175,7.787,1176,6.812,1197,7.868,1198,7.868,1199,7.746]],["title/math/discrete-mathematics/chapter-2.html#ff",[1210,5.879]],["text/math/discrete-mathematics/chapter-2.html#ff",[3,0.773,109,2.94,230,5.617,406,4.588,1099,5.449,1101,5.617,1174,6.257,1175,7.787,1176,6.812,1199,7.746,1200,7.868,1201,7.868]],["title/math/discrete-mathematics/chapter-2.html#_4",[3,0.426]],["text/math/discrete-mathematics/chapter-2.html#_4",[3,0.8,335,3.422,601,6.392,1099,6.791,1100,5.935,1101,5.935,1159,4.771,1161,7.949,1162,6.766,1163,7.226,1164,3.922,1202,4.72,1203,8.141,1204,8.141,1205,4.945,1206,6.467,1207,4.945,1208,6.467]],["title/math/queue-theory/index.html",[3,0.426]],["text/math/queue-theory/index.html",[3,0.73,92,0.985,93,3.703,94,4.307,96,3.279,157,3.446,298,2.684,304,2.72,312,1.269,479,4.975,513,2.116,581,4.418,722,4.815,1211,9.13]],["title/math/queue-theory/index.html#_1",[3,0.426]],["text/math/queue-theory/index.html#_1",[3,0.659,92,0.996,93,3.742,94,4.352,96,3.314,157,3.482,298,2.713,304,2.748,312,1.283,479,5.028,513,2.138,581,4.465,722,4.865,1211,9.142]],["title/math/queue-theory/chapter-12.html",[722,2.846,1211,3.699]],["text/math/queue-theory/chapter-12.html",[3,0.804,92,1.01,109,2.719,179,1.598,239,3.823,312,0.305,335,1.48,361,1.427,396,1.156,400,1.061,406,4.773,408,1.415,409,2.578,426,1.279,505,2.302,521,1.121,522,3.341,538,0.964,605,1.195,613,2.225,653,1.415,732,1.415,943,1.415,1006,1.288,1030,1.415,1034,5.09,1046,4.708,1048,1.415,1056,3.069,1089,1.415,1159,1.195,1174,1.288,1176,2.139,1193,3.228,1199,2.325,1205,5.565,1207,5.565,1212,2.797,1213,1.619,1214,1.619,1215,1.619,1216,3.069,1217,1.619,1218,1.619,1219,2.797,1220,2.861,1221,1.619,1222,1.619,1223,1.619,1224,1.619,1225,0.879,1226,0.879,1227,0.879,1228,0.879,1229,1.619,1230,1.619,1231,5.09,1232,1.619,1233,1.619,1234,1.619,1235,1.619,1236,1.619,1237,1.619,1238,1.619,1239,1.619,1240,4.143,1241,2.797,1242,1.619,1243,1.619,1244,3.553,1245,1.619,1246,1.619,1247,1.619,1248,2.797,1249,1.619,1250,1.619,1251,1.619,1252,3.693,1253,1.619,1254,2.797,1255,1.619,1256,1.619,1257,2.797,1258,1.619,1259,1.619,1260,1.619,1261,2.797,1262,1.619,1263,1.619,1264,1.619,1265,1.619,1266,1.619,1267,1.619,1268,2.797,1269,1.619,1270,1.619,1271,1.619,1272,1.619,1273,1.619,1274,1.619,1275,1.619,1276,1.619,1277,1.619,1278,1.619,1279,3.693,1280,3.693,1281,2.797,1282,2.797,1283,2.797,1284,1.619,1285,1.619,1286,1.619,1287,3.693,1288,1.619,1289,1.619,1290,1.619,1291,2.797,1292,1.619,1293,1.619,1294,1.619,1295,1.619,1296,4.339,1297,1.619,1298,1.619,1299,1.619,1300,1.619,1301,1.619,1302,1.619,1303,1.619,1304,1.619,1305,1.619,1306,1.619,1307,1.619,1308,1.619,1309,2.797,1310,1.619,1311,2.596,1312,1.619,1313,3.038,1314,1.619,1315,1.619,1316,1.619,1317,1.619,1318,1.619,1319,1.619,1320,1.619,1321,2.797,1322,2.797,1323,2.797,1324,1.619,1325,1.619,1326,1.619,1327,2.797,1328,1.619,1329,1.619,1330,1.619,1331,1.619,1332,3.693,1333,1.619,1334,3.693,1335,1.619,1336,2.797,1337,1.619,1338,8.333,1339,6.912,1340,1.619,1341,1.619,1342,1.619,1343,1.619,1344,1.619,1345,3.693,1346,1.619,1347,1.619,1348,2.797,1349,1.619,1350,2.797,1351,1.619,1352,3.693,1353,2.797,1354,1.619,1355,4.397,1356,2.797,1357,1.619,1358,1.619,1359,1.619,1360,1.619,1361,1.619,1362,1.619,1363,1.619,1364,1.619,1365,1.619,1366,1.619,1367,1.619,1368,1.619,1369,1.619,1370,1.619,1371,1.619,1372,1.619,1373,1.619,1374,3.693,1375,4.397,1376,1.619,1377,2.797,1378,1.619,1379,1.619,1380,2.797,1381,1.619,1382,1.619,1383,1.619,1384,1.619,1385,1.619,1386,1.619,1387,1.619,1388,1.619,1389,1.619,1390,1.619,1391,1.619,1392,1.619,1393,1.619,1394,1.619,1395,1.619,1396,1.619,1397,1.619,1398,2.797,1399,1.619,1400,1.619,1401,1.619,1402,2.797,1403,2.797,1404,1.619,1405,2.797,1406,1.619,1407,1.619,1408,1.619,1409,1.619]],["title/math/queue-theory/chapter-12.html#_1",[3,0.426]],["text/math/queue-theory/chapter-12.html#_1",[3,0.762]],["title/math/queue-theory/chapter-12.html#_2",[3,0.426]],["text/math/queue-theory/chapter-12.html#_2",[]],["title/math/queue-theory/chapter-12.html#_3",[3,0.426]],["text/math/queue-theory/chapter-12.html#_3",[3,0.803,92,1.201,361,1.915,406,5.209,409,4.515,522,5.534,1006,4.676,1030,5.139,1046,6.616,1205,6.287,1207,6.287,1212,7.478,1213,5.88,1214,5.88,1215,5.88,1216,4.887,1217,5.88,1218,5.88,1219,7.478,1220,5.993,1221,5.88,1222,5.88,1223,5.88,1224,5.88]],["title/math/queue-theory/chapter-12.html#_4",[3,0.426]],["text/math/queue-theory/chapter-12.html#_4",[3,0.795,409,3.951,1220,6.288,1225,7.194,1226,7.194,1227,7.194]],["title/math/queue-theory/chapter-12.html#_5",[3,0.426]],["text/math/queue-theory/chapter-12.html#_5",[3,0.791,179,4.903,335,4.543,361,1.522,396,5.265,400,4.831,408,6.445,409,4.049,426,3.924,538,4.392,605,5.44,1216,4.781,1220,5.028,1228,5.752,1229,7.374,1230,7.374,1231,8.173,1232,7.374]],["title/math/queue-theory/chapter-12.html#_6",[3,0.426]],["text/math/queue-theory/chapter-12.html#_6",[3,0.796,109,3.165,239,4.118,613,5.733,943,6.301,1046,5.512,1048,6.301,1056,5.991,1176,5.512,1205,5.512,1207,5.512,1233,7.209,1234,7.209,1235,7.209,1236,7.209,1237,7.209,1238,7.209,1239,7.209,1240,5.733,1241,8.471,1242,7.209,1243,7.209]],["title/math/queue-theory/chapter-12.html#_7",[3,0.426]],["text/math/queue-theory/chapter-12.html#_7",[3,0.769,1216,7.196,1244,7.569]],["title/math/queue-theory/chapter-12.html#markov",[3,0.321,1244,3.485]],["text/math/queue-theory/chapter-12.html#markov",[3,0.782,1240,6.685,1244,8.08,1245,8.406,1246,8.406]],["title/math/queue-theory/chapter-12.html#_8",[3,0.426]],["text/math/queue-theory/chapter-12.html#_8",[3,0.742,1240,6.98]],["title/math/queue-theory/chapter-12.html#poisson",[3,0.321,1216,3.313]],["text/math/queue-theory/chapter-12.html#poisson",[3,0.631]],["title/math/queue-theory/chapter-12.html#_9",[3,0.426]],["text/math/queue-theory/chapter-12.html#_9",[3,0.797,92,1.243,109,3.007,361,1.366,406,5.425,505,4.124,653,3.378,1034,7.257,1046,2.955,1159,2.852,1174,3.074,1176,2.955,1193,5.782,1205,5.058,1207,5.058,1231,3.378,1247,3.865,1248,5.616,1249,3.865,1250,3.865,1251,3.865,1252,6.615,1253,3.865,1254,5.616,1255,3.865,1256,3.865,1257,5.616,1258,3.865,1259,3.865,1260,3.865,1261,5.616,1262,3.865,1263,3.865,1264,3.865,1265,3.865,1266,3.865,1267,3.865,1268,5.616,1269,3.865,1270,3.865,1271,3.865,1272,3.865,1273,3.865,1274,3.865,1275,3.865,1276,3.865,1277,3.865,1278,3.865,1279,6.615,1280,6.615,1281,5.616,1282,5.616,1283,5.616,1284,3.865,1285,3.865,1286,3.865,1287,6.615,1288,3.865,1289,3.865,1290,3.865,1291,5.616,1292,3.865,1293,3.865,1294,3.865,1295,3.865,1296,4.909,1297,3.865,1298,3.865,1299,3.865,1300,3.865,1301,3.865,1302,3.865,1303,3.865,1304,3.865,1305,3.865,1306,3.865,1307,3.865,1308,3.865,1309,5.616,1310,3.865,1311,3.586,1312,3.865]],["title/math/queue-theory/chapter-12.html#mm1",[1313,4.917]],["text/math/queue-theory/chapter-12.html#mm1",[3,0.776,1056,7.455,1296,6.962,1311,7.391,1313,8.324,1314,7.965,1315,7.965,1316,7.965,1317,7.965,1318,7.965,1319,7.965,1320,7.965]],["title/math/queue-theory/chapter-12.html#mms",[1240,4.214]],["text/math/queue-theory/chapter-12.html#mms",[3,0.8,109,2.642,239,4.687,312,0.593,521,2.181,522,3.244,613,2.504,732,2.752,1046,3.685,1089,2.752,1199,4.005,1205,5.702,1207,5.702,1231,4.213,1240,3.833,1296,4.213,1321,4.82,1322,4.82,1323,4.82,1324,3.149,1325,3.149,1326,3.149,1327,4.82,1328,3.149,1329,3.149,1330,3.149,1331,3.149,1332,5.855,1333,3.149,1334,5.855,1335,3.149,1336,4.82,1337,3.149,1338,9.349,1339,8.517,1340,3.149,1341,3.149,1342,3.149,1343,3.149,1344,3.149,1345,5.855,1346,3.149,1347,3.149,1348,4.82,1349,3.149,1350,4.82,1351,3.149,1352,5.855,1353,4.82,1354,3.149,1355,6.56,1356,4.82,1357,3.149,1358,3.149,1359,3.149,1360,3.149,1361,3.149,1362,3.149,1363,3.149,1364,3.149,1365,3.149,1366,3.149,1367,3.149,1368,3.149,1369,3.149,1370,3.149,1371,3.149,1372,3.149,1373,3.149,1374,5.855,1375,6.56,1376,3.149,1377,4.82,1378,3.149,1379,3.149,1380,4.82,1381,3.149,1382,3.149,1383,3.149,1384,3.149,1385,3.149,1386,3.149,1387,3.149,1388,3.149,1389,3.149,1390,3.149,1391,3.149,1392,3.149,1393,3.149,1394,3.149,1395,3.149,1396,3.149,1397,3.149,1398,4.82,1399,3.149,1400,3.149,1401,3.149,1402,4.82,1403,4.82,1404,3.149,1405,4.82,1406,3.149,1407,3.149,1408,3.149,1409,3.149]]],"fields":["title","text"],"invertedIndex":[["",{"_index":3,"text":{"about.html":{},"coding/configuration.html":{},"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{},"coding/configuration/nginx-rtmp.html#_2":{},"coding/configuration/nginx-rtmp.html#msvc":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/dsa.html":{},"coding/dsa.html#_1":{},"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_1":{},"coding/dsa/vector-and-list.html#_2":{},"coding/dsa/vector-and-list.html#_3":{},"coding/index.html":{},"coding/index.html#_1":{},"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/1.html":{},"coding/leetcode/1.html#1":{},"coding/leetcode/1.html#_1":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/101.html":{},"coding/leetcode/101.html#101":{},"coding/leetcode/101.html#_1":{},"coding/leetcode/101.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#102":{},"coding/leetcode/102.html#_1":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#118":{},"coding/leetcode/118.html#_1":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/119.html":{},"coding/leetcode/119.html#119-ii":{},"coding/leetcode/119.html#_1":{},"coding/leetcode/119.html#_2":{},"coding/leetcode/120.html":{},"coding/leetcode/120.html#120":{},"coding/leetcode/120.html#_1":{},"coding/leetcode/120.html#_2":{},"coding/leetcode/121.html":{},"coding/leetcode/121.html#121":{},"coding/leetcode/121.html#_1":{},"coding/leetcode/121.html#_2":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#122-ii":{},"coding/leetcode/122.html#_1":{},"coding/leetcode/122.html#_2":{},"coding/leetcode/125.html":{},"coding/leetcode/125.html#125":{},"coding/leetcode/125.html#_1":{},"coding/leetcode/125.html#_2":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#13":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/13.html#_2":{},"coding/leetcode/136.html":{},"coding/leetcode/136.html#136":{},"coding/leetcode/136.html#_1":{},"coding/leetcode/136.html#_2":{},"coding/leetcode/14.html":{},"coding/leetcode/14.html#14":{},"coding/leetcode/14.html#_1":{},"coding/leetcode/14.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#155":{},"coding/leetcode/155.html#_1":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/189.html":{},"coding/leetcode/189.html#189":{},"coding/leetcode/189.html#_1":{},"coding/leetcode/189.html#_2":{},"coding/leetcode/19.html":{},"coding/leetcode/19.html#19-n":{},"coding/leetcode/19.html#_1":{},"coding/leetcode/19.html#_2":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#198":{},"coding/leetcode/198.html#_1":{},"coding/leetcode/198.html#_2":{},"coding/leetcode/204.html":{},"coding/leetcode/204.html#204":{},"coding/leetcode/204.html#_1":{},"coding/leetcode/204.html#_2":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#206":{},"coding/leetcode/206.html#_1":{},"coding/leetcode/206.html#_2":{},"coding/leetcode/21.html":{},"coding/leetcode/21.html#21":{},"coding/leetcode/21.html#_1":{},"coding/leetcode/21.html#_2":{},"coding/leetcode/217.html":{},"coding/leetcode/217.html#217":{},"coding/leetcode/217.html#_1":{},"coding/leetcode/217.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#234":{},"coding/leetcode/234.html#_1":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/237.html":{},"coding/leetcode/237.html#237":{},"coding/leetcode/237.html#_1":{},"coding/leetcode/237.html#_2":{},"coding/leetcode/24.html":{},"coding/leetcode/24.html#24":{},"coding/leetcode/24.html#_1":{},"coding/leetcode/24.html#_2":{},"coding/leetcode/242.html":{},"coding/leetcode/242.html#242":{},"coding/leetcode/242.html#_1":{},"coding/leetcode/242.html#_2":{},"coding/leetcode/26.html":{},"coding/leetcode/26.html#26":{},"coding/leetcode/26.html#_1":{},"coding/leetcode/26.html#_2":{},"coding/leetcode/28.html":{},"coding/leetcode/28.html#28-strstr":{},"coding/leetcode/28.html#_1":{},"coding/leetcode/28.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#315":{},"coding/leetcode/315.html#_1":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/344.html":{},"coding/leetcode/344.html#344":{},"coding/leetcode/344.html#_1":{},"coding/leetcode/344.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#350-ii":{},"coding/leetcode/350.html#_1":{},"coding/leetcode/350.html#_2":{},"coding/leetcode/36.html":{},"coding/leetcode/36.html#36":{},"coding/leetcode/36.html#_1":{},"coding/leetcode/36.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#38":{},"coding/leetcode/38.html#_1":{},"coding/leetcode/38.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#384":{},"coding/leetcode/384.html#_1":{},"coding/leetcode/384.html#_2":{},"coding/leetcode/387.html":{},"coding/leetcode/387.html#387":{},"coding/leetcode/387.html#_1":{},"coding/leetcode/387.html#_2":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#48":{},"coding/leetcode/48.html#_1":{},"coding/leetcode/48.html#_2":{},"coding/leetcode/50.html":{},"coding/leetcode/50.html#50-powx-n":{},"coding/leetcode/50.html#_1":{},"coding/leetcode/50.html#_2":{},"coding/leetcode/509.html":{},"coding/leetcode/509.html#509":{},"coding/leetcode/509.html#_1":{},"coding/leetcode/509.html#_3":{},"coding/leetcode/509.html#_4":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#66":{},"coding/leetcode/66.html#_1":{},"coding/leetcode/66.html#_2":{},"coding/leetcode/7.html":{},"coding/leetcode/7.html#7":{},"coding/leetcode/7.html#_1":{},"coding/leetcode/7.html#_2":{},"coding/leetcode/70.html":{},"coding/leetcode/70.html#70":{},"coding/leetcode/70.html#_1":{},"coding/leetcode/70.html#_2":{},"coding/leetcode/779.html":{},"coding/leetcode/779.html#779-k":{},"coding/leetcode/779.html#_1":{},"coding/leetcode/779.html#_2":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#8-atoi":{},"coding/leetcode/8.html#_1":{},"coding/leetcode/8.html#_2":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#88":{},"coding/leetcode/88.html#_1":{},"coding/leetcode/88.html#_2":{},"coding/leetcode/9.html":{},"coding/leetcode/9.html#9":{},"coding/leetcode/9.html#_1":{},"coding/leetcode/9.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#98":{},"coding/leetcode/98.html#_1":{},"coding/leetcode/98.html#_2":{},"coding/python.html":{},"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{},"covid.html":{},"covid.html#covid-2019-trend":{},"index.html":{},"index.html#customization":{},"index.html#project-layout":{},"index.html#welcome-to-mkdocs":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_1":{},"latex/cheatsheet.html#_2":{},"latex/cheatsheet.html#_3":{},"latex/cheatsheet.html#_4":{},"latex/cheatsheet.html#_5":{},"latex/cheatsheet.html#_6":{},"latex/cheatsheet.html#_7":{},"latex/cheatsheet.html#_8":{},"latex/cheatsheet.html#_9":{},"latex/cheatsheet.html#latex":{},"latex/environ.html":{},"latex/environ.html#_1":{},"latex/environ.html#enumerate":{},"latex/environ.html#itemize":{},"latex/index.html":{},"latex/slides.html":{},"latex/slides.html#latex":{},"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_1":{},"math/discrete-mathematics/chapter-1.html#_2":{},"math/discrete-mathematics/chapter-1.html#_3":{},"math/discrete-mathematics/chapter-1.html#_4":{},"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_1":{},"math/discrete-mathematics/chapter-2.html#_2":{},"math/discrete-mathematics/chapter-2.html#_3":{},"math/discrete-mathematics/chapter-2.html#_4":{},"math/discrete-mathematics/chapter-2.html#ff":{},"math/discrete-mathematics/chapter-2.html#tt":{},"math/discrete-mathematics/index.html":{},"math/discrete-mathematics/index.html#_1":{},"math/index.html":{},"math/index.html#_1":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_1":{},"math/queue-theory/chapter-12.html#_3":{},"math/queue-theory/chapter-12.html#_4":{},"math/queue-theory/chapter-12.html#_5":{},"math/queue-theory/chapter-12.html#_6":{},"math/queue-theory/chapter-12.html#_7":{},"math/queue-theory/chapter-12.html#_8":{},"math/queue-theory/chapter-12.html#_9":{},"math/queue-theory/chapter-12.html#markov":{},"math/queue-theory/chapter-12.html#mm1":{},"math/queue-theory/chapter-12.html#mms":{},"math/queue-theory/chapter-12.html#poisson":{},"math/queue-theory/index.html":{},"math/queue-theory/index.html#_1":{},"weixin-2020.html":{},"weixin-2020.html#_1":{}},"title":{"coding/configuration.html":{},"coding/configuration.html#_1":{},"coding/configuration.html#_2":{},"coding/configuration/nginx-rtmp.html#_1":{},"coding/configuration/nginx-rtmp.html#_2":{},"coding/dsa.html":{},"coding/dsa.html#_1":{},"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_1":{},"coding/dsa/vector-and-list.html#_2":{},"coding/dsa/vector-and-list.html#_3":{},"coding/index.html":{},"coding/index.html#_1":{},"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/1.html":{},"coding/leetcode/1.html#1":{},"coding/leetcode/1.html#_1":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/101.html":{},"coding/leetcode/101.html#101":{},"coding/leetcode/101.html#_1":{},"coding/leetcode/101.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#102":{},"coding/leetcode/102.html#_1":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#118":{},"coding/leetcode/118.html#_1":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/119.html":{},"coding/leetcode/119.html#119-ii":{},"coding/leetcode/119.html#_1":{},"coding/leetcode/119.html#_2":{},"coding/leetcode/120.html":{},"coding/leetcode/120.html#120":{},"coding/leetcode/120.html#_1":{},"coding/leetcode/120.html#_2":{},"coding/leetcode/121.html":{},"coding/leetcode/121.html#121":{},"coding/leetcode/121.html#_1":{},"coding/leetcode/121.html#_2":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#122-ii":{},"coding/leetcode/122.html#_1":{},"coding/leetcode/122.html#_2":{},"coding/leetcode/125.html":{},"coding/leetcode/125.html#125":{},"coding/leetcode/125.html#_1":{},"coding/leetcode/125.html#_2":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#13":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/13.html#_2":{},"coding/leetcode/136.html":{},"coding/leetcode/136.html#136":{},"coding/leetcode/136.html#_1":{},"coding/leetcode/136.html#_2":{},"coding/leetcode/14.html":{},"coding/leetcode/14.html#14":{},"coding/leetcode/14.html#_1":{},"coding/leetcode/14.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#155":{},"coding/leetcode/155.html#_1":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/189.html":{},"coding/leetcode/189.html#189":{},"coding/leetcode/189.html#_1":{},"coding/leetcode/189.html#_2":{},"coding/leetcode/19.html#_1":{},"coding/leetcode/19.html#_2":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#198":{},"coding/leetcode/198.html#_1":{},"coding/leetcode/198.html#_2":{},"coding/leetcode/204.html":{},"coding/leetcode/204.html#204":{},"coding/leetcode/204.html#_1":{},"coding/leetcode/204.html#_2":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#206":{},"coding/leetcode/206.html#_1":{},"coding/leetcode/206.html#_2":{},"coding/leetcode/21.html":{},"coding/leetcode/21.html#21":{},"coding/leetcode/21.html#_1":{},"coding/leetcode/21.html#_2":{},"coding/leetcode/217.html":{},"coding/leetcode/217.html#217":{},"coding/leetcode/217.html#_1":{},"coding/leetcode/217.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#234":{},"coding/leetcode/234.html#_1":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/237.html":{},"coding/leetcode/237.html#237":{},"coding/leetcode/237.html#_1":{},"coding/leetcode/237.html#_2":{},"coding/leetcode/24.html":{},"coding/leetcode/24.html#24":{},"coding/leetcode/24.html#_1":{},"coding/leetcode/24.html#_2":{},"coding/leetcode/242.html":{},"coding/leetcode/242.html#242":{},"coding/leetcode/242.html#_1":{},"coding/leetcode/242.html#_2":{},"coding/leetcode/26.html":{},"coding/leetcode/26.html#26":{},"coding/leetcode/26.html#_1":{},"coding/leetcode/26.html#_2":{},"coding/leetcode/28.html":{},"coding/leetcode/28.html#28-strstr":{},"coding/leetcode/28.html#_1":{},"coding/leetcode/28.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#315":{},"coding/leetcode/315.html#_1":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/344.html":{},"coding/leetcode/344.html#344":{},"coding/leetcode/344.html#_1":{},"coding/leetcode/344.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#350-ii":{},"coding/leetcode/350.html#_1":{},"coding/leetcode/350.html#_2":{},"coding/leetcode/36.html":{},"coding/leetcode/36.html#36":{},"coding/leetcode/36.html#_1":{},"coding/leetcode/36.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#38":{},"coding/leetcode/38.html#_1":{},"coding/leetcode/38.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#384":{},"coding/leetcode/384.html#_1":{},"coding/leetcode/384.html#_2":{},"coding/leetcode/387.html":{},"coding/leetcode/387.html#387":{},"coding/leetcode/387.html#_1":{},"coding/leetcode/387.html#_2":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#48":{},"coding/leetcode/48.html#_1":{},"coding/leetcode/48.html#_2":{},"coding/leetcode/50.html#_1":{},"coding/leetcode/50.html#_2":{},"coding/leetcode/509.html":{},"coding/leetcode/509.html#509":{},"coding/leetcode/509.html#_1":{},"coding/leetcode/509.html#_2":{},"coding/leetcode/509.html#_3":{},"coding/leetcode/509.html#_4":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#66":{},"coding/leetcode/66.html#_1":{},"coding/leetcode/66.html#_2":{},"coding/leetcode/7.html":{},"coding/leetcode/7.html#7":{},"coding/leetcode/7.html#_1":{},"coding/leetcode/7.html#_2":{},"coding/leetcode/70.html":{},"coding/leetcode/70.html#70":{},"coding/leetcode/70.html#_1":{},"coding/leetcode/70.html#_2":{},"coding/leetcode/779.html#_1":{},"coding/leetcode/779.html#_2":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#8-atoi":{},"coding/leetcode/8.html#_1":{},"coding/leetcode/8.html#_2":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#88":{},"coding/leetcode/88.html#_1":{},"coding/leetcode/88.html#_2":{},"coding/leetcode/9.html":{},"coding/leetcode/9.html#9":{},"coding/leetcode/9.html#_1":{},"coding/leetcode/9.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#98":{},"coding/leetcode/98.html#_1":{},"coding/leetcode/98.html#_2":{},"coding/python.html":{},"coding/python.html#_1":{},"coding/python.html#_2":{},"coding/python/killable-thread.html":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_1":{},"latex/cheatsheet.html#_2":{},"latex/cheatsheet.html#_3":{},"latex/cheatsheet.html#_4":{},"latex/cheatsheet.html#_5":{},"latex/cheatsheet.html#_6":{},"latex/cheatsheet.html#_7":{},"latex/cheatsheet.html#_8":{},"latex/cheatsheet.html#_9":{},"latex/cheatsheet.html#latex":{},"latex/environ.html":{},"latex/environ.html#_1":{},"latex/index.html":{},"latex/slides.html":{},"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_1":{},"math/discrete-mathematics/chapter-1.html#_2":{},"math/discrete-mathematics/chapter-1.html#_3":{},"math/discrete-mathematics/chapter-1.html#_4":{},"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_1":{},"math/discrete-mathematics/chapter-2.html#_2":{},"math/discrete-mathematics/chapter-2.html#_3":{},"math/discrete-mathematics/chapter-2.html#_4":{},"math/discrete-mathematics/index.html":{},"math/discrete-mathematics/index.html#_1":{},"math/index.html":{},"math/index.html#_1":{},"math/queue-theory/chapter-12.html#_1":{},"math/queue-theory/chapter-12.html#_2":{},"math/queue-theory/chapter-12.html#_3":{},"math/queue-theory/chapter-12.html#_4":{},"math/queue-theory/chapter-12.html#_5":{},"math/queue-theory/chapter-12.html#_6":{},"math/queue-theory/chapter-12.html#_7":{},"math/queue-theory/chapter-12.html#_8":{},"math/queue-theory/chapter-12.html#_9":{},"math/queue-theory/chapter-12.html#markov":{},"math/queue-theory/chapter-12.html#poisson":{},"math/queue-theory/index.html":{},"math/queue-theory/index.html#_1":{},"weixin-2020.html#_1":{}}}],["0",{"_index":361,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/1.html":{},"coding/leetcode/1.html#_1":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/119.html":{},"coding/leetcode/119.html#_2":{},"coding/leetcode/120.html":{},"coding/leetcode/120.html#_2":{},"coding/leetcode/121.html":{},"coding/leetcode/121.html#_1":{},"coding/leetcode/121.html#_2":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#_1":{},"coding/leetcode/122.html#_2":{},"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_2":{},"coding/leetcode/136.html":{},"coding/leetcode/136.html#_2":{},"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_1":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/189.html":{},"coding/leetcode/189.html#_2":{},"coding/leetcode/19.html":{},"coding/leetcode/19.html#_2":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_1":{},"coding/leetcode/198.html#_2":{},"coding/leetcode/204.html":{},"coding/leetcode/204.html#_2":{},"coding/leetcode/217.html":{},"coding/leetcode/217.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/242.html":{},"coding/leetcode/242.html#_2":{},"coding/leetcode/26.html":{},"coding/leetcode/26.html#_1":{},"coding/leetcode/26.html#_2":{},"coding/leetcode/28.html":{},"coding/leetcode/28.html#_1":{},"coding/leetcode/28.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_1":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/344.html":{},"coding/leetcode/344.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{},"coding/leetcode/36.html":{},"coding/leetcode/36.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{},"coding/leetcode/387.html":{},"coding/leetcode/387.html#_1":{},"coding/leetcode/387.html#_2":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_2":{},"coding/leetcode/50.html":{},"coding/leetcode/50.html#_2":{},"coding/leetcode/509.html":{},"coding/leetcode/509.html#_1":{},"coding/leetcode/509.html#_3":{},"coding/leetcode/509.html#_4":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#_1":{},"coding/leetcode/66.html#_2":{},"coding/leetcode/7.html":{},"coding/leetcode/7.html#_1":{},"coding/leetcode/7.html#_2":{},"coding/leetcode/70.html":{},"coding/leetcode/70.html#_2":{},"coding/leetcode/779.html":{},"coding/leetcode/779.html#_1":{},"coding/leetcode/779.html#_2":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#_1":{},"coding/leetcode/8.html#_2":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#_2":{},"coding/leetcode/9.html":{},"coding/leetcode/9.html#_2":{},"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{},"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{},"math/queue-theory/chapter-12.html#_5":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["0,0,1,1,1,2,2,3,3,4",{"_index":769,"text":{"coding/leetcode/26.html":{},"coding/leetcode/26.html#_1":{}},"title":{}}],["0.25",{"_index":893,"text":{"coding/leetcode/50.html":{},"coding/leetcode/50.html#_1":{}},"title":{}}],["0.25000",{"_index":890,"text":{"coding/leetcode/50.html":{},"coding/leetcode/50.html#_1":{}},"title":{}}],["01",{"_index":929,"text":{"coding/leetcode/779.html":{},"coding/leetcode/779.html#_1":{},"coding/leetcode/9.html":{},"coding/leetcode/9.html#_1":{}},"title":{}}],["0110",{"_index":930,"text":{"coding/leetcode/779.html":{},"coding/leetcode/779.html#_1":{}},"title":{}}],["01101001",{"_index":931,"text":{"coding/leetcode/779.html":{},"coding/leetcode/779.html#_1":{}},"title":{}}],["0\\leq",{"_index":906,"text":{"coding/leetcode/509.html":{},"coding/leetcode/509.html#_1":{}},"title":{}}],["0\\sim\\infti",{"_index":1310,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["0x51",{"_index":740,"text":{"coding/leetcode/204.html":{},"coding/leetcode/204.html#_2":{}},"title":{}}],["0x55",{"_index":737,"text":{"coding/leetcode/204.html":{},"coding/leetcode/204.html#_2":{}},"title":{}}],["1",{"_index":92,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/1.html":{},"coding/leetcode/1.html#_1":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/101.html":{},"coding/leetcode/101.html#_1":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_1":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/119.html":{},"coding/leetcode/119.html#_2":{},"coding/leetcode/120.html":{},"coding/leetcode/120.html#_1":{},"coding/leetcode/120.html#_2":{},"coding/leetcode/121.html":{},"coding/leetcode/121.html#_1":{},"coding/leetcode/121.html#_2":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#_1":{},"coding/leetcode/122.html#_2":{},"coding/leetcode/125.html":{},"coding/leetcode/125.html#_1":{},"coding/leetcode/125.html#_2":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/13.html#_2":{},"coding/leetcode/136.html":{},"coding/leetcode/136.html#_1":{},"coding/leetcode/14.html":{},"coding/leetcode/14.html#_1":{},"coding/leetcode/14.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/189.html":{},"coding/leetcode/189.html#_1":{},"coding/leetcode/189.html#_2":{},"coding/leetcode/19.html":{},"coding/leetcode/19.html#_1":{},"coding/leetcode/19.html#_2":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_1":{},"coding/leetcode/198.html#_2":{},"coding/leetcode/204.html":{},"coding/leetcode/204.html#_2":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#_1":{},"coding/leetcode/21.html":{},"coding/leetcode/21.html#_1":{},"coding/leetcode/217.html":{},"coding/leetcode/217.html#_1":{},"coding/leetcode/217.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_1":{},"coding/leetcode/237.html":{},"coding/leetcode/237.html#_1":{},"coding/leetcode/24.html":{},"coding/leetcode/24.html#_1":{},"coding/leetcode/242.html":{},"coding/leetcode/242.html#_1":{},"coding/leetcode/26.html":{},"coding/leetcode/26.html#_1":{},"coding/leetcode/26.html#_2":{},"coding/leetcode/28.html":{},"coding/leetcode/28.html#_1":{},"coding/leetcode/28.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_1":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/344.html":{},"coding/leetcode/344.html#_1":{},"coding/leetcode/344.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#_1":{},"coding/leetcode/350.html#_2":{},"coding/leetcode/36.html":{},"coding/leetcode/36.html#_1":{},"coding/leetcode/36.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_1":{},"coding/leetcode/38.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_1":{},"coding/leetcode/387.html":{},"coding/leetcode/387.html#_1":{},"coding/leetcode/387.html#_2":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{},"coding/leetcode/48.html#_2":{},"coding/leetcode/50.html":{},"coding/leetcode/50.html#_1":{},"coding/leetcode/50.html#_2":{},"coding/leetcode/509.html":{},"coding/leetcode/509.html#_1":{},"coding/leetcode/509.html#_3":{},"coding/leetcode/509.html#_4":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#_1":{},"coding/leetcode/66.html#_2":{},"coding/leetcode/7.html":{},"coding/leetcode/7.html#_1":{},"coding/leetcode/7.html#_2":{},"coding/leetcode/70.html":{},"coding/leetcode/70.html#_1":{},"coding/leetcode/70.html#_2":{},"coding/leetcode/779.html":{},"coding/leetcode/779.html#_1":{},"coding/leetcode/779.html#_2":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#_1":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#_2":{},"coding/leetcode/9.html":{},"coding/leetcode/9.html#_1":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_1":{},"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{},"latex/environ.html":{},"latex/environ.html#enumerate":{},"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{},"math/queue-theory/chapter-12.html#_9":{},"math/queue-theory/index.html":{},"math/queue-theory/index.html#_1":{}},"title":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#1":{}}}],["1)!(",{"_index":1338,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["1)!\\left(t+\\frac{\\rho_0^s}{(",{"_index":1397,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["1)!}\\sum_{i=1}^\\infti",{"_index":1379,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["1)!}p_0",{"_index":1377,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["1)!}p_0+s\\sum_{i=s+1}^\\infti",{"_index":1376,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["1)!}}{\\left(t+\\frac{\\rho_0^s}{(",{"_index":1382,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["1)\\right",{"_index":728,"text":{"coding/leetcode/198.html":{},"coding/leetcode/198.html#_2":{}},"title":{}}],["1,1",{"_index":552,"text":{"coding/leetcode/118.html":{},"coding/leetcode/118.html#_1":{}},"title":{}}],["1,1,1,3,3,4,3,2,4,2",{"_index":747,"text":{"coding/leetcode/217.html":{},"coding/leetcode/217.html#_1":{}},"title":{}}],["1,1,2",{"_index":768,"text":{"coding/leetcode/26.html":{},"coding/leetcode/26.html#_1":{}},"title":{}}],["1,2,1",{"_index":553,"text":{"coding/leetcode/118.html":{},"coding/leetcode/118.html#_1":{}},"title":{}}],["1,2,2,1",{"_index":807,"text":{"coding/leetcode/350.html":{},"coding/leetcode/350.html#_1":{}},"title":{}}],["1,2,2,3,4,4,3",{"_index":512,"text":{"coding/leetcode/101.html":{},"coding/leetcode/101.html#_1":{}},"title":{}}],["1,2,2,3,5,6",{"_index":950,"text":{"coding/leetcode/88.html":{},"coding/leetcode/88.html#_1":{}},"title":{}}],["1,2,2,null,3,null,3",{"_index":514,"text":{"coding/leetcode/101.html":{},"coding/leetcode/101.html#_1":{}},"title":{}}],["1,2,3",{"_index":847,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_1":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#_1":{}},"title":{}}],["1,2,3,0,0,0",{"_index":948,"text":{"coding/leetcode/88.html":{},"coding/leetcode/88.html#_1":{}},"title":{}}],["1,2,3,1",{"_index":720,"text":{"coding/leetcode/198.html":{},"coding/leetcode/198.html#_1":{},"coding/leetcode/217.html":{},"coding/leetcode/217.html#_1":{}},"title":{}}],["1,2,3,4",{"_index":746,"text":{"coding/leetcode/217.html":{},"coding/leetcode/217.html#_1":{}},"title":{}}],["1,2,3,4,5",{"_index":589,"text":{"coding/leetcode/122.html":{},"coding/leetcode/122.html#_1":{}},"title":{}}],["1,2,3,4,5,6,7",{"_index":700,"text":{"coding/leetcode/189.html":{},"coding/leetcode/189.html#_1":{}},"title":{}}],["1,2,4",{"_index":913,"text":{"coding/leetcode/66.html":{},"coding/leetcode/66.html#_1":{}},"title":{}}],["1,3,3,1",{"_index":554,"text":{"coding/leetcode/118.html":{},"coding/leetcode/118.html#_1":{},"coding/leetcode/119.html":{},"coding/leetcode/119.html#_1":{}},"title":{}}],["1,4,6,4,1",{"_index":555,"text":{"coding/leetcode/118.html":{},"coding/leetcode/118.html#_1":{}},"title":{}}],["1.0",{"_index":272,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["1.1.1g",{"_index":161,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["1.19.5",{"_index":160,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["1.2.11",{"_index":163,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["1/2)^2",{"_index":891,"text":{"coding/leetcode/50.html":{},"coding/leetcode/50.html#_1":{}},"title":{}}],["1/4",{"_index":892,"text":{"coding/leetcode/50.html":{},"coding/leetcode/50.html#_1":{}},"title":{}}],["10",{"_index":157,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#_1":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/13.html#_2":{},"coding/leetcode/204.html":{},"coding/leetcode/204.html#_1":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{},"coding/leetcode/50.html":{},"coding/leetcode/50.html#_1":{},"coding/leetcode/7.html":{},"coding/leetcode/7.html#_2":{},"coding/leetcode/779.html":{},"coding/leetcode/779.html#_1":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#_2":{},"coding/leetcode/9.html":{},"coding/leetcode/9.html#_1":{},"coding/leetcode/9.html#_2":{},"math/queue-theory/index.html":{},"math/queue-theory/index.html#_1":{}},"title":{}}],["10.0.17763.0",{"_index":159,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["100",{"_index":614,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/13.html#_2":{},"coding/leetcode/189.html":{},"coding/leetcode/189.html#_1":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_1":{}},"title":{}}],["100,3",{"_index":707,"text":{"coding/leetcode/189.html":{},"coding/leetcode/189.html#_1":{}},"title":{}}],["100,3,99",{"_index":704,"text":{"coding/leetcode/189.html":{},"coding/leetcode/189.html#_1":{}},"title":{}}],["100.0",{"_index":894,"text":{"coding/leetcode/50.html":{},"coding/leetcode/50.html#_1":{}},"title":{}}],["1000",{"_index":332,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["10000",{"_index":680,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{}},"title":{}}],["101",{"_index":511,"text":{"coding/leetcode/101.html":{}},"title":{"coding/leetcode/101.html":{},"coding/leetcode/101.html#101":{}}}],["102",{"_index":529,"text":{"coding/leetcode/102.html":{}},"title":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#102":{}}}],["1024",{"_index":209,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["1024.00000",{"_index":887,"text":{"coding/leetcode/50.html":{},"coding/leetcode/50.html#_1":{}},"title":{}}],["1048576",{"_index":407,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["1073741824",{"_index":403,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["10^4",{"_index":791,"text":{"coding/leetcode/315.html":{},"coding/leetcode/315.html#_1":{}},"title":{}}],["10^5",{"_index":790,"text":{"coding/leetcode/315.html":{},"coding/leetcode/315.html#_1":{}},"title":{}}],["10\uff0c\u800c\u6570\u5b57\u90e8\u5206\u4e0d\u4f1a\u8d85\u8fc710",{"_index":840,"text":{"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{}},"title":{}}],["11",{"_index":479,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_1":{},"coding/leetcode/120.html":{},"coding/leetcode/120.html#_1":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_1":{},"math/queue-theory/index.html":{},"math/queue-theory/index.html#_1":{}},"title":{}}],["111221",{"_index":839,"text":{"coding/leetcode/38.html":{},"coding/leetcode/38.html#_1":{}},"title":{}}],["118",{"_index":112,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/118.html":{}},"title":{"coding/leetcode/118.html":{},"coding/leetcode/118.html#118":{}}}],["119",{"_index":113,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/119.html":{}},"title":{"coding/leetcode/119.html":{},"coding/leetcode/119.html#119-ii":{}}}],["12",{"_index":722,"text":{"coding/leetcode/198.html":{},"coding/leetcode/198.html#_1":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_1":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{},"math/queue-theory/index.html":{},"math/queue-theory/index.html#_1":{}},"title":{"math/queue-theory/chapter-12.html":{}}}],["120",{"_index":568,"text":{"coding/leetcode/120.html":{},"coding/leetcode/7.html":{},"coding/leetcode/7.html#_1":{}},"title":{"coding/leetcode/120.html":{},"coding/leetcode/120.html#120":{}}}],["121",{"_index":579,"text":{"coding/leetcode/121.html":{},"coding/leetcode/9.html":{},"coding/leetcode/9.html#_1":{}},"title":{"coding/leetcode/121.html":{},"coding/leetcode/121.html#121":{}}}],["1211",{"_index":838,"text":{"coding/leetcode/38.html":{},"coding/leetcode/38.html#_1":{}},"title":{}}],["122",{"_index":115,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/122.html":{}},"title":{"coding/leetcode/122.html":{},"coding/leetcode/122.html#122-ii":{}}}],["123",{"_index":914,"text":{"coding/leetcode/66.html":{},"coding/leetcode/66.html#_1":{},"coding/leetcode/7.html":{},"coding/leetcode/7.html#_1":{}},"title":{}}],["125",{"_index":116,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/125.html":{}},"title":{"coding/leetcode/125.html":{},"coding/leetcode/125.html#125":{}}}],["13",{"_index":97,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/13.html":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{}},"title":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#13":{}}}],["136",{"_index":117,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/136.html":{}},"title":{"coding/leetcode/136.html":{},"coding/leetcode/136.html#136":{}}}],["14",{"_index":98,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/14.html":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{}},"title":{"coding/leetcode/14.html":{},"coding/leetcode/14.html#14":{}}}],["14.27.29112.0",{"_index":169,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["15",{"_index":480,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_1":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_1":{}},"title":{}}],["15,13",{"_index":882,"text":{"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{}},"title":{}}],["15,14,12,16",{"_index":881,"text":{"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{}},"title":{}}],["15,7",{"_index":533,"text":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#_1":{}},"title":{}}],["155",{"_index":663,"text":{"coding/leetcode/155.html":{}},"title":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#155":{}}}],["16",{"_index":379,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{}},"title":{}}],["160",{"_index":286,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["189",{"_index":118,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/189.html":{}},"title":{"coding/leetcode/189.html":{},"coding/leetcode/189.html#189":{}}}],["19",{"_index":711,"text":{"coding/leetcode/19.html":{}},"title":{"coding/leetcode/19.html":{},"coding/leetcode/19.html#19-n":{}}}],["19.27.29112",{"_index":171,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["19042.662",{"_index":153,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["1935",{"_index":434,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["1935\u7aef\u53e3\u4e0e8080",{"_index":451,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["198",{"_index":719,"text":{"coding/leetcode/198.html":{}},"title":{"coding/leetcode/198.html":{},"coding/leetcode/198.html#198":{}}}],["1994",{"_index":633,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["1\\cdot",{"_index":1325,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["1}(t)+(1",{"_index":1271,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["1}(t)+\\mu_{j+1}p_{j+1}(t",{"_index":1280,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["1}\\delta",{"_index":1269,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["1}\\frac{\\rho_0^i}{i!}+\\frac{\\rho_0^s}{(",{"_index":1337,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["1}\\frac{\\rho_0^i}{i!}+\\frac{\\rho_0^s}{s!}\\sum_{i=0}^\\infti",{"_index":1335,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["1}\\frac{\\rho_0^i}{i!}+\\sum_{i=s}^\\infti",{"_index":1333,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["1}\\frac{\\rho_0^i}{i!}=t",{"_index":1341,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["1}^\\infti",{"_index":1360,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["1}^{j}\\frac{\\lambda_{i",{"_index":1308,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["1}p_{j",{"_index":1279,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["1}}{(k",{"_index":1224,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{}},"title":{}}],["1}}{\\mu_1\\mu_2\\cdots\\mu_i}p_0=\\left",{"_index":1343,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["1}}{\\mu_1\\mu_2\\cdots\\mu_j}p_0=p_0\\prod_{i",{"_index":1307,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["1}}{\\mu_i",{"_index":1309,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["1}}{\\mu_{j+1}}p_{j",{"_index":1294,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["1\u30012\uff0c\u5f02\u6216\u8fd0\u7b97\u7684\u7ed3\u679c\u4e0e\u53c2\u4e0e\u8fd0\u7b97\u7684\u6240\u6709\u6570\u503c\u7684\u6392\u5217\u987a\u5e8f\u65e0\u5173\u3002\u6839\u636e\u6027\u8d283\u30014\uff0c\u76f8\u540c\u6574\u6570\u7684\u5f02\u6216\u503c\u4e3a0\uff0c0",{"_index":648,"text":{"coding/leetcode/136.html":{},"coding/leetcode/136.html#_2":{}},"title":{}}],["1\u300212",{"_index":616,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["2",{"_index":312,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/1.html":{},"coding/leetcode/1.html#_1":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/101.html":{},"coding/leetcode/101.html#_1":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/120.html":{},"coding/leetcode/120.html#_1":{},"coding/leetcode/121.html":{},"coding/leetcode/121.html#_1":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#_1":{},"coding/leetcode/122.html#_2":{},"coding/leetcode/125.html":{},"coding/leetcode/125.html#_1":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/136.html":{},"coding/leetcode/136.html#_1":{},"coding/leetcode/14.html":{},"coding/leetcode/14.html#_1":{},"coding/leetcode/14.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_1":{},"coding/leetcode/189.html":{},"coding/leetcode/189.html#_1":{},"coding/leetcode/189.html#_2":{},"coding/leetcode/19.html":{},"coding/leetcode/19.html#_1":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_1":{},"coding/leetcode/198.html#_2":{},"coding/leetcode/204.html":{},"coding/leetcode/204.html#_1":{},"coding/leetcode/204.html#_2":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#_1":{},"coding/leetcode/21.html":{},"coding/leetcode/21.html#_1":{},"coding/leetcode/217.html":{},"coding/leetcode/217.html#_1":{},"coding/leetcode/217.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_1":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/237.html":{},"coding/leetcode/237.html#_1":{},"coding/leetcode/24.html":{},"coding/leetcode/24.html#_1":{},"coding/leetcode/242.html":{},"coding/leetcode/242.html#_1":{},"coding/leetcode/26.html":{},"coding/leetcode/26.html#_1":{},"coding/leetcode/26.html#_2":{},"coding/leetcode/28.html":{},"coding/leetcode/28.html#_1":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_1":{},"coding/leetcode/344.html":{},"coding/leetcode/344.html#_1":{},"coding/leetcode/344.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#_1":{},"coding/leetcode/36.html":{},"coding/leetcode/36.html#_1":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_1":{},"coding/leetcode/38.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_1":{},"coding/leetcode/387.html":{},"coding/leetcode/387.html#_1":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{},"coding/leetcode/48.html#_2":{},"coding/leetcode/50.html":{},"coding/leetcode/50.html#_1":{},"coding/leetcode/50.html#_2":{},"coding/leetcode/509.html":{},"coding/leetcode/509.html#_1":{},"coding/leetcode/509.html#_3":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#_1":{},"coding/leetcode/7.html":{},"coding/leetcode/7.html#_1":{},"coding/leetcode/70.html":{},"coding/leetcode/70.html#_1":{},"coding/leetcode/70.html#_2":{},"coding/leetcode/779.html":{},"coding/leetcode/779.html#_1":{},"coding/leetcode/779.html#_2":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#_1":{},"coding/leetcode/9.html":{},"coding/leetcode/9.html#_1":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_1":{},"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{},"latex/environ.html":{},"latex/environ.html#enumerate":{},"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{},"math/queue-theory/index.html":{},"math/queue-theory/index.html#_1":{}},"title":{}}],["2,1,1,0",{"_index":789,"text":{"coding/leetcode/315.html":{},"coding/leetcode/315.html#_1":{}},"title":{}}],["2,2",{"_index":809,"text":{"coding/leetcode/350.html":{},"coding/leetcode/350.html#_1":{}},"title":{}}],["2,2,1",{"_index":646,"text":{"coding/leetcode/136.html":{},"coding/leetcode/136.html#_1":{}},"title":{}}],["2,5,6",{"_index":949,"text":{"coding/leetcode/88.html":{},"coding/leetcode/88.html#_1":{}},"title":{}}],["2,7,9,3,1",{"_index":721,"text":{"coding/leetcode/198.html":{},"coding/leetcode/198.html#_1":{}},"title":{}}],["2.00000",{"_index":886,"text":{"coding/leetcode/50.html":{},"coding/leetcode/50.html#_1":{}},"title":{}}],["2.10000",{"_index":888,"text":{"coding/leetcode/50.html":{},"coding/leetcode/50.html#_1":{}},"title":{}}],["2.15.05",{"_index":168,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["20",{"_index":531,"text":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#_1":{}},"title":{}}],["2017",{"_index":156,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["2019",{"_index":85,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{},"coding/configuration/nginx-rtmp.html#msvc":{},"covid.html":{}},"title":{"covid.html":{},"covid.html#covid-2019-trend":{}}}],["2020",{"_index":87,"text":{},"title":{"weixin-2020.html":{}}}],["204",{"_index":731,"text":{"coding/leetcode/204.html":{}},"title":{"coding/leetcode/204.html":{},"coding/leetcode/204.html#204":{}}}],["206",{"_index":119,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/206.html":{}},"title":{"coding/leetcode/206.html":{},"coding/leetcode/206.html#206":{}}}],["21",{"_index":99,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/21.html":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_1":{},"coding/leetcode/7.html":{},"coding/leetcode/7.html#_1":{}},"title":{"coding/leetcode/21.html":{},"coding/leetcode/21.html#21":{}}}],["2147483648",{"_index":896,"text":{"coding/leetcode/50.html":{},"coding/leetcode/50.html#_2":{},"coding/leetcode/7.html":{},"coding/leetcode/7.html#_2":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#_1":{}},"title":{}}],["217",{"_index":120,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/217.html":{}},"title":{"coding/leetcode/217.html":{},"coding/leetcode/217.html#217":{}}}],["231",{"_index":945,"text":{"coding/leetcode/8.html":{},"coding/leetcode/8.html#_1":{}},"title":{}}],["234",{"_index":752,"text":{"coding/leetcode/234.html":{}},"title":{"coding/leetcode/234.html":{},"coding/leetcode/234.html#234":{}}}],["237",{"_index":121,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/237.html":{}},"title":{"coding/leetcode/237.html":{},"coding/leetcode/237.html#237":{}}}],["24",{"_index":100,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/24.html":{}},"title":{"coding/leetcode/24.html":{},"coding/leetcode/24.html#24":{}}}],["242",{"_index":122,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/242.html":{}},"title":{"coding/leetcode/242.html":{},"coding/leetcode/242.html#242":{}}}],["26",{"_index":101,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/242.html":{},"coding/leetcode/242.html#_2":{},"coding/leetcode/26.html":{},"coding/leetcode/387.html":{},"coding/leetcode/387.html#_2":{}},"title":{"coding/leetcode/26.html":{},"coding/leetcode/26.html#26":{}}}],["27",{"_index":618,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["28",{"_index":102,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/28.html":{}},"title":{"coding/leetcode/28.html":{},"coding/leetcode/28.html#28-strstr":{}}}],["2],[0",{"_index":669,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_1":{}},"title":{}}],["2^(n",{"_index":932,"text":{"coding/leetcode/779.html":{},"coding/leetcode/779.html#_1":{}},"title":{}}],["2^{31",{"_index":895,"text":{"coding/leetcode/50.html":{},"coding/leetcode/50.html#_1":{},"coding/leetcode/7.html":{},"coding/leetcode/7.html#_1":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#_1":{}},"title":{}}],["2\u7684\u500d\u6570\uff0c\u5269\u4e0b\u7684\u7b2c\u4e00\u4e2a\u6ca1\u6709\u88ab\u5212\u53bb\u7684\u6570\u5b573\u5373\u4e3a\u8d28\u6570\uff0c\u518d\u82b1\u65d7\u6240\u67093\u7684\u500d\u6570\uff0c\u5269\u4e0b\u7684\u7b2c\u4e00\u4e2a\u6ca1\u6709\u88ab\u5212\u53bb\u7684\u6570\u5b575",{"_index":733,"text":{"coding/leetcode/204.html":{},"coding/leetcode/204.html#_2":{}},"title":{}}],["3",{"_index":513,"text":{"coding/leetcode/101.html":{},"coding/leetcode/101.html#_1":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_1":{},"coding/leetcode/119.html":{},"coding/leetcode/119.html#_1":{},"coding/leetcode/120.html":{},"coding/leetcode/120.html#_1":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#_1":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_1":{},"coding/leetcode/189.html":{},"coding/leetcode/189.html#_1":{},"coding/leetcode/19.html":{},"coding/leetcode/19.html#_1":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_1":{},"coding/leetcode/204.html":{},"coding/leetcode/204.html#_1":{},"coding/leetcode/204.html#_2":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#_1":{},"coding/leetcode/21.html":{},"coding/leetcode/21.html#_1":{},"coding/leetcode/217.html":{},"coding/leetcode/217.html#_1":{},"coding/leetcode/24.html":{},"coding/leetcode/24.html#_1":{},"coding/leetcode/26.html":{},"coding/leetcode/26.html#_1":{},"coding/leetcode/36.html":{},"coding/leetcode/36.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_1":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_1":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{},"coding/leetcode/50.html":{},"coding/leetcode/50.html#_1":{},"coding/leetcode/509.html":{},"coding/leetcode/509.html#_1":{},"coding/leetcode/7.html":{},"coding/leetcode/7.html#_1":{},"coding/leetcode/70.html":{},"coding/leetcode/70.html#_1":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#_1":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#_1":{},"coding/leetcode/9.html":{},"coding/leetcode/9.html#_1":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_1":{},"latex/environ.html":{},"latex/environ.html#enumerate":{},"math/queue-theory/index.html":{},"math/queue-theory/index.html#_1":{}},"title":{}}],["3,4",{"_index":569,"text":{"coding/leetcode/120.html":{},"coding/leetcode/120.html#_1":{}},"title":{}}],["3,9,20,null,null,15,7",{"_index":530,"text":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#_1":{}},"title":{}}],["3,99",{"_index":705,"text":{"coding/leetcode/189.html":{},"coding/leetcode/189.html#_1":{}},"title":{}}],["3,null,0",{"_index":671,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_1":{}},"title":{}}],["30",{"_index":837,"text":{"coding/leetcode/38.html":{},"coding/leetcode/38.html#_1":{},"coding/leetcode/779.html":{},"coding/leetcode/779.html#_1":{}},"title":{}}],["31",{"_index":925,"text":{"coding/leetcode/7.html":{},"coding/leetcode/7.html#_2":{}},"title":{}}],["315",{"_index":123,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/315.html":{}},"title":{"coding/leetcode/315.html":{},"coding/leetcode/315.html#315":{}}}],["32",{"_index":609,"text":{"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{},"coding/leetcode/50.html":{},"coding/leetcode/50.html#_1":{},"coding/leetcode/50.html#_2":{},"coding/leetcode/7.html":{},"coding/leetcode/7.html#_1":{},"coding/leetcode/7.html#_2":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#_1":{}},"title":{}}],["321",{"_index":922,"text":{"coding/leetcode/7.html":{},"coding/leetcode/7.html#_1":{}},"title":{}}],["344",{"_index":124,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/344.html":{}},"title":{"coding/leetcode/344.html":{},"coding/leetcode/344.html#344":{}}}],["350",{"_index":805,"text":{"coding/leetcode/350.html":{}},"title":{"coding/leetcode/350.html":{},"coding/leetcode/350.html#350-ii":{}}}],["36",{"_index":104,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/36.html":{}},"title":{"coding/leetcode/36.html":{},"coding/leetcode/36.html#36":{}}}],["3600",{"_index":397,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["38",{"_index":105,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/38.html":{}},"title":{"coding/leetcode/38.html":{},"coding/leetcode/38.html#38":{}}}],["384",{"_index":846,"text":{"coding/leetcode/384.html":{}},"title":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#384":{}}}],["387",{"_index":125,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/387.html":{}},"title":{"coding/leetcode/387.html":{},"coding/leetcode/387.html#387":{}}}],["3999",{"_index":628,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["3x3",{"_index":819,"text":{"coding/leetcode/36.html":{},"coding/leetcode/36.html#_1":{}},"title":{}}],["4",{"_index":304,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/101.html":{},"coding/leetcode/101.html#_1":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#_1":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/136.html":{},"coding/leetcode/136.html#_1":{},"coding/leetcode/19.html":{},"coding/leetcode/19.html#_1":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_1":{},"coding/leetcode/204.html":{},"coding/leetcode/204.html#_1":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#_1":{},"coding/leetcode/21.html":{},"coding/leetcode/21.html#_1":{},"coding/leetcode/237.html":{},"coding/leetcode/237.html#_1":{},"coding/leetcode/24.html":{},"coding/leetcode/24.html#_1":{},"coding/leetcode/26.html":{},"coding/leetcode/26.html#_1":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_1":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{},"coding/leetcode/509.html":{},"coding/leetcode/509.html#_1":{},"coding/leetcode/779.html":{},"coding/leetcode/779.html#_1":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#_1":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_1":{},"math/queue-theory/index.html":{},"math/queue-theory/index.html#_1":{}},"title":{}}],["4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1",{"_index":824,"text":{"coding/leetcode/36.html":{},"coding/leetcode/36.html#_1":{}},"title":{}}],["4\",\"1\",\"9\",\".\",\".\",\"5",{"_index":827,"text":{"coding/leetcode/36.html":{},"coding/leetcode/36.html#_1":{}},"title":{}}],["4,1,2,1,2",{"_index":647,"text":{"coding/leetcode/136.html":{},"coding/leetcode/136.html#_1":{}},"title":{}}],["4,1,8,3",{"_index":571,"text":{"coding/leetcode/120.html":{},"coding/leetcode/120.html#_1":{}},"title":{}}],["4,1,9",{"_index":755,"text":{"coding/leetcode/237.html":{},"coding/leetcode/237.html#_1":{}},"title":{}}],["4,3,2,1",{"_index":915,"text":{"coding/leetcode/66.html":{},"coding/leetcode/66.html#_1":{}},"title":{}}],["4,3,2,2",{"_index":916,"text":{"coding/leetcode/66.html":{},"coding/leetcode/66.html#_1":{}},"title":{}}],["4,5,1,9",{"_index":754,"text":{"coding/leetcode/237.html":{},"coding/leetcode/237.html#_1":{}},"title":{}}],["4,5,6",{"_index":874,"text":{"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{}},"title":{}}],["4,5,9",{"_index":756,"text":{"coding/leetcode/237.html":{},"coding/leetcode/237.html#_1":{}},"title":{}}],["4,9",{"_index":812,"text":{"coding/leetcode/350.html":{},"coding/leetcode/350.html#_1":{}},"title":{}}],["4,9,5",{"_index":810,"text":{"coding/leetcode/350.html":{},"coding/leetcode/350.html#_1":{}},"title":{}}],["40",{"_index":624,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["400",{"_index":626,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_1":{}},"title":{}}],["4193",{"_index":940,"text":{"coding/leetcode/8.html":{},"coding/leetcode/8.html#_1":{}},"title":{}}],["42",{"_index":939,"text":{"coding/leetcode/8.html":{},"coding/leetcode/8.html#_1":{}},"title":{}}],["4321",{"_index":917,"text":{"coding/leetcode/66.html":{},"coding/leetcode/66.html#_1":{}},"title":{}}],["48",{"_index":106,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{},"coding/leetcode/48.html":{}},"title":{"coding/leetcode/48.html":{},"coding/leetcode/48.html#48":{}}}],["49",{"_index":638,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["4\u4e2a\u7b49\u957f\u7684\u90e8\u5206\uff0c\u5176\u4e2d\u7b2c1\u30014\u90e8\u5206\u76f8\u540c\uff0c2\u30013",{"_index":933,"text":{"coding/leetcode/779.html":{},"coding/leetcode/779.html#_2":{}},"title":{}}],["5",{"_index":298,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_1":{},"coding/leetcode/120.html":{},"coding/leetcode/120.html#_1":{},"coding/leetcode/121.html":{},"coding/leetcode/121.html#_1":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#_1":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/13.html#_2":{},"coding/leetcode/19.html":{},"coding/leetcode/19.html#_1":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_1":{},"coding/leetcode/204.html":{},"coding/leetcode/204.html#_1":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#_1":{},"coding/leetcode/237.html":{},"coding/leetcode/237.html#_1":{},"coding/leetcode/26.html":{},"coding/leetcode/26.html#_1":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_1":{},"coding/leetcode/36.html":{},"coding/leetcode/36.html#_1":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_1":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{},"coding/leetcode/779.html":{},"coding/leetcode/779.html#_1":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#_1":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_1":{},"math/queue-theory/index.html":{},"math/queue-theory/index.html#_1":{}},"title":{}}],["5\",\"3\",\".\",\".\",\"7",{"_index":820,"text":{"coding/leetcode/36.html":{},"coding/leetcode/36.html#_1":{}},"title":{}}],["5,1,4,null,null,3,6",{"_index":953,"text":{"coding/leetcode/98.html":{},"coding/leetcode/98.html#_1":{}},"title":{}}],["5,2,6,1",{"_index":788,"text":{"coding/leetcode/315.html":{},"coding/leetcode/315.html#_1":{}},"title":{}}],["5,6,7,1,2,3,4",{"_index":701,"text":{"coding/leetcode/189.html":{},"coding/leetcode/189.html#_1":{}},"title":{}}],["5.32",{"_index":166,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["50",{"_index":107,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/13.html#_2":{},"coding/leetcode/50.html":{}},"title":{"coding/leetcode/50.html":{},"coding/leetcode/50.html#50-powx-n":{}}}],["500",{"_index":615,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/13.html#_2":{}},"title":{}}],["509",{"_index":237,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{},"coding/leetcode/509.html":{}},"title":{"coding/leetcode/509.html":{},"coding/leetcode/509.html#509":{}}}],["521",{"_index":246,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{}},"title":{}}],["58",{"_index":631,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["6",{"_index":581,"text":{"coding/leetcode/121.html":{},"coding/leetcode/121.html#_1":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#_1":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_1":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_1":{},"math/queue-theory/index.html":{},"math/queue-theory/index.html#_1":{}},"title":{}}],["6\",\".\",\".\",\".\",\".\",\"2\",\"8",{"_index":826,"text":{"coding/leetcode/36.html":{},"coding/leetcode/36.html#_1":{}},"title":{}}],["6\",\".\",\".\",\"1\",\"9\",\"5",{"_index":821,"text":{"coding/leetcode/36.html":{},"coding/leetcode/36.html#_1":{}},"title":{}}],["6,5,7",{"_index":570,"text":{"coding/leetcode/120.html":{},"coding/leetcode/120.html#_1":{}},"title":{}}],["6,7,1,2,3,4,5",{"_index":703,"text":{"coding/leetcode/189.html":{},"coding/leetcode/189.html#_1":{}},"title":{}}],["60",{"_index":399,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["611",{"_index":251,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{}},"title":{}}],["63",{"_index":418,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["66",{"_index":110,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/66.html":{}},"title":{"coding/leetcode/66.html":{},"coding/leetcode/66.html#66":{}}}],["7",{"_index":93,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/1.html":{},"coding/leetcode/1.html#_1":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_1":{},"coding/leetcode/121.html":{},"coding/leetcode/121.html#_1":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#_1":{},"coding/leetcode/204.html":{},"coding/leetcode/204.html#_1":{},"coding/leetcode/204.html#_2":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{},"coding/leetcode/7.html":{},"math/queue-theory/index.html":{},"math/queue-theory/index.html#_1":{}},"title":{"coding/leetcode/7.html":{},"coding/leetcode/7.html#7":{}}}],["7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6",{"_index":825,"text":{"coding/leetcode/36.html":{},"coding/leetcode/36.html#_1":{}},"title":{}}],["7,1,2,3,4,5,6",{"_index":702,"text":{"coding/leetcode/189.html":{},"coding/leetcode/189.html#_1":{}},"title":{}}],["7,1,5,3,6,4",{"_index":580,"text":{"coding/leetcode/121.html":{},"coding/leetcode/121.html#_1":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#_1":{}},"title":{}}],["7,10,11",{"_index":883,"text":{"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{}},"title":{}}],["7,4,1",{"_index":876,"text":{"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{}},"title":{}}],["7,6,4,3,1",{"_index":582,"text":{"coding/leetcode/121.html":{},"coding/leetcode/121.html#_1":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#_1":{}},"title":{}}],["7,8,9",{"_index":875,"text":{"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{}},"title":{}}],["70",{"_index":111,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/70.html":{}},"title":{"coding/leetcode/70.html":{},"coding/leetcode/70.html#70":{}}}],["779",{"_index":928,"text":{"coding/leetcode/779.html":{}},"title":{"coding/leetcode/779.html":{},"coding/leetcode/779.html#779-k":{}}}],["8",{"_index":94,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/36.html":{},"coding/leetcode/36.html#_1":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{},"coding/leetcode/8.html":{},"math/queue-theory/index.html":{},"math/queue-theory/index.html#_1":{}},"title":{"coding/leetcode/8.html":{},"coding/leetcode/8.html#8-atoi":{}}}],["8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3",{"_index":823,"text":{"coding/leetcode/36.html":{},"coding/leetcode/36.html#_1":{}},"title":{}}],["8\",\".\",\".\",\"7\",\"9",{"_index":828,"text":{"coding/leetcode/36.html":{},"coding/leetcode/36.html#_1":{}},"title":{}}],["8\",\"3\",\".\",\".\",\"7",{"_index":829,"text":{"coding/leetcode/36.html":{},"coding/leetcode/36.html#_1":{}},"title":{}}],["8,10",{"_index":880,"text":{"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{}},"title":{}}],["8,5,2",{"_index":877,"text":{"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{}},"title":{}}],["8.44",{"_index":164,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["80",{"_index":602,"text":{"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{}},"title":{}}],["8080",{"_index":440,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["86400",{"_index":394,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["88",{"_index":947,"text":{"coding/leetcode/88.html":{}},"title":{"coding/leetcode/88.html":{},"coding/leetcode/88.html#88":{}}}],["8s",{"_index":439,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["9",{"_index":96,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/1.html":{},"coding/leetcode/1.html#_1":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_1":{},"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_1":{},"coding/leetcode/237.html":{},"coding/leetcode/237.html#_1":{},"coding/leetcode/36.html":{},"coding/leetcode/36.html#_1":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#_2":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#_2":{},"coding/leetcode/9.html":{},"math/queue-theory/index.html":{},"math/queue-theory/index.html#_1":{}},"title":{"coding/leetcode/9.html":{},"coding/leetcode/9.html#9":{}}}],["9\",\"8\",\".\",\".\",\".\",\".\",\"6",{"_index":822,"text":{"coding/leetcode/36.html":{},"coding/leetcode/36.html#_1":{}},"title":{}}],["9,11",{"_index":879,"text":{"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{}},"title":{}}],["9,20",{"_index":532,"text":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#_1":{}},"title":{}}],["9,4,9,8,4",{"_index":811,"text":{"coding/leetcode/350.html":{},"coding/leetcode/350.html#_1":{}},"title":{}}],["9,6,3",{"_index":878,"text":{"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{}},"title":{}}],["9.26100",{"_index":889,"text":{"coding/leetcode/50.html":{},"coding/leetcode/50.html#_1":{}},"title":{}}],["90",{"_index":625,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{}},"title":{}}],["900",{"_index":627,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["91283472332",{"_index":944,"text":{"coding/leetcode/8.html":{},"coding/leetcode/8.html#_1":{}},"title":{}}],["98",{"_index":952,"text":{"coding/leetcode/98.html":{}},"title":{"coding/leetcode/98.html":{},"coding/leetcode/98.html#98":{}}}],["987",{"_index":942,"text":{"coding/leetcode/8.html":{},"coding/leetcode/8.html#_1":{}},"title":{}}],["99",{"_index":706,"text":{"coding/leetcode/189.html":{},"coding/leetcode/189.html#_1":{}},"title":{}}],["999",{"_index":640,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["9999+1",{"_index":918,"text":{"coding/leetcode/66.html":{},"coding/leetcode/66.html#_2":{}},"title":{}}],["999999",{"_index":301,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["9x9",{"_index":818,"text":{"coding/leetcode/36.html":{},"coding/leetcode/36.html#_1":{}},"title":{}}],["_0}{\\mu_2}p_0",{"_index":1299,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["__init__",{"_index":962,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["_activ",{"_index":972,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["_blank",{"_index":416,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["_capac",{"_index":474,"text":{"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_3":{}},"title":{}}],["_elem",{"_index":475,"text":{"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_3":{}},"title":{}}],["_n",{"_index":1247,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["_size",{"_index":472,"text":{"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_3":{}},"title":{}}],["_thread_id",{"_index":971,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["a=a",{"_index":1180,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_1":{}},"title":{}}],["a=b",{"_index":1179,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_1":{}},"title":{}}],["a=c",{"_index":1183,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_1":{},"math/discrete-mathematics/chapter-2.html#_2":{}},"title":{}}],["a\\downarrow",{"_index":1168,"text":{"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_2":{}},"title":{}}],["a\\land",{"_index":1167,"text":{"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_2":{},"math/discrete-mathematics/chapter-1.html#_3":{}},"title":{}}],["a\\leftrightarrow",{"_index":1173,"text":{"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_3":{},"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_1":{}},"title":{}}],["a\\lor",{"_index":1169,"text":{"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_2":{},"math/discrete-mathematics/chapter-1.html#_3":{}},"title":{}}],["a\\mod",{"_index":1120,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["a\\overlin",{"_index":1170,"text":{"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_2":{}},"title":{}}],["a\\rightarrow",{"_index":1172,"text":{"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_3":{}},"title":{}}],["a\\uparrow",{"_index":1166,"text":{"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_2":{}},"title":{}}],["a_i",{"_index":583,"text":{"coding/leetcode/121.html":{},"coding/leetcode/121.html#_2":{}},"title":{}}],["a_j",{"_index":584,"text":{"coding/leetcode/121.html":{},"coding/leetcode/121.html#_2":{}},"title":{}}],["a_{i",{"_index":727,"text":{"coding/leetcode/198.html":{},"coding/leetcode/198.html#_2":{}},"title":{}}],["aaaaa",{"_index":779,"text":{"coding/leetcode/28.html":{},"coding/leetcode/28.html#_1":{}},"title":{}}],["aaaaaa",{"_index":337,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["ab",{"_index":1104,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["accent",{"_index":40,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["accent\",this.dataset.mdcoloracc",{"_index":50,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["accept",{"_index":313,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["activ",{"_index":349,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["add",{"_index":212,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#_2":{}},"title":{}}],["address",{"_index":382,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["alia",{"_index":449,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["align",{"_index":339,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["alpha",{"_index":1030,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{}},"title":{}}],["alpha)=\\left",{"_index":1213,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{}},"title":{}}],["amber",{"_index":21,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["anagram",{"_index":761,"text":{"coding/leetcode/242.html":{},"coding/leetcode/242.html#_1":{}},"title":{}}],["applic",{"_index":333,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["application/vnd.apple.mpegurl",{"_index":445,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["approx",{"_index":1098,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_6":{}},"title":{}}],["arcco",{"_index":1130,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["arcsin",{"_index":1129,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["arctan",{"_index":1131,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["arg",{"_index":995,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["array",{"_index":485,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/119.html":{},"coding/leetcode/119.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#_2":{}},"title":{}}],["array.prototype.foreach.call(button",{"_index":32,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["arutyunyan",{"_index":269,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["ascii",{"_index":799,"text":{"coding/leetcode/344.html":{},"coding/leetcode/344.html#_1":{}},"title":{}}],["ascii\u6570\u503c\u76f8\u5dee32\uff0c\u4f46ascii\u6570\u503c\u76f8\u5dee32",{"_index":600,"text":{"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{}},"title":{}}],["asm",{"_index":210,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["assum",{"_index":487,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/119.html":{},"coding/leetcode/119.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#_2":{}},"title":{}}],["atoi",{"_index":936,"text":{"coding/leetcode/8.html":{},"coding/leetcode/8.html#_1":{}},"title":{"coding/leetcode/8.html":{},"coding/leetcode/8.html#8-atoi":{}}}],["audio",{"_index":306,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["author",{"_index":1153,"text":{"latex/slides.html":{},"latex/slides.html#latex":{}},"title":{}}],["auto/configur",{"_index":180,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["auto\\lib\\openssl\\makefile.msvc",{"_index":215,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["avatar",{"_index":47,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["avsync",{"_index":424,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["b",{"_index":335,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/136.html":{},"coding/leetcode/136.html#_2":{},"coding/leetcode/217.html":{},"coding/leetcode/217.html#_2":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{},"latex/cheatsheet.html#_8":{},"latex/environ.html":{},"latex/environ.html#enumerate":{},"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_2":{},"math/discrete-mathematics/chapter-1.html#_3":{},"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_1":{},"math/discrete-mathematics/chapter-2.html#_2":{},"math/discrete-mathematics/chapter-2.html#_4":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_5":{}},"title":{}}],["b)\\land",{"_index":1171,"text":{"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_2":{}},"title":{}}],["b=a",{"_index":1181,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_1":{}},"title":{}}],["b=c",{"_index":1182,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_1":{}},"title":{}}],["b><xsl:valu",{"_index":334,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["baseexcept",{"_index":1005,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["bba",{"_index":780,"text":{"coding/leetcode/28.html":{},"coding/leetcode/28.html#_1":{}},"title":{}}],["beamer",{"_index":1149,"text":{"latex/slides.html":{},"latex/slides.html#latex":{}},"title":{}}],["begin",{"_index":1145,"text":{"latex/environ.html":{},"latex/environ.html#enumerate":{},"latex/environ.html#itemize":{},"latex/slides.html":{},"latex/slides.html#latex":{}},"title":{}}],["begin{align",{"_index":1205,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_4":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{},"math/queue-theory/chapter-12.html#_6":{},"math/queue-theory/chapter-12.html#_9":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["begin{enumer",{"_index":1146,"text":{"latex/environ.html":{},"latex/environ.html#enumerate":{}},"title":{}}],["beta",{"_index":1031,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["bgcolor",{"_index":300,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["binari",{"_index":516,"text":{"coding/leetcode/101.html":{},"coding/leetcode/101.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["bit",{"_index":327,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["bits/",{"_index":308,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["blue",{"_index":14,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["board",{"_index":831,"text":{"coding/leetcode/36.html":{},"coding/leetcode/36.html#_2":{}},"title":{}}],["boardcols",{"_index":833,"text":{"coding/leetcode/36.html":{},"coding/leetcode/36.html#_2":{}},"title":{}}],["boardsiz",{"_index":832,"text":{"coding/leetcode/36.html":{},"coding/leetcode/36.html#_2":{}},"title":{}}],["bodi",{"_index":196,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["boldsymbol",{"_index":1016,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_1":{}},"title":{}}],["boldsymbol{a",{"_index":1024,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_1":{}},"title":{}}],["bool",{"_index":523,"text":{"coding/leetcode/101.html":{},"coding/leetcode/101.html#_2":{},"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{},"coding/leetcode/217.html":{},"coding/leetcode/217.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/242.html":{},"coding/leetcode/242.html#_2":{},"coding/leetcode/36.html":{},"coding/leetcode/36.html#_2":{},"coding/leetcode/9.html":{},"coding/leetcode/9.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["both",{"_index":535,"text":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{}},"title":{}}],["break",{"_index":508,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#_2":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_2":{},"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["brown",{"_index":23,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["build",{"_index":65,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{},"index.html":{},"index.html#commands":{}},"title":{}}],["built",{"_index":292,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["button",{"_index":27,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["button.addeventlistener(\"click",{"_index":34,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["bw_audio",{"_index":371,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["bw_in",{"_index":326,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["bw_out",{"_index":329,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["bw_video",{"_index":366,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["byte",{"_index":307,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["bytes_in",{"_index":324,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["bytes_out",{"_index":325,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["c",{"_index":179,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/13.html#_2":{},"coding/leetcode/136.html":{},"coding/leetcode/136.html#_2":{},"coding/leetcode/28.html":{},"coding/leetcode/28.html#_1":{},"latex/environ.html":{},"latex/environ.html#enumerate":{},"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_4":{},"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_5":{}},"title":{}}],["c++\u63d0\u4f9b\u4e86\u6a21\u677f\u7c7b\u7684\u529f\u80fd\u7528\u6765\u9488\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u5143\u7d20\u63d0\u4f9b\u76f8\u540c\u7684\u529f\u80fd\u3002\u5bf9\u4e8e\u67d0\u4e2aadt",{"_index":466,"text":{"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_3":{}},"title":{}}],["c/c",{"_index":465,"text":{"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_3":{}},"title":{}}],["cach",{"_index":899,"text":{"coding/leetcode/50.html":{},"coding/leetcode/50.html#_2":{},"coding/leetcode/509.html":{},"coding/leetcode/509.html#_3":{},"coding/leetcode/70.html":{},"coding/leetcode/70.html#_2":{}},"title":{}}],["call",{"_index":489,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/119.html":{},"coding/leetcode/119.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#_2":{}},"title":{}}],["callabl",{"_index":994,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["caller",{"_index":488,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/119.html":{},"coding/leetcode/119.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#_2":{}},"title":{}}],["canal",{"_index":596,"text":{"coding/leetcode/125.html":{},"coding/leetcode/125.html#_1":{}},"title":{}}],["cap",{"_index":1087,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_5":{}},"title":{}}],["car",{"_index":599,"text":{"coding/leetcode/125.html":{},"coding/leetcode/125.html#_1":{},"coding/leetcode/242.html":{},"coding/leetcode/242.html#_1":{}},"title":{}}],["case",{"_index":645,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_2":{}},"title":{}}],["cc",{"_index":181,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["cccccc",{"_index":350,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["cd",{"_index":177,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{},"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_4":{}},"title":{}}],["cd%/openssl",{"_index":223,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["cd%/openssl/ssl",{"_index":225,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["cdot",{"_index":732,"text":{"coding/leetcode/204.html":{},"coding/leetcode/204.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["cell",{"_index":494,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{}},"title":{}}],["cellpad",{"_index":297,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["cellspac",{"_index":296,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["chan",{"_index":319,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["chapter",{"_index":1211,"text":{"math/queue-theory/index.html":{},"math/queue-theory/index.html#_1":{}},"title":{"math/queue-theory/chapter-12.html":{}}}],["char",{"_index":604,"text":{"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_2":{},"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{},"coding/leetcode/204.html":{},"coding/leetcode/204.html#_2":{},"coding/leetcode/242.html":{},"coding/leetcode/242.html#_2":{},"coding/leetcode/28.html":{},"coding/leetcode/28.html#_2":{},"coding/leetcode/344.html":{},"coding/leetcode/344.html#_1":{},"coding/leetcode/344.html#_2":{},"coding/leetcode/36.html":{},"coding/leetcode/36.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{},"coding/leetcode/387.html":{},"coding/leetcode/387.html#_2":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#_2":{}},"title":{}}],["chi",{"_index":1067,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["cl",{"_index":182,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["class",{"_index":468,"text":{"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_3":{},"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["client",{"_index":195,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["clientstat",{"_index":412,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["climbstair",{"_index":927,"text":{"coding/leetcode/70.html":{},"coding/leetcode/70.html#_2":{}},"title":{}}],["climbstairs_cach",{"_index":926,"text":{"coding/leetcode/70.html":{},"coding/leetcode/70.html#_2":{}},"title":{}}],["cm",{"_index":634,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["cmxcix",{"_index":641,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["co",{"_index":1122,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["codec",{"_index":315,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["color",{"_index":30,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["colspan",{"_index":303,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["columns",{"_index":536,"text":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{}},"title":{}}],["command",{"_index":53,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{},"index.html":{}},"title":{"index.html#commands":{}}}],["comp",{"_index":748,"text":{"coding/leetcode/217.html":{},"coding/leetcode/217.html#_2":{}},"title":{}}],["comparetwo",{"_index":654,"text":{"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{}},"title":{}}],["conf",{"_index":185,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["conf/nginx.conf",{"_index":186,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["configur",{"_index":74,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{},"index.html":{},"index.html#project-layout":{}},"title":{}}],["const",{"_index":749,"text":{"coding/leetcode/217.html":{},"coding/leetcode/217.html#_2":{}},"title":{}}],["contain",{"_index":45,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["containsdupl",{"_index":750,"text":{"coding/leetcode/217.html":{},"coding/leetcode/217.html#_2":{}},"title":{}}],["copyright",{"_index":216,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["cosh",{"_index":1126,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["cot",{"_index":1124,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["coth",{"_index":1128,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["count",{"_index":786,"text":{"coding/leetcode/315.html":{},"coding/leetcode/315.html#_1":{}},"title":{}}],["countandsay",{"_index":842,"text":{"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{}},"title":{}}],["counter",{"_index":844,"text":{"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{}},"title":{}}],["countprim",{"_index":735,"text":{"coding/leetcode/204.html":{},"coding/leetcode/204.html#_2":{}},"title":{}}],["counts[i",{"_index":787,"text":{"coding/leetcode/315.html":{},"coding/leetcode/315.html#_1":{}},"title":{}}],["countsmal",{"_index":797,"text":{"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{}},"title":{}}],["covid",{"_index":84,"text":{"covid.html":{}},"title":{"covid.html":{},"covid.html#covid-2019-trend":{}}}],["creat",{"_index":57,"text":{"index.html":{},"index.html#commands":{}},"title":{}}],["credit",{"_index":83,"text":{"about.html":{}},"title":{}}],["ctx",{"_index":240,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{}},"title":{}}],["ctype",{"_index":959,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["cup",{"_index":1088,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_5":{}},"title":{}}],["cur",{"_index":501,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#_2":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_2":{},"coding/leetcode/19.html":{},"coding/leetcode/19.html#_2":{},"coding/leetcode/242.html":{},"coding/leetcode/242.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{},"coding/leetcode/387.html":{},"coding/leetcode/387.html#_2":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["cur1",{"_index":657,"text":{"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/28.html":{},"coding/leetcode/28.html#_2":{}},"title":{}}],["cur2",{"_index":658,"text":{"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/28.html":{},"coding/leetcode/28.html#_2":{}},"title":{}}],["cur3",{"_index":742,"text":{"coding/leetcode/206.html":{},"coding/leetcode/206.html#_2":{},"coding/leetcode/28.html":{},"coding/leetcode/28.html#_2":{}},"title":{}}],["curmin",{"_index":678,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{}},"title":{}}],["currentv",{"_index":592,"text":{"coding/leetcode/122.html":{},"coding/leetcode/122.html#_2":{}},"title":{}}],["custom",{"_index":8,"text":{"index.html":{}},"title":{"index.html#customization":{}}}],["cyan",{"_index":16,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["d",{"_index":396,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/13.html#_2":{},"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_4":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_5":{}},"title":{}}],["d.style.display=d.style.display=='none'?'':'non",{"_index":355,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["d=document.getelementbyid",{"_index":354,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["data",{"_index":682,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{}},"title":{}}],["date",{"_index":1155,"text":{"latex/slides.html":{},"latex/slides.html#latex":{}},"title":{}}],["dddddd",{"_index":352,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["debug",{"_index":183,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["deep",{"_index":12,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["def",{"_index":961,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["defin",{"_index":491,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/120.html":{},"coding/leetcode/120.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#_2":{}},"title":{}}],["definit",{"_index":515,"text":{"coding/leetcode/101.html":{},"coding/leetcode/101.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/19.html":{},"coding/leetcode/19.html#_2":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#_2":{},"coding/leetcode/21.html":{},"coding/leetcode/21.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/24.html":{},"coding/leetcode/24.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["deletenod",{"_index":757,"text":{"coding/leetcode/237.html":{},"coding/leetcode/237.html#_2":{}},"title":{}}],["delta",{"_index":1034,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["depth",{"_index":796,"text":{"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{}},"title":{}}],["descript",{"_index":1144,"text":{"latex/environ.html":{},"latex/environ.html#_1":{}},"title":{}}],["dest",{"_index":794,"text":{"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{}},"title":{}}],["det",{"_index":1134,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["dfd_setsiz",{"_index":208,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["dict",{"_index":999,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["differ",{"_index":1008,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["digit",{"_index":920,"text":{"coding/leetcode/66.html":{},"coding/leetcode/66.html#_2":{}},"title":{}}],["digitss",{"_index":921,"text":{"coding/leetcode/66.html":{},"coding/leetcode/66.html#_2":{}},"title":{}}],["dim",{"_index":1133,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["dir",{"_index":55,"text":{"index.html":{},"index.html#commands":{}},"title":{}}],["display:non",{"_index":377,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["div",{"_index":393,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_4":{}},"title":{}}],["doc",{"_index":63,"text":{"index.html":{},"index.html#commands":{},"index.html#project-layout":{}},"title":{}}],["document",{"_index":5,"text":{"index.html":{},"index.html#commands":{},"index.html#project-layout":{},"index.html#welcome-to-mkdocs":{}},"title":{}}],["document.body.dataset.mdcoloracc",{"_index":41,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["document.body.dataset.mdcolorprimari",{"_index":36,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["document.getelementsbyclassname('md",{"_index":51,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["document.queryselectorall(\".gt",{"_index":44,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["document.queryselectorall(\"button[data",{"_index":28,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["documentclass",{"_index":1148,"text":{"latex/slides.html":{},"latex/slides.html#latex":{}},"title":{}}],["dog\",\"racecar\",\"car",{"_index":652,"text":{"coding/leetcode/14.html":{},"coding/leetcode/14.html#_1":{}},"title":{}}],["don't",{"_index":133,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["dot",{"_index":1175,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_1":{},"math/discrete-mathematics/chapter-2.html#ff":{},"math/discrete-mathematics/chapter-2.html#tt":{}},"title":{}}],["doubl",{"_index":897,"text":{"coding/leetcode/50.html":{},"coding/leetcode/50.html#_2":{}},"title":{}}],["downarrow",{"_index":1204,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_4":{}},"title":{}}],["dp",{"_index":730,"text":{"coding/leetcode/198.html":{},"coding/leetcode/198.html#_2":{}},"title":{}}],["dp1",{"_index":578,"text":{"coding/leetcode/120.html":{},"coding/leetcode/120.html#_2":{}},"title":{}}],["dp_j(t)}{\\mathrm",{"_index":1283,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["drop",{"_index":386,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["dt}=0",{"_index":1289,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["dt}=\\lambda_{j",{"_index":1284,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["dx",{"_index":1112,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["e",{"_index":1006,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{}},"title":{}}],["e_k",{"_index":1230,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_5":{}},"title":{}}],["eeeeee",{"_index":381,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["empti",{"_index":362,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["encoding=\"utf",{"_index":267,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["end",{"_index":967,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{},"latex/environ.html":{},"latex/environ.html#enumerate":{},"latex/environ.html#itemize":{},"latex/slides.html":{},"latex/slides.html#latex":{}},"title":{}}],["end{align",{"_index":1207,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_4":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{},"math/queue-theory/chapter-12.html#_6":{},"math/queue-theory/chapter-12.html#_9":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["enumer",{"_index":1143,"text":{"latex/environ.html":{},"latex/environ.html#_1":{},"latex/environ.html#enumerate":{}},"title":{"latex/environ.html#enumerate":{}}}],["epsilon",{"_index":1036,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["epsilonn",{"_index":1037,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["erlang",{"_index":1220,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{},"math/queue-theory/chapter-12.html#_4":{},"math/queue-theory/chapter-12.html#_5":{}},"title":{}}],["error",{"_index":131,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["error_log",{"_index":429,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["eta",{"_index":1040,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["event",{"_index":431,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["except",{"_index":980,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["execut",{"_index":1004,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["exist",{"_index":227,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_7":{}},"title":{}}],["exit",{"_index":71,"text":{"index.html":{},"index.html#commands":{}},"title":{}}],["exp",{"_index":1119,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["expir",{"_index":450,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["extend",{"_index":987,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["f",{"_index":230,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{},"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{},"math/discrete-mathematics/chapter-2.html#_3":{},"math/discrete-mathematics/chapter-2.html#ff":{},"math/discrete-mathematics/chapter-2.html#tt":{}},"title":{}}],["f(0",{"_index":901,"text":{"coding/leetcode/509.html":{},"coding/leetcode/509.html#_1":{}},"title":{}}],["f(1",{"_index":902,"text":{"coding/leetcode/509.html":{},"coding/leetcode/509.html#_1":{}},"title":{}}],["f(2",{"_index":903,"text":{"coding/leetcode/509.html":{},"coding/leetcode/509.html#_1":{}},"title":{}}],["f(3",{"_index":904,"text":{"coding/leetcode/509.html":{},"coding/leetcode/509.html#_1":{}},"title":{}}],["f(4",{"_index":905,"text":{"coding/leetcode/509.html":{},"coding/leetcode/509.html#_1":{}},"title":{}}],["f(i",{"_index":725,"text":{"coding/leetcode/198.html":{},"coding/leetcode/198.html#_2":{}},"title":{}}],["f(n",{"_index":900,"text":{"coding/leetcode/509.html":{},"coding/leetcode/509.html#_1":{}},"title":{}}],["f(t",{"_index":1212,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{}},"title":{}}],["f\\rightarrow",{"_index":1195,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{}},"title":{}}],["f_{\\xi_i}(t",{"_index":1217,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{}},"title":{}}],["failur",{"_index":982,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["fals",{"_index":357,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/101.html":{},"coding/leetcode/101.html#_2":{},"coding/leetcode/125.html":{},"coding/leetcode/125.html#_1":{},"coding/leetcode/125.html#_2":{},"coding/leetcode/217.html":{},"coding/leetcode/217.html#_1":{},"coding/leetcode/217.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_1":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/242.html":{},"coding/leetcode/242.html#_1":{},"coding/leetcode/242.html#_2":{},"coding/leetcode/36.html":{},"coding/leetcode/36.html#_1":{},"coding/leetcode/36.html#_2":{},"coding/leetcode/9.html":{},"coding/leetcode/9.html#_1":{},"coding/leetcode/9.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_1":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["fastcgi",{"_index":201,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["fatal",{"_index":130,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["fcf",{"_index":1225,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_4":{}},"title":{}}],["ff",{"_index":1210,"text":{},"title":{"math/discrete-mathematics/chapter-2.html#ff":{}}}],["fib",{"_index":911,"text":{"coding/leetcode/509.html":{},"coding/leetcode/509.html#_3":{},"coding/leetcode/509.html#_4":{}},"title":{}}],["fib_cach",{"_index":908,"text":{"coding/leetcode/509.html":{},"coding/leetcode/509.html#_3":{}},"title":{}}],["file",{"_index":75,"text":{"index.html":{},"index.html#project-layout":{}},"title":{}}],["fill",{"_index":566,"text":{"coding/leetcode/119.html":{},"coding/leetcode/119.html#_2":{}},"title":{}}],["final",{"_index":966,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["find",{"_index":462,"text":{"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_2":{}},"title":{}}],["firstuniqchar",{"_index":872,"text":{"coding/leetcode/387.html":{},"coding/leetcode/387.html#_2":{}},"title":{}}],["fisher",{"_index":852,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["fl",{"_index":651,"text":{"coding/leetcode/14.html":{},"coding/leetcode/14.html#_1":{}},"title":{}}],["flag",{"_index":496,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#_2":{}},"title":{}}],["flash",{"_index":383,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["flashver",{"_index":421,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["floor($sec",{"_index":395,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["floor($siz",{"_index":402,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["floor($tim",{"_index":392,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["flower\",\"flow\",\"flight",{"_index":650,"text":{"coding/leetcode/14.html":{},"coding/leetcode/14.html#_1":{}},"title":{}}],["foral",{"_index":1102,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_7":{}},"title":{}}],["format",{"_index":404,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["fp",{"_index":317,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["frac",{"_index":1103,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{},"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_4":{}},"title":{}}],["frac{(",{"_index":1389,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{(\\rho_0",{"_index":1386,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{1}{1+\\sum_{n=1}^\\infti",{"_index":1317,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mm1":{}},"title":{}}],["frac{1}{\\sum_{i=0}^{",{"_index":1332,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{\\frac{t(",{"_index":1401,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{\\lambda",{"_index":1298,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["frac{\\lambda(\\lambda",{"_index":1222,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{}},"title":{}}],["frac{\\lambda_0(\\mu_1+\\lambda_1)}{\\mu_1\\mu_2}p_0",{"_index":1300,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["frac{\\lambda_0\\lambda_1\\cdots\\lambda_{j",{"_index":1306,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["frac{\\lambda_0\\lambda_1}{\\mu_1\\mu_3}p_0=\\frac{\\lambda_0\\lambda_1\\lambda_2}{\\mu_1\\mu_2\\mu_3}p_0",{"_index":1304,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["frac{\\lambda_0}{\\mu_2}p_0=\\frac{\\lambda_0\\lambda_1}{\\mu_1\\mu_2}p_0",{"_index":1301,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["frac{\\lambda_1}{\\mu_3}p_1=\\frac{\\lambda_0\\lambda_1(\\mu_2+\\lambda_2)}{\\mu_1\\mu_2\\mu_3}p_0",{"_index":1303,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["frac{\\lambda_{j",{"_index":1293,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["frac{\\mathrm",{"_index":1282,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["frac{\\rho^i_0}{s!s^{i",{"_index":1351,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{\\rho^s_0p_0}{(",{"_index":1353,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{\\rho^s_0p_0}{s!}\\sum_{i=0}^\\infti",{"_index":1363,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{\\rho^s_0p_0}{s!}\\sum_{i=1}^\\infti",{"_index":1365,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{\\rho^{s+1}_0p_0}{(",{"_index":1369,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{\\rho_0",{"_index":1383,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{\\rho_0^i}{(i",{"_index":1375,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{\\rho_0^i}{i!}p_0=\\frac{\\rho_0^i}{i!\\left(t+\\frac{\\rho_0^s}{(",{"_index":1344,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{\\rho_0^i}{s!s^{i",{"_index":1334,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{\\rho_0^i}{s^i",{"_index":1336,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{\\rho_0^sp_0}{(",{"_index":1378,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{\\rho_0^{s+1}(",{"_index":1404,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{\\rho_0^{s+1}p_0}{(",{"_index":1380,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{\\rho_0^{s+1}}{(",{"_index":1385,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{\\sum_{i=0}^",{"_index":1381,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{\\sum_{i=0}^\\infti",{"_index":1393,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{\\sum_{i=1}^",{"_index":1395,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{a}{b",{"_index":1105,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["frac{i\\rho_0^i}{s^i",{"_index":1364,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frac{p_j(t+\\delta",{"_index":1276,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["frac{t(",{"_index":1407,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["frame",{"_index":1150,"text":{"latex/slides.html":{},"latex/slides.html#latex":{}},"title":{}}],["free",{"_index":490,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/119.html":{},"coding/leetcode/119.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#_2":{}},"title":{}}],["freq",{"_index":318,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["full",{"_index":4,"text":{"index.html":{},"index.html#welcome-to-mkdocs":{}},"title":{}}],["fullcach",{"_index":910,"text":{"coding/leetcode/509.html":{},"coding/leetcode/509.html#_3":{}},"title":{}}],["func",{"_index":993,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["funcarg",{"_index":998,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["function",{"_index":35,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{},"index.html":{},"index.html#customization":{}},"title":{}}],["function(button",{"_index":33,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["functup",{"_index":1000,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["g",{"_index":408,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_5":{}},"title":{}}],["gamma",{"_index":1032,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["gener",{"_index":284,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{}},"title":{}}],["geq",{"_index":1089,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_6":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["geqq",{"_index":1090,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_6":{}},"title":{}}],["geqslant",{"_index":1091,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_6":{}},"title":{}}],["get_id",{"_index":968,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["getmin",{"_index":667,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_1":{}},"title":{}}],["getnod",{"_index":753,"text":{"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{}},"title":{}}],["getresult",{"_index":992,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["getrow",{"_index":567,"text":{"coding/leetcode/119.html":{},"coding/leetcode/119.html#_2":{}},"title":{}}],["gg",{"_index":1092,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_6":{}},"title":{}}],["ggg",{"_index":1093,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_6":{}},"title":{}}],["github",{"_index":127,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["green",{"_index":18,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["grey",{"_index":24,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["gt",{"_index":46,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"index.html":{},"index.html#customization":{}},"title":{}}],["guess",{"_index":81,"text":{"about.html":{}},"title":{}}],["h",{"_index":67,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{},"coding/configuration/nginx-rtmp.html#nginx":{},"index.html":{},"index.html#commands":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["h\",\"a\",\"n\",\"n\",\"a\",\"h",{"_index":802,"text":{"coding/leetcode/344.html":{},"coding/leetcode/344.html#_1":{}},"title":{}}],["h\",\"e\",\"l\",\"l\",\"o",{"_index":800,"text":{"coding/leetcode/344.html":{},"coding/leetcode/344.html#_1":{}},"title":{}}],["h.type",{"_index":247,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{}},"title":{}}],["hasattr",{"_index":970,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["hashmap",{"_index":506,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{},"coding/leetcode/387.html":{},"coding/leetcode/387.html#_2":{}},"title":{}}],["hashmap1",{"_index":766,"text":{"coding/leetcode/242.html":{},"coding/leetcode/242.html#_2":{}},"title":{}}],["hashmap2",{"_index":767,"text":{"coding/leetcode/242.html":{},"coding/leetcode/242.html#_2":{}},"title":{}}],["haystack",{"_index":775,"text":{"coding/leetcode/28.html":{},"coding/leetcode/28.html#_1":{},"coding/leetcode/28.html#_2":{}},"title":{}}],["head",{"_index":277,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{},"coding/leetcode/189.html":{},"coding/leetcode/189.html#_2":{},"coding/leetcode/19.html":{},"coding/leetcode/19.html#_2":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/237.html":{},"coding/leetcode/237.html#_1":{},"coding/leetcode/24.html":{},"coding/leetcode/24.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{}},"title":{}}],["height",{"_index":427,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["hello",{"_index":777,"text":{"coding/leetcode/28.html":{},"coding/leetcode/28.html#_1":{}},"title":{}}],["help",{"_index":69,"text":{"index.html":{},"index.html#commands":{}},"title":{}}],["here",{"_index":82,"text":{"about.html":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["hl",{"_index":435,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["hls_fragment",{"_index":438,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["hls_path",{"_index":436,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["home",{"_index":0,"text":{},"title":{"index.html":{}}}],["homepag",{"_index":77,"text":{"index.html":{},"index.html#project-layout":{}},"title":{}}],["hr",{"_index":283,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["href",{"_index":285,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["html",{"_index":262,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["html/index.xsl",{"_index":264,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["http",{"_index":189,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["http://apps.db.ripe.net/search/query.html",{"_index":417,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["http://localhost:8080",{"_index":453,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["http://nginx.org",{"_index":289,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["http://www.w3.org/1999/xsl/transform",{"_index":274,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["http_ssl_modul",{"_index":211,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["https://ftp.pcre.org/pub/pcr",{"_index":141,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["https://github.com/arut/nginx",{"_index":143,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["https://github.com/madler/zlib",{"_index":139,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["https://www.geeksforgeeks.org/python",{"_index":1007,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["i+1",{"_index":1261,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["i=0",{"_index":1324,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["i=1",{"_index":1328,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["i\\leq",{"_index":1346,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["ic",{"_index":636,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["icon",{"_index":43,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["icon.dataset[\"mdcoloracc",{"_index":49,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["id",{"_index":378,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["idl",{"_index":411,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["igor",{"_index":217,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["ii",{"_index":114,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/119.html":{},"coding/leetcode/122.html":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/350.html":{}},"title":{"coding/leetcode/119.html":{},"coding/leetcode/119.html#119-ii":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#122-ii":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#350-ii":{}}}],["iii",{"_index":629,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["iiii",{"_index":621,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["iiint_df(x)\\mathrm",{"_index":1115,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["iint_df(x)\\mathrm",{"_index":1114,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["im",{"_index":637,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["imag",{"_index":80,"text":{"index.html":{},"index.html#project-layout":{}},"title":{}}],["img[data",{"_index":48,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["import",{"_index":957,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["inc",{"_index":219,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["increment",{"_index":739,"text":{"coding/leetcode/204.html":{},"coding/leetcode/204.html#_2":{}},"title":{}}],["index.md",{"_index":76,"text":{"index.html":{},"index.html#project-layout":{}},"title":{}}],["index.xsl",{"_index":263,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["indexof",{"_index":782,"text":{"coding/leetcode/28.html":{},"coding/leetcode/28.html#_1":{}},"title":{}}],["indigo",{"_index":13,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["inf",{"_index":1136,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["info",{"_index":430,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["infti",{"_index":1231,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_5":{},"math/queue-theory/chapter-12.html#_9":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["infty}p(n(t",{"_index":1238,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_6":{}},"title":{}}],["infty}p_j(t",{"_index":1286,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["initi",{"_index":681,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{}},"title":{}}],["insert",{"_index":459,"text":{"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["instal",{"_index":147,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["install_sw",{"_index":232,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["instanti",{"_index":691,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["institut",{"_index":1154,"text":{"latex/slides.html":{},"latex/slides.html#latex":{}},"title":{}}],["int",{"_index":473,"text":{"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_3":{},"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/101.html":{},"coding/leetcode/101.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/119.html":{},"coding/leetcode/119.html#_2":{},"coding/leetcode/120.html":{},"coding/leetcode/120.html#_2":{},"coding/leetcode/121.html":{},"coding/leetcode/121.html#_2":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#_2":{},"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_2":{},"coding/leetcode/136.html":{},"coding/leetcode/136.html#_2":{},"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/189.html":{},"coding/leetcode/189.html#_2":{},"coding/leetcode/19.html":{},"coding/leetcode/19.html#_2":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_2":{},"coding/leetcode/204.html":{},"coding/leetcode/204.html#_2":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#_2":{},"coding/leetcode/21.html":{},"coding/leetcode/21.html#_2":{},"coding/leetcode/217.html":{},"coding/leetcode/217.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/24.html":{},"coding/leetcode/24.html#_2":{},"coding/leetcode/242.html":{},"coding/leetcode/242.html#_2":{},"coding/leetcode/26.html":{},"coding/leetcode/26.html#_1":{},"coding/leetcode/26.html#_2":{},"coding/leetcode/28.html":{},"coding/leetcode/28.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/344.html":{},"coding/leetcode/344.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{},"coding/leetcode/36.html":{},"coding/leetcode/36.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_1":{},"coding/leetcode/384.html#_2":{},"coding/leetcode/387.html":{},"coding/leetcode/387.html#_2":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_2":{},"coding/leetcode/50.html":{},"coding/leetcode/50.html#_2":{},"coding/leetcode/509.html":{},"coding/leetcode/509.html#_3":{},"coding/leetcode/509.html#_4":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#_2":{},"coding/leetcode/7.html":{},"coding/leetcode/7.html#_2":{},"coding/leetcode/70.html":{},"coding/leetcode/70.html#_2":{},"coding/leetcode/779.html":{},"coding/leetcode/779.html#_2":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#_2":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#_2":{},"coding/leetcode/9.html":{},"coding/leetcode/9.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["int_a^bf(x)\\mathrm",{"_index":1111,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["int_max",{"_index":937,"text":{"coding/leetcode/8.html":{},"coding/leetcode/8.html#_1":{},"coding/leetcode/8.html#_2":{}},"title":{}}],["int_min",{"_index":938,"text":{"coding/leetcode/8.html":{},"coding/leetcode/8.html#_1":{},"coding/leetcode/8.html#_2":{}},"title":{}}],["intersect",{"_index":815,"text":{"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{}},"title":{}}],["iota",{"_index":1043,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["ip",{"_index":456,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["ip_i+\\sum_{i=s+1}^\\infti",{"_index":1372,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["ip_i}{\\lambda",{"_index":1394,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["isanagram",{"_index":765,"text":{"coding/leetcode/242.html":{},"coding/leetcode/242.html#_2":{}},"title":{}}],["ismirror",{"_index":524,"text":{"coding/leetcode/101.html":{},"coding/leetcode/101.html#_2":{}},"title":{}}],["ispalindrom",{"_index":610,"text":{"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/9.html":{},"coding/leetcode/9.html#_2":{}},"title":{}}],["issam",{"_index":606,"text":{"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{}},"title":{}}],["issymmetr",{"_index":527,"text":{"coding/leetcode/101.html":{},"coding/leetcode/101.html#_2":{}},"title":{}}],["istext",{"_index":603,"text":{"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{}},"title":{}}],["isvalidbst",{"_index":955,"text":{"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["isvalidsudoku",{"_index":830,"text":{"coding/leetcode/36.html":{},"coding/leetcode/36.html#_2":{}},"title":{}}],["item",{"_index":973,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{},"latex/environ.html":{},"latex/environ.html#_1":{},"latex/environ.html#enumerate":{},"latex/environ.html#itemize":{}},"title":{"latex/environ.html#itemize":{}}}],["iv",{"_index":622,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["ix",{"_index":623,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["j",{"_index":505,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/120.html":{},"coding/leetcode/120.html#_2":{},"coding/leetcode/121.html":{},"coding/leetcode/121.html#_2":{},"coding/leetcode/204.html":{},"coding/leetcode/204.html#_2":{},"coding/leetcode/36.html":{},"coding/leetcode/36.html#_2":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["j)=\\lambda_j\\delta",{"_index":1255,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["java",{"_index":781,"text":{"coding/leetcode/28.html":{},"coding/leetcode/28.html#_1":{}},"title":{}}],["javascript",{"_index":90,"text":{"coding/index.html":{},"coding/index.html#_1":{}},"title":{}}],["join",{"_index":985,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["k",{"_index":409,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/119.html":{},"coding/leetcode/119.html#_1":{},"coding/leetcode/189.html":{},"coding/leetcode/189.html#_1":{},"coding/leetcode/189.html#_2":{},"coding/leetcode/36.html":{},"coding/leetcode/36.html#_2":{},"coding/leetcode/779.html":{},"coding/leetcode/779.html#_1":{},"coding/leetcode/779.html#_2":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{},"math/queue-theory/chapter-12.html#_4":{},"math/queue-theory/chapter-12.html#_5":{}},"title":{"coding/leetcode/779.html":{},"coding/leetcode/779.html#779-k":{}}}],["k)=\\left",{"_index":1221,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{}},"title":{}}],["k\\leq33",{"_index":561,"text":{"coding/leetcode/119.html":{},"coding/leetcode/119.html#_1":{}},"title":{}}],["kappa",{"_index":1044,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["kendal",{"_index":1228,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_5":{}},"title":{}}],["ker",{"_index":1132,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["kill",{"_index":990,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["killablethread",{"_index":986,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["know",{"_index":134,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["kthgrammar",{"_index":934,"text":{"coding/leetcode/779.html":{},"coding/leetcode/779.html#_2":{}},"title":{}}],["kwarg",{"_index":996,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["l",{"_index":613,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/13.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_6":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["l1",{"_index":744,"text":{"coding/leetcode/21.html":{},"coding/leetcode/21.html#_2":{}},"title":{}}],["l2",{"_index":745,"text":{"coding/leetcode/21.html":{},"coding/leetcode/21.html#_2":{}},"title":{}}],["l_q",{"_index":1242,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_6":{}},"title":{}}],["l_q&=\\sum_{i=",{"_index":1359,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["l_q&=\\sum_{i=0}^",{"_index":1371,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["l_q=0",{"_index":1357,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["lambda",{"_index":1046,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{},"math/queue-theory/chapter-12.html#_6":{},"math/queue-theory/chapter-12.html#_9":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["lambda)=\\left",{"_index":1218,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{}},"title":{}}],["lambda_",{"_index":1241,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_6":{}},"title":{}}],["lambda_0=\\lambda_1=\\cdots=\\lambda_n=\\lambda",{"_index":1314,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mm1":{}},"title":{}}],["lambda_0\\delta",{"_index":1263,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["lambda_i",{"_index":1321,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["lambda_j+\\mu_j)\\delta",{"_index":1259,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["lambda_j\\delta",{"_index":1272,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["lambda_n",{"_index":1249,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["lambda_{j",{"_index":1268,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["land",{"_index":1100,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_7":{},"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_2":{},"math/discrete-mathematics/chapter-1.html#_3":{},"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{},"math/discrete-mathematics/chapter-2.html#_4":{},"math/discrete-mathematics/chapter-2.html#tt":{}},"title":{}}],["langl",{"_index":1137,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_9":{}},"title":{}}],["latex",{"_index":1010,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#latex":{},"latex/environ.html":{},"latex/environ.html#_1":{},"latex/index.html":{},"latex/index.html#latex":{},"latex/slides.html":{}},"title":{"latex/cheatsheet.html#latex":{},"latex/environ.html#latex":{},"latex/index.html#latex":{},"latex/slides.html#latex":{}}}],["layout",{"_index":72,"text":{"index.html":{}},"title":{"index.html#project-layout":{}}}],["lceil",{"_index":1139,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_9":{}},"title":{}}],["lcf",{"_index":1226,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_4":{}},"title":{}}],["leetcod",{"_index":88,"text":{"coding/index.html":{},"coding/index.html#_1":{},"coding/leetcode.html":{},"coding/leetcode/387.html":{},"coding/leetcode/387.html#_1":{}},"title":{"coding/leetcode.html#leetcode":{}}}],["leetcode/atoi",{"_index":95,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{}},"title":{}}],["left",{"_index":521,"text":{"coding/leetcode/101.html":{},"coding/leetcode/101.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["left(\\frac{\\mu_j+\\lambda_j}{\\mu_{j+1}}\\right)p_j",{"_index":1292,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["left(\\frac{\\rho_0^i}{(i",{"_index":1396,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["left(\\frac{\\rho_0}{s}\\right)^i\\frac{s}{",{"_index":1366,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["left(i\\frac{\\rho_0^i}{s!s^{i",{"_index":1400,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["left\\langl",{"_index":1177,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_1":{}},"title":{}}],["leftbranch",{"_index":540,"text":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{}},"title":{}}],["leftbranchs",{"_index":546,"text":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{}},"title":{}}],["leftcolumns",{"_index":547,"text":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{}},"title":{}}],["leftrightarrow",{"_index":1160,"text":{"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_2":{},"math/discrete-mathematics/chapter-1.html#_3":{},"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{}},"title":{}}],["leftsiz",{"_index":541,"text":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{}},"title":{}}],["len",{"_index":593,"text":{"coding/leetcode/122.html":{},"coding/leetcode/122.html#_2":{},"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{},"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/26.html":{},"coding/leetcode/26.html#_1":{}},"title":{}}],["len1",{"_index":783,"text":{"coding/leetcode/28.html":{},"coding/leetcode/28.html#_2":{}},"title":{}}],["len2",{"_index":784,"text":{"coding/leetcode/28.html":{},"coding/leetcode/28.html#_2":{}},"title":{}}],["lencach",{"_index":909,"text":{"coding/leetcode/509.html":{},"coding/leetcode/509.html#_3":{}},"title":{}}],["length",{"_index":718,"text":{"coding/leetcode/19.html":{},"coding/leetcode/19.html#_2":{}},"title":{}}],["length($siz",{"_index":410,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["length(nam",{"_index":360,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["leq",{"_index":836,"text":{"coding/leetcode/38.html":{},"coding/leetcode/38.html#_1":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_6":{}},"title":{}}],["leqq",{"_index":1094,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_6":{}},"title":{}}],["leqslant",{"_index":1095,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_6":{}},"title":{}}],["levelord",{"_index":545,"text":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{}},"title":{}}],["lfloor",{"_index":1141,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_9":{}},"title":{}}],["lg",{"_index":1118,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["lh",{"_index":243,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{}},"title":{}}],["light",{"_index":15,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["lim",{"_index":1135,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["lim_{\\delta",{"_index":1275,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["lim_{t\\rightarrow",{"_index":1285,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["lim_{t\\rightarrow\\infti",{"_index":1288,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["lime",{"_index":19,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["link",{"_index":713,"text":{"coding/leetcode/19.html":{},"coding/leetcode/19.html#_2":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#_2":{},"coding/leetcode/21.html":{},"coding/leetcode/21.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/24.html":{},"coding/leetcode/24.html#_2":{}},"title":{}}],["list",{"_index":714,"text":{"coding/leetcode/19.html":{},"coding/leetcode/19.html#_2":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#_2":{},"coding/leetcode/21.html":{},"coding/leetcode/21.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/24.html":{},"coding/leetcode/24.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["listen",{"_index":433,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["listnod",{"_index":715,"text":{"coding/leetcode/19.html":{},"coding/leetcode/19.html#_2":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#_2":{},"coding/leetcode/21.html":{},"coding/leetcode/21.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/237.html":{},"coding/leetcode/237.html#_2":{},"coding/leetcode/24.html":{},"coding/leetcode/24.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["live",{"_index":61,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"index.html":{},"index.html#commands":{}},"title":{}}],["ll",{"_index":778,"text":{"coding/leetcode/28.html":{},"coding/leetcode/28.html#_1":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_6":{}},"title":{}}],["lll",{"_index":1096,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_6":{}},"title":{}}],["ln",{"_index":1117,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["lnot",{"_index":1099,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_7":{},"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_2":{},"math/discrete-mathematics/chapter-1.html#_3":{},"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{},"math/discrete-mathematics/chapter-2.html#_4":{},"math/discrete-mathematics/chapter-2.html#ff":{},"math/discrete-mathematics/chapter-2.html#tt":{}},"title":{}}],["localhost",{"_index":455,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["localstorage.setitem(\"data",{"_index":38,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["locat",{"_index":442,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["log",{"_index":190,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{},"coding/configuration/nginx-rtmp.html#nginx":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["logs/access.log",{"_index":191,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["logs/error.log",{"_index":192,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["logs/nginx.pid",{"_index":188,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["long",{"_index":923,"text":{"coding/leetcode/7.html":{},"coding/leetcode/7.html#_2":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#_2":{},"coding/leetcode/9.html":{},"coding/leetcode/9.html#_2":{}},"title":{}}],["long)(1",{"_index":249,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{}},"title":{}}],["longestcommonprefix",{"_index":659,"text":{"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{}},"title":{}}],["lor",{"_index":1101,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_7":{},"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_2":{},"math/discrete-mathematics/chapter-1.html#_3":{},"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{},"math/discrete-mathematics/chapter-2.html#_4":{},"math/discrete-mathematics/chapter-2.html#ff":{}},"title":{}}],["loveleetcod",{"_index":871,"text":{"coding/leetcode/387.html":{},"coding/leetcode/387.html#_1":{}},"title":{}}],["lviii",{"_index":630,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["m",{"_index":400,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/13.html#_2":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#_1":{},"coding/leetcode/88.html#_2":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_5":{}},"title":{}}],["m/m/",{"_index":1240,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_6":{},"math/queue-theory/chapter-12.html#_8":{},"math/queue-theory/chapter-12.html#markov":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{"math/queue-theory/chapter-12.html#mms":{}}}],["m/m/1",{"_index":1313,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mm1":{}},"title":{"math/queue-theory/chapter-12.html#mm1":{}}}],["m3u8",{"_index":446,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["make",{"_index":135,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["makefile\u6587\u4ef6\u300232\u4f4d\u73af\u5883\u4e0b\u53ef\u4ee5\u76f4\u63a5\u5f00\u59cb\u7f16\u8bd1\uff0c64",{"_index":214,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["malloc",{"_index":486,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/119.html":{},"coding/leetcode/119.html#_2":{},"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_2":{},"coding/leetcode/204.html":{},"coding/leetcode/204.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{},"coding/leetcode/509.html":{},"coding/leetcode/509.html#_3":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#_2":{},"coding/leetcode/70.html":{},"coding/leetcode/70.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["man",{"_index":594,"text":{"coding/leetcode/125.html":{},"coding/leetcode/125.html#_1":{}},"title":{}}],["map",{"_index":736,"text":{"coding/leetcode/204.html":{},"coding/leetcode/204.html#_2":{}},"title":{}}],["mapsiz",{"_index":500,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{}},"title":{}}],["markdown",{"_index":78,"text":{"index.html":{},"index.html#project-layout":{}},"title":{}}],["markov",{"_index":1244,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_7":{},"math/queue-theory/chapter-12.html#markov":{}},"title":{"math/queue-theory/chapter-12.html#markov":{}}}],["match",{"_index":276,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["mathbb",{"_index":1012,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_1":{}},"title":{}}],["mathbb{a",{"_index":1020,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_1":{}},"title":{}}],["mathbf",{"_index":1015,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_1":{}},"title":{}}],["mathbf{a",{"_index":1023,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_1":{}},"title":{}}],["mathcal",{"_index":1011,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_1":{}},"title":{}}],["mathcal{a",{"_index":1019,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_1":{}},"title":{}}],["mathemat",{"_index":642,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["mathfrak",{"_index":1013,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_1":{}},"title":{}}],["mathfrak{a",{"_index":1021,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_1":{}},"title":{}}],["mathit",{"_index":1017,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_1":{}},"title":{}}],["mathit{a",{"_index":1025,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_1":{}},"title":{}}],["mathit{fcf",{"_index":1232,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_5":{}},"title":{}}],["mathrm",{"_index":1018,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_1":{}},"title":{}}],["mathrm{a",{"_index":1026,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_1":{}},"title":{}}],["mathrsf",{"_index":1029,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_1":{}},"title":{}}],["mathscr",{"_index":1028,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_1":{}},"title":{}}],["mathscr{a",{"_index":1027,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_1":{}},"title":{}}],["mathsf",{"_index":1014,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_1":{}},"title":{}}],["mathsf{a",{"_index":1022,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_1":{}},"title":{}}],["matrix",{"_index":873,"text":{"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{},"coding/leetcode/48.html#_2":{}},"title":{}}],["matrixcols",{"_index":885,"text":{"coding/leetcode/48.html":{},"coding/leetcode/48.html#_2":{}},"title":{}}],["matrixs",{"_index":884,"text":{"coding/leetcode/48.html":{},"coding/leetcode/48.html#_2":{}},"title":{}}],["max",{"_index":510,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/121.html":{},"coding/leetcode/121.html#_2":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_2":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#_2":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["max(a",{"_index":492,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{}},"title":{}}],["max(x",{"_index":537,"text":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_2":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#_2":{}},"title":{}}],["max\\left\\{f(i",{"_index":726,"text":{"coding/leetcode/198.html":{},"coding/leetcode/198.html#_2":{}},"title":{}}],["max\\{i",{"_index":1326,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["maxprofit",{"_index":585,"text":{"coding/leetcode/121.html":{},"coding/leetcode/121.html#_2":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#_2":{}},"title":{}}],["mcmxciv",{"_index":632,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["md",{"_index":29,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["memcpi",{"_index":544,"text":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#_2":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#_2":{}},"title":{}}],["memset",{"_index":507,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/119.html":{},"coding/leetcode/119.html#_2":{},"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_2":{},"coding/leetcode/204.html":{},"coding/leetcode/204.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{},"coding/leetcode/36.html":{},"coding/leetcode/36.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{},"coding/leetcode/509.html":{},"coding/leetcode/509.html#_3":{},"coding/leetcode/70.html":{},"coding/leetcode/70.html#_2":{}},"title":{}}],["merg",{"_index":539,"text":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#_2":{}},"title":{}}],["mergetwolist",{"_index":743,"text":{"coding/leetcode/21.html":{},"coding/leetcode/21.html#_2":{}},"title":{}}],["messag",{"_index":70,"text":{"index.html":{},"index.html#commands":{}},"title":{}}],["meta/audio/channel",{"_index":373,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["meta/audio/codec",{"_index":369,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["meta/audio/profil",{"_index":370,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["meta/audio/sample_r",{"_index":372,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["meta/video/codec",{"_index":363,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["meta/video/frame_r",{"_index":368,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["meta/video/level",{"_index":365,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["meta/video/profil",{"_index":364,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["meta/video/width",{"_index":367,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["method",{"_index":991,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["middl",{"_index":340,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["min",{"_index":509,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/120.html":{},"coding/leetcode/120.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["min(a",{"_index":493,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{}},"title":{}}],["min(x",{"_index":573,"text":{"coding/leetcode/120.html":{},"coding/leetcode/120.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{}},"title":{}}],["minimumtot",{"_index":574,"text":{"coding/leetcode/120.html":{},"coding/leetcode/120.html#_2":{}},"title":{}}],["minstack",{"_index":672,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_1":{},"coding/leetcode/155.html#_2":{}},"title":{}}],["minstack\",\"push\",\"push\",\"push\",\"getmin\",\"pop\",\"top\",\"getmin",{"_index":668,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_1":{}},"title":{}}],["minstack.getmin",{"_index":675,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_1":{}},"title":{}}],["minstack.pop",{"_index":676,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_1":{}},"title":{}}],["minstack.push",{"_index":673,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_1":{}},"title":{}}],["minstack.push(0",{"_index":674,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_1":{}},"title":{}}],["minstack.top",{"_index":677,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_1":{}},"title":{}}],["minstackcr",{"_index":684,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{}},"title":{}}],["minstackfre",{"_index":690,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{}},"title":{}}],["minstackfree(obj",{"_index":699,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{}},"title":{}}],["minstackgetmin",{"_index":689,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{}},"title":{}}],["minstackgetmin(obj",{"_index":698,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{}},"title":{}}],["minstackpop",{"_index":687,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{}},"title":{}}],["minstackpop(obj",{"_index":694,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{}},"title":{}}],["minstackpush",{"_index":685,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{}},"title":{}}],["minstackpush(obj",{"_index":693,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{}},"title":{}}],["minstacktop",{"_index":688,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{}},"title":{}}],["minstacktop(obj",{"_index":696,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{}},"title":{}}],["mkdoc",{"_index":2,"text":{"index.html":{},"index.html#commands":{}},"title":{"index.html#welcome-to-mkdocs":{}}}],["mkdocs.org",{"_index":7,"text":{"index.html":{},"index.html#welcome-to-mkdocs":{}},"title":{}}],["mkdocs.yml",{"_index":73,"text":{"index.html":{},"index.html#project-layout":{}},"title":{}}],["mod",{"_index":398,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["modul",{"_index":145,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{},"coding/configuration/nginx-rtmp.html#_2":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["module/ngx_rtmp_core_module.c",{"_index":250,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{}},"title":{}}],["module/ngx_rtmp_flv_module.c",{"_index":236,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{}},"title":{}}],["ms\\do_ms.bat",{"_index":234,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["ms\\do_win64a",{"_index":229,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["ms\\do_win64a.bat",{"_index":228,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["ms\\nt.mak",{"_index":231,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["msg_mask",{"_index":241,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{}},"title":{}}],["msi",{"_index":176,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["msvc",{"_index":235,"text":{"coding/configuration/nginx-rtmp.html":{}},"title":{"coding/configuration/nginx-rtmp.html#msvc":{}}}],["msvc(cl",{"_index":170,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["msys\uff0c\u53ef\u4ee5\u901a\u8fc7mingw",{"_index":146,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["mu",{"_index":1048,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_6":{}},"title":{}}],["mu_1=\\cdots=\\mu_n=\\mu",{"_index":1315,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mm1":{}},"title":{}}],["mu_1\\delta",{"_index":1265,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["mu_i",{"_index":1322,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["mu_j+\\lambda_j)p_j(t",{"_index":1281,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["mu_j+\\lambda_j)p_j(t)=0",{"_index":1290,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["mu_j\\delta",{"_index":1257,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["mu_n",{"_index":1248,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["myatoi",{"_index":946,"text":{"coding/leetcode/8.html":{},"coding/leetcode/8.html#_2":{}},"title":{}}],["mypow",{"_index":898,"text":{"coding/leetcode/50.html":{},"coding/leetcode/50.html#_2":{}},"title":{}}],["n",{"_index":109,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/120.html":{},"coding/leetcode/120.html#_1":{},"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{},"coding/leetcode/19.html":{},"coding/leetcode/19.html#_1":{},"coding/leetcode/19.html#_2":{},"coding/leetcode/204.html":{},"coding/leetcode/204.html#_1":{},"coding/leetcode/204.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_1":{},"coding/leetcode/38.html#_2":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{},"coding/leetcode/50.html":{},"coding/leetcode/50.html#_1":{},"coding/leetcode/50.html#_2":{},"coding/leetcode/509.html":{},"coding/leetcode/509.html#_1":{},"coding/leetcode/509.html#_3":{},"coding/leetcode/509.html#_4":{},"coding/leetcode/70.html":{},"coding/leetcode/70.html#_1":{},"coding/leetcode/70.html#_2":{},"coding/leetcode/779.html":{},"coding/leetcode/779.html#_1":{},"coding/leetcode/779.html#_2":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#_1":{},"coding/leetcode/88.html#_2":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{},"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#ff":{},"math/discrete-mathematics/chapter-2.html#tt":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_6":{},"math/queue-theory/chapter-12.html#_9":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{"coding/leetcode/19.html":{},"coding/leetcode/19.html#19-n":{},"coding/leetcode/50.html":{},"coding/leetcode/50.html#50-powx-n":{}}}],["n(l",{"_index":1233,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_6":{}},"title":{}}],["n(t",{"_index":1254,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["n(t)=j",{"_index":1258,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["n+1",{"_index":653,"text":{"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["n>",{"_index":1358,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["n>0",{"_index":1251,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["n\\geq",{"_index":1250,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["n\\leq",{"_index":1356,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["n\\leq30",{"_index":907,"text":{"coding/leetcode/509.html":{},"coding/leetcode/509.html#_1":{}},"title":{}}],["n_q(l_q",{"_index":1234,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_6":{}},"title":{}}],["naccept",{"_index":314,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["nagaram",{"_index":762,"text":{"coding/leetcode/242.html":{},"coding/leetcode/242.html#_1":{}},"title":{}}],["name",{"_index":56,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{},"index.html":{},"index.html#commands":{}},"title":{}}],["nasm",{"_index":150,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["nasm.ex",{"_index":173,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["nativ",{"_index":257,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{}},"title":{}}],["nav__title')[1].click",{"_index":52,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["nclient",{"_index":341,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["needl",{"_index":776,"text":{"coding/leetcode/28.html":{},"coding/leetcode/28.html#_1":{},"coding/leetcode/28.html#_2":{}},"title":{}}],["new",{"_index":54,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_1":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_1":{},"index.html":{},"index.html#commands":{}},"title":{}}],["newretcols",{"_index":559,"text":{"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{}},"title":{}}],["next",{"_index":716,"text":{"coding/leetcode/19.html":{},"coding/leetcode/19.html#_2":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#_2":{},"coding/leetcode/21.html":{},"coding/leetcode/21.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/237.html":{},"coding/leetcode/237.html#_2":{},"coding/leetcode/24.html":{},"coding/leetcode/24.html#_2":{},"coding/leetcode/509.html":{},"coding/leetcode/509.html#_4":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["ngcolor",{"_index":380,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["nginx",{"_index":126,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{},"coding/configuration/nginx-rtmp.html#_2":{},"coding/configuration/nginx-rtmp.html#msvc":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{"coding/configuration/nginx-rtmp.html#nginx":{}}}],["nginx.conf",{"_index":261,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["nginx.ex",{"_index":194,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["nginx\u5e76\u6dfb\u52a0rtmp",{"_index":91,"text":{"coding/configuration.html":{},"coding/configuration.html#_2":{},"coding/configuration/nginx-rtmp.html":{}},"title":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginxrtmp":{}}}],["nginx\u7684\u6e90\u4ee3\u7801\u76ee\u5f55\uff0c\u5207\u6362\u5230c",{"_index":178,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["ngx_rtmp_prepare_messag",{"_index":238,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{}},"title":{}}],["ni",{"_index":1075,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_5":{}},"title":{}}],["nmake",{"_index":129,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{},"coding/configuration/nginx-rtmp.html#msvc":{}},"title":{}}],["node",{"_index":518,"text":{"coding/leetcode/101.html":{},"coding/leetcode/101.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/237.html":{},"coding/leetcode/237.html#_1":{},"coding/leetcode/237.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["none",{"_index":1003,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["note",{"_index":484,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/119.html":{},"coding/leetcode/119.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#_2":{}},"title":{}}],["nu",{"_index":1049,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["null",{"_index":244,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{},"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/101.html":{},"coding/leetcode/101.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{},"coding/leetcode/19.html":{},"coding/leetcode/19.html#_2":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#_1":{},"coding/leetcode/206.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{},"coding/leetcode/509.html":{},"coding/leetcode/509.html#_3":{},"coding/leetcode/70.html":{},"coding/leetcode/70.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["null,null,null,nul",{"_index":670,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_1":{}},"title":{}}],["num",{"_index":478,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_1":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/136.html":{},"coding/leetcode/136.html#_2":{},"coding/leetcode/189.html":{},"coding/leetcode/189.html#_2":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_2":{},"coding/leetcode/217.html":{},"coding/leetcode/217.html#_2":{},"coding/leetcode/26.html":{},"coding/leetcode/26.html#_1":{},"coding/leetcode/26.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_1":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_1":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["number($sizen",{"_index":405,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["numrow",{"_index":551,"text":{"coding/leetcode/118.html":{},"coding/leetcode/118.html#_1":{},"coding/leetcode/118.html#_2":{}},"title":{}}],["nums.length",{"_index":723,"text":{"coding/leetcode/198.html":{},"coding/leetcode/198.html#_1":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_1":{}},"title":{}}],["nums1",{"_index":806,"text":{"coding/leetcode/350.html":{},"coding/leetcode/350.html#_1":{},"coding/leetcode/350.html#_2":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#_1":{},"coding/leetcode/88.html#_2":{}},"title":{}}],["nums1siz",{"_index":816,"text":{"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#_2":{}},"title":{}}],["nums2",{"_index":808,"text":{"coding/leetcode/350.html":{},"coding/leetcode/350.html#_1":{},"coding/leetcode/350.html#_2":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#_1":{},"coding/leetcode/88.html#_2":{}},"title":{}}],["nums2siz",{"_index":817,"text":{"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#_2":{}},"title":{}}],["nums[0",{"_index":481,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_1":{}},"title":{}}],["nums[1",{"_index":482,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_1":{}},"title":{}}],["nums[i",{"_index":724,"text":{"coding/leetcode/198.html":{},"coding/leetcode/198.html#_1":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_1":{}},"title":{}}],["numssiz",{"_index":498,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/136.html":{},"coding/leetcode/136.html#_2":{},"coding/leetcode/189.html":{},"coding/leetcode/189.html#_2":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_2":{},"coding/leetcode/217.html":{},"coding/leetcode/217.html#_2":{},"coding/leetcode/26.html":{},"coding/leetcode/26.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["o",{"_index":1052,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["o\",\"l\",\"l\",\"e\",\"h",{"_index":801,"text":{"coding/leetcode/344.html":{},"coding/leetcode/344.html#_1":{}},"title":{}}],["o(1",{"_index":708,"text":{"coding/leetcode/189.html":{},"coding/leetcode/189.html#_1":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_1":{},"coding/leetcode/26.html":{},"coding/leetcode/26.html#_1":{},"coding/leetcode/344.html":{},"coding/leetcode/344.html#_1":{}},"title":{}}],["o(k",{"_index":562,"text":{"coding/leetcode/119.html":{},"coding/leetcode/119.html#_1":{}},"title":{}}],["o(n",{"_index":572,"text":{"coding/leetcode/120.html":{},"coding/leetcode/120.html#_1":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_1":{}},"title":{}}],["obj",{"_index":686,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["objs/nginx.ex",{"_index":260,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["odot",{"_index":1072,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_4":{}},"title":{}}],["oint_df(x)\\mathrm",{"_index":1113,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["oldretcols",{"_index":557,"text":{"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{}},"title":{}}],["omega",{"_index":1070,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["onclick",{"_index":353,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["openssl",{"_index":137,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["openssl_opt",{"_index":226,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["openssldir",{"_index":224,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["oplsubseteqqu",{"_index":1079,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_5":{}},"title":{}}],["oplu",{"_index":1073,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_4":{}},"title":{}}],["opt",{"_index":207,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["orang",{"_index":22,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["origin",{"_index":856,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{},"coding/leetcode/9.html":{},"coding/leetcode/9.html#_2":{}},"title":{}}],["otim",{"_index":1074,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_4":{}},"title":{}}],["out",{"_index":245,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["p",{"_index":601,"text":{"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{},"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_2":{},"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{},"math/discrete-mathematics/chapter-2.html#_4":{}},"title":{}}],["p(n(t+\\delta",{"_index":1252,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["p(n=n)=\\rho^n(1",{"_index":1320,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mm1":{}},"title":{}}],["p=q",{"_index":1202,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_4":{}},"title":{}}],["p\\downarrow",{"_index":1208,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_4":{}},"title":{}}],["p\\land",{"_index":1162,"text":{"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_2":{},"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{},"math/discrete-mathematics/chapter-2.html#_4":{}},"title":{}}],["p\\leftrightarrow",{"_index":1165,"text":{"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_2":{},"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{}},"title":{}}],["p\\lor",{"_index":1163,"text":{"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_2":{},"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{},"math/discrete-mathematics/chapter-2.html#_4":{}},"title":{}}],["p\\rightarrow",{"_index":1164,"text":{"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_2":{},"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{},"math/discrete-mathematics/chapter-2.html#_4":{}},"title":{}}],["p\\uparrow",{"_index":1206,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_4":{}},"title":{}}],["p_0",{"_index":1296,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{},"math/queue-theory/chapter-12.html#mm1":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["p_0&=\\frac{1}{1+\\sum_{n=1}^\\infti",{"_index":1330,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["p_0(t+\\delta",{"_index":1262,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["p_0=\\frac{1}{1+\\sum_{n=1}^\\infti",{"_index":1311,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{},"math/queue-theory/chapter-12.html#mm1":{}},"title":{}}],["p_1",{"_index":1174,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_1":{},"math/discrete-mathematics/chapter-2.html#ff":{},"math/discrete-mathematics/chapter-2.html#tt":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["p_1=\\frac{\\lambda_0}{\\mu_1}p_0",{"_index":1295,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["p_1\\land",{"_index":1197,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#tt":{}},"title":{}}],["p_1\\lor",{"_index":1200,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#ff":{}},"title":{}}],["p_2&=\\left(\\frac{\\mu_1+\\lambda_1}{\\mu_2}\\right)p_1",{"_index":1297,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["p_2\\land",{"_index":1198,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#tt":{}},"title":{}}],["p_2\\lor",{"_index":1201,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#ff":{}},"title":{}}],["p_3&=\\left(\\frac{\\mu_2+\\lambda_2}{\\mu_3}\\right)p_2",{"_index":1302,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["p_d",{"_index":1239,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_6":{}},"title":{}}],["p_d=\\sum_{i=s}^\\infti",{"_index":1349,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["p_i",{"_index":1199,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#ff":{},"math/discrete-mathematics/chapter-2.html#tt":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["p_i=\\frac{\\lambda_0\\lambda_1\\cdots\\lambda_{i",{"_index":1342,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["p_j",{"_index":1287,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["p_j(t)}{\\delta",{"_index":1277,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["p_j(t+\\delta",{"_index":1267,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["p_n",{"_index":1176,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_1":{},"math/discrete-mathematics/chapter-2.html#ff":{},"math/discrete-mathematics/chapter-2.html#tt":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_6":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["p_n=p(n=n)=\\lim_{t\\rightarrow",{"_index":1237,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_6":{}},"title":{}}],["p_n\\right\\rangl",{"_index":1178,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_1":{}},"title":{}}],["p_{j+1",{"_index":1291,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["page",{"_index":79,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"index.html":{},"index.html#project-layout":{}},"title":{}}],["pageurl",{"_index":422,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["panama",{"_index":597,"text":{"coding/leetcode/125.html":{},"coding/leetcode/125.html#_1":{}},"title":{}}],["param",{"_index":323,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["param_1",{"_index":866,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["param_2",{"_index":868,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["param_3",{"_index":695,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{}},"title":{}}],["param_4",{"_index":697,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{}},"title":{}}],["partial",{"_index":1116,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["path",{"_index":175,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["pcre",{"_index":140,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["pcre\u3001zlib\u3001openssl",{"_index":213,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["perl",{"_index":165,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["perl.ex",{"_index":172,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["perl>=5.30",{"_index":151,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["persec",{"_index":328,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["phi",{"_index":1064,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["pi",{"_index":1053,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["pid",{"_index":187,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["pink",{"_index":10,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["plan",{"_index":595,"text":{"coding/leetcode/125.html":{},"coding/leetcode/125.html#_1":{}},"title":{}}],["play",{"_index":336,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["pluson",{"_index":919,"text":{"coding/leetcode/66.html":{},"coding/leetcode/66.html#_2":{}},"title":{}}],["poisson",{"_index":1216,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{},"math/queue-theory/chapter-12.html#_5":{},"math/queue-theory/chapter-12.html#_7":{}},"title":{"math/queue-theory/chapter-12.html#poisson":{}}}],["pop",{"_index":665,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_1":{}},"title":{}}],["positions1",{"_index":834,"text":{"coding/leetcode/36.html":{},"coding/leetcode/36.html#_2":{}},"title":{}}],["positions2",{"_index":835,"text":{"coding/leetcode/36.html":{},"coding/leetcode/36.html#_2":{}},"title":{}}],["pow(x",{"_index":108,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{},"coding/leetcode/50.html":{},"coding/leetcode/50.html#_1":{}},"title":{"coding/leetcode/50.html":{},"coding/leetcode/50.html#50-powx-n":{}}}],["ppt\u901a\u5e38\u663e\u793appt",{"_index":1151,"text":{"latex/slides.html":{},"latex/slides.html#latex":{}},"title":{}}],["prefix",{"_index":184,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["price",{"_index":586,"text":{"coding/leetcode/121.html":{},"coding/leetcode/121.html#_2":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#_2":{}},"title":{}}],["prices.length",{"_index":590,"text":{"coding/leetcode/122.html":{},"coding/leetcode/122.html#_1":{}},"title":{}}],["prices[i",{"_index":591,"text":{"coding/leetcode/122.html":{},"coding/leetcode/122.html#_1":{}},"title":{}}],["pricess",{"_index":587,"text":{"coding/leetcode/121.html":{},"coding/leetcode/121.html#_2":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#_2":{}},"title":{}}],["primari",{"_index":31,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["primary\",this.dataset.mdcolorprimari",{"_index":39,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["print",{"_index":68,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{},"index.html":{},"index.html#commands":{}},"title":{}}],["print(nums[i",{"_index":771,"text":{"coding/leetcode/26.html":{},"coding/leetcode/26.html#_1":{}},"title":{}}],["privat",{"_index":470,"text":{"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_3":{}},"title":{}}],["prod_i^n",{"_index":1108,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["prod_{i=0}^{n}\\frac{\\lambda_{i",{"_index":1312,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["prod_{i=0}^{n}\\frac{\\lambda}{\\max\\{i",{"_index":1331,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["prod_{i=0}^{n}\\frac{\\lambda}{\\mu",{"_index":1316,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mm1":{}},"title":{}}],["prod_{i}^{n",{"_index":1109,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["profit",{"_index":588,"text":{"coding/leetcode/121.html":{},"coding/leetcode/121.html#_2":{}},"title":{}}],["project",{"_index":58,"text":{"index.html":{},"index.html#commands":{}},"title":{"index.html#project-layout":{}}}],["prompt",{"_index":258,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{}},"title":{}}],["protect",{"_index":476,"text":{"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_3":{}},"title":{}}],["provid",{"_index":989,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["proxi",{"_index":199,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["ps",{"_index":1227,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_4":{}},"title":{}}],["psi",{"_index":1068,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["public",{"_index":477,"text":{"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_3":{}},"title":{}}],["publish",{"_index":413,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["purpl",{"_index":11,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["push",{"_index":664,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_1":{}},"title":{}}],["push(x",{"_index":666,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_1":{}},"title":{}}],["py_object",{"_index":978,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["python",{"_index":89,"text":{"coding/index.html":{},"coding/index.html#_1":{},"coding/python.html":{},"coding/python.html#_2":{},"coding/python/killable-thread.html":{}},"title":{"coding/python.html#python":{},"coding/python/killable-thread.html#python":{}}}],["pythonapi",{"_index":977,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["pythreadstate_setasyncexc",{"_index":956,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["q",{"_index":1161,"text":{"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_2":{},"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{},"math/discrete-mathematics/chapter-2.html#_4":{}},"title":{}}],["q)\\land",{"_index":1187,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{}},"title":{}}],["q)\\leftrightarrow",{"_index":1189,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{}},"title":{}}],["q)\\lor",{"_index":1184,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{}},"title":{}}],["q)\\rightarrow",{"_index":1192,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{}},"title":{}}],["q\\land",{"_index":1188,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{}},"title":{}}],["q\\leftrightarrow",{"_index":1190,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{}},"title":{}}],["q\\lor",{"_index":1186,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{}},"title":{}}],["q\\rightarrow",{"_index":1191,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{}},"title":{}}],["qquad",{"_index":1323,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["qsort",{"_index":751,"text":{"coding/leetcode/217.html":{},"coding/leetcode/217.html#_2":{}},"title":{}}],["r",{"_index":1185,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{}},"title":{}}],["r)\\land",{"_index":1196,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{}},"title":{}}],["race",{"_index":598,"text":{"coding/leetcode/125.html":{},"coding/leetcode/125.html#_1":{}},"title":{}}],["rais",{"_index":981,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["raise_except",{"_index":974,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["rand",{"_index":863,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["random",{"_index":858,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["rangl",{"_index":1138,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_9":{}},"title":{}}],["rank",{"_index":471,"text":{"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_3":{}},"title":{}}],["rat",{"_index":763,"text":{"coding/leetcode/242.html":{},"coding/leetcode/242.html#_1":{}},"title":{}}],["rceil",{"_index":1140,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_9":{}},"title":{}}],["re",{"_index":976,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["rec",{"_index":558,"text":{"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["rec_siz",{"_index":662,"text":{"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{}},"title":{}}],["recur",{"_index":564,"text":{"coding/leetcode/119.html":{},"coding/leetcode/119.html#_2":{}},"title":{}}],["red",{"_index":9,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["refer",{"_index":483,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_1":{},"coding/leetcode/101.html":{},"coding/leetcode/101.html#_1":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_1":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_1":{},"coding/leetcode/119.html":{},"coding/leetcode/119.html#_1":{},"coding/leetcode/120.html":{},"coding/leetcode/120.html#_1":{},"coding/leetcode/121.html":{},"coding/leetcode/121.html#_1":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#_1":{},"coding/leetcode/125.html":{},"coding/leetcode/125.html#_1":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/136.html":{},"coding/leetcode/136.html#_1":{},"coding/leetcode/14.html":{},"coding/leetcode/14.html#_1":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_1":{},"coding/leetcode/189.html":{},"coding/leetcode/189.html#_1":{},"coding/leetcode/19.html":{},"coding/leetcode/19.html#_1":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_1":{},"coding/leetcode/204.html":{},"coding/leetcode/204.html#_1":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#_1":{},"coding/leetcode/21.html":{},"coding/leetcode/21.html#_1":{},"coding/leetcode/217.html":{},"coding/leetcode/217.html#_1":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_1":{},"coding/leetcode/237.html":{},"coding/leetcode/237.html#_1":{},"coding/leetcode/24.html":{},"coding/leetcode/24.html#_1":{},"coding/leetcode/242.html":{},"coding/leetcode/242.html#_1":{},"coding/leetcode/26.html":{},"coding/leetcode/26.html#_1":{},"coding/leetcode/28.html":{},"coding/leetcode/28.html#_1":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_1":{},"coding/leetcode/344.html":{},"coding/leetcode/344.html#_1":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#_1":{},"coding/leetcode/36.html":{},"coding/leetcode/36.html#_1":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_1":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_1":{},"coding/leetcode/384.html#_2":{},"coding/leetcode/387.html":{},"coding/leetcode/387.html#_1":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_1":{},"coding/leetcode/50.html":{},"coding/leetcode/50.html#_1":{},"coding/leetcode/509.html":{},"coding/leetcode/509.html#_1":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#_1":{},"coding/leetcode/7.html":{},"coding/leetcode/7.html#_1":{},"coding/leetcode/70.html":{},"coding/leetcode/70.html#_1":{},"coding/leetcode/779.html":{},"coding/leetcode/779.html#_1":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#_1":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#_1":{},"coding/leetcode/9.html":{},"coding/leetcode/9.html#_1":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_1":{}},"title":{}}],["releas",{"_index":128,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["reload",{"_index":62,"text":{"index.html":{},"index.html#commands":{}},"title":{}}],["remov",{"_index":460,"text":{"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_2":{}},"title":{}}],["removedupl",{"_index":772,"text":{"coding/leetcode/26.html":{},"coding/leetcode/26.html#_2":{}},"title":{}}],["removeduplicates(num",{"_index":770,"text":{"coding/leetcode/26.html":{},"coding/leetcode/26.html#_1":{}},"title":{}}],["removenthfromend",{"_index":717,"text":{"coding/leetcode/19.html":{},"coding/leetcode/19.html#_2":{}},"title":{}}],["reset",{"_index":855,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["respect",{"_index":969,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["result",{"_index":1002,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["ret",{"_index":502,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/119.html":{},"coding/leetcode/119.html#_2":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_2":{},"coding/leetcode/136.html":{},"coding/leetcode/136.html#_2":{},"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{},"coding/leetcode/204.html":{},"coding/leetcode/204.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{},"coding/leetcode/50.html":{},"coding/leetcode/50.html#_2":{},"coding/leetcode/509.html":{},"coding/leetcode/509.html#_4":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#_2":{},"coding/leetcode/7.html":{},"coding/leetcode/7.html#_2":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["retcur",{"_index":843,"text":{"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{}},"title":{}}],["retsiz",{"_index":556,"text":{"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["return",{"_index":356,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/101.html":{},"coding/leetcode/101.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/119.html":{},"coding/leetcode/119.html#_2":{},"coding/leetcode/120.html":{},"coding/leetcode/120.html#_2":{},"coding/leetcode/121.html":{},"coding/leetcode/121.html#_2":{},"coding/leetcode/122.html":{},"coding/leetcode/122.html#_2":{},"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_2":{},"coding/leetcode/136.html":{},"coding/leetcode/136.html#_2":{},"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/189.html":{},"coding/leetcode/189.html#_2":{},"coding/leetcode/19.html":{},"coding/leetcode/19.html#_2":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_2":{},"coding/leetcode/204.html":{},"coding/leetcode/204.html#_2":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#_2":{},"coding/leetcode/21.html":{},"coding/leetcode/21.html#_2":{},"coding/leetcode/217.html":{},"coding/leetcode/217.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/24.html":{},"coding/leetcode/24.html#_2":{},"coding/leetcode/242.html":{},"coding/leetcode/242.html#_2":{},"coding/leetcode/26.html":{},"coding/leetcode/26.html#_2":{},"coding/leetcode/28.html":{},"coding/leetcode/28.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/344.html":{},"coding/leetcode/344.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{},"coding/leetcode/36.html":{},"coding/leetcode/36.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{},"coding/leetcode/387.html":{},"coding/leetcode/387.html#_2":{},"coding/leetcode/50.html":{},"coding/leetcode/50.html#_2":{},"coding/leetcode/509.html":{},"coding/leetcode/509.html#_3":{},"coding/leetcode/509.html#_4":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#_2":{},"coding/leetcode/7.html":{},"coding/leetcode/7.html#_2":{},"coding/leetcode/70.html":{},"coding/leetcode/70.html#_2":{},"coding/leetcode/779.html":{},"coding/leetcode/779.html#_2":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#_2":{},"coding/leetcode/9.html":{},"coding/leetcode/9.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{},"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["returncol",{"_index":550,"text":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{}},"title":{}}],["returncolumns",{"_index":534,"text":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{}},"title":{}}],["returns",{"_index":499,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/119.html":{},"coding/leetcode/119.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#_2":{}},"title":{}}],["revers",{"_index":709,"text":{"coding/leetcode/189.html":{},"coding/leetcode/189.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/7.html":{},"coding/leetcode/7.html#_2":{}},"title":{}}],["reverselist",{"_index":741,"text":{"coding/leetcode/206.html":{},"coding/leetcode/206.html#_2":{}},"title":{}}],["reversestr",{"_index":803,"text":{"coding/leetcode/344.html":{},"coding/leetcode/344.html#_2":{}},"title":{}}],["rfloor",{"_index":1142,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_9":{}},"title":{}}],["rho",{"_index":1056,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_6":{},"math/queue-theory/chapter-12.html#mm1":{}},"title":{}}],["rho)}\\frac{\\rho_0/s}{1",{"_index":1367,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["rho^n}=1",{"_index":1319,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mm1":{}},"title":{}}],["rho^n}=\\frac{1}{\\sum_{n=0}^\\infti",{"_index":1318,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mm1":{}},"title":{}}],["rho_0",{"_index":1339,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["rho_0)^2",{"_index":1370,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["rho_0)t+\\rho_0^",{"_index":1355,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["rho_0)}=\\frac{\\rho^s_0}{(",{"_index":1354,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["rho_0)}\\right",{"_index":1345,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["rho_0)}\\right)}\\right",{"_index":1398,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["rho_0)}{(",{"_index":1390,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["rho_0)}{\\lambda(t(",{"_index":1409,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["rho_0)}{t(",{"_index":1402,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["rho_0+1)/(",{"_index":1405,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["rho_0/",{"_index":1368,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["rho_0=\\frac{\\lambda}{\\mu",{"_index":1329,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["rho_0^",{"_index":1403,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["rho_0^s}}{\\lambda",{"_index":1406,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["rho_0^{s+1}(",{"_index":1408,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["rho_0^{s+1}}{(",{"_index":1388,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["right",{"_index":522,"text":{"coding/leetcode/101.html":{},"coding/leetcode/101.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["rightarrow",{"_index":1159,"text":{"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_2":{},"math/discrete-mathematics/chapter-1.html#_3":{},"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{},"math/discrete-mathematics/chapter-2.html#_4":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["rightbranch",{"_index":542,"text":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{}},"title":{}}],["rightbranchs",{"_index":548,"text":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{}},"title":{}}],["rightcolumns",{"_index":549,"text":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{}},"title":{}}],["rightsiz",{"_index":543,"text":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{}},"title":{}}],["rmtp",{"_index":142,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["rob",{"_index":729,"text":{"coding/leetcode/198.html":{},"coding/leetcode/198.html#_2":{}},"title":{}}],["roman",{"_index":268,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["romantoint",{"_index":643,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_2":{}},"title":{}}],["root",{"_index":441,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/101.html":{},"coding/leetcode/101.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["root1",{"_index":525,"text":{"coding/leetcode/101.html":{},"coding/leetcode/101.html#_2":{}},"title":{}}],["root2",{"_index":526,"text":{"coding/leetcode/101.html":{},"coding/leetcode/101.html#_2":{}},"title":{}}],["rotat",{"_index":710,"text":{"coding/leetcode/189.html":{},"coding/leetcode/189.html#_2":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_2":{}},"title":{}}],["rowindex",{"_index":565,"text":{"coding/leetcode/119.html":{},"coding/leetcode/119.html#_2":{}},"title":{}}],["rtmp",{"_index":144,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{},"coding/configuration/nginx-rtmp.html#_2":{},"coding/configuration/nginx-rtmp.html#msvc":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["rtmp/built",{"_index":293,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["rtmp/compil",{"_index":294,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["rtmp/nginx_rtmp_vers",{"_index":288,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["rtmp/nginx_vers",{"_index":290,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["rtmp/pid",{"_index":291,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["rtmp/uptim",{"_index":331,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["rtmp://localhost:1935/l",{"_index":452,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["rtmp_stat",{"_index":443,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["rtmp_stat_stylesheet",{"_index":444,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["run",{"_index":964,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["s",{"_index":239,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_2":{},"coding/leetcode/242.html":{},"coding/leetcode/242.html#_1":{},"coding/leetcode/242.html#_2":{},"coding/leetcode/344.html":{},"coding/leetcode/344.html#_2":{},"coding/leetcode/387.html":{},"coding/leetcode/387.html#_1":{},"coding/leetcode/387.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_6":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["s)\\frac{\\rho^i_0}{s!s^{i",{"_index":1362,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["s)p_i",{"_index":1361,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["s1",{"_index":607,"text":{"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{}},"title":{}}],["s2",{"_index":608,"text":{"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{}},"title":{}}],["s\\}\\mu",{"_index":1327,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["sa",{"_index":254,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{}},"title":{}}],["sa2",{"_index":255,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{}},"title":{}}],["sbin",{"_index":193,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["scgi",{"_index":203,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["sdk",{"_index":158,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["search",{"_index":463,"text":{"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_2":{}},"title":{}}],["searchtext",{"_index":419,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["sec",{"_index":391,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["sed.ex",{"_index":174,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["seed",{"_index":861,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["select",{"_index":282,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["self",{"_index":963,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["serv",{"_index":59,"text":{"index.html":{},"index.html#commands":{}},"title":{}}],["server",{"_index":64,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"index.html":{},"index.html#commands":{}},"title":{}}],["set",{"_index":458,"text":{"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_2":{}},"title":{}}],["share",{"_index":222,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["showsiz",{"_index":321,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["showtim",{"_index":330,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["shuffl",{"_index":859,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["sigma",{"_index":1058,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["sim",{"_index":1097,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_6":{}},"title":{}}],["sin",{"_index":1121,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["singlenumb",{"_index":649,"text":{"coding/leetcode/136.html":{},"coding/leetcode/136.html#_2":{}},"title":{}}],["singli",{"_index":712,"text":{"coding/leetcode/19.html":{},"coding/leetcode/19.html#_2":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#_2":{},"coding/leetcode/21.html":{},"coding/leetcode/21.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/24.html":{},"coding/leetcode/24.html#_2":{}},"title":{}}],["sinh",{"_index":1125,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["site",{"_index":66,"text":{"index.html":{},"index.html#commands":{}},"title":{}}],["size",{"_index":316,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["sizen",{"_index":401,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["sizeof",{"_index":503,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{},"coding/leetcode/119.html":{},"coding/leetcode/119.html#_2":{},"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_2":{},"coding/leetcode/204.html":{},"coding/leetcode/204.html#_2":{},"coding/leetcode/217.html":{},"coding/leetcode/217.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{},"coding/leetcode/36.html":{},"coding/leetcode/36.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{},"coding/leetcode/509.html":{},"coding/leetcode/509.html#_3":{},"coding/leetcode/66.html":{},"coding/leetcode/66.html#_2":{},"coding/leetcode/70.html":{},"coding/leetcode/70.html#_2":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["sleep",{"_index":984,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["sockaddr",{"_index":253,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{}},"title":{}}],["solut",{"_index":848,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_1":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["solution(num",{"_index":849,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_1":{}},"title":{}}],["solution.reset",{"_index":851,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_1":{}},"title":{}}],["solution.shuffl",{"_index":850,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_1":{}},"title":{}}],["solutioncr",{"_index":854,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["solutioncreate(num",{"_index":865,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["solutionfre",{"_index":864,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["solutionfree(obj",{"_index":870,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["solutionreset",{"_index":857,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["solutionreset(obj",{"_index":867,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["solutionshuffl",{"_index":860,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["solutionshuffle(obj",{"_index":869,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["sort",{"_index":464,"text":{"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_2":{}},"title":{}}],["sp_i",{"_index":1373,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["sq",{"_index":738,"text":{"coding/leetcode/204.html":{},"coding/leetcode/204.html#_2":{}},"title":{}}],["sqrt",{"_index":734,"text":{"coding/leetcode/204.html":{},"coding/leetcode/204.html#_2":{}},"title":{}}],["sqrt[x]{i",{"_index":1110,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["srand",{"_index":862,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["src",{"_index":795,"text":{"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{}},"title":{}}],["src/os/win32/ngx_win32_config.h",{"_index":136,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["ssize",{"_index":804,"text":{"coding/leetcode/344.html":{},"coding/leetcode/344.html#_2":{}},"title":{}}],["start",{"_index":60,"text":{"coding/leetcode/204.html":{},"coding/leetcode/204.html#_2":{},"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{},"index.html":{},"index.html#commands":{}},"title":{}}],["state",{"_index":309,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["statist",{"_index":279,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["step",{"_index":773,"text":{"coding/leetcode/26.html":{},"coding/leetcode/26.html#_2":{}},"title":{}}],["stop",{"_index":457,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["str",{"_index":660,"text":{"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{},"coding/leetcode/8.html":{},"coding/leetcode/8.html#_2":{}},"title":{}}],["str1",{"_index":655,"text":{"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{}},"title":{}}],["str2",{"_index":656,"text":{"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{}},"title":{}}],["strawberri",{"_index":167,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["strcpi",{"_index":845,"text":{"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{}},"title":{}}],["stream",{"_index":338,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["streamstat",{"_index":375,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["string",{"_index":359,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["strlen",{"_index":611,"text":{"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{},"coding/leetcode/28.html":{},"coding/leetcode/28.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{}},"title":{}}],["strssize",{"_index":661,"text":{"coding/leetcode/14.html":{},"coding/leetcode/14.html#_2":{}},"title":{}}],["strstr",{"_index":774,"text":{"coding/leetcode/28.html":{},"coding/leetcode/28.html#_1":{},"coding/leetcode/28.html#_2":{}},"title":{"coding/leetcode/28.html":{},"coding/leetcode/28.html#28-strstr":{}}}],["strstr(leetcod",{"_index":103,"text":{"coding/leetcode.html":{},"coding/leetcode.html#leetcode":{}},"title":{}}],["struct",{"_index":252,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{},"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/101.html":{},"coding/leetcode/101.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/19.html":{},"coding/leetcode/19.html#_2":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#_2":{},"coding/leetcode/21.html":{},"coding/leetcode/21.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/237.html":{},"coding/leetcode/237.html#_2":{},"coding/leetcode/24.html":{},"coding/leetcode/24.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["structur",{"_index":683,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{}},"title":{}}],["studio",{"_index":154,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["studio\uff0c\u9700\u8981\u5b89\u88c5c",{"_index":149,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["style",{"_index":376,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["sub",{"_index":793,"text":{"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{}},"title":{}}],["subset",{"_index":1076,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_5":{}},"title":{}}],["subseteq",{"_index":1077,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_5":{}},"title":{}}],["subseteqq",{"_index":1078,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_5":{}},"title":{}}],["subsetneq",{"_index":1080,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_5":{}},"title":{}}],["subsetneqq",{"_index":1081,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_5":{}},"title":{}}],["subtitl",{"_index":1152,"text":{"latex/slides.html":{},"latex/slides.html#latex":{}},"title":{}}],["success",{"_index":785,"text":{"coding/leetcode/28.html":{},"coding/leetcode/28.html#_2":{}},"title":{}}],["such",{"_index":692,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["sum_i^n",{"_index":1106,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["sum_{i=0}^",{"_index":1374,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["sum_{i=0}^{",{"_index":1340,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["sum_{i=s+1}^\\infti",{"_index":1399,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["sum_{i=s}^\\infti",{"_index":1350,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["sum_{i}^{n",{"_index":1107,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["super",{"_index":997,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["supset",{"_index":1082,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_5":{}},"title":{}}],["supseteq",{"_index":1083,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_5":{}},"title":{}}],["supseteqq",{"_index":1084,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_5":{}},"title":{}}],["supsetneq",{"_index":1085,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_5":{}},"title":{}}],["supsetneqq",{"_index":1086,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_5":{}},"title":{}}],["swappair",{"_index":758,"text":{"coding/leetcode/24.html":{},"coding/leetcode/24.html#_2":{}},"title":{}}],["swf",{"_index":385,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["swfurl",{"_index":423,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["switch",{"_index":644,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_2":{}},"title":{}}],["sysoev",{"_index":218,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["systemexit",{"_index":979,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["s}\\left(t+\\frac{\\rho_0^s}{(",{"_index":1348,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["s}}p_0",{"_index":1352,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["s}}p_0=\\frac{\\rho_0^i}{s!s^{i",{"_index":1347,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["t",{"_index":406,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_3":{},"coding/leetcode/242.html":{},"coding/leetcode/242.html#_1":{},"coding/leetcode/242.html#_2":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{},"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{},"math/discrete-mathematics/chapter-2.html#_3":{},"math/discrete-mathematics/chapter-2.html#ff":{},"math/discrete-mathematics/chapter-2.html#tt":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["t(w",{"_index":1235,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_6":{}},"title":{}}],["t)=j",{"_index":1256,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["t)=j+1",{"_index":1253,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["t)^{k",{"_index":1223,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{}},"title":{}}],["t)p_0(t",{"_index":1264,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["t)p_j(t)+\\mu_{j+1}\\delta",{"_index":1273,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["t+1)(",{"_index":1387,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["t+1}{t+\\frac{\\rho_0^s}{(",{"_index":1384,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["t+\\delta",{"_index":1260,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["t1",{"_index":983,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["t<t_0",{"_index":1246,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#markov":{}},"title":{}}],["t=\\alpha",{"_index":1214,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{}},"title":{}}],["t\\geq",{"_index":1219,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{}},"title":{}}],["t\\leftrightarrow",{"_index":1194,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{}},"title":{}}],["t\\not",{"_index":1215,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_3":{}},"title":{}}],["t\\rightarrow",{"_index":1193,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["t_0",{"_index":1245,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#markov":{}},"title":{}}],["t_q(w_q",{"_index":1236,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_6":{}},"title":{}}],["tabl",{"_index":295,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["tail",{"_index":612,"text":{"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{},"coding/leetcode/189.html":{},"coding/leetcode/189.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{}},"title":{}}],["tan",{"_index":1123,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["tanh",{"_index":1127,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_8":{}},"title":{}}],["target",{"_index":415,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/1.html":{},"coding/leetcode/1.html#_1":{},"coding/leetcode/1.html#_2":{},"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["targetv",{"_index":504,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{}},"title":{}}],["tau",{"_index":1061,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["td",{"_index":311,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["td><xsl:call",{"_index":374,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["td><xsl:valu",{"_index":414,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["teal",{"_index":17,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["temp",{"_index":197,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/189.html":{},"coding/leetcode/189.html#_2":{},"coding/leetcode/19.html":{},"coding/leetcode/19.html#_2":{},"coding/leetcode/344.html":{},"coding/leetcode/344.html#_2":{},"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_2":{}},"title":{}}],["temp/client_body_temp",{"_index":198,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["temp/fastcgi_temp",{"_index":202,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["temp/hl",{"_index":437,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["temp/proxy_temp",{"_index":200,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["temp/scgi_temp",{"_index":204,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["temp/uwsgi_temp",{"_index":206,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["temp1",{"_index":759,"text":{"coding/leetcode/24.html":{},"coding/leetcode/24.html#_2":{}},"title":{}}],["temp2",{"_index":760,"text":{"coding/leetcode/24.html":{},"coding/leetcode/24.html#_2":{}},"title":{}}],["temparray",{"_index":560,"text":{"coding/leetcode/118.html":{},"coding/leetcode/118.html#_2":{}},"title":{}}],["templat",{"_index":281,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_3":{}},"title":{}}],["temptre",{"_index":798,"text":{"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{}},"title":{}}],["test",{"_index":348,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["testcas",{"_index":924,"text":{"coding/leetcode/7.html":{},"coding/leetcode/7.html#_2":{}},"title":{}}],["th",{"_index":302,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["theta",{"_index":1041,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["this.dataset.mdcoloracc",{"_index":42,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["this.dataset.mdcolorprimari",{"_index":37,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["thread",{"_index":958,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["thread_id",{"_index":975,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["thread_with_except",{"_index":960,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["threading.thread",{"_index":988,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["time",{"_index":310,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_4":{}},"title":{}}],["times1",{"_index":813,"text":{"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{}},"title":{}}],["times2",{"_index":814,"text":{"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{}},"title":{}}],["timestamp",{"_index":387,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["titl",{"_index":278,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"latex/slides.html":{},"latex/slides.html#latex":{}},"title":{}}],["titlepag",{"_index":1157,"text":{"latex/slides.html":{},"latex/slides.html#latex":{}},"title":{}}],["tmp",{"_index":912,"text":{"coding/leetcode/509.html":{},"coding/leetcode/509.html#_4":{}},"title":{}}],["today",{"_index":1156,"text":{"latex/slides.html":{},"latex/slides.html#latex":{}},"title":{}}],["tolist",{"_index":954,"text":{"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["tool",{"_index":155,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{},"coding/configuration/nginx-rtmp.html#msvc":{}},"title":{}}],["top",{"_index":344,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_1":{},"coding/leetcode/155.html#_2":{}},"title":{}}],["tostr",{"_index":841,"text":{"coding/leetcode/38.html":{},"coding/leetcode/38.html#_2":{}},"title":{}}],["tp_1(t",{"_index":1266,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["tp_{j",{"_index":1270,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["tp_{j+1}(t",{"_index":1274,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["tr",{"_index":299,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["transform",{"_index":951,"text":{"coding/leetcode/9.html":{},"coding/leetcode/9.html#_2":{}},"title":{}}],["travers",{"_index":461,"text":{"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_2":{}},"title":{}}],["tree",{"_index":517,"text":{"coding/leetcode/101.html":{},"coding/leetcode/101.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["treenod",{"_index":519,"text":{"coding/leetcode/101.html":{},"coding/leetcode/101.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["treenode2",{"_index":792,"text":{"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{}},"title":{}}],["trend",{"_index":86,"text":{"covid.html":{}},"title":{"covid.html#covid-2019-trend":{}}}],["tri",{"_index":965,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["triangl",{"_index":575,"text":{"coding/leetcode/120.html":{},"coding/leetcode/120.html#_2":{}},"title":{}}],["trianglecols",{"_index":577,"text":{"coding/leetcode/120.html":{},"coding/leetcode/120.html#_2":{}},"title":{}}],["triangles",{"_index":576,"text":{"coding/leetcode/120.html":{},"coding/leetcode/120.html#_2":{}},"title":{}}],["true",{"_index":528,"text":{"coding/leetcode/101.html":{},"coding/leetcode/101.html#_2":{},"coding/leetcode/125.html":{},"coding/leetcode/125.html#_1":{},"coding/leetcode/125.html#_2":{},"coding/leetcode/217.html":{},"coding/leetcode/217.html#_1":{},"coding/leetcode/217.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_1":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/242.html":{},"coding/leetcode/242.html#_1":{},"coding/leetcode/242.html#_2":{},"coding/leetcode/36.html":{},"coding/leetcode/36.html#_1":{},"coding/leetcode/36.html#_2":{},"coding/leetcode/9.html":{},"coding/leetcode/9.html#_1":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_1":{},"coding/leetcode/98.html#_2":{},"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["true\u6216false\u8868\u793a\uff0c\u4e5f\u53ef\u4ee5\u75281\u62160",{"_index":1158,"text":{"math/discrete-mathematics/chapter-1.html":{},"math/discrete-mathematics/chapter-1.html#_1":{}},"title":{}}],["ts",{"_index":448,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["tt",{"_index":1209,"text":{},"title":{"math/discrete-mathematics/chapter-2.html#tt":{}}}],["tupl",{"_index":1001,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["twosum",{"_index":497,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{}},"title":{}}],["type",{"_index":242,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["typedef",{"_index":679,"text":{"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["typenam",{"_index":467,"text":{"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_3":{}},"title":{}}],["t}=\\lambda_{j",{"_index":1278,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["u1073",{"_index":132,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["unicod",{"_index":764,"text":{"coding/leetcode/242.html":{},"coding/leetcode/242.html#_1":{}},"title":{}}],["unit",{"_index":935,"text":{"coding/leetcode/779.html":{},"coding/leetcode/779.html#_2":{}},"title":{}}],["unsign",{"_index":248,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{},"coding/leetcode/204.html":{},"coding/leetcode/204.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["uparrow",{"_index":1203,"text":{"math/discrete-mathematics/chapter-2.html":{},"math/discrete-mathematics/chapter-2.html#_4":{}},"title":{}}],["upsilon",{"_index":1062,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["url",{"_index":384,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["usepackage{enumer",{"_index":1147,"text":{"latex/environ.html":{},"latex/environ.html#enumerate":{}},"title":{}}],["uwsgi",{"_index":205,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["v",{"_index":388,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/13.html#_2":{}},"title":{}}],["val",{"_index":520,"text":{"coding/leetcode/101.html":{},"coding/leetcode/101.html#_2":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/19.html":{},"coding/leetcode/19.html#_2":{},"coding/leetcode/206.html":{},"coding/leetcode/206.html#_2":{},"coding/leetcode/21.html":{},"coding/leetcode/21.html#_2":{},"coding/leetcode/234.html":{},"coding/leetcode/234.html#_2":{},"coding/leetcode/237.html":{},"coding/leetcode/237.html#_2":{},"coding/leetcode/24.html":{},"coding/leetcode/24.html#_2":{},"coding/leetcode/315.html":{},"coding/leetcode/315.html#_2":{},"coding/leetcode/98.html":{},"coding/leetcode/98.html#_2":{}},"title":{}}],["valign",{"_index":343,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["valu",{"_index":495,"text":{"coding/leetcode/1.html":{},"coding/leetcode/1.html#_2":{},"coding/leetcode/121.html":{},"coding/leetcode/121.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{},"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["var",{"_index":26,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"index.html":{},"index.html#customization":{}},"title":{}}],["vardelta",{"_index":1035,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["varepsilon",{"_index":1038,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["vargamma",{"_index":1033,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["varkappa",{"_index":1045,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["varlambda",{"_index":1047,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["varomega",{"_index":1071,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["varphi",{"_index":1065,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["varphi,\\varphi",{"_index":1066,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["varpi",{"_index":1054,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["varpi,\\varpi",{"_index":1055,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["varpsi",{"_index":1069,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["varrho",{"_index":1057,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["varsigma",{"_index":1059,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["varsigma,\\varsigma",{"_index":1060,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["vartheta,\\vartheta",{"_index":1042,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["varupsilon",{"_index":1063,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["varxi",{"_index":1051,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["vc",{"_index":220,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["vdot",{"_index":1305,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_9":{}},"title":{}}],["vector",{"_index":469,"text":{"coding/dsa/vector-and-list.html":{},"coding/dsa/vector-and-list.html#_3":{}},"title":{}}],["version",{"_index":271,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["version=\"1.0",{"_index":266,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["video",{"_index":305,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["video/mp2t",{"_index":447,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["visit",{"_index":6,"text":{"index.html":{},"index.html#welcome-to-mkdocs":{}},"title":{}}],["visual",{"_index":148,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["vlc",{"_index":454,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["vod",{"_index":342,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["void",{"_index":563,"text":{"coding/leetcode/119.html":{},"coding/leetcode/119.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/189.html":{},"coding/leetcode/189.html#_2":{},"coding/leetcode/217.html":{},"coding/leetcode/217.html#_2":{},"coding/leetcode/237.html":{},"coding/leetcode/237.html#_2":{},"coding/leetcode/344.html":{},"coding/leetcode/344.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{},"coding/leetcode/48.html":{},"coding/leetcode/48.html#_2":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#_2":{}},"title":{}}],["vs",{"_index":259,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{}},"title":{}}],["w",{"_index":943,"text":{"coding/leetcode/8.html":{},"coding/leetcode/8.html#_1":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_6":{}},"title":{}}],["w&=\\frac{l}{\\lambda",{"_index":1392,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["w=\\frac{l}{\\lambda",{"_index":1391,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#mms":{}},"title":{}}],["w_q",{"_index":1243,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_6":{}},"title":{}}],["way",{"_index":1009,"text":{"coding/python/killable-thread.html":{},"coding/python/killable-thread.html#python":{}},"title":{}}],["welcom",{"_index":1,"text":{"index.html":{}},"title":{"index.html#welcome-to-mkdocs":{}}}],["white",{"_index":25,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["whoi",{"_index":420,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["width",{"_index":425,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["win32",{"_index":233,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["win64a",{"_index":221,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["window",{"_index":152,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}],["word",{"_index":941,"text":{"coding/leetcode/8.html":{},"coding/leetcode/8.html#_1":{}},"title":{}}],["worker_connect",{"_index":432,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["worker_process",{"_index":428,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["x",{"_index":426,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{},"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/120.html":{},"coding/leetcode/120.html#_2":{},"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{},"coding/leetcode/13.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_1":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{},"coding/leetcode/50.html":{},"coding/leetcode/50.html#_1":{},"coding/leetcode/50.html#_2":{},"coding/leetcode/7.html":{},"coding/leetcode/7.html#_2":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#_2":{},"coding/leetcode/9.html":{},"coding/leetcode/9.html#_2":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_5":{}},"title":{}}],["x/y/z/a/b/c",{"_index":1229,"text":{"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_5":{}},"title":{}}],["x64",{"_index":256,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#msvc":{}},"title":{}}],["xc",{"_index":635,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["xi",{"_index":1050,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["xii",{"_index":617,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["xlix",{"_index":639,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["xml",{"_index":265,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["xmlns:xsl",{"_index":273,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["xsl:appli",{"_index":280,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["xsl:attribut",{"_index":345,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["xsl:call",{"_index":320,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["xsl:choos",{"_index":346,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["xsl:if",{"_index":358,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["xsl:otherwis",{"_index":351,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["xsl:param",{"_index":389,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["xsl:stylesheet",{"_index":270,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["xsl:templat",{"_index":275,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["xsl:valu",{"_index":287,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["xsl:variabl",{"_index":390,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["xsl:when",{"_index":347,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["xsl:with",{"_index":322,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#nginx":{}},"title":{}}],["xx",{"_index":620,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["xxvii",{"_index":619,"text":{"coding/leetcode/13.html":{},"coding/leetcode/13.html#_1":{}},"title":{}}],["y",{"_index":538,"text":{"coding/leetcode/102.html":{},"coding/leetcode/102.html#_2":{},"coding/leetcode/120.html":{},"coding/leetcode/120.html#_2":{},"coding/leetcode/155.html":{},"coding/leetcode/155.html#_2":{},"coding/leetcode/198.html":{},"coding/leetcode/198.html#_2":{},"coding/leetcode/350.html":{},"coding/leetcode/350.html#_2":{},"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{},"coding/leetcode/88.html":{},"coding/leetcode/88.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_5":{}},"title":{}}],["yate",{"_index":853,"text":{"coding/leetcode/384.html":{},"coding/leetcode/384.html#_2":{}},"title":{}}],["yellow",{"_index":20,"text":{"index.html":{},"index.html#customization":{}},"title":{}}],["z",{"_index":605,"text":{"coding/leetcode/125.html":{},"coding/leetcode/125.html#_2":{},"coding/leetcode/14.html":{},"coding/leetcode/14.html#_1":{},"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{},"math/queue-theory/chapter-12.html":{},"math/queue-theory/chapter-12.html#_5":{}},"title":{}}],["zeta",{"_index":1039,"text":{"latex/cheatsheet.html":{},"latex/cheatsheet.html#_2":{}},"title":{}}],["zlib",{"_index":162,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{},"coding/configuration/nginx-rtmp.html#_2":{}},"title":{}}],["zlib\u6e90\u4ee3\u7801\uff0cgithub",{"_index":138,"text":{"coding/configuration/nginx-rtmp.html":{},"coding/configuration/nginx-rtmp.html#_1":{}},"title":{}}]],"pipeline":["stemmer"],"version":"2.3.8"}}