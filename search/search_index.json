{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-]","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to HuangFuSL's blog","text":""},{"location":"#table-of-contents","title":"Table of contents","text":"<ul> <li>\u200b\u63a8\u9001\u200b</li> <li>LaTeX</li> <li>\u200b\u6570\u5b66\u200b</li> <li>Coding</li> <li>\u200b\u65e5\u8bed\u200b</li> <li>\u200b\u5173\u4e8e\u200b\u6211\u200b</li> </ul>"},{"location":"#blog-timeline","title":"Blog timeline","text":"<p>47. \u200b\u5168\u200b\u6392\u5217\u200b II</p> 2025-02-06<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p> <p>922. \u200b\u6309\u200b\u5947\u5076\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b II</p> 2025-02-04<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p> <p>680. \u200b\u9a8c\u8bc1\u200b\u56de\u6587\u200b\u4e32\u200b II</p> 2025-02-03<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p> <p>598. \u200b\u533a\u95f4\u200b\u52a0\u6cd5\u200b II</p> 2025-02-02<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p> <p>33. \u200b\u641c\u7d22\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b</p> 2025-02-01<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p> <p>81. \u200b\u641c\u7d22\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b II</p> 2025-02-01<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p> <p>541. \u200b\u53cd\u8f6c\u200b\u5b57\u7b26\u4e32\u200b II</p> 2025-01-31<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p> <p>Box-Muller\u200b\u53d8\u6362\u200b</p> 2025-01-31<p>\u200b\u4ee5\u200b\u6807\u51c6\u200b\u6b63\u6001\u5206\u5e03\u200b\u7684\u200b\u91c7\u6837\u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u8bbe\u200b\\(X, Y\\)\u200b\u4e3a\u200b\u4e24\u4e2a\u200b\u72ec\u7acb\u200b\u5206\u5e03\u200b\u7684\u200b\u6b63\u6001\u5206\u5e03\u200b\u968f\u673a\u53d8\u91cf\u200b\uff0c\u200b\u5176\u200b\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u200b\u4e3a\u200b</p> <p>219. \u200b\u5b58\u5728\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b II</p> 2025-01-29<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p> <p>40. \u200b\u7ec4\u5408\u200b\u603b\u548c\u200b II</p> 2025-01-26<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>"},{"location":"#recent-updates","title":"Recent updates","text":"<ul> <li>2025-02-07\uff1a59. \u200b\u87ba\u65cb\u200b\u77e9\u9635\u200b II</li> <li>2025-02-06\uff1a46. \u200b\u5168\u200b\u6392\u5217\u200b\uff0c47. \u200b\u5168\u200b\u6392\u5217\u200b II</li> <li>2025-02-05\uff1a90. \u200b\u5b50\u96c6\u200b II</li> <li>2025-02-04\uff1a922. \u200b\u6309\u200b\u5947\u5076\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b II</li> <li>2025-02-03\uff1a680. \u200b\u9a8c\u8bc1\u200b\u56de\u6587\u200b\u4e32\u200b II\uff0cGlossary</li> </ul>"},{"location":"#currently-working-on","title":"Currently working on","text":"<ul> <li>Vim</li> </ul>"},{"location":"#customization","title":"Customization","text":"<p>Click on the buttons to change the primary color.</p> Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White <p>Click on the buttons to change the accent color.</p> Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange <p>However, if you try to switch from dark mode to light mode or reversed, changes to the primary color and accent color will lose.</p>"},{"location":"#building-documentation","title":"Building documentation","text":"<p>Run <code>git clone https://github.com/HuangFuSL/HuangFuSL.github.io.git</code> to get the source code.</p>"},{"location":"#bootstrap-icon-installation","title":"Bootstrap icon installation","text":"<p>The site uses bootstrap icons, which are added as submodules in <code>third_party/icons</code>. You have to manually initialize the submodule.</p> <pre><code>git submodule update --recursive --remote\n</code></pre>"},{"location":"#latex-support","title":"LaTeX support","text":"<p>The site uses <code>xelatex</code> and <code>dvisvgm</code> to render tex document to SVG images embedded in the markdown files. However, as the SVG images are ignored by <code>.gitignore</code>, you have to manually perform the conversion.</p> <p>For GitHub repository clones:</p> <ul> <li>Run <code>git submodule update --recursive --remote</code> to receive the template.</li> <li>Make sure you have installed and correctly configured <code>xelatex</code> and <code>dvisvgm</code>.</li> <li>Add <code>./template</code> directory to <code>$TEXINPUTS</code> environmental variable.</li> <li>Execute <code>ci/convert.py</code> in the root directory of the repository.</li> <li>Run <code>mkdocs serve</code> to view the images.</li> </ul> <p>The template is located at HuangFuSL/latex-template</p>"},{"location":"#github-workflow","title":"GitHub workflow","text":"<p>You need to install the dependencies stored in <code>requirements.txt</code> before you can  start building the site:</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>There are cross-links in the site which require metadata defined in the page, so the project should be built before <code>mkdocs serve</code> is executed. The exported metadata is saved in <code>meta.json</code> after a build is successfully executed. To build the site, execute the following command:</p> <pre><code>mkdocs build -d build\n</code></pre> <p>Execute <code>mkdocs serve</code>, the built site will appear at http://127.0.0.1:8000</p>"},{"location":"#acknowledgements","title":"Acknowledgements","text":"<p>The blog relies on the following open-source projects:</p> <ul> <li>mkdocs</li> <li>Python Markdown</li> <li>Python Markdown Extension</li> <li>jupyter</li> </ul> <p>The blog uses the following mkdocs plugins to function correctly.</p> <ul> <li>Neoteroi/mkdocs-plugins</li> <li>lukasgeiter/mkdocs-awesome-pages-plugin</li> <li>timvink/mkdocs-git-revision-date-localized-plugin</li> <li>zhaoterryy/mkdocs-git-revision-date-plugin</li> <li>squidfunk/mkdocs-material</li> <li>facelessuser/mkdocs-material-extensions</li> <li>fralau/mkdocs_macros_plugin</li> <li>danielfrg/mkdocs-jupyter</li> <li>prcr/mkdocs-meta-descriptions-plugin</li> </ul> <p>Unless noted, content in this blog are shared under CC-BY-NC-SA 4.0 license.</p>"},{"location":"#version-information","title":"Version information","text":"<pre><code>commit 3908617ac2526f88757a1fde365206c486cbb631\nMerge: f2dd044c2 ebefc70ed\nAuthor: github-actions[bot] &lt;41898282+github-actions[bot]@users.noreply.github.com&gt;\nDate:   Fri Feb 7 09:42:10 2025 +0800\n\n    Merge pull request #482 from HuangFuSL/leetcode-250207\n\n    Update: Leetcode 250207\n</code></pre>"},{"location":"about/","title":"\u5173\u4e8e\u200b\u6211","text":"<p>Guess who is here?</p> <p></p>"},{"location":"coding/","title":"Coding","text":"<p>\u200b\u7f16\u7a0b\u200b\u76f8\u5173\u200b</p>"},{"location":"coding/#_1","title":"\u7f16\u7a0b\u8bed\u8a00","text":"<ul> <li>Python</li> <li>Rust<ul> <li>GUI</li> <li>Jupyter</li> </ul> </li> </ul>"},{"location":"coding/#_2","title":"\u7b97\u6cd5","text":"<ul> <li>Leetcode</li> <li>\u200b\u6570\u636e\u7ed3\u6784\u200b</li> </ul>"},{"location":"coding/#_3","title":"\u673a\u5668\u200b\u5b66\u4e60","text":"<ul> <li>Machine Learning Glossary</li> </ul>"},{"location":"coding/#_4","title":"\u5176\u4ed6","text":"<ul> <li>\u200b\u7cfb\u7edf\u914d\u7f6e\u200b</li> <li>SVG</li> </ul>"},{"location":"coding/rust-jupyter/","title":"Jupyter for Rust","text":"In\u00a0[2]: Copied! <pre>fn add(a: i32, b: i32) -&gt; i32 {\n    a + b\n}\n\nadd(1, 2) // The last expression is evaluated and printed\n</pre> fn add(a: i32, b: i32) -&gt; i32 {     a + b }  add(1, 2) // The last expression is evaluated and printed Out[2]: <pre>3</pre> <p>\u200b\u4f7f\u7528\u200b<code>:dep &lt;package&gt;</code>\u200b\u6765\u200b\u5bfc\u5165\u200b\u5305\u200b\u3002<code>evcxr_input</code>\u200b\u5305\u200b\u63d0\u4f9b\u200b\u4e86\u200b<code>get_string</code>\u200b\u548c\u200b<code>get_password</code>\u200b\u51fd\u6570\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200bnotebook\u200b\u4e2d\u200b\u8f93\u5165\u200b\u5b57\u7b26\u4e32\u200b\u548c\u200b\u5bc6\u7801\u200b\u3002</p> In\u00a0[3]: Copied! <pre>:dep evcxr_input\nlet name = evcxr_input::get_string(\"Name?\");\nlet password = evcxr_input::get_password(\"Password?\");\n\nprintln!(\"Hello, {name}! Your password is {password}\", name=name, password=password);\n</pre> :dep evcxr_input let name = evcxr_input::get_string(\"Name?\"); let password = evcxr_input::get_password(\"Password?\");  println!(\"Hello, {name}! Your password is {password}\", name=name, password=password); <pre>Hello, Alice! Your password is alice123\n</pre> <p>\u200b\u4f7f\u7528\u200b\u5982\u4e0b\u200b\u547d\u4ee4\u200b\u5378\u8f7d\u200bRust</p> <pre>evcxr_jupyter --uninstall\ncargo uninstall evcxr_jupyter\n</pre>"},{"location":"coding/rust-jupyter/#jupyter-for-rust","title":"Jupyter for Rust\u00b6","text":"<p>Rust\u200b\u7684\u200b<code>evcxr_jupyter</code>\u200b\u5305\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5bf9\u200bjupyter notebook\u200b\u7684\u200b\u652f\u6301\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200bnotebook\u200b\u4e2d\u200b\u8fd0\u884c\u200bRust\u200b\u4ee3\u7801\u200b\u3002\u200b\u4f7f\u7528\u200b\u5982\u4e0b\u200b\u547d\u4ee4\u200b\u5b89\u88c5\u200b\uff1a</p> <pre>cargo install --locked evcxr_jupyter\nevcxr_jupyter --install\n</pre> <p>\u200b\u53e6\u5916\u200b\uff0c\u200b\u8fd8\u200b\u9700\u8981\u200b\u5b89\u88c5\u200bRust\u200b\u6807\u51c6\u200b\u5e93\u200b\u7684\u200b\u6e90\u4ee3\u7801\u200b\uff1a</p> <pre>rustup component add rust-src\n</pre> <p>\u200b\u4e4b\u540e\u200b\uff0c\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5728\u200bnotebook\u200b\u4e2d\u200b\u8fd0\u884c\u200bRust\u200b\u4ee3\u7801\u200b\u4e86\u200b\u3002</p> <pre>jupyter notebook\n</pre>"},{"location":"coding/svg/","title":"SVG\u200b\u52a8\u753b","text":"<p>SVG\u200b\u7684\u200b\u52a8\u753b\u200b\u4f7f\u7528\u200b<code>&lt;animate&gt;</code>\u200b\u6807\u7b7e\u200b\uff0c\u200b\u5728\u200b\u4f7f\u7528\u200b\u65f6\u200b\uff0c<code>&lt;animate&gt;</code>\u200b\u6807\u7b7e\u200b\u9700\u8981\u200b\u653e\u5728\u200b\u52a8\u753b\u200b\u64cd\u4f5c\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5185\u90e8\u200b\u3002</p> <p>\u200b\u4f5c\u4e3a\u200b\u5bf9\u6bd4\u200b\uff0c\u200b\u6211\u4eec\u200b\u5148\u200b\u6784\u9020\u200b\u51fa\u200b\u4e00\u4e2a\u200b\u77e9\u5f62\u200b\uff0c\u200b\u5728\u200b\u77e9\u5f62\u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u200b\u6dfb\u52a0\u200b\u52a8\u753b\u200b\uff1a</p> SVG\u200b\u56fe\u50cf\u200b \u200b\u6e32\u67d3\u200b\u56fe\u50cf\u200bSVG\u200b\u4ee3\u7801\u200b <p> </p> <pre><code>&lt;svg width=\"100%\" height=\"100%\"&gt;\n    &lt;rect x=\"20\" y=\"20\" fill=\"#69EC69\" width=\"100\" height=\"60\"&gt;\n    &lt;/rect&gt;\n&lt;/svg&gt;\n</code></pre>"},{"location":"coding/svg/#_1","title":"\u7b80\u5355\u200b\u52a8\u753b","text":"<p>\u200b\u5728\u200b<code>&lt;rect&gt;</code>\u200b\u6807\u7b7e\u200b\u4e2d\u200b\u6dfb\u52a0\u200b<code>&lt;animate&gt;</code>\u200b\u6807\u7b7e\u200b\uff0c\u200b\u6307\u5b9a\u200b\u52a8\u753b\u200b\u7684\u200b\u7ed1\u5b9a\u200b\u5c5e\u6027\u200b\u3001\u200b\u5f00\u59cb\u200b\u7ed3\u675f\u200b\u7684\u200b\u53d6\u503c\u200b\u548c\u200b\u65f6\u957f\u200b\u5373\u53ef\u200b\u3002</p> SVG\u200b\u56fe\u50cf\u200b \u200b\u6e32\u67d3\u200b\u56fe\u50cf\u200bSVG\u200b\u4ee3\u7801\u200b <p> </p> <pre><code>&lt;svg width=\"100%\" height=\"100%\"&gt;\n    &lt;rect x=\"20\" y=\"20\" fill=\"#69EC69\" width=\"100\" height=\"60\"&gt;\n        &lt;animate attributeName=\"x\" from=\"20\" to=\"150\" begin=\"click\" dur=\"1.5s\" /&gt;\n    &lt;/rect&gt;\n&lt;/svg&gt;\n</code></pre> <p>\u200b\u901a\u8fc7\u200b<code>attributeName</code>\u200b\u5c5e\u6027\u200b\u8bbe\u7f6e\u200b\u4ea4\u4e92\u200b\u7ed1\u5b9a\u200b\u7684\u200b\u5c5e\u6027\u200b\uff0c\u200b\u5141\u8bb8\u200b\u7684\u200b\u5c5e\u6027\u200b\u5217\u4e8e\u200b\u4e0b\u8868\u200b\uff1a</p> \u200b\u6807\u7b7e\u200b \u200b\u5c5e\u6027\u200b\u540d\u200b \u200b\u5907\u6ce8\u200b <code>&lt;animate&gt;</code> <code>x</code> <code>&lt;animate&gt;</code> <code>y</code> <code>&lt;animate&gt;</code> <code>width</code> <code>&lt;animate&gt;</code> <code>height</code> <code>&lt;animate&gt;</code> <code>r</code> <code>cx</code>, <code>cy</code> <code>&lt;animate&gt;</code> <code>opacity</code> <code>&lt;animate&gt;</code> <code>d</code> <code>&lt;animate&gt;</code> <code>points</code> <code>&lt;animate&gt;</code> <code>stroke</code> <code>stroke-width</code>, <code>stroke-linecap</code>, <code>stroke-dashoffset</code> <code>&lt;animate&gt;</code> <code>fill</code> <code>&lt;set&gt;</code> <code>visibility</code> <code>&lt;animateTransform&gt;</code> <code>translate</code> <code>&lt;animateTransform&gt;</code> <code>transform</code> <code>&lt;animateTransform&gt;</code> <code>scale</code> <code>&lt;animateTransform&gt;</code> <code>rotate</code> <code>&lt;animateTransform&gt;</code> <code>skewX</code> <code>&lt;animateTransform&gt;</code> <code>skewY</code> <code>&lt;animateMotion&gt;</code> <code>path</code> <code>&lt;animateMotion&gt;</code> <code>rotate</code> <code>&lt;animateMotion&gt;</code> <code>keypoints</code> <code>&lt;animateMotion&gt;</code> <code>mpath</code>"},{"location":"coding/svg/#_2","title":"\u81ea\u5b9a\u4e49\u200b\u52a8\u753b","text":"<p><code>&lt;animate&gt;</code>\u200b\u6807\u7b7e\u200b\u652f\u6301\u200b\u591a\u79cd\u200b\u81ea\u5b9a\u4e49\u200b\u5c5e\u6027\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u5c5e\u6027\u200b\u5141\u8bb8\u200b\u5728\u200b\u52a8\u753b\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u5173\u952e\u5e27\u200b\u3001\u200b\u8ba9\u200b\u52a8\u753b\u200b\u54cd\u5e94\u200b\u7528\u6237\u200b\u4ea4\u4e92\u200b\u7b49\u200b\u9ad8\u7ea7\u200b\u529f\u80fd\u200b\u7684\u200b\u5b9e\u73b0\u200b</p>"},{"location":"coding/svg/#fill","title":"<code>fill</code>\u200b\u5c5e\u6027","text":"<p><code>fill</code>\u200b\u5c5e\u6027\u200b\u51b3\u5b9a\u200b\u52a8\u753b\u200b\u7ed3\u675f\u200b\u65f6\u200b\u52a8\u753b\u200b\u5bf9\u8c61\u200b\u7684\u200b\u72b6\u6001\u200b\uff0c\u200b\u53d6\u503c\u200b\u53ef\u4ee5\u200b\u4e3a\u200b<code>remove</code>\u200b\u6216\u200b<code>freeze</code>\uff0c\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c<code>fill</code>\u200b\u7684\u200b\u53d6\u503c\u200b\u4e3a\u200b<code>remove</code>\u3002</p> <p>\u200b\u4ee5\u4e0b\u200b\u4e3a\u200b<code>fill</code>\u200b\u53d6\u503c\u200b\u4e3a\u200b<code>freeze</code>\u200b\u7684\u200bSVG\u200b\u52a8\u753b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u770b\u51fa\u200b\uff0c\u200b\u52a8\u753b\u200b\u7ed3\u675f\u200b\u540e\u200b\u77e9\u5f62\u200b\u6ca1\u6709\u200b\u56de\u5230\u200b\u5f00\u59cb\u200b\u7684\u200b\u72b6\u6001\u200b\u3002</p> SVG\u200b\u56fe\u50cf\u200b \u200b\u6e32\u67d3\u200b\u56fe\u50cf\u200bSVG\u200b\u4ee3\u7801\u200b <p> </p> <pre><code>&lt;svg width=\"100%\" height=\"100%\"&gt;\n    &lt;rect x=\"20\" y=\"20\" fill=\"#69EC69\" width=\"100\" height=\"60\"&gt;\n        &lt;animate attributeName=\"x\" from=\"20\" to=\"150\" begin=\"click\" dur=\"1.5s\" fill=\"freeze\" /&gt;\n    &lt;/rect&gt;\n&lt;/svg&gt;\n</code></pre>"},{"location":"coding/svg/#repeatcount","title":"<code>repeatCount</code>\u200b\u5c5e\u6027","text":"<p><code>repeatcount</code>\u200b\u5c5e\u6027\u200b\u51b3\u5b9a\u200b\u4e86\u200b\u52a8\u753b\u200b\u5728\u200b\u5f00\u59cb\u200b\u4ee5\u540e\u200b\u91cd\u590d\u200b\u7684\u200b\u6b21\u6570\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4e3a\u200b\u6574\u6570\u200b\u503c\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4e3a\u200b<code>indefinite</code>\u200b\u8868\u793a\u200b\u65e0\u9650\u200b\u6b21\u200b\u3002</p> <p>\u200b\u4ee5\u4e0b\u200b\u4f7f\u200b\u77e9\u5f62\u200b\u79fb\u52a8\u200b\u7684\u200b\u52a8\u4f5c\u200b\u91cd\u590d\u200b\u4e09\u6b21\u200b\uff1a</p> SVG\u200b\u56fe\u50cf\u200b \u200b\u6e32\u67d3\u200b\u56fe\u50cf\u200bSVG\u200b\u4ee3\u7801\u200b <p> </p> <pre><code>&lt;svg width=\"100%\" height=\"100%\"&gt;\n    &lt;rect x=\"20\" y=\"20\" fill=\"#69EC69\" width=\"100\" height=\"60\"&gt;\n        &lt;animate attributeName=\"x\" from=\"20\" to=\"150\" begin=\"click\" dur=\"1.5s\" repeatcount=\"3\" /&gt;\n    &lt;/rect&gt;\n&lt;/svg&gt;\n</code></pre>"},{"location":"coding/svg/#values","title":"<code>values</code>\u200b\u5c5e\u6027","text":"<p><code>values</code>\u200b\u5c5e\u6027\u200b\u51b3\u5b9a\u200b\u4e86\u200b\u52a8\u753b\u200b\u7684\u200b\u5c5e\u6027\u200b\u5173\u952e\u5e27\u200b\uff0c\u200b\u5c5e\u6027\u200b\u503c\u4e3a\u200b\u5404\u200b\u5173\u952e\u5e27\u200b\u7684\u200b\u5c5e\u6027\u200b\u53d6\u503c\u200b\uff0c\u200b\u4ee5\u5206\u200b\u53f7\u200b\u5206\u9694\u200b\u3002<code>values</code>\u200b\u5c5e\u6027\u200b\u53ef\u4ee5\u200b\u540c\u65f6\u200b\u66ff\u6362\u200b<code>from</code>\u200b\u5c5e\u6027\u200b\u4e0e\u200b<code>to</code>\u200b\u5c5e\u6027\u200b\u3002</p> <p>\u200b\u4ee5\u4e0b\u200b\u4f7f\u7528\u200b<code>values</code>\u200b\u5c5e\u6027\u200b\uff0c\u200b\u4ee4\u200b\u77e9\u5f62\u200b\u5728\u200b\u79fb\u52a8\u200b\u540e\u200b\u6298\u8fd4\u200b\uff1a</p> SVG\u200b\u56fe\u50cf\u200b \u200b\u6e32\u67d3\u200b\u56fe\u50cf\u200bSVG\u200b\u4ee3\u7801\u200b <p> </p> <pre><code>&lt;svg width=\"100%\" height=\"100%\"&gt;\n    &lt;rect x=\"20\" y=\"20\" fill=\"#69EC69\" width=\"100\" height=\"60\"&gt;\n        &lt;animate attributeName=\"x\" values=\"20;150;20\" begin=\"click\" dur=\"3s\" /&gt;\n    &lt;/rect&gt;\n&lt;/svg&gt;\n</code></pre>"},{"location":"coding/svg/#keytimes","title":"<code>keyTimes</code>\u200b\u5c5e\u6027","text":"<p><code>keyTimes</code>\u200b\u5c5e\u6027\u200b\u51b3\u5b9a\u200b\u4e86\u200b\u5173\u952e\u5e27\u200b\u7684\u200b\u65f6\u95f4\u200b\u5206\u914d\u200b\uff0c\u200b\u5f53\u200b<code>calcMode</code>\u200b\u5c5e\u6027\u200b\u4e3a\u200b<code>linear</code>\u200b\u6216\u200b<code>spline</code>\u200b\u65f6\u200b\uff0c\u200b\u8be5\u200b\u5c5e\u6027\u200b\u6709\u6548\u200b\uff0c\u200b\u5c5e\u6027\u200b\u7684\u200b\u503c\u200b\u4e3a\u200b\u5404\u4e2a\u200b\u5173\u952e\u5e27\u200b\u5728\u200b\u6574\u4e2a\u200b\u52a8\u753b\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u8fdb\u5ea6\u200b\uff08\u200b\u53d6\u503c\u200b\u5728\u200b0-1\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5c0f\u6570\u200b\uff09\u3002</p> <p>\u200b\u4ee5\u4e0b\u200b\u4f7f\u7528\u200b<code>keyTimes</code>\u200b\u5c5e\u6027\u200b\uff0c\u200b\u4ee4\u200b\u77e9\u5f62\u200b\u5728\u200b\u53f3\u79fb\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u901f\u5ea6\u200b\u662f\u200b\u5de6\u79fb\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u901f\u5ea6\u200b\u7684\u200b\u4e09\u500d\u200b\uff1a</p> SVG\u200b\u56fe\u50cf\u200b \u200b\u6e32\u67d3\u200b\u56fe\u50cf\u200bSVG\u200b\u4ee3\u7801\u200b <p> </p> <pre><code>&lt;svg width=\"100%\" height=\"100%\"&gt;\n    &lt;rect x=\"20\" y=\"20\" fill=\"#69EC69\" width=\"100\" height=\"60\"&gt;\n        &lt;animate attributeName=\"x\" values=\"20;150;20\" keyTimes=\"0;0.25;1\" begin=\"click\" dur=\"3s\" /&gt;\n    &lt;/rect&gt;\n&lt;/svg&gt;\n</code></pre>"},{"location":"coding/svg/#calcmodekeysplines","title":"<code>calcMode</code>\u200b\u5c5e\u6027\u200b\u4e0e\u200b<code>keySplines</code>\u200b\u5c5e\u6027","text":"<p><code>calcMode</code>\u200b\u5c5e\u6027\u200b\u51b3\u5b9a\u200b\u4e86\u200b\u5173\u952e\u5e27\u200b\u63d2\u503c\u200b\u7684\u200b\u8ba1\u7b97\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u8fdb\u4e00\u6b65\u200b\u5730\u200b\uff0c<code>keySplines</code>\u200b\u5c5e\u6027\u200b\u51b3\u5b9a\u200b\u4e86\u200b\u5173\u952e\u5e27\u200b\u63d2\u503c\u200b\u6240\u7528\u200b\u7684\u200b\u51fd\u6570\u200b\uff08\u200b\u8d1d\u585e\u5c14\u200b\u66f2\u7ebf\u200b\uff09\u3002<code>calcMode</code>\u200b\u5c5e\u6027\u200b\u5141\u8bb8\u200b\u7684\u200b\u53d6\u503c\u200b\u5982\u4e0b\u200b\uff1a</p> <ul> <li><code>paced</code>\uff1a\u200b\u5ffd\u7565\u200b<code>keyTimes</code>\u200b\u5c5e\u6027\u200b\uff0c\u200b\u5c5e\u6027\u200b\u503c\u200b\u6309\u7167\u200b<code>values</code>\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u5173\u952e\u5e27\u200b\u7ebf\u6027\u200b\u53d8\u5316\u200b</li> <li><code>linear</code>\uff1a\u200b\u9ed8\u8ba4\u200b\u53d6\u503c\u200b\uff0c\u200b\u5c5e\u6027\u200b\u503c\u200b\u6309\u7167\u200b<code>values</code>\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u5173\u952e\u5e27\u200b\u5728\u200b<code>keyTimes</code>\u200b\u65f6\u95f4\u200b\u5185\u200b\u7ebf\u6027\u200b\u53d8\u5316\u200b</li> <li><code>discrete</code>\uff1a\u200b\u5c5e\u6027\u200b\u503c\u200b\u9636\u8dc3\u200b\u53d8\u5316\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8ba4\u4e3a\u200b\u6ca1\u6709\u200b\u63d2\u503c\u200b</li> <li><code>spline</code>\uff1a\u200b\u5c5e\u6027\u200b\u503c\u200b\u6309\u7167\u200b<code>keySplines</code>\u200b\u5c5e\u6027\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u8d1d\u585e\u5c14\u200b\u66f2\u7ebf\u200b\u53d8\u5316\u200b</li> </ul> <p>\u200b\u4ee5\u4e0b\u200b\u5206\u522b\u200b\u6f14\u793a\u200b<code>calcMode</code>\u200b\u5c5e\u6027\u200b\u56db\u79cd\u200b\u53d6\u503c\u200b\u7684\u200b\u6548\u679c\u200b\uff0c<code>keySplines</code>\u200b\u5c5e\u6027\u200b\u503c\u200b\u8bbe\u5b9a\u200b\u4e3a\u200b<code>1 0 1 1; 0 0 0 1</code>\uff1a</p> SVG\u200b\u56fe\u50cf\u200b pacedlineardiscretespline <p> </p> <p> </p> <p> </p> <p> </p>"},{"location":"coding/svg/#beginend","title":"<code>begin</code>\u200b\u5c5e\u6027\u200b\u4e0e\u200b<code>end</code>\u200b\u5c5e\u6027","text":"<p><code>begin</code>\u200b\u5c5e\u6027\u200b\u4e0e\u200b<code>end</code>\u200b\u5c5e\u6027\u200b\u51b3\u5b9a\u200b\u4e86\u200bSVG\u200b\u52a8\u753b\u200b\u5728\u200b\u4f55\u65f6\u200b\u5f00\u59cb\u200b\uff0c\u200b\u6b64\u65f6\u200b\u7684\u200b\u65f6\u95f4\u200b\u96f6\u70b9\u200b\u4e3a\u200b\u9875\u9762\u200b\u6e32\u67d3\u200b\u5b8c\u6210\u200b\u7684\u200b\u65f6\u95f4\u200b\uff0c\u200b\u56e0\u6b64\u200b\uff0c\u200b\u5982\u679c\u200b\u4e0d\u200b\u5728\u200b<code>begin</code>\u200b\u4e2d\u200b\u6307\u5b9a\u200b\u7528\u6237\u200b\u4ea4\u4e92\u200b\u4e8b\u4ef6\u200b\uff0c\u200b\u5219\u200b\u52a8\u753b\u200b\u5728\u200b\u6e32\u67d3\u200b\u5b8c\u6210\u200b\u540e\u200b\u5373\u200b\u5f00\u59cb\u200b\u8ba1\u65f6\u200b\u3002<code>end</code>\u200b\u5c5e\u6027\u200b\u53ef\u4ee5\u200b\u63a7\u5236\u200b\u52a8\u753b\u200b\u7684\u200b\u5f3a\u5236\u200b\u7ed3\u675f\u200b\u65f6\u95f4\u200b\uff0c\u200b\u5982\u679c\u200b\u52a8\u753b\u200b\u5728\u200b\u8be5\u200b\u65f6\u95f4\u200b\u5185\u200b\u6ca1\u6709\u200b\u7ed3\u675f\u200b\uff0c\u200b\u5219\u200b\u7acb\u5373\u200b\u7ed3\u675f\u200b\u3002</p> <p>\u200b\u4ee5\u4e0b\u200b\u4f7f\u7528\u200b<code>begin</code>\u200b\u5c5e\u6027\u200b\u63a7\u5236\u200b\u52a8\u753b\u200b\u5ef6\u8fdf\u200b\u5f00\u59cb\u200b2s\uff1a</p> SVG\u200b\u56fe\u50cf\u200b \u200b\u6e32\u67d3\u200b\u56fe\u50cf\u200bSVG\u200b\u4ee3\u7801\u200b <p> </p> <pre><code>&lt;svg width=\"100%\" height=\"100%\"&gt;\n    &lt;rect x=\"20\" y=\"20\" fill=\"#69EC69\" width=\"100\" height=\"60\"&gt;\n        &lt;animate attributeName=\"x\" from=\"20\" to=\"150\" begin=\"click+2s\" dur=\"1.5s\" /&gt;\n    &lt;/rect&gt;\n&lt;/svg&gt;\n</code></pre>"},{"location":"coding/svg/#additive","title":"<code>additive</code>\u200b\u5c5e\u6027","text":"<p><code>additive</code>\u200b\u5c5e\u6027\u200b\u51b3\u5b9a\u200b<code>values</code>\u200b\u53ca\u200b<code>from</code>\u200b\u4e0e\u200b<code>to</code>\u200b\u5c5e\u6027\u200b\u4e2d\u200b\u7684\u200b\u5c5e\u6027\u200b\u503c\u200b\u662f\u200b\u7edd\u5bf9\u503c\u200b\u8fd8\u662f\u200b\u76f8\u5bf9\u503c\u200b\u3002\u200b\u5141\u8bb8\u200b\u7684\u200b\u53d6\u503c\u200b\u4e3a\u200b<code>sum</code>\u200b\u4e0e\u200b<code>replace</code>\uff0c\u200b\u5206\u522b\u200b\u8868\u793a\u200b\u76f8\u5bf9\u503c\u200b\u4e0e\u200b\u7edd\u5bf9\u503c\u200b\u3002\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c<code>additive</code>\u200b\u5c5e\u6027\u200b\u53d6\u200b<code>replace</code>\u3002</p> <p>\u200b\u4ee5\u4e0b\u200b\u4f7f\u7528\u200b\u76f8\u5bf9\u503c\u200b\u63a7\u5236\u200b\u77e9\u5f62\u200b\u7684\u200b\u79fb\u52a8\u200b\uff1a</p> SVG\u200b\u56fe\u50cf\u200b \u200b\u6e32\u67d3\u200b\u56fe\u50cf\u200bSVG\u200b\u4ee3\u7801\u200b <p> </p> <pre><code>&lt;svg width=\"100%\" height=\"100%\"&gt;\n    &lt;rect x=\"20\" y=\"20\" fill=\"#69EC69\" width=\"100\" height=\"60\"&gt;\n        &lt;animate attributeName=\"x\" from=\"0\" to=\"130\" additive=\"sum\" begin=\"click\" dur=\"1.5s\" /&gt;\n    &lt;/rect&gt;\n&lt;/svg&gt;\n</code></pre>"},{"location":"coding/svg/#accumulate","title":"<code>accumulate</code>\u200b\u5c5e\u6027","text":"<p><code>accumulate</code>\u200b\u5c5e\u6027\u200b\u5f53\u200b\u52a8\u753b\u200b\u91cd\u590d\u200b\u65f6\u200b\uff0c\u200b\u5c5e\u6027\u200b\u503c\u200b\u662f\u5426\u200b\u7d2f\u52a0\u200b\u3002\u200b\u5141\u8bb8\u200b\u7684\u200b\u53d6\u503c\u200b\u4e3a\u200b<code>sum</code>\u200b\u4e0e\u200b<code>none</code>\u3002\u200b\u5206\u522b\u200b\u8868\u793a\u200b\u4e0a\u200b\u4e00\u6b21\u200b\u52a8\u753b\u200b\u7ed3\u675f\u200b\u7684\u200b\u503c\u200b\u4e0e\u200b\u52a8\u753b\u200b\u539f\u672c\u200b\u7684\u200b\u5c5e\u6027\u200b\u503c\u200b\u3002\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c<code>accumulate</code>\u200b\u5c5e\u6027\u200b\u53d6\u200b<code>none</code>\u3002\u200b\u5f53\u200b\u5c5e\u6027\u200b\u503c\u200b\u4e0d\u200b\u652f\u6301\u200b\u76f8\u52a0\u200b\u6216\u200b\u52a8\u753b\u200b\u4e0d\u200b\u91cd\u590d\u200b\u65f6\u200b\uff0c\u200b\u8be5\u200b\u5c5e\u6027\u200b\u88ab\u200b\u5ffd\u7565\u200b\u3002</p> <p>\u200b\u4ee5\u4e0b\u200b\u5b9e\u73b0\u200b\u6bcf\u6b21\u200b\u70b9\u51fb\u200b\u540e\u200b\u5411\u200b\u53f3\u200b\u79fb\u52a8\u200b\u77e9\u5f62\u200b\u4e24\u6b21\u200b\uff0c\u200b\u6bcf\u6b21\u200b65\u200b\u5355\u4f4d\u200b\uff1a</p> SVG\u200b\u56fe\u50cf\u200b \u200b\u6e32\u67d3\u200b\u56fe\u50cf\u200bSVG\u200b\u4ee3\u7801\u200b <p> </p> <pre><code>&lt;svg width=\"100%\" height=\"100\"&gt;\n    &lt;rect x=\"20\" y=\"20\" fill=\"#69EC69\" width=\"100\" height=\"60\"&gt;\n        &lt;animate attributeName=\"x\" values=\"0;65\" begin=\"click\" keyTimes=\"0;1\" keySplines=\"1 0 1 1\" calcMode=\"spline\" additive=\"sum\" accumulate=\"sum\" dur=\"1.5s\" fill=\"freeze\" repeatCount=\"2\"/&gt;\n    &lt;/rect&gt;\n&lt;/svg&gt;\n</code></pre>"},{"location":"coding/svg/#_3","title":"\u4ea4\u4e92\u200b\u52a8\u753b","text":"<p><code>begin</code>\u200b\u5c5e\u6027\u200b\u7684\u200b\u53d6\u503c\u200b\u53ef\u4ee5\u200b\u4e3a\u200b<code>click</code>\u200b\u6216\u200b<code>touch</code>\u200b\u4ee5\u200b\u54cd\u5e94\u200b\u7528\u6237\u200b\u8f93\u5165\u200b\u3002<code>click</code>\u200b\u65e2\u200b\u53ef\u4ee5\u200b\u54cd\u5e94\u200b\u9f20\u6807\u200b\u70b9\u51fb\u200b\u4e8b\u4ef6\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u54cd\u5e94\u200b\u7528\u6237\u200b\u89e6\u6478\u200b\u3002<code>touch</code>\u200b\u53ea\u80fd\u200b\u54cd\u5e94\u200b\u7528\u6237\u200b\u89e6\u6478\u200b\u3002</p>"},{"location":"coding/svg/#svg_1","title":"\u5e38\u89c1\u200b\u7684\u200bSVG\u200b\u52a8\u753b\u200b\u6548\u679c","text":"<ol> <li>\u200b\u4f4d\u79fb\u200b</li> <li>\u200b\u53d8\u6362\u200b</li> <li>\u200b\u6de1\u5165\u6de1\u51fa\u200b</li> <li>\u200b\u63cf\u8fb9\u200b</li> <li>\u200b\u8def\u5f84\u200b\u53d8\u5316\u200b</li> <li>\u200b\u989c\u8272\u200b\u53d8\u5316\u200b</li> </ol>"},{"location":"coding/svg/#_4","title":"\u4f4d\u79fb","text":"<p>\u200b\u4f4d\u79fb\u200b\u64cd\u4f5c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4f7f\u7528\u200b<code>&lt;animate&gt;</code>\u200b\u63a7\u5236\u200b\u5bf9\u8c61\u200b\u7684\u200b<code>x</code>\u3001<code>y</code>\u200b\u5c5e\u6027\u200b\u4e0e\u200b<code>width</code>\u3001<code>height</code>\u200b\u5c5e\u6027\u200b\u5b9e\u73b0\u200b\u3002\u200b\u53ef\u80fd\u200b\u7684\u200b\u5e94\u7528\u200b\u573a\u666f\u200b\u5982\u4e0b\u200b\uff1a</p> <ul> <li>\u200b\u8fdb\u5ea6\u6761\u200b\u3001\u200b\u76f4\u65b9\u56fe\u200b\u7b49\u200b\u7528\u4e8e\u200b\u4ea4\u4e92\u200b\u7684\u200b\u6570\u636e\u200b\u56fe\u8868\u200b</li> <li>\u200b\u4ea4\u901a\u5de5\u5177\u200b\u6216\u200b\u5176\u4ed6\u200b\u5bf9\u8c61\u200b\u7684\u200b\u79fb\u52a8\u200b</li> </ul> <p>\u200b\u8fdb\u5ea6\u6761\u200b\u793a\u4f8b\u200b\uff1a</p> \u200b\u8fdb\u5ea6\u6761\u200b \u200b\u6e32\u67d3\u200b\u56fe\u50cf\u200bSVG\u200b\u4ee3\u7801\u200b <p></p> <pre><code>&lt;svg id=\"\u200b\u56fe\u5c42\u200b_1\" data-name=\"\u200b\u56fe\u5c42\u200b 1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"700\" height=\"195\" viewBox=\"0 0 700 195\"&gt;\n    &lt;rect x=\"0.5\" y=\"0.5\" width=\"699\" height=\"58\" fill=\"#fff\"/&gt;&lt;path d=\"M699,1V58H1V1H699m1-1H0V59H700V0Z\"/&gt;\n    &lt;rect x=\"1\" y=\"1\" width=\"446\" height=\"57\" fill=\"red\"&gt;\n        &lt;animate attributeName=\"width\" values=\"0;698\" keytimes=\"0;1\" calcmode=\"spline\" keysplines=\"0.44 0.27 0.21 0.99\" begin=\"click\" dur=\"1s\" fill=\"freeze\" repeatcount=\"3\"/&gt;\n    &lt;/rect&gt;\n    &lt;rect x=\"0.5\" y=\"68.5\" width=\"699\" height=\"58\" fill=\"#fff\"/&gt;\n    &lt;path d=\"M699,69v57H1V69H699m1-1H0v59H700V68Z\"/&gt;\n    &lt;rect x=\"1\" y=\"69\" width=\"446\" height=\"57\" fill=\"#dd2\"&gt;\n        &lt;animate attributeName=\"width\" values=\"0;698\" keytimes=\"0;1\" calcmode=\"spline\" keysplines=\"0 0 0.5 1\" begin=\"click\" dur=\"1s\" fill=\"freeze\" repeatcount=\"3\"/&gt;\n    &lt;/rect&gt;\n    &lt;rect x=\"0.5\" y=\"136.5\" width=\"699\" height=\"58\" fill=\"#fff\"/&gt;\n    &lt;path d=\"M699,137v57H1V137H699m1-1H0v59H700V136Z\"/&gt;\n    &lt;rect x=\"1\" y=\"137\" width=\"446\" height=\"57\" fill=\"lime\"&gt;\n        &lt;animate attributeName=\"width\" values=\"0;698\" keytimes=\"0;1\" calcmode=\"spline\" keysplines=\"0.5 0 1 1\" begin=\"click\" dur=\"1s\" fill=\"freeze\" repeatcount=\"3\"/&gt;\n    &lt;/rect&gt;\n&lt;/svg&gt;\n</code></pre> <p>\u200b\u4e00\u4e2a\u200b\u79fb\u52a8\u200b\u7684\u200b\u5706\u70b9\u200b\uff1a</p> \u200b\u5706\u70b9\u200b\u52a8\u753b\u200b \u200b\u6e32\u67d3\u200b\u56fe\u50cf\u200bSVG\u200b\u4ee3\u7801\u200b <p></p> <pre><code>&lt;svg id=\"\u200b\u56fe\u5c42\u200b_1\" data-name=\"\u200b\u56fe\u5c42\u200b 1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"150\" viewBox=\"0 0 700 195\"&gt;\n    &lt;rect width=\"700\" height=\"195\" fill=\"none\"/&gt;\n    &lt;circle cx=\"279.5\" cy=\"97.5\" r=\"25.5\"&gt;\n        &lt;animate attributeName=\"cx\" values=\"0;90;0\" keytimes=\"0;0.5;1\" calcmode=\"spline\" keysplines=\"0.5 0 0.5 1; 0.5 0 0.5 1\" begin=\"0s\" dur=\"2s\" fill=\"freeze\" repeatcount=\"indefinite\" additive=\"sum\"/&gt;\n    &lt;/circle&gt;\n&lt;/svg&gt;\n</code></pre> <p>\u200b\u6b64\u5916\u200b\uff0c\u200b\u90e8\u5206\u200b\u4f4d\u79fb\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>&lt;animateMotion&gt;</code>\u200b\u6807\u7b7e\u200b\u8fdb\u884c\u200b\u63a7\u5236\u200b\uff0c<code>&lt;animateMotion&gt;</code>\u200b\u6807\u7b7e\u200b\u652f\u6301\u200b\u5bf9\u8c61\u200b\u6309\u7167\u200b\u8def\u5f84\u200b\u8fdb\u884c\u200b\u4f4d\u79fb\u200b\u3002</p> <p>\u200b\u590d\u6742\u200b\u7684\u200b\u4f4d\u79fb\u200b\u9700\u8981\u200b\u63a7\u5236\u200b\u5bf9\u8c61\u200b\u7684\u200b<code>translate</code>\u200b\u5c5e\u6027\u200b\u3002</p>"},{"location":"coding/svg/#_5","title":"\u53d8\u6362","text":"<p>\u200b\u4ee5\u4e0b\u200b\u5c5e\u6027\u200b\u5f71\u54cd\u200b\u56fe\u5f62\u200b\u7684\u200b\u53d8\u6362\u200b\uff1a</p> <ul> <li><code>r</code>\uff1a\u200b\u534a\u5f84\u200b\uff08\u200b\u5bf9\u4e8e\u200b\u5706\u200b\uff09</li> <li><code>rotate</code>\uff1a\u200b\u65cb\u8f6c\u200b\uff08\u200b\u4ee5\u200b\u4e2d\u5fc3\u70b9\u200b\uff09</li> <li><code>skewX</code>\u3001<code>skewY</code>\uff1a\u200b\u503e\u659c\u200b</li> <li><code>transform</code>\uff1a\u200b\u590d\u6742\u200b\u53d8\u6362\u200b</li> </ul> <p>\u200b\u4ee5\u4e0b\u200b\u7ed9\u51fa\u200b<code>r</code>\u200b\u53d8\u6362\u200b\u7684\u200b\u793a\u4f8b\u200b\uff1a</p> r\u200b\u53d8\u6362\u200b \u200b\u6e32\u67d3\u200b\u56fe\u50cf\u200bSVG\u200b\u4ee3\u7801\u200b <p>     &gt;&gt;&gt; \u200b\u70b9\u51fb\u200b\u5706\u70b9\u200b \u200b\u67e5\u770b\u200b\u9690\u85cf\u200b\u5185\u5bb9\u200b &lt;&lt;&lt;      Hello              World!      <pre><code>&lt;svg id=\"\u200b\u56fe\u5c42\u200b_1\" data-name=\"\u200b\u56fe\u5c42\u200b 1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"350\" viewBox=\"0 0 749 1334\"&gt;\n    &lt;rect width=\"749\" height=\"1334\" fill=\"#fff\"/&gt;\n    &lt;text transform=\"translate(221.4 1070.91)\" font-size=\"21\" font-family=\"PingFang-SC-Regular, PingFang SC\"&gt;\n        &amp;gt;&amp;gt;&amp;gt; \u200b\u70b9\u51fb\u200b\u5706\u70b9\u200b \u200b\u67e5\u770b\u200b\u9690\u85cf\u200b\u5185\u5bb9\u200b &amp;lt;&amp;lt;&amp;lt;\n    &lt;/text&gt;\n    &lt;circle cx=\"375\" cy=\"992\" r=\"29\" fill=\"#ed1e79\"&gt;\n        &lt;animate attributeName=\"r\" values=\"0;1100\" keytimes=\"0;1\" calcmode=\"spline\" keysplines=\"0 0 0.5 1\" begin=\"click\" dur=\"0.75s\" fill=\"freeze\" additive=\"sum\" restart=\"never\"&gt;\n    &lt;/circle&gt;\n    &lt;text transform=\"translate(0 295.12)\" font-size=\"192\" fill=\"#fff\" font-family=\"PingFang-SC-Heavy, PingFang SC\" font-weight=\"800\"&gt;\n        Hello\n        &lt;tspan x=\"0\" y=\"230.4\"&gt;\n            World!\n        &lt;/tspan&gt;\n    &lt;/text&gt;\n&lt;/svg&gt;\n</code></pre> <p><code>transform</code>\u200b\u5c5e\u6027\u200b\u5728\u200b<code>animateTransform</code>\u200b\u6807\u7b7e\u200b\u4e2d\u200b\u66f4\u6539\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u8f83\u4e3a\u200b\u590d\u6742\u200b\u7684\u200b\u53d8\u6362\u200b\uff0c\u200b\u5982\u7ed5\u200b\u67d0\u200b\u4e00\u4e2a\u200b\u7279\u5b9a\u200b\u70b9\u200b\u8fdb\u884c\u200b\u65cb\u8f6c\u200b\uff1a</p> transform\u200b\u53d8\u6362\u200b \u200b\u6e32\u67d3\u200b\u56fe\u50cf\u200bSVG\u200b\u4ee3\u7801\u200b <p></p> <pre><code>&lt;svg id=\"\u200b\u56fe\u5c42\u200b_1\" data-name=\"\u200b\u56fe\u5c42\u200b 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 749 1340\" width=\"350\"&gt;\n    &lt;rect y=\"6\" width=\"749\" height=\"1334\" fill=\"#fff\"/&gt;\n    &lt;g&gt;\n        &lt;animateTransform attributeName=\"transform\" type=\"rotate\" values=\"0 375 0; -10 375 0; 10 375 0; 0 375 0\" keytimes=\"0;0.25;0.75;1\" calcmode=\"spline\" keysplines=\"0 0 0.5 1; 0.5 0 0.5 1; 0.5 0 1 1\" start=\"0s\" dur=\"2s\" repeatcount=\"indefinite\" /&gt;\n        &lt;line x1=\"375\" y1=\"6\" x2=\"375\" y2=\"969.5\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"12\"/&gt;\n        &lt;circle cx=\"375\" cy=\"969\" r=\"45\" stroke=\"#000\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"12\"/&gt;\n    &lt;/g&gt;\n&lt;/svg&gt;\n</code></pre>"},{"location":"coding/configuration/","title":"\u7cfb\u7edf\u914d\u7f6e","text":""},{"location":"coding/configuration/#_2","title":"\u547d\u4ee4\u884c","text":"<ul> <li>apt</li> <li>Docker</li> <li>ssh</li> <li>Vim</li> <li>update-alternatives</li> </ul>"},{"location":"coding/configuration/#_3","title":"\u8f6f\u4ef6\u200b\u7f16\u8bd1\u200b\u6d41\u7a0b","text":"<ul> <li>\u200b\u6e90\u7801\u200b\u7f16\u8bd1\u200bnginx\u200b\u5e76\u200b\u6dfb\u52a0\u200bRTMP\u200b\u6a21\u5757\u200b</li> </ul>"},{"location":"coding/configuration/apt-get/","title":"apt\uff1aUbuntu \u200b\u5305\u200b\u7ba1\u7406\u5de5\u5177","text":"<p>Ubuntu\u200b\u4e0b\u200b\u7684\u200b\u5305\u200b\u7ba1\u7406\u5de5\u5177\u200b\u662f\u200b<code>dpkg</code>\uff0c\u200b\u6709\u200b\u4e24\u4e2a\u200b\u524d\u7aef\u200b<code>apt</code>\u200b\u548c\u200b<code>apt-get</code>\u3002</p>"},{"location":"coding/configuration/apt-get/#_1","title":"\u5b89\u88c5\u200b\u4e2d\u65ad\u200b\u540e\u200b\u7684\u200b\u6062\u590d","text":"<p>\u200b\u5728\u200b\u67d0\u4e2a\u200b\u8f6f\u4ef6\u200b\u5b89\u88c5\u200b\u4e2d\u65ad\u200b\uff08\u200b\u5982\u200bCtrl+C\u200b\u6216\u200bkill\uff09\u200b\u540e\u200b\uff0c\u200b\u8f6f\u4ef6\u200b\u7684\u200b\u5b89\u88c5\u200b\u5e76\u200b\u6ca1\u6709\u200b\u5b9e\u9645\u200b\u5b8c\u6210\u200b\uff0c\u200b\u9700\u8981\u200b\u7ee7\u7eed\u6267\u884c\u200b\u5b89\u88c5\u64cd\u4f5c\u200b\u6216\u200b\u56de\u6eda\u200b\u5230\u200b\u5b89\u88c5\u200b\u4e4b\u524d\u200b\u7684\u200b\u72b6\u6001\u200b\u3002</p> <p>\u200b\u82e5\u200b\u8981\u200b\u7ee7\u7eed\u200b\u5b89\u88c5\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6267\u884c\u200b\u5982\u4e0b\u200b\u547d\u4ee4\u200b\uff0c<code>dpkg</code>\u200b\u4f1a\u200b\u5c1d\u8bd5\u200b\u5bf9\u200b\u5df2\u7ecf\u200b\u89e3\u538b\u200b\u672a\u200b\u5b8c\u6210\u200b\u5b89\u88c5\u200b\u7684\u200b\u8f6f\u4ef6\u5305\u200b\u8fdb\u884c\u200b\u6062\u590d\u200b\u3002</p> <pre><code>sudo dpkg --configure -a\n</code></pre> <p>\u200b\u82e5\u8981\u200b\u56de\u6eda\u200b\u5b89\u88c5\u200b\uff0c\u200b\u9700\u8981\u200b\u5148\u200b\u5728\u200b<code>dpkg</code>\u200b\u7684\u200b\u5b89\u88c5\u200b\u8bb0\u5f55\u200b\u4e0b\u200b\u627e\u5230\u200b\u672a\u200b\u5b8c\u5168\u5b89\u88c5\u200b\u7684\u200b\u5305\u200b\uff0c\u200b\u5c06\u200b\u5176\u200b\u5220\u9664\u200b\u540e\u200b\u91cd\u65b0\u914d\u7f6e\u200b<code>apt</code>\u3002\u200b\u6b64\u5904\u200b\u4ee5\u200b<code>nvidia-cudnn</code>\u200b\u4e3a\u4f8b\u200b\uff1a</p> <pre><code>sudo ls -l /var/lib/dpkg/info | grep -i nvidia-cudnn\nsudo mv /var/lib/dpkg/info/nvidia-cudnn.* /tmp\nsudo dpkg --configure -a\nsudo apt-get autoremove\n</code></pre>"},{"location":"coding/configuration/docker/","title":"Docker","text":"<p><code>docker</code>\u200b\u662f\u200b\u7528\u4e8e\u200b\u63d0\u4f9b\u200b\u5bb9\u5668\u200b\u955c\u50cf\u200b\u7684\u200b\u8f6f\u4ef6\u200b\u3002\u200b\u955c\u50cf\u200b\u662f\u200b\u4e00\u5957\u200b\u914d\u7f6e\u200b\u597d\u200b\u7684\u200b\u8fd0\u884c\u200b\u73af\u5883\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5feb\u901f\u200b\u90e8\u7f72\u200b\u4e3a\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u3002</p>"},{"location":"coding/configuration/docker/#docker-registry","title":"Docker registry","text":"<p>Docker registry\u200b\u662f\u200bdocker\u200b\u7684\u200b\u955c\u50cf\u200b\u6e90\u200b\u3002</p>"},{"location":"coding/configuration/docker/#_1","title":"\u767b\u5f55","text":"<p>\u200b\u767b\u5f55\u200b\u7ec8\u7aef\u200b\u540e\u200b\uff0c\u200b\u624d\u80fd\u200b\u4ece\u200b\u7f51\u7edc\u200b\u4e0a\u200bpush\u200b\u548c\u200bpull\u200b\u955c\u50cf\u200b\u3002\u200b\u767b\u5f55\u200b\u7684\u200b\u547d\u4ee4\u200b\u4e3a\u200b</p> <pre><code>docker login &lt;registry-url&gt;\n</code></pre> <p>\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u6307\u5b9a\u200b<code>&lt;registry-url&gt;</code>\uff0c\u200b\u5219\u200b\u9ed8\u8ba4\u200b\u4f7f\u7528\u200bDocker registry <code>docker.io</code>\u3002</p> <p>\u200b\u767b\u5f55\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u4f1a\u200b\u8bf7\u6c42\u200b\u7528\u6237\u200b\u8f93\u5165\u200b\u7528\u6237\u540d\u200b\u548c\u200b\u5bc6\u7801\u200b\uff08\u200b\u6216\u200bAccess Token\uff09\u3002\u200b\u5982\u679c\u200b\u8d26\u6237\u200b\u914d\u7f6e\u200b\u4e86\u200b2FA\uff0c\u200b\u5219\u200b\u53ea\u80fd\u200b\u901a\u8fc7\u200bAccess Token\u200b\u7684\u200b\u65b9\u5f0f\u200b\u767b\u5f55\u200b\u3002\u200b\u767b\u5f55\u200b\u4fe1\u606f\u200b\u4fdd\u5b58\u200b\u5728\u200b<code>~/.docker/config.json</code>\u200b\u6216\u200b\u7cfb\u7edf\u200b\u7684\u200b\u94a5\u5319\u200b\u4e32\u4e2d\u200b\u3002\u200b\u5982\u679c\u200b\u52a0\u4e0a\u200b<code>--password-stdin</code>\u200b\u53c2\u6570\u200b\uff0cdocker\u200b\u4f1a\u200b\u4ece\u200b\u547d\u4ee4\u884c\u200b\u4e2d\u200b\u8bfb\u53d6\u200b\u5bc6\u7801\u200b\u3002</p> <p>\u200b\u914d\u7f6e\u200bdocker\u200b\u4f7f\u7528\u200bmacOS\u200b\u94a5\u5319\u200b\u4e32\u200b</p> <ol> <li>\u200b\u6267\u884c\u200b<code>docker logout</code>\uff0c\u200b\u5220\u9664\u200b\u539f\u5148\u200b\u7684\u200b\u767b\u5f55\u200b\u51ed\u8bc1\u200b\uff1b</li> <li>\u200b\u4ece\u200bHomebrew\u200b\u5b89\u88c5\u200b<code>docker-credential-helper</code>\uff1b</li> <li>\u200b\u5728\u200b<code>~/.docker/config.json</code>\u200b\u4e2d\u200b\u52a0\u5165\u200b\u5982\u4e0b\u200b\u4e00\u884c\u200b\uff1a</li> </ol> <pre><code>{\n    \"credsStore\": \"osxkeychain\"\n}\n</code></pre> <ol> <li>\u200b\u91cd\u65b0\u200b\u6267\u884c\u200b<code>docker login</code>\u200b\u767b\u5f55\u200b\uff1b</li> <li>\u200b\u786e\u8ba4\u200b<code>~/.docker/config.json</code>\u200b\u91cc\u200b\u6ca1\u6709\u200b\u767b\u5f55\u200b\u51ed\u8bc1\u200b\uff1a</li> </ol> <pre><code>{\n    \"auths\": {\n            \"https://index.docker.io/v1/\": {}\n    }\n}\n</code></pre>"},{"location":"coding/configuration/docker/#_2","title":"\u7b2c\u4e09\u65b9\u200b\u955c\u50cf\u200b\u6e90\u200b\u5217\u8868","text":"<p>ghcr.io</p> <p><code>ghcr.io</code>\u200b\u662f\u200bGitHub\u200b\u63d0\u4f9b\u200b\u7684\u200b\u955c\u50cf\u200b\u6e90\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u65e0\u7f1d\u200b\u96c6\u6210\u200b\u81f3\u200bGitHub Actions\u3002</p> <p>\u200b\u9a8c\u8bc1\u200b\u65b9\u5f0f\u200b\uff1a</p> <ol> <li>\u200b\u4f7f\u7528\u200bGitHub Access Token\u200b\u9a8c\u8bc1\u200b\uff0cAccess Token\u200b\u5fc5\u987b\u200b\u81f3\u5c11\u200b\u5177\u5907\u200b<code>read:packages</code>\u200b\u6743\u9650\u200b\uff0c\u200b\u5982\u679c\u200b\u8981\u200b\u63a8\u9001\u200b\u955c\u50cf\u200b\uff0c\u200b\u5219\u200b\u8fd8\u200b\u9700\u8981\u200b<code>write:packages</code>\u200b\u6743\u9650\u200b</li> <li>\u200b\u5728\u200bGitHub Actions\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>GITHUB_TOKEN</code>\u200b\u9a8c\u8bc1\u200b\u3002</li> </ol>"},{"location":"coding/configuration/docker/#dockerfile","title":"Dockerfile","text":"<p><code>dockerfile</code>\u200b\u6587\u4ef6\u200b\u7528\u6765\u200b\u5c06\u200b\u4e00\u5957\u200b\u73af\u5883\u200b\u6253\u5305\u200b\u6210\u200b\u955c\u50cf\u200b\u3002\u200b\u6bcf\u200b\u4e00\u6761\u200b\u6307\u4ee4\u200b\u90fd\u200b\u5bf9\u5e94\u200b\u4e86\u200b\u5bb9\u5668\u200b\u955c\u50cf\u200b\u7684\u200b\u4e00\u5c42\u200b\u3002</p>"},{"location":"coding/configuration/docker/#docker_1","title":"Docker\u200b\u955c\u50cf\u200b\u57fa\u7840","text":"<p>Docker\u200b\u955c\u50cf\u200b\u7684\u200b\u57fa\u672c\u200b\u683c\u5f0f\u200b\u4e3a\u200b<code>[&lt;registry-name&gt;]/&lt;namespace&gt;/&lt;image-name&gt;:[&lt;tag&gt;]</code></p> <ul> <li><code>&lt;registry-name&gt;</code>\uff1a\u200b\u53ef\u200b\u9009\u200b\uff0c\u200b\u51b3\u5b9a\u200bDocker\u200b\u955c\u50cf\u200b\u53d1\u5e03\u200b\u5728\u200b\u54ea\u4e2a\u200bRegistry\u200b\u4e0a\u200b\uff1b</li> <li><code>&lt;namespace&gt;</code>\uff1a\u200b\u4e00\u822c\u200b\u662f\u200b\u7528\u6237\u540d\u200b\uff1b</li> <li><code>&lt;image-name&gt;</code>\uff1a\u200b\u955c\u50cf\u200b\u540d\u79f0\u200b\uff1b</li> <li><code>&lt;tag&gt;</code>\uff1a\u200b\u53ef\u200b\u9009\u200b\uff0c\u200b\u955c\u50cf\u200b\u7248\u672c\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u4e3a\u200b<code>latest</code></li> </ul> <p>\u200b\u4f7f\u7528\u200b<code>docker pull</code>\u200b\u547d\u4ee4\u200b\u4ece\u200bregistry\u200b\u4e0b\u8f7d\u200b\u955c\u50cf\u200b\u3002</p> <p>\u200b\u6267\u884c\u200b<code>docker build &lt;path&gt;</code>\u200b\u6765\u200b\u4ece\u200bDockerfile\u200b\u6784\u5efa\u200b\u955c\u50cf\u200b\u3002\u200b\u7528\u200b<code>-t</code>\u200b\u53c2\u6570\u200b\u53ef\u4ee5\u200b\u6307\u5b9a\u200b\u955c\u50cf\u200b\u7684\u200b\u540d\u79f0\u200b\u548c\u200b\u7248\u672c\u200b\u3002</p> <p>\u200b\u5728\u200b\u955c\u50cf\u200b\u6784\u5efa\u200b\u5b8c\u6210\u200b\u540e\u200b\uff0c\u200b\u6267\u884c\u200b<code>docker push &lt;image-name&gt;</code>\u200b\u5c06\u200b\u955c\u50cf\u200b\u63a8\u9001\u200b\u5230\u200b\u5bf9\u5e94\u200b\u7684\u200bregistry\u200b\u4e0a\u200b\u3002</p>"},{"location":"coding/configuration/docker/#add","title":"<code>ADD</code>","text":"<p><code>ADD</code>\uff08\u200b\u6216\u200b<code>COPY</code>\uff09\u200b\u547d\u4ee4\u200b\u5c06\u200b\u672c\u5730\u200b\u6216\u200b\u4e92\u8054\u7f51\u200b\u4e0a\u200b\u7684\u200b\u6587\u4ef6\u200b\u590d\u5236\u5230\u200b\u5bb9\u5668\u200b\u955c\u50cf\u200b\u4e2d\u200b\u3002</p> <pre><code>ADD &lt;local-path&gt; &lt;image-path&gt;\n</code></pre> <ul> <li>\u200b\u5982\u679c\u200b\u8def\u5f84\u200b\u4e2d\u200b\u5305\u542b\u200b\u7a7a\u683c\u200b\uff0c\u200b\u9700\u8981\u200b\u7528\u200b\u53cc\u5f15\u53f7\u200b\u628a\u200b\u8def\u5f84\u200b\u62ec\u200b\u8d77\u6765\u200b\uff1b</li> <li><code>&lt;local-path&gt;</code>\u200b\u652f\u6301\u200b\u901a\u914d\u7b26\u200b<code>*?</code>\uff1b</li> </ul>"},{"location":"coding/configuration/docker/#from","title":"<code>FROM</code>","text":"<p><code>FROM</code>\u200b\u547d\u4ee4\u200b\u6307\u660e\u200b\u5f53\u524d\u200b\u7684\u200b<code>dockerfile</code>\u200b\u662f\u200b\u5728\u200b\u54ea\u200b\u4e00\u4e2a\u200b\u955c\u50cf\u200b\u4e0a\u200b\u6267\u884c\u200b\u7684\u200b\u3002\u200b\u6bcf\u4e2a\u200bDockerfile\u200b\u5fc5\u987b\u200b\u6709\u200b\u4e00\u6761\u200b<code>FROM</code>\u200b\u8bed\u53e5\u200b\u3002</p> <p>\u200b\u7a7a\u767d\u200bDocker\u200b\u955c\u50cf\u200b</p> <p><code>scratch</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u9884\u5b9a\u200b\u4e49\u200b\u7684\u200b\u7a7a\u767d\u200bDocker\u200b\u955c\u50cf\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200b\u6240\u6709\u200bDocker\u200b\u955c\u50cf\u200b\u7684\u200b\u8d77\u59cb\u200b\u3002</p> <pre><code>FROM scratch\n</code></pre>"},{"location":"coding/configuration/docker/#run","title":"<code>RUN</code>","text":"<p><code>RUN</code>\u200b\u6267\u884c\u200b\u4e00\u4e2a\u200b\u547d\u4ee4\u200b\uff0c\u200b\u5982\u679c\u200b\u8981\u200b\u6267\u884c\u200b\u591a\u4e2a\u200b\u547d\u4ee4\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>&amp;&amp;</code>\u200b\u8fde\u63a5\u200b</p> <pre><code>RUN command-1 &amp;&amp; \\\n    command-2 &amp;&amp; \\\n    ...\n</code></pre>"},{"location":"coding/configuration/docker/#tls","title":"\u914d\u7f6e\u200bTLS\u200b\u8fdc\u7a0b\u200b\u8bbf\u95ee","text":"<p>Docker\u200b\u662f\u200bc/s\u200b\u67b6\u6784\u200b\uff0c\u200b\u610f\u5473\u7740\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u8fdc\u7a0b\u200b\u8bbf\u95ee\u200b\u4e3b\u673a\u200b\u7684\u200bDocker daemon\uff0c\u200b\u4ece\u200b\u8fdc\u7a0b\u200b\u76f4\u63a5\u200b\u64cd\u4f5c\u200bDocker\u200b\u73af\u5883\u200b\uff0c\u200b\u5bb9\u5668\u200b\u548c\u200b\u955c\u50cf\u200b\u5747\u200b\u4fdd\u5b58\u200b\u5728\u200b\u8fdc\u7a0b\u200b\u4e3b\u673a\u200b\u4e0a\u200b\u3002\u200b\u4f46\u200b\u5728\u200b\u7f51\u7edc\u200b\u4e0a\u200b\u9700\u8981\u200bTLS\u200b\u52a0\u5bc6\u4f20\u8f93\u200b\u4ee5\u200b\u4fdd\u8bc1\u200b\u5b89\u5168\u200b\uff0c\u200b\u56e0\u6b64\u200b\u9700\u8981\u200b\u5148\u200b\u914d\u7f6e\u200b\u597d\u200bopenssl\uff0c\u200b\u5e76\u4e14\u200b\u6709\u200b\u4e00\u4e2a\u200b\u89e3\u6790\u200b\u5230\u200b\u670d\u52a1\u5668\u200b\u7684\u200b\u57df\u540d\u200b\uff0c\u200b\u5982\u200b<code>www.example.com</code>\u3002</p>"},{"location":"coding/configuration/docker/#_3","title":"\u670d\u52a1\u5668\u200b\u914d\u7f6e","text":"<p><code>dockerd</code>\u200b\u662f\u200bDocker daemon\u200b\u7684\u200b\u53ef\u6267\u884c\u7a0b\u5e8f\u200b\u3002</p> Docker DaemonDocker Desktop <p>\u200b\u5728\u200b\u670d\u52a1\u5668\u7aef\u200b\uff0c\u200b\u9700\u8981\u200b\u6267\u884c\u200b\u5982\u4e0b\u200b\u547d\u4ee4\u200b\u3002</p> <ol> <li> <p>\u200b\u751f\u6210\u200bCA\u200b\u5bc6\u94a5\u200b</p> <pre><code>openssl genrsa -aes256 -out ca-key.pem 4096\nopenssl req -new -x509 -days 365 -key ca-key.pem -sha256 -out ca.pem # (1)\n</code></pre> <ol> <li>\u200b\u4f1a\u200b\u8bf7\u6c42\u200b\u8f93\u5165\u200b\u4e00\u4e9b\u200b\u4fe1\u606f\u200b\uff0c\u200b\u5176\u4e2d\u200b<code>Common Name</code>\u200b\u4e00\u6761\u200b\u9700\u8981\u200b\u586b\u5199\u200b\u670d\u52a1\u5668\u200b\u5bf9\u5e94\u200b\u7684\u200b\u57df\u540d\u200b\u3002</li> </ol> </li> <li> <p>\u200b\u751f\u6210\u200b\u670d\u52a1\u5668\u200b\u5bc6\u94a5\u200b\u548c\u200b\u8bc1\u4e66\u200b</p> <pre><code>openssl genrsa -out server-key.pem 4096\nopenssl req -subj \"/CN=www.example.com\" -sha256 -new -key server-key.pem -out server.csr\necho subjectAltName = DNS:$HOST,IP:8.8.8.8 &gt;&gt; extfile.cnf # (1)\necho extendedKeyUsage = serverAuth &gt;&gt; extfile.cnf\nopenssl x509 -req -days 365 -sha256 -in server.csr -CA ca.pem -CAkey ca-key.pem \\\n    -CAcreateserial -out server-cert.pem -extfile extfile.cnf\n</code></pre> <ol> <li>\u200b\u5982\u679c\u200b\u4e0d\u200b\u9700\u8981\u200bIP\u200b\u5730\u5740\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5220\u9664\u200b\u76f8\u5173\u200b\u6761\u76ee\u200b\u3002</li> </ol> </li> <li> <p>\u200b\u751f\u6210\u200b\u5ba2\u6237\u7aef\u200b\u5bc6\u94a5\u200b\u548c\u200b\u8bc1\u4e66\u200b</p> <pre><code>openssl genrsa -out key.pem 4096\nopenssl req -subj '/CN=client' -new -key key.pem -out client.csr\necho extendedKeyUsage = clientAuth &gt; extfile-client.cnf\nopenssl x509 -req -days 365 -sha256 -in client.csr -CA ca.pem -CAkey ca-key.pem \\\n    -CAcreateserial -out cert.pem -extfile extfile-client.cnf\n</code></pre> </li> <li> <p>\u200b\u6e05\u7406\u200b\u5176\u4f59\u200b\u6587\u4ef6\u200b\uff0c\u200b\u53ea\u200b\u7559\u4e0b\u200b<code>.pem</code>\u200b\u8bc1\u4e66\u200b\u6587\u4ef6\u200b\uff0c\u200b\u5e76\u4e14\u200b\u8c03\u6574\u200b\u8bc1\u4e66\u200b\u6587\u4ef6\u200b\u7684\u200b\u6743\u9650\u200b</p> <pre><code>rm -v client.csr server.csr extfile.cnf extfile-client.cnf\nchmod -v 0400 ca-key.pem key.pem server-key.pem\nchmod -v 0444 ca.pem server-cert.pem cert.pem\n</code></pre> </li> <li> <p>\u200b\u542f\u52a8\u200bDocker daemon</p> <pre><code>dockerd \\\n    --tlsverify \\\n    --tlscacert=ca.pem \\\n    --tlscert=server-cert.pem \\\n    --tlskey=server-key.pem \\\n    -H=0.0.0.0:2376\n</code></pre> </li> <li> <p>\u200b\u5206\u53d1\u200b\u5ba2\u6237\u7aef\u200b\u8bc1\u4e66\u200b<code>ca.pem</code>\u3001<code>cert.pem</code>\u3001<code>key.pem</code>\u3002\u200b\u5ba2\u6237\u7aef\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\u8fde\u63a5\u200b</p> <pre><code>docker --tlsverify \\\n    --tlscacert=ca.pem \\\n    --tlscert=cert.pem \\\n    --tlskey=key.pem \\\n    -H=$HOST:2376\n</code></pre> </li> </ol> <p>\u200b\u5728\u200bWindows\u200b\u4e2d\u200b\uff0cDocker\u200b\u901a\u8fc7\u200bWSL\u200b\u6216\u8005\u200bHyper-V\u200b\u865a\u62df\u5316\u200b\u5b9e\u73b0\u200bLinux\u200b\u73af\u5883\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u5982\u679c\u200b\u5728\u200bWindows\u200b\u4e0b\u200b\u76f4\u63a5\u200b\u6267\u884c\u200b<code>dockerd.exe</code>\uff0c\u200b\u5f97\u5230\u200b\u7684\u200b\u662f\u200b\u8fd0\u884c\u200bWindows\u200b\u5bb9\u5668\u200b\u7684\u200bDocker\u3002\u200b\u5982\u679c\u200b\u8981\u200b\u8fdc\u7a0b\u200b\u8fde\u63a5\u200b\u8fd0\u884c\u200bLinux\u200b\u7684\u200bDocker\u200b\u73af\u5883\u200b\uff0c\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b<code>docker-remote-api-tls</code>\u3002</p> <p>Docker Desktop Engine \u200b\u914d\u7f6e\u6587\u4ef6\u200b</p> <p>\u200b\u5728\u200bDocker Desktop\u200b\u91cc\u200b\u7684\u200bSettings - Engine\u200b\u91cc\u200b\u4fee\u6539\u200bTLS\u200b\u53c2\u6570\u200b\u914d\u7f6e\u200b\uff0c\u200b\u4f1a\u200b\u5bfc\u81f4\u200bDocker Engine\u200b\u65e0\u6cd5\u200b\u542f\u52a8\u200b\u3002</p> <ol> <li>\u200b\u6267\u884c\u200b<code>git clone https://github.com/kekru/docker-remote-api-tls.git</code>\u200b\u514b\u9686\u200b\u955c\u50cf\u200b</li> <li> <p>\u200b\u7f16\u8f91\u200b<code>docker-compose.yml</code>\uff0c\u200b\u66ff\u6362\u200b<code>&lt;password&gt;</code>\u3001<code>&lt;domain-or-ip&gt;</code>\u3001<code>&lt;client-cert-path&gt;</code>\u200b\u4e2d\u200b\u7684\u200b\u5185\u5bb9\u200b</p> <pre><code>version: \"3.4\"\nservices:\n    remote-api:\n        image: kekru/docker-remote-api-tls:v0.4.0\n        ports:\n            - 2376:443\n        environment:\n            - CREATE_CERTS_WITH_PW=&lt;password&gt;\n            - CERT_HOSTNAME=&lt;domain-or-ip&gt;\n        volumes:\n            - &lt;client-cert-path&gt;:/data/certs # (1)\n            - /var/run/docker.sock:/var/run/docker.sock:ro\n</code></pre> <ol> <li>\u200b\u4e0d\u52a0\u200b\u8fd9\u200b\u4e00\u884c\u200b\u4e5f\u200b\u884c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4ece\u200bDocker Desktop\u200b\u91cc\u200b\u590d\u5236\u200b</li> </ol> </li> <li> <p>\u200b\u6267\u884c\u200b<code>docker-compose up -d</code>\u200b\u8fd0\u884c\u200b\u5bb9\u5668\u200b\uff0c\u200b\u6ce8\u610f\u200b\u5728\u200b\u8fdc\u7a0b\u200b\u8fde\u63a5\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u9700\u8981\u200b\u4fdd\u8bc1\u200b\u5bb9\u5668\u200b\u59cb\u7ec8\u200b\u5f00\u542f\u200b</p> </li> </ol>"},{"location":"coding/configuration/docker/#_4","title":"\u5ba2\u6237\u7aef\u200b\u914d\u7f6e","text":"<ol> <li>\u200b\u5c06\u200b<code>ca.pem</code>\u3001<code>cert.pem</code>\u3001<code>key.pem</code>\u200b\u590d\u5236\u5230\u200b\u5ba2\u6237\u7aef\u200b\u7684\u200b<code>~/.docker</code>\u200b\u76ee\u5f55\u200b\u4e0b\u200b</li> <li> <p>\u200b\u8bbe\u7f6e\u200b\u73af\u5883\u53d8\u91cf\u200b\uff08\u200b\u53ea\u200b\u9002\u7528\u200b\u4e8e\u200b\u4ece\u200b\u7ec8\u7aef\u200b\u8bbf\u95ee\u200bDocker\u200b\u7684\u200b\u60c5\u51b5\u200b\uff09</p> <pre><code>export $DOCKER_TLS_VERIFY=1\nexport $DOCKER_HOST=\"tcp://&lt;domain-or-ip&gt;:2376\"\n</code></pre> </li> <li> <p>\u200b\u6216\u8005\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200bDocker context</p> <pre><code>docker context create remote --docker \\\n    \"host=tcp://&lt;domain-or-ip&gt;:2376,ca=~/.docker/ca.pem,cert=~/.docker/cert.pem,key=~/.docker/key.pem\n</code></pre> </li> <li> <p>\u200b\u6b64\u540e\u200b\uff0cDocker\u200b\u4f1a\u200b\u9ed8\u8ba4\u200b\u4f7f\u7528\u200b\u8fdc\u7a0b\u200b\u8fde\u63a5\u200b\u3002</p> </li> </ol> <p>\u200b\u5982\u679c\u200b\u8fde\u63a5\u200b\u6210\u529f\u200b\uff0c\u200b\u6267\u884c\u200b<code>docker version</code>\u200b\u4f1a\u200b\u540c\u65f6\u200b\u8f93\u51fa\u200b\u5ba2\u6237\u7aef\u200b\u548c\u200b\u670d\u52a1\u5668\u200b\u4e24\u8005\u200b\u7684\u200b\u7248\u672c\u4fe1\u606f\u200b\uff0c\u200b\u5982\u200b</p> <pre><code>Client: Docker Engine - Community\n Version:           24.0.5\n API version:       1.43\n Go version:        go1.20.6\n Git commit:        ced0996600\n Built:             Wed Jul 19 19:44:22 2023\n OS/Arch:           darwin/arm64\n Context:           default\n\nServer: Docker Desktop 4.21.1 (114176)\n Engine:\n  Version:          24.0.2\n  API version:      1.43 (minimum version 1.12)\n  Go version:       go1.20.4\n  Git commit:       659604f\n  Built:            Thu May 25 21:52:17 2023\n  OS/Arch:          linux/amd64\n  Experimental:     false\n containerd:\n  Version:          1.6.21\n  GitCommit:        3dce8eb055cbb6872793272b4f20ed16117344f8\n runc:\n  Version:          1.1.7\n  GitCommit:        v1.1.7-0-g860f061\n docker-init:\n  Version:          0.19.0\n  GitCommit:        de40ad0\n</code></pre> <p>\u200b\u6302\u8f7d\u200b\u5377\u200b</p> <p>\u200b\u5728\u200bDocker\u200b\u4e2d\u200b\uff0c\u200b\u65e0\u8bba\u662f\u200b\u4f7f\u7528\u200b<code>-v</code>\u200b\u53c2\u6570\u200b\u8fd8\u662f\u200b<code>--mount</code>\u200b\u53c2\u6570\u200b\u6302\u8f7d\u200b\u7684\u200b\u5377\u200b\u7684\u200b\u6e90\u200b\u8def\u5f84\u200b\u90fd\u200b\u662f\u200b\u76f8\u5bf9\u200b\u4e8e\u200bDocker Daemon\u200b\u800c\u8a00\u200b\u7684\u200b\u3002</p>"},{"location":"coding/configuration/docker/#_5","title":"\u53c2\u8003\u200b\u9605\u8bfb","text":"<p>Docker registry\uff1a</p> <ul> <li>Working with the Container registry (GitHub)</li> </ul> <p>Dockerfile\uff1a</p> <ul> <li>Dockerfile reference</li> </ul> <p>\u200b\u8fdc\u7a0b\u200b\u8bbf\u95ee\u200bDocker daemon\uff1a</p> <ul> <li>Windows Docker \u200b\u4e3b\u673a\u200b\u8fdc\u7a0b\u7ba1\u7406\u200b</li> <li>Protect the Docker daemon socket</li> <li>dockerd</li> <li>Docker Remote API with TLS client authentication via container</li> <li>How can I mount a volume of files to a remote docker daemon?</li> </ul>"},{"location":"coding/configuration/nginx-rtmp/","title":"\u6e90\u7801\u200b\u7f16\u8bd1\u200bnginx\u200b\u5e76\u200b\u6dfb\u52a0\u200bRTMP\u200b\u6a21\u5757","text":""},{"location":"coding/configuration/nginx-rtmp/#_1","title":"\u5148\u51b3\u6761\u4ef6","text":"<ul> <li>nginx\u200b\u6e90\u4ee3\u7801\u200b\uff0c\u200b\u9700\u8981\u200b\u4ece\u200bGitHub Release\u200b\u4e0b\u8f7d\u200b\uff0c\u200b\u4ece\u200bnginx\u200b\u5b98\u7f51\u200b\u4e0b\u8f7d\u200b\u7684\u200b\u6e90\u4ee3\u7801\u200b\u5728\u200b\u540e\u7eed\u200b\u7f16\u8bd1\u200b\u65f6\u4f1a\u200b\u62a5\u200b\u5982\u4e0b\u200b\u9519\u8bef\u200b\uff1a   <pre><code>NMAKE : fatal error U1073: don't know how to make 'src/os/win32/ngx_win32_config.h'\n</code></pre></li> <li>openssl\u200b\u6e90\u4ee3\u7801\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4ece\u200bGitHub Release\u200b\u4e0b\u8f7d\u200b</li> <li>zlib\u200b\u6e90\u4ee3\u7801\u200b\uff0cGitHub\u200b\u4ed3\u5e93\u200b\uff1ahttps://github.com/madler/zlib</li> <li>pcre\u200b\u6e90\u4ee3\u7801\u200b\uff0c\u200b\u5b98\u7f51\u200b\u63d0\u4f9b\u200b\u5404\u200b\u7248\u672c\u200b\u7684\u200b\u4e0b\u8f7d\u200b\u94fe\u63a5\u200b\uff1ahttps://ftp.pcre.org/pub/pcre/</li> <li>RMTP\u200b\u63d2\u4ef6\u200b\uff1ahttps://github.com/arut/nginx-rtmp-module</li> <li>MSYS\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200bMinGW Installer\u200b\u8fdb\u884c\u200b\u5b89\u88c5\u200b</li> <li>Visual Studio\uff0c\u200b\u9700\u8981\u200b\u5b89\u88c5\u200bC++\u200b\u7f16\u8bd1\u5668\u200b</li> <li>NASM</li> <li>Perl&gt;=5.30</li> </ul> <p>\u200b\u672c\u6b21\u200b\u7f16\u8bd1\u200b\u4f7f\u7528\u200b\u7684\u200b\u73af\u5883\u200b\uff1a</p> <ul> <li>Windows 19042.662</li> <li>Visual Studio 2019</li> <li>Visual Studio Build Tools 2017</li> <li>Windows 10 SDK 10.0.17763.0</li> <li>nginx 1.19.5</li> <li>openssl 1.1.1g</li> <li>zlib 1.2.11</li> <li>pcre 8.44</li> <li>perl 5.32 (Strawberry)</li> <li>nasm 2.15.05</li> <li>nmake 14.27.29112.0</li> <li>MSVC(cl) 19.27.29112</li> </ul> <p>\u200b\u5c06\u200b\u5305\u542b\u200b<code>perl.exe</code>\u3001<code>nasm.exe</code>\u3001<code>sed.exe</code>\u200b\u7684\u200b\u76ee\u5f55\u200b\u6dfb\u52a0\u200b\u5230\u200bPATH\u200b\u73af\u5883\u53d8\u91cf\u200b\u3002</p>"},{"location":"coding/configuration/nginx-rtmp/#_2","title":"\u51c6\u5907\u200b\u5de5\u4f5c","text":"<p>\u200b\u542f\u52a8\u200bMSYS\uff0c<code>cd</code>\u200b\u5230\u200bnginx\u200b\u7684\u200b\u6e90\u4ee3\u7801\u200b\u76ee\u5f55\u200b\uff0c\u200b\u5207\u6362\u200b\u5230\u200bC\u200b\u76d8\u200b\u6839\u76ee\u5f55\u200b\u7684\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>cd /c/\n</code></pre> <p>\u200b\u6267\u884c\u200b<code>auto/configure</code>\uff0c\u200b\u6839\u636e\u200bnginx\u200b\u5b98\u7f51\u200b\u63d0\u4f9b\u200b\u7684\u200b\u53c2\u6570\u200b\u8fdb\u884c\u200b\uff0c\u200b\u6dfb\u52a0\u200b``\u200b\u53c2\u6570\u200b\uff0c\u200b\u5177\u4f53\u200b\u547d\u4ee4\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>auto/configure \\\n    --with-cc=cl \\\n    --with-debug \\\n    --prefix=. \\\n    --conf-path=conf/nginx.conf \\\n    --pid-path=logs/nginx.pid \\\n    --http-log-path=logs/access.log \\\n    --error-log-path=logs/error.log \\\n    --sbin-path=nginx.exe \\\n    --http-client-body-temp-path=temp/client_body_temp \\\n    --http-proxy-temp-path=temp/proxy_temp \\\n    --http-fastcgi-temp-path=temp/fastcgi_temp \\\n    --http-scgi-temp-path=temp/scgi_temp \\\n    --http-uwsgi-temp-path=temp/uwsgi_temp \\\n    --with-cc-opt=-DFD_SETSIZE=1024 \\\n    --with-pcre=pcre-8.44 \\\n    --with-zlib=zlib \\\n    --with-openssl=openssl \\\n    --with-openssl-opt=no-asm \\\n    --with-http_ssl_module \\\n    --add-module=nginx-rtmp-module\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\u6b64\u5904\u200b<code>--with-pcre</code>\u3001<code>--with-zlib</code>\u3001<code>--with-openssl</code>\u200b\u53c2\u6570\u200b\u4e2d\u200b\u63d0\u4f9b\u200b\u7684\u200b\u8def\u5f84\u200b\u9700\u8981\u200b\u4e0e\u200bPCRE\u3001zlib\u3001openssl\u200b\u7684\u200b\u6e90\u4ee3\u7801\u200b\u8def\u5f84\u200b\u5206\u522b\u200b\u5bf9\u5e94\u200b\u3002</p> <p>\u200b\u6267\u884c\u200b\u5b8c\u6bd5\u200b\u540e\u200b\u751f\u6210\u200bMakefile\u200b\u6587\u4ef6\u200b\u300232\u200b\u4f4d\u200b\u73af\u5883\u200b\u4e0b\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u5f00\u59cb\u200b\u7f16\u8bd1\u200b\uff0c64\u200b\u4f4d\u200b\u73af\u5883\u200b\u4e0b\u200b\u9700\u8981\u200b\u5bf9\u200b<code>auto\\lib\\openssl\\makefile.msvc</code>\u200b\u6539\u4e3a\u200b\u5982\u4e0b\u200b\u4ee3\u7801\u200b</p> <pre><code># Copyright (C) Igor Sysoev\n# Copyright (C) Nginx, Inc.\n\n\nall:\n    cd $(OPENSSL)\n\n    perl Configure VC-WIN64A no-shared              \\\n        --prefix=\"%cd%/openssl\"                     \\\n        --openssldir=\"%cd%/openssl/ssl\"             \\\n        $(OPENSSL_OPT)\n\n    if exist ms\\do_win64a.bat (                     \\\n        ms\\do_win64a                                \\\n        &amp;&amp; $(MAKE) -f ms\\nt.mak                     \\\n        &amp;&amp; $(MAKE) -f ms\\nt.mak install             \\\n    ) else (                                        \\\n        $(MAKE)                                     \\\n        &amp;&amp; $(MAKE) install_sw                       \\\n    )\n</code></pre> <p>\u200b\u5c06\u200b<code>VC-WIN32</code>\u200b\u66ff\u6362\u200b\u4e3a\u200b<code>VC-WIN64A</code>\uff0c\u200b\u6240\u6709\u200b\u7684\u200b<code>ms\\do_ms.bat</code>\u200b\u66ff\u6362\u200b\u4e3a\u200b<code>ms\\do_win64a.bat</code>\u3002</p>"},{"location":"coding/configuration/nginx-rtmp/#msvc","title":"MSVC\u200b\u7f16\u8bd1","text":"<p>\u200b\u7f16\u8f91\u200b\u5982\u4e0b\u200b\u6e90\u4ee3\u7801\u200b\u6587\u4ef6\u200b\uff1a</p> <ul> <li><code>nginx-rtmp-module/ngx_rtmp_flv_module.c</code>\uff0c\u200b\u5b9a\u4f4d\u200b\u5230\u200b\u5982\u4e0b\u200b\u4ee3\u7801\u200b\u5757\u200b\uff1a</li> </ul> <p>509\u200b\u884c\u200b\uff1a</p> <pre><code>ngx_rtmp_prepare_message(s, &amp;h, ctx-&gt;msg_mask &amp; (1 &lt;&lt; h.type) ?\n                           &amp;lh : NULL, out);\n</code></pre> <p>521\u200b\u884c\u200b\uff1a</p> <pre><code>ctx-&gt;msg_mask |= (1 &lt;&lt; h.type);\n</code></pre> <p>\u200b\u5c06\u200b\u5176\u4e2d\u200b\u7684\u200b<code>(1 &lt;&lt; h.type)</code>\u200b\u6539\u4e3a\u200b<code>(unsigned long)(1 &lt;&lt; h.type)</code>\u3002</p> <ul> <li><code>nginx-rtmp-module/ngx_rtmp_core_module.c</code>\uff0c\u200b\u5b9a\u4f4d\u200b\u5230\u200b\u5982\u4e0b\u200b\u4ee3\u7801\u200b\u5757\u200b\uff1a</li> </ul> <p>611\u200b\u884c\u200b\uff1a</p> <pre><code>struct sockaddr  *sa;\n</code></pre> <p>\u200b\u5c06\u200b\u6b64\u5904\u200b\u7684\u200b\u53d8\u91cf\u540d\u200b<code>sa</code>\u200b\u6539\u4e3a\u200b<code>sa2</code>\uff0c\u200b\u5e76\u200b\u5c06\u200b\u6b64\u540e\u200b\u6240\u6709\u200b\u7684\u200b<code>sa</code>\u200b\u53d8\u91cf\u200b\u6539\u4e3a\u200b<code>sa2</code>\u3002</p> <p>\u200b\u542f\u52a8\u200bx64 Native Tools Command Prompt for VS 2019\uff0c\u200b\u5207\u6362\u200b\u5230\u200b\u6e90\u4ee3\u7801\u200b\u76ee\u5f55\u200b\uff0c\u200b\u6267\u884c\u200b<code>nmake</code>\u200b\u542f\u52a8\u200b\u7f16\u8bd1\u200b\u3002\u200b\u8f93\u51fa\u200b\u6587\u4ef6\u200b\u4e3a\u200b<code>objs/nginx.exe</code></p>"},{"location":"coding/configuration/nginx-rtmp/#nginx","title":"nginx\u200b\u914d\u7f6e","text":"<p>\u200b\u5c06\u200b<code>objs/nginx.exe</code>\u200b\u590d\u5236\u200b\u4e00\u4efd\u200b\u3002\u200b\u5728\u200b\u6240\u5728\u200b\u76ee\u5f55\u200b\u4e0b\u200b\u521b\u5efa\u200b\u5982\u4e0b\u200b\u6587\u4ef6\u200b\u7ed3\u6784\u200b\uff1a</p> <pre><code>.\n\u251c\u2500 nginx.exe\n\u251c\u2500 conf/\n\u2502  \u2514\u2500 nginx.conf\n\u251c\u2500 html\n\u2502  \u2514\u2500 index.xsl\n\u251c\u2500 logs\n\u2514\u2500 temp\n</code></pre> <p>\u200b\u5176\u4e2d\u200b\uff0c<code>html/index.xsl</code>\u200b\u5199\u5165\u200b\u5982\u4e0b\u200b\u5185\u5bb9\u200b</p> html/index.xsl\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?&gt;\n&lt;!--\nCopyright (C) Roman Arutyunyan\n--&gt;\n&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt;\n&lt;xsl:template match=\"/\"&gt;\n    &lt;html&gt;\n        &lt;head&gt;\n            &lt;title&gt;RTMP statistics&lt;/title&gt;\n        &lt;/head&gt;\n        &lt;body&gt;\n            &lt;xsl:apply-templates select=\"rtmp\"/&gt;\n            &lt;hr/&gt;\n            Generated by &lt;a href='https://github.com/arut/nginx-rtmp-module'&gt;\n            nginx-rtmp-module&lt;/a&gt;&amp;#160;&lt;xsl:value-of select=\"/rtmp/nginx_rtmp_version\"/&gt;,\n            &lt;a href=\"http://nginx.org\"&gt;nginx&lt;/a&gt;&amp;#160;&lt;xsl:value-of select=\"/rtmp/nginx_version\"/&gt;,\n            pid &lt;xsl:value-of select=\"/rtmp/pid\"/&gt;,\n            built &lt;xsl:value-of select=\"/rtmp/built\"/&gt;&amp;#160;&lt;xsl:value-of select=\"/rtmp/compiler\"/&gt;\n        &lt;/body&gt;\n    &lt;/html&gt;\n&lt;/xsl:template&gt;\n&lt;xsl:template match=\"rtmp\"&gt;\n    &lt;table cellspacing=\"1\" cellpadding=\"5\"&gt;\n        &lt;tr bgcolor=\"#999999\"&gt;\n            &lt;th&gt;RTMP&lt;/th&gt;\n            &lt;th&gt;#clients&lt;/th&gt;\n            &lt;th colspan=\"4\"&gt;Video&lt;/th&gt;\n            &lt;th colspan=\"4\"&gt;Audio&lt;/th&gt;\n            &lt;th&gt;In bytes&lt;/th&gt;\n            &lt;th&gt;Out bytes&lt;/th&gt;\n            &lt;th&gt;In bits/s&lt;/th&gt;\n            &lt;th&gt;Out bits/s&lt;/th&gt;\n            &lt;th&gt;State&lt;/th&gt;\n            &lt;th&gt;Time&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td colspan=\"2\"&gt;Accepted: &lt;xsl:value-of select=\"naccepted\"/&gt;&lt;/td&gt;\n            &lt;th bgcolor=\"#999999\"&gt;codec&lt;/th&gt;\n            &lt;th bgcolor=\"#999999\"&gt;bits/s&lt;/th&gt;\n            &lt;th bgcolor=\"#999999\"&gt;size&lt;/th&gt;\n            &lt;th bgcolor=\"#999999\"&gt;fps&lt;/th&gt;\n            &lt;th bgcolor=\"#999999\"&gt;codec&lt;/th&gt;\n            &lt;th bgcolor=\"#999999\"&gt;bits/s&lt;/th&gt;\n            &lt;th bgcolor=\"#999999\"&gt;freq&lt;/th&gt;\n            &lt;th bgcolor=\"#999999\"&gt;chan&lt;/th&gt;\n            &lt;td&gt;\n                &lt;xsl:call-template name=\"showsize\"&gt;\n                    &lt;xsl:with-param name=\"size\" select=\"bytes_in\"/&gt;\n                &lt;/xsl:call-template&gt;\n            &lt;/td&gt;\n            &lt;td&gt;\n                &lt;xsl:call-template name=\"showsize\"&gt;\n                    &lt;xsl:with-param name=\"size\" select=\"bytes_out\"/&gt;\n                &lt;/xsl:call-template&gt;\n            &lt;/td&gt;\n            &lt;td&gt;\n                &lt;xsl:call-template name=\"showsize\"&gt;\n                    &lt;xsl:with-param name=\"size\" select=\"bw_in\"/&gt;\n                    &lt;xsl:with-param name=\"bits\" select=\"1\"/&gt;\n                    &lt;xsl:with-param name=\"persec\" select=\"1\"/&gt;\n                &lt;/xsl:call-template&gt;\n            &lt;/td&gt;\n            &lt;td&gt;\n                &lt;xsl:call-template name=\"showsize\"&gt;\n                    &lt;xsl:with-param name=\"size\" select=\"bw_out\"/&gt;\n                    &lt;xsl:with-param name=\"bits\" select=\"1\"/&gt;\n                    &lt;xsl:with-param name=\"persec\" select=\"1\"/&gt;\n                &lt;/xsl:call-template&gt;\n            &lt;/td&gt;\n            &lt;td/&gt;\n            &lt;td&gt;\n                &lt;xsl:call-template name=\"showtime\"&gt;\n                    &lt;xsl:with-param name=\"time\" select=\"/rtmp/uptime * 1000\"/&gt;\n                &lt;/xsl:call-template&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;xsl:apply-templates select=\"server\"/&gt;\n    &lt;/table&gt;\n&lt;/xsl:template&gt;\n&lt;xsl:template match=\"server\"&gt;\n    &lt;xsl:apply-templates select=\"application\"/&gt;\n&lt;/xsl:template&gt;\n&lt;xsl:template match=\"application\"&gt;\n    &lt;tr bgcolor=\"#999999\"&gt;\n        &lt;td&gt;\n            &lt;b&gt;&lt;xsl:value-of select=\"name\"/&gt;&lt;/b&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;xsl:apply-templates select=\"live\"/&gt;\n    &lt;xsl:apply-templates select=\"play\"/&gt;\n&lt;/xsl:template&gt;\n&lt;xsl:template match=\"live\"&gt;\n    &lt;tr bgcolor=\"#aaaaaa\"&gt;\n        &lt;td&gt;\n            &lt;i&gt;live streams&lt;/i&gt;\n        &lt;/td&gt;\n        &lt;td align=\"middle\"&gt;\n            &lt;xsl:value-of select=\"nclients\"/&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;xsl:apply-templates select=\"stream\"/&gt;\n&lt;/xsl:template&gt;\n&lt;xsl:template match=\"play\"&gt;\n    &lt;tr bgcolor=\"#aaaaaa\"&gt;\n        &lt;td&gt;\n            &lt;i&gt;vod streams&lt;/i&gt;\n        &lt;/td&gt;\n        &lt;td align=\"middle\"&gt;\n            &lt;xsl:value-of select=\"nclients\"/&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;xsl:apply-templates select=\"stream\"/&gt;\n&lt;/xsl:template&gt;\n&lt;xsl:template match=\"stream\"&gt;\n    &lt;tr valign=\"top\"&gt;\n        &lt;xsl:attribute name=\"bgcolor\"&gt;\n            &lt;xsl:choose&gt;\n                &lt;xsl:when test=\"active\"&gt;#cccccc&lt;/xsl:when&gt;\n                &lt;xsl:otherwise&gt;#dddddd&lt;/xsl:otherwise&gt;\n            &lt;/xsl:choose&gt;\n        &lt;/xsl:attribute&gt;\n        &lt;td&gt;\n            &lt;a href=\"\"&gt;\n                &lt;xsl:attribute name=\"onclick\"&gt;\n                    var d=document.getElementById('&lt;xsl:value-of select=\"../../name\"/&gt;-&lt;xsl:value-of select=\"name\"/&gt;');\n                    d.style.display=d.style.display=='none'?'':'none';\n                    return false\n                &lt;/xsl:attribute&gt;\n                &lt;xsl:value-of select=\"name\"/&gt;\n                &lt;xsl:if test=\"string-length(name) = 0\"&gt;\n                    [EMPTY]\n                &lt;/xsl:if&gt;\n            &lt;/a&gt;\n        &lt;/td&gt;\n        &lt;td align=\"middle\"&gt; &lt;xsl:value-of select=\"nclients\"/&gt; &lt;/td&gt;\n        &lt;td&gt;\n            &lt;xsl:value-of select=\"meta/video/codec\"/&gt;&amp;#160;&lt;xsl:value-of select=\"meta/video/profile\"/&gt;&amp;#160;&lt;xsl:value-of select=\"meta/video/level\"/&gt;\n        &lt;/td&gt;\n        &lt;td&gt;\n            &lt;xsl:call-template name=\"showsize\"&gt;\n                &lt;xsl:with-param name=\"size\" select=\"bw_video\"/&gt;\n                &lt;xsl:with-param name=\"bits\" select=\"1\"/&gt;\n                &lt;xsl:with-param name=\"persec\" select=\"1\"/&gt;\n            &lt;/xsl:call-template&gt;\n        &lt;/td&gt;\n        &lt;td&gt;\n            &lt;xsl:apply-templates select=\"meta/video/width\"/&gt;\n        &lt;/td&gt;\n        &lt;td&gt;\n            &lt;xsl:value-of select=\"meta/video/frame_rate\"/&gt;\n        &lt;/td&gt;\n        &lt;td&gt;\n            &lt;xsl:value-of select=\"meta/audio/codec\"/&gt;&amp;#160;&lt;xsl:value-of select=\"meta/audio/profile\"/&gt;\n        &lt;/td&gt;\n        &lt;td&gt;\n            &lt;xsl:call-template name=\"showsize\"&gt;\n                &lt;xsl:with-param name=\"size\" select=\"bw_audio\"/&gt;\n                &lt;xsl:with-param name=\"bits\" select=\"1\"/&gt;\n                &lt;xsl:with-param name=\"persec\" select=\"1\"/&gt;\n            &lt;/xsl:call-template&gt;\n        &lt;/td&gt;\n        &lt;td&gt;\n            &lt;xsl:apply-templates select=\"meta/audio/sample_rate\"/&gt;\n        &lt;/td&gt;\n        &lt;td&gt;\n            &lt;xsl:value-of select=\"meta/audio/channels\"/&gt;\n        &lt;/td&gt;\n        &lt;td&gt;\n            &lt;xsl:call-template name=\"showsize\"&gt;\n            &lt;xsl:with-param name=\"size\" select=\"bytes_in\"/&gt;\n        &lt;/xsl:call-template&gt;\n        &lt;/td&gt;\n        &lt;td&gt;\n            &lt;xsl:call-template name=\"showsize\"&gt;\n                &lt;xsl:with-param name=\"size\" select=\"bytes_out\"/&gt;\n            &lt;/xsl:call-template&gt;\n        &lt;/td&gt;\n        &lt;td&gt;\n            &lt;xsl:call-template name=\"showsize\"&gt;\n                &lt;xsl:with-param name=\"size\" select=\"bw_in\"/&gt;\n                &lt;xsl:with-param name=\"bits\" select=\"1\"/&gt;\n                &lt;xsl:with-param name=\"persec\" select=\"1\"/&gt;\n            &lt;/xsl:call-template&gt;\n        &lt;/td&gt;\n        &lt;td&gt;\n            &lt;xsl:call-template name=\"showsize\"&gt;\n                &lt;xsl:with-param name=\"size\" select=\"bw_out\"/&gt;\n                &lt;xsl:with-param name=\"bits\" select=\"1\"/&gt;\n                &lt;xsl:with-param name=\"persec\" select=\"1\"/&gt;\n            &lt;/xsl:call-template&gt;\n        &lt;/td&gt;\n        &lt;td&gt;&lt;xsl:call-template name=\"streamstate\"/&gt;&lt;/td&gt;\n        &lt;td&gt;\n            &lt;xsl:call-template name=\"showtime\"&gt;\n            &lt;xsl:with-param name=\"time\" select=\"time\"/&gt;\n            &lt;/xsl:call-template&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr style=\"display:none\"&gt;\n        &lt;xsl:attribute name=\"id\"&gt;\n            &lt;xsl:value-of select=\"../../name\"/&gt;-&lt;xsl:value-of select=\"name\"/&gt;\n        &lt;/xsl:attribute&gt;\n        &lt;td colspan=\"16\" ngcolor=\"#eeeeee\"&gt;\n            &lt;table cellspacing=\"1\" cellpadding=\"5\"&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Id&lt;/th&gt;\n                    &lt;th&gt;State&lt;/th&gt;\n                    &lt;th&gt;Address&lt;/th&gt;\n                    &lt;th&gt;Flash version&lt;/th&gt;\n                    &lt;th&gt;Page URL&lt;/th&gt;\n                    &lt;th&gt;SWF URL&lt;/th&gt;\n                    &lt;th&gt;Dropped&lt;/th&gt;\n                    &lt;th&gt;Timestamp&lt;/th&gt;\n                    &lt;th&gt;A-V&lt;/th&gt;\n                    &lt;th&gt;Time&lt;/th&gt;\n                &lt;/tr&gt;\n                &lt;xsl:apply-templates select=\"client\"/&gt;\n            &lt;/table&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/xsl:template&gt;\n&lt;xsl:template name=\"showtime\"&gt;\n    &lt;xsl:param name=\"time\"/&gt;\n\n    &lt;xsl:if test=\"$time &amp;gt; 0\"&gt;\n        &lt;xsl:variable name=\"sec\"&gt;\n            &lt;xsl:value-of select=\"floor($time div 1000)\"/&gt;\n        &lt;/xsl:variable&gt;\n\n        &lt;xsl:if test=\"$sec &amp;gt;= 86400\"&gt;\n            &lt;xsl:value-of select=\"floor($sec div 86400)\"/&gt;d\n        &lt;/xsl:if&gt;\n\n        &lt;xsl:if test=\"$sec &amp;gt;= 3600\"&gt;\n            &lt;xsl:value-of select=\"(floor($sec div 3600)) mod 24\"/&gt;h\n        &lt;/xsl:if&gt;\n\n        &lt;xsl:if test=\"$sec &amp;gt;= 60\"&gt;\n            &lt;xsl:value-of select=\"(floor($sec div 60)) mod 60\"/&gt;m\n        &lt;/xsl:if&gt;\n\n        &lt;xsl:value-of select=\"$sec mod 60\"/&gt;s\n    &lt;/xsl:if&gt;\n&lt;/xsl:template&gt;\n\n&lt;xsl:template name=\"showsize\"&gt;\n    &lt;xsl:param name=\"size\"/&gt;\n    &lt;xsl:param name=\"bits\" select=\"0\" /&gt;\n    &lt;xsl:param name=\"persec\" select=\"0\" /&gt;\n    &lt;xsl:variable name=\"sizen\"&gt;\n        &lt;xsl:value-of select=\"floor($size div 1024)\"/&gt;\n    &lt;/xsl:variable&gt;\n    &lt;xsl:choose&gt;\n        &lt;xsl:when test=\"$sizen &amp;gt;= 1073741824\"&gt;\n            &lt;xsl:value-of select=\"format-number($sizen div 1073741824,'#.###')\"/&gt; T&lt;/xsl:when&gt;\n\n        &lt;xsl:when test=\"$sizen &amp;gt;= 1048576\"&gt;\n            &lt;xsl:value-of select=\"format-number($sizen div 1048576,'#.###')\"/&gt; G&lt;/xsl:when&gt;\n\n        &lt;xsl:when test=\"$sizen &amp;gt;= 1024\"&gt;\n            &lt;xsl:value-of select=\"format-number($sizen div 1024,'#.##')\"/&gt; M&lt;/xsl:when&gt;\n        &lt;xsl:when test=\"$sizen &amp;gt;= 0\"&gt;\n            &lt;xsl:value-of select=\"$sizen\"/&gt; K&lt;/xsl:when&gt;\n    &lt;/xsl:choose&gt;\n    &lt;xsl:if test=\"string-length($size) &amp;gt; 0\"&gt;\n        &lt;xsl:choose&gt;\n            &lt;xsl:when test=\"$bits = 1\"&gt;b&lt;/xsl:when&gt;\n            &lt;xsl:otherwise&gt;B&lt;/xsl:otherwise&gt;\n        &lt;/xsl:choose&gt;\n        &lt;xsl:if test=\"$persec = 1\"&gt;/s&lt;/xsl:if&gt;\n    &lt;/xsl:if&gt;\n&lt;/xsl:template&gt;\n\n&lt;xsl:template name=\"streamstate\"&gt;\n    &lt;xsl:choose&gt;\n        &lt;xsl:when test=\"active\"&gt;active&lt;/xsl:when&gt;\n        &lt;xsl:otherwise&gt;idle&lt;/xsl:otherwise&gt;\n    &lt;/xsl:choose&gt;\n&lt;/xsl:template&gt;\n\n\n&lt;xsl:template name=\"clientstate\"&gt;\n    &lt;xsl:choose&gt;\n        &lt;xsl:when test=\"publishing\"&gt;publishing&lt;/xsl:when&gt;\n        &lt;xsl:otherwise&gt;playing&lt;/xsl:otherwise&gt;\n    &lt;/xsl:choose&gt;\n&lt;/xsl:template&gt;\n\n\n&lt;xsl:template match=\"client\"&gt;\n    &lt;tr&gt;\n        &lt;xsl:attribute name=\"bgcolor\"&gt;\n            &lt;xsl:choose&gt;\n                &lt;xsl:when test=\"publishing\"&gt;#cccccc&lt;/xsl:when&gt;\n                &lt;xsl:otherwise&gt;#eeeeee&lt;/xsl:otherwise&gt;\n            &lt;/xsl:choose&gt;\n        &lt;/xsl:attribute&gt;\n        &lt;td&gt;&lt;xsl:value-of select=\"id\"/&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;xsl:call-template name=\"clientstate\"/&gt;&lt;/td&gt;\n        &lt;td&gt;\n            &lt;a target=\"_blank\"&gt;\n                &lt;xsl:attribute name=\"href\"&gt;\n                    http://apps.db.ripe.net/search/query.html&amp;#63;searchtext=&lt;xsl:value-of select=\"address\"/&gt;\n                &lt;/xsl:attribute&gt;\n                &lt;xsl:attribute name=\"title\"&gt;whois&lt;/xsl:attribute&gt;\n                &lt;xsl:value-of select=\"address\"/&gt;\n            &lt;/a&gt;\n        &lt;/td&gt;\n        &lt;td&gt;&lt;xsl:value-of select=\"flashver\"/&gt;&lt;/td&gt;\n        &lt;td&gt;\n            &lt;a target=\"_blank\"&gt;\n                &lt;xsl:attribute name=\"href\"&gt;\n                    &lt;xsl:value-of select=\"pageurl\"/&gt;\n                &lt;/xsl:attribute&gt;\n                &lt;xsl:value-of select=\"pageurl\"/&gt;\n            &lt;/a&gt;\n        &lt;/td&gt;\n        &lt;td&gt;&lt;xsl:value-of select=\"swfurl\"/&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;xsl:value-of select=\"dropped\"/&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;xsl:value-of select=\"timestamp\"/&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;xsl:value-of select=\"avsync\"/&gt;&lt;/td&gt;\n        &lt;td&gt;\n            &lt;xsl:call-template name=\"showtime\"&gt;\n            &lt;xsl:with-param name=\"time\" select=\"time\"/&gt;\n            &lt;/xsl:call-template&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/xsl:template&gt;\n\n&lt;xsl:template match=\"publishing\"&gt;\n    publishing\n&lt;/xsl:template&gt;\n\n&lt;xsl:template match=\"active\"&gt;\n    active\n&lt;/xsl:template&gt;\n\n&lt;xsl:template match=\"width\"&gt;\n    &lt;xsl:value-of select=\".\"/&gt;x&lt;xsl:value-of select=\"../height\"/&gt;\n&lt;/xsl:template&gt;\n\n&lt;/xsl:stylesheet&gt;\n</code></pre> <p><code>conf/nginx.conf</code>\u200b\u5199\u5165\u200b\u5982\u4e0b\u200b\u5185\u5bb9\u200b\uff1a</p> <p>conf/nginx.conf\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b</p> <pre><code>worker_processes  8;\nerror_log  logs/error.log info;\nevents {\n    worker_connections  1024;\n}\n\nrtmp {\n    server {\n        listen 1935;\n\n        application live {\n            live on;\n        }\n\n        application hls {\n            live on;\n            hls on;  \n            hls_path temp/hls;  \n            hls_fragment 8s;  \n        }\n    }\n}\n\nhttp {\n    server {\n        listen      8080;\n        root html;\n        location / {\n            rtmp_stat all;\n            rtmp_stat_stylesheet index.xsl;\n        }\n\n        location /index.xsl {\n            root html;\n        }\n\n        location /hls {  \n            types{  \n                application/vnd.apple.mpegurl m3u8;  \n                video/mp2t ts;  \n            }  \n            alias temp/hls;  \n            expires -1;  \n        }  \n    }\n}\n</code></pre> <p>\u200b\u53cc\u51fb\u200b<code>nginx.exe</code>\u200b\u5373\u53ef\u200b\u542f\u52a8\u200b\u670d\u52a1\u5668\u200b\uff0c\u200b\u670d\u52a1\u5668\u200b\u540c\u65f6\u200b\u76d1\u542c\u200b1935\u200b\u7aef\u53e3\u200b\u4e0e\u200b8080\u200b\u7aef\u53e3\u200b</p> <ul> <li>\u200b\u63a8\u6d41\u200b\u4f7f\u7528\u200b\u7684\u200bRTMP\u200b\u670d\u52a1\u5668\u200b\u5730\u5740\u200b\u4e3a\u200b\uff1a<code>rtmp://localhost:1935/live</code></li> <li>\u200b\u8bbf\u95ee\u200b<code>http://localhost:8080</code>\u200b\u53ef\u4ee5\u200b\u67e5\u770b\u200b\u670d\u52a1\u5668\u7aef\u200b\u7684\u200b\u7edf\u8ba1\u200b\u4fe1\u606f\u200b</li> <li>\u200b\u5ba2\u6237\u7aef\u200b\uff08\u200b\u5982\u200bVLC\u200b\u7b49\u200b\uff09\u200b\u53ef\u4ee5\u200b\u8bbf\u95ee\u200b<code>rtmp://localhost:1935/live</code>\u200b\u63a5\u6536\u200b\u6d41\u200b\uff0c<code>localhost</code>\u200b\u53ef\u4ee5\u200b\u66f4\u200b\u6539\u4e3a\u200b\u672c\u673a\u200b\u7684\u200bIP\u200b\u5730\u5740\u200b</li> </ul> <p>\u200b\u4f7f\u7528\u200b\u547d\u4ee4\u200b<code>.\\nginx.exe -s stop</code>\u200b\u5173\u95ed\u200b\u670d\u52a1\u5668\u200b</p>"},{"location":"coding/configuration/ssh/","title":"ssh","text":""},{"location":"coding/configuration/ssh/#_1","title":"\u57fa\u672c\u200b\u4f7f\u7528","text":"<p>SSH\u200b\u53ef\u4ee5\u200b\u8fdc\u7a0b\u200b\u8fde\u63a5\u200b\u670d\u52a1\u5668\u200b\u7684\u200b\u7ec8\u7aef\u200b\u3002\u200b\u547d\u4ee4\u200b\u683c\u5f0f\u200b\u5982\u4e0b\u200b\uff0c\u200b\u5176\u4e2d\u200b<code>&lt;user&gt;</code>\u200b\u4e3a\u200b\u8fdc\u7a0b\u200b\u670d\u52a1\u5668\u200b\u4e0a\u200b\u7684\u200b\u7528\u6237\u540d\u200b\uff0c<code>&lt;hostname&gt;</code>\u200b\u662f\u200b\u8fdc\u7a0b\u200b\u670d\u52a1\u5668\u200b\u7684\u200b\u7f51\u7edc\u5730\u5740\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u662f\u200bIP\u200b\u5730\u5740\u200b\u6216\u200b\u57df\u540d\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u662f\u200b<code>~/.ssh/config</code>\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u4e3b\u673a\u200b\u3002\u200b\u5982\u679c\u200b\u6307\u5b9a\u200b\u4e86\u200b<code>&lt;command&gt;</code>\u200b\u53c2\u6570\u200b\uff0c\u200b\u5219\u200bSSH\u200b\u5728\u200b\u8fde\u63a5\u200b\u6210\u529f\u200b\u540e\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u6267\u884c\u547d\u4ee4\u200b\uff0c\u200b\u5c06\u200b\u7ed3\u679c\u200b\u8f93\u51fa\u200b\u5230\u200b\u7ec8\u7aef\u200b\u5e76\u200b\u5728\u200b\u6267\u884c\u200b\u7ed3\u675f\u200b\u540e\u200b\u65ad\u5f00\u8fde\u63a5\u200b\u3002</p> <pre><code>ssh &lt;user&gt;@&lt;hostname&gt; [&lt;command&gt;]\n</code></pre> <p>\u200b\u82e5\u200b\u5ba2\u6237\u7aef\u200b\u7684\u200b\u7528\u6237\u540d\u200b\u548c\u200b\u670d\u52a1\u5668\u200b\u7684\u200b\u7528\u6237\u540d\u200b\u76f8\u540c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7701\u7565\u200b<code>&lt;user&gt;</code>\u200b\u53c2\u6570\u200b\uff0c\u200b\u5982\u200b</p> <pre><code>ssh &lt;hostname&gt; [&lt;command&gt;]\n</code></pre>"},{"location":"coding/configuration/ssh/#_2","title":"\u7aef\u53e3\u200b\u8f6c\u53d1","text":"<p>SSH\u200b\u63d0\u4f9b\u200b\u4e86\u200b<code>-L</code>\u3001<code>-R</code>\u3001<code>-D</code>\u200b\u53c2\u6570\u200b\uff0c\u200b\u5206\u522b\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u672c\u5730\u200b\u7aef\u53e3\u200b\u8f6c\u53d1\u200b\u3001\u200b\u8fdc\u7a0b\u200b\u7aef\u53e3\u200b\u8f6c\u53d1\u200b\u4e0e\u200b\u52a8\u6001\u200b\u7aef\u53e3\u200b\u8f6c\u53d1\u200b\u3002\u200b\u4f7f\u7528\u200b<code>-N</code>\u200b\u53c2\u6570\u200b\u53ef\u4ee5\u200b\u5728\u200b\u4e0d\u200b\u8fde\u63a5\u200b\u8fdc\u7a0b\u200b\u7ec8\u7aef\u200b\uff0c\u200b\u53ea\u200b\u5b9e\u73b0\u200b\u7aef\u53e3\u200b\u8f6c\u53d1\u200b\u3002\u200b\u4e3a\u200b\u6e05\u6670\u200b\u8868\u8ff0\u200b\u5404\u4e2a\u200b\u7aef\u53e3\u200b\uff0c\u200b\u672c\u8282\u200b\u4e2d\u200b\u5047\u8bbe\u200b\u5ba2\u6237\u7aef\u200bA\u3001\u200b\u670d\u52a1\u5668\u200bB\u200b\u548c\u200b\u53e6\u200b\u4e00\u200b\u4e3b\u673a\u200bC\u3002\u200b\u5ba2\u6237\u7aef\u200bA\u200b\u901a\u8fc7\u200bSSH\u200b\u8fde\u63a5\u200b\u81f3\u200b\u670d\u52a1\u5668\u200bB\u3002</p>"},{"location":"coding/configuration/ssh/#_3","title":"\u672c\u5730\u200b\u7aef\u53e3\u200b\u8f6c\u53d1","text":"<p>\u200b\u4f7f\u7528\u200b<code>-L</code>\u200b\u53c2\u6570\u200b\u53ef\u4ee5\u200b\u6253\u5f00\u200bSSH\u200b\u7684\u200b\u672c\u5730\u200b\u7aef\u53e3\u200b\u8f6c\u53d1\u200b\u529f\u80fd\u200b\u3002\u200b\u7531\u4e8e\u200b<code>-L</code>\u200b\u53c2\u6570\u200b\u5c06\u200b\u6307\u5411\u200b\u5ba2\u6237\u7aef\u200b\u672c\u5730\u200b\u7684\u200b\u8bf7\u6c42\u200b\u8f6c\u53d1\u7ed9\u200b\u670d\u52a1\u5668\u200b\uff0c\u200b\u56e0\u6b64\u200b\u79f0\u4e3a\u200b\u672c\u5730\u200b\u7aef\u53e3\u200b\u8f6c\u53d1\u200b\u3002\u200b\u542f\u52a8\u200b\u672c\u5730\u200b\u7aef\u53e3\u200b\u8f6c\u53d1\u200b\u7684\u200b\u547d\u4ee4\u200b\u683c\u5f0f\u200b\u5982\u4e0b\u200b</p> <pre><code>ssh -L [&lt;bind-addr&gt;]:&lt;port-of-A&gt;:&lt;addr-of-C&gt;:&lt;port-of-C&gt; &lt;user&gt;@&lt;hostname&gt;\n</code></pre> <p>\u200b\u4ee5\u4e0a\u200b\u547d\u4ee4\u200b\u8868\u793a\u200b\u5c06\u200b\u5ba2\u6237\u7aef\u200bA\u200b\u4e0a\u200b\u6307\u5411\u200b<code>&lt;port-of-A&gt;</code>\u200b\u7aef\u53e3\u200b\u7684\u200b\u672c\u5730\u200b\u8bf7\u6c42\u200b\u901a\u8fc7\u200bSSH\u200b\u8f6c\u53d1\u7ed9\u200b\u670d\u52a1\u5668\u200bB\uff0c\u200b\u7531\u200b\u670d\u52a1\u5668\u200bB\u200b\u5411\u200b\u8fdc\u7a0b\u200b\u4e3b\u673a\u200b<code>&lt;addr-of-C&gt;</code>\u200b\u7684\u200b<code>&lt;port-of-C&gt;</code>\u200b\u7aef\u53e3\u200b\u53d1\u8d77\u200b\u8bf7\u6c42\u200b\u3002\u200b\u82e5\u200b\u6307\u5b9a\u200b<code>&lt;bind-addr&gt;</code>\uff0c\u200b\u5219\u200bSSH\u200b\u4f1a\u200b\u76d1\u542c\u200b<code>&lt;bind-addr&gt;</code>\u200b\u5730\u5740\u200b\uff0c\u200b\u5e76\u200b\u53ea\u200b\u8f6c\u53d1\u200b\u76ee\u6807\u200b\u4e3a\u200b<code>&lt;bind-addr&gt;</code>\u200b\u7684\u200b\u8bf7\u6c42\u200b\u3002</p>"},{"location":"coding/configuration/ssh/#_4","title":"\u8fdc\u7a0b\u200b\u7aef\u53e3\u200b\u8f6c\u53d1","text":"<p>\u200b\u4f7f\u7528\u200b<code>-R</code>\u200b\u53c2\u6570\u200b\u53ef\u4ee5\u200b\u6253\u5f00\u200bSSH\u200b\u7684\u200b\u8fdc\u7a0b\u200b\u7aef\u53e3\u200b\u8f6c\u53d1\u200b\u529f\u80fd\u200b\u3002<code>-R</code>\u200b\u7aef\u53e3\u200b\u5c06\u200b\u6307\u5411\u200b\u8fdc\u7a0b\u200b\u670d\u52a1\u5668\u200b\u7684\u200b\u8bf7\u6c42\u200b\u8f6c\u53d1\u7ed9\u200b\u5ba2\u6237\u7aef\u200b\uff0c\u200b\u56e0\u6b64\u200b\u79f0\u4e3a\u200b\u8fdc\u7a0b\u200b\u7aef\u53e3\u200b\u8f6c\u53d1\u200b\u3002\u200b\u542f\u52a8\u200b\u8fdc\u7a0b\u200b\u7aef\u53e3\u200b\u8f6c\u53d1\u200b\u7684\u200b\u547d\u4ee4\u200b\u683c\u5f0f\u200b\u5982\u4e0b\u200b</p> <pre><code>ssh -R [&lt;bind-addr&gt;]:&lt;port-of-B&gt;:&lt;addr-of-C&gt;:&lt;port-of-C&gt; &lt;user&gt;@&lt;hostname&gt;\n</code></pre> <p>\u200b\u4ee5\u4e0a\u200b\u547d\u4ee4\u200b\u8868\u793a\u200b\u5c06\u200b\u670d\u52a1\u5668\u200bB\u200b\u4e0a\u200b\u6307\u5411\u200b<code>&lt;port-of-B&gt;</code>\u200b\u7aef\u53e3\u200b\u7684\u200b\u8bf7\u6c42\u200b\u901a\u8fc7\u200bSSH\u200b\u8f6c\u53d1\u7ed9\u200b\u5ba2\u6237\u7aef\u200bA\uff0c\u200b\u7531\u200b\u5ba2\u6237\u7aef\u200bA\u200b\u5411\u200b\u53e6\u4e00\u53f0\u200b\u4e3b\u673a\u200b<code>&lt;addr-of-C&gt;</code>\u200b\u7684\u200b<code>&lt;port-of-C&gt;</code>\u200b\u7aef\u53e3\u200b\u53d1\u8d77\u200b\u8bf7\u6c42\u200b\u3002\u200b\u82e5\u200b\u6307\u5b9a\u200b<code>&lt;bind-addr&gt;</code>\uff0c\u200b\u5219\u200bSSH\u200b\u4f1a\u200b\u76d1\u542c\u200b<code>&lt;bind-addr&gt;</code>\u200b\u5730\u5740\u200b\uff0c\u200b\u5e76\u200b\u53ea\u200b\u8f6c\u53d1\u200b\u76ee\u6807\u200b\u4e3a\u200b<code>&lt;bind-addr&gt;</code>\u200b\u7684\u200b\u8bf7\u6c42\u200b\u3002</p>"},{"location":"coding/configuration/ssh/#_5","title":"\u52a8\u6001\u200b\u7aef\u53e3\u200b\u8f6c\u53d1","text":"<p>\u200b\u52a8\u6001\u200b\u7aef\u53e3\u200b\u8f6c\u53d1\u200b\u7684\u200b\u547d\u4ee4\u200b\u683c\u5f0f\u200b\u5982\u4e0b\u200b</p> <pre><code>ssh -D &lt;port-of-A&gt; &lt;user&gt;@&lt;hostname&gt;\n</code></pre> <p>\u200b\u4ee5\u4e0a\u200b\u547d\u4ee4\u200b\u8868\u793a\u200b\u5c06\u200b\u5ba2\u6237\u7aef\u200bA\u200b\u4e0a\u200b\u6307\u5411\u200b<code>&lt;port-of-A&gt;</code>\u200b\u7684\u200b\u8bf7\u6c42\u200b\u901a\u8fc7\u200bSSH\u200b\u8f6c\u53d1\u7ed9\u200b\u670d\u52a1\u5668\u200bB\uff0c\u200b\u7531\u200bB\u200b\u4ee3\u4e3a\u200b\u53d1\u8d77\u200b\u8bf7\u6c42\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200b\u8bbf\u95ee\u200b\u7ed3\u679c\u200b\u4f20\u8f93\u200b\u56de\u200b\u672c\u5730\u200b\u3002</p> <p>\u200b\u82e5\u200b\u8981\u200b\u8f6c\u53d1\u200b\u6240\u6709\u200b\u672c\u5730\u7f51\u7edc\u200b\u8bf7\u6c42\u200b\uff0c\u200b\u8bbe\u7f6e\u200bSOCKS5\u200b\u4ee3\u7406\u200b\u5c06\u200b\u672c\u5730\u200b\u8bf7\u6c42\u200b\u91cd\u5b9a\u5411\u200b\u5230\u200b<code>&lt;port-of-A&gt;</code>\u200b\u5373\u53ef\u200b\u3002</p>"},{"location":"coding/configuration/ssh/#_6","title":"\u5bc6\u94a5\u200b\u767b\u5f55","text":"<p>SSH\u200b\u9ed8\u8ba4\u200b\u4f7f\u7528\u200b\u7528\u6237\u540d\u200b-\u200b\u5bc6\u7801\u200b\u7684\u200b\u65b9\u5f0f\u200b\u8fdb\u884c\u200b\u9a8c\u8bc1\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u767b\u5f55\u200b\u9700\u8981\u200b\u8f93\u5165\u200b\u5bc6\u7801\u200b\u3002\u200b\u53ef\u4ee5\u200b\u914d\u7f6e\u200bSSH\u200b\u4f7f\u7528\u200b\u5bc6\u94a5\u200b\u5bf9\u200b\u5ba2\u6237\u7aef\u200b\u8fdb\u884c\u200b\u9a8c\u8bc1\u200b\uff0c\u200b\u6b64\u540e\u200b\u4f7f\u7528\u200b\u8be5\u200b\u5ba2\u6237\u7aef\u200b\u767b\u5f55\u200b\u5c31\u200b\u4e0d\u518d\u200b\u9700\u8981\u200b\u8f93\u5165\u200b\u5bc6\u7801\u200b\u3002\u200b\u6b65\u9aa4\u200b\u5982\u4e0b\u200b</p> <ol> <li>\u200b\u5728\u200b\u5ba2\u6237\u7aef\u200b\u6267\u884c\u200b<code>ssh-keygen</code>\u200b\u547d\u4ee4\u200b\u751f\u6210\u200b\u5bc6\u94a5\u200b\u5bf9\u200b\uff0c\u200b\u6267\u884c\u200b\u5b8c\u6210\u200b\u540e\u4f1a\u200b\u5728\u200b<code>~/.ssh</code>\u200b\u76ee\u5f55\u200b\u4e0b\u200b\u751f\u6210\u200b\u79c1\u94a5\u200b\u6587\u4ef6\u200b<code>id_rsa</code>\u200b\u4e0e\u200b\u516c\u94a5\u200b\u6587\u4ef6\u200b<code>id_rsa.pub</code>\uff1b</li> <li>\u200b\u6267\u884c\u200b<code>ssh-copy-id &lt;user&gt;@&lt;hostname&gt;</code>\u200b\u547d\u4ee4\u200b\uff0c\u200b\u5c06\u200b\u516c\u94a5\u200b\u590d\u5236\u5230\u200b\u8fdc\u7a0b\u200b\u4e3b\u673a\u200b\u7684\u200b<code>~/.ssh/authorized_key</code>\u200b\u6587\u4ef6\u200b\u4e2d\u200b\uff08\u200b\u624b\u52a8\u200b\u590d\u5236\u7c98\u8d34\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\uff09\u3002</li> </ol>"},{"location":"coding/configuration/ssh/#_7","title":"\u6587\u4ef6\u4f20\u8f93","text":"<p><code>scp</code>\u200b\u53ef\u4ee5\u200b\u501f\u52a9\u200bSSH tunnel\u200b\u5b9e\u73b0\u200b\u6587\u4ef6\u4f20\u8f93\u200b\u3002\u200b\u547d\u4ee4\u200b\u683c\u5f0f\u200b\u5982\u4e0b\u200b</p> <pre><code>scp SOURCE DESTINATION\n</code></pre> <p>\u200b\u8868\u793a\u200b\u5c06\u200b\u6587\u4ef6\u200bSOURCE\u200b\u590d\u5236\u5230\u200bDESTINATION\u200b\u4e0b\u200b\u3002SOURCE\u200b\u548c\u200bDESTINATION\u200b\u53ef\u4ee5\u200b\u662f\u200b\uff1a</p> <ol> <li>\u200b\u672c\u5730\u200b\u6709\u6548\u200b\u8def\u5f84\u200b</li> <li>\u200b\u683c\u5f0f\u200b\u4e3a\u200b<code>&lt;user&gt;@&lt;ip&gt;:&lt;path&gt;</code>\u200b\u7684\u200b\u8fdc\u7a0b\u200b\u8def\u5f84\u200b</li> </ol>"},{"location":"coding/configuration/update-alternatives/","title":"update-alternatives","text":"<p><code>update-alternatives</code>\u200b\u662f\u200b\u7528\u4e8e\u200b\u7ba1\u7406\u200b\u8f6f\u200b\u94fe\u63a5\u200b\u7684\u200b\u547d\u4ee4\u200b\u3002</p>"},{"location":"coding/configuration/update-alternatives/#_1","title":"\u57fa\u7840\u200b\u4f7f\u7528","text":""},{"location":"coding/configuration/update-alternatives/#_2","title":"\u521b\u5efa\u200b\u94fe\u63a5","text":"<p>\u200b\u4f7f\u7528\u200b<code>--install</code>\u200b\u53c2\u6570\u200b\u521b\u5efa\u200b\u6307\u5411\u200b\u4e00\u4e2a\u200b\u76ee\u6807\u200b\u7684\u200b\u8f6f\u200b\u94fe\u63a5\u200b\uff0c\u200b\u547d\u4ee4\u200b\u7684\u200b\u57fa\u672c\u200b\u683c\u5f0f\u200b\u5982\u4e0b\u200b</p> <pre><code>update-alternatives --install &lt;destination&gt; &lt;entry-name&gt; &lt;source&gt; &lt;priority&gt;\n</code></pre> <p>\u200b\u4ee5\u4e0a\u200b\u547d\u4ee4\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b<code>&lt;entry-name&gt;</code>\u200b\u7684\u200b\u8f6f\u200b\u94fe\u63a5\u200b\u6761\u76ee\u200b\uff0c\u200b\u5c06\u200b<code>&lt;source&gt;</code>\u200b\u6307\u5411\u200b<code>&lt;destination&gt;</code>\u3002\u200b\u5f53\u6709\u200b\u591a\u4e2a\u200b<code>&lt;source&gt;</code>\u200b\u6307\u5411\u200b\u540c\u4e00\u4e2a\u200b<code>&lt;destination&gt;</code>\u200b\u65f6\u200b\uff0c\u200b\u9ed8\u8ba4\u200b<code>&lt;priority&gt;</code>\u200b\u66f4\u5927\u200b\u7684\u200b\u751f\u6548\u200b\u3002</p>"},{"location":"coding/configuration/update-alternatives/#_3","title":"\u67e5\u8be2\u200b\u6761\u76ee","text":"<p>\u200b\u4f7f\u7528\u200b<code>--display</code>\u200b\u53c2\u6570\u200b\u67e5\u8be2\u200b<code>&lt;entry-name&gt;</code>\u200b\u4e0b\u200b\u7684\u200b\u547d\u4ee4\u200b\u6307\u5411\u200b\uff1a</p> <pre><code>update-alternatives --display &lt;entry-name&gt;\n</code></pre> <p>\u200b\u4f7f\u7528\u200b<code>--get-selections</code>\u200b\u53c2\u6570\u200b\u67e5\u8be2\u200b\u6240\u6709\u200b\u7684\u200b\u6761\u76ee\u200b\u548c\u200b\u914d\u7f6e\u200b\u72b6\u6001\u200b\u3002</p> <pre><code>update-alternatives --get-selections\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\u683c\u5f0f\u200b\u5982\u4e0b\u200b</p> <pre><code>arptables                      auto     /usr/sbin/arptables-nft\nawk                            auto     /usr/bin/gawk\nbuiltins.7.gz                  auto     /usr/share/man/man7/bash-builtins.7.gz\nc++                            auto     /usr/bin/g++\nc89                            auto     /usr/bin/c89-gcc\nc99                            auto     /usr/bin/c99-gcc\ncc                             auto     /usr/bin/gcc\ncpp                            auto     /usr/bin/cpp\ncuda                           auto     /usr/local/cuda-11.7\ncuda-11                        auto     /usr/local/cuda-11.7\n</code></pre>"},{"location":"coding/configuration/update-alternatives/#_4","title":"\u5207\u6362\u200b\u94fe\u63a5","text":"<p>\u200b\u4f7f\u7528\u200b<code>--config</code>\u200b\u53c2\u6570\u200b\u53ef\u4ee5\u200b\u5217\u51fa\u200b\u5e76\u200b\u9009\u62e9\u200b\u9700\u8981\u200b\u7684\u200b\u8f6f\u200b\u94fe\u63a5\u200b\uff0c\u200b\u547d\u4ee4\u200b\u7684\u200b\u57fa\u672c\u200b\u683c\u5f0f\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>update-alternatives --config &lt;entry-name&gt;\n</code></pre> <p>\u200b\u4ee5\u4e0a\u200b\u547d\u4ee4\u200b\u4f1a\u200b\u5217\u51fa\u200b<code>&lt;entry-name&gt;</code>\u200b\u4e0b\u200b\u7684\u200b\u6240\u6709\u200b\u6761\u76ee\u200b\u3002</p> <pre><code>There are 2 choices for the alternative gcc (providing /usr/bin/gcc).\n\n  Selection    Path             Priority   Status\n------------------------------------------------------------\n* 0            /usr/bin/gcc-11   2         auto mode\n  1            /usr/bin/gcc-11   2         manual mode\n  2            /usr/bin/gcc-12   1         manual mode\n\nPress &lt;enter&gt; to keep the current choice[*], or type selection number:\n</code></pre> <p>\u200b\u6216\u8005\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>--set</code>\u200b\u53c2\u6570\u200b\u6307\u5b9a\u200b\u94fe\u63a5\u200b\u7684\u200b\u76ee\u6807\u200b\uff0c\u200b\u683c\u5f0f\u200b\u4e3a\u200b\uff1a</p> <pre><code>update-alternatives --set &lt;entry-name&gt; &lt;source&gt;\n</code></pre> <p>\u200b\u4ee5\u4e0a\u200b\u547d\u4ee4\u200b\u4f7f\u7528\u200b<code>&lt;source&gt;</code>\u200b\u4f5c\u4e3a\u200b<code>&lt;entry-name&gt;</code>\u200b\u6761\u200b\u76ee\u7684\u200b\u6307\u5411\u200b\u3002</p> <p>\u200b\u4f7f\u7528\u200b<code>--auto</code>\u200b\u53c2\u6570\u200b\u6062\u590d\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u76ee\u6807\u200b\u6307\u5411\u200b\u3002</p> <pre><code>update-alternatives --auto &lt;entry-name&gt;\n</code></pre>"},{"location":"coding/configuration/update-alternatives/#_5","title":"\u5220\u9664\u200b\u94fe\u63a5","text":"<p>\u200b\u4f7f\u7528\u200b<code>--remove</code>\u200b\u53c2\u6570\u200b\u5220\u9664\u200b\u4e00\u4e2a\u200b\u6761\u76ee\u200b\u4e0b\u200b\u7684\u200b\u94fe\u63a5\u200b\u3002</p> <pre><code>update-alternatives --remove &lt;entry-name&gt; &lt;source&gt;\n</code></pre>"},{"location":"coding/configuration/vim/","title":"Vim","text":"<p>Vim\u200b\u662f\u200b\u57fa\u4e8e\u200b\u547d\u4ee4\u884c\u200b\u7684\u200b\u6587\u672c\u7f16\u8f91\u200b\u5668\u200b\u3002</p>"},{"location":"coding/configuration/vim/#_1","title":"\u547d\u4ee4\u884c","text":""},{"location":"coding/configuration/vim/#_2","title":"\u4ea4\u4e92","text":"<p>Vim\u200b\u7684\u200b\u4ea4\u4e92\u200b\u547d\u4ee4\u200b\u5982\u4e0b\u200b\u8868\u6240\u5217\u200b\uff0c\u200b\u4ea4\u4e92\u200b\u547d\u4ee4\u200b\u4ee5\u200b<code>:</code>\u200b\u5f00\u5934\u200b\u3002</p> \u200b\u8f93\u5165\u200b \u200b\u529f\u80fd\u200b \u200b\u8f93\u5165\u200b \u200b\u529f\u80fd\u200b <code>v</code> \u200b\u9009\u62e9\u200b\u5b57\u7b26\u200b <code>V</code> \u200b\u9009\u62e9\u200b\u884c\u200b <code>Ctrl+V</code> \u200b\u9009\u62e9\u200b\u5757\u200b <code>i</code> \u200b\u5207\u6362\u200b\u5230\u200b\u63d2\u5165\u200b\u6a21\u5f0f\u200b \u200b\u8f93\u5165\u200b \u200b\u529f\u80fd\u200b \u200b\u8f93\u5165\u200b \u200b\u529f\u80fd\u200b <code>:q</code> \u200b\u9000\u51fa\u200bVim <code>:q!</code> \u200b\u9000\u51fa\u200b\u800c\u200b\u4e0d\u200b\u4fdd\u5b58\u200b <code>:w</code> \u200b\u4fdd\u5b58\u200b <code>&lt;Esc&gt;</code> \u200b\u9000\u51fa\u200b\u63d2\u5165\u200b\u6a21\u5f0f\u200b <code>:h</code> \u200b\u67e5\u8be2\u200b\u5e2e\u52a9\u200b <code>:version</code> \u200b\u67e5\u8be2\u200b\u7248\u672c\u200b\u548c\u200b\u529f\u80fd\u200b <code>:history</code> \u200b\u67e5\u8be2\u200b\u5386\u53f2\u200b\u547d\u4ee4\u200b <code>:s</code> \u200b\u6839\u636e\u200b\u6b63\u5219\u8868\u8fbe\u5f0f\u200b\u66ff\u6362\u200b\u5b57\u7b26\u4e32\u200b <code>:edit</code> \u200b\u7f16\u8f91\u200b\u6587\u4ef6\u200b\uff08\u200b\u652f\u6301\u200bglob pattern\u200b\u5339\u914d\u200b\uff09 <code>:find</code> \u200b\u5728\u200b<code>path</code>\u200b\u4e2d\u200b\u67e5\u627e\u6587\u4ef6\u200b <code>:set</code> \u200b\u67e5\u8be2\u200b/\u200b\u8bbe\u7f6e\u200b\u73af\u5883\u53d8\u91cf\u200b <code>:Rg</code> \u200b\u5728\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u67e5\u627e"},{"location":"coding/configuration/vim/#_3","title":"\u64cd\u4f5c","text":"<p>Vim\u200b\u7684\u200b\u8bed\u53e5\u200b\u7531\u200b\u64cd\u4f5c\u7b26\u200b\u548c\u200b\u52a8\u4f5c\u200b\u7ec4\u6210\u200b\uff0c\u200b\u5728\u200bVim\u200b\u754c\u9762\u200b\u4e2d\u200b\uff0c\u200b\u6309\u200b<code>:</code>\u200b\u8f93\u5165\u200b\u8bed\u53e5\u200b\u3002</p> <p>Vim\u200b\u7684\u200b\u52a8\u4f5c\u200b\u5982\u4e0b\u200b\u8868\u200b\u6240\u793a\u200b</p> \u200b\u8f93\u5165\u200b \u200b\u529f\u80fd\u200b \u200b\u8f93\u5165\u200b \u200b\u529f\u80fd\u200b <code>h</code> \u200b\u5411\u200b\u5de6\u200b\u79fb\u52a8\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u200b <code>j</code> \u200b\u5411\u4e0b\u200b\u79fb\u52a8\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u200b <code>k</code> \u200b\u5411\u4e0a\u200b\u79fb\u52a8\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u200b <code>l</code> \u200b\u5411\u200b\u53f3\u200b\u79fb\u52a8\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u200b <code>b</code> \u200b\u79fb\u52a8\u200b\u5230\u200b\u4e0a\u200b\u4e00\u8bcd\u200b\u5f00\u5934\u200b <code>w</code> \u200b\u79fb\u52a8\u200b\u5230\u200b\u4e0b\u200b\u4e00\u8bcd\u200b\u5f00\u5934\u200b <code>ge</code> \u200b\u79fb\u52a8\u200b\u5230\u200b\u4e0a\u200b\u4e00\u8bcd\u200b\u7ed3\u5c3e\u200b <code>e</code> \u200b\u79fb\u52a8\u200b\u5230\u200b\u4e0b\u200b\u4e00\u8bcd\u200b\u7ed3\u5c3e\u200b <code>{</code> \u200b\u79fb\u52a8\u200b\u5230\u200b\u4e0a\u200b\u4e00\u6bb5\u200b <code>}</code> \u200b\u79fb\u52a8\u200b\u5230\u200b\u4e0b\u200b\u4e00\u6bb5\u200b <code>0</code> \u200b\u79fb\u52a8\u200b\u5230\u200b\u884c\u9996\u200b <code>$</code> \u200b\u79fb\u52a8\u200b\u5230\u200b\u884c\u5c3e\u200b <code>^</code> \u200b\u79fb\u52a8\u200b\u5230\u200b\u884c\u9996\u200b\u975e\u200b\u7a7a\u5b57\u7b26\u200b <code>g_</code> \u200b\u79fb\u52a8\u200b\u5230\u200b\u884c\u5c3e\u200b\u975e\u200b\u7a7a\u5b57\u7b26\u200b <code>n|</code> \u200b\u79fb\u52a8\u200b\u5230\u200b\u5f53\u524d\u200b\u884c\u200b\u7684\u200b\u7b2c\u200b<code>n</code>\u200b\u5217\u200b <p>Vim\u200b\u7684\u200b\u64cd\u4f5c\u7b26\u200b\u5982\u4e0b\u200b\u8868\u200b\u6240\u793a\u200b</p> \u200b\u8f93\u5165\u200b \u200b\u529f\u80fd\u200b <code>y</code> \u200b\u590d\u5236\u200b <code>d</code> \u200b\u526a\u5207\u200b <code>c</code> \u200b\u526a\u5207\u200b\u5e76\u200b\u7f16\u8f91\u200b <code>p</code> \u200b\u7c98\u8d34\u200b <p>\u200b\u884c\u200b\u64cd\u4f5c\u200b\u6a21\u5f0f\u200b</p> <p>\u200b\u8fde\u7eed\u200b\u8f93\u5165\u200b\u4e24\u4e2a\u200b\u76f8\u540c\u200b\u64cd\u4f5c\u7b26\u200b\u5bf9\u200b\u5f53\u524d\u200b\u884c\u200b\u6267\u884c\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u5982\u200b<code>yy</code>\u200b\u590d\u5236\u200b\u5f53\u524d\u200b\u884c\u200b\u3002</p> <p>\u200b\u5728\u200b\u91cd\u590d\u200b\u7684\u200b\u64cd\u4f5c\u7b26\u200b\u524d\u9762\u200b\u52a0\u200b\u6570\u5b57\u200b<code>n</code>\uff0c\u200b\u8868\u793a\u200b\u4ece\u200b\u5f53\u524d\u200b\u884c\u200b\u5f00\u59cb\u200b\u5230\u200b\u7b2c\u200b<code>n</code>\u200b\u884c\u200b\u6267\u884c\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u5982\u200b<code>3yy</code>\u200b\u4ece\u200b\u5f53\u524d\u200b\u884c\u200b\u5f00\u59cb\u200b\u590d\u5236\u200b3\u200b\u884c\u200b\u3002</p>"},{"location":"coding/dsa/","title":"\u6570\u636e\u7ed3\u6784","text":"<p>\u200b\u4ee5\u4e0b\u200b\u6574\u7406\u200b\u4e86\u200b\u9093\u4fca\u8f89\u200b\u8001\u5e08\u200b\u300a\u200b\u6570\u636e\u7ed3\u6784\u200b\u300b\u200b\u8bfe\u7a0b\u200b\u7684\u200b\u5185\u5bb9\u200b\uff1a</p> <ul> <li>\u200b\u5411\u91cf\u200b\u4e0e\u200b\u5217\u8868\u200b</li> </ul>"},{"location":"coding/dsa/vector-and-list/","title":"\u5411\u91cf\u200b\u4e0e\u200b\u5217\u8868","text":"<p>\u200b\u4e3b\u8981\u200b\u7684\u200b\u57fa\u7840\u200b\u7ebf\u6027\u200b\u6570\u636e\u7ed3\u6784\u200b\u662f\u200b\u5411\u91cf\u200b\u4e0e\u200b\u5217\u8868\u200b\u3002\u200b\u5728\u200b\u672c\u5408\u200b\u96c6\u4e2d\u200b\uff0c\u200b\u5411\u91cf\u200b\u6307\u4ee5\u200b\u6570\u7ec4\u200b\u65b9\u5f0f\u200b\u7ec4\u5408\u200b\u5e76\u200b\u5c01\u88c5\u200b\u901a\u7528\u200b\u62bd\u8c61\u200b\u63a5\u53e3\u200b\u7684\u200b\u6570\u636e\u7c7b\u578b\u200b\uff1b\u200b\u5217\u8868\u200b\u6307\u4ee5\u200b\u94fe\u8868\u200b\u65b9\u5f0f\u200b\u7ec4\u5408\u200b\u5e76\u200b\u5c01\u88c5\u200b\u901a\u7528\u200b\u62bd\u8c61\u200b\u63a5\u53e3\u200b\u7684\u200b\u6570\u636e\u7c7b\u578b\u200b\u3002</p> <p>\u200b\u8f83\u4e3a\u200b\u9ad8\u7ea7\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\u2014\u2014\u200b\u6808\u200b\u4e0e\u200b\u961f\u5217\u200b\u5efa\u7acb\u200b\u5728\u200b\u5411\u91cf\u200b\u4e0e\u200b\u5217\u8868\u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u200b\u3002\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u53d7\u9650\u5236\u200b\u7684\u200b\u64cd\u4f5c\u200b\u63a5\u53e3\u200b\u3002</p>"},{"location":"coding/dsa/vector-and-list/#_2","title":"\u7ebf\u6027\u200b\u6570\u636e\u7ed3\u6784","text":"<p>\u200b\u5bf9\u4e8e\u200b\u57fa\u7840\u200b\u7684\u200b\u7ebf\u6027\u200b\u6570\u636e\u7ed3\u6784\u200b\uff0c\u200b\u4ee5\u4e0b\u200b\u7684\u200b\u63a5\u53e3\u200b\u53ef\u4ee5\u200b\u89c6\u4e3a\u200b\u901a\u7528\u200b\uff1a</p> \u200b\u64cd\u4f5c\u200b \u200b\u63cf\u8ff0\u200b \u200b\u901a\u7528\u6027\u200b <code>size()</code> \u200b\u83b7\u53d6\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u5143\u7d20\u200b\u7684\u200b\u6570\u76ee\u200b <code>get()</code> \u200b\u83b7\u53d6\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u67d0\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u503c\u200b <code>set()</code> \u200b\u4fee\u6539\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u67d0\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u503c\u200b <code>insert()</code> \u200b\u5411\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u7684\u200b\u67d0\u4e2a\u200b\u4f4d\u7f6e\u200b\u63d2\u5165\u200b\u5143\u7d20\u200b <code>remove()</code> \u200b\u79fb\u9664\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u7684\u200b\u67d0\u4e2a\u200b\u5143\u7d20\u200b <code>traverse()</code> \u200b\u904d\u5386\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\uff0c\u200b\u5e76\u200b\u6267\u884c\u200b\u67d0\u200b\u64cd\u4f5c\u200b <code>find()</code> \u200b\u5728\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u67e5\u627e\u200b\u67d0\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u4f4d\u7f6e\u200b <code>search()</code> \u200b\u5728\u200b\u6709\u5e8f\u200b\u7684\u200b\u7ed3\u6784\u200b\u4e2d\u200b\u67e5\u627e\u200b\u67d0\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u4f4d\u7f6e\u200b \u200b\u8981\u6c42\u200b\u6709\u5e8f\u200b <code>sort()</code> \u200b\u6392\u5e8f\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b \u200b\u8981\u6c42\u200b\u91cd\u8f7d\u200b<code>&lt;</code>\u200b\u548c\u200b<code>&gt;</code>\u200b\u8fd0\u7b97\u7b26"},{"location":"coding/dsa/vector-and-list/#_3","title":"\u5411\u91cf","text":"<p>\u200b\u5728\u200b\u5411\u91cf\u200b\u4e2d\u200b\uff0c\u200b\u6570\u636e\u200b\u5728\u200b\u5185\u5b58\u200b\u4e2d\u200b\u8fde\u7eed\u200b\u5b58\u50a8\u200b\uff0c\u200b\u5373\u200b\u4e0b\u6807\u200b\u76f8\u90bb\u200b\u7684\u200b\u6570\u636e\u200b\u5728\u200b\u5185\u5b58\u200b\u4e2d\u200b\u76f8\u90bb\u200b\u3002C/C++\u200b\u8bed\u8a00\u200b\u4e2d\u200b\u7684\u200b\u6570\u7ec4\u200b\u6570\u636e\u7ed3\u6784\u200b\u53ef\u4ee5\u200b\u89c6\u4e3a\u200b\u7b80\u5355\u200b\u7684\u200b\u5411\u91cf\u200b\u3002\u200b\u4f46\u200b\u6570\u7ec4\u200b\u4e0d\u200b\u63d0\u4f9b\u200b\u63d2\u5165\u200b\u3001\u200b\u5220\u9664\u200b\u7b49\u200b\u5177\u4f53\u200b\u7684\u200b\u64cd\u4f5c\u200b\u63a5\u53e3\u200b\uff0c\u200b\u9700\u8981\u200b\u5728\u200b\u7a0b\u5e8f\u4ee3\u7801\u200b\u4e2d\u200b\u624b\u52a8\u200b\u5b9e\u73b0\u200b\u3002\u200b\u5c06\u200b\u6570\u7ec4\u200b\u5c01\u88c5\u200b\u6210\u7c7b\u200b\u53ef\u4ee5\u200b\u63d0\u4f9b\u200b\u66f4\u200b\u591a\u200b\u7684\u200b\u64cd\u4f5c\u200b\u63a5\u53e3\u200b\uff0c\u200b\u5e76\u4e14\u200b\u4fdd\u8bc1\u6570\u636e\u200b\u88ab\u200b\u5408\u6cd5\u200b\u5730\u200b\u8bbf\u95ee\u200b\u53ca\u200b\u4fee\u6539\u200b\u3002</p> <p>\u200b\u5411\u91cf\u200b\u662f\u200b\u6570\u7ec4\u200b\u7684\u200b\u62bd\u8c61\u200b\u6cdb\u5316\u200b\u3001\u200b\u652f\u6301\u200b\u6240\u6709\u200b\u6570\u7ec4\u200b\u7684\u200b\u529f\u80fd\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u5143\u7d20\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u7edf\u4e00\u200b\u7684\u200b\u64cd\u4f5c\u200b\u63a5\u53e3\u200b\u3002</p> <p>C++\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u6a21\u677f\u200b\u7c7b\u200b\u7684\u200b\u529f\u80fd\u200b\u7528\u6765\u200b\u9488\u5bf9\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u5143\u7d20\u200b\u63d0\u4f9b\u200b\u76f8\u540c\u200b\u7684\u200b\u529f\u80fd\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u67d0\u4e2a\u200bADT\uff08\u200b\u4ee5\u200b\u5411\u91cf\u200b\u4e3a\u4f8b\u200b\uff09\uff0c\u200b\u5176\u200b\u5c5e\u6027\u200b\u548c\u200b\u63a5\u53e3\u200b\u7684\u200b\u7ec4\u7ec7\u200b\u65b9\u5f0f\u200b\u53ef\u200b\u9075\u5faa\u200b\u5982\u4e0b\u200b\u89c4\u5219\u200b\uff1a</p> <pre><code>template &lt;typename T&gt; class Vector { //\u200b\u5411\u91cf\u200b\u6a21\u677f\u200b\u7c7b\u200b\nprivate: Rank _size; int _capacity; T* _elem; //\u200b\u89c4\u6a21\u200b\u3001\u200b\u5bb9\u91cf\u200b\u3001\u200b\u6570\u636e\u200b\u533a\u200b\nprotected:\n/* ... \u200b\u5185\u90e8\u200b\u51fd\u6570\u200b */\npublic:\n/* ... \u200b\u6784\u9020\u51fd\u6570\u200b */\n/* ... \u200b\u6790\u6784\u200b\u51fd\u6570\u200b */\n/* ... \u200b\u53ea\u8bfb\u200b\u63a5\u53e3\u200b */\n/* ... \u200b\u53ef\u200b\u5199\u200b\u63a5\u53e3\u200b */\n/* ... \u200b\u904d\u5386\u200b\u63a5\u53e3\u200b */\n};\n</code></pre> <p>\u200b\u901a\u8fc7\u200b\u5bf9\u200b<code>[]</code>\u200b\u8fd0\u7b97\u7b26\u200b\u8fdb\u884c\u200b\u91cd\u8f7d\u200b\uff0c\u200b\u5411\u91cf\u200b\u548c\u200b\u5217\u8868\u200b\u652f\u6301\u200b\u6570\u7ec4\u200b\u98ce\u683c\u200b\u7684\u200b\u8bbf\u95ee\u200b\u65b9\u5f0f\u200b\u3002</p> <p>\u200b\u5177\u4f53\u200b\u4ee3\u7801\u200b\u53ef\u4ee5\u200b\u53c2\u89c1\u200b\uff1a</p> \u200b\u5411\u91cf\u200b\u6a21\u677f\u200b\u7c7b\u200b\u58f0\u660e\u200b <p><pre><code>/******************************************************************************************\n* Data Structures in C++\n* ISBN: 7-302-33064-6 &amp; 7-302-33065-3 &amp; 7-302-29652-2 &amp; 7-302-26883-3\n* Junhui DENG, deng@tsinghua.edu.cn\n* Computer Science &amp; Technology, Tsinghua University\n* Copyright (c) 2003-2020. All rights reserved.\n******************************************************************************************/\n\ntypedef int Rank; //\u200b\u79e9\u200b\n#define DEFAULT_CAPACITY  3 //\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u521d\u59cb\u200b\u5bb9\u91cf\u200b\uff08\u200b\u5b9e\u9645\u200b\u5e94\u7528\u200b\u4e2d\u200b\u53ef\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b\u66f4\u200b\u5927\u200b\uff09\n\ntemplate &lt;typename T&gt; class Vector { //\u200b\u5411\u91cf\u200b\u6a21\u677f\u200b\u7c7b\u200b\nprotected:\n   Rank _size; int _capacity;  T* _elem; //\u200b\u89c4\u6a21\u200b\u3001\u200b\u5bb9\u91cf\u200b\u3001\u200b\u6570\u636e\u200b\u533a\u200b\n   void copyFrom ( T const* A, Rank lo, Rank hi ); //\u200b\u590d\u5236\u200b\u6570\u7ec4\u200b\u533a\u95f4\u200bA[lo, hi)\n   void expand(); //\u200b\u7a7a\u95f4\u200b\u4e0d\u8db3\u200b\u65f6\u200b\u6269\u5bb9\u200b\n   void shrink(); //\u200b\u88c5\u586b\u200b\u56e0\u5b50\u200b\u8fc7\u200b\u5c0f\u65f6\u200b\u538b\u7f29\u200b\n   bool bubble ( Rank lo, Rank hi ); //\u200b\u626b\u63cf\u200b\u4ea4\u6362\u200b\n   void bubbleSort ( Rank lo, Rank hi ); //\u200b\u8d77\u6ce1\u200b\u6392\u5e8f\u200b\u7b97\u6cd5\u200b\n   Rank max ( Rank lo, Rank hi ); //\u200b\u9009\u53d6\u200b\u6700\u5927\u200b\u5143\u7d20\u200b\n   void selectionSort ( Rank lo, Rank hi ); //\u200b\u9009\u62e9\u200b\u6392\u5e8f\u200b\u7b97\u6cd5\u200b\n   void merge ( Rank lo, Rank mi, Rank hi ); //\u200b\u5f52\u5e76\u200b\u7b97\u6cd5\u200b\n   void mergeSort ( Rank lo, Rank hi ); //\u200b\u5f52\u5e76\u200b\u6392\u5e8f\u200b\u7b97\u6cd5\u200b\n   void heapSort ( Rank lo, Rank hi ); //\u200b\u5806\u6392\u5e8f\u200b\uff08\u200b\u7a0d\u540e\u200b\u7ed3\u5408\u200b\u5b8c\u5168\u200b\u5806\u200b\u8bb2\u89e3\u200b\uff09\n   Rank partition ( Rank lo, Rank hi ); //\u200b\u8f74\u70b9\u200b\u6784\u9020\u200b\u7b97\u6cd5\u200b\n   void quickSort ( Rank lo, Rank hi ); //\u200b\u5feb\u901f\u200b\u6392\u5e8f\u200b\u7b97\u6cd5\u200b\n   void shellSort ( Rank lo, Rank hi ); //\u200b\u5e0c\u5c14\u200b\u6392\u5e8f\u200b\u7b97\u6cd5\u200b\npublic:\n// \u200b\u6784\u9020\u51fd\u6570\u200b\n   Vector ( int c = DEFAULT_CAPACITY, int s = 0, T v = 0 ) //\u200b\u5bb9\u91cf\u200b\u4e3a\u200bc\u3001\u200b\u89c4\u6a21\u200b\u4e3a\u200bs\u3001\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u521d\u59cb\u200b\u4e3a\u200bv\n   { _elem = new T[_capacity = c]; for ( _size = 0; _size &lt; s; _elem[_size++] = v ); } //s&lt;=c\n   Vector ( T const* A, Rank n ) { copyFrom ( A, 0, n ); } //\u200b\u6570\u7ec4\u200b\u6574\u4f53\u200b\u590d\u5236\u200b\n   Vector ( T const* A, Rank lo, Rank hi ) { copyFrom ( A, lo, hi ); } //\u200b\u533a\u95f4\u200b\n   Vector ( Vector&lt;T&gt; const&amp; V ) { copyFrom ( V._elem, 0, V._size ); } //\u200b\u5411\u91cf\u200b\u6574\u4f53\u200b\u590d\u5236\u200b\n   Vector ( Vector&lt;T&gt; const&amp; V, Rank lo, Rank hi ) { copyFrom ( V._elem, lo, hi ); } //\u200b\u533a\u95f4\u200b\n// \u200b\u6790\u6784\u200b\u51fd\u6570\u200b\n   ~Vector() { delete [] _elem; } //\u200b\u91ca\u653e\u200b\u5185\u90e8\u7a7a\u95f4\u200b\n// \u200b\u53ea\u8bfb\u200b\u8bbf\u95ee\u200b\u63a5\u53e3\u200b\n   Rank size() const { return _size; } //\u200b\u89c4\u6a21\u200b\n   bool empty() const { return !_size; } //\u200b\u5224\u7a7a\u200b\n   Rank find ( T const&amp; e ) const { return find ( e, 0, _size ); } //\u200b\u65e0\u5e8f\u200b\u5411\u91cf\u200b\u6574\u4f53\u200b\u67e5\u627e\u200b\n   Rank find ( T const&amp; e, Rank lo, Rank hi ) const; //\u200b\u65e0\u5e8f\u200b\u5411\u91cf\u200b\u533a\u95f4\u200b\u67e5\u627e\u200b\n   Rank search ( T const&amp; e ) const //\u200b\u6709\u5e8f\u200b\u5411\u91cf\u200b\u6574\u4f53\u200b\u67e5\u627e\u200b\n   { return ( 0 &gt;= _size ) ? -1 : search ( e, 0, _size ); }\n   Rank search ( T const&amp; e, Rank lo, Rank hi ) const; //\u200b\u6709\u5e8f\u200b\u5411\u91cf\u200b\u533a\u95f4\u200b\u67e5\u627e\u200b\n// \u200b\u53ef\u200b\u5199\u8bbf\u95ee\u200b\u63a5\u53e3\u200b\n   T&amp; operator[] ( Rank r ); //\u200b\u91cd\u8f7d\u200b\u4e0b\u6807\u200b\u64cd\u4f5c\u7b26\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\u6570\u7ec4\u200b\u5f62\u5f0f\u200b\u5f15\u7528\u200b\u5404\u200b\u5143\u7d20\u200b\n   const T&amp; operator[] ( Rank r ) const; //\u200b\u4ec5\u9650\u4e8e\u200b\u505a\u53f3\u503c\u200b\u7684\u200b\u91cd\u8f7d\u200b\u7248\u672c\u200b\n   Vector&lt;T&gt; &amp; operator= ( Vector&lt;T&gt; const&amp; ); //\u200b\u91cd\u8f7d\u200b\u8d4b\u503c\u200b\u64cd\u4f5c\u7b26\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u76f4\u63a5\u200b\u514b\u9686\u200b\u5411\u91cf\u200b\n   T remove ( Rank r ); //\u200b\u5220\u9664\u200b\u79e9\u4e3a\u200br\u200b\u7684\u200b\u5143\u7d20\u200b\n   int remove ( Rank lo, Rank hi ); //\u200b\u5220\u9664\u200b\u79e9\u5728\u200b\u533a\u95f4\u200b[lo, hi)\u200b\u4e4b\u5185\u200b\u7684\u200b\u5143\u7d20\u200b\n   Rank insert ( Rank r, T const&amp; e ); //\u200b\u63d2\u5165\u200b\u5143\u7d20\u200b\n   Rank insert ( T const&amp; e ) { return insert ( _size, e ); } //\u200b\u9ed8\u8ba4\u200b\u4f5c\u4e3a\u200b\u672b\u200b\u5143\u7d20\u200b\u63d2\u5165\u200b\n   void sort ( Rank lo, Rank hi ); //\u200b\u5bf9\u200b[lo, hi)\u200b\u6392\u5e8f\u200b\n   void sort() { sort ( 0, _size ); } //\u200b\u6574\u4f53\u200b\u6392\u5e8f\u200b\n   void unsort ( Rank lo, Rank hi ); //\u200b\u5bf9\u200b[lo, hi)\u200b\u7f6e\u4e71\u200b\n   void unsort() { unsort ( 0, _size ); } //\u200b\u6574\u4f53\u200b\u7f6e\u4e71\u200b\n   int deduplicate(); //\u200b\u65e0\u5e8f\u200b\u53bb\u200b\u91cd\u200b\n   int uniquify(); //\u200b\u6709\u5e8f\u200b\u53bb\u200b\u91cd\u200b\n// \u200b\u904d\u5386\u200b\n   void traverse ( void (* ) ( T&amp; ) ); //\u200b\u904d\u5386\u200b\uff08\u200b\u4f7f\u7528\u200b\u51fd\u6570\u6307\u9488\u200b\uff0c\u200b\u53ea\u8bfb\u200b\u6216\u200b\u5c40\u90e8\u6027\u200b\u4fee\u6539\u200b\uff09\n   template &lt;typename VST&gt; void traverse ( VST&amp; ); //\u200b\u904d\u5386\u200b\uff08\u200b\u4f7f\u7528\u200b\u51fd\u6570\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u53ef\u200b\u5168\u5c40\u6027\u200b\u4fee\u6539\u200b\uff09\n}; //Vector\n</code></pre> Reference</p>"},{"location":"coding/dsa/vector-and-list/#_4","title":"\u63d2\u5165","text":"<p>\u200b\u5411\u91cf\u200b\u7684\u200b\u63d2\u5165\u200b\u64cd\u4f5c\u200b\u5206\u4e3a\u200b\u4e09\u6b65\u200b\uff1a</p> <ol> <li>\u200b\u68c0\u67e5\u200b\u5411\u91cf\u200b\u7a7a\u95f4\u200b\u4e0e\u200b\u8f93\u5165\u200b\u4e0b\u200b\u6807\u7684\u200b\u5408\u6cd5\u6027\u200b\uff0c\u200b\u5fc5\u8981\u200b\u65f6\u200b\u6539\u53d8\u200b\u5411\u91cf\u200b\u7684\u200b\u957f\u5ea6\u200b\u4ee5\u200b\u5bb9\u7eb3\u200b\u8be5\u200b\u5143\u7d20\u200b</li> <li>\u200b\u5f53\u200b\u8f93\u5165\u200b\u4e0b\u6807\u200b\u4e0d\u662f\u200b\u5411\u91cf\u200b\u7684\u200b\u672b\u5c3e\u200b\u65f6\u200b\uff0c\u200b\u79fb\u52a8\u200b\u5411\u91cf\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\uff0c\u200b\u5728\u200b\u5bf9\u5e94\u200b\u4f4d\u7f6e\u200b\u817e\u51fa\u200b\u7a7a\u95f4\u200b</li> <li>\u200b\u5c06\u200b\u6570\u636e\u200b\u5199\u5165\u200b\u5411\u91cf\u200b\u4e2d\u200b</li> </ol> <p>\u200b\u5728\u200b\u957f\u5ea6\u200b\u4e3a\u200b\\(n\\)\u200b\u7684\u200b\u5411\u91cf\u200b\u4e2d\u200b\u7684\u200b\u968f\u673a\u200b\u4f4d\u7f6e\u200b\u63d2\u5165\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\uff0c\u200b\u6539\u53d8\u200b\u5411\u91cf\u200b\u957f\u5ea6\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u65f6\u95f4\u200b\u4e3a\u200b\\(\\mathcal O(n)\\)\uff0c\u200b\u79fb\u52a8\u200b\u5143\u7d20\u200b\u4ee5\u200b\u817e\u51fa\u200b\u7a7a\u95f4\u200b\u7684\u200b\u671f\u671b\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(\\mathcal O(n)\\)\uff0c\u200b\u5199\u5165\u200b\u6570\u636e\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(\\mathcal O(1)\\)\uff0c\u200b\u603b\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(\\mathcal O(n)\\)</p>"},{"location":"coding/dsa/vector-and-list/#_5","title":"\u53ef\u200b\u6269\u5145\u200b\u5411\u91cf","text":"<p>\u200b\u5411\u91cf\u200b\u7684\u200b\u7a7a\u95f4\u200b\u662f\u200b\u6709\u9650\u200b\u7684\u200b\uff08\u200b\u5373\u200b\u4e3a\u200b\u5411\u91cf\u200b\u672c\u8eab\u200b\u7684\u200b\u957f\u5ea6\u200b\uff09\uff0c\u200b\u82e5\u5f53\u200b\u5411\u91cf\u200b\u7a7a\u95f4\u200b\u4e0d\u8db3\u200b\u65f6\u4e3a\u200b\u5411\u91cf\u200b\u91cd\u65b0\u5206\u914d\u200b\u4e00\u5757\u200b\u66f4\u957f\u200b\u7684\u200b\u5185\u5b58\u200b\uff0c\u200b\u5c06\u200b\u539f\u200b\u6570\u636e\u200b\u590d\u5236\u5230\u200b\u65b0\u200b\u7684\u200b\u5185\u5b58\u7a7a\u95f4\u200b\u4e2d\u4ee5\u200b\u5b9e\u73b0\u200b\u5bb9\u91cf\u200b\u7684\u200b\u6269\u589e\u200b\uff0c\u200b\u5219\u200b\u5411\u91cf\u200b\u7684\u200b\u7a7a\u95f4\u200b\u53ef\u4ee5\u200b\u8fd1\u4f3c\u200b\u89c6\u4e3a\u200b\u65e0\u9650\u200b\u3002\u200b\u4e00\u822c\u200b\u5b58\u5728\u200b\u4e24\u79cd\u200b\u6269\u5145\u200b\u7b97\u6cd5\u200b\uff1a</p> <ul> <li>\u200b\u5f53\u200b\u5411\u91cf\u200b\u7a7a\u95f4\u200b\u4e0d\u8db3\u200b\u65f6\u200b\uff0c\u200b\u5411\u91cf\u200b\u7a7a\u95f4\u200b\u589e\u52a0\u200b\u4e00\u4e2a\u200b\u5e38\u91cf\u200b\\(I\\)</li> <li>\u200b\u5f53\u200b\u5411\u91cf\u200b\u7a7a\u95f4\u200b\u4e0d\u8db3\u200b\u65f6\u200b\uff0c\u200b\u5411\u91cf\u200b\u7a7a\u95f4\u200b\u4e58\u4ee5\u200b\u4e00\u5b9a\u200b\u500d\u6570\u200b\\(k\\)\uff08\u200b\u901a\u5e38\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\\(k=2\\)\uff09</li> </ul> <p>\u200b\u5bf9\u4e8e\u200b\u521d\u59cb\u200b\u957f\u5ea6\u200b\u4e3a\u200b\\(0\\)\u200b\u7684\u200b\u5411\u91cf\u200b\uff0c\u200b\u8003\u5bdf\u200b\u63d2\u5165\u200b\\(n\\gg 2\\)\u200b\u4e2a\u200b\u5143\u7d20\u200b\u4e0b\u200b\u4e24\u79cd\u200b\u6269\u5145\u200b\u7b97\u6cd5\u200b\u7684\u200b\u8c03\u7528\u200b\u6b21\u6570\u200b\u3002\u200b\u9012\u589e\u200b\u7b56\u7565\u200b\u4e0b\u200b\u63d2\u5165\u200b\u7b2c\u200b\\(mI+1, (m\\in \\mathbb N)\\)\u200b\u4e2a\u200b\u5143\u7d20\u200b\u65f6\u200b\u9700\u8981\u200b\u8fdb\u884c\u200b\u6269\u5145\u200b\uff0c\u200b\u603b\u200b\u7684\u200b\u8c03\u7528\u200b\u6b21\u6570\u200b\u4e3a\u200b\\(\\frac{n}{I}\\)\uff0c\u200b\u5373\u200b\\(\\mathcal O(n)\\)\u3002\u200b\u500d\u589e\u200b\u7b56\u7565\u200b\u4e0b\u200b\u63d2\u5165\u200b\u7b2c\u200b\\(1, 2, 3, 5\\dots 2^m+1, (m\\in \\mathbb N)\\)\u200b\u4e2a\u200b\u5143\u7d20\u200b\u65f6\u200b\u9700\u8981\u200b\u8fdb\u884c\u200b\u6269\u5145\u200b\uff0c\u200b\u603b\u200b\u7684\u200b\u8c03\u7528\u200b\u6b21\u6570\u200b\u4e3a\u200b\\(\\mathcal O(\\log n)\\)\u3002</p> <p>\u200b\u590d\u5236\u200b\u6570\u636e\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(\\mathcal O(n)\\)\uff0c\u200b\u56e0\u6b64\u200b\u9012\u589e\u200b\u7b56\u7565\u200b\u6bcf\u6b21\u200b\u6269\u5bb9\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u65f6\u95f4\u200b\u4e3a\u200b\\(0, I, 2I, \\dots\\)\uff0c\u200b\u5171\u200b\u9700\u8981\u200b\u6269\u5bb9\u200b\\(\\frac nI\\)\u200b\u6b21\u200b\uff0c\u200b\u6269\u5bb9\u200b\u64cd\u4f5c\u200b\u7684\u200b\u603b\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(\\mathcal O(n^2)\\)\u3002\u200b\u6bcf\u6b21\u200b\u63d2\u5165\u200b\u64cd\u4f5c\u200b\u5206\u644a\u200b\\(\\mathcal O(n)\\)\u3002\u200b\u500d\u589e\u200b\u7b56\u7565\u200b\u6bcf\u6b21\u200b\u6269\u5bb9\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u65f6\u95f4\u200b\u4e3a\u200b\\(0, 1, 2, \\dots n\\)\uff0c\u200b\u5171\u200b\u9700\u8981\u200b\u6269\u5bb9\u200b\\(\\log n\\)\u200b\u6b21\u200b\u3002\u200b\u6269\u5bb9\u200b\u64cd\u4f5c\u200b\u7684\u200b\u603b\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(\\mathcal O(n)\\)\uff0c\u200b\u6bcf\u6b21\u200b\u63d2\u5165\u200b\u64cd\u4f5c\u200b\u5206\u644a\u200b\\(\\mathcal O(1)\\)\u3002</p> <p>\u200b\u4f46\u200b\u500d\u589e\u200b\u7b56\u7565\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u66f4\u200b\u591a\u200b\u7684\u200b\u7a7a\u95f4\u200b\u6d6a\u8d39\u200b\uff0c\u200b\u5177\u4f53\u8868\u73b0\u200b\u4e3a\u200b\u5411\u91cf\u200b\u7684\u200b\u88c5\u8f7d\u200b\u56e0\u5b50\u200b\u8f83\u200b\u4f4e\u200b\u3002\u200b\u63d2\u5165\u200b\u5927\u91cf\u200b\u5143\u7d20\u200b\u65f6\u200b\uff0c\u200b\u500d\u589e\u200b\u7b56\u7565\u200b\u7684\u200b\u88c5\u8f7d\u200b\u56e0\u5b50\u200b\u53ea\u80fd\u200b\u4fdd\u8bc1\u200b\\(&gt; 50\\)\uff0c\u200b\u800c\u200b\u9012\u589e\u200b\u7b56\u7565\u200b\u7684\u200b\u88c5\u8f7d\u200b\u56e0\u5b50\u200b\u53ef\u4ee5\u200b\u4fdd\u8bc1\u200b\u5728\u200b\\(1\\)\u200b\u5de6\u53f3\u200b\u3002</p>"},{"location":"coding/dsa/vector-and-list/#_6","title":"\u5220\u9664","text":"<p>\u200b\u5411\u91cf\u200b\u7684\u200b\u5220\u9664\u200b\u64cd\u4f5c\u200b\u4e3b\u8981\u200b\u4e3a\u200b\u533a\u95f4\u200b\u5220\u9664\u200b\u4e0e\u200b\u5355\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u5220\u9664\u200b\u3002\u200b\u5176\u4e2d\u200b\u540e\u8005\u200b\u53ef\u4ee5\u200b\u89c6\u4e3a\u200b\u524d\u8005\u200b\u7684\u200b\u7279\u6b8a\u200b\u60c5\u51b5\u200b\u3002\u200b\u5220\u9664\u200b\u64cd\u4f5c\u200b\u4e0d\u200b\u9700\u8981\u200b\u6267\u884c\u200b\u989d\u5916\u200b\u7684\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u5c06\u200b\u5220\u9664\u200b\u533a\u95f4\u200b\u540e\u200b\u7684\u200b\u5143\u7d20\u200b\u5411\u524d\u200b\u79fb\u52a8\u200b\uff0c\u200b\u8986\u76d6\u200b\u5220\u9664\u200b\u533a\u95f4\u200b\u5185\u200b\u7684\u200b\u6570\u636e\u200b\u5e76\u200b\u66f4\u65b0\u200b\u64cd\u4f5c\u200b\u7ed3\u675f\u200b\u540e\u200b\u5411\u91cf\u200b\u7684\u200b\u957f\u5ea6\u200b\u5373\u53ef\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u53ef\u200b\u6269\u5145\u200b\u5411\u91cf\u200b\uff0c\u200b\u5220\u9664\u200b\u540e\u200b\u5e94\u5bf9\u200b\u5411\u91cf\u200b\u7684\u200b\u88c5\u586b\u200b\u56e0\u5b50\u200b\u8fdb\u884c\u200b\u68c0\u67e5\u200b\uff0c\u200b\u5728\u200b\u5fc5\u8981\u200b\u65f6\u200b\u6536\u7f29\u200b\u5411\u91cf\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u591a\u6b21\u200b\u8c03\u7528\u200b\u5220\u9664\u200b\u5355\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u63a5\u53e3\u200b\u5b9e\u73b0\u200b\u533a\u95f4\u200b\u5220\u9664\u200b\uff0c\u200b\u7531\u4e8e\u200b\u6bcf\u6b21\u200b\u5220\u9664\u200b\u90fd\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u4e00\u6b21\u200b\u6570\u636e\u200b\u7684\u200b\u79fb\u52a8\u200b\uff0c\u200b\u603b\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(\\mathcal O(n^2)\\)</p> <p>\u200b\u5220\u9664\u200b\u64cd\u4f5c\u200b\u9700\u8981\u200b\u5bf9\u200b\u5220\u9664\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u5408\u6cd5\u6027\u200b\u8fdb\u884c\u200b\u68c0\u9a8c\u200b\u3002</p>"},{"location":"coding/dsa/vector-and-list/#_7","title":"\u67e5\u627e","text":"<p>\u200b\u65e0\u5e8f\u200b\u5411\u91cf\u200b\u4e0e\u200b\u6709\u5e8f\u200b\u5411\u91cf\u200b\u7684\u200b\u67e5\u627e\u200b\u65b9\u6cd5\u200b\u4e0d\u540c\u200b\uff0c\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e5f\u200b\u4e0d\u540c\u200b\u3002\u200b\u5177\u4f53\u200b\u800c\u8a00\u200b\uff0c\u200b\u6709\u5e8f\u200b\u5411\u91cf\u200b\u7684\u200b\u987a\u5e8f\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u989d\u5916\u200b\u7684\u200b\u4fe1\u606f\u200b\uff0c\u200b\u4ece\u800c\u200b\u4f7f\u5f97\u200b\u6709\u5e8f\u200b\u5411\u91cf\u200b\u4e2d\u200b\u7684\u200b\u67e5\u627e\u200b\u64cd\u4f5c\u200b\u80fd\u591f\u200b\u5728\u200b\\(\\log n\\)\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u5185\u200b\u5b8c\u6210\u200b\u3002</p>"},{"location":"coding/dsa/vector-and-list/#_8","title":"\u987a\u5e8f\u200b\u67e5\u627e","text":"<p>\u200b\u987a\u5e8f\u200b\u67e5\u627e\u200b\u64cd\u4f5c\u200b\u5047\u8bbe\u200b\u5411\u91cf\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u7c7b\u578b\u5b9a\u4e49\u200b\u4e86\u200b<code>==</code>\u200b\u8fd0\u7b97\u7b26\u200b\u4e0e\u200b<code>!=</code>\u200b\u8fd0\u7b97\u7b26\u200b\u3002</p> <p>\u200b\u65e0\u5e8f\u200b\u5411\u91cf\u200b\u67e5\u627e\u200b\u53ea\u200b\u9700\u8981\u200b\u4ece\u200b\u5411\u91cf\u200b\u7684\u200b\u5f00\u5934\u200b\u4f9d\u6b21\u200b\u5bf9\u6bd4\u200b\u5411\u91cf\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u4e0e\u200b\u5f85\u67e5\u200b\u5143\u7d20\u200b\uff0c\u200b\u5f53\u200b\u5143\u7d20\u200b\u76f8\u540c\u200b\u65f6\u200b\u8fd4\u56de\u200b\u5373\u53ef\u200b\u3002\u200b\u5e73\u5747\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(\\mathcal O(n)\\)</p>"},{"location":"coding/dsa/vector-and-list/#_9","title":"\u4e8c\u5206\u200b\u67e5\u627e","text":"<p>\u200b\u6709\u5e8f\u200b\u5411\u91cf\u200b\u7684\u200b\u67e5\u627e\u200b\u64cd\u4f5c\u200b\u5047\u8bbe\u200b\u5411\u91cf\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u7c7b\u578b\u5b9a\u4e49\u200b\u7c7b\u200b<code>==</code>\u200b\u8fd0\u7b97\u7b26\u200b\u3001<code>!=</code>\u200b\u8fd0\u7b97\u7b26\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6709\u5e8f\u200b\u5411\u91cf\u200b\u53ef\u4ee5\u200b\u6309\u7167\u200b\u65e0\u5e8f\u200b\u5411\u91cf\u200b\u7684\u200b\u67e5\u627e\u200b\u65b9\u6cd5\u200b\u7ebf\u6027\u200b\u67e5\u627e\u200b\u3002\u200b\u82e5\u200b\u6709\u5e8f\u200b\u5411\u91cf\u200b\u7684\u200b\u5143\u7d20\u200b\u7c7b\u578b\u5b9a\u4e49\u200b\u4e86\u200b\u6bd4\u8f83\u200b\u8fd0\u7b97\u7b26\u200b<code>&lt;</code>\u200b\u4e0e\u200b<code>&gt;</code>\uff0c\u200b\u5219\u200b\u57fa\u4e8e\u200b\u6bd4\u8f83\u200b\u7684\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u964d\u200b\u81f3\u200b\\(\\mathcal O(\\log n)\\)\u3002</p> <p>\u200b\u51cf\u800c\u6cbb\u200b\u4e4b\u200b\u662f\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u7684\u200b\u6838\u5fc3\u601d\u60f3\u200b\u3002\u200b\u8003\u8651\u200b\u66f4\u200b\u4e00\u822c\u200b\u7684\u200b\u901a\u7528\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u957f\u5ea6\u200b\u4e3a\u200b\\(n\\)\u200b\u7684\u200b\u6570\u7ec4\u200b\uff0c\u200b\u5728\u200b\\(\\lambda \\cdot n (0\\leq \\lambda\\leq 1)\\)\u200b\u5904\u8bbe\u200b\u4e3a\u8f74\u70b9\u200b\u3002\u200b\u6bcf\u6b21\u200b\u6bd4\u8f83\u200b\u5f53\u524d\u200b\u5f85\u67e5\u200b\u533a\u95f4\u200b\u7684\u200b\u8f74\u70b9\u200b\\(B\\)\u200b\u4e0e\u200b\u5f85\u67e5\u200b\u5143\u7d20\u200b\\(A\\)\u3002\u200b\u6bcf\u200b\u4e00\u6b21\u200b\u5bf9\u8f74\u70b9\u200b\u7684\u200b\u6bd4\u8f83\u200b\u6709\u200b\u4e09\u79cd\u200b\u53ef\u80fd\u200b\u7684\u200b\u7ed3\u679c\u200b\uff0c\u200b\u5047\u8bbe\u200b\u5411\u91cf\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u6309\u7167\u200b\u5347\u5e8f\u200b\u6392\u5e8f\u200b\uff0c\u200b\u5219\u200b\uff1a</p> <ul> <li>\\(A&lt;B\\)\uff0c\u200b\u8868\u793a\u200b\u5f85\u67e5\u200b\u5143\u7d20\u200b\u53ea\u200b\u53ef\u80fd\u200b\u51fa\u73b0\u200b\u5728\u200b\u8f74\u70b9\u200b\u5de6\u4fa7\u200b\uff0c\u200b\u5c06\u200b\u5f85\u67e5\u200b\u533a\u95f4\u200b\u7f29\u5c0f\u200b\u81f3\u200b\u5de6\u534a\u200b\u90e8\u5206\u200b\uff0c\u200b\u7ee7\u7eed\u200b\u67e5\u627e\u200b\u8fc7\u7a0b\u200b\uff1b</li> <li>\\(A=B\\)\uff0c\u200b\u8868\u793a\u200b\u8f74\u70b9\u200b\u5904\u200b\u51fa\u73b0\u200b\u5f85\u67e5\u200b\u5143\u7d20\u200b\uff0c\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b\u4e2d\u70b9\u200b\u7684\u200b\u4e0b\u6807\u200b\u5373\u53ef\u200b\uff1b</li> <li>\\(B&lt;A\\)\uff0c\u200b\u8868\u793a\u200b\u5f85\u67e5\u200b\u5143\u7d20\u200b\u53ea\u200b\u53ef\u80fd\u200b\u51fa\u73b0\u200b\u5728\u200b\u8f74\u70b9\u200b\u53f3\u4fa7\u200b\uff0c\u200b\u5c06\u200b\u5f85\u67e5\u200b\u533a\u95f4\u200b\u7f29\u5c0f\u200b\u81f3\u200b\u53f3\u534a\u200b\u90e8\u5206\u200b\uff0c\u200b\u7ee7\u7eed\u200b\u67e5\u627e\u200b\u8fc7\u7a0b\u200b\u3002</li> </ul> <p>\u200b\u5bf9\u4e8e\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\uff0c\u200b\u8f74\u70b9\u200b\u4e3a\u200b\u5f85\u67e5\u200b\u533a\u95f4\u200b\u7684\u200b\u4e2d\u70b9\u200b\uff0c\u200b\u5373\u200b\\(\\lambda = 0.5\\)\u3002</p> <p>1234567891011</p> <p>\u200b\u4f46\u200b\u8be5\u200b\u7248\u672c\u200b\u7684\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u6709\u200b\u591a\u79cd\u200b\u610f\u5916\u200b\u60c5\u5f62\u200b\uff0c\u200b\u5982\u200b\uff1a</p> <ol> <li>\u200b\u5411\u91cf\u200b\u4e2d\u200b\u627e\u200b\u4e0d\u5230\u200b\u5f85\u67e5\u200b\u5143\u7d20\u200b\uff1b</li> <li>\u200b\u5411\u91cf\u200b\u4e2d\u200b\u5f85\u67e5\u200b\u5143\u7d20\u200b\u5b58\u5728\u200b\u591a\u4e2a\u200b\u3002</li> </ol> <p>\u200b\u6b64\u65f6\u200b\u51fd\u6570\u200b\u8fd4\u56de\u200b\u7684\u200b\u7ed3\u679c\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u552f\u4e00\u200b\u3002\u200b\u7ea6\u5b9a\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u7b97\u6cd5\u200b\u8fd4\u56de\u200b\u4e0d\u200b\u5927\u4e8e\u200b\u5f85\u67e5\u200b\u5143\u7d20\u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u3002</p> <p>\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u901a\u8fc7\u200b\u5c3d\u53ef\u80fd\u51cf\u5c11\u200b\u9012\u5f52\u200b\u6df1\u5ea6\u200b\u7684\u200b\u65b9\u5f0f\u200b\u51cf\u5c11\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff0c\u200b\u7531\u6b64\u200b\uff0c\u200b\u6bcf\u200b\u4e00\u6b21\u200b\u9012\u5f52\u200b\u7684\u200b\u4e0d\u540c\u200b\u5206\u652f\u200b\u5e94\u6709\u200b\u76f8\u540c\u200b\u7684\u200b\u671f\u671b\u200b\u65f6\u95f4\u200b\u6d88\u8017\u200b\uff08\u200b\u5373\u200b\u8f6c\u5411\u200b\u6210\u672c\u200b\uff09\u3002\u200b\u6b64\u5904\u200b\u7684\u200b\u201c\u200b\u4e8c\u5206\u200b\u201d\u200b\u53ea\u662f\u200b\u5728\u200b\u6570\u7ec4\u200b\u533a\u95f4\u200b\u7684\u200b\u610f\u4e49\u200b\u4e0a\u200b\u4e8c\u7b49\u200b\u5206\u200b\uff0c\u200b\u82e5\u200b\u5bf9\u4e8e\u200b\u5982\u4e0b\u200b\u6761\u4ef6\u200b\u8bed\u53e5\u200b\uff1a</p> <pre><code>if (A &gt; B)\n    // statement\nelse if (A &lt; B)\n    // statement\nelse\n    // statement\n</code></pre> <p>\u200b\u5de6\u53f3\u4e24\u4e2a\u200b\u8df3\u8f6c\u200b\u4f4d\u4e8e\u200b\u4e0d\u540c\u200b\u7684\u200b\u5206\u652f\u200b\uff0c\u200b\u9700\u8981\u200b\u8fdb\u884c\u200b\u6bd4\u8f83\u200b\u7684\u200b\u6b21\u6570\u200b\u4e0d\u540c\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u65f6\u95f4\u200b\u5728\u200b\u4e25\u683c\u200b\u610f\u4e49\u200b\u4e0a\u200b\u662f\u200b\u4e0d\u540c\u200b\u7684\u200b\u3002\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u6539\u53d8\u200b\u8f74\u70b9\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u5c06\u200b\u540c\u4e00\u200b\u9012\u5f52\u200b\u6df1\u5ea6\u200b\u4e0b\u200b\u6bd4\u8f83\u200b\u7684\u200b\u671f\u671b\u200b\u6b21\u6570\u200b\u8c03\u6574\u200b\u4e3a\u200b\u76f8\u540c\u200b\uff0c\u200b\u4ece\u800c\u200b\u964d\u4f4e\u200b\u5e73\u5747\u200b\u67e5\u627e\u200b\u957f\u5ea6\u200b\uff0c\u200b\u5728\u200b\u5e38\u200b\u7cfb\u6570\u200b\u7a0b\u5ea6\u200b\u4e0a\u200b\u5bf9\u200b\u7b97\u6cd5\u200b\u8fdb\u884c\u200b\u4f18\u5316\u200b\u3002</p> <p>+1+2n\u03bbn(1 -\u03bb)\u00b7n</p> <p>\u200b\u8bbe\u200b\u7b97\u6cd5\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(\\alpha(\\lambda) \\log n\\)\uff0c\u200b\u5219\u200b\uff1a</p> <ul> <li>\u200b\u5de6\u4fa7\u200b\u5b50\u200b\u95ee\u9898\u200b\u6d88\u8017\u200b\u7684\u200b\u65f6\u95f4\u200b\u7b49\u4e8e\u200b\u5224\u65ad\u200b\u6d88\u8017\u200b\u7684\u200b\u65f6\u95f4\u200b\u53ca\u200b\u89e3\u51b3\u200b\u5b50\u200b\u95ee\u9898\u200b\u6d88\u8017\u200b\u7684\u200b\u65f6\u95f4\u200b\uff0c\u200b\u5373\u200b\uff1a\\(\\lambda (1 + \\alpha(\\lambda)  \\log (\\lambda n))\\)</li> <li>\u200b\u540c\u7406\u200b\uff0c\u200b\u53f3\u4fa7\u200b\u5b50\u200b\u95ee\u9898\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1a\\((1 - \\lambda)(2+\\alpha(\\lambda)\\log((1-\\lambda)n))\\)</li> </ul> <p>\u200b\u5f97\u200b\\(\\alpha(\\lambda) = \\frac{\\ln 2(\\lambda - 2)}{\\lambda \\cdot\\ln\\lambda+(1-\\lambda)\\cdot\\ln(1-\\lambda)}\\)</p> <p>\u200b\u5f53\u200b\\(\\lambda=\\frac{\\sqrt 5-1}{2}\\approx 0.618\\)\u200b\u65f6\u200b\uff0c\\(\\alpha(\\lambda)\\)\u200b\u53d6\u200b\u6700\u5c0f\u503c\u200b\u3002</p> <p>\u200b\u6d88\u9664\u200b\u4e0d\u200b\u5bf9\u79f0\u200b\u7684\u200b\u53e6\u200b\u4e00\u79cd\u200b\u65b9\u5f0f\u200b\u662f\u200b\u5c06\u200b\u4e09\u79cd\u200b\u6bd4\u8f83\u200b\u7ed3\u679c\u200b\u53d8\u4e3a\u200b\u4e24\u79cd\u200b\uff0c\u200b\u4ece\u800c\u200b\u4e00\u6b21\u200b\u6bd4\u8f83\u200b\u5373\u53ef\u200b\u8fdb\u884c\u200b\u5212\u5206\u200b\u3002\u200b\u8bb0\u200b\u5f85\u67e5\u200b\u5143\u7d20\u200b\u4e3a\u200b\\(A\\)\uff0c\u200b\u8f74\u70b9\u200b\u4e3a\u200b\\(B\\)\uff0c\u200b\u5219\u200b\uff1a</p> <ul> <li>\\(A&lt;B\\)\uff1a\u200b\u5728\u200b\u8f74\u70b9\u200b\u5de6\u4fa7\u200b\u7684\u200b\u533a\u95f4\u200b\u4e2d\u200b\u67e5\u627e\u200b</li> <li>\\(A\\geq B\\)\uff1a\u200b\u5728\u200b\u8f74\u70b9\u200b\u53f3\u4fa7\u200b \uff08\u200b\u5305\u542b\u200b\u8f74\u70b9\u200b\uff09 \u200b\u7684\u200b\u533a\u95f4\u200b\u4e2d\u200b\u67e5\u627e\u200b</li> <li>\u200b\u5f53\u200b\u533a\u95f4\u200b\u957f\u5ea6\u200b\u7f29\u51cf\u200b\u4e3a\u200b1\u200b\u65f6\u200b\uff0c\u200b\u8868\u793a\u200b\u67e5\u627e\u200b\u8fc7\u7a0b\u200b\u7ed3\u675f\u200b\u3002</li> </ul> <p>\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u7684\u200b\u6700\u7ec8\u200b\u5b9e\u73b0\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> \u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b <p><pre><code>/******************************************************************************************\n* Data Structures in C++\n* ISBN: 7-302-33064-6 &amp; 7-302-33065-3 &amp; 7-302-29652-2 &amp; 7-302-26883-3\n* Junhui DENG, deng@tsinghua.edu.cn\n* Computer Science &amp; Technology, Tsinghua University\n* Copyright (c) 2003-2020. All rights reserved.\n******************************************************************************************/\n\n// \u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u7b97\u6cd5\u200b\uff08\u200b\u7248\u672c\u200bC\uff09\uff1a\u200b\u5728\u200b\u6709\u5e8f\u200b\u5411\u91cf\u200b\u7684\u200b\u533a\u95f4\u200b[lo, hi)\u200b\u5185\u200b\u67e5\u627e\u200b\u5143\u7d20\u200be\uff0c0 &lt;= lo &lt;= hi &lt;= _size\ntemplate &lt;typename T&gt; static Rank binSearch ( T* S, T const&amp; e, Rank lo, Rank hi ) {\n   while ( lo &lt; hi ) { //\u200b\u6bcf\u6b65\u200b\u8fed\u4ee3\u200b\u4ec5\u200b\u9700\u200b\u505a\u200b\u4e00\u6b21\u200b\u6bd4\u8f83\u200b\u5224\u65ad\u200b\uff0c\u200b\u6709\u200b\u4e24\u4e2a\u200b\u5206\u652f\u200b\n      Rank mi = ( lo + hi ) &gt;&gt; 1; //\u200b\u4ee5\u4e2d\u70b9\u200b\u4e3a\u8f74\u70b9\u200b\uff08\u200b\u533a\u95f4\u200b\u5bbd\u5ea6\u200b\u7684\u200b\u6298\u534a\u200b\uff0c\u200b\u7b49\u6548\u4e8e\u200b\u5bbd\u5ea6\u200b\u4e4b\u200b\u6570\u503c\u200b\u8868\u793a\u200b\u7684\u200b\u53f3\u79fb\u200b\uff09\n      ( e &lt; S[mi] ) ? hi = mi : lo = mi + 1; //\u200b\u7ecf\u200b\u6bd4\u8f83\u200b\u540e\u200b\u786e\u5b9a\u200b\u6df1\u5165\u200b[lo, mi)\u200b\u6216\u200b(mi, hi)\n   } //\u200b\u6210\u529f\u200b\u67e5\u627e\u200b\u4e0d\u80fd\u200b\u63d0\u524d\u200b\u7ec8\u6b62\u200b\n   return lo - 1; //\u200b\u5faa\u73af\u200b\u7ed3\u675f\u200b\u65f6\u200b\uff0clo\u200b\u4e3a\u200b\u5927\u4e8e\u200be\u200b\u7684\u200b\u5143\u7d20\u200b\u7684\u200b\u6700\u5c0f\u200b\u79e9\u200b\uff0c\u200b\u6545\u200blo - 1\u200b\u5373\u200b\u4e0d\u200b\u5927\u4e8e\u200be\u200b\u7684\u200b\u5143\u7d20\u200b\u7684\u200b\u6700\u5927\u200b\u79e9\u200b\n} //\u200b\u6709\u200b\u591a\u4e2a\u200b\u547d\u4e2d\u200b\u5143\u7d20\u200b\u65f6\u200b\uff0c\u200b\u603b\u80fd\u200b\u4fdd\u8bc1\u200b\u8fd4\u56de\u200b\u79e9\u200b\u6700\u5927\u8005\u200b\uff1b\u200b\u67e5\u627e\u200b\u5931\u8d25\u200b\u65f6\u200b\uff0c\u200b\u80fd\u591f\u200b\u8fd4\u56de\u200b\u5931\u8d25\u200b\u7684\u200b\u4f4d\u7f6e\u200b\n</code></pre> Reference</p>"},{"location":"coding/dsa/vector-and-list/#_10","title":"\u63d2\u503c\u200b\u67e5\u627e","text":"<p>\u200b\u5047\u8bbe\u200b\u533a\u95f4\u200b\u5185\u200b\u5143\u7d20\u200b\u5206\u5e03\u200b\u7684\u200b\u89c4\u5f8b\u200b\u5df2\u77e5\u200b\uff0c\u200b\u6839\u636e\u200b\u5f85\u67e5\u200b\u5143\u7d20\u200b\u5728\u200b\u8be5\u200b\u5206\u5e03\u200b\u4e2d\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u63a8\u65ad\u200b\u5f85\u67e5\u200b\u5143\u7d20\u200b\u5728\u200b\u533a\u95f4\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u4ee5\u6b64\u200b\u786e\u5b9a\u200b\u5212\u5206\u200b\u7684\u200b\u8f74\u70b9\u200b\u4f4d\u7f6e\u200b\u3002</p> <p>\u200b\u5047\u8bbe\u200b\u533a\u95f4\u200b\u5185\u200b\u5143\u7d20\u200b\u670d\u4ece\u200b\u72ec\u7acb\u200b\u7684\u200b\u5e73\u5747\u200b\u5206\u5e03\u200b\uff0c\u200b\u5219\u200b\u6bcf\u6b21\u200b\u67e5\u627e\u200b\u5e73\u5747\u200b\u4f7f\u5f97\u200b\u533a\u95f4\u200b\u7f29\u51cf\u200b\u81f3\u200b\u539f\u6765\u200b\u7684\u200b\\(\\sqrt n\\)\uff0c\u200b\u5e73\u5747\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(\\mathcal O(\\log\\log n)\\)\u3002</p>"},{"location":"coding/dsa/vector-and-list/#_11","title":"\u53bb\u200b\u91cd","text":"<p>\u200b\u5bf9\u4e8e\u200b\u6709\u5e8f\u200b\u5411\u91cf\u200b\uff0c\u200b\u53bb\u200b\u91cd\u200b\u64cd\u4f5c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u7ebf\u6027\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u5185\u200b\u5b8c\u6210\u200b\uff0c\u200b\u65e0\u5e8f\u200b\u5411\u91cf\u200b\u53bb\u200b\u91cd\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(\\mathcal O(n^2)\\)</p>"},{"location":"coding/dsa/vector-and-list/#_12","title":"\u65e0\u5e8f\u200b\u5411\u91cf","text":"<p>\u200b\u4f7f\u7528\u200b\u6307\u9488\u200b\u6807\u8bb0\u200b\u65e0\u5e8f\u200b\u5411\u91cf\u200b\u5df2\u7ecf\u200b\u5b8c\u6210\u200b\u53bb\u200b\u91cd\u200b\u7684\u200b\u90e8\u5206\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u65e0\u5e8f\u200b\u5411\u91cf\u200b\u672a\u53bb\u200b\u91cd\u200b\u90e8\u5206\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\uff0c\u200b\u5728\u200b\u672a\u200b\u53bb\u200b\u91cd\u200b\u90e8\u5206\u200b\u7684\u200b\u540e\u200b\u534a\u200b\u90e8\u5206\u200b\u4e2d\u200b\u67e5\u627e\u200b\u662f\u5426\u200b\u5b58\u5728\u200b\u76f8\u540c\u200b\u7684\u200b\u5143\u7d20\u200b\uff0c\u200b\u5982\u679c\u200b\u627e\u5230\u200b\u76f8\u540c\u200b\u7684\u200b\u5143\u7d20\u200b\u5219\u200b\u5220\u9664\u200b\u3002\u200b\u5b8c\u6210\u200b\u67e5\u627e\u200b\u540e\u200b\u6307\u9488\u200b\u540e\u79fb\u200b\uff0c\u200b\u5c06\u200b\u5f53\u524d\u200b\u5143\u7d20\u200b\u6807\u8bb0\u200b\u4e3a\u200b\u5df2\u7ecf\u200b\u5b8c\u6210\u200b\u53bb\u200b\u91cd\u200b\u3002</p>"},{"location":"coding/dsa/vector-and-list/#_13","title":"\u6709\u5e8f\u200b\u5411\u91cf","text":"<p>\u200b\u4f7f\u7528\u200b\u53cc\u200b\u6307\u9488\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u6307\u9488\u200b\\(P\\)\u200b\u6807\u8bb0\u200b\u5df2\u53bb\u200b\u91cd\u200b\u90e8\u5206\u200b\u7684\u200b\u7ed3\u5c3e\u200b\uff0c\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u6307\u9488\u200b\\(Q\\)\u200b\u6807\u8bb0\u200b\u672a\u53bb\u200b\u91cd\u200b\u90e8\u5206\u200b\u7684\u200b\u5f00\u5934\u200b\uff0c\u200b\u521d\u59cb\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\\(P\\)\u200b\u4f4d\u4e8e\u200b\u5411\u91cf\u200b\u7b2c\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u4e14\u200b\\(P+1=Q\\)\u3002\u200b\u5f53\u200b\\(P\\)\u200b\u6307\u5411\u200b\u7684\u200b\u5bf9\u8c61\u200b\u4e0e\u200b\\(Q\\)\u200b\u6307\u5411\u200b\u7684\u200b\u5bf9\u8c61\u200b\u76f8\u540c\u200b\u65f6\u200b\uff0c\\(Q\\)\u200b\u9012\u589e\u200b\u800c\u200b\\(P\\)\u200b\u4e0d\u200b\u79fb\u52a8\u200b\uff0c\u200b\u5426\u5219\u200b\u5c06\u200b\\(Q\\)\u200b\u5904\u200b\u7684\u200b\u5143\u7d20\u200b\u590d\u5236\u5230\u200b\\(P+1\\)\u200b\u5904\u200b\uff0c\u200b\u4e24\u200b\u6307\u9488\u200b\u540c\u65f6\u200b\u9012\u589e\u200b\u3002</p> <p> 33355558815333555588153355555881535555588815355558881515 </p>"},{"location":"coding/dsa/vector-and-list/#_14","title":"\u6392\u5e8f","text":"<p>\u200b\u6b64\u5904\u200b\u4ecb\u7ecd\u200b\u5bf9\u200b\u5411\u91cf\u200b\u7684\u200b\u5192\u6ce1\u6392\u5e8f\u200b\u4e0e\u200b\u5f52\u5e76\u200b\u6392\u5e8f\u200b\uff0c\u200b\u5176\u4ed6\u200b\u6392\u5e8f\u200b\u65b9\u5f0f\u200b\u5c06\u200b\u5728\u200b\u4ee5\u540e\u200b\u8fdb\u884c\u200b\u4ecb\u7ecd\u200b\u3002</p>"},{"location":"coding/dsa/vector-and-list/#_15","title":"\u5192\u6ce1\u6392\u5e8f","text":"<p>\u200b\u5bf9\u4e8e\u200b\u6570\u5217\u200b\\(\\{a_1, \\cdots, a_n\\}\\)\uff0c\u200b\u82e5\u200b\\(a_i&gt;a_{i+1}\\)\uff0c\u200b\u79f0\u200b\\((a_i, a_{i+1})\\)\u200b\u4e3a\u200b\u4e00\u5bf9\u200b\u9006\u5e8f\u200b\u5bf9\u200b\u3002\u200b\u5426\u5219\u200b\u79f0\u4e3a\u200b\u987a\u5e8f\u200b\u5bf9\u200b\u3002\u200b\u5219\u200b\u6709\u5e8f\u200b\u6570\u5217\u200b\u4e2d\u200b\u4e0d\u200b\u5b58\u5728\u200b\u9006\u5e8f\u200b\u5bf9\u200b\uff0c\u200b\u65e0\u5e8f\u200b\u6570\u5217\u200b\u4e2d\u200b\u81f3\u5c11\u200b\u6709\u200b\u4e00\u4e2a\u200b\u9006\u5e8f\u200b\u5bf9\u200b\u3002\u200b\u5982\u679c\u200b\u80fd\u591f\u200b\u901a\u8fc7\u200b\u9006\u5e8f\u200b\u5bf9\u200b\u7684\u200b\u4ea4\u6362\u200b\u4f7f\u5f97\u200b\u6570\u5217\u200b\u4e2d\u200b\u6240\u6709\u200b\u7684\u200b\u9006\u5e8f\u200b\u5bf9\u200b\u8f6c\u4e3a\u200b\u987a\u5e8f\u200b\uff0c\u200b\u5373\u53ef\u200b\u5b8c\u6210\u200b\u5bf9\u200b\u6570\u7ec4\u200b\u7684\u200b\u6392\u5e8f\u200b\u3002\u200b\u8fd9\u662f\u200b\u5192\u6ce1\u6392\u5e8f\u200b\u7b97\u6cd5\u200b\u7684\u200b\u6838\u5fc3\u601d\u60f3\u200b\u3002</p> <ol> <li>\u200b\u8bbe\u200b\u5411\u91cf\u200b\uff08\u200b\u6570\u7ec4\u200b\uff09\u200b\u957f\u5ea6\u200b\u4e3a\u200b\\(n\\)\uff0c\u200b\u5f85\u200b\u6392\u5e8f\u200b\u533a\u6bb5\u200b\u4e0b\u6807\u200b\u4e3a\u200b\\([0,n)\\)</li> <li>\u200b\u6bcf\u200b\u4e00\u6b21\u200b\u626b\u63cf\u200b\u5f85\u200b\u6392\u5e8f\u200b\u533a\u6bb5\u200b\u4e2d\u200b\u7684\u200b\u76f8\u90bb\u200b\u6570\u636e\u200b\uff0c\u200b\u82e5\u200b\u4e3a\u200b\u9006\u5e8f\u200b\u5bf9\u200b\u5219\u200b\u4ea4\u6362\u200b\u4e4b\u200b</li> <li>\u200b\u626b\u63cf\u200b\u7ed3\u675f\u200b\u540e\u200b\uff0c\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u6700\u5927\u200b\u5143\u7d20\u200b\u79fb\u52a8\u200b\u5230\u200b\u5f85\u200b\u6392\u5e8f\u200b\u533a\u6bb5\u200b\u672b\u5c3e\u200b\uff0c\u200b\u5373\u200b\u4e3a\u200b\u5df2\u200b\u6392\u5e8f\u200b</li> <li>\u200b\u4e00\u8d9f\u200b\u626b\u63cf\u200b\u540e\u200b\u5c06\u200b\u5f85\u200b\u6392\u5e8f\u200b\u533a\u6bb5\u200b\u672b\u5c3e\u200b\u5143\u7d20\u200b\u5212\u5165\u200b\u5df2\u200b\u6392\u5e8f\u200b\u533a\u6bb5\u200b\u3002</li> <li>\u200b\u91cd\u590d\u200b\u626b\u63cf\u200b\uff0c\u200b\u76f4\u5230\u200b\u5f85\u200b\u6392\u5e8f\u200b\u533a\u6bb5\u200b\u957f\u5ea6\u200b\u7f29\u5c0f\u200b\u4e3a\u200b0\uff0c\u200b\u5373\u200b\u5b8c\u6210\u200b\u6392\u5e8f\u200b\u3002</li> </ol> <p>\u200b\u63d0\u524d\u200b\u7ec8\u6b62\u200b\uff1a\u200b\u82e5\u200b\u67d0\u6b21\u200b\u626b\u63cf\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u6ca1\u6709\u200b\u53d1\u751f\u200b\u4ea4\u6362\u200b\uff0c\u200b\u8bf4\u660e\u200b\u5f85\u200b\u6392\u5e8f\u200b\u533a\u6bb5\u200b\u5df2\u7ecf\u200b\u6709\u5e8f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u63d0\u524d\u7ed3\u675f\u200b\u7b97\u6cd5\u200b</p> <p>\u200b\u7531\u4e8e\u200b\u63d0\u524d\u200b\u7ec8\u6b62\u200b\u7684\u200b\u5b58\u5728\u200b\uff0c\u200b\u5192\u6ce1\u6392\u5e8f\u200b\u5728\u200b\u6700\u597d\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(\\mathcal O(n)\\)\uff0c\u200b\u5bf9\u5e94\u200b\u8f93\u5165\u200b\u6570\u636e\u200b\u5df2\u7ecf\u200b\u6709\u5e8f\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002\u200b\u5e73\u5747\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u5192\u6ce1\u6392\u5e8f\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(\\mathcal O(n^2)\\)\u3002</p> <p>\u200b\u5728\u200b\u5192\u6ce1\u6392\u5e8f\u200b\u4e2d\u200b\uff0c\u200b\u76f8\u7b49\u200b\u7684\u200b\u5143\u7d20\u200b\u4e0d\u200b\u88ab\u200b\u89c6\u4e3a\u200b\u9006\u5e8f\u200b\u5bf9\u200b\u3002\u200b\u5982\u679c\u200b\u5c06\u200b\u76f8\u7b49\u200b\u7684\u200b\u5143\u7d20\u200b\u89c6\u4e3a\u200b\u9006\u5e8f\u200b\u5bf9\u200b\uff0c\u200b\u5192\u6ce1\u6392\u5e8f\u200b\u5c06\u200b\u5931\u53bb\u200b\u7a33\u5b9a\u6027\u200b\u3002</p>"},{"location":"coding/dsa/vector-and-list/#_16","title":"\u5f52\u5e76\u200b\u6392\u5e8f","text":"<p>\u200b\u5f52\u5e76\u200b\u6392\u5e8f\u200b\u91c7\u7528\u200b\u5206\u800c\u6cbb\u4e4b\u200b\u7684\u200b\u65b9\u6cd5\u200b\u5bf9\u200b\u6570\u7ec4\u200b\u8fdb\u884c\u200b\u6392\u5e8f\u200b\uff0c\u200b\u5176\u200b\u6838\u5fc3\u601d\u60f3\u200b\u662f\u200b\u9012\u5f52\u200b\u3002\u200b\u5f52\u5e76\u200b\u6392\u5e8f\u200b\u7684\u200b\u7b97\u6cd5\u200b\u8fc7\u7a0b\u200b\u4e3b\u8981\u200b\u5206\u4e3a\u200b\u4e09\u6b65\u200b\uff1a</p> <ul> <li>\u201c\u200b\u5206\u200b\u201d\uff1a\u200b\u5c06\u200b\u5411\u91cf\u200b\u5212\u5206\u200b\u4e3a\u200b\u4e24\u4e2a\u200b\uff08\u200b\u8fd1\u4f3c\u200b\uff09\u200b\u7b49\u957f\u200b\u7684\u200b\u90e8\u5206\u200b\uff0c\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(\\mathcal O(1)\\)</li> <li>\u201c\u200b\u6cbb\u200b\u201d\uff1a\u200b\u5bf9\u200b\u4e24\u200b\u90e8\u5206\u200b\u5206\u522b\u200b\u8fdb\u884c\u200b\u5f52\u5e76\u200b\u6392\u5e8f\u200b\uff08\u200b\u5df2\u77e5\u200b\u957f\u5ea6\u200b\u4e3a\u200b\\(1\\)\u200b\u7684\u200b\u5411\u91cf\u200b\u662f\u200b\u6709\u5e8f\u200b\u5411\u91cf\u200b\uff09\uff0c\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(2\\times T(n/2)\\)</li> <li>\u201c\u200b\u5408\u200b\u201d\uff1a\u200b\u5c06\u200b\u6392\u5e8f\u200b\u540e\u200b\u7684\u200b\u4e24\u200b\u90e8\u5206\u200b\u5408\u5e76\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u6709\u5e8f\u200b\u7684\u200b\u6574\u4f53\u200b\uff0c\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(\\mathcal O(n)\\)</li> <li>\u200b\u7b97\u6cd5\u200b\u6574\u4f53\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(\\mathcal O(n\\log n)\\)\uff0c\u200b\u5373\u4f7f\u200b\u662f\u200b\u5728\u200b\u8f93\u5165\u200b\u6570\u7ec4\u200b\u6709\u5e8f\u200b\u6216\u200b\u63a5\u8fd1\u200b\u6709\u5e8f\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u3002\u200b\u5f52\u5e76\u200b\u8fc7\u7a0b\u200b\u7684\u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(\\mathcal O(n)\\)</li> </ul> \u200b\u5f52\u5e76\u200b\u6392\u5e8f\u200b <p><pre><code>template &lt;typename T&gt; void Vector&lt;T&gt;::mergeSort( Rank lo, Rank hi ) {\n   if ( hi - lo &lt; 2 ) return; //\u200b\u5355\u200b\u5143\u7d20\u200b\u533a\u95f4\u200b\u81ea\u7136\u200b\u6709\u5e8f\u200b\uff0c\u200b\u5426\u5219\u200b...\n   int mi = (lo + hi) &gt;&gt; 1; //\u200b\u4ee5\u4e2d\u70b9\u200b\u4e3a\u754c\u200b\n   mergeSort( lo, mi ); //\u200b\u5bf9\u200b\u524d\u534a\u6bb5\u200b\u6392\u5e8f\u200b\n   mergeSort( mi, hi ); //\u200b\u5bf9\u200b\u540e\u534a\u6bb5\u200b\u6392\u5e8f\u200b\n   merge( lo, mi, hi ); //\u200b\u5f52\u5e76\u200b\n}\n</code></pre> Reference</p> <p>\u200b\u5f52\u5e76\u200b\u8fc7\u7a0b\u200b\u7684\u200b\u6838\u5fc3\u601d\u60f3\u200b\u5373\u200b\u6309\u200b\u987a\u5e8f\u200b\u904d\u5386\u200b\u4e24\u200b\u90e8\u5206\u200b\uff0c\u200b\u5c06\u200b\u6700\u5c0f\u200b\u7684\u200b\u5199\u5165\u200b\u76ee\u6807\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u3002</p> <p> </p> <p>\u200b\u5b9e\u9645\u200b\u6267\u884c\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u53ea\u200b\u9700\u200b\u5c06\u200b\u6570\u7ec4\u200b\u7684\u200b\u524d\u534a\u90e8\u200b\u5206\u200b\u590d\u5236\u200b\u4e00\u4efd\u200b\uff0c\u200b\u7136\u540e\u200b\u8fdb\u884c\u200b\u5408\u5e76\u200b\u5373\u53ef\u200b\u3002</p> <ul> <li>\u200b\u82e5\u200b\u524d\u534a\u90e8\u200b\u5206\u200b\u63d0\u524d\u7ed3\u675f\u200b\uff0c\u200b\u7531\u4e8e\u200b\u76ee\u6807\u200b\u6570\u7ec4\u200b\u7684\u200b\u540e\u200b\u534a\u200b\u90e8\u5206\u200b\u4e0e\u200b\u539f\u200b\u6570\u7ec4\u200b\u7684\u200b\u540e\u200b\u534a\u200b\u90e8\u5206\u200b\u91cd\u5408\u200b\uff0c\u200b\u76ee\u6807\u200b\u6570\u7ec4\u200b\u81ea\u52a8\u200b\u6210\u4e3a\u200b\u6709\u5e8f\u200b</li> <li>\u200b\u82e5\u540e\u200b\u534a\u200b\u90e8\u5206\u200b\u63d0\u524d\u7ed3\u675f\u200b\uff0c\u200b\u5c06\u200b\u524d\u534a\u90e8\u200b\u5206\u200b\u5269\u4f59\u200b\u7684\u200b\u6570\u636e\u200b\u590d\u5236\u5230\u200b\u76ee\u6807\u200b\u6570\u7ec4\u200b\u540e\u200b\u534a\u200b\u90e8\u5206\u200b\u5bf9\u5e94\u200b\u4f4d\u7f6e\u200b\u5373\u53ef\u200b</li> </ul> <p>\u200b\u5982\u4e0b\u200b\u56fe\u200b\uff1a</p> <p> </p> <p>\u200b\u82e5\u200b\u5728\u200b\u5f52\u5e76\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u51fa\u73b0\u200b\u76f8\u540c\u200b\u5143\u7d20\u200b\uff0c\u200b\u5de6\u4fa7\u200b\u7684\u200b\u5143\u7d20\u200b\u4f18\u5148\u200b\u5f52\u5165\u200b\u76ee\u6807\u200b\u6570\u7ec4\u200b\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u4fdd\u8bc1\u200b\u5f52\u5e76\u200b\u6392\u5e8f\u200b\u7684\u200b\u7a33\u5b9a\u6027\u200b\u3002</p>"},{"location":"coding/dsa/vector-and-list/#_17","title":"\u4f4d\u200b\u56fe","text":"<p>\u200b\u4f4d\u56fe\u200b\u662f\u200b\u5176\u4e2d\u200b\u5143\u7d20\u200b\u53ea\u80fd\u200b\u53d6\u200b0/1\u200b\u7684\u200b\u5411\u91cf\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u4e00\u4e2a\u200b\u6709\u9650\u200b\u7684\u200b\u6574\u6570\u200b\u96c6\u5408\u200b\\(U\\)\uff0c\u200b\u4f4d\u200b\u56fe\u200b\u6784\u5efa\u200b\u4e86\u200b\\(U\\)\u200b\u7684\u200b\u5b50\u96c6\u200b\\(S\\)\uff0c\u200b\u5176\u4e2d\u200b\\(k\\in S\\)\u200b\u7b49\u4ef7\u200b\u4e8e\u4f4d\u200b\u56fe\u4e2d\u200b\u4e0b\u6807\u200b\u4e3a\u200b\\(k\\)\u200b\u7684\u200b\u5143\u7d20\u200b\u7684\u200b\u53d6\u503c\u200b\u4e3a\u200b\\(1\\)\u3002\u200b\u4f4d\u200b\u56fe\u200b\u63d0\u4f9b\u200b\u4e86\u200b<code>set()</code>\u3001<code>get()</code>\u3001<code>clear()</code>\u200b\u4e09\u4e2a\u200b\u63a5\u53e3\u200b\uff0c\u200b\u5206\u522b\u200b\u5bf9\u5e94\u200b\u4e8e\u4f4d\u200b\u56fe\u200b\u7684\u200b\u5199\u5165\u200b\u3001\u200b\u67e5\u8be2\u200b\u3001\u200b\u6e05\u9664\u200b\u64cd\u4f5c\u200b\u3002</p> <p>byte11010011</p> <p>\u200b\u57fa\u4e8e\u200b\u4f4d\u200b\u8fd0\u7b97\u200b\u7684\u200b\u5b9e\u73b0\u200b\u5982\u4e0b\u200b\uff1a</p> \u200b\u4f4d\u200b\u56fe\u200b\u65b9\u6cd5\u200b\u5b9e\u73b0\u200b <p><pre><code>bool test( int k ) { return M[ k &gt;&gt; 3 ] &amp; ( 0x80 &gt;&gt; (k &amp; 0x07) ); }\nvoid set( int k ) { expand( k ); M[ k &gt;&gt; 3 ] |= ( 0x80 &gt;&gt; (k &amp; 0x07) ); }\nvoid clear( int k ) { expand( k ); M[ k &gt;&gt; 3 ] &amp;= ~( 0x80 &gt;&gt; (k &amp; 0x07) ); }\n</code></pre> Reference</p> <p>\u200b\u8bfb\u53d6\u200b\u5b57\u8282\u200b\u4e2d\u200b\u7684\u200b\u67d0\u4e2a\u200b\u4f4d\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>&amp;</code>\u200b\u8fd0\u7b97\u7b26\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u5411\u200b\u5b57\u8282\u200b\u4e2d\u200b\u8bbe\u7f6e\u200b\u67d0\u4e2a\u200b\u4f4d\u4e3a\u200b\\(1\\)\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>|=</code>\u200b\u8fd0\u7b97\u7b26\u200b\u5b9e\u73b0\u200b\u3002</p> <p>\u200b\u4f4d\u56fe\u200b\u7684\u200b\u5e94\u7528\u200b\u573a\u666f\u200b\uff1a</p> <ol> <li>\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b\u53bb\u200b\u91cd\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u501f\u52a9\u200b\u4f4d\u200b\u56fe\u200b\u53ef\u4ee5\u200b\u5728\u200b\\(O(n)\\)\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u5185\u200b\u5b8c\u6210\u200b\uff0c\u200b\u540c\u65f6\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5b8c\u6210\u200b\u76f8\u5e94\u200b\u7684\u200b\u6392\u5e8f\u200b\u64cd\u4f5c\u200b\u3002</li> <li>\u200b\u8d28\u6570\u200b\u8ba1\u7b97\u200b\uff1aEratosthenes\u200b\u7b5b\u200b</li> </ol>"},{"location":"coding/dsa/vector-and-list/#_18","title":"\u5feb\u901f\u200b\u521d\u59cb\u5316","text":"<p>\u200b\u5728\u200b\u4e25\u683c\u200b\u610f\u4e49\u200b\u4e0a\u200b\u8bb2\u200b\uff0c\u200b\u5373\u4f7f\u200b\u8c03\u7528\u200b<code>memset()</code>\u200b\u51fd\u6570\u200b\uff0c\u200b\u4f4d\u56fe\u200b\u7684\u200b\u521d\u59cb\u5316\u200b\uff08\u200b\u6e05\u7a7a\u200b\uff09\u200b\u4e5f\u200b\u9700\u8981\u200b\\(\\mathcal O(n)\\)\u200b\u7684\u200b\u65f6\u95f4\u200b\u3002\u200b\u501f\u52a9\u200b\u6821\u9a8c\u200b\u73af\u200b\u7ed3\u6784\u200b\u53ef\u4ee5\u200b\u5c06\u4f4d\u200b\u56fe\u200b\u7684\u200b\u521d\u59cb\u5316\u200b\u590d\u6742\u5ea6\u200b\u7531\u200b\\(\\mathcal O(n)\\)\u200b\u63d0\u9ad8\u200b\u5230\u200b\\(\\mathcal O(1)\\)\uff08\u200b\u4f46\u200b\u76f8\u5e94\u200b\u5730\u200b\uff0c\u200b\u4f4d\u56fe\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u4f4d\u200b\u9700\u8981\u200b\u4e24\u4e2a\u200b<code>int</code>\u200b\u7c7b\u578b\u200b\u5373\u200b64\u200b\u5b57\u8282\u200b\u8fdb\u884c\u200b\u5b58\u50a8\u200b\uff0c\u200b\u9020\u6210\u200b\u7a7a\u95f4\u200b\u7684\u200b\u5927\u91cf\u200b\u6d6a\u8d39\u200b\uff09\u3002</p> <p>\u200b\u5c06\u4f4d\u200b\u56fe\u200b\u7684\u200b\u6570\u7ec4\u200b\u62c6\u200b\u5206\u4e3a\u200b<code>A[]</code>\u3001<code>B[]</code>\u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u7b2c\u200b<code>k</code>\u200b\u4f4d\u200b\uff0c\u200b\u6ee1\u8db3\u200b\uff1a</p> <ul> <li><code>A[B[k]] = k</code></li> <li><code>B[A[k]] = k</code></li> </ul> <p>\u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\u6784\u6210\u200b\u4e86\u200b\u76f8\u4e92\u200b\u6821\u9a8c\u200b\u7684\u200b\u5173\u7cfb\u200b\uff0c\u200b\u6309\u7167\u200b\u4e0b\u6807\u200b\u67e5\u8be2\u200b\uff0c\u200b\u7b26\u5408\u200b\u6821\u9a8c\u200b\u6761\u4ef6\u200b\u7684\u200b\u4e0b\u6807\u200b\u5b58\u50a8\u200b\u7684\u200b\u4f4d\u4e3a\u200b<code>1</code>\uff0c\u200b\u5426\u5219\u200b\u4e3a\u200b<code>0</code>\u3002</p> <p> 0AB0112512234567</p> <p>\u200b\u53cc\u200b\u6570\u7ec4\u200b\u6a21\u5f0f\u200b\u4e0b\u200b\uff0c\u200b\u6570\u7ec4\u200b<code>B</code>\u200b\u4e3a\u200b\u7c7b\u4f3c\u200b\u4e8e\u6808\u200b\u7684\u200b\u7ed3\u6784\u200b\uff0c\u200b\u4ece\u200b\u5f00\u5934\u200b\u9010\u6e10\u200b\u5411\u200b\u540e\u200b\u5ef6\u4f38\u200b\uff0c\u200b\u7ef4\u62a4\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b<code>top</code>\u200b\u8bb0\u5f55\u200b<code>B</code>\u200b\u4e2d\u200b\u5143\u7d20\u200b\u7684\u200b\u6570\u91cf\u200b\u3002\u200b\u6570\u7ec4\u200b<code>A</code>\u200b\u968f\u673a\u200b\u8bbf\u95ee\u200b\u3002</p> <ul> <li><code>set(k)</code>\uff1a\u200b\u5728\u200b\u6570\u7ec4\u200b<code>B</code>\u200b\u4e2d\u200b\u8ffd\u52a0\u200b\u4e00\u4e2a\u200b\u503c\u4e3a\u200b<code>k</code>\u200b\u7684\u200b\u5143\u7d20\u200b\uff0c\u200b\u5728\u200b<code>A[k]</code>\u200b\u4e2d\u200b\u5b58\u50a8\u200b<code>B</code>\u200b\u4e2d\u200b\u5bf9\u5e94\u200b\u5143\u7d20\u200b\u7684\u200b\u4e0b\u6807\u200b\uff1b</li> <li><code>get(k)</code>\uff1a\u200b\u82e5\u200b<code>B[A[k]] == k</code>\u200b\u4e14\u200b<code>A[k]</code>\u200b\u5c0f\u4e8e\u200b\u6808\u9876\u200b\u4f4d\u7f6e\u200b\u5219\u200b\u4e3a\u200b\u771f\u200b\uff0c\u200b\u5426\u5219\u200b\u4e3a\u200b\u5047\u200b\uff1b</li> <li><code>clear()</code>\uff1a\u200b\u6e05\u7a7a\u200b\u6570\u7ec4\u200b<code>B</code>\uff0c\u200b\u5373\u5c06\u200b<code>top</code>\u200b\u7f6e\u200b<code>0</code>\u3002</li> <li><code>remove(k)</code>\uff1a\u200b\u5148\u200b\u5c06\u200b<code>A-B</code>\u200b\u6821\u9a8c\u200b\u73af\u4e2d\u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u5bf9\u200b\uff08\u200b\u5bf9\u5e94\u200b<code>B[top - 1]</code>\uff09\u200b\u590d\u5236\u5230\u200b<code>B[A[k]]</code>\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u518d\u200b<code>top--</code>\u200b\u5220\u9664\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u3002</li> </ul> <p>\u201c\u200b\u6821\u9a8c\u200b\u73af\u200b\u201d\u200b\u4f4d\u56fe\u200b\u7684\u200b\u5b9e\u73b0\u200b\uff1a</p> \u200b\u4f4d\u200b\u56fe\u200b <pre><code>void set(int k)\n{\n   A[k] = top;\n   B[top++] = A[k];\n}\nint get(int k)\n{\n   return B[A[k]] == k &amp;&amp; A[k] &lt; top;\n}\nvoid remove(int k)\n{\n   A[B[--top]] = k;\n   B[k] = B[top];\n}\nvoid clear(int k)\n{\n   top = 0;\n}\n</code></pre>"},{"location":"coding/dsa/vector-and-list/#_19","title":"\u5217\u8868","text":"<p>\u200b\u5411\u91cf\u200b\u662f\u200b\u9759\u6001\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\uff0c\u200b\u4e00\u6b21\u200b\u53ea\u80fd\u200b\u5206\u914d\u200b\u56fa\u5b9a\u200b\u957f\u5ea6\u200b\u7684\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u5411\u91cf\u200b\u7684\u200b\u6269\u589e\u200b\u9700\u8981\u200b\u5206\u914d\u200b\u4e00\u5757\u200b\u65b0\u200b\u7684\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u7136\u540e\u200b\u5c06\u200b\u5411\u91cf\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u590d\u5236\u5230\u200b\u65b0\u200b\u7684\u200b\u5411\u91cf\u200b\u4e2d\u200b\u3002\u200b\u800c\u200b\u5217\u8868\u200b\u4e0e\u200b\u4e4b\u200b\u4e0d\u540c\u200b\uff0c\u200b\u5217\u8868\u200b\u7684\u200b\u5143\u7d20\u200b\u53ef\u4ee5\u200b\u52a8\u6001\u5206\u914d\u200b\uff0c\u200b\u5217\u8868\u200b\u7684\u200b\u6269\u589e\u200b\u53ea\u200b\u9700\u8981\u200b\u5206\u914d\u200b\u6269\u589e\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u7a7a\u95f4\u200b\u5373\u53ef\u200b\u3002</p> <p>\u200b\u5217\u8868\u200b\u4e2d\u200b\u5143\u7d20\u200b\u7684\u200b\u6392\u5217\u200b\u4e0e\u200b\u5217\u8868\u200b\u5143\u7d20\u200b\u5728\u200b\u5185\u5b58\u200b\u4e2d\u200b\u7684\u200b\u6392\u5217\u200b\u987a\u5e8f\u200b\u6ca1\u6709\u200b\u5fc5\u7136\u200b\u7684\u200b\u5173\u7cfb\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u5143\u7d20\u200b\u5728\u200b\u903b\u8f91\u200b\u4e0a\u200b\u5f62\u6210\u200b\u4e00\u4e2a\u200b\u5e8f\u5217\u200b\u3002\u200b\u5217\u8868\u200b\u7684\u200b\u5143\u7d20\u200b\u53c8\u79f0\u200b\u8282\u70b9\u200b\uff0c\u200b\u76f8\u90bb\u200b\u7684\u200b\u8282\u70b9\u200b\u4e92\u79f0\u200b\u524d\u9a71\u200b\u4e0e\u200b\u540e\u7ee7\u200b\u3002\u200b\u6ca1\u6709\u200b\u524d\u9a71\u200b\u7684\u200b\u8282\u70b9\u200b\u79f0\u4e3a\u200b\u9996\u200b\u8282\u70b9\u200b\uff0c\u200b\u6ca1\u6709\u200b\u540e\u7ee7\u200b\u7684\u200b\u8282\u70b9\u200b\u79f0\u4e3a\u200b\u5c3e\u200b\u8282\u70b9\u200b\u3002\u200b\u8282\u70b9\u200b\u9700\u8981\u200b\u989d\u5916\u200b\u7684\u200b\u7a7a\u95f4\u200b\u8bb0\u5f55\u200b\u76f8\u90bb\u200b\u8282\u70b9\u200b\u7684\u200b\u5730\u5740\u200b\u4ee5\u200b\u6784\u5efa\u200b\u903b\u8f91\u200b\u4e0a\u200b\u7684\u200b\u987a\u5e8f\u200b\u5173\u7cfb\u200b\u3002</p> <p>\u200b\u8fd9\u79cd\u200b\u65b9\u6cd5\u200b\u7684\u200b\u7f3a\u70b9\u200b\u5728\u4e8e\u200b\u5217\u8868\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u4e0d\u80fd\u200b\u76f4\u63a5\u200b\u6309\u7167\u200b\u4e0b\u6807\u200b\u8fdb\u884c\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u53ea\u80fd\u200b\u4ece\u200b\u5217\u8868\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u5f00\u59cb\u200b\uff0c\u200b\u4f9d\u5e8f\u200b\u8bbf\u95ee\u200b\u8282\u70b9\u200b\u76f4\u5230\u200b\u8bbf\u95ee\u200b\u5230\u200b\u5bf9\u5e94\u200b\u4e0b\u200b\u6807\u7684\u200b\u8282\u70b9\u200b\uff0c\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(\\mathcal O(n)\\)</p>"},{"location":"coding/dsa/vector-and-list/#_20","title":"\u8282\u70b9\u200b\u7c7b\u578b","text":"<p>\u200b\u4e3a\u200b\u5b9e\u73b0\u200b\u5217\u8868\u200b\u7684\u200b\u5404\u9879\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u8282\u70b9\u200b\u7c7b\u578b\u200b\u9700\u8981\u200b\u5b9e\u73b0\u200b\u4ee5\u4e0b\u200b\u63a5\u53e3\u200b\uff1a</p> <ul> <li>\u200b\u83b7\u53d6\u200b\u4e0e\u200b\u8bbe\u7f6e\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\u7684\u200b\u524d\u9a71\u200b</li> <li>\u200b\u83b7\u53d6\u200b\u4e0e\u200b\u8bbe\u7f6e\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\u7684\u200b\u540e\u7ee7\u200b</li> <li>\u200b\u83b7\u53d6\u200b\u4e0e\u200b\u8bbe\u7f6e\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\u7684\u200b\u53d6\u503c\u200b</li> <li>\u200b\u63d2\u5165\u200b\u524d\u9a71\u200b\u8282\u70b9\u200b</li> <li>\u200b\u63d2\u5165\u200b\u540e\u7ee7\u200b\u8282\u70b9\u200b</li> </ul> <p>\u200b\u6ce8\u610f\u200b\uff1a \u200b\u53cc\u5411\u200b\u94fe\u8868\u200b\u5728\u200b\u5b9e\u73b0\u200b\u65f6\u6709\u200b\u6f5c\u5728\u200b\u7684\u200b\u6570\u636e\u200b\u4e0d\u200b\u4e00\u81f4\u200b\u7684\u200b\u98ce\u9669\u200b\u3002\uff08\u200b\u524d\u9a71\u200b\u8282\u70b9\u200b\u7684\u200b\u540e\u7ee7\u200b\u4e0d\u200b\u7b49\u4e8e\u200b\u540e\u7ee7\u200b\u8282\u70b9\u200b\u7684\u200b\u524d\u9a71\u200b\uff09</p> <p>\u200b\u5982\u4e0b\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u7c7b\u200b\u7684\u200b\u793a\u4f8b\u200b\u63a5\u53e3\u200b\uff0c\u200b\u6ca1\u6709\u200b\u5305\u542b\u200b\u63a5\u53e3\u200b\u7684\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u3002</p> \u200b\u5217\u8868\u200b\u8282\u70b9\u200b\u7c7b\u200b <p><pre><code>/******************************************************************************************\n * Data Structures in C++\n * ISBN: 7-302-33064-6 &amp; 7-302-33065-3 &amp; 7-302-29652-2 &amp; 7-302-26883-3\n * Junhui DENG, deng@tsinghua.edu.cn\n * Computer Science &amp; Technology, Tsinghua University\n * Copyright (c) 2003-2020. All rights reserved.\n ******************************************************************************************/\n\ntypedef int Rank; //\u200b\u79e9\u200b\n#define ListNodePosi(T) ListNode&lt;T&gt;* //\u200b\u5217\u8868\u200b\u8282\u70b9\u200b\u4f4d\u7f6e\u200b\n\ntemplate &lt;typename T&gt; struct ListNode { //\u200b\u5217\u8868\u200b\u8282\u70b9\u200b\u6a21\u677f\u200b\u7c7b\u200b\uff08\u200b\u4ee5\u200b\u53cc\u5411\u200b\u94fe\u8868\u200b\u5f62\u5f0f\u200b\u5b9e\u73b0\u200b\uff09\n// \u200b\u6210\u5458\u200b\n   T data; ListNodePosi(T) pred; ListNodePosi(T) succ; //\u200b\u6570\u503c\u200b\u3001\u200b\u524d\u9a71\u200b\u3001\u200b\u540e\u7ee7\u200b\n// \u200b\u6784\u9020\u51fd\u6570\u200b\n   ListNode() {} //\u200b\u9488\u5bf9\u200bheader\u200b\u548c\u200btrailer\u200b\u7684\u200b\u6784\u9020\u200b\n   ListNode ( T e, ListNodePosi(T) p = NULL, ListNodePosi(T) s = NULL )\n      : data ( e ), pred ( p ), succ ( s ) {} //\u200b\u9ed8\u8ba4\u200b\u6784\u9020\u200b\u5668\u200b\n// \u200b\u64cd\u4f5c\u200b\u63a5\u53e3\u200b\n   ListNodePosi(T) insertAsPred ( T const&amp; e ); //\u200b\u7d27\u9760\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\u4e4b\u524d\u200b\u63d2\u5165\u200b\u65b0\u200b\u8282\u70b9\u200b\n   ListNodePosi(T) insertAsSucc ( T const&amp; e ); //\u200b\u7d27\u968f\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\u4e4b\u540e\u200b\u63d2\u5165\u200b\u65b0\u200b\u8282\u70b9\u200b\n};\n</code></pre> Reference</p>"},{"location":"coding/dsa/vector-and-list/#_21","title":"\u63d2\u5165\u200b\u4e0e\u200b\u5220\u9664","text":"<p>\u200b\u5411\u200b\u5217\u8868\u200b\u4e2d\u200b\u63d2\u5165\u200b\u6570\u636e\u200b\u9700\u8981\u200b\u5982\u4e0b\u200b\u8fc7\u7a0b\u200b\uff1a</p> <ul> <li>\u200b\u5b9a\u4f4d\u200b\u5230\u200b\u8282\u70b9\u200b</li> <li>\u200b\u5206\u914d\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u8282\u70b9\u200b</li> <li>\u200b\u66f4\u65b0\u200b\u8282\u70b9\u200b\u4e4b\u95f4\u200b\u7684\u200b\u6307\u9488\u200b\uff0c\u200b\u5c06\u200b\u65b0\u200b\u8282\u70b9\u200b\u4e0e\u200b\u5176\u4ed6\u200b\u8282\u70b9\u200b\u76f8\u8fde\u63a5\u200b</li> </ul> <p>\u200b\u5220\u9664\u200b\u8fc7\u7a0b\u200b\u662f\u200b\u63d2\u5165\u200b\u8fc7\u7a0b\u200b\u7684\u200b\u53cd\u5411\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u66f4\u65b0\u200b\u8282\u70b9\u200b\u4e4b\u95f4\u200b\u6307\u9488\u200b\uff0c\u200b\u5c06\u200b\u5220\u9664\u200b\u8282\u70b9\u200b\u6392\u9664\u200b\u5728\u5916\u200b\u5373\u53ef\u200b\u3002</p>"},{"location":"coding/dsa/vector-and-list/#_22","title":"\u67e5\u627e\u200b\u4e0e\u200b\u53bb\u200b\u91cd","text":"<p>\u200b\u65e0\u5e8f\u200b\u5217\u8868\u200b\u7684\u200b\u67e5\u627e\u200b\u4e0e\u200b\u53bb\u200b\u91cd\u200b\u64cd\u4f5c\u200b\u4e0e\u200b\u65e0\u5e8f\u200b\u5411\u91cf\u200b\u7684\u200b\u67e5\u627e\u200b\u4e0e\u200b\u53bb\u200b\u91cd\u200b\u64cd\u4f5c\u200b\u7684\u200b\u57fa\u672c\u601d\u8def\u200b\u76f8\u540c\u200b\uff0c\u200b\u6b64\u5904\u200b\u4e0d\u518d\u200b\u8d58\u8ff0\u200b\u3002</p> <p>\u200b\u6709\u200b\u5e8f\u5217\u8868\u200b\u7684\u200b\u67e5\u627e\u200b\u4e0d\u80fd\u200b\u4f7f\u7528\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u800c\u200b\u53ea\u80fd\u200b\u987a\u5e8f\u200b\u67e5\u627e\u200b\u3002</p> <p>\u200b\u6709\u200b\u5e8f\u5217\u8868\u200b\u7684\u200b\u53bb\u200b\u91cd\u200b\uff1a\u200b\u53cd\u590d\u200b\u8003\u5bdf\u200b\u76f8\u90bb\u200b\u7684\u200b\u8282\u70b9\u200b\uff0c\u200b\u82e5\u200b\u8282\u70b9\u200b\u76f8\u540c\u200b\uff0c\u200b\u5219\u200b\u5220\u9664\u200b\u540e\u8fb9\u200b\u7684\u200b\u8282\u70b9\u200b\uff0c\u200b\u7ee7\u7eed\u200b\u8003\u5bdf\u200b\uff0c\u200b\u5426\u5219\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\u5411\u200b\u540e\u200b\u79fb\u52a8\u200b\uff0c\u200b\u91cd\u590d\u200b\u8003\u5bdf\u200b\u8fc7\u7a0b\u200b\u3002\u200b\u76f4\u5230\u200b\u5217\u8868\u200b\u5230\u8fbe\u200b\u7ed3\u5c3e\u200b\uff0c\u200b\u7b97\u6cd5\u200b\u7ed3\u675f\u200b\u3002</p>"},{"location":"coding/leetcode/","title":"Leetcode \u200b\u9898\u76ee","text":"<p>Leetcode\u200b\u9898\u89e3\u200b\u6570\u91cf\u200b\uff1a125\u3002\u200b\u6309\u200b\u6807\u7b7e\u200b\u5206\u7c7b\u200b\u7684\u200b\u9898\u76ee\u200b\u5217\u8868\u200b\u53ef\u4ee5\u200b\u53c2\u89c1\u200b\u8fd9\u91cc\u200b\u3002</p> <p>\u200b\u7b80\u5355\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b50\u200b\u9053\u200b\u9898\u76ee\u200b\u3002</p> \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 1. \u200b\u4e24\u6570\u200b\u4e4b\u200b\u548c\u200b 7. \u200b\u6574\u6570\u200b\u53cd\u8f6c\u200b 9. \u200b\u56de\u6587\u200b\u6570\u200b 13. \u200b\u7f57\u9a6c\u6570\u5b57\u200b\u8f6c\u200b\u6574\u6570\u200b 14. \u200b\u6700\u957f\u200b\u516c\u5171\u200b\u524d\u7f00\u200b 20. \u200b\u6709\u6548\u200b\u7684\u200b\u62ec\u53f7\u200b 21. \u200b\u5408\u5e76\u200b\u4e24\u4e2a\u200b\u6709\u5e8f\u200b\u94fe\u8868\u200b 26. \u200b\u5220\u9664\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u91cd\u590d\u200b\u9879\u200b 27. \u200b\u79fb\u9664\u200b\u5143\u7d20\u200b 28. \u200b\u5b9e\u73b0\u200b strStr() 35. \u200b\u641c\u7d22\u200b\u63d2\u5165\u200b\u4f4d\u7f6e\u200b 38. \u200b\u5916\u89c2\u200b\u6570\u5217\u200b 53. \u200b\u6700\u5927\u200b\u5b50\u5e8f\u200b\u548c\u200b 66. \u200b\u52a0\u4e00\u200b 69. x \u200b\u7684\u200b\u5e73\u65b9\u6839\u200b 70. \u200b\u722c\u697c\u68af\u200b 88. \u200b\u5408\u5e76\u200b\u4e24\u4e2a\u200b\u6709\u5e8f\u200b\u6570\u7ec4\u200b 101. \u200b\u5bf9\u79f0\u200b\u4e8c\u53c9\u6811\u200b 118. \u200b\u6768\u8f89\u4e09\u89d2\u200b 119. \u200b\u6768\u8f89\u4e09\u89d2\u200b II 121. \u200b\u4e70\u5356\u200b\u80a1\u7968\u200b\u7684\u200b\u6700\u4f73\u65f6\u673a\u200b 122. \u200b\u4e70\u5356\u200b\u80a1\u7968\u200b\u7684\u200b\u6700\u4f73\u65f6\u673a\u200b II 125. \u200b\u9a8c\u8bc1\u200b\u56de\u6587\u200b\u4e32\u200b 136. \u200b\u53ea\u200b\u51fa\u73b0\u200b\u4e00\u6b21\u200b\u7684\u200b\u6570\u5b57\u200b 155. \u200b\u6700\u5c0f\u200b\u6808\u200b 189. \u200b\u65cb\u8f6c\u200b\u6570\u7ec4\u200b 198. \u200b\u6253\u5bb6\u52ab\u820d\u200b 204. \u200b\u8ba1\u6570\u200b\u8d28\u6570\u200b 217. \u200b\u5b58\u5728\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b 219. \u200b\u5b58\u5728\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b II 234. \u200b\u56de\u6587\u200b\u94fe\u8868\u200b 237. \u200b\u5220\u9664\u200b\u94fe\u8868\u200b\u4e2d\u200b\u7684\u200b\u8282\u70b9\u200b 242. \u200b\u6709\u6548\u200b\u7684\u200b\u5b57\u6bcd\u200b\u5f02\u4f4d\u200b\u8bcd\u200b 344. \u200b\u53cd\u8f6c\u200b\u5b57\u7b26\u4e32\u200b 350. \u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\u7684\u200b\u4ea4\u96c6\u200b II 387. \u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u552f\u4e00\u200b\u5b57\u7b26\u200b 509. \u200b\u6590\u6ce2\u200b\u90a3\u200b\u5951\u6570\u200b 541. \u200b\u53cd\u8f6c\u200b\u5b57\u7b26\u4e32\u200b II 598. \u200b\u533a\u95f4\u200b\u52a0\u6cd5\u200b II 680. \u200b\u9a8c\u8bc1\u200b\u56de\u6587\u200b\u4e32\u200b II 917. \u200b\u4ec5\u4ec5\u200b\u53cd\u8f6c\u200b\u5b57\u6bcd\u200b 922. \u200b\u6309\u200b\u5947\u5076\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b II 1603. \u200b\u8bbe\u8ba1\u200b\u505c\u8f66\u200b\u7cfb\u7edf\u200b 2239. \u200b\u627e\u5230\u200b\u6700\u200b\u63a5\u8fd1\u200b 0 \u200b\u7684\u200b\u6570\u5b57\u200b 2264. \u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u6700\u5927\u200b\u7684\u200b 3 \u200b\u4f4d\u200b\u76f8\u540c\u200b\u6570\u5b57\u200b 3019. \u200b\u6309\u952e\u200b\u53d8\u66f4\u200b\u7684\u200b\u6b21\u6570\u200b 3065. \u200b\u8d85\u8fc7\u200b\u9608\u503c\u200b\u7684\u200b\u6700\u5c11\u200b\u64cd\u4f5c\u6570\u200b I 3095. \u200b\u6216\u503c\u200b\u81f3\u5c11\u200b K \u200b\u7684\u200b\u6700\u200b\u77ed\u5b50\u200b\u6570\u7ec4\u200b I 3270. \u200b\u6c42\u200b\u51fa\u200b\u6570\u5b57\u200b\u7b54\u6848\u200b 3280. \u200b\u5c06\u200b\u65e5\u671f\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u4e8c\u8fdb\u5236\u200b\u8868\u793a\u200b <p>\u200b\u4e2d\u7b49\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b59\u200b\u9053\u200b\u9898\u76ee\u200b\u3002</p> \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 2. \u200b\u4e24\u200b\u6570\u200b\u76f8\u52a0\u200b 3. \u200b\u65e0\u200b\u91cd\u590d\u200b\u5b57\u7b26\u200b\u7684\u200b\u6700\u957f\u200b\u5b50\u4e32\u200b 8. \u200b\u5b57\u7b26\u4e32\u200b\u8f6c\u6362\u200b\u6574\u6570\u200b (atoi) 11. \u200b\u76db\u200b\u6700\u591a\u6c34\u200b\u7684\u200b\u5bb9\u5668\u200b 17. \u200b\u7535\u8bdd\u53f7\u7801\u200b\u7684\u200b\u5b57\u6bcd\u7ec4\u5408\u200b 19. \u200b\u5220\u9664\u200b\u94fe\u8868\u200b\u7684\u200b\u5012\u6570\u7b2c\u200bN\u200b\u4e2a\u200b\u8282\u70b9\u200b 22. \u200b\u62ec\u53f7\u200b\u751f\u6210\u200b 24. \u200b\u4e24\u200b\u4e24\u200b\u4ea4\u6362\u200b\u94fe\u8868\u200b\u4e2d\u200b\u7684\u200b\u8282\u70b9\u200b 33. \u200b\u641c\u7d22\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b 36. \u200b\u6709\u6548\u200b\u7684\u200b\u6570\u72ec\u200b 40. \u200b\u7ec4\u5408\u200b\u603b\u548c\u200b II 43. \u200b\u5b57\u7b26\u4e32\u200b\u76f8\u4e58\u200b 45. \u200b\u8df3\u8dc3\u200b\u6e38\u620f\u200b II 46. \u200b\u5168\u200b\u6392\u5217\u200b 47. \u200b\u5168\u200b\u6392\u5217\u200b II 48. \u200b\u65cb\u8f6c\u200b\u56fe\u50cf\u200b 50. Pow(x, n) 55. \u200b\u8df3\u8dc3\u200b\u6e38\u620f\u200b 56. \u200b\u5408\u5e76\u200b\u533a\u95f4\u200b 59. \u200b\u87ba\u65cb\u200b\u77e9\u9635\u200b II 61. \u200b\u65cb\u8f6c\u200b\u94fe\u8868\u200b 62. \u200b\u4e0d\u540c\u200b\u8def\u5f84\u200b 64. \u200b\u6700\u5c0f\u200b\u8def\u5f84\u200b\u548c\u200b 73. \u200b\u77e9\u9635\u200b\u7f6e\u200b\u96f6\u200b 74. \u200b\u641c\u7d22\u200b\u4e8c\u7ef4\u200b\u77e9\u9635\u200b 75. \u200b\u989c\u8272\u200b\u5206\u7c7b\u200b 78. \u200b\u5b50\u96c6\u200b 79. \u200b\u5355\u8bcd\u200b\u641c\u7d22\u200b 81. \u200b\u641c\u7d22\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b II 90. \u200b\u5b50\u96c6\u200b II 92. \u200b\u53cd\u8f6c\u200b\u94fe\u8868\u200b II 98. \u200b\u9a8c\u8bc1\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b 102. \u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u5c42\u5e8f\u200b\u904d\u5386\u200b 120. \u200b\u4e09\u89d2\u5f62\u200b\u6700\u5c0f\u200b\u8def\u5f84\u200b\u548c\u200b 150. \u200b\u9006\u200b\u6ce2\u5170\u200b\u8868\u8fbe\u5f0f\u200b\u6c42\u503c\u200b 206. \u200b\u53cd\u8f6c\u200b\u94fe\u8868\u200b 341. \u200b\u6241\u5e73\u5316\u200b\u5d4c\u5957\u200b\u5217\u8868\u200b\u8fed\u4ee3\u200b\u5668\u200b 368. \u200b\u6700\u5927\u200b\u6574\u9664\u200b\u5b50\u96c6\u200b 377. \u200b\u7ec4\u5408\u200b\u603b\u548c\u200b \u2163 384. \u200b\u6253\u4e71\u200b\u6570\u7ec4\u200b 433. \u200b\u6700\u5c0f\u200b\u57fa\u56e0\u200b\u53d8\u5316\u200b 729. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b I 731. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b II 779. \u200b\u7b2c\u200bK\u200b\u4e2a\u200b\u8bed\u6cd5\u200b\u7b26\u53f7\u200b 781. \u200b\u68ee\u6797\u200b\u4e2d\u200b\u7684\u200b\u5154\u5b50\u200b 1006. \u200b\u7b28\u200b\u9636\u4e58\u200b 1011. \u200b\u5728\u200b D \u200b\u5929\u200b\u5185\u200b\u9001\u8fbe\u200b\u5305\u88f9\u200b\u7684\u200b\u80fd\u529b\u200b 1283. \u200b\u4f7f\u200b\u7ed3\u679c\u200b\u4e0d\u200b\u8d85\u8fc7\u200b\u9608\u503c\u200b\u7684\u200b\u6700\u5c0f\u200b\u9664\u6570\u200b 1300. \u200b\u8f6c\u53d8\u200b\u6570\u7ec4\u200b\u540e\u200b\u6700\u200b\u63a5\u8fd1\u200b\u76ee\u6807\u503c\u200b\u7684\u200b\u6570\u7ec4\u200b\u548c\u200b 1561. \u200b\u4f60\u200b\u53ef\u4ee5\u200b\u83b7\u5f97\u200b\u7684\u200b\u6700\u5927\u200b\u786c\u5e01\u200b\u6570\u76ee\u200b 2241. \u200b\u8bbe\u8ba1\u200b\u4e00\u4e2a\u200b ATM \u200b\u673a\u5668\u200b 2266. \u200b\u7edf\u8ba1\u200b\u6253\u5b57\u200b\u65b9\u6848\u200b\u6570\u200b 2270. \u200b\u5206\u5272\u200b\u6570\u7ec4\u200b\u7684\u200b\u65b9\u6848\u200b\u6570\u200b 2274. \u200b\u4e0d\u200b\u542b\u200b\u7279\u6b8a\u200b\u697c\u5c42\u200b\u7684\u200b\u6700\u5927\u200b\u8fde\u7eed\u200b\u697c\u5c42\u200b\u6570\u200b 2275. \u200b\u6309\u4f4d\u200b\u4e0e\u200b\u7ed3\u679c\u200b\u5927\u4e8e\u200b\u96f6\u200b\u7684\u200b\u6700\u957f\u200b\u7ec4\u200b 2944. \u200b\u8d2d\u4e70\u200b\u6c34\u679c\u200b\u9700\u8981\u200b\u7684\u200b\u6700\u5c11\u200b\u91d1\u5e01\u200b\u6570\u200b 3066. \u200b\u8d85\u8fc7\u200b\u9608\u503c\u200b\u7684\u200b\u6700\u5c11\u200b\u64cd\u4f5c\u6570\u200b II 3097. \u200b\u6216\u503c\u200b\u81f3\u5c11\u200b K \u200b\u7684\u200b\u6700\u200b\u77ed\u5b50\u200b\u6570\u7ec4\u200b II 3297. \u200b\u7edf\u8ba1\u200b\u91cd\u65b0\u6392\u5217\u200b\u540e\u200b\u5305\u542b\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u6570\u76ee\u200b I <p>\u200b\u56f0\u96be\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b16\u200b\u9053\u200b\u9898\u76ee\u200b\u3002</p> \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 23. \u200b\u5408\u5e76\u200bK\u200b\u4e2a\u200b\u5347\u5e8f\u200b\u94fe\u8868\u200b 25. K \u200b\u4e2a\u200b\u4e00\u7ec4\u200b\u7ffb\u8f6c\u200b\u94fe\u8868\u200b 37. \u200b\u89e3\u6570\u200b\u72ec\u200b 42. \u200b\u63a5\u200b\u96e8\u6c34\u200b 87. \u200b\u6270\u4e71\u200b\u5b57\u7b26\u4e32\u200b 115. \u200b\u4e0d\u540c\u200b\u7684\u200b\u5b50\u200b\u5e8f\u5217\u200b 315. \u200b\u8ba1\u7b97\u200b\u53f3\u4fa7\u200b\u5c0f\u4e8e\u200b\u5f53\u524d\u200b\u5143\u7d20\u200b\u7684\u200b\u4e2a\u6570\u200b 403. \u200b\u9752\u86d9\u200b\u8fc7\u6cb3\u200b 488. \u200b\u7956\u739b\u200b\u6e38\u620f\u200b 732. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b III 1835. \u200b\u6240\u6709\u200b\u6570\u5bf9\u200b\u6309\u4f4d\u200b\u4e0e\u200b\u7ed3\u679c\u200b\u7684\u200b\u5f02\u6216\u200b\u548c\u200b 2218. \u200b\u4ece\u6808\u200b\u4e2d\u200b\u53d6\u51fa\u200b K \u200b\u4e2a\u200b\u786c\u5e01\u200b\u7684\u200b\u6700\u5927\u200b\u9762\u503c\u200b\u548c\u200b 2412. \u200b\u5b8c\u6210\u200b\u6240\u6709\u200b\u4ea4\u6613\u200b\u7684\u200b\u521d\u59cb\u200b\u6700\u5c11\u200b\u94b1\u6570\u200b 2920. \u200b\u6536\u96c6\u200b\u6240\u6709\u200b\u91d1\u5e01\u200b\u53ef\u200b\u83b7\u5f97\u200b\u7684\u200b\u6700\u5927\u200b\u79ef\u5206\u200b 3287. \u200b\u6c42\u200b\u51fa\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u6700\u5927\u200b\u5e8f\u5217\u200b\u503c\u200b 3298. \u200b\u7edf\u8ba1\u200b\u91cd\u65b0\u6392\u5217\u200b\u540e\u200b\u5305\u542b\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u6570\u76ee\u200b II"},{"location":"coding/leetcode/1/","title":"1. \u200b\u4e24\u6570\u200b\u4e4b\u200b\u548c","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u7ec4","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/1/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b<code>nums</code>\u200b\u548c\u200b\u4e00\u4e2a\u200b\u76ee\u6807\u503c\u200b<code>target</code>\uff0c\u200b\u8bf7\u200b\u4f60\u200b\u5728\u200b\u8be5\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u627e\u51fa\u200b\u548c\u200b\u4e3a\u200b\u76ee\u6807\u503c\u200b\u7684\u200b\u90a3\u200b\u00a0\u200b\u4e24\u4e2a\u200b\u00a0\u200b\u6574\u6570\u200b\uff0c\u200b\u5e76\u200b\u8fd4\u56de\u200b\u4ed6\u4eec\u200b\u7684\u200b\u6570\u7ec4\u200b\u4e0b\u6807\u200b\u3002</p> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5047\u8bbe\u200b\u6bcf\u79cd\u200b\u8f93\u5165\u200b\u53ea\u4f1a\u200b\u5bf9\u5e94\u200b\u4e00\u4e2a\u200b\u7b54\u6848\u200b\u3002\u200b\u4f46\u662f\u200b\uff0c\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u540c\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u4e0d\u80fd\u200b\u4f7f\u7528\u200b\u4e24\u904d\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b:</p> <pre><code>\u200b\u7ed9\u5b9a\u200b nums = [2, 7, 11, 15], target = 9\n\n\u200b\u56e0\u4e3a\u200b nums[0] + nums[1] = 2 + 7 = 9\n\u200b\u6240\u4ee5\u200b\u8fd4\u56de\u200b [0, 1]\n</code></pre> <p>Reference</p>","tags":["\u6570\u7ec4","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/1/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a </p> <p>\u200b\u5c06\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u5b58\u50a8\u200b\u5728\u200b\u54c8\u5e0c\u200b\u8868\u4e2d\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u5728\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u67e5\u627e\u200b\u76ee\u6807\u503c\u200b\u4e0e\u200b\u5f53\u524d\u200b\u503c\u4e4b\u5dee\u200b\u662f\u5426\u200b\u5728\u200b\u54c8\u5e0c\u200b\u8868\u4e2d\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\n#define MAX(a, b) (a &gt; b ? a : b)\n#define MIN(a, b) (a &lt; b ? a : b)\nstruct cell\n{\n    int value;\n    int flag;\n};\nint* twoSum(int* nums, int numsSize, int target, int* returnSize){\n    *returnSize = 2;\n    int i = 0, mapSize = numsSize * 2, cur, *ret = malloc(sizeof(int) * 2), targetval, j = 0;\n    struct cell *hashMap = (struct cell *)memset(malloc(sizeof(struct cell) * mapSize), 0, sizeof(struct cell) * mapSize);\n    for (i = 0; i &lt; numsSize; i++)\n    {\n        cur = (nums[i] &gt; 0 ? nums[i] : -nums[i]) % mapSize;\n        while(hashMap[cur].flag != 0 &amp;&amp; hashMap[cur].value != nums[i])\n        {\n            cur++;\n            cur = cur == mapSize ? 0 : cur;\n        }\n        if (hashMap[cur].flag == 0)\n            hashMap[cur].value = nums[i];\n        hashMap[cur].flag++;\n    }\n    for (i = 0; i &lt; numsSize; i++)\n    {\n        targetval = target - nums[i];\n        cur = (targetval &gt; 0 ? targetval : -targetval) % mapSize;\n        while(hashMap[cur].flag != 0 &amp;&amp; hashMap[cur].value != targetval)\n        {\n            cur++;\n            cur = cur == mapSize ? 0 : cur;\n        }\n        if (hashMap[cur].value == targetval)\n        {\n            for (j = 0; j &lt; numsSize; j++)\n                if (nums[j] == targetval &amp;&amp; j != i)\n                    break;\n            if (j != numsSize)\n                break;\n        }\n    }\n    ret[0] = MIN(i, j);\n    ret[1] = MAX(i, j);\n    if (nums[i] + nums[j] == target)\n        return ret;\n    *returnSize = 0;\n    return NULL;\n}\n</code></pre>","tags":["\u6570\u7ec4","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/1006/","title":"1006. \u200b\u7b28\u200b\u9636\u4e58","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/1006/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u901a\u5e38\u200b\uff0c\u200b\u6b63\u6574\u6570\u200b <code>n</code> \u200b\u7684\u200b\u9636\u4e58\u200b\u662f\u200b\u6240\u6709\u200b\u5c0f\u4e8e\u200b\u6216\u200b\u7b49\u4e8e\u200b <code>n</code> \u200b\u7684\u200b\u6b63\u6574\u6570\u200b\u7684\u200b\u4e58\u79ef\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c<code>factorial(10) = 10 * 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1</code>\u3002</p> <p>\u200b\u76f8\u53cd\u200b\uff0c\u200b\u6211\u4eec\u200b\u8bbe\u8ba1\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u7b28\u200b\u9636\u4e58\u200b <code>clumsy</code>\uff1a\u200b\u5728\u200b\u6574\u6570\u200b\u7684\u200b\u9012\u51cf\u200b\u5e8f\u5217\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u4ee5\u200b\u4e00\u4e2a\u200b\u56fa\u5b9a\u200b\u987a\u5e8f\u200b\u7684\u200b\u64cd\u4f5c\u7b26\u200b\u5e8f\u5217\u200b\u6765\u200b\u4f9d\u6b21\u200b\u66ff\u6362\u200b\u539f\u6709\u200b\u7684\u200b\u4e58\u6cd5\u200b\u64cd\u4f5c\u7b26\u200b\uff1a\u200b\u4e58\u6cd5\u200b(*)\uff0c\u200b\u9664\u6cd5\u200b(/)\uff0c\u200b\u52a0\u6cd5\u200b(+)\u200b\u548c\u200b\u51cf\u6cd5\u200b(-)\u3002</p> <p>\u200b\u4f8b\u5982\u200b\uff0c<code>clumsy(10) = 10 * 9 / 8 + 7 - 6 * 5 / 4 + 3 - 2 * 1</code>\u3002\u200b\u7136\u800c\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u8fd0\u7b97\u200b\u4ecd\u7136\u200b\u4f7f\u7528\u200b\u901a\u5e38\u200b\u7684\u200b\u7b97\u672f\u200b\u8fd0\u7b97\u200b\u987a\u5e8f\u200b\uff1a\u200b\u6211\u4eec\u200b\u5728\u200b\u4efb\u4f55\u200b\u52a0\u200b\u3001\u200b\u51cf\u200b\u6b65\u9aa4\u200b\u4e4b\u524d\u200b\u6267\u884c\u200b\u6240\u6709\u200b\u7684\u200b\u4e58\u6cd5\u200b\u548c\u200b\u9664\u6cd5\u200b\u6b65\u9aa4\u200b\uff0c\u200b\u5e76\u4e14\u200b\u6309\u200b\u4ece\u5de6\u5230\u53f3\u200b\u5904\u7406\u200b\u4e58\u6cd5\u200b\u548c\u200b\u9664\u6cd5\u200b\u6b65\u9aa4\u200b\u3002</p> <p>\u200b\u53e6\u5916\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u7684\u200b\u9664\u6cd5\u200b\u662f\u200b\u5730\u677f\u200b\u9664\u6cd5\u200b\uff08floor division\uff09\uff0c\u200b\u6240\u4ee5\u200b\u00a0<code>10 * 9 / 8</code>\u00a0\u200b\u7b49\u4e8e\u200b\u00a0<code>11</code>\u3002\u200b\u8fd9\u200b\u4fdd\u8bc1\u200b\u7ed3\u679c\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u3002</p> <p>\u200b\u5b9e\u73b0\u200b\u4e0a\u9762\u200b\u5b9a\u4e49\u200b\u7684\u200b\u7b28\u200b\u51fd\u6570\u200b\uff1a\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b <code>N</code>\uff0c\u200b\u5b83\u200b\u8fd4\u56de\u200b <code>N</code> \u200b\u7684\u200b\u7b28\u200b\u9636\u4e58\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1a4\n\u200b\u8f93\u51fa\u200b\uff1a7\n\u200b\u89e3\u91ca\u200b\uff1a7 = 4 * 3 / 2 + 1\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1a10\n\u200b\u8f93\u51fa\u200b\uff1a12\n\u200b\u89e3\u91ca\u200b\uff1a12 = 10 * 9 / 8 + 7 - 6 * 5 / 4 + 3 - 2 * 1\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= N &lt;= 10000</code></li> <li><code>-2^31 &lt;= answer &lt;= 2^31 - 1</code>  \uff08\u200b\u7b54\u6848\u200b\u4fdd\u8bc1\u200b\u7b26\u5408\u200b <code>32</code> \u200b\u4f4d\u200b\u6574\u6570\u200b\u3002\uff09</li> </ul> <p>Reference</p>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/1006/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u5bf9\u200b\u8ba1\u7b97\u200b\u8fc7\u7a0b\u200b\u8fdb\u884c\u200b\u6a21\u62df\u200b\u5373\u53ef\u200b\uff1a</p> <pre><code>int clumsy(int N){\n    int ret = 0, i = N;\n    bool flag = true, minus = false;\n    for (i = N; i &gt; 0;)\n    {\n        if (flag)\n        {\n            if (i &gt;= 3)\n                ret += (minus ? -1 : 1) * i * (i - 1) / (i - 2);\n            else if (i == 2)\n                ret += (minus ? -1 : 1) * i * (i - 1);\n            else if (i == 1)\n                ret += (minus ? -1 : 1) * i;\n            i -= 3;\n        }\n        else\n            ret += i--;\n        flag = !flag;\n        minus = true;\n    }\n    return ret;\n}\n</code></pre>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/101/","title":"101. \u200b\u5bf9\u79f0\u200b\u4e8c\u53c9\u6811","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6811","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"]},{"location":"coding/leetcode/101/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u4e8c\u53c9\u6811\u200b\uff0c\u200b\u68c0\u67e5\u200b\u5b83\u200b\u662f\u5426\u662f\u200b\u955c\u50cf\u200b\u5bf9\u79f0\u200b\u7684\u200b\u3002</p> <p>\u200b\u4f8b\u5982\u200b\uff0c\u200b\u4e8c\u53c9\u6811\u200b<code>[1,2,2,3,4,4,3]</code>\u200b\u662f\u200b\u5bf9\u79f0\u200b\u7684\u200b\u3002</p> <pre><code>    1\n   / \\\n  2   2\n / \\ / \\\n3  4 4  3\n</code></pre> <p>\u200b\u4f46\u662f\u200b\u4e0b\u9762\u200b\u8fd9\u4e2a\u200b<code>[1,2,2,null,3,null,3]</code>\u200b\u5219\u200b\u4e0d\u662f\u200b\u955c\u50cf\u200b\u5bf9\u79f0\u200b\u7684\u200b:</p> <pre><code>    1\n   / \\\n  2   2\n   \\   \\\n   3    3\n</code></pre> <p>\u200b\u8fdb\u9636\u200b\uff1a</p> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u8fd0\u7528\u200b\u9012\u5f52\u200b\u548c\u200b\u8fed\u4ee3\u200b\u4e24\u79cd\u200b\u65b9\u6cd5\u200b\u89e3\u51b3\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\u5417\u200b\uff1f</p> <p>Reference</p>","tags":["\u6811","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"]},{"location":"coding/leetcode/101/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u9012\u5f52\u200b\u5224\u65ad\u200b\u4e24\u4e2a\u200b\u6839\u200b\u8282\u70b9\u200b\u662f\u5426\u200b\u6210\u200b\u955c\u50cf\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     struct TreeNode *left;\n *     struct TreeNode *right;\n * };\n */\nbool isMirrored(struct TreeNode *root1, struct TreeNode *root2)\n{\n    if (!root1 || !root2)\n        return root1 == root2;\n    if (root1-&gt;val != root2-&gt;val)\n        return false;\n    return isMirrored(root1-&gt;left, root2-&gt;right) &amp;&amp; isMirrored(root2-&gt;left, root1-&gt;right);\n}\n\nbool isSymmetric(struct TreeNode* root){\n    if (root == NULL)\n        return true;\n    return isMirrored(root-&gt;left, root-&gt;right);\n}\n</code></pre>","tags":["\u6811","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"]},{"location":"coding/leetcode/1011/","title":"1011. \u200b\u5728\u200b D \u200b\u5929\u200b\u5185\u200b\u9001\u8fbe\u200b\u5305\u88f9\u200b\u7684\u200b\u80fd\u529b","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/1011/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u4f20\u9001\u5e26\u200b\u4e0a\u200b\u7684\u200b\u5305\u88f9\u200b\u5fc5\u987b\u200b\u5728\u200b <code>D</code> \u200b\u5929\u5185\u200b\u4ece\u200b\u4e00\u4e2a\u200b\u6e2f\u53e3\u200b\u8fd0\u9001\u200b\u5230\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u6e2f\u53e3\u200b\u3002</p> <p>\u200b\u4f20\u9001\u5e26\u200b\u4e0a\u200b\u7684\u200b\u7b2c\u200b <code>i</code>\u00a0\u200b\u4e2a\u200b\u5305\u88f9\u200b\u7684\u200b\u91cd\u91cf\u200b\u4e3a\u200b\u00a0<code>weights[i]</code>\u3002\u200b\u6bcf\u200b\u4e00\u5929\u200b\uff0c\u200b\u6211\u4eec\u200b\u90fd\u200b\u4f1a\u200b\u6309\u200b\u7ed9\u51fa\u200b\u91cd\u91cf\u200b\u7684\u200b\u987a\u5e8f\u200b\u5f80\u200b\u4f20\u9001\u5e26\u200b\u4e0a\u200b\u88c5\u8f7d\u200b\u5305\u88f9\u200b\u3002\u200b\u6211\u4eec\u200b\u88c5\u8f7d\u200b\u7684\u200b\u91cd\u91cf\u200b\u4e0d\u4f1a\u200b\u8d85\u8fc7\u200b\u8239\u200b\u7684\u200b\u6700\u5927\u200b\u8fd0\u8f7d\u200b\u91cd\u91cf\u200b\u3002</p> <p>\u200b\u8fd4\u56de\u200b\u80fd\u200b\u5728\u200b <code>D</code> \u200b\u5929\u5185\u200b\u5c06\u200b\u4f20\u9001\u5e26\u200b\u4e0a\u200b\u7684\u200b\u6240\u6709\u200b\u5305\u88f9\u200b\u9001\u8fbe\u200b\u7684\u200b\u8239\u200b\u7684\u200b\u6700\u4f4e\u200b\u8fd0\u8f7d\u200b\u80fd\u529b\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aweights = [1,2,3,4,5,6,7,8,9,10], D = 5\n\u200b\u8f93\u51fa\u200b\uff1a15\n\u200b\u89e3\u91ca\u200b\uff1a\n\u200b\u8239\u8236\u200b\u6700\u4f4e\u200b\u8f7d\u91cd\u200b 15 \u200b\u5c31\u200b\u80fd\u591f\u200b\u5728\u200b 5 \u200b\u5929\u200b\u5185\u200b\u9001\u8fbe\u200b\u6240\u6709\u200b\u5305\u88f9\u200b\uff0c\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a\n\u200b\u7b2c\u200b 1 \u200b\u5929\u200b\uff1a1, 2, 3, 4, 5\n\u200b\u7b2c\u200b 2 \u200b\u5929\u200b\uff1a6, 7\n\u200b\u7b2c\u200b 3 \u200b\u5929\u200b\uff1a8\n\u200b\u7b2c\u200b 4 \u200b\u5929\u200b\uff1a9\n\u200b\u7b2c\u200b 5 \u200b\u5929\u200b\uff1a10\n\n\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u8d27\u7269\u200b\u5fc5\u987b\u200b\u6309\u7167\u200b\u7ed9\u5b9a\u200b\u7684\u200b\u987a\u5e8f\u200b\u88c5\u8fd0\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4f7f\u7528\u200b\u8f7d\u91cd\u200b\u80fd\u529b\u200b\u4e3a\u200b 14 \u200b\u7684\u200b\u8239\u8236\u200b\u5e76\u200b\u5c06\u200b\u5305\u88c5\u200b\u5206\u6210\u200b (2, 3, 4, 5), (1, 6, 7), (8), (9), (10) \u200b\u662f\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u7684\u200b\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aweights = [3,2,2,4,1,4], D = 3\n\u200b\u8f93\u51fa\u200b\uff1a6\n\u200b\u89e3\u91ca\u200b\uff1a\n\u200b\u8239\u8236\u200b\u6700\u4f4e\u200b\u8f7d\u91cd\u200b 6 \u200b\u5c31\u200b\u80fd\u591f\u200b\u5728\u200b 3 \u200b\u5929\u200b\u5185\u200b\u9001\u8fbe\u200b\u6240\u6709\u200b\u5305\u88f9\u200b\uff0c\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a\n\u200b\u7b2c\u200b 1 \u200b\u5929\u200b\uff1a3, 2\n\u200b\u7b2c\u200b 2 \u200b\u5929\u200b\uff1a2, 4\n\u200b\u7b2c\u200b 3 \u200b\u5929\u200b\uff1a1, 4\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aweights = [1,2,3,1,1], D = 4\n\u200b\u8f93\u51fa\u200b\uff1a3\n\u200b\u89e3\u91ca\u200b\uff1a\n\u200b\u7b2c\u200b 1 \u200b\u5929\u200b\uff1a1\n\u200b\u7b2c\u200b 2 \u200b\u5929\u200b\uff1a2\n\u200b\u7b2c\u200b 3 \u200b\u5929\u200b\uff1a3\n\u200b\u7b2c\u200b 4 \u200b\u5929\u200b\uff1a1, 1\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= D &lt;= weights.length &lt;= 50000</code></li> <li><code>1 &lt;= weights[i] &lt;= 500</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/1011/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u8bbe\u200b\u5217\u8868\u200b\u4e3a\u200b\\(A=\\{a_i\\}_n\\)\uff0c\u200b\u5219\u200b\u6700\u7ec8\u200b\u7ed3\u679c\u200b\u7684\u200b\u53d6\u503c\u200b\u8303\u56f4\u200b\u4e3a\u200b\\([\\max_{i} \\{a_i\\}, \\sum_{i} a_i]\\)\u3002\u200b\u4f7f\u7528\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u5728\u200b\u533a\u95f4\u200b\u4e2d\u200b\u67e5\u627e\u200b\u80fd\u591f\u200b\u6ee1\u8db3\u200b\u5728\u200b\\(D\\)\u200b\u5929\u200b\u5185\u200b\u8fd0\u8f93\u200b\u5168\u90e8\u200b\u5305\u88f9\u200b\u7684\u200b\u6700\u5c0f\u200b\u8f7d\u91cd\u200b\u3002</p> <p>\u200b\u6709\u5173\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u7684\u200b\u8be6\u7ec6\u200b\u8ba8\u8bba\u200b\uff0c\u200b\u8bf7\u200b\u53c2\u89c1\u200b35. \u200b\u641c\u7d22\u200b\u63d2\u5165\u200b\u4f4d\u7f6e\u200b</p> <pre><code>#define MAX(x, y) ((x) &gt; (y) ? (x) : (y))\n\nbool verify(int *weights, int weightsSize, int D, int limit)\n{\n    int i = 0, ub = limit;\n    for (i = 0; i &lt; weightsSize; i++)\n    {\n        if (weights[i] &gt; ub)\n        {\n            D--;\n            ub = limit;\n        }\n        ub -= weights[i];\n        if (D &lt;= 0)\n            return false;\n    }\n    return true;\n}\n\nint bSearch(int *weights, int weightsSize, int D, int lo, int hi)\n{\n    int mid;\n    while (lo &lt; hi)\n    {\n        mid = (lo + hi) &gt;&gt; 1;\n        if (verify(weights, weightsSize, D, mid))\n            hi = mid;\n        else\n            lo = mid + 1;\n    }\n    return lo;\n}\n\nint shipWithinDays(int* weights, int weightsSize, int D) {\n    int i = 0, sum = 0, max = 0;\n    printf(\"%d\", verify(weights, weightsSize, D, 6));\n    for (i = 0; i &lt; weightsSize; i++)\n    {\n        sum += weights[i];\n        max = MAX(max, weights[i]);\n    }\n    return bSearch(weights, weightsSize, D, max, sum);\n}\n</code></pre>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/102/","title":"102. \u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u5c42\u5e8f\u200b\u904d\u5386","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6811","\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"]},{"location":"coding/leetcode/102/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u4e8c\u53c9\u6811\u200b\uff0c\u200b\u8bf7\u200b\u4f60\u200b\u8fd4\u56de\u200b\u5176\u200b\u6309\u200b \u200b\u5c42\u5e8f\u200b\u904d\u5386\u200b \u200b\u5f97\u5230\u200b\u7684\u200b\u8282\u70b9\u200b\u503c\u200b\u3002 \uff08\u200b\u5373\u200b\u9010\u5c42\u200b\u5730\u200b\uff0c\u200b\u4ece\u5de6\u5230\u53f3\u200b\u8bbf\u95ee\u200b\u6240\u6709\u200b\u8282\u70b9\u200b\uff09\u3002</p> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <p>\u200b\u4e8c\u53c9\u6811\u200b\uff1a<code>[3,9,20,null,null,15,7]</code>,</p> <pre><code>    3\n   / \\\n  9  20\n    /  \\\n   15   7\n</code></pre> <p>\u200b\u8fd4\u56de\u200b\u5176\u200b\u5c42\u6b21\u200b\u904d\u5386\u200b\u7ed3\u679c\u200b\uff1a</p> <pre><code>[\n  [3],\n  [9,20],\n  [15,7]\n]\n</code></pre> <p>Reference</p>","tags":["\u6811","\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"]},{"location":"coding/leetcode/102/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u7b2c\u4e00\u5c42\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\uff0c\u200b\u5373\u6839\u200b\u8282\u70b9\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u518d\u5c42\u5e8f\u200b\u904d\u5386\u200b\u5de6\u5b50\u200b\u6811\u200b\u548c\u200b\u53f3\u5b50\u200b\u6811\u200b\uff0c\u200b\u5408\u5e76\u200b\u540c\u5c42\u200b\u7684\u200b\u7ed3\u679c\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     struct TreeNode *left;\n *     struct TreeNode *right;\n * };\n */\n/**\n * Return an array of arrays of size *returnSize.\n * The sizes of the arrays are returned as *returnColumnSizes array.\n * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().\n */\n#define MAX(x, y) (x &gt; y ? x : y)\nint *merge(int *leftBranch, int leftSize, int *rightBranch, int rightSize, int *returnSize)\n{\n    *returnSize = leftSize + rightSize;\n    int *ret = (int *)malloc(sizeof(int) * (leftSize + rightSize));\n    if (leftSize != 0)\n    {\n        memcpy(ret, leftBranch, sizeof(int) * leftSize);\n        free(leftBranch);\n    }\n    if (rightSize != 0)\n    {\n        memcpy(ret + leftSize, rightBranch, sizeof(int) * rightSize);\n        free(rightBranch);\n    }\n    return ret;\n}\nint** levelOrder(struct TreeNode* root, int* returnSize, int** returnColumnSizes){\n    if (root == NULL)\n    {\n        *returnSize = 0;\n        *returnColumnSizes = NULL;\n        return NULL;\n    }\n    int leftBranchSize = 0, *leftColumnSizes = NULL, **leftBranch = levelOrder(root-&gt;left, &amp;leftBranchSize, &amp;leftColumnSizes),\n        rightBranchSize = 0, *rightColumnSizes = NULL, **rightBranch = levelOrder(root-&gt;right, &amp;rightBranchSize, &amp;rightColumnSizes);\n    *returnSize = 1 + MAX(leftBranchSize, rightBranchSize);\n    int **ret = (int **)malloc(sizeof(int *) * *returnSize), *returnCols = (int *)malloc(sizeof(int) * *returnSize), i = 0;\n    *returnColumnSizes = returnCols;\n    *returnCols = 1;\n    *ret = malloc(sizeof(int));\n    **ret = root-&gt;val;\n    for (i = 1; i &lt; *returnSize; i++)\n    {\n        if (i &lt;= leftBranchSize &amp;&amp; i &lt;= rightBranchSize)\n            ret[i] = merge(leftBranch[i - 1], leftColumnSizes[i - 1], rightBranch[i - 1], rightColumnSizes[i - 1], returnCols + i);\n        else if (i &lt;= leftBranchSize)\n            ret[i] = merge(leftBranch[i-1], leftColumnSizes[i-1], NULL, 0, returnCols + i);\n        else if (i &lt;= rightBranchSize)\n            ret[i] = merge(NULL, 0, rightBranch[i-1], rightColumnSizes[i-1], returnCols + i);\n    }\n    free(leftBranch);\n    free(rightBranch);\n    free(leftColumnSizes);\n    free(rightColumnSizes);\n    return ret;\n}\n</code></pre>","tags":["\u6811","\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"]},{"location":"coding/leetcode/11/","title":"11. \u200b\u76db\u200b\u6700\u591a\u6c34\u200b\u7684\u200b\u5bb9\u5668","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u5b66","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/11/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b <code>n</code> \u200b\u4e2a\u200b\u975e\u8d1f\u200b\u6574\u6570\u200b <code>a_1\uff0ca_2\uff0c...\uff0ca_n</code>\uff0c\u200b\u6bcf\u4e2a\u200b\u6570\u200b\u4ee3\u8868\u200b\u5750\u6807\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u70b9\u200b\u00a0<code>(i,\u00a0a_i)</code> \u3002\u200b\u5728\u200b\u5750\u6807\u200b\u5185\u200b\u753b\u200b <code>n</code> \u200b\u6761\u200b\u5782\u76f4\u7ebf\u200b\uff0c\u200b\u5782\u76f4\u7ebf\u200b <code>i</code>\u00a0\u200b\u7684\u200b\u4e24\u4e2a\u200b\u7aef\u70b9\u200b\u5206\u522b\u200b\u4e3a\u200b\u00a0<code>(i,\u00a0a_i)</code> \u200b\u548c\u200b <code>(i, 0)</code> \u3002\u200b\u627e\u51fa\u200b\u5176\u4e2d\u200b\u7684\u200b\u4e24\u6761\u7ebf\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u5b83\u4eec\u200b\u4e0e\u200b\u00a0<code>x</code>\u00a0\u200b\u8f74\u200b\u5171\u540c\u200b\u6784\u6210\u200b\u7684\u200b\u5bb9\u5668\u200b\u53ef\u4ee5\u200b\u5bb9\u7eb3\u200b\u6700\u591a\u200b\u7684\u200b\u6c34\u200b\u3002</p> <p>\u200b\u8bf4\u660e\u200b\uff1a\u200b\u4f60\u200b\u4e0d\u80fd\u200b\u503e\u659c\u200b\u5bb9\u5668\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p></p> <pre><code>\u200b\u8f93\u5165\u200b\uff1a[1,8,6,2,5,4,8,3,7]\n\u200b\u8f93\u51fa\u200b\uff1a49 \n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u56fe\u4e2d\u200b\u5782\u76f4\u7ebf\u200b\u4ee3\u8868\u200b\u8f93\u5165\u200b\u6570\u7ec4\u200b [1,8,6,2,5,4,8,3,7]\u3002\u200b\u5728\u200b\u6b64\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u5bb9\u5668\u200b\u80fd\u591f\u200b\u5bb9\u7eb3\u200b\u6c34\u200b\uff08\u200b\u8868\u793a\u200b\u4e3a\u200b\u84dd\u8272\u200b\u90e8\u5206\u200b\uff09\u200b\u7684\u200b\u6700\u5927\u503c\u200b\u4e3a\u200b\u00a049\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aheight = [1,1]\n\u200b\u8f93\u51fa\u200b\uff1a1\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aheight = [4,3,2,1,4]\n\u200b\u8f93\u51fa\u200b\uff1a16\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 4\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aheight = [1,2,1]\n\u200b\u8f93\u51fa\u200b\uff1a2\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>n = height.length</code></li> <li>2 &lt;= n &lt;= 3 * 104</li> <li>0 &lt;= height[i] &lt;= 3 * 104</li> </ul> <p>Reference</p>","tags":["\u6570\u5b66","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/11/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4f7f\u7528\u200b\u53cc\u200b\u6307\u9488\u200b\u6cd5\u200b\uff0c\u200b\u4e24\u4e2a\u200b\u6307\u9488\u200b\u5206\u522b\u200b\u6307\u5411\u200b\u76db\u6c34\u200b\u533a\u57df\u200b\u7684\u200b\u8fb9\u754c\u200b\u3002\u200b\u6bcf\u6b21\u200b\u5faa\u73af\u200b\u5c06\u200b\u8f83\u200b\u4f4e\u200b\u7684\u200b\u8fb9\u754c\u200b\u5411\u200b\u4e2d\u95f4\u200b\u6536\u7f29\u200b\uff0c\u200b\u5e76\u200b\u5c1d\u8bd5\u200b\u66f4\u65b0\u200b\u6700\u5927\u200b\u7684\u200b\u76db\u6c34\u200b\u533a\u57df\u200b\u3002</p> <pre><code>#define MIN(x, y) (x &lt; y ? x : y)\n#define MAX(x, y) (x &gt; y ? x : y)\nint maxArea(int* height, int heightSize){\n    int left = 0, right = heightSize - 1,\n        ret = (right - left) * MIN(height[left], height[right]), cur;\n    while (left &lt; right)\n    {\n        if (height[left] &lt; height[right])\n            left++;\n        else\n            right--;\n        cur = (right - left) * MIN(height[left], height[right]);\n        ret = MAX(cur, ret);\n    }\n    return ret;\n}\n</code></pre>","tags":["\u6570\u5b66","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/115/","title":"115. \u200b\u4e0d\u540c\u200b\u7684\u200b\u5b50\u200b\u5e8f\u5217","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u56f0\u96be\u200b</p>","tags":["\u5b57\u7b26\u4e32","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/115/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b <code>s</code> \u200b\u548c\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b <code>t</code> \uff0c\u200b\u8ba1\u7b97\u200b\u5728\u200b <code>s</code> \u200b\u7684\u200b\u5b50\u200b\u5e8f\u5217\u200b\u4e2d\u200b <code>t</code> \u200b\u51fa\u73b0\u200b\u7684\u200b\u4e2a\u6570\u200b\u3002</p> <p>\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u4e00\u4e2a\u200b \u200b\u5b50\u200b\u5e8f\u5217\u200b \u200b\u662f\u200b\u6307\u200b\uff0c\u200b\u901a\u8fc7\u200b\u5220\u9664\u200b\u4e00\u4e9b\u200b\uff08\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4e0d\u200b\u5220\u9664\u200b\uff09\u200b\u5b57\u7b26\u200b\u4e14\u200b\u4e0d\u200b\u5e72\u6270\u200b\u5269\u4f59\u200b\u5b57\u7b26\u200b\u76f8\u5bf9\u200b\u4f4d\u7f6e\u200b\u6240\u200b\u7ec4\u6210\u200b\u7684\u200b\u65b0\u200b\u5b57\u7b26\u4e32\u200b\u3002\uff08\u200b\u4f8b\u5982\u200b\uff0c<code>\"ACE\"</code>\u00a0\u200b\u662f\u200b\u00a0<code>\"ABCDE\"</code>\u00a0\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5b50\u200b\u5e8f\u5217\u200b\uff0c\u200b\u800c\u200b\u00a0<code>\"AEC\"</code>\u00a0\u200b\u4e0d\u662f\u200b\uff09</p> <p>\u200b\u9898\u76ee\u200b\u6570\u636e\u200b\u4fdd\u8bc1\u200b\u7b54\u6848\u200b\u7b26\u5408\u200b 32 \u200b\u4f4d\u200b\u5e26\u7b26\u53f7\u200b\u6574\u6570\u200b\u8303\u56f4\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u00a01\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1as = \"rabbbit\", t = \"rabbit\"\n\u200b\u8f93\u51fa\u200b\uff1a3\n\u200b\u89e3\u91ca\u200b\uff1a\n\u200b\u5982\u4e0b\u200b\u56fe\u200b\u6240\u793a\u200b, \u200b\u6709\u200b 3 \u200b\u79cd\u200b\u53ef\u4ee5\u200b\u4ece\u200b s \u200b\u4e2d\u200b\u5f97\u5230\u200b \"rabbit\" \u200b\u7684\u200b\u65b9\u6848\u200b\u3002\n(\u200b\u4e0a\u200b\u7bad\u5934\u200b\u7b26\u53f7\u200b ^ \u200b\u8868\u793a\u200b\u9009\u53d6\u200b\u7684\u200b\u5b57\u6bcd\u200b)\nrabbbit\n^^^^ ^^\nrabbbit\n^^ ^^^^\nrabbbit\n^^^ ^^^\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a02\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1as = \"babgbag\", t = \"bag\"\n\u200b\u8f93\u51fa\u200b\uff1a5\n\u200b\u89e3\u91ca\u200b\uff1a\n\u200b\u5982\u4e0b\u200b\u56fe\u200b\u6240\u793a\u200b, \u200b\u6709\u200b 5 \u200b\u79cd\u200b\u53ef\u4ee5\u200b\u4ece\u200b s \u200b\u4e2d\u200b\u5f97\u5230\u200b \"bag\" \u200b\u7684\u200b\u65b9\u6848\u200b\u3002 \n(\u200b\u4e0a\u200b\u7bad\u5934\u200b\u7b26\u53f7\u200b ^ \u200b\u8868\u793a\u200b\u9009\u53d6\u200b\u7684\u200b\u5b57\u6bcd\u200b)\nbabgbag\n^^ ^\nbabgbag\n^^    ^\nbabgbag\n^    ^^\nbabgbag\n  ^  ^^\nbabgbag\n    ^^^\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>0 &lt;= s.length, t.length &lt;= 1000</code></li> <li><code>s</code> \u200b\u548c\u200b <code>t</code> \u200b\u7531\u200b\u82f1\u6587\u5b57\u6bcd\u200b\u7ec4\u6210\u200b</li> </ul> <p>Reference</p>","tags":["\u5b57\u7b26\u4e32","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/115/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u89e3\u9898\u200b\u601d\u8def\u200b\uff1a\u200b\u8bbe\u200b\\(f(x, y)\\)\u200b\u4e3a\u200b\u5b57\u7b26\u4e32\u200b\\(x\\)\u200b\u4e2d\u200b\u7684\u200b\u5b50\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u5b57\u7b26\u4e32\u200b\\(y\\)\u200b\u51fa\u73b0\u200b\u7684\u200b\u6b21\u6570\u200b\u3002\u200b\u5e76\u4e14\u200b\u4f7f\u7528\u200b\\(x + 1\\)\u200b\u8868\u793a\u200b\u5b57\u7b26\u4e32\u200b\\(x\\)\u200b\u4ece\u200b\u7b2c\u4e8c\u4e2a\u200b\u5b57\u7b26\u200b\u5f00\u59cb\u200b\u7684\u200b\u5b50\u4e32\u200b\u3002</p> <p>\u200b\u5219\u200b\uff1a</p> <ul> <li>\u200b\u5f53\u200b\\(x, y\\)\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u5b57\u7b26\u200b\u4e0d\u200b\u540c\u65f6\u200b\uff0c\u200b\u6709\u200b\\(f(x, y) = f(x + 1, y)\\)</li> <li>\u200b\u5f53\u200b\\(x, y\\)\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u5b57\u7b26\u200b\u5339\u914d\u200b\u65f6\u200b\uff0c\u200b\u6709\u200b\\(f(x, y) = f(x + 1, y + 1) + f(x + 1, y)\\)</li> </ul> <p>\u200b\u7279\u6b8a\u200b\u5730\u200b\uff0c\u200b\u5f53\u200b\\(y\\)\u200b\u4e3a\u7a7a\u200b\u5b57\u7b26\u4e32\u200b\u65f6\u200b\uff0c\u200b\u8bf4\u660e\u200b\u5b57\u7b26\u4e32\u200b\u5339\u914d\u200b\u7ed3\u675f\u200b\uff0c\u200b\u5bf9\u5e94\u200b\u4e00\u4e2a\u200b\u5339\u914d\u200b\u6210\u529f\u200b\u7684\u200b\u5b50\u4e32\u200b\uff0c\u200b\u56e0\u6b64\u200b\\(f(x, \\varnothing) = 1\\)\u3002\u200b\u5f53\u200b\\(x\\)\u200b\u4e3a\u7a7a\u200b\u5b57\u7b26\u4e32\u200b\u4e14\u200b\\(y\\)\u200b\u4e0d\u4e3a\u200b\u7a7a\u200b\u5b57\u7b26\u4e32\u200b\u65f6\u200b\uff0c\u200b\u8bf4\u660e\u200b\u5b57\u7b26\u4e32\u200b\u5339\u914d\u200b\u5931\u8d25\u200b\uff0c\\(f(\\varnothing, y) = \\left\\{\\begin{aligned}&amp;0 &amp;y\\not = \\varnothing \\\\ &amp; 1 &amp;y=\\varnothing\\end{aligned}\\right .\\)\u3002</p> <p>\u200b\u7531\u6b64\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u521d\u6b65\u200b\u5f97\u51fa\u200b\u9012\u5f52\u200b\u4ee3\u7801\u200b\uff1a</p> <pre><code>int numDistinct(char * s, char * t){\n    if (!*t)\n        return 1;\n    if (!*s)\n        return 0;\n    int ret = 0;\n    if (*s == *t)\n        ret += numDistinct(s + 1, t + 1);\n    ret += numDistinct(s + 1, t);\n    return ret;\n}\n</code></pre> <p>\u200b\u5982\u200b\u4e0a\u200b\u4ee3\u7801\u200b\u4f1a\u200b\u9020\u6210\u200b\u8d85\u65f6\u200b\uff0c\u200b\u539f\u56e0\u200b\u662f\u200b\u9012\u5f52\u200b\u65f6\u200b\u51fa\u73b0\u200b\u4e86\u200b\u5206\u652f\u200b\u5bfc\u81f4\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(2^n\\)\u3002\u200b\u4f7f\u7528\u200b\u6570\u7ec4\u200b\u5b58\u50a8\u200b\u5386\u53f2\u200b\u7ed3\u679c\u200b\u53ef\u4ee5\u200b\u907f\u514d\u200b\u9012\u5f52\u200b\u4ea7\u751f\u200b\u5206\u652f\u200b\uff0c\u200b\u4f18\u5316\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1a</p> <pre><code>int cached(char *s, char *t, int x, int y, int **buffer) {\n    int ret = 0;\n    if (!*t)\n        ret = 1;\n    else if (!*s)\n        ret = 0;\n    else\n    {\n        if (buffer[x][y] &gt;= 0)\n            return buffer[x][y];\n        if (*s == *t)\n            ret += cached(s + 1, t + 1, x + 1, y + 1, buffer);\n        ret += cached(s + 1, t, x + 1, y, buffer);\n        buffer[x][y] = ret;\n    }\n    return ret;\n}\nint numDistinct(char * s, char * t){\n    int x = strlen(s), y = strlen(t);\n    int *_buffer = (int *)malloc(sizeof(int) * x * y);\n    int **buffer = (int **)malloc(sizeof(int *) * x);\n    for (int i = 0; i &lt; x; i++)\n        buffer[i] = _buffer + i * y;\n    memset(_buffer, 0xff, sizeof(int) * x * y);\n    return cached(s, t, 0, 0, buffer);\n}\n</code></pre>","tags":["\u5b57\u7b26\u4e32","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/118/","title":"118. \u200b\u6768\u8f89\u4e09\u89d2","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/118/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u975e\u8d1f\u200b\u6574\u6570\u200bnumRows\uff0c\u200b\u751f\u6210\u200b\u6768\u8f89\u4e09\u89d2\u200b\u7684\u200b\u524d\u200bnumRows\u200b\u884c\u200b\u3002</p> <p></p> <p>\u200b\u5728\u200b\u6768\u8f89\u4e09\u89d2\u200b\u4e2d\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u6570\u662f\u200b\u5b83\u200b\u5de6\u4e0a\u65b9\u200b\u548c\u200b\u53f3\u4e0a\u65b9\u200b\u7684\u200b\u6570\u200b\u7684\u200b\u548c\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\uff1a <pre><code>\u200b\u8f93\u5165\u200b: 5\n\u200b\u8f93\u51fa\u200b:\n[\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]\n</code></pre></p> <p>Reference</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/118/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u6839\u636e\u200b\u6768\u8f89\u4e09\u89d2\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u901a\u8fc7\u200b\u9012\u5f52\u200b\u9010\u884c\u200b\u6784\u9020\u200b\u51fa\u200b\u6bcf\u200b\u4e00\u884c\u200b\u7684\u200b\u503c\u200b</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>/**\n * Return an array of arrays of size *returnSize.\n * The sizes of the arrays are returned as *returnColumnSizes array.\n * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().\n */\nint **generate(int numRows, int *returnSize, int **returnColumnSizes)\n{\n    *returnSize = numRows;\n    if (numRows == 0)\n        return NULL;\n    if (numRows == 1)\n    {\n        *returnColumnSizes = (int *)malloc(sizeof(int));\n        **returnColumnSizes = 1;\n        int **ret = (int **)malloc(sizeof(int *));\n        *ret = (int *)malloc(sizeof(int));\n        **ret = 1;\n        return ret;\n    }\n    int retSize = 0,\n        *oldRetColSizes = NULL,\n        **rec = generate(numRows - 1, &amp;retSize, &amp;oldRetColSizes), \n        i = 0;\n        **ret = (int **)memcpy(malloc(sizeof(int *) * numRows), rec, (numRows - 1) * sizeof(int *));\n        *newRetColSizes = memcpy((int *)malloc(sizeof(int) * numRows), oldRetColSizes, (numRows - 1) * sizeof(int));\n        *tempArray = (int *)malloc(sizeof(int) * numRows);\n\n    free(oldRetColSizes);\n    free(rec);\n\n    newRetColSizes[numRows - 1] = numRows;\n    for (i = 1; i &lt; numRows - 1; i++)\n        tempArray[i] = *(ret[numRows - 2] + i) + *(ret[numRows - 2] + i - 1);\n    tempArray[0] = 1;\n    tempArray[numRows - 1] = 1;\n    ret[numRows - 1] = tempArray;\n\n    *returnColumnSizes = newRetColSizes;\n    return ret;\n}\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/119/","title":"119. \u200b\u6768\u8f89\u4e09\u89d2\u200b II","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/119/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u975e\u8d1f\u200b\u7d22\u5f15\u200b\\(k\\)\uff0c\u200b\u5176\u4e2d\u200b\\(k\\leq33\\)\uff0c\u200b\u8fd4\u56de\u200b\u6768\u8f89\u4e09\u89d2\u200b\u7684\u200b\u7b2c\u200b\\(k\\) \u200b\u884c\u200b\u3002</p> <p></p> <p>\u200b\u5728\u200b\u6768\u8f89\u4e09\u89d2\u200b\u4e2d\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u6570\u662f\u200b\u5b83\u200b\u5de6\u4e0a\u65b9\u200b\u548c\u200b\u53f3\u4e0a\u65b9\u200b\u7684\u200b\u6570\u200b\u7684\u200b\u548c\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\uff1a <pre><code>\u200b\u8f93\u5165\u200b: 3\n\u200b\u8f93\u51fa\u200b: [1,3,3,1]\n</code></pre> \u200b\u8fdb\u9636\u200b\uff1a</p> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4f18\u5316\u200b\u4f60\u200b\u7684\u200b\u7b97\u6cd5\u200b\u5230\u200b\\(O(k)\\)\u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b\u5417\u200b\uff1f</p> <p>Reference</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/119/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u5f53\u524d\u200b\u884c\u200b\u7684\u200b\u7ed3\u679c\u200b\u4ec5\u200b\u4f9d\u8d56\u4e8e\u200b\u4e0a\u200b\u4e00\u884c\u200b\u7684\u200b\u7ed3\u679c\u200b\uff0c\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u52a8\u6001\u200b\u89c4\u5212\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nvoid recur(int rowIndex, int *Filling)\n{\n    if (rowIndex &lt;= 1)\n        return;\n    recur(rowIndex - 1, Filling);\n    for (int i = rowIndex - 1; i &gt; 0; i--)\n        Filling[i] += Filling[i - 1];\n}\n\nint* getRow(int rowIndex, int* returnSize){\n    *returnSize = rowIndex + 1;\n    int *ret = (int *)memset(malloc(sizeof(int) * *returnSize), 0, sizeof(int) * *returnSize);\n    ret[0] = 1;\n    recur(*returnSize, ret);\n    return ret;\n}\n</code></pre> <pre><code>class Solution:\n    def getRow(self, rowIndex: int) -&gt; List[int]:\n        row = [0] * (rowIndex + 1)\n        row[0] = 1\n        for currentRow in range(1, rowIndex + 1):\n            for idx in range(currentRow, 0, -1):\n                row[idx] = row[idx - 1] + row[idx]\n        return row\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/120/","title":"120. \u200b\u4e09\u89d2\u5f62\u200b\u6700\u5c0f\u200b\u8def\u5f84\u200b\u548c","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/120/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u4e09\u89d2\u5f62\u200b\uff0c\u200b\u627e\u51fa\u200b\u81ea\u9876\u5411\u4e0b\u200b\u7684\u200b\u6700\u5c0f\u200b\u8def\u5f84\u200b\u548c\u200b\u3002\u200b\u6bcf\u200b\u4e00\u6b65\u200b\u53ea\u80fd\u200b\u79fb\u52a8\u200b\u5230\u200b\u4e0b\u200b\u4e00\u884c\u200b\u4e2d\u200b\u76f8\u90bb\u200b\u7684\u200b\u7ed3\u70b9\u200b\u4e0a\u200b\u3002</p> <p>\u200b\u76f8\u90bb\u200b\u7684\u200b\u7ed3\u70b9\u200b \u200b\u5728\u200b\u8fd9\u91cc\u200b\u6307\u200b\u7684\u200b\u662f\u200b <code>\u200b\u4e0b\u6807\u200b</code> \u200b\u4e0e\u200b <code>\u200b\u4e0a\u200b\u4e00\u5c42\u200b\u7ed3\u70b9\u200b\u4e0b\u6807\u200b</code> \u200b\u76f8\u540c\u200b\u6216\u8005\u200b\u7b49\u4e8e\u200b <code>\u200b\u4e0a\u200b\u4e00\u5c42\u200b\u7ed3\u70b9\u200b\u4e0b\u6807\u200b + 1</code> \u200b\u7684\u200b\u4e24\u4e2a\u200b\u7ed3\u70b9\u200b\u3002</p> <p>\u200b\u4f8b\u5982\u200b\uff0c\u200b\u7ed9\u5b9a\u200b\u4e09\u89d2\u5f62\u200b\uff1a</p> <pre><code>[\n     [2],\n    [3,4],\n   [6,5,7],\n  [4,1,8,3]\n]\n</code></pre> <p>\u200b\u81ea\u9876\u5411\u4e0b\u200b\u7684\u200b\u6700\u5c0f\u200b\u8def\u5f84\u200b\u548c\u200b\u4e3a\u200b<code>11</code>\uff08\u200b\u5373\u200b\uff0c2\u00a0+\u00a03\u00a0+\u00a05\u00a0+\u00a01\u00a0= 11\uff09\u3002</p> <p>\u200b\u8bf4\u660e\u200b\uff1a</p> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u53ea\u200b\u4f7f\u7528\u200b\\(O(n)\\)\u200b\u7684\u200b\u989d\u5916\u200b\u7a7a\u95f4\u200b\uff08\\(n\\)\u200b\u4e3a\u200b\u4e09\u89d2\u5f62\u200b\u7684\u200b\u603b\u884c\u200b\u6570\u200b\uff09\u200b\u6765\u200b\u89e3\u51b3\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\uff0c\u200b\u90a3\u4e48\u200b\u4f60\u200b\u7684\u200b\u7b97\u6cd5\u200b\u4f1a\u200b\u5f88\u200b\u52a0\u5206\u200b\u3002</p> <p>Reference</p>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/120/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u52a8\u6001\u200b\u89c4\u5212\u200b\uff0c\u200b\u4f7f\u7528\u200b\u4e09\u89d2\u5f62\u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u884c\u200b\u5b58\u653e\u200b\u6700\u5c0f\u200b\u7684\u200b\u548c\u200b\uff0c\u200b\u4ece\u200b\u4e0b\u200b\u5f80\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u8ba1\u7b97\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>#define MIN(x, y) (x &lt; y ? x : y)\nint minimumTotal(int **triangle, int triangleSize, int *triangleColSize)\n{\n    if (!triangleSize)\n        return 0;\n    int *dp1 = triangle[triangleSize - 1], i = 0, j = 0;\n    for (i = triangleSize - 1; i &gt; 0; i--)\n        for (j = 0; j &lt; triangleColSize[i - 1]; j++)\n            dp1[j] = triangle[i - 1][j] + MIN(dp1[j], dp1[j + 1]);\n    return dp1[0];\n}\n</code></pre>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/121/","title":"121. \u200b\u4e70\u5356\u200b\u80a1\u7968\u200b\u7684\u200b\u6700\u4f73\u65f6\u673a","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/121/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b\u7b2c\u200b\u00a0i \u200b\u4e2a\u200b\u5143\u7d20\u200b\u662f\u200b\u4e00\u652f\u200b\u7ed9\u5b9a\u200b\u80a1\u7968\u200b\u7b2c\u200b i \u200b\u5929\u200b\u7684\u200b\u4ef7\u683c\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u6700\u200b\u591a\u53ea\u200b\u5141\u8bb8\u200b\u5b8c\u6210\u200b\u4e00\u7b14\u200b\u4ea4\u6613\u200b\uff08\u200b\u5373\u200b\u4e70\u5165\u200b\u548c\u200b\u5356\u51fa\u200b\u4e00\u652f\u200b\u80a1\u7968\u200b\u4e00\u6b21\u200b\uff09\uff0c\u200b\u8bbe\u8ba1\u200b\u4e00\u4e2a\u200b\u7b97\u6cd5\u200b\u6765\u200b\u8ba1\u7b97\u200b\u4f60\u200b\u6240\u80fd\u200b\u83b7\u53d6\u200b\u7684\u200b\u6700\u5927\u200b\u5229\u6da6\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u4f60\u200b\u4e0d\u80fd\u200b\u5728\u200b\u4e70\u5165\u200b\u80a1\u7968\u200b\u524d\u200b\u5356\u51fa\u200b\u80a1\u7968\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: [7,1,5,3,6,4]\n\u200b\u8f93\u51fa\u200b: 5\n\u200b\u89e3\u91ca\u200b: \u200b\u5728\u200b\u7b2c\u200b 2 \u200b\u5929\u200b\uff08\u200b\u80a1\u7968\u4ef7\u683c\u200b = 1\uff09\u200b\u7684\u200b\u65f6\u5019\u200b\u4e70\u5165\u200b\uff0c\u200b\u5728\u200b\u7b2c\u200b 5 \u200b\u5929\u200b\uff08\u200b\u80a1\u7968\u4ef7\u683c\u200b = 6\uff09\u200b\u7684\u200b\u65f6\u5019\u200b\u5356\u51fa\u200b\uff0c\u200b\u6700\u5927\u200b\u5229\u6da6\u200b = 6-1 = 5 \u3002\n     \u200b\u6ce8\u610f\u200b\u5229\u6da6\u200b\u4e0d\u80fd\u200b\u662f\u200b 7-1 = 6, \u200b\u56e0\u4e3a\u200b\u5356\u51fa\u200b\u4ef7\u683c\u200b\u9700\u8981\u200b\u5927\u4e8e\u200b\u4e70\u5165\u200b\u4ef7\u683c\u200b\uff1b\u200b\u540c\u65f6\u200b\uff0c\u200b\u4f60\u200b\u4e0d\u80fd\u200b\u5728\u200b\u4e70\u5165\u200b\u524d\u200b\u5356\u51fa\u200b\u80a1\u7968\u200b\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: [7,6,4,3,1]\n\u200b\u8f93\u51fa\u200b: 0\n\u200b\u89e3\u91ca\u200b: \u200b\u5728\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b, \u200b\u6ca1\u6709\u200b\u4ea4\u6613\u200b\u5b8c\u6210\u200b, \u200b\u6240\u4ee5\u200b\u6700\u5927\u200b\u5229\u6da6\u200b\u4e3a\u200b 0\u3002\n</code></pre> <p>Reference</p>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/121/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u627e\u51fa\u200b\u76f8\u5dee\u200b\u6700\u5927\u200b\u7684\u200b\u6ee1\u8db3\u200b\\(a_i &lt; a_j\\)\u200b\u4e14\u200b\\(i &lt; j\\)\u200b\u7684\u200b\u4e24\u4e2a\u200b\u6570\u200b\u5373\u53ef\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>int maxProfit(int* prices, int pricesSize){\n    int max = 0, i = pricesSize - 1, value = 0, profit = 0;\n    for (; i&gt;=0; i--)\n    {\n        if (prices[i] &gt; value)\n            value = prices[i];\n        else\n            profit = value - prices[i];\n        max = max &gt; profit ? max : profit;\n    }\n    return max;\n}\n</code></pre>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/122/","title":"122. \u200b\u4e70\u5356\u200b\u80a1\u7968\u200b\u7684\u200b\u6700\u4f73\u65f6\u673a\u200b II","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u8d2a\u5fc3\u7b97\u6cd5","\u6570\u7ec4"]},{"location":"coding/leetcode/122/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b\u7b2c\u200b\u00a0i \u200b\u4e2a\u200b\u5143\u7d20\u200b\u662f\u200b\u4e00\u652f\u200b\u7ed9\u5b9a\u200b\u80a1\u7968\u200b\u7b2c\u200b i \u200b\u5929\u200b\u7684\u200b\u4ef7\u683c\u200b\u3002</p> <p>\u200b\u8bbe\u8ba1\u200b\u4e00\u4e2a\u200b\u7b97\u6cd5\u200b\u6765\u200b\u8ba1\u7b97\u200b\u4f60\u200b\u6240\u80fd\u200b\u83b7\u53d6\u200b\u7684\u200b\u6700\u5927\u200b\u5229\u6da6\u200b\u3002\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5c3d\u53ef\u80fd\u200b\u5730\u200b\u5b8c\u6210\u200b\u66f4\u200b\u591a\u200b\u7684\u200b\u4ea4\u6613\u200b\uff08\u200b\u591a\u6b21\u200b\u4e70\u5356\u200b\u4e00\u652f\u200b\u80a1\u7968\u200b\uff09\u3002</p> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u4f60\u200b\u4e0d\u80fd\u200b\u540c\u65f6\u200b\u53c2\u4e0e\u200b\u591a\u7b14\u200b\u4ea4\u6613\u200b\uff08\u200b\u4f60\u200b\u5fc5\u987b\u200b\u5728\u200b\u518d\u6b21\u200b\u8d2d\u4e70\u200b\u524d\u200b\u51fa\u552e\u200b\u6389\u200b\u4e4b\u524d\u200b\u7684\u200b\u80a1\u7968\u200b\uff09\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: [7,1,5,3,6,4]\n\u200b\u8f93\u51fa\u200b: 7\n\u200b\u89e3\u91ca\u200b: \u200b\u5728\u200b\u7b2c\u200b 2 \u200b\u5929\u200b\uff08\u200b\u80a1\u7968\u4ef7\u683c\u200b = 1\uff09\u200b\u7684\u200b\u65f6\u5019\u200b\u4e70\u5165\u200b\uff0c\u200b\u5728\u200b\u7b2c\u200b 3 \u200b\u5929\u200b\uff08\u200b\u80a1\u7968\u4ef7\u683c\u200b = 5\uff09\u200b\u7684\u200b\u65f6\u5019\u200b\u5356\u51fa\u200b, \u200b\u8fd9\u7b14\u200b\u4ea4\u6613\u6240\u200b\u80fd\u200b\u83b7\u5f97\u200b\u5229\u6da6\u200b = 5-1 = 4 \u3002\n\u00a0    \u200b\u968f\u540e\u200b\uff0c\u200b\u5728\u200b\u7b2c\u200b 4 \u200b\u5929\u200b\uff08\u200b\u80a1\u7968\u4ef7\u683c\u200b = 3\uff09\u200b\u7684\u200b\u65f6\u5019\u200b\u4e70\u5165\u200b\uff0c\u200b\u5728\u200b\u7b2c\u200b 5 \u200b\u5929\u200b\uff08\u200b\u80a1\u7968\u4ef7\u683c\u200b = 6\uff09\u200b\u7684\u200b\u65f6\u5019\u200b\u5356\u51fa\u200b, \u200b\u8fd9\u7b14\u200b\u4ea4\u6613\u6240\u200b\u80fd\u200b\u83b7\u5f97\u200b\u5229\u6da6\u200b = 6-3 = 3 \u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: [1,2,3,4,5]\n\u200b\u8f93\u51fa\u200b: 4\n\u200b\u89e3\u91ca\u200b: \u200b\u5728\u200b\u7b2c\u200b 1 \u200b\u5929\u200b\uff08\u200b\u80a1\u7968\u4ef7\u683c\u200b = 1\uff09\u200b\u7684\u200b\u65f6\u5019\u200b\u4e70\u5165\u200b\uff0c\u200b\u5728\u200b\u7b2c\u200b 5 \u200b\u5929\u200b \uff08\u200b\u80a1\u7968\u4ef7\u683c\u200b = 5\uff09\u200b\u7684\u200b\u65f6\u5019\u200b\u5356\u51fa\u200b, \u200b\u8fd9\u7b14\u200b\u4ea4\u6613\u6240\u200b\u80fd\u200b\u83b7\u5f97\u200b\u5229\u6da6\u200b = 5-1 = 4 \u3002\n\u00a0    \u200b\u6ce8\u610f\u200b\u4f60\u200b\u4e0d\u80fd\u200b\u5728\u200b\u7b2c\u200b 1 \u200b\u5929\u200b\u548c\u200b\u7b2c\u200b 2 \u200b\u5929\u200b\u63a5\u8fde\u200b\u8d2d\u4e70\u200b\u80a1\u7968\u200b\uff0c\u200b\u4e4b\u540e\u200b\u518d\u200b\u5c06\u200b\u5b83\u4eec\u200b\u5356\u51fa\u200b\u3002\n\u00a0    \u200b\u56e0\u4e3a\u200b\u8fd9\u6837\u200b\u5c5e\u4e8e\u200b\u540c\u65f6\u200b\u53c2\u4e0e\u200b\u4e86\u200b\u591a\u7b14\u200b\u4ea4\u6613\u200b\uff0c\u200b\u4f60\u200b\u5fc5\u987b\u200b\u5728\u200b\u518d\u6b21\u200b\u8d2d\u4e70\u200b\u524d\u200b\u51fa\u552e\u200b\u6389\u200b\u4e4b\u524d\u200b\u7684\u200b\u80a1\u7968\u200b\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a03\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: [7,6,4,3,1]\n\u200b\u8f93\u51fa\u200b: 0\n\u200b\u89e3\u91ca\u200b: \u200b\u5728\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b, \u200b\u6ca1\u6709\u200b\u4ea4\u6613\u200b\u5b8c\u6210\u200b, \u200b\u6240\u4ee5\u200b\u6700\u5927\u200b\u5229\u6da6\u200b\u4e3a\u200b 0\u3002\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= prices.length &lt;= 3 * 10 ^ 4</code></li> <li><code>0 &lt;= prices[i]\u00a0&lt;= 10 ^ 4</code></li> </ul> <p>Reference</p>","tags":["\u8d2a\u5fc3\u7b97\u6cd5","\u6570\u7ec4"]},{"location":"coding/leetcode/122/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a </p> <ol> <li>\u200b\u5f53\u200b\u6570\u7ec4\u200b\u957f\u5ea6\u200b\u4e3a\u200b1\u200b\u65f6\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u83b7\u53d6\u200b\u4efb\u4f55\u200b\u5229\u6da6\u200b\uff0c\u200b\u8fd4\u56de\u200b<code>0</code>\uff1b</li> <li>\u200b\u4ece\u200b\u6570\u7ec4\u200b\u672b\u5c3e\u200b\u5f00\u59cb\u200b\u641c\u7d22\u200b\u7b2c\u4e00\u4e2a\u200b\u80fd\u200b\u76c8\u5229\u200b\u7684\u200b\u70b9\u200b\uff0c\u200b\u5219\u200b\u6700\u5927\u200b\u5229\u6da6\u200b\u4e3a\u200b\u672c\u6b21\u200b\u76c8\u5229\u200b\u4e0e\u200b\u4e4b\u524d\u200b\u6700\u5927\u200b\u76c8\u5229\u200b\u4e4b\u200b\u548c\u200b\u3002</li> </ol> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>int maxProfit(int* prices, int pricesSize){\n    if (pricesSize &lt; 2)\n        return 0;\n    int *cur = prices + pricesSize - 1, currentVal = *cur, len = pricesSize;\n    while(cur &gt; prices)\n    {\n        if (*cur &lt; *(cur - 1))\n            break;\n        len--;\n        cur--;\n    }\n    return (currentVal - *cur) + maxProfit(prices, len - 1);\n}\n</code></pre>","tags":["\u8d2a\u5fc3\u7b97\u6cd5","\u6570\u7ec4"]},{"location":"coding/leetcode/125/","title":"125. \u200b\u9a8c\u8bc1\u200b\u56de\u6587\u200b\u4e32","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/125/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u9a8c\u8bc1\u200b\u5b83\u200b\u662f\u5426\u662f\u200b\u56de\u6587\u200b\u4e32\u200b\uff0c\u200b\u53ea\u200b\u8003\u8651\u200b\u5b57\u6bcd\u200b\u548c\u200b\u6570\u5b57\u200b\u5b57\u7b26\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5ffd\u7565\u200b\u5b57\u6bcd\u200b\u7684\u200b\u5927\u5c0f\u5199\u200b\u3002</p> <p>\u200b\u8bf4\u660e\u200b\uff1a \u200b\u672c\u9898\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u7a7a\u200b\u5b57\u7b26\u4e32\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\u6709\u6548\u200b\u7684\u200b\u56de\u6587\u200b\u4e32\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: \"A man, a plan, a canal: Panama\"\n\u200b\u8f93\u51fa\u200b: true\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: \"race a car\"\n\u200b\u8f93\u51fa\u200b: false\n</code></pre> <p>Reference</p>","tags":["\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/125/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u4f7f\u7528\u200b\u53cc\u200b\u6307\u9488\u200b\u6cd5\u200b\u8fdb\u884c\u200b\u5904\u7406\u200b\uff0c\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\u5982\u4e0b\u200b\u7279\u6b8a\u200b\u60c5\u51b5\u200b</p> <ol> <li>\u200b\u9700\u8981\u200b\u5ffd\u7565\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u7684\u200b\u7b26\u53f7\u200b\u800c\u200b\u53ea\u200b\u8003\u8651\u200b\u5b57\u6bcd\u200b\u548c\u200b\u6570\u5b57\u200b</li> <li>\u200b\u5927\u5c0f\u5199\u200b\u7684\u200bASCII\u200b\u6570\u503c\u200b\u76f8\u5dee\u200b32\uff0c\u200b\u4f46\u200bASCII\u200b\u6570\u503c\u200b\u76f8\u5dee\u200b32\u200b\u7684\u200b\u4e24\u4e2a\u200b\u5b57\u7b26\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u662f\u200b\u5927\u5c0f\u5199\u200b\u5173\u7cfb\u200b\uff0c\u200b\u5982\u200b<code>'0'</code>(48)\u200b\u4e0e\u200b<code>'P'</code>(80)</li> </ol> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>bool isText(char s)\n{\n    return (s &gt;= 'A' &amp;&amp; s &lt;= 'Z') || (s &gt;= 'a' &amp;&amp; s &lt;= 'z') || (s &gt;= '0' &amp;&amp; s &lt;= '9');\n}\nbool isSame(char s1, char s2)\n{\n    return (s1 == s2) || (s2 &gt;= 'A' &amp;&amp; s1 - s2 == 32) || (s1 &gt;= 'A' &amp;&amp; s2 - s1 == 32);\n}\nbool isPalindrome(char * s){\n    int len = strlen(s), head = 0, tail = len - 1;\n    while (head &lt; len &amp;&amp; !isText(s[head]))\n        head++;\n    while (tail &gt;= 0 &amp;&amp; !isText(s[tail]))\n        tail--;\n    while(tail &gt; head &amp;&amp; head &lt; len &amp;&amp; tail &gt;= 0)\n    {\n        if (!isSame(s[head], s[tail]))\n            return false;\n        head++;\n        tail--;\n        while (!isText(s[head]))\n            head++;\n        while (!isText(s[tail]))\n            tail--;\n    }\n    return true;\n}\n</code></pre>","tags":["\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/1283/","title":"1283. \u200b\u4f7f\u200b\u7ed3\u679c\u200b\u4e0d\u200b\u8d85\u8fc7\u200b\u9608\u503c\u200b\u7684\u200b\u6700\u5c0f\u200b\u9664\u6570","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/1283/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b\u00a0<code>nums</code> \u200b\u548c\u200b\u4e00\u4e2a\u200b\u6b63\u6574\u6570\u200b\u00a0<code>threshold</code>\u00a0\uff0c\u200b\u4f60\u200b\u9700\u8981\u200b\u9009\u62e9\u200b\u4e00\u4e2a\u200b\u6b63\u6574\u6570\u200b\u4f5c\u4e3a\u200b\u9664\u6570\u200b\uff0c\u200b\u7136\u540e\u200b\u5c06\u200b\u6570\u7ec4\u200b\u91cc\u200b\u6bcf\u4e2a\u200b\u6570\u90fd\u200b\u9664\u4ee5\u200b\u5b83\u200b\uff0c\u200b\u5e76\u200b\u5bf9\u200b\u9664\u6cd5\u200b\u7ed3\u679c\u200b\u6c42\u548c\u200b\u3002</p> <p>\u200b\u8bf7\u200b\u4f60\u200b\u627e\u51fa\u200b\u80fd\u591f\u200b\u4f7f\u200b\u4e0a\u8ff0\u200b\u7ed3\u679c\u200b\u5c0f\u4e8e\u200b\u7b49\u4e8e\u200b\u9608\u503c\u200b\u00a0<code>threshold</code>\u00a0\u200b\u7684\u200b\u9664\u6570\u200b\u4e2d\u200b \u200b\u6700\u5c0f\u200b \u200b\u7684\u200b\u90a3\u4e2a\u200b\u3002</p> <p>\u200b\u6bcf\u4e2a\u200b\u6570\u200b\u9664\u4ee5\u200b\u9664\u6570\u200b\u540e\u200b\u90fd\u200b\u5411\u4e0a\u200b\u53d6\u6574\u200b\uff0c\u200b\u6bd4\u65b9\u8bf4\u200b 7/3 = 3 \uff0c 10/2 = 5 \u3002</p> <p>\u200b\u9898\u76ee\u200b\u4fdd\u8bc1\u200b\u4e00\u5b9a\u200b\u6709\u89e3\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [1,2,5,9], threshold = 6\n\u200b\u8f93\u51fa\u200b\uff1a5\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u5982\u679c\u200b\u9664\u6570\u200b\u4e3a\u200b 1 \uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u548c\u200b\u4e3a\u200b 17 \uff081+2+5+9\uff09\u3002\n\u200b\u5982\u679c\u200b\u9664\u6570\u200b\u4e3a\u200b 4 \uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u548c\u200b\u4e3a\u200b 7 (1+1+2+3) \u3002\u200b\u5982\u679c\u200b\u9664\u6570\u200b\u4e3a\u200b 5 \uff0c\u200b\u548c\u200b\u4e3a\u200b 5 (1+1+1+2)\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [2,3,5,7,11], threshold = 11\n\u200b\u8f93\u51fa\u200b\uff1a3\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [19], threshold = 5\n\u200b\u8f93\u51fa\u200b\uff1a4\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 5 * 10^4</code></li> <li><code>1 &lt;= nums[i] &lt;= 10^6</code></li> <li><code>nums.length &lt;=\u00a0threshold &lt;= 10^6</code></li> </ul> <p>Reference</p>","tags":["\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/1283/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4f7f\u7528\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u627e\u5230\u200b\u6700\u5c0f\u200b\u7684\u200b\u9664\u6570\u200b</p> <p>\u200b\u5982\u679c\u200b\u7ed3\u679c\u200b\u5927\u4e8e\u200b<code>threshold</code>\uff0c\u200b\u8bf4\u660e\u200b\u9664\u6570\u200b\u8fc7\u200b\u5c0f\u200b\uff0c\u200b\u9700\u8981\u200b\u5728\u200b\u5f85\u67e5\u200b\u533a\u95f4\u200b\u53f3\u4fa7\u200b\u67e5\u627e\u200b\uff0c\u200b\u5426\u5219\u200b\u5728\u200b\u5de6\u4fa7\u200b\u67e5\u627e\u200b</p> <pre><code>bool test(int *nums, int numsSize, int threshold, int x)\n{\n    if (!x)\n        return INT_MAX;\n    int ret = 0, i = 0;\n    for (i = 0; i &lt; numsSize; i++)\n        ret += (nums[i] + x - 1) / x;\n    return ret &lt;= threshold;\n}\n\nint bSearch(int *nums, int numsSize, int threshold, int lo, int hi)\n{\n    if (hi - lo == 1)\n        return hi;\n    int mid = (hi + lo) &gt;&gt; 1;\n    if (!test(nums, numsSize, threshold, mid))\n        return bSearch(nums, numsSize, threshold, mid, hi);\n    else\n        return bSearch(nums, numsSize, threshold, lo, mid);\n}\n\nint smallestDivisor(int* nums, int numsSize, int threshold){\n    int max = 0, i = 0;\n    for (i = 0; i &lt; numsSize; i++)\n        if (max &lt; nums[i])\n        max = nums[i];\n    return bSearch(nums, numsSize, threshold, 0, max);\n}\n</code></pre> <pre><code>class Solution:\n    def bSearch(self, nums: List[int], threshold: int, lo: int, hi: int) -&gt; int:\n        if hi - lo == 1:\n            return hi\n        mid = (lo + hi) &gt;&gt; 1\n        return self.bSearch(nums, threshold, lo, mid) \\\n            if sum([math.ceil(_ / mid) for _ in nums]) &lt;= threshold \\\n            else self.bSearch(nums, threshold, mid, hi)\n    def smallestDivisor(self, nums: List[int], threshold: int) -&gt; int:\n        return self.bSearch(nums, threshold, 0, max(nums));\n</code></pre>","tags":["\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/13/","title":"13. \u200b\u7f57\u9a6c\u6570\u5b57\u200b\u8f6c\u200b\u6574\u6570","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/13/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7f57\u9a6c\u6570\u5b57\u200b\u5305\u542b\u200b\u4ee5\u4e0b\u200b\u4e03\u79cd\u200b\u5b57\u7b26\u200b:<code>I</code>\uff0c<code>V</code>\uff0c<code>X</code>\uff0c<code>L</code>\uff0c<code>C</code>\uff0c<code>D</code>\u200b\u548c\u200b<code>M</code>\u3002</p> <p><pre><code>\u200b\u5b57\u7b26\u200b          \u200b\u6570\u503c\u200b\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000\n</code></pre> \u200b\u4f8b\u5982\u200b\uff0c \u200b\u7f57\u9a6c\u6570\u5b57\u200b 2 \u200b\u5199\u200b\u505a\u200b<code>II</code>\u00a0\uff0c\u200b\u5373\u200b\u4e3a\u200b\u4e24\u4e2a\u200b\u5e76\u5217\u200b\u7684\u200b 1\u300212 \u200b\u5199\u200b\u505a\u200b<code>XII</code>\u00a0\uff0c\u200b\u5373\u200b\u4e3a\u200b<code>X</code>\u00a0+\u00a0<code>II</code>\u3002 27 \u200b\u5199\u200b\u505a\u200b<code>XXVII</code>, \u200b\u5373\u200b\u4e3a\u200b\u00a0<code>XX</code>\u00a0+\u00a0<code>V</code>\u00a0+\u00a0<code>II</code>\u3002</p> <p>\u200b\u901a\u5e38\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u7f57\u9a6c\u6570\u5b57\u200b\u4e2d\u5c0f\u200b\u7684\u200b\u6570\u5b57\u200b\u5728\u200b\u5927\u200b\u7684\u200b\u6570\u5b57\u200b\u7684\u200b\u53f3\u8fb9\u200b\u3002\u200b\u4f46\u200b\u4e5f\u200b\u5b58\u5728\u200b\u7279\u4f8b\u200b\uff0c\u200b\u4f8b\u5982\u200b 4 \u200b\u4e0d\u5199\u200b\u505a\u200b<code>IIII</code>\uff0c\u200b\u800c\u662f\u200b<code>IV</code>\u3002\u200b\u6570\u5b57\u200b 1 \u200b\u5728\u200b\u6570\u5b57\u200b 5 \u200b\u7684\u200b\u5de6\u8fb9\u200b\uff0c\u200b\u6240\u200b\u8868\u793a\u200b\u7684\u200b\u6570\u200b\u7b49\u4e8e\u200b\u5927\u6570\u200b 5 \u200b\u51cf\u5c0f\u200b\u6570\u200b 1 \u200b\u5f97\u5230\u200b\u7684\u200b\u6570\u503c\u200b 4 \u3002\u200b\u540c\u6837\u200b\u5730\u200b\uff0c\u200b\u6570\u5b57\u200b 9 \u200b\u8868\u793a\u200b\u4e3a\u200b<code>IX</code>\u3002\u200b\u8fd9\u4e2a\u200b\u7279\u6b8a\u200b\u7684\u200b\u89c4\u5219\u200b\u53ea\u200b\u9002\u7528\u200b\u4e8e\u200b\u4ee5\u4e0b\u200b\u516d\u79cd\u200b\u60c5\u51b5\u200b\uff1a</p> <p><code>I</code>\u200b\u53ef\u4ee5\u200b\u653e\u5728\u200b\u00a0<code>V</code>\u00a0(5) \u200b\u548c\u200b\u00a0<code>X</code>\u00a0(10) \u200b\u7684\u200b\u5de6\u8fb9\u200b\uff0c\u200b\u6765\u200b\u8868\u793a\u200b 4 \u200b\u548c\u200b 9\u3002 <code>X</code>\u200b\u53ef\u4ee5\u200b\u653e\u5728\u200b\u00a0<code>L</code>\u00a0(50) \u200b\u548c\u200b\u00a0<code>C</code>\u00a0(100) \u200b\u7684\u200b\u5de6\u8fb9\u200b\uff0c\u200b\u6765\u200b\u8868\u793a\u200b 40 \u200b\u548c\u200b\u00a090\u3002\u00a0 <code>C</code>\u200b\u53ef\u4ee5\u200b\u653e\u5728\u200b\u00a0<code>D</code>\u00a0(500) \u200b\u548c\u200b\u00a0<code>M</code>\u00a0(1000) \u200b\u7684\u200b\u5de6\u8fb9\u200b\uff0c\u200b\u6765\u200b\u8868\u793a\u200b\u00a0400 \u200b\u548c\u200b\u00a0900\u3002 \u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u7f57\u9a6c\u6570\u5b57\u200b\uff0c\u200b\u5c06\u200b\u5176\u200b\u8f6c\u6362\u6210\u200b\u6574\u6570\u200b\u3002\u200b\u8f93\u5165\u200b\u786e\u4fdd\u200b\u5728\u200b 1\u00a0\u200b\u5230\u200b 3999 \u200b\u7684\u200b\u8303\u56f4\u200b\u5185\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u00a01\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b:\u00a0\"III\"\n\u200b\u8f93\u51fa\u200b: 3\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a02\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b:\u00a0\"IV\"\n\u200b\u8f93\u51fa\u200b: 4\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a03\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b:\u00a0\"IX\"\n\u200b\u8f93\u51fa\u200b: 9\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a04\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b:\u00a0\"LVIII\"\n\u200b\u8f93\u51fa\u200b: 58\n\u200b\u89e3\u91ca\u200b: L = 50, V= 5, III = 3.\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a05\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b:\u00a0\"MCMXCIV\"\n\u200b\u8f93\u51fa\u200b: 1994\n\u200b\u89e3\u91ca\u200b: M = 1000, CM = 900, XC = 90, IV = 4.\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <p>\u200b\u9898\u76ee\u200b\u6240\u200b\u7ed9\u200b\u6d4b\u8bd5\u7528\u4f8b\u200b\u7686\u200b\u7b26\u5408\u200b\u7f57\u9a6c\u6570\u5b57\u200b\u4e66\u5199\u200b\u89c4\u5219\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u51fa\u73b0\u200b\u8de8\u4f4d\u200b\u7b49\u200b\u60c5\u51b5\u200b\u3002</p> <p><code>IC</code>\u200b\u548c\u200b<code>IM</code>\u200b\u8fd9\u6837\u200b\u7684\u200b\u4f8b\u5b50\u200b\u5e76\u200b\u4e0d\u200b\u7b26\u5408\u200b\u9898\u76ee\u200b\u8981\u6c42\u200b\uff0c49 \u200b\u5e94\u8be5\u200b\u5199\u4f5c\u200b<code>XLIX</code>\uff0c999 \u200b\u5e94\u8be5\u200b\u5199\u4f5c\u200b <code>CMXCIX</code>\u3002</p> <p>\u200b\u5173\u4e8e\u200b\u7f57\u9a6c\u6570\u5b57\u200b\u7684\u200b\u8be6\u5c3d\u200b\u4e66\u5199\u200b\u89c4\u5219\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b\u7f57\u9a6c\u6570\u5b57\u200b - Mathematics\u3002</p> <p>Reference</p>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/13/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u9010\u4f4d\u200b\u5904\u7406\u200b\u5373\u53ef\u200b\uff0c\u200b\u6ce8\u610f\u200b\u5c0f\u200b\u7684\u200b\u6570\u5b57\u200b\u5728\u200b\u5927\u200b\u7684\u200b\u6570\u5b57\u200b\u5de6\u8fb9\u200b\u7684\u200b\u7279\u6b8a\u200b\u60c5\u51b5\u200b</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>int romanToInt(char * s){\n    char *cur = s;\n    int ret = 0;\n    while(*cur)\n    {\n        switch(*cur)\n        {\n            case 'I':\n                if (*(cur + 1) == 'V' || *(cur + 1) == 'X')\n                    ret -= 1;\n                else\n                    ret += 1;\n                break;\n            case 'V':\n                ret += 5;\n                break;\n            case 'X':\n                if (*(cur + 1) == 'L' || *(cur + 1) == 'C')\n                    ret -= 10;\n                else\n                    ret += 10;\n                break;\n            case 'L':\n                ret += 50;\n                break;\n            case 'C':\n                if (*(cur + 1) == 'D' || *(cur + 1) == 'M')\n                    ret -= 100;\n                else\n                    ret += 100;\n                break;\n            case 'M':\n                ret += 500;\n            case 'D':\n                ret += 500;\n        }\n        cur++;\n    }\n    return ret;\n}\n</code></pre>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/1300/","title":"1300. \u200b\u8f6c\u53d8\u200b\u6570\u7ec4\u200b\u540e\u200b\u6700\u200b\u63a5\u8fd1\u200b\u76ee\u6807\u503c\u200b\u7684\u200b\u6570\u7ec4\u200b\u548c","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/1300/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b\u00a0<code>arr</code> \u200b\u548c\u200b\u4e00\u4e2a\u200b\u76ee\u6807\u503c\u200b\u00a0<code>target</code> \uff0c\u200b\u8bf7\u200b\u4f60\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u00a0<code>value</code>\u00a0\uff0c\u200b\u4f7f\u5f97\u200b\u5c06\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u6240\u6709\u200b\u5927\u4e8e\u200b\u00a0<code>value</code> \u200b\u7684\u200b\u503c\u200b\u53d8\u6210\u200b\u00a0<code>value</code> \u200b\u540e\u200b\uff0c\u200b\u6570\u7ec4\u200b\u7684\u200b\u548c\u200b\u6700\u200b\u63a5\u8fd1\u200b <code>target</code> \uff08\u200b\u6700\u200b\u63a5\u8fd1\u200b\u8868\u793a\u200b\u4e24\u8005\u200b\u4e4b\u5dee\u200b\u7684\u200b\u7edd\u5bf9\u503c\u200b\u6700\u5c0f\u200b\uff09\u3002</p> <p>\u200b\u5982\u679c\u200b\u6709\u200b\u591a\u79cd\u200b\u4f7f\u5f97\u200b\u548c\u200b\u6700\u200b\u63a5\u8fd1\u200b\u00a0<code>target</code>\u00a0\u200b\u7684\u200b\u65b9\u6848\u200b\uff0c\u200b\u8bf7\u200b\u4f60\u200b\u8fd4\u56de\u200b\u8fd9\u4e9b\u200b\u6574\u6570\u200b\u4e2d\u200b\u7684\u200b\u6700\u5c0f\u503c\u200b\u3002</p> <p>\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u7b54\u6848\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u662f\u200b\u00a0<code>arr</code> \u200b\u4e2d\u200b\u7684\u200b\u6570\u5b57\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aarr = [4,9,3], target = 10\n\u200b\u8f93\u51fa\u200b\uff1a3\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u5f53\u200b\u9009\u62e9\u200b value \u200b\u4e3a\u200b 3 \u200b\u65f6\u200b\uff0c\u200b\u6570\u7ec4\u200b\u4f1a\u200b\u53d8\u6210\u200b [3, 3, 3]\uff0c\u200b\u548c\u200b\u4e3a\u200b 9 \uff0c\u200b\u8fd9\u200b\u662f\u200b\u6700\u200b\u63a5\u8fd1\u200b target \u200b\u7684\u200b\u65b9\u6848\u200b\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aarr = [2,3,5], target = 10\n\u200b\u8f93\u51fa\u200b\uff1a5\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aarr = [60864,25176,27249,21296,20204], target = 56803\n\u200b\u8f93\u51fa\u200b\uff1a11361\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= arr.length &lt;= 10^4</code></li> <li><code>1 &lt;= arr[i], target &lt;= 10^5</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/1300/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u5728\u200b\u5f85\u67e5\u200b\u533a\u95f4\u200b\\((lo, hi)\\)\u200b\u4e2d\u200b\u786e\u5b9a\u200b\u4e09\u7b49\u5206\u200b\u70b9\u200b\\(x_1, x_2 (x_1 &lt; x_2)\\)\uff0c\u200b\u5206\u522b\u200b\u8ba1\u7b97\u200b\u4e24\u4e2a\u200b\u4e09\u7b49\u5206\u200b\u70b9\u5904\u200b\u7684\u200b\u5dee\u503c\u200b\u3002\u200b\u8bbe\u200b\\(f(x)\\)\u200b\u4e3a\u200b\u5c06\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u5927\u4e8e\u200b\\(x\\)\u200b\u7684\u200b\u6570\u503c\u200b\u8f6c\u53d8\u200b\u4e3a\u200b\\(x\\)\u200b\u540e\u200b\u6570\u7ec4\u200b\u6c42\u548c\u200b\u4e0e\u200b\u76ee\u6807\u503c\u200b\u4e4b\u5dee\u200b\u7684\u200b\u7edd\u5bf9\u503c\u200b\u3002</p> <ul> <li>\u200b\u5f53\u200b\\(f(x_1) &lt; f(x_2)\\)\u200b\u65f6\u200b\uff0c\u200b\u5c06\u200b\u5f85\u67e5\u200b\u533a\u95f4\u200b\u7f29\u51cf\u200b\u4e3a\u200b\\((lo, x_2)\\)</li> <li>\u200b\u5f53\u200b\\(f(x_1) &gt; f(x_2)\\)\u200b\u65f6\u200b\uff0c\u200b\u5c06\u200b\u5f85\u67e5\u200b\u533a\u95f4\u200b\u7f29\u51cf\u200b\u4e3a\u200b\\((x_1, hi)\\)</li> </ul> <p>\\(f(x)\\)\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b+\u200b\u9884\u5904\u7406\u200b\u5728\u200b\\(\\mathcal O(\\log N)\\)\u200b\u7684\u200b\u65f6\u95f4\u200b\u5185\u200b\u8ba1\u7b97\u200b\u5b8c\u6210\u200b\u3002\u200b\u9884\u5904\u7406\u200b\u9700\u8981\u200b\u82b1\u8d39\u200b\\(\\mathcal O(N)\\)\u200b\u7684\u200b\u65f6\u95f4\u200b\u3002\u200b\u6392\u5e8f\u200b\u9700\u8981\u200b\u82b1\u8d39\u200b\\(\\mathcal O(N\\log N)\\)\u200b\u7684\u200b\u65f6\u95f4\u200b\u3002\u200b\u9700\u8981\u200b\\(\\mathcal O(\\log N)\\)\u200b\u6b21\u200b\u4e09\u5206\u200b\u67e5\u627e\u200b\u3002\u200b\u56e0\u6b64\u200b\u603b\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(\\mathcal O(N\\log N)\\)\uff08\u200b\u9884\u5904\u7406\u200b\u9636\u6bb5\u200b\uff09</p> <pre><code>#define ABS(x) ((x) &gt; 0 ? (x) : -(x))\n\nint cmp(const void *a, const void *b)\n{\n    return *((int *)a) - *((int *)b);\n}\n\nint bSearch(int *arr, int target, int lo, int hi)\n{\n    int mid;\n    while (lo &lt; hi)\n    {\n        mid = (lo + hi) &gt;&gt; 1;\n        if (arr[mid] &lt; target)\n            lo = mid + 1;\n        else\n            hi = mid;\n    }\n    return lo - 1;\n}\n\nint test(int *arr, int arrSize, int target, int val, int *presum)\n{\n    int i = bSearch(arr, val, 0, arrSize), ret = val * (arrSize - i - 1) - target;\n    if (i &gt;= 0)\n        ret += presum[i];\n    return ABS(ret);\n}\n\nint tSearch(int *arr, int arrSize, int target, int lo, int hi, int *presum)\n{\n    int left, right;\n    while (hi - lo &gt; 2)\n    {\n        left = (2 * lo + hi) / 3;\n        right = (2 * hi + lo) / 3;\n        if (test(arr, arrSize, target, left, presum) &lt;= test(arr, arrSize, target, right, presum))\n            hi = right;\n        else\n            lo = left;\n    }\n    return (2 * hi + lo) / 3;\n}\n\nint findBestValue(int* arr, int arrSize, int target){\n    int i = 0, presum[arrSize];\n    qsort(arr, arrSize, sizeof(int), cmp);\n    presum[0] = arr[0];\n    for (i = 1; i &lt; arrSize; i++)\n        presum[i] = presum[i - 1] + arr[i];\n\n    return tSearch(arr, arrSize, target, -1, arr[arrSize - 1] + 1, presum);\n}\n</code></pre>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/136/","title":"136. \u200b\u53ea\u200b\u51fa\u73b0\u200b\u4e00\u6b21\u200b\u7684\u200b\u6570\u5b57","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u4f4d\u8fd0\u7b97","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/136/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u975e\u7a7a\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b\uff0c\u200b\u9664\u4e86\u200b\u67d0\u4e2a\u200b\u5143\u7d20\u200b\u53ea\u200b\u51fa\u73b0\u200b\u4e00\u6b21\u200b\u4ee5\u5916\u200b\uff0c\u200b\u5176\u4f59\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u5747\u200b\u51fa\u73b0\u200b\u4e24\u6b21\u200b\u3002\u200b\u627e\u51fa\u200b\u90a3\u4e2a\u200b\u53ea\u200b\u51fa\u73b0\u200b\u4e86\u200b\u4e00\u6b21\u200b\u7684\u200b\u5143\u7d20\u200b\u3002</p> <p>\u200b\u8bf4\u660e\u200b\uff1a</p> <p>\u200b\u4f60\u200b\u7684\u200b\u7b97\u6cd5\u200b\u5e94\u8be5\u200b\u5177\u6709\u200b\u7ebf\u6027\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u3002 \u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4e0d\u200b\u4f7f\u7528\u200b\u989d\u5916\u200b\u7a7a\u95f4\u200b\u6765\u200b\u5b9e\u73b0\u200b\u5417\u200b\uff1f</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: [2,2,1]\n\u200b\u8f93\u51fa\u200b: 1\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a02\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: [4,1,2,1,2]\n\u200b\u8f93\u51fa\u200b: 4\n</code></pre> <p>Reference</p>","tags":["\u4f4d\u8fd0\u7b97","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/136/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u5f02\u6216\u200b\u8fd0\u7b97\u200b\u5177\u6709\u200b\u5982\u4e0b\u200b\u6027\u8d28\u200b\uff1a</p> <ol> <li>\u200b\u4ea4\u6362\u5f8b\u200b\uff1a<code>a ^ b = b ^ a</code></li> <li>\u200b\u7ed3\u5408\u5f8b\u200b\uff1a<code>(a ^ b) ^ c = a ^ (b ^ c)</code></li> <li>\u200b\u82e5\u200b<code>a ^ b = c</code>\uff0c\u200b\u5219\u200b<code>a ^ c = b</code>\u3001<code>b ^ c = a</code></li> <li><code>a ^ a = 0</code></li> </ol> <p>\u200b\u6839\u636e\u200b\u6027\u8d28\u200b1\u30012\uff0c\u200b\u5f02\u6216\u200b\u8fd0\u7b97\u200b\u7684\u200b\u7ed3\u679c\u200b\u4e0e\u200b\u53c2\u4e0e\u200b\u8fd0\u7b97\u200b\u7684\u200b\u6240\u6709\u200b\u6570\u503c\u200b\u7684\u200b\u6392\u5217\u200b\u987a\u5e8f\u200b\u65e0\u5173\u200b\u3002\u200b\u6839\u636e\u200b\u6027\u8d28\u200b3\u30014\uff0c\u200b\u76f8\u540c\u200b\u6574\u6570\u200b\u7684\u200b\u5f02\u6216\u200b\u503c\u4e3a\u200b0\uff0c0\u200b\u4e0e\u200b\u4efb\u4f55\u200b\u6570\u200b\u5f02\u6216\u200b\u4ecd\u4e3a\u200b\u8be5\u6570\u200b\u3002\u200b\u56e0\u6b64\u200b\u5c06\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u5404\u200b\u5143\u7d20\u200b\u8fdb\u884c\u200b\u6309\u4f4d\u200b\u5f02\u6216\u200b\uff0c\u200b\u5f97\u5230\u200b\u7684\u200b\u7ed3\u679c\u200b\u5373\u200b\u4e3a\u200b\u53ea\u200b\u51fa\u73b0\u200b\u4e00\u6b21\u200b\u7684\u200b\u6570\u503c\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>int singleNumber(int* nums, int numsSize){\n    int ret = 0, i = 0;\n    for (i = 0; i &lt; numsSize; i++)\n        ret ^= nums[i];\n    return ret;\n}\n</code></pre>","tags":["\u4f4d\u8fd0\u7b97","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/14/","title":"14. \u200b\u6700\u957f\u200b\u516c\u5171\u200b\u524d\u7f00","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/14/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7f16\u5199\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u6765\u200b\u67e5\u627e\u200b\u5b57\u7b26\u4e32\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u6700\u957f\u200b\u516c\u5171\u200b\u524d\u7f00\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u4e0d\u200b\u5b58\u5728\u200b\u516c\u5171\u200b\u524d\u7f00\u200b\uff0c\u200b\u8fd4\u56de\u200b\u7a7a\u200b\u5b57\u7b26\u4e32\u200b<code>\"\"</code>\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u00a01\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: [\"flower\",\"flow\",\"flight\"]\n\u200b\u8f93\u51fa\u200b: \"fl\"\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a02\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: [\"dog\",\"racecar\",\"car\"]\n\u200b\u8f93\u51fa\u200b: \"\"\n\u200b\u89e3\u91ca\u200b: \u200b\u8f93\u5165\u200b\u4e0d\u200b\u5b58\u5728\u200b\u516c\u5171\u200b\u524d\u7f00\u200b\u3002\n</code></pre> <p>\u200b\u8bf4\u660e\u200b\uff1a</p> <p>\u200b\u6240\u6709\u200b\u8f93\u5165\u200b\u53ea\u200b\u5305\u542b\u200b\u5c0f\u5199\u5b57\u6bcd\u200b<code>a-z</code>\u3002</p> <p>Reference</p>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/14/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u5728\u200b\u6bd4\u8f83\u200b\u524d\u7f00\u200b\u65f6\u200b\u53ea\u200b\u9700\u8981\u200b\u5c06\u200b\u524d\u200b n \u200b\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u516c\u5171\u200b\u524d\u7f00\u200b\u4e0e\u200b\u7b2c\u200b n+1 \u200b\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u8fdb\u884c\u200b\u6bd4\u8f83\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>char *compareTwo(char *str1, char *str2)\n{\n    char *cur1 = str1, *cur2 = str2, *ret = NULL;\n    int len = 0;\n    while (*cur1 &amp;&amp; *cur2)\n    {\n        if (*cur1 != *cur2)\n            break;\n        else\n            len++;\n        cur1++;\n        cur2++;\n    }\n    ret = (char *)memset(malloc(sizeof(char) * (len + 1)), 0, sizeof(char) * (len + 1));\n    return memcpy(ret, str1, sizeof(char) * len);\n}\n\nchar * longestCommonPrefix(char ** strs, int strsSize){\n    if (strsSize == 0)\n        return memset(malloc(sizeof(char)), 0, sizeof(char));\n    if (strsSize == 1)\n        return strs[0];\n    if (strsSize == 2)\n        return compareTwo(strs[0], strs[1]);\n    int rec_size = (strsSize + 1) &gt;&gt; 1, i = 0;\n    char **rec = (char **)memset(malloc(sizeof(char *) * rec_size), 0, sizeof(char *) * rec_size);\n    for (i = 0; i &lt; strsSize &gt;&gt; 1; i++)\n        rec[i] = compareTwo(strs[2 * i], strs[2 * i + 1]);\n    if (strsSize &amp; 1)\n        rec[rec_size - 1] = strs[strsSize - 1];\n    return longestCommonPrefix(rec, rec_size);\n}\n</code></pre>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/150/","title":"150. \u200b\u9006\u200b\u6ce2\u5170\u200b\u8868\u8fbe\u5f0f\u200b\u6c42\u503c","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6808"]},{"location":"coding/leetcode/150/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u6839\u636e\u200b\u9006\u200b\u6ce2\u5170\u200b\u8868\u793a\u6cd5\u200b\uff0c\u200b\u6c42\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u503c\u200b\u3002</p> <p>\u200b\u6709\u6548\u200b\u7684\u200b\u7b97\u7b26\u200b\u5305\u62ec\u200b<code>+</code>\u3001<code>-</code>\u3001<code>*</code>\u3001<code>/</code>\u3002\u200b\u6bcf\u4e2a\u200b\u8fd0\u7b97\u200b\u5bf9\u8c61\u200b\u53ef\u4ee5\u200b\u662f\u200b\u6574\u6570\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u662f\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u9006\u200b\u6ce2\u5170\u200b\u8868\u8fbe\u5f0f\u200b\u3002</p> <p>\u200b\u8bf4\u660e\u200b\uff1a</p> <ul> <li>\u200b\u6574\u6570\u200b\u9664\u6cd5\u200b\u53ea\u200b\u4fdd\u7559\u200b\u6574\u6570\u200b\u90e8\u5206\u200b\u3002</li> <li>\u200b\u7ed9\u5b9a\u200b\u9006\u200b\u6ce2\u5170\u200b\u8868\u8fbe\u5f0f\u200b\u603b\u662f\u200b\u6709\u6548\u200b\u7684\u200b\u3002\u200b\u6362\u53e5\u8bdd\u8bf4\u200b\uff0c\u200b\u8868\u8fbe\u5f0f\u200b\u603b\u4f1a\u200b\u5f97\u51fa\u200b\u6709\u6548\u200b\u6570\u503c\u200b\u4e14\u200b\u4e0d\u200b\u5b58\u5728\u200b\u9664\u6570\u200b\u4e3a\u200b <code>0</code> \u200b\u7684\u200b\u60c5\u51b5\u200b\u3002</li> </ul> <p>\u200b\u793a\u4f8b\u200b\u00a01\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1atokens = [\"2\",\"1\",\"+\",\"3\",\"*\"]\n\u200b\u8f93\u51fa\u200b\uff1a9\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u8be5\u200b\u7b97\u5f0f\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u5e38\u89c1\u200b\u7684\u200b\u4e2d\u7f00\u200b\u7b97\u672f\u200b\u8868\u8fbe\u5f0f\u200b\u4e3a\u200b\uff1a((2 + 1) * 3) = 9\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a02\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1atokens = [\"4\",\"13\",\"5\",\"/\",\"+\"]\n\u200b\u8f93\u51fa\u200b\uff1a6\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u8be5\u200b\u7b97\u5f0f\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u5e38\u89c1\u200b\u7684\u200b\u4e2d\u7f00\u200b\u7b97\u672f\u200b\u8868\u8fbe\u5f0f\u200b\u4e3a\u200b\uff1a(4 + (13 / 5)) = 6\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a03\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1atokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\n\u200b\u8f93\u51fa\u200b\uff1a22\n\u200b\u89e3\u91ca\u200b\uff1a\n\u200b\u8be5\u200b\u7b97\u5f0f\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u5e38\u89c1\u200b\u7684\u200b\u4e2d\u7f00\u200b\u7b97\u672f\u200b\u8868\u8fbe\u5f0f\u200b\u4e3a\u200b\uff1a\n  ((10 * (6 / ((9 + 3) * -11))) + 17) + 5\n= ((10 * (6 / (12 * -11))) + 17) + 5\n= ((10 * (6 / -132)) + 17) + 5\n= ((10 * 0) + 17) + 5\n= (0 + 17) + 5\n= 17 + 5\n= 22\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= tokens.length &lt;= 10^4</code></li> <li><code>tokens[i]</code> \u200b\u8981\u4e48\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7b97\u7b26\u200b\uff08<code>\"+\"</code>\u3001<code>\"-\"</code>\u3001<code>\"*\"</code> \u200b\u6216\u200b <code>\"/\"</code>\uff09\uff0c\u200b\u8981\u4e48\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5728\u200b\u8303\u56f4\u200b <code>[-200, 200]</code> \u200b\u5185\u200b\u7684\u200b\u6574\u6570\u200b</li> </ul> <p>\u200b\u9006\u200b\u6ce2\u5170\u200b\u8868\u8fbe\u5f0f\u200b\uff1a</p> <p>\u200b\u9006\u200b\u6ce2\u5170\u200b\u8868\u8fbe\u5f0f\u200b\u662f\u200b\u4e00\u79cd\u200b\u540e\u7f00\u200b\u8868\u8fbe\u5f0f\u200b\uff0c\u200b\u6240\u8c13\u200b\u540e\u7f00\u200b\u5c31\u662f\u6307\u200b\u7b97\u7b26\u200b\u5199\u200b\u5728\u200b\u540e\u9762\u200b\u3002</p> <p>\u200b\u5e73\u5e38\u200b\u4f7f\u7528\u200b\u7684\u200b\u7b97\u5f0f\u200b\u5219\u200b\u662f\u200b\u4e00\u79cd\u200b\u4e2d\u7f00\u200b\u8868\u8fbe\u5f0f\u200b\uff0c\u200b\u5982\u200b <code>( 1 + 2 ) * ( 3 + 4 )</code> \u3002 \u200b\u8be5\u200b\u7b97\u5f0f\u200b\u7684\u200b\u9006\u200b\u6ce2\u5170\u200b\u8868\u8fbe\u5f0f\u200b\u5199\u6cd5\u200b\u4e3a\u200b <code>( ( 1 2 + ) ( 3 4 + ) * )</code> \u3002 \u200b\u9006\u200b\u6ce2\u5170\u200b\u8868\u8fbe\u5f0f\u200b\u4e3b\u8981\u200b\u6709\u200b\u4ee5\u4e0b\u200b\u4e24\u4e2a\u200b\u4f18\u70b9\u200b\uff1a</p> <p>\u200b\u53bb\u6389\u200b\u62ec\u53f7\u200b\u540e\u200b\u8868\u8fbe\u5f0f\u200b\u65e0\u200b\u6b67\u4e49\u200b\uff0c\u200b\u4e0a\u200b\u5f0f\u200b\u5373\u4fbf\u200b\u5199\u6210\u200b <code>1 2 + 3 4 + *</code> \u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4f9d\u636e\u200b\u6b21\u5e8f\u200b\u8ba1\u7b97\u200b\u51fa\u200b\u6b63\u786e\u200b\u7ed3\u679c\u200b\u3002 \u200b\u9002\u5408\u200b\u7528\u6808\u200b\u64cd\u4f5c\u200b\u8fd0\u7b97\u200b\uff1a\u200b\u9047\u5230\u200b\u6570\u5b57\u200b\u5219\u200b\u5165\u6808\u200b\uff1b\u200b\u9047\u5230\u200b\u7b97\u7b26\u200b\u5219\u200b\u53d6\u51fa\u200b\u6808\u9876\u200b\u4e24\u4e2a\u200b\u6570\u5b57\u200b\u8fdb\u884c\u200b\u8ba1\u7b97\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200b\u7ed3\u679c\u200b\u538b\u5165\u200b\u6808\u200b\u4e2d\u200b\u3002</p> <p>Reference</p>","tags":["\u6808"]},{"location":"coding/leetcode/150/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u6839\u636e\u200b\u9898\u76ee\u200b\u4e2d\u200b\u7684\u200b\u63d0\u793a\u200b\u5373\u53ef\u200b\uff1a</p> <p>\u200b\u9002\u5408\u200b\u7528\u6808\u200b\u64cd\u4f5c\u200b\u8fd0\u7b97\u200b\uff1a\u200b\u9047\u5230\u200b\u6570\u5b57\u200b\u5219\u200b\u5165\u6808\u200b\uff1b\u200b\u9047\u5230\u200b\u7b97\u7b26\u200b\u5219\u200b\u53d6\u51fa\u200b\u6808\u9876\u200b\u4e24\u4e2a\u200b\u6570\u5b57\u200b\u8fdb\u884c\u200b\u8ba1\u7b97\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200b\u7ed3\u679c\u200b\u538b\u5165\u200b\u6808\u200b\u4e2d\u200b\u3002</p> <pre><code>struct ListNode *getNode(int val, struct ListNode *next)\n{\n    struct ListNode *ret = (struct ListNode *)malloc(sizeof(struct ListNode));\n    ret-&gt;val = val;\n    ret-&gt;next = next;\n    return ret;\n}\nstruct ListNode *operand(struct ListNode *Stack, char operand)\n{\n    struct ListNode *cur1 = Stack, *cur2 = Stack-&gt;next, *temp = cur2-&gt;next;\n    int ret;\n    switch (operand)\n    {\n        case '+':\n            ret = cur1-&gt;val + cur2-&gt;val;\n            break;\n        case '-':\n            ret = cur2-&gt;val - cur1-&gt;val;\n            break;\n        case '*':\n            ret = cur1-&gt;val * cur2-&gt;val;\n            break;\n        case '/':\n            ret = cur2-&gt;val / cur1-&gt;val;\n            break;\n    }\n    free(cur1);\n    free(cur2);\n    return getNode(ret, temp);\n}\nint evalRPN(char ** tokens, int tokensSize){\n    struct ListNode *Stack = NULL;\n    int i = 0;\n    char *cur;\n    for (i = 0; i &lt; tokensSize; i++)\n    {\n        cur = tokens[i];\n        if (*cur &gt;= '0' &amp;&amp; *cur &lt;= '9' || strlen(cur) &gt; 1)\n            Stack = getNode(atoi(cur), Stack);\n        else\n            Stack = operand(Stack, *cur);\n    }\n    return Stack-&gt;val;\n}\n</code></pre>","tags":["\u6808"]},{"location":"coding/leetcode/155/","title":"155. \u200b\u6700\u5c0f\u200b\u6808","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6808","\u8bbe\u8ba1"]},{"location":"coding/leetcode/155/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u8bbe\u8ba1\u200b\u4e00\u4e2a\u200b\u652f\u6301\u200b <code>push</code>\uff0c<code>pop</code>\uff0c<code>top</code>\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u5e76\u200b\u80fd\u200b\u5728\u200b\u5e38\u6570\u200b\u65f6\u95f4\u200b\u5185\u200b\u68c0\u7d22\u200b\u5230\u200b\u6700\u5c0f\u200b\u5143\u7d20\u200b\u7684\u200b\u6808\u200b\u3002</p> <ul> <li><code>push(x)</code> \u2014\u2014 \u200b\u5c06\u200b\u5143\u7d20\u200b x \u200b\u63a8\u5165\u200b\u6808\u4e2d\u200b\u3002</li> <li><code>pop()</code>\u00a0\u2014\u2014 \u200b\u5220\u9664\u200b\u6808\u9876\u200b\u7684\u200b\u5143\u7d20\u200b\u3002</li> <li><code>top()</code>\u00a0\u2014\u2014 \u200b\u83b7\u53d6\u200b\u6808\u9876\u200b\u5143\u7d20\u200b\u3002</li> <li><code>getMin()</code> \u2014\u2014 \u200b\u68c0\u7d22\u200b\u6808\u4e2d\u200b\u7684\u200b\u6700\u5c0f\u200b\u5143\u7d20\u200b\u3002</li> </ul> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1a\n[\"MinStack\",\"push\",\"push\",\"push\",\"getMin\",\"pop\",\"top\",\"getMin\"]\n[[],[-2],[0],[-3],[],[],[],[]]\n\n\u200b\u8f93\u51fa\u200b\uff1a\n[null,null,null,null,-3,null,0,-2]\n\n\u200b\u89e3\u91ca\u200b\uff1a\nMinStack minStack = new MinStack();\nminStack.push(-2);\nminStack.push(0);\nminStack.push(-3);\nminStack.getMin();   --&gt; \u200b\u8fd4\u56de\u200b -3.\nminStack.pop();\nminStack.top();      --&gt; \u200b\u8fd4\u56de\u200b 0.\nminStack.getMin();   --&gt; \u200b\u8fd4\u56de\u200b -2.\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <p><code>pop</code>\u3001<code>top</code> \u200b\u548c\u200b <code>getMin</code> \u200b\u64cd\u4f5c\u200b\u603b\u662f\u200b\u5728\u200b \u200b\u975e\u7a7a\u6808\u200b \u200b\u4e0a\u200b\u8c03\u7528\u200b\u3002</p> <p>Reference</p>","tags":["\u6808","\u8bbe\u8ba1"]},{"location":"coding/leetcode/155/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u4f7f\u7528\u200b\u4e24\u4e2a\u200b\u57df\u200b\u5206\u522b\u200b\u5b58\u50a8\u200b\u5f53\u524d\u200b\u6570\u503c\u200b\u548c\u200b\u5f53\u524d\u200b\u6808\u4e2d\u200b\u7684\u200b\u6700\u5c0f\u503c\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>#define MIN(x, y) (x &lt; y ? x : y)\nstruct cell\n{\n    int val;\n    int curMin;\n};\ntypedef struct {\n    struct cell values[10000];\n    int top;\n} MinStack;\n/** initialize your data structure here. */\nMinStack *minStackCreate() \n{\n    return (MinStack *)memset(malloc(sizeof(MinStack)), 0, sizeof(MinStack));\n}\nvoid minStackPush(MinStack* obj, int x)\n{\n    obj-&gt;values[obj-&gt;top].val = x;\n    obj-&gt;values[obj-&gt;top].curMin = obj-&gt;top &gt; 0 ? MIN(x, obj-&gt;values[obj-&gt;top - 1].curMin) : x;\n    obj-&gt;top++;\n}\nvoid minStackPop(MinStack *obj)\n{\n    obj-&gt;top--;\n}\nint minStackTop(MinStack* obj)\n{\n    return obj-&gt;values[obj-&gt;top - 1].val;\n}\nint minStackGetMin(MinStack* obj)\n{\n    return obj-&gt;values[obj-&gt;top - 1].curMin;\n}\nvoid minStackFree(MinStack* obj)\n{\n    free(obj);\n}\n/**\n * Your MinStack struct will be instantiated and called as such:\n * MinStack* obj = minStackCreate();\n * minStackPush(obj, x);\n\n * minStackPop(obj);\n\n * int param_3 = minStackTop(obj);\n\n * int param_4 = minStackGetMin(obj);\n\n * minStackFree(obj);\n*/\n</code></pre>","tags":["\u6808","\u8bbe\u8ba1"]},{"location":"coding/leetcode/1561/","title":"1561. \u200b\u4f60\u200b\u53ef\u4ee5\u200b\u83b7\u5f97\u200b\u7684\u200b\u6700\u5927\u200b\u786c\u5e01\u200b\u6570\u76ee","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u8d2a\u5fc3","\u6570\u7ec4","\u6570\u5b66","\u535a\u5f08","\u6392\u5e8f"]},{"location":"coding/leetcode/1561/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u6709\u200b 3n \u200b\u5806\u200b\u6570\u76ee\u200b\u4e0d\u4e00\u200b\u7684\u200b\u786c\u5e01\u200b\uff0c\u200b\u4f60\u200b\u548c\u200b\u4f60\u200b\u7684\u200b\u670b\u53cb\u200b\u4eec\u200b\u6253\u7b97\u200b\u6309\u200b\u4ee5\u4e0b\u200b\u65b9\u5f0f\u200b\u5206\u200b\u786c\u5e01\u200b\uff1a</p> <ul> <li>\u200b\u6bcf\u200b\u4e00\u8f6e\u200b\u4e2d\u200b\uff0c\u200b\u4f60\u200b\u5c06\u200b\u4f1a\u200b\u9009\u51fa\u200b \u200b\u4efb\u610f\u200b 3 \u200b\u5806\u200b\u786c\u5e01\u200b\uff08\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u8fde\u7eed\u200b\uff09\u3002</li> <li>Alice \u200b\u5c06\u4f1a\u53d6\u200b\u8d70\u200b\u786c\u5e01\u200b\u6570\u91cf\u200b\u6700\u591a\u200b\u7684\u200b\u90a3\u200b\u4e00\u5806\u200b\u3002</li> <li>\u200b\u4f60\u200b\u5c06\u200b\u4f1a\u53d6\u200b\u8d70\u200b\u786c\u5e01\u200b\u6570\u91cf\u200b\u7b2c\u4e8c\u200b\u591a\u200b\u7684\u200b\u90a3\u200b\u4e00\u5806\u200b\u3002</li> <li>Bob \u200b\u5c06\u4f1a\u53d6\u200b\u8d70\u200b\u6700\u540e\u200b\u4e00\u5806\u200b\u3002</li> <li>\u200b\u91cd\u590d\u200b\u8fd9\u4e2a\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u76f4\u5230\u200b\u6ca1\u6709\u200b\u66f4\u200b\u591a\u200b\u786c\u5e01\u200b\u3002</li> </ul> <p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b <code>piles</code> \uff0c\u200b\u5176\u4e2d\u200b <code>piles[i]</code> \u200b\u662f\u200b\u7b2c\u200b <code>i</code> \u200b\u5806\u4e2d\u200b\u786c\u5e01\u200b\u7684\u200b\u6570\u76ee\u200b\u3002</p> <p>\u200b\u8fd4\u56de\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u83b7\u5f97\u200b\u7684\u200b\u6700\u5927\u200b\u786c\u5e01\u200b\u6570\u76ee\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>piles = [2,4,1,2,7,8]</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>9</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a\u200b\u9009\u51fa\u200b (2, 7, 8) \uff0cAlice \u200b\u53d6\u200b\u8d70\u200b 8 \u200b\u679a\u200b\u786c\u5e01\u200b\u7684\u200b\u90a3\u200b\u5806\u200b\uff0c\u200b\u4f60\u200b\u53d6\u200b\u8d70\u200b 7 \u200b\u679a\u200b\u786c\u5e01\u200b\u7684\u200b\u90a3\u200b\u5806\u200b\uff0cBob \u200b\u53d6\u200b\u8d70\u200b\u6700\u540e\u200b\u4e00\u5806\u200b\u3002</p> <p>\u200b\u9009\u51fa\u200b (1, 2, 4) , Alice \u200b\u53d6\u200b\u8d70\u200b 4 \u200b\u679a\u200b\u786c\u5e01\u200b\u7684\u200b\u90a3\u200b\u5806\u200b\uff0c\u200b\u4f60\u200b\u53d6\u200b\u8d70\u200b 2 \u200b\u679a\u200b\u786c\u5e01\u200b\u7684\u200b\u90a3\u200b\u5806\u200b\uff0cBob \u200b\u53d6\u200b\u8d70\u200b\u6700\u540e\u200b\u4e00\u5806\u200b\u3002</p> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u83b7\u5f97\u200b\u7684\u200b\u6700\u5927\u200b\u786c\u5e01\u200b\u6570\u76ee\u200b\uff1a7 + 2 = 9.</p> <p>\u200b\u8003\u8651\u200b\u53e6\u5916\u200b\u4e00\u79cd\u200b\u60c5\u51b5\u200b\uff0c\u200b\u5982\u679c\u200b\u9009\u51fa\u200b\u7684\u200b\u662f\u200b (1, 2, 8) \u200b\u548c\u200b (2, 4, 7) \uff0c\u200b\u4f60\u200b\u5c31\u200b\u53ea\u80fd\u200b\u5f97\u5230\u200b 2 + 4 = 6 \u200b\u679a\u200b\u786c\u5e01\u200b\uff0c\u200b\u8fd9\u200b\u4e0d\u662f\u200b\u6700\u4f18\u200b\u89e3\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>piles = [2,4,5]</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>4</code></p> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>piles = [9,8,7,6,5,1,2,3,4]</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>18</code></p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>3 &lt;= piles.length &lt;= 10^5</code></li> <li><code>piles.length % 3 == 0</code></li> <li><code>1 &lt;= piles[i] &lt;= 10^4</code></li> </ul> <p>Reference</p>","tags":["\u8d2a\u5fc3","\u6570\u7ec4","\u6570\u5b66","\u535a\u5f08","\u6392\u5e8f"]},{"location":"coding/leetcode/1561/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u5047\u8bbe\u200b<code>piles</code>\u200b\u6709\u5e8f\u200b\u3002\u200b\u7531\u4e8e\u200bBob\u200b\u53ea\u4f1a\u200b\u62ff\u5230\u200b\u6700\u5c11\u200b\u6570\u91cf\u200b\u7684\u200b\u786c\u5e01\u200b\uff0c\u200b\u548c\u200b\u6211\u4eec\u200b\u6700\u5927\u5316\u200b\u81ea\u5df1\u200b\u83b7\u5f97\u200b\u786c\u5e01\u200b\u6570\u91cf\u200b\u7684\u200b\u76ee\u6807\u200b\u4e0d\u200b\u51b2\u7a81\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5728\u200b\u6bcf\u6b21\u200b\u5206\u914d\u200b\u4e2d\u200b\uff0cBob\u200b\u53ea\u200b\u9700\u8981\u200b\u62ff\u8d70\u200b\u5269\u4f59\u200b\u5806\u4e2d\u200b\u6700\u5c0f\u200b\u7684\u200b\u6570\u91cf\u200b\u5373\u53ef\u200b\u3002\u200b\u8003\u8651\u200b\u4e00\u5171\u200b\u6709\u200b<code>A&lt;B&lt;...&lt;F</code>6\u200b\u5806\u200b\u786c\u5e01\u200b\u7684\u200b\u60c5\u51b5\u200b\uff1a</p> <ul> <li>Bob\u200b\u4f1a\u200b\u5728\u200b\u4e24\u8f6e\u200b\u6311\u9009\u200b\u4e2d\u200b\u5206\u522b\u200b\u62ff\u8d70\u200b\u6700\u5c11\u200b\u7684\u200b\u4e24\u5806\u200b<code>A</code>\u200b\u548c\u200b<code>B</code></li> <li>\u200b\u65e0\u8bba\u5982\u4f55\u200b\u6311\u9009\u200b\uff0cAlice\u200b\u603b\u4f1a\u200b\u62ff\u8d70\u200b\u6700\u591a\u200b\u7684\u200b\u4e00\u5806\u200b<code>F</code>\u3002\u200b\u540c\u7406\u200b\uff0c\u200b\u6211\u4eec\u200b\u603b\u4f1a\u200b\u62ff\u8d70\u200b\u7b2c\u56db\u200b\u591a\u200b\u7684\u200b\u4e00\u5806\u200b<code>C</code>\u3002</li> <li>\u200b\u5269\u4e0b\u200b\u5bf9\u200b\u6211\u4eec\u200b\u66f4\u4f18\u200b\u7684\u200b\u9009\u62e9\u200b\u65b9\u5f0f\u200b\u4e3a\u200b<code>E</code>\u200b\u7ed9\u200b\u6211\u4eec\u200b\uff0cAlice\u200b\u62ff\u200b<code>D</code>\u3002</li> </ul> <p>\u200b\u6269\u5c55\u200b\u5230\u200b\u66f4\u200b\u591a\u200b\u5806\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u6211\u4eec\u200b\u91c7\u53d6\u200b\u8d2a\u5fc3\u200b\u7b56\u7565\u200b\uff0c\u200b\u8ba9\u200bAlice\u200b\u62ff\u200b\u5f53\u524d\u200b\u6700\u5927\u200b\u7684\u200b\uff0c\u200b\u6211\u4eec\u200b\u62ff\u200b\u7b2c\u4e8c\u200b\u5927\u200b\u7684\u200b\uff0c\u200b\u6c38\u8fdc\u200b\u662f\u200b\u6700\u4f18\u200b\u7b56\u7565\u200b\u3002\u200b\u56e0\u4e3a\u200bAlice\u200b\u4e00\u65e6\u200b\u62ff\u8d70\u200b\u5f53\u524d\u200b\u6700\u5927\u200b\u7684\u200b\uff0c\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u6ca1\u6709\u200b\u5728\u200b\u540c\u200b\u4e00\u8f6e\u200b\u4e2d\u200b\u62ff\u8d70\u200b\u7b2c\u4e8c\u200b\u5927\u200b\u7684\u200b\uff0c\u200b\u90a3\u4e48\u200b\u7b2c\u4e8c\u200b\u5927\u200b\u7684\u200b\u4f1a\u200b\u53d8\u6210\u200b\u7b2c\u4e00\u200b\u5927\u200b\u7684\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c31\u200b\u518d\u4e5f\u200b\u62ff\u200b\u4e0d\u5230\u200b\u4e86\u200b\u3002\u200b\u8fd9\u6837\u200b\uff0c\u200b\u4ece\u200b\u6700\u5c0f\u200b\u7684\u200b\u5f00\u59cb\u200b\uff0c\u200b\u62ff\u200b\u53d6\u200b\u65b9\u6848\u200b\u4e3a\u200bBob\u200b\u62ff\u8d70\u200b\u5f00\u59cb\u200b\u7684\u200b<code>1 / 3</code>\uff0c\u200b\u4e4b\u540e\u200b\u6211\u4eec\u200b\u548c\u200bAlice\u200b\u8f6e\u6d41\u200b\u62ff\u8d70\u200b\u5269\u4e0b\u200b\u4e2d\u200b\u6700\u5c0f\u200b\u7684\u200b\u3002</p> <pre><code>class Solution:\n    def maxCoins(self, piles: List[int]) -&gt; int:\n        piles.sort()\n        return sum(piles[len(piles) // 3::2])\n</code></pre>","tags":["\u8d2a\u5fc3","\u6570\u7ec4","\u6570\u5b66","\u535a\u5f08","\u6392\u5e8f"]},{"location":"coding/leetcode/1603/","title":"1603. \u200b\u8bbe\u8ba1\u200b\u505c\u8f66\u200b\u7cfb\u7edf","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u8bbe\u8ba1"]},{"location":"coding/leetcode/1603/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u8bf7\u200b\u4f60\u200b\u7ed9\u200b\u4e00\u4e2a\u200b\u505c\u8f66\u573a\u200b\u8bbe\u8ba1\u200b\u4e00\u4e2a\u200b\u505c\u8f66\u200b\u7cfb\u7edf\u200b\u3002\u200b\u505c\u8f66\u573a\u200b\u603b\u5171\u200b\u6709\u200b\u4e09\u79cd\u200b\u4e0d\u540c\u200b\u5927\u5c0f\u200b\u7684\u200b\u8f66\u4f4d\u200b\uff1a\u200b\u5927\u200b\uff0c\u200b\u4e2d\u200b\u548c\u200b\u5c0f\u200b\uff0c\u200b\u6bcf\u79cd\u200b\u5c3a\u5bf8\u200b\u5206\u522b\u200b\u6709\u200b\u56fa\u5b9a\u200b\u6570\u76ee\u200b\u7684\u200b\u8f66\u4f4d\u200b\u3002</p> <p>\u200b\u8bf7\u200b\u4f60\u200b\u5b9e\u73b0\u200b\u00a0<code>ParkingSystem</code>\u00a0\u200b\u7c7b\u200b\uff1a</p> <p><code>ParkingSystem(int big, int medium, int small)``\u00a0\u200b\u521d\u59cb\u5316\u200b\u00a0ParkingSystem\u00a0\u200b\u7c7b\u200b\uff0c\u200b\u4e09\u4e2a\u200b\u53c2\u6570\u200b\u5206\u522b\u200b\u5bf9\u5e94\u200b\u6bcf\u79cd\u200b\u505c\u8f66\u4f4d\u200b\u7684\u200b\u6570\u76ee\u200b\u3002</code> <code>bool addCar(int carType)</code>\u00a0\u200b\u68c0\u67e5\u200b\u662f\u5426\u200b\u6709\u200b\u00a0<code>carType</code>\u00a0\u200b\u5bf9\u5e94\u200b\u7684\u200b\u505c\u8f66\u4f4d\u200b\u3002\u00a0<code>carType</code>\u00a0\u200b\u6709\u200b\u4e09\u79cd\u200b\u7c7b\u578b\u200b\uff1a\u200b\u5927\u200b\uff0c\u200b\u4e2d\u200b\uff0c\u200b\u5c0f\u200b\uff0c\u200b\u5206\u522b\u200b\u7528\u200b\u6570\u5b57\u200b\u00a0<code>1</code>\uff0c\u00a0<code>2</code>\u00a0\u200b\u548c\u200b\u00a0<code>3</code>\u00a0\u200b\u8868\u793a\u200b\u3002\u200b\u4e00\u8f86\u8f66\u200b\u53ea\u80fd\u200b\u505c\u200b\u5728\u200b\u00a0<code>carType</code>\u00a0\u200b\u5bf9\u5e94\u200b\u5c3a\u5bf8\u200b\u7684\u200b\u505c\u8f66\u4f4d\u200b\u4e2d\u200b\u3002\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u7a7a\u8f66\u200b\u4f4d\u200b\uff0c\u200b\u8bf7\u200b\u8fd4\u56de\u200b\u00a0<code>false</code>\u00a0\uff0c\u200b\u5426\u5219\u200b\u5c06\u200b\u8be5\u8f66\u200b\u505c\u5165\u200b\u8f66\u4f4d\u200b\u5e76\u200b\u8fd4\u56de\u200b\u00a0<code>true</code>\u00a0\u3002\u00a0</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1a\n[\"ParkingSystem\", \"addCar\", \"addCar\", \"addCar\", \"addCar\"]\n[[1, 1, 0], [1], [2], [3], [1]]\n\u200b\u8f93\u51fa\u200b\uff1a\n[null, true, true, false, false]\n</code></pre> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <pre><code>ParkingSystem parkingSystem = new ParkingSystem(1, 1, 0);\nparkingSystem.addCar(1); // \u200b\u8fd4\u56de\u200b true \uff0c\u200b\u56e0\u4e3a\u200b\u6709\u200b 1 \u200b\u4e2a\u7a7a\u200b\u7684\u200b\u5927\u200b\u8f66\u4f4d\u200b\nparkingSystem.addCar(2); // \u200b\u8fd4\u56de\u200b true \uff0c\u200b\u56e0\u4e3a\u200b\u6709\u200b 1 \u200b\u4e2a\u7a7a\u200b\u7684\u200b\u4e2d\u200b\u8f66\u4f4d\u200b\nparkingSystem.addCar(3); // \u200b\u8fd4\u56de\u200b false \uff0c\u200b\u56e0\u4e3a\u200b\u6ca1\u6709\u200b\u7a7a\u200b\u7684\u200b\u5c0f\u8f66\u200b\u4f4d\u200b\nparkingSystem.addCar(1); // \u200b\u8fd4\u56de\u200b false \uff0c\u200b\u56e0\u4e3a\u200b\u6ca1\u6709\u200b\u7a7a\u200b\u7684\u200b\u5927\u200b\u8f66\u4f4d\u200b\uff0c\u200b\u552f\u4e00\u200b\u4e00\u4e2a\u200b\u5927\u200b\u8f66\u4f4d\u200b\u5df2\u7ecf\u200b\u88ab\u200b\u5360\u636e\u200b\u4e86\u200b\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>0 &lt;= big, medium, small &lt;= 1000</code></li> <li><code>carType</code>\u00a0\u200b\u53d6\u503c\u200b\u4e3a\u200b\u00a0<code>1</code>\uff0c\u00a0<code>2</code>\u00a0\u200b\u6216\u200b\u00a0<code>3</code></li> <li>\u200b\u6700\u591a\u4f1a\u200b\u8c03\u7528\u200b\u00a0<code>addCar</code>\u00a0\u200b\u51fd\u6570\u200b\u00a01000\u00a0\u200b\u6b21\u200b</li> </ul> <p>Reference</p>","tags":["\u8bbe\u8ba1"]},{"location":"coding/leetcode/1603/#_2","title":"\u9898\u89e3","text":"<pre><code>typedef struct {\n    int cars[3];\n} ParkingSystem;\n\n\nParkingSystem* parkingSystemCreate(int big, int medium, int small) {\n    ParkingSystem *ret = (ParkingSystem *)malloc(sizeof(ParkingSystem));\n    ret-&gt;cars[0] = big;\n    ret-&gt;cars[1] = medium;\n    ret-&gt;cars[2] = small;\n    return ret;\n}\n\nbool parkingSystemAddCar(ParkingSystem* obj, int carType) {\n    if (obj-&gt;cars[carType - 1] == 0)\n        return false;\n    else\n    {\n        obj-&gt;cars[carType - 1]--;\n        return true;\n    }\n}\n\nvoid parkingSystemFree(ParkingSystem* obj) {\n    free(obj);\n}\n\n/**\n * Your ParkingSystem struct will be instantiated and called as such:\n * ParkingSystem* obj = parkingSystemCreate(big, medium, small);\n * bool param_1 = parkingSystemAddCar(obj, carType);\n\n * parkingSystemFree(obj);\n*/\n</code></pre>","tags":["\u8bbe\u8ba1"]},{"location":"coding/leetcode/17.21/","title":"\u9762\u8bd5\u9898\u200b 17.21. \u200b\u76f4\u65b9\u56fe\u200b\u7684\u200b\u6c34\u91cf","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u56f0\u96be\u200b</p>"},{"location":"coding/leetcode/17.21/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u76f4\u65b9\u56fe\u200b(\u200b\u4e5f\u200b\u79f0\u200b\u67f1\u72b6\u56fe\u200b)\uff0c\u200b\u5047\u8bbe\u200b\u6709\u4eba\u200b\u4ece\u200b\u4e0a\u9762\u200b\u6e90\u6e90\u4e0d\u65ad\u200b\u5730\u200b\u5012\u6c34\u200b\uff0c\u200b\u6700\u540e\u200b\u76f4\u65b9\u56fe\u200b\u80fd\u5b58\u200b\u591a\u5c11\u200b\u6c34\u91cf\u200b?\u200b\u76f4\u65b9\u56fe\u200b\u7684\u200b\u5bbd\u5ea6\u200b\u4e3a\u200b <code>1</code>\u3002</p> <p></p> <p>\u200b\u4e0a\u9762\u200b\u662f\u200b\u7531\u200b\u6570\u7ec4\u200b <code>[0,1,0,2,1,0,1,3,2,1,2,1]</code> \u200b\u8868\u793a\u200b\u7684\u200b\u76f4\u65b9\u56fe\u200b\uff0c\u200b\u5728\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u63a5\u200b <code>6</code> \u200b\u4e2a\u200b\u5355\u4f4d\u200b\u7684\u200b\u6c34\u200b\uff08\u200b\u84dd\u8272\u200b\u90e8\u5206\u200b\u8868\u793a\u200b\u6c34\u200b\uff09\u3002\u00a0\u200b\u611f\u8c22\u200b Marcos \u200b\u8d21\u732e\u200b\u6b64\u56fe\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b:</p> <pre><code>\u200b\u8f93\u5165\u200b: [0,1,0,2,1,0,1,3,2,1,2,1]\n\u200b\u8f93\u51fa\u200b: 6\n</code></pre> <p>Reference</p> <p>\u200b\u6ce8\u200b\uff1a\u200b\u672c\u9898\u200b\u4e0e\u200b42. \u200b\u63a5\u200b\u96e8\u6c34\u200b\u76f8\u540c\u200b\u3002</p>"},{"location":"coding/leetcode/17.21/#_2","title":"\u9898\u89e3","text":"<pre><code>#define MAX(x, y) ((x) &gt; (y) ? x : y)\n#define MIN(x, y) ((x) &lt; (y) ? x : y)\n#define ABS(x) ((x) &gt; 0 ? (x) : -(x))\nint trap(int* height, int heightSize){\n    int highest = 0, higher = 0, highestIndex = -1, higherIndex = -1, i = 0, ret = 0;\n    for (i = 0; i &lt; heightSize; i++)\n    {\n        if (height[i] &gt; highest)\n        {\n            higher = highest;\n            higherIndex = highestIndex;\n            highest = height[i];\n            highestIndex = i;\n        }\n        else if (height[i] &gt; higher)\n        {\n            higher = height[i];\n            higherIndex = i;\n        }\n    }\n    if (heightSize &lt;= 2 || higherIndex &lt; 0 || highestIndex &lt; 0)\n        return 0;\n    ret = higher * (ABS(higherIndex - highestIndex) - 1);\n    int left = MIN(higherIndex, highestIndex) + 1, right = MAX(higherIndex, highestIndex);\n    for (i = left; i &lt; right; i++)\n        ret -= height[i];\n    return ret + trap(height, left) + trap(height + right, heightSize - right);\n}\n</code></pre>"},{"location":"coding/leetcode/17/","title":"17. \u200b\u7535\u8bdd\u53f7\u7801\u200b\u7684\u200b\u5b57\u6bcd\u7ec4\u5408","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u9012\u5f52","\u5b57\u7b26\u4e32","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/17/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u4ec5\u200b\u5305\u542b\u200b\u6570\u5b57\u200b\u00a0<code>2-9</code>\u00a0\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u8fd4\u56de\u200b\u6240\u6709\u200b\u5b83\u200b\u80fd\u200b\u8868\u793a\u200b\u7684\u200b\u5b57\u6bcd\u7ec4\u5408\u200b\u3002\u200b\u7b54\u6848\u200b\u53ef\u4ee5\u200b\u6309\u200b \u200b\u4efb\u610f\u200b\u987a\u5e8f\u200b \u200b\u8fd4\u56de\u200b\u3002</p> <p>\u200b\u7ed9\u51fa\u200b\u6570\u5b57\u200b\u5230\u200b\u5b57\u6bcd\u200b\u7684\u200b\u6620\u5c04\u200b\u5982\u4e0b\u200b\uff08\u200b\u4e0e\u200b\u7535\u8bdd\u200b\u6309\u952e\u200b\u76f8\u540c\u200b\uff09\u3002\u200b\u6ce8\u610f\u200b 1 \u200b\u4e0d\u200b\u5bf9\u5e94\u200b\u4efb\u4f55\u200b\u5b57\u6bcd\u200b\u3002</p> <p></p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1adigits = \"23\"\n\u200b\u8f93\u51fa\u200b\uff1a[\"ad\",\"ae\",\"af\",\"bd\",\"be\",\"bf\",\"cd\",\"ce\",\"cf\"]\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1adigits = \"\"\n\u200b\u8f93\u51fa\u200b\uff1a[]\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1adigits = \"2\"\n\u200b\u8f93\u51fa\u200b\uff1a[\"a\",\"b\",\"c\"]\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li>0 &lt;= digits.length &lt;= 4</li> <li>digits[i] \u200b\u662f\u200b\u8303\u56f4\u200b ['2', '9'] \u200b\u7684\u200b\u4e00\u4e2a\u200b\u6570\u5b57\u200b\u3002</li> </ul> <p>Reference</p>","tags":["\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u9012\u5f52","\u5b57\u7b26\u4e32","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/17/#_2","title":"\u9898\u89e3","text":"<pre><code>/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nvoid dfs(char *digits, char **ret, int *subscript, char *current, int end, char **map)\n{\n    if (*digits == 0)\n    {\n        strcpy(ret[(*subscript)++], current);\n        return;\n    }\n    int i = 0, target = *digits - '2';\n    char *cur = map[target];\n    while(*cur)\n    {\n        current[end] = *cur;\n        dfs(digits + 1, ret, subscript, current, end + 1, map);\n        cur++;\n    }\n}\nchar ** letterCombinations(char * digits, int* returnSize){\n    *returnSize = 1;\n    char *cur = digits, len = 0, *charMap[] = {\"abc\", \"def\", \"ghi\", \"jkl\", \"mno\", \"pqrs\", \"tuv\", \"wxyz\"};\n    while(*cur)\n    {\n        *returnSize *= (*cur == '7' || *cur == '9') ? 4 : 3;\n        cur++;\n        len++;\n    }\n    if (len == 0)\n    {\n        *returnSize = 0;\n        return NULL;\n    }\n    char **ret = (char **)malloc(sizeof(char *) * *returnSize),\n         *current = (char *)memset(malloc(sizeof(char) * (len + 1)), 0, sizeof(char) * (len + 1));\n    for (int i = 0; i &lt; *returnSize; i++)\n        ret[i] = (int *)memset(malloc(sizeof(char) * (len + 1)), 0, sizeof(char) * (len + 1));\n    int subscript = 0;\n    dfs(digits, ret, &amp;subscript, current, 0, charMap);\n    return ret;\n}\n</code></pre>","tags":["\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u9012\u5f52","\u5b57\u7b26\u4e32","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/1835/","title":"1835. \u200b\u6240\u6709\u200b\u6570\u5bf9\u200b\u6309\u4f4d\u200b\u4e0e\u200b\u7ed3\u679c\u200b\u7684\u200b\u5f02\u6216\u200b\u548c","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u56f0\u96be\u200b</p>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/1835/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u5217\u8868\u200b\u7684\u200b \u200b\u5f02\u6216\u200b\u548c\u200b\uff08XOR sum\uff09\u200b\u6307\u5bf9\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u8fdb\u884c\u200b\u6309\u4f4d\u200b <code>XOR</code> \u200b\u8fd0\u7b97\u200b\u7684\u200b\u7ed3\u679c\u200b\u3002\u200b\u5982\u679c\u200b\u5217\u8868\u200b\u4e2d\u4ec5\u200b\u6709\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5176\u200b \u200b\u5f02\u6216\u200b\u548c\u200b \u200b\u5c31\u200b\u7b49\u4e8e\u200b\u8be5\u200b\u5143\u7d20\u200b\u3002</p> <ul> <li>\u200b\u4f8b\u5982\u200b\uff0c<code>[1,2,3,4]</code> \u200b\u7684\u200b \u200b\u5f02\u6216\u200b\u548c\u200b \u200b\u7b49\u4e8e\u200b <code>1 XOR 2 XOR 3 XOR 4 = 4</code> \uff0c\u200b\u800c\u200b <code>[3]</code> \u200b\u7684\u200b \u200b\u5f02\u6216\u200b\u548c\u200b \u200b\u7b49\u4e8e\u200b <code>3</code> \u3002</li> </ul> <p>\u200b\u7ed9\u200b\u4f60\u200b\u4e24\u4e2a\u200b\u4e0b\u6807\u200b \u200b\u4ece\u200b 0 \u200b\u5f00\u59cb\u200b \u200b\u8ba1\u6570\u200b\u7684\u200b\u6570\u7ec4\u200b <code>arr1</code> \u200b\u548c\u200b <code>arr2</code> \uff0c\u200b\u4e24\u200b\u6570\u7ec4\u200b\u5747\u200b\u7531\u200b\u975e\u8d1f\u200b\u6574\u6570\u200b\u7ec4\u6210\u200b\u3002</p> <p>\u200b\u6839\u636e\u200b\u6bcf\u4e2a\u200b\u00a0<code>(i, j)</code> \u200b\u6570\u5bf9\u200b\uff0c\u200b\u6784\u9020\u200b\u4e00\u4e2a\u200b\u7531\u200b <code>arr1[i] AND arr2[j]</code>\uff08\u200b\u6309\u4f4d\u200b <code>AND</code> \u200b\u8fd0\u7b97\u200b\uff09\u200b\u7ed3\u679c\u200b\u7ec4\u6210\u200b\u7684\u200b\u5217\u8868\u200b\u3002\u200b\u5176\u4e2d\u200b <code>0 &lt;= i &lt; arr1.length</code> \u200b\u4e14\u200b <code>0 &lt;= j &lt; arr2.length</code> \u3002</p> <p>\u200b\u8fd4\u56de\u200b\u4e0a\u8ff0\u200b\u5217\u8868\u200b\u7684\u200b \u200b\u5f02\u6216\u200b\u548c\u200b \u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aarr1 = [1,2,3], arr2 = [6,5]\n\u200b\u8f93\u51fa\u200b\uff1a0\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u5217\u8868\u200b = [1 AND 6, 1 AND 5, 2 AND 6, 2 AND 5, 3 AND 6, 3 AND 5] = [0,1,2,0,2,1] \uff0c\n\u200b\u5f02\u6216\u200b\u548c\u200b = 0 XOR 1 XOR 2 XOR 0 XOR 2 XOR 1 = 0 \u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aarr1 = [12], arr2 = [4]\n\u200b\u8f93\u51fa\u200b\uff1a4\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u5217\u8868\u200b = [12 AND 4] = [4] \uff0c\u200b\u5f02\u6216\u200b\u548c\u200b = 4 \u3002\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= arr1.length, arr2.length &lt;= 105</code></li> <li><code>0 &lt;= arr1[i], arr2[j] &lt;= 109</code></li> </ul> <p>Reference</p>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/1835/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u8bbe\u200b\u4e24\u4e2a\u200b\u6570\u5217\u200b\\(A=\\{a_i\\}_m\\)\u200b\u4e0e\u200b\\(B=\\{b_j\\}_n\\)\uff0c\u200b\u5e76\u200b\u4f7f\u7528\u200b\u8fd0\u7b97\u7b26\u200b\\(\\otimes\\)\u200b\u8868\u793a\u200b \u200b\u5f02\u6216\u200b \u200b\u64cd\u4f5c\u200b\uff0c\u200b\u4f7f\u7528\u200b\u8fd0\u7b97\u7b26\u200b\\(\\land\\)\u200b\u8868\u793a\u200b \u200b\u4e0e\u200b \u200b\u64cd\u4f5c\u200b\uff0c\u200b\u5219\u200b\u672c\u9898\u200b\u7684\u200b\u7ed3\u679c\u200b\u4e3a\u200b\uff1a</p> \\[ f(A, B) = \\bigotimes_{i=1}^{m} \\bigotimes_{j=1}^n a_i\\land b_j \\] <p>\u200b\u8003\u8651\u200b\u8868\u8fbe\u5f0f\u200b\\((a\\otimes b) \\land (a \\otimes c)\\)\uff1a</p> \\[ \\begin{aligned} &amp; (a\\otimes b) \\land (a \\otimes c) \\\\ \\Leftrightarrow &amp; ((a\\lor b)\\land (\\lnot a\\lor\\lnot b)) \\land ((a\\lor c)\\land (\\lnot a\\lor\\lnot c)) \\\\ \\Leftrightarrow &amp; (a\\lor b)\\land (\\lnot a\\lor\\lnot b) \\land (a\\lor c)\\land (\\lnot a\\lor\\lnot c) \\\\ \\Leftrightarrow &amp; (a\\land (b\\lor c)) \\land (a\\land (\\lnot b\\lor\\lnot c)) \\\\ \\Leftrightarrow &amp; a\\land (b\\otimes c) \\end{aligned} \\] <p>\u200b\u56e0\u6b64\u200b\uff0c\\(\\otimes\\)\u200b\u8fd0\u7b97\u200b\u5bf9\u200b\\(\\land\\)\u200b\u8fd0\u7b97\u200b\u6ee1\u8db3\u200b\u5206\u914d\u5f8b\u200b\uff0c\u200b\u6709\u200b\uff1a</p> \\[ \\begin{aligned} f(A, B) &amp;= \\bigotimes_{i=1}^{m} \\bigotimes_{j=1}^n a_i\\land b_j \\\\ &amp;= \\bigotimes_{i=1}^{m} \\left(a_{i}\\land\\bigotimes_{j=1}^n b_j\\right) \\\\ &amp;= \\left(\\bigotimes_{i=1}^{m} a_i\\right)\\land\\left(\\bigotimes_{j=1}^n b_j\\right) \\end{aligned} \\] <pre><code>int getXORSum(int* arr1, int arr1Size, int* arr2, int arr2Size){\n    int a = 0, b = 0, i = 0;\n    for (i = 0; i &lt; arr1Size; i++)\n        a ^= arr1[i];\n    for (i = 0; i &lt; arr2Size; i++)\n        b ^= arr2[i];\n    return a &amp; b;\n}\n</code></pre>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/189/","title":"189. \u200b\u65cb\u8f6c\u200b\u6570\u7ec4","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/189/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\uff0c\u200b\u5c06\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u5411\u200b\u53f3\u200b\u79fb\u52a8\u200b\u00a0k\u00a0\u200b\u4e2a\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u5176\u4e2d\u200b\u00a0k\u00a0\u200b\u662f\u975e\u200b\u8d1f\u6570\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: [1,2,3,4,5,6,7] \u200b\u548c\u200b k = 3\n\u200b\u8f93\u51fa\u200b: [5,6,7,1,2,3,4]\n\u200b\u89e3\u91ca\u200b:\n\u200b\u5411\u200b\u53f3\u200b\u65cb\u8f6c\u200b 1 \u200b\u6b65\u200b: [7,1,2,3,4,5,6]\n\u200b\u5411\u200b\u53f3\u200b\u65cb\u8f6c\u200b 2 \u200b\u6b65\u200b: [6,7,1,2,3,4,5]\n\u200b\u5411\u200b\u53f3\u200b\u65cb\u8f6c\u200b 3 \u200b\u6b65\u200b: [5,6,7,1,2,3,4]\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a02\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: [-1,-100,3,99] \u200b\u548c\u200b k = 2\n\u200b\u8f93\u51fa\u200b: [3,99,-1,-100]\n\u200b\u89e3\u91ca\u200b: \n\u200b\u5411\u200b\u53f3\u200b\u65cb\u8f6c\u200b 1 \u200b\u6b65\u200b: [99,-1,-100,3]\n\u200b\u5411\u200b\u53f3\u200b\u65cb\u8f6c\u200b 2 \u200b\u6b65\u200b: [3,99,-1,-100]\n</code></pre> <p>\u200b\u8bf4\u660e\u200b\uff1a</p> <ul> <li>\u200b\u5c3d\u53ef\u80fd\u200b\u60f3\u51fa\u200b\u66f4\u200b\u591a\u200b\u7684\u200b\u89e3\u51b3\u65b9\u6848\u200b\uff0c\u200b\u81f3\u5c11\u200b\u6709\u200b\u4e09\u79cd\u200b\u4e0d\u540c\u200b\u7684\u200b\u65b9\u6cd5\u200b\u53ef\u4ee5\u200b\u89e3\u51b3\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\u3002</li> <li>\u200b\u8981\u6c42\u200b\u4f7f\u7528\u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(O(1)\\)\u200b\u7684\u200b\u539f\u5730\u200b\u7b97\u6cd5\u200b\u3002</li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/189/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u5148\u200b\u53cd\u8f6c\u200b\u6574\u4e2a\u200b\u6570\u7ec4\u200b\uff0c\u200b\u518d\u200b\u4ee5\u200b\u7b2c\u200b\\(k\\)\u200b\u4e2a\u200b\u5143\u7d20\u200b\u4e3a\u754c\u200b\uff0c\u200b\u5206\u522b\u200b\u53cd\u8f6c\u200b\\(k\\)\u200b\u4e4b\u524d\u200b\u7684\u200b\u90e8\u5206\u200b\u4e0e\u200b\\(k\\)\u200b\u53ca\u200b\\(k\\)\u200b\u4e4b\u540e\u200b\u7684\u200b\u90e8\u5206\u200b\u5373\u53ef\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>void Reverse(int* nums, int numsSize)\n{\n    int head = 0, tail = numsSize - 1, temp = 0;\n    while(tail &gt; head)\n    {\n        temp = nums[head];\n        nums[head] = nums[tail];\n        nums[tail] = temp;\n        tail--;\n        head++;\n    }\n}\nvoid rotate(int* nums, int numsSize, int k){\n    if (numsSize &lt; 2)\n        return;\n    k %= numsSize;\n    Reverse(nums, numsSize);\n    Reverse(nums, k);\n    Reverse(nums + k, numsSize - k);\n}\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/19/","title":"19. \u200b\u5220\u9664\u200b\u94fe\u8868\u200b\u7684\u200b\u5012\u6570\u7b2c\u200bN\u200b\u4e2a\u200b\u8282\u70b9","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u94fe\u8868","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/19/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u94fe\u8868\u200b\uff0c\u200b\u5220\u9664\u200b\u94fe\u8868\u200b\u7684\u200b\u5012\u6570\u7b2c\u200b\u00a0n\u00a0\u200b\u4e2a\u200b\u8282\u70b9\u200b\uff0c\u200b\u5e76\u4e14\u200b\u8fd4\u56de\u200b\u94fe\u8868\u200b\u7684\u200b\u5934\u200b\u7ed3\u70b9\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <p>`` \u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u94fe\u8868\u200b: 1-&gt;2-&gt;3-&gt;4-&gt;5, \u200b\u548c\u200b n = 2.</p> <p>\u200b\u5f53\u200b\u5220\u9664\u200b\u4e86\u200b\u5012\u6570\u200b\u7b2c\u4e8c\u4e2a\u200b\u8282\u70b9\u200b\u540e\u200b\uff0c\u200b\u94fe\u8868\u200b\u53d8\u4e3a\u200b 1-&gt;2-&gt;3-&gt;5. ``</p> <p>\u200b\u8bf4\u660e\u200b\uff1a</p> <p>\u200b\u7ed9\u5b9a\u200b\u7684\u200b n\u00a0\u200b\u4fdd\u8bc1\u200b\u662f\u200b\u6709\u6548\u200b\u7684\u200b\u3002</p> <p>\u200b\u8fdb\u9636\u200b\uff1a</p> <p>\u200b\u4f60\u200b\u80fd\u200b\u5c1d\u8bd5\u200b\u4f7f\u7528\u200b\u4e00\u8d9f\u200b\u626b\u63cf\u200b\u5b9e\u73b0\u200b\u5417\u200b\uff1f</p> <p>Reference</p>","tags":["\u94fe\u8868","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/19/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u5148\u200b\u627e\u5230\u200b\u5012\u6570\u7b2c\u200b n \u200b\u4e2a\u200b\u8282\u70b9\u200b\uff0c\u200b\u518d\u200b\u8fdb\u884c\u200b\u5220\u9664\u200b</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\nstruct ListNode* removeNthFromEnd(struct ListNode* head, int n){\n    struct ListNode *cur = head, *temp = NULL;\n    int length = 1, i = 0;\n    while(cur-&gt;next != NULL)\n    {\n        cur = cur-&gt;next;\n        length++;\n    }\n    cur = head;\n    for (i = 0; i &lt; length - n - 1; i++)\n        cur = cur-&gt;next;\n    if (n == length)\n        return cur-&gt;next;\n    if (cur-&gt;next)\n    {\n        cur-&gt;next = cur-&gt;next-&gt;next;\n        return head;\n    }\n    return NULL;\n}\n</code></pre>","tags":["\u94fe\u8868","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/198/","title":"198. \u200b\u6253\u5bb6\u52ab\u820d","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/198/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u4f60\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e13\u4e1a\u200b\u7684\u200b\u5c0f\u5077\u200b\uff0c\u200b\u8ba1\u5212\u200b\u5077\u7a83\u200b\u6cbf\u8857\u200b\u7684\u200b\u623f\u5c4b\u200b\u3002\u200b\u6bcf\u95f4\u623f\u200b\u5185\u200b\u90fd\u200b\u85cf\u6709\u200b\u4e00\u5b9a\u200b\u7684\u200b\u73b0\u91d1\u200b\uff0c\u200b\u5f71\u54cd\u200b\u4f60\u200b\u5077\u7a83\u200b\u7684\u200b\u552f\u4e00\u200b\u5236\u7ea6\u200b\u56e0\u7d20\u200b\u5c31\u662f\u200b\u76f8\u90bb\u200b\u7684\u200b\u623f\u5c4b\u200b\u88c5\u6709\u200b\u76f8\u4e92\u200b\u8fde\u901a\u200b\u7684\u200b\u9632\u76d7\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u5982\u679c\u200b\u4e24\u95f4\u200b\u76f8\u90bb\u200b\u7684\u200b\u623f\u5c4b\u200b\u5728\u200b\u540c\u4e00\u200b\u665a\u4e0a\u200b\u88ab\u200b\u5c0f\u5077\u200b\u95ef\u5165\u200b\uff0c\u200b\u7cfb\u7edf\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u62a5\u8b66\u200b\u3002</p> <p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u4ee3\u8868\u200b\u6bcf\u4e2a\u200b\u623f\u5c4b\u200b\u5b58\u653e\u200b\u91d1\u989d\u200b\u7684\u200b\u975e\u8d1f\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u4f60\u200b \u200b\u4e0d\u200b\u89e6\u52a8\u200b\u8b66\u62a5\u200b\u88c5\u7f6e\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b \uff0c\u200b\u4e00\u591c\u200b\u4e4b\u5185\u200b\u80fd\u591f\u200b\u5077\u7a83\u200b\u5230\u200b\u7684\u200b\u6700\u9ad8\u200b\u91d1\u989d\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1a[1,2,3,1]\n\u200b\u8f93\u51fa\u200b\uff1a4\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u5077\u7a83\u200b 1 \u200b\u53f7\u200b\u623f\u5c4b\u200b (\u200b\u91d1\u989d\u200b = 1) \uff0c\u200b\u7136\u540e\u200b\u5077\u7a83\u200b 3 \u200b\u53f7\u200b\u623f\u5c4b\u200b (\u200b\u91d1\u989d\u200b = 3)\u3002\n\u00a0    \u200b\u5077\u7a83\u200b\u5230\u200b\u7684\u200b\u6700\u9ad8\u200b\u91d1\u989d\u200b = 1 + 3 = 4 \u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1a[2,7,9,3,1]\n\u200b\u8f93\u51fa\u200b\uff1a12\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u5077\u7a83\u200b 1 \u200b\u53f7\u200b\u623f\u5c4b\u200b (\u200b\u91d1\u989d\u200b = 2), \u200b\u5077\u7a83\u200b 3 \u200b\u53f7\u200b\u623f\u5c4b\u200b (\u200b\u91d1\u989d\u200b = 9)\uff0c\u200b\u63a5\u7740\u200b\u5077\u7a83\u200b 5 \u200b\u53f7\u200b\u623f\u5c4b\u200b (\u200b\u91d1\u989d\u200b = 1)\u3002\n\u00a0    \u200b\u5077\u7a83\u200b\u5230\u200b\u7684\u200b\u6700\u9ad8\u200b\u91d1\u989d\u200b = 2 + 9 + 1 = 12 \u3002\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <pre><code>0 &lt;= nums.length &lt;= 100\n0 &lt;= nums[i] &lt;= 400\n</code></pre> <p>Reference</p>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/198/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u52a8\u6001\u200b\u89c4\u5212\u200b\uff0c\u200b\u4ee4\u200b\\(f(i)\\)\u200b\u8868\u793a\u200b\u524d\u200b\\(i\\)\u200b\u4e2a\u200b\u623f\u95f4\u200b\u6240\u200b\u80fd\u200b\u83b7\u53d6\u200b\u7684\u200b\u6700\u5927\u200b\u91d1\u989d\u200b\uff0c\u200b\u5219\u200b\u6709\u200b\uff1a</p> \\[ f(i + 1) = \\max\\left\\{f(i), a_{i + 1} + f(i - 1)\\right\\} \\] <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>#define MAX(x, y) (x &gt; y ? x : y)\nint rob(int* nums, int numsSize){\n    if (numsSize &lt; 2)\n        return numsSize ? *nums : 0;\n    int *dp = (int *)memset(malloc(sizeof(int) * (numsSize)), 0, sizeof(int) * (numsSize)), i = 0;\n    dp[0] = *nums;\n    dp[1] = MAX(nums[0], nums[1]);\n    for (i = 2; i &lt; numsSize; i++)\n        dp[i] = MAX(dp[i-2] + nums[i], dp[i-1]);\n    return dp[numsSize-1];\n}\n</code></pre>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/2/","title":"2. \u200b\u4e24\u200b\u6570\u200b\u76f8\u52a0","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u9012\u5f52","\u94fe\u8868","\u6570\u5b66"]},{"location":"coding/leetcode/2/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e24\u4e2a\u200b\u00a0\u200b\u975e\u7a7a\u200b \u200b\u7684\u200b\u94fe\u8868\u200b\uff0c\u200b\u8868\u793a\u200b\u4e24\u4e2a\u200b\u975e\u8d1f\u200b\u7684\u200b\u6574\u6570\u200b\u3002\u200b\u5b83\u4eec\u200b\u6bcf\u4f4d\u200b\u6570\u5b57\u200b\u90fd\u200b\u662f\u200b\u6309\u7167\u200b\u00a0\u200b\u9006\u5e8f\u200b\u00a0\u200b\u7684\u200b\u65b9\u5f0f\u200b\u5b58\u50a8\u200b\u7684\u200b\uff0c\u200b\u5e76\u4e14\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u53ea\u80fd\u200b\u5b58\u50a8\u200b\u00a0\u200b\u4e00\u4f4d\u200b\u00a0\u200b\u6570\u5b57\u200b\u3002</p> <p>\u200b\u8bf7\u200b\u4f60\u200b\u5c06\u200b\u4e24\u4e2a\u200b\u6570\u200b\u76f8\u52a0\u200b\uff0c\u200b\u5e76\u200b\u4ee5\u200b\u76f8\u540c\u200b\u5f62\u5f0f\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u8868\u793a\u200b\u548c\u200b\u7684\u200b\u94fe\u8868\u200b\u3002</p> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5047\u8bbe\u200b\u9664\u4e86\u200b\u6570\u5b57\u200b <code>0</code> \u200b\u4e4b\u5916\u200b\uff0c\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u6570\u90fd\u200b\u4e0d\u4f1a\u200b\u4ee5\u200b <code>0</code>\u00a0\u200b\u5f00\u5934\u200b\u3002</p> <p></p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1al1 = [2,4,3], l2 = [5,6,4]\n\u200b\u8f93\u51fa\u200b\uff1a[7,0,8]\n\u200b\u89e3\u91ca\u200b\uff1a342 + 465 = 807.\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1al1 = [0], l2 = [0]\n\u200b\u8f93\u51fa\u200b\uff1a[0]\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1al1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n\u200b\u8f93\u51fa\u200b\uff1a[8,9,9,9,0,0,0,1]\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li>\u200b\u6bcf\u4e2a\u200b\u94fe\u8868\u200b\u4e2d\u200b\u7684\u200b\u8282\u70b9\u200b\u6570\u5728\u200b\u8303\u56f4\u200b <code>[1, 100]</code> \u200b\u5185\u200b</li> <li><code>0 &lt;= Node.val &lt;= 9</code></li> <li>\u200b\u9898\u76ee\u200b\u6570\u636e\u200b\u4fdd\u8bc1\u200b\u5217\u8868\u200b\u8868\u793a\u200b\u7684\u200b\u6570\u5b57\u200b\u4e0d\u200b\u542b\u200b\u524d\u5bfc\u200b\u96f6\u200b</li> </ul>","tags":["\u9012\u5f52","\u94fe\u8868","\u6570\u5b66"]},{"location":"coding/leetcode/2/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4f7f\u7528\u200b\u9012\u5f52\u200b\u7684\u200b\u601d\u60f3\u200b\uff0c\u200b\u5c06\u200b\u8ba1\u7b97\u200b\u52a0\u6cd5\u200b\u7684\u200b\u95ee\u9898\u200b\u5206\u89e3\u200b\u4e3a\u200b\u8ba1\u7b97\u200b\u6700\u540e\u200b\u4e00\u4f4d\u200b\u76f8\u52a0\u200b\u548c\u200b\u8ba1\u7b97\u200b\u5269\u4f59\u200b\u90e8\u5206\u200b\u76f8\u52a0\u200b\u4e24\u4e2a\u200b\u5b50\u200b\u95ee\u9898\u200b\u3002</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\nstruct ListNode *getNode(int val, struct ListNode *next)\n{\n    struct ListNode *ret = (struct ListNode *)malloc(sizeof(struct ListNode));\n    ret-&gt;val = val;\n    ret-&gt;next = next;\n    return ret;\n}\nstruct ListNode *recur(struct ListNode *l1, struct ListNode *l2, int flag)\n{\n    if (!l1)\n        return flag ? recur(getNode(1, NULL), l2, 0) : l2;\n    if (!l2)\n        return flag ? recur(getNode(1, NULL), l1, 0) : l1;\n    int ret = l1-&gt;val + l2-&gt;val + (flag ? 1 : 0);\n    return getNode(ret - (ret &gt;= 10 ? 10 : 0), recur(l1-&gt;next, l2-&gt;next, ret &gt;= 10));\n}\nstruct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2){\n    return recur(l1, l2, 0);\n}\n</code></pre> <p>Reference</p>","tags":["\u9012\u5f52","\u94fe\u8868","\u6570\u5b66"]},{"location":"coding/leetcode/20/","title":"20. \u200b\u6709\u6548\u200b\u7684\u200b\u62ec\u53f7","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6808","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/20/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u53ea\u200b\u5305\u62ec\u200b <code>'('</code>\uff0c<code>')'</code>\uff0c<code>'{'</code>\uff0c<code>'}'</code>\uff0c<code>'['</code>\uff0c<code>']'</code>\u00a0\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b <code>s</code> \uff0c\u200b\u5224\u65ad\u200b\u5b57\u7b26\u4e32\u200b\u662f\u5426\u200b\u6709\u6548\u200b\u3002</p> <p>\u200b\u6709\u6548\u200b\u5b57\u7b26\u4e32\u200b\u9700\u200b\u6ee1\u8db3\u200b\uff1a</p> <ol> <li>\u200b\u5de6\u200b\u62ec\u53f7\u200b\u5fc5\u987b\u200b\u7528\u200b\u76f8\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u53f3\u200b\u62ec\u53f7\u200b\u95ed\u5408\u200b\u3002</li> <li>\u200b\u5de6\u200b\u62ec\u53f7\u200b\u5fc5\u987b\u200b\u4ee5\u200b\u6b63\u786e\u200b\u7684\u200b\u987a\u5e8f\u200b\u95ed\u5408\u200b\u3002</li> </ol> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1as = \"()\"\n\u200b\u8f93\u51fa\u200b\uff1atrue\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a02\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1as = \"()[]{}\"\n\u200b\u8f93\u51fa\u200b\uff1atrue\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a03\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1as = \"(]\"\n\u200b\u8f93\u51fa\u200b\uff1afalse\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a04\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1as = \"([)]\"\n\u200b\u8f93\u51fa\u200b\uff1afalse\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a05\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1as = \"{[]}\"\n\u200b\u8f93\u51fa\u200b\uff1atrue\n</code></pre> <p>Reference</p>","tags":["\u6808","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/20/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4f7f\u7528\u200b\u6808\u200b\u6a21\u62df\u200b\u5339\u914d\u200b\u8fc7\u7a0b\u200b</p> <ul> <li>\u200b\u9047\u5230\u200b\u5de6\u200b\u62ec\u53f7\u200b\u65f6\u5165\u200b\u6808\u200b\uff1b</li> <li>\u200b\u9047\u5230\u200b\u53f3\u200b\u62ec\u53f7\u200b\u65f6\u200b\uff0c\u200b\u68c0\u67e5\u200b\u6808\u9876\u200b\u62ec\u53f7\u200b\u662f\u5426\u200b\u4e0e\u200b\u53f3\u200b\u62ec\u53f7\u200b\u5339\u914d\u200b\uff0c\u200b\u82e5\u200b\u5339\u914d\u200b\u5219\u200b\u51fa\u6808\u200b\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b<code>false</code>\uff1b</li> <li>\u200b\u5b8c\u6210\u200b\u5339\u914d\u200b\u8fc7\u7a0b\u200b\u540e\u200b\u68c0\u67e5\u200b\u6808\u200b\u662f\u5426\u200b\u4e3a\u7a7a\u200b\uff0c\u200b\u82e5\u4e3a\u200b\u7a7a\u200b\u8fd4\u56de\u200b<code>true</code>\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b<code>false</code>\u3002</li> </ul> <pre><code>bool isValid(char * s){\n    int maxLen = strlen(s), top = 0;\n    char *holding = malloc(sizeof(char) * maxLen), *cur = s;\n    while(*cur)\n    {\n        switch(*cur)\n        {\n            case '(':\n            case '[':\n            case '{':\n                holding[top] = *cur;\n                top++;\n                break;\n            case ')':\n                if (top == 0 || holding[top - 1] != '(')\n                    return false;\n                top--;\n                break;\n            case ']':\n            case '}':\n                if (top == 0 || holding[top - 1] != (*cur) - 2)\n                    return false;\n                top--;\n                break;\n        }\n        cur++;\n    }\n    return !top;\n}\n</code></pre>","tags":["\u6808","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/204/","title":"204. \u200b\u8ba1\u6570\u200b\u8d28\u6570","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u54c8\u5e0c\u8868","\u6570\u5b66"]},{"location":"coding/leetcode/204/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7edf\u8ba1\u200b\u6240\u6709\u200b\u5c0f\u4e8e\u200b\u975e\u8d1f\u200b\u6574\u6570\u200b n \u200b\u7684\u200b\u8d28\u6570\u200b\u7684\u200b\u6570\u91cf\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: 10\n\u200b\u8f93\u51fa\u200b: 4\n\u200b\u89e3\u91ca\u200b: \u200b\u5c0f\u4e8e\u200b 10 \u200b\u7684\u200b\u8d28\u6570\u200b\u4e00\u5171\u200b\u6709\u200b 4 \u200b\u4e2a\u200b, \u200b\u5b83\u4eec\u200b\u662f\u200b 2, 3, 5, 7 \u3002\n</code></pre> <p>Reference</p>","tags":["\u54c8\u5e0c\u8868","\u6570\u5b66"]},{"location":"coding/leetcode/204/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u4ece\u200b2\u200b\u5f00\u59cb\u200b\uff0c\u200b\u5728\u200b\u6570\u5217\u200b\\(2, 3, \\cdots, n\\)\u200b\u4e2d\u5212\u200b\u53bb\u200b\u6240\u6709\u200b2\u200b\u7684\u200b\u500d\u6570\u200b\uff0c\u200b\u5269\u4e0b\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u6ca1\u6709\u200b\u88ab\u5212\u200b\u53bb\u200b\u7684\u200b\u6570\u5b57\u200b3\u200b\u5373\u200b\u4e3a\u200b\u8d28\u6570\u200b\uff0c\u200b\u518d\u200b\u82b1\u65d7\u200b\u6240\u6709\u200b3\u200b\u7684\u200b\u500d\u6570\u200b\uff0c\u200b\u5269\u4e0b\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u6ca1\u6709\u200b\u88ab\u5212\u200b\u53bb\u200b\u7684\u200b\u6570\u5b57\u200b5\u200b\u5373\u200b\u4e3a\u200b\u8d28\u6570\u200b\u3002\u200b\u91cd\u590d\u200b\u5982\u200b\u4e0a\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u76f4\u5230\u200b\u68c0\u67e5\u200b\u5b8c\u200b\u6240\u6709\u200b\u5c0f\u4e8e\u200b\u7b49\u4e8e\u200b\\(\\sqrt n\\)\u200b\u7684\u200b\u6574\u6570\u200b\uff0c\u200b\u5373\u200b\u5b8c\u6210\u200b\u3002</p> <p>\u200b\u6570\u5b57\u200b\u662f\u5426\u200b\u5212\u53bb\u200b\u7684\u200b\u72b6\u6001\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\u63a7\u5236\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7528\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u4e2d\u200b\u7684\u200b1\u200b\u4f4d\u200b\u8868\u793a\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>int countPrimes(int n)\n{\n    unsigned char *map = memset(malloc(sizeof(unsigned char) * ((n + 1 &gt;&gt; 3) + 1)), 0x55, sizeof(unsigned char) * ((n + 1 &gt;&gt; 3) + 1));\n    int i = 0, j, ret = 0, sq = (int)sqrt(n), increment = 1, start = 2;\n    *map = 0x51;\n    for (i = 3; i &lt;= sq; i++)\n        if (!(map[i &gt;&gt; 3] &amp; (unsigned char)1 &lt;&lt; (i &amp; 7)))\n            for (j = i * 3; j &lt;= n; j += i &lt;&lt; 1)\n                map[j &gt;&gt; 3] |= (unsigned char)1 &lt;&lt; (j &amp; 7);\n    for (i = 2; i &lt; n; i++)\n        if (!(map[i &gt;&gt; 3] &amp; (unsigned char)1 &lt;&lt; (i &amp; 7)))\n            ret++;\n    return ret;\n}\n</code></pre>","tags":["\u54c8\u5e0c\u8868","\u6570\u5b66"]},{"location":"coding/leetcode/206/","title":"206. \u200b\u53cd\u8f6c\u200b\u94fe\u8868","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/206/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u53cd\u8f6c\u200b\u4e00\u4e2a\u200b\u5355\u94fe\u200b\u8868\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\uff1a <pre><code>\u200b\u8f93\u5165\u200b: 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL\n\u200b\u8f93\u51fa\u200b: 5-&gt;4-&gt;3-&gt;2-&gt;1-&gt;NULL\n</code></pre> \u200b\u8fdb\u9636\u200b\uff1a</p> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u8fed\u4ee3\u200b\u6216\u200b\u9012\u5f52\u200b\u5730\u200b\u53cd\u8f6c\u200b\u94fe\u8868\u200b\u3002\u200b\u4f60\u200b\u80fd\u5426\u200b\u7528\u200b\u4e24\u79cd\u200b\u65b9\u6cd5\u200b\u89e3\u51b3\u200b\u8fd9\u9053\u9898\u200b\uff1f</p> <p>Reference</p>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/206/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u53ea\u200b\u9700\u8981\u200b\u5c06\u200b\u94fe\u8868\u200b\u7ed3\u6784\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u6307\u9488\u200b\u53cd\u8f6c\u200b\uff0c\u200b\u5373\u200b\u6307\u5411\u200b\u524d\u200b\u4e00\u200b\u8282\u70b9\u200b\u7684\u200b\u6307\u9488\u200b\u73b0\u5728\u200b\u6307\u5411\u200b\u540e\u200b\u4e00\u200b\u8282\u70b9\u200b\u3002\u200b\u5b9a\u4e49\u200b\u4e24\u4e2a\u200b\u6307\u9488\u200b\u6307\u5411\u200b\u9700\u8981\u200b\u53cd\u8f6c\u200b\u90e8\u5206\u200b\u7684\u200b\u4e24\u4e2a\u200b\u8282\u70b9\u200b\uff0c\u200b\u5c06\u200b\u540e\u200b\u4e00\u200b\u6307\u9488\u200b\u7684\u200b<code>next</code>\u200b\u57df\u200b\u6307\u5411\u200b\u524d\u200b\u4e00\u200b\u6307\u9488\u200b\u3002\u200b\u6539\u200b\u53cd\u8f6c\u200b\u64cd\u4f5c\u200b\u7834\u574f\u200b\u4e86\u200b\u540e\u200b\u4e00\u200b\u6307\u9488\u200b\u539f\u6709\u200b\u7684\u200b<code>next</code>\u200b\u57df\u200b\uff0c\u200b\u9700\u8981\u200b\u4e00\u4e2a\u200b\u989d\u5916\u200b\u7684\u200b\u6307\u9488\u200b\u7528\u4e8e\u200b\u5411\u524d\u200b\u79fb\u52a8\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\n\nstruct ListNode* reverseList(struct ListNode* head){\n    if (!head || !(head-&gt;next))\n        return head;\n    struct ListNode *cur1 = head, *cur2 = head-&gt;next, *cur3 = cur2-&gt;next;\n    head-&gt;next = NULL;\n    while (cur3)\n    {\n        cur2-&gt;next = cur1;\n        cur1 = cur2;\n        cur2 = cur3;\n        cur3 = cur3-&gt;next;\n    }\n    cur2-&gt;next = cur1;\n    return cur2;\n}\n</code></pre>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/21/","title":"21. \u200b\u5408\u5e76\u200b\u4e24\u4e2a\u200b\u6709\u5e8f\u200b\u94fe\u8868","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u9012\u5f52","\u94fe\u8868"]},{"location":"coding/leetcode/21/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u5c06\u200b\u4e24\u4e2a\u200b\u5347\u5e8f\u200b\u94fe\u8868\u200b\u5408\u5e76\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b \u200b\u5347\u5e8f\u200b \u200b\u94fe\u8868\u200b\u5e76\u200b\u8fd4\u56de\u200b\u3002\u200b\u65b0\u200b\u94fe\u8868\u200b\u662f\u200b\u901a\u8fc7\u200b\u62fc\u63a5\u200b\u7ed9\u5b9a\u200b\u7684\u200b\u4e24\u4e2a\u200b\u94fe\u8868\u200b\u7684\u200b\u6240\u6709\u200b\u8282\u70b9\u200b\u7ec4\u6210\u200b\u7684\u200b\u3002\u00a0</p> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1a1-&gt;2-&gt;4, 1-&gt;3-&gt;4\n\u200b\u8f93\u51fa\u200b\uff1a1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4\n</code></pre> <p>Reference</p>","tags":["\u9012\u5f52","\u94fe\u8868"]},{"location":"coding/leetcode/21/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u6bd4\u8f83\u200b\u4e24\u4e2a\u200b\u94fe\u8868\u200b\u7684\u200b\u5934\u200b\u8282\u70b9\u200b\uff0c\u200b\u5c06\u200b\u66f4\u200b\u5c0f\u200b\u7684\u200b\u8282\u70b9\u200b\u5e76\u5165\u200b\u7ed3\u679c\u200b\u94fe\u8868\u200b\u4e2d\u200b\uff0c\u200b\u540c\u65f6\u200b\u94fe\u8868\u200b\u5934\u200b\u540e\u79fb\u200b\uff0c\u200b\u9012\u5f52\u200b\u5904\u7406\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\nstruct ListNode* mergeTwoLists(struct ListNode* l1, struct ListNode* l2){\n    if (!l1)\n        return l2;\n    if (!l2)\n        return l1;\n    if (l1-&gt;val &lt; l2-&gt;val)\n    {\n        l1-&gt;next = mergeTwoLists(l1-&gt;next, l2);\n        return l1;\n    }\n    else\n    {\n        l2-&gt;next = mergeTwoLists(l1, l2-&gt;next);\n        return l2;\n    }\n}\n</code></pre>","tags":["\u9012\u5f52","\u94fe\u8868"]},{"location":"coding/leetcode/217/","title":"217. \u200b\u5b58\u5728\u200b\u91cd\u590d\u200b\u5143\u7d20","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u7ec4","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/217/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b\uff0c\u200b\u5224\u65ad\u200b\u662f\u5426\u200b\u5b58\u5728\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u4efb\u610f\u200b\u4e00\u503c\u200b\u5728\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u51fa\u73b0\u200b\u81f3\u5c11\u200b\u4e24\u6b21\u200b\uff0c\u200b\u51fd\u6570\u200b\u8fd4\u56de\u200b<code>true</code>\u3002\u200b\u5982\u679c\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u90fd\u200b\u4e0d\u200b\u76f8\u540c\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b<code>false</code>\u3002\u00a0</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: [1,2,3,1]\n\u200b\u8f93\u51fa\u200b: true\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: [1,2,3,4]\n\u200b\u8f93\u51fa\u200b: false\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a03\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: [1,1,1,3,3,4,3,2,4,2]\n\u200b\u8f93\u51fa\u200b: true\n</code></pre> <p>Reference</p>","tags":["\u6570\u7ec4","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/217/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u5c06\u200b\u6570\u7ec4\u200b\u6392\u5e8f\u200b\u540e\u200b\u68c0\u67e5\u200b\u662f\u5426\u200b\u6709\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>int comp(const void *a, const void *b)\n{\n    return *(int*)a - *(int*)b;\n}\nbool containsDuplicate(int* nums, int numsSize){\n    if (numsSize &lt; 2)\n        return false;\n    qsort(nums, numsSize, sizeof(int), comp);\n    int i = 0;\n    for (i = 1; i&lt;numsSize; i++)\n        if (nums[i] == nums[i - 1])\n            return true;\n    return false;\n}\n</code></pre>","tags":["\u6570\u7ec4","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/219/","title":"219. \u200b\u5b58\u5728\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b II","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u7ec4","\u54c8\u5e0c\u8868","\u6ed1\u52a8\u7a97\u53e3"]},{"location":"coding/leetcode/219/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b <code>nums</code> \u200b\u548c\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b <code>k</code> \uff0c\u200b\u5224\u65ad\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u662f\u5426\u200b\u5b58\u5728\u200b\u4e24\u4e2a\u200b \u200b\u4e0d\u540c\u200b\u7684\u200b\u7d22\u5f15\u200b <code>i</code> \u200b\u548c\u200b <code>j</code> \uff0c\u200b\u6ee1\u8db3\u200b <code>nums[i] == nums[j]</code> \u200b\u4e14\u200b <code>abs(i - j) &lt;= k</code> \u3002\u200b\u5982\u679c\u200b\u5b58\u5728\u200b\uff0c\u200b\u8fd4\u56de\u200b <code>true</code> \uff1b\u200b\u5426\u5219\u200b\uff0c\u200b\u8fd4\u56de\u200b <code>false</code> \u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>nums = [1,2,3,1], k = 3</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>true</code></p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>nums = [1,0,1,1], k = 1</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>true</code></p> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>nums = [1,2,3,1,2,3], k = 2</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>false</code></p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 10^5</code></li> <li><code>-10^9 &lt;= nums[i] &lt;= 10^9</code></li> <li><code>0 &lt;= k &lt;= 10^5</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u54c8\u5e0c\u8868","\u6ed1\u52a8\u7a97\u53e3"]},{"location":"coding/leetcode/219/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u66b4\u529b\u200b\u89e3\u6cd5\u200b\u662f\u200b\u5bf9\u200b\\((idx, value)\\)\u200b\u6570\u7ec4\u200b\u8fdb\u884c\u200b\u6392\u5e8f\u200b\u540e\u200b\u5206\u7ec4\u200b\u904d\u5386\u200b\u6bcf\u4e2a\u200b<code>value</code>\uff0c\u200b\u518d\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b<code>value</code>\u200b\u7684\u200b<code>idx</code>\u200b\u6570\u7ec4\u200b\u8fdb\u884c\u200b\u6392\u5e8f\u200b\u540e\u200b\uff0c\u200b\u904d\u5386\u200b\u68c0\u67e5\u200b\u662f\u5426\u200b\u6709\u200b\u76f8\u90bb\u200b\u7684\u200b<code>idx</code>\u200b\u5dee\u503c\u200b\u5c0f\u4e8e\u200b\u7b49\u4e8e\u200b<code>k</code>\u3002\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(O(n\\log n)\\)\u3002</p> <pre><code>class Solution:\n    def containsNearbyDuplicate(self, nums: List[int], k: int) -&gt; bool:\n        nums_with_index = sorted(enumerate(nums), key=lambda x: x[1])\n        for key, g in itertools.groupby(nums_with_index, key=lambda x: x[1]):\n            for (l, _), (r, _) in itertools.pairwise(g):\n                if r - l &lt;= k:\n                    return True\n        return False\n</code></pre> <p>\u200b\u66f4\u4e3a\u200b\u4f18\u5316\u200b\u7684\u200b\u65b9\u6cd5\u200b\u662f\u200b\u7ef4\u62a4\u200b\u4e00\u4e2a\u200b\u533a\u95f4\u200b\u5185\u200b\u7684\u200b\u54c8\u5e0c\u200b\u8868\u200b\uff0c\u200b\u5728\u200b\u5411\u524d\u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b\u65f6\u200b\uff0c\u200b\u5148\u200b\u68c0\u67e5\u200b\u662f\u5426\u200b\u6709\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b\uff0c\u200b\u518d\u200b\u5c06\u200b\u65b0\u5143\u7d20\u200b\u52a0\u5165\u200b\u54c8\u5e0c\u200b\u8868\u200b\uff0c\u200b\u6700\u540e\u200b\u5c06\u200b\u7a97\u53e3\u200b\u6700\u200b\u5de6\u8fb9\u200b\u7684\u200b\u5143\u7d20\u200b\u79fb\u9664\u200b\u3002\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(O(n)\\)\u3002</p> <pre><code>class Solution:\n    def containsNearbyDuplicate(self, nums: List[int], k: int) -&gt; bool:\n        explored = set()\n        for i, value in enumerate(nums, start=-k):\n            if value in explored:\n                return True\n            else:\n                explored.add(value)\n            if i &gt;= 0:\n                explored.remove(nums[i])\n        return False\n</code></pre>","tags":["\u6570\u7ec4","\u54c8\u5e0c\u8868","\u6ed1\u52a8\u7a97\u53e3"]},{"location":"coding/leetcode/22/","title":"22. \u200b\u62ec\u53f7\u200b\u751f\u6210","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u5b57\u7b26\u4e32","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/22/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u6570\u5b57\u200b <code>n</code>\u00a0\u200b\u4ee3\u8868\u200b\u751f\u6210\u200b\u62ec\u53f7\u200b\u7684\u200b\u5bf9\u6570\u200b\uff0c\u200b\u8bf7\u200b\u4f60\u200b\u8bbe\u8ba1\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u80fd\u591f\u200b\u751f\u6210\u200b\u6240\u6709\u200b\u53ef\u80fd\u200b\u7684\u200b\u5e76\u4e14\u200b \u200b\u6709\u6548\u200b\u7684\u200b \u200b\u62ec\u53f7\u200b\u7ec4\u5408\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1an = 3\n\u200b\u8f93\u51fa\u200b\uff1a[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1an = 1\n\u200b\u8f93\u51fa\u200b\uff1a[\"()\"]\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= n &lt;= 8</code></li> </ul> <p>Reference</p>","tags":["\u5b57\u7b26\u4e32","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/22/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u56de\u6eaf\u200b\u7b97\u6cd5\u200b</p> <ul> <li>\u200b\u5f53\u200b\u5de6\u200b\u62ec\u53f7\u200b\u6570\u91cf\u200b\u5c0f\u4e8e\u200b\u62ec\u53f7\u200b\u5bf9\u6570\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6dfb\u52a0\u200b\u5de6\u200b\u62ec\u53f7\u200b</li> <li>\u200b\u5f53\u53f3\u200b\u62ec\u53f7\u200b\u6570\u91cf\u200b\u5c0f\u4e8e\u200b\u5de6\u200b\u62ec\u53f7\u200b\u6570\u91cf\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6dfb\u52a0\u200b\u53f3\u200b\u62ec\u53f7\u200b</li> </ul> <p>\u200b\u6309\u7167\u200b\u5982\u200b\u4e0a\u200b\u65b9\u6cd5\u200b\u751f\u6210\u200b\u7684\u200b\u62ec\u53f7\u200b\u7ec4\u5408\u200b\u53ef\u4ee5\u200b\u4fdd\u8bc1\u200b\u4e00\u5b9a\u200b\u662f\u200b\u6709\u6548\u200b\u7684\u200b\u3002</p> <pre><code>/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\n\nvoid dfs(char *currentStr, int n, int left, int right, char **ret, int *returnSize)\n{\n    if (left == n &amp;&amp; right == n)\n    {\n        ret[*returnSize] = (char *)malloc(sizeof(char) * (2 * n + 1));\n        strcpy(ret[*returnSize], currentStr);\n        *returnSize += 1;\n        return;\n    }\n    if (left &lt; n)\n    {\n        currentStr[left + right] = '(';\n        dfs(currentStr, n, left + 1, right, ret, returnSize);\n    }\n    if (right &lt; left)\n    {\n        currentStr[left + right] = ')';\n        dfs(currentStr, n, left, right + 1, ret, returnSize);\n    }\n}\nchar ** generateParenthesis(int n, int* returnSize){\n    const int maxLen = 10000;\n    *returnSize = 0;\n    char **ret = (char **)malloc(sizeof(char *) * maxLen),\n         *buffer = (char *)memset(malloc(sizeof(char) * (2 * n + 1)), 0, sizeof(char) * (2 * n + 1));\n    dfs(buffer, n, 0, 0, ret, returnSize);\n    return ret;\n}\n</code></pre>","tags":["\u5b57\u7b26\u4e32","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/2218/","title":"2218. \u200b\u4ece\u6808\u200b\u4e2d\u200b\u53d6\u51fa\u200b K \u200b\u4e2a\u200b\u786c\u5e01\u200b\u7684\u200b\u6700\u5927\u200b\u9762\u503c\u200b\u548c","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u56f0\u96be\u200b</p>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212","\u524d\u7f00\u548c"]},{"location":"coding/leetcode/2218/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u4e00\u5f20\u200b\u684c\u5b50\u200b\u4e0a\u200b\u603b\u5171\u200b\u6709\u200b <code>n</code> \u200b\u4e2a\u200b\u786c\u5e01\u200b \u200b\u6808\u200b \u3002\u200b\u6bcf\u4e2a\u200b\u6808\u6709\u200b \u200b\u6b63\u6574\u6570\u200b \u200b\u4e2a\u200b\u5e26\u200b\u9762\u503c\u200b\u7684\u200b\u786c\u5e01\u200b\u3002</p> <p>\u200b\u6bcf\u200b\u4e00\u6b21\u200b\u64cd\u4f5c\u200b\u4e2d\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u4efb\u610f\u200b\u4e00\u4e2a\u200b\u6808\u200b\u7684\u200b \u200b\u9876\u90e8\u200b \u200b\u53d6\u51fa\u200b 1 \u200b\u4e2a\u200b\u786c\u5e01\u200b\uff0c\u200b\u4ece\u6808\u200b\u4e2d\u200b\u79fb\u9664\u200b\u5b83\u200b\uff0c\u200b\u5e76\u200b\u653e\u5165\u200b\u4f60\u200b\u7684\u200b\u94b1\u5305\u200b\u91cc\u200b\u3002</p> <p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u5217\u8868\u200b <code>piles</code> \uff0c\u200b\u5176\u4e2d\u200b <code>piles[i]</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b\uff0c\u200b\u5206\u522b\u200b\u8868\u793a\u200b\u7b2c\u200b <code>i</code> \u200b\u4e2a\u200b\u6808\u91cc\u200b \u200b\u4ece\u9876\u200b\u5230\u5e95\u200b \u200b\u7684\u200b\u786c\u5e01\u200b\u9762\u503c\u200b\u3002\u200b\u540c\u65f6\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u6b63\u6574\u6570\u200b <code>k</code> \uff0c\u200b\u8bf7\u200b\u4f60\u200b\u8fd4\u56de\u200b\u5728\u200b \u200b\u6070\u597d\u200b \u200b\u8fdb\u884c\u200b <code>k</code> \u200b\u6b21\u200b\u64cd\u4f5c\u200b\u7684\u200b\u524d\u63d0\u200b\u4e0b\u200b\uff0c\u200b\u4f60\u200b\u94b1\u5305\u200b\u91cc\u200b\u786c\u5e01\u200b\u9762\u503c\u200b\u4e4b\u200b\u548c\u200b \u200b\u6700\u5927\u200b\u4e3a\u200b\u591a\u5c11\u200b \u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p></p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>piles = [[1,100,3],[7,8,9]], k = 2</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>101</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u4e0a\u200b\u56fe\u200b\u5c55\u793a\u200b\u4e86\u200b\u51e0\u79cd\u200b\u9009\u62e9\u200b k \u200b\u4e2a\u200b\u786c\u5e01\u200b\u7684\u200b\u4e0d\u540c\u200b\u65b9\u6cd5\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u7684\u200b\u6700\u5927\u200b\u9762\u503c\u200b\u4e3a\u200b 101 \u3002</p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>piles = [[100],[100],[100],[100],[100],[100],[1,1,1,1,1,1,700]], k = 7</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>706</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u6240\u6709\u200b\u786c\u5e01\u200b\u90fd\u200b\u4ece\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u6808\u4e2d\u53d6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u6700\u5927\u200b\u9762\u503c\u200b\u548c\u200b\u3002</p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>n == piles.length</code></li> <li><code>1 &lt;= n &lt;= 1000</code></li> <li><code>1 &lt;= piles[i][j] &lt;= 10^5</code></li> <li><code>1 &lt;= k &lt;= sum(piles[i].length) &lt;= 2000</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212","\u524d\u7f00\u548c"]},{"location":"coding/leetcode/2218/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4ece\u524d\u200b<code>i + 1</code>\u200b\u4e2a\u6808\u200b\u4e2d\u200b\u53d6\u51fa\u200b<code>j</code>\u200b\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u6700\u5927\u200b\u9762\u503c\u200b\u548c\u200b\u53ef\u4ee5\u200b\u5206\u89e3\u200b\u4e3a\u200b\u4ece\u200b\u7b2c\u200b<code>i + 1</code>\u200b\u4e2a\u6808\u200b\u4e2d\u200b\u53d6\u51fa\u200b<code>k</code>\u200b\u4e2a\u200b\u786c\u5e01\u200b\uff0c\u200b\u5269\u4f59\u200b<code>j - k</code>\u200b\u4e2a\u200b\u786c\u5e01\u200b\u4ece\u524d\u200b<code>i</code>\u200b\u4e2a\u6808\u200b\u4e2d\u200b\u6309\u7167\u200b\u6700\u4f18\u200b\uff08\u200b\u6700\u5927\u200b\uff09\u200b\u7684\u200b\u65b9\u5f0f\u200b\u53d6\u51fa\u200b\u3002\u200b\u53d6\u51fa\u200b\u7684\u200b\u65b9\u5f0f\u200b\u6709\u200b\u5982\u4e0b\u200b\u53ef\u80fd\u200b\uff1a</p> <ul> <li>\u200b\u4ece\u200b\u7b2c\u200b<code>i + 1</code>\u200b\u4e2a\u6808\u200b\u4e2d\u200b\u53d6\u51fa\u200b<code>0</code>\u200b\u4e2a\u200b\u786c\u5e01\u200b\uff0c\u200b\u4ece\u200b\u5269\u4f59\u200b<code>i</code>\u200b\u4e2a\u6808\u200b\u4e2d\u200b\u53d6\u51fa\u200b<code>j</code>\u200b\u4e2a\u200b\u786c\u5e01\u200b</li> <li>\u200b\u4ece\u200b\u7b2c\u200b<code>i + 1</code>\u200b\u4e2a\u6808\u200b\u4e2d\u200b\u53d6\u51fa\u200b<code>1</code>\u200b\u4e2a\u200b\u786c\u5e01\u200b\uff0c\u200b\u4ece\u200b\u5269\u4f59\u200b<code>i</code>\u200b\u4e2a\u6808\u200b\u4e2d\u200b\u53d6\u51fa\u200b<code>j - 1</code>\u200b\u4e2a\u200b\u786c\u5e01\u200b</li> <li>...</li> <li>\u200b\u4ece\u200b\u7b2c\u200b<code>i  + 1</code>\u200b\u4e2a\u6808\u200b\u4e2d\u200b\u53d6\u51fa\u200b<code>j</code>\u200b\u4e2a\u200b\u786c\u5e01\u200b\uff0c\u200b\u4ece\u200b\u5269\u4f59\u200b<code>i</code>\u200b\u4e2a\u6808\u200b\u4e2d\u200b\u53d6\u51fa\u200b<code>0</code>\u200b\u4e2a\u200b\u786c\u5e01\u200b</li> </ul> <p>\u200b\u904d\u5386\u200b\u6bcf\u4e2a\u200b\u6808\u200b\uff0c\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u8868\u200b<code>dp[j]</code>\u200b\u5b58\u50a8\u200b\u5728\u200b\u7b2c\u200b<code>i</code>\u200b\u6b21\u200b\u904d\u5386\u200b\u4e2d\u200b\uff0c\u200b\u4ece\u524d\u200b<code>i</code>\u200b\u4e2a\u200b\u5217\u8868\u200b\u4e2d\u200b\u53d6\u51fa\u200b\u6070\u597d\u200b<code>j</code>\u200b\u4e2a\u200b\u786c\u5e01\u200b\u7684\u200b\u6700\u5927\u200b\u9762\u503c\u200b\u548c\u200b\u3002\u200b\u90a3\u4e48\u200b\uff0c\u200b\u6839\u636e\u200b\u53d6\u51fa\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u4e0b\u200b\u4e00\u8f6e\u200b\u6b21\u200b\u7684\u200b<code>dp[j]</code>\u200b\u4e3a\u200b\u5982\u4e0b\u200b\u6240\u8ff0\u200b\u5404\u79cd\u200b\u53d6\u51fa\u200b\u65b9\u5f0f\u200b\u7684\u200b\u6700\u5927\u503c\u200b\u3002</p> <ul> <li>\u200b\u4ece\u200b\u7b2c\u200b<code>i + 1</code>\u200b\u4e2a\u6808\u200b\u4e2d\u200b\u53d6\u51fa\u200b<code>0</code>\u200b\u4e2a\u200b\u786c\u5e01\u200b\uff0c\u200b\u4ece\u200b\u5269\u4f59\u200b<code>i</code>\u200b\u4e2a\u6808\u200b\u4e2d\u200b\u53d6\u51fa\u200b<code>j</code>\u200b\u4e2a\u200b\u786c\u5e01\u200b\uff0c\u200b\u6700\u5927\u200b\u9762\u503c\u200b\u4e3a\u200b<code>dp[j]</code></li> <li>\u200b\u4ece\u200b\u7b2c\u200b<code>i + 1</code>\u200b\u4e2a\u6808\u200b\u4e2d\u200b\u53d6\u51fa\u200b<code>1</code>\u200b\u4e2a\u200b\u786c\u5e01\u200b\uff0c\u200b\u4ece\u200b\u5269\u4f59\u200b<code>i</code>\u200b\u4e2a\u6808\u200b\u4e2d\u200b\u53d6\u51fa\u200b<code>j - 1</code>\u200b\u4e2a\u200b\u786c\u5e01\u200b\uff0c\u200b\u6700\u5927\u200b\u9762\u503c\u200b\u4e3a\u200b<code>dp[j - 1] + sum(piles[i][:1])</code></li> <li>...</li> <li>\u200b\u4ece\u200b\u7b2c\u200b<code>i  + 1</code>\u200b\u4e2a\u6808\u200b\u4e2d\u200b\u53d6\u51fa\u200b<code>j</code>\u200b\u4e2a\u200b\u786c\u5e01\u200b\uff0c\u200b\u4ece\u200b\u5269\u4f59\u200b<code>i</code>\u200b\u4e2a\u6808\u200b\u4e2d\u200b\u53d6\u51fa\u200b<code>0</code>\u200b\u4e2a\u200b\u786c\u5e01\u200b\uff0c\u200b\u6700\u5927\u200b\u9762\u503c\u200b\u4e3a\u200b<code>dp[0] + sum(piles[i][:j])</code></li> </ul> <p>\u200b\u5728\u200b\u521d\u59cb\u72b6\u6001\u200b\u65f6\u200b\uff0c<code>dp</code>\u200b\u7684\u200b\u503c\u200b\u4e3a\u200b\u7b2c\u4e00\u4e2a\u200b\u6808\u200b\u7684\u200b\u9762\u503c\u200b\u524d\u7f00\u200b\u548c\u200b\uff0c<code>dp[0] = 0</code>\u200b\u5bf9\u5e94\u200b\u4e0d\u200b\u53d6\u51fa\u200b\u786c\u5e01\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002\u200b\u6bcf\u8f6e\u200b\u8fed\u4ee3\u200b\u66f4\u65b0\u200b<code>dp</code>\uff0c\u200b\u6700\u540e\u200b\u4e00\u8f6e\u200b\u66f4\u65b0\u200b\u540e\u200b\uff0c<code>dp[k]</code>\u200b\u5373\u200b\u4e3a\u200b\u6240\u6c42\u200b\u3002</p> <pre><code>class Solution:\n    def maxValueOfCoins(self, piles: List[List[int]], k: int) -&gt; int:\n        dp = [0, *itertools.accumulate(piles[0])][:k + 1]\n        num_piles, step = len(piles), 1\n        while step &lt; num_piles:\n            dp_length, pile_length, new_choices = len(dp), len(piles[step]), []\n            cum = [0, *itertools.accumulate(piles[step])]\n            for total in range(k + 1):\n                max_value = 0\n                for right in range(min(pile_length, total), -1, -1):\n                    left = total - right\n                    if left &gt;= dp_length:\n                        break\n\n                    max_value = max(max_value, dp[left] + cum[right])\n                new_choices.append(max_value)\n            dp = new_choices[:k + 1]\n            step += 1\n\n        return dp[-1]\n</code></pre>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212","\u524d\u7f00\u548c"]},{"location":"coding/leetcode/2239/","title":"2239. \u200b\u627e\u5230\u200b\u6700\u200b\u63a5\u8fd1\u200b 0 \u200b\u7684\u200b\u6570\u5b57","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/2239/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u957f\u5ea6\u200b\u4e3a\u200b <code>n</code> \u200b\u7684\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b <code>nums</code> \uff0c\u200b\u8bf7\u200b\u4f60\u200b\u8fd4\u56de\u200b <code>nums</code> \u200b\u4e2d\u200b\u6700\u200b \u200b\u63a5\u8fd1\u200b <code>0</code> \u200b\u7684\u200b\u6570\u5b57\u200b\u3002\u200b\u5982\u679c\u200b\u6709\u200b\u591a\u4e2a\u200b\u7b54\u6848\u200b\uff0c\u200b\u8bf7\u200b\u4f60\u200b\u8fd4\u56de\u200b\u5b83\u4eec\u200b\u4e2d\u200b\u7684\u200b \u200b\u6700\u5927\u503c\u200b \u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1anums = [-4,-2,1,4,8]</p> <p>\u200b\u8f93\u51fa\u200b\uff1a1</p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>-4 \u200b\u5230\u200b 0 \u200b\u7684\u200b\u8ddd\u79bb\u200b\u4e3a\u200b |-4| = 4 \u3002</p> <p>-2 \u200b\u5230\u200b 0 \u200b\u7684\u200b\u8ddd\u79bb\u200b\u4e3a\u200b |-2| = 2 \u3002</p> <p>1 \u200b\u5230\u200b 0 \u200b\u7684\u200b\u8ddd\u79bb\u200b\u4e3a\u200b |1| = 1 \u3002</p> <p>4 \u200b\u5230\u200b 0 \u200b\u7684\u200b\u8ddd\u79bb\u200b\u4e3a\u200b |4| = 4 \u3002</p> <p>8 \u200b\u5230\u200b 0 \u200b\u7684\u200b\u8ddd\u79bb\u200b\u4e3a\u200b |8| = 8 \u3002</p> <p>\u200b\u6240\u4ee5\u200b\uff0c\u200b\u6570\u7ec4\u200b\u4e2d\u8ddd\u79bb\u200b 0 \u200b\u6700\u8fd1\u200b\u7684\u200b\u6570\u5b57\u200b\u4e3a\u200b 1 \u3002</p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1anums = [2,-1,1]</p> <p>\u200b\u8f93\u51fa\u200b\uff1a1</p> <p>\u200b\u89e3\u91ca\u200b\uff1a1 \u200b\u548c\u200b -1 \u200b\u90fd\u200b\u662f\u200b\u8ddd\u79bb\u200b 0 \u200b\u6700\u8fd1\u200b\u7684\u200b\u6570\u5b57\u200b\uff0c\u200b\u6240\u4ee5\u200b\u8fd4\u56de\u200b\u8f83\u5927\u200b\u503c\u200b 1 \u3002</p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= n &lt;= 1000</code></li> <li><code>-10^5 &lt;= nums[i] &lt;= 10^5</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/2239/#_2","title":"\u9898\u89e3","text":"<pre><code>class Solution:\n    def findClosestNumber(self, nums: List[int]) -&gt; int:\n        result = 1000000\n        for _ in nums:\n            if abs(_) &lt; abs(result):\n                result = _\n            elif abs(_) == abs(result):\n                result = max(_, result)\n        return result\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/2241/","title":"2241. \u200b\u8bbe\u8ba1\u200b\u4e00\u4e2a\u200b ATM \u200b\u673a\u5668","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u8d2a\u5fc3","\u8bbe\u8ba1","\u6570\u7ec4"]},{"location":"coding/leetcode/2241/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u4e00\u4e2a\u200b ATM \u200b\u673a\u5668\u200b\uff0c\u200b\u5b58\u6709\u200b <code>5</code> \u200b\u79cd\u200b\u9762\u503c\u200b\u7684\u200b\u949e\u7968\u200b\uff1a<code>20</code> \uff0c<code>50</code> \uff0c<code>100</code> \uff0c<code>200</code> \u200b\u548c\u200b <code>500</code> \u200b\u7f8e\u5143\u200b\u3002\u200b\u521d\u59cb\u200b\u65f6\u200b\uff0cATM \u200b\u673a\u662f\u200b\u7a7a\u200b\u7684\u200b\u3002\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u7528\u200b\u5b83\u200b\u5b58\u200b\u6216\u8005\u200b\u53d6\u200b\u4efb\u610f\u200b\u6570\u76ee\u200b\u7684\u200b\u94b1\u200b\u3002</p> <p>\u200b\u53d6\u6b3e\u200b\u65f6\u200b\uff0c\u200b\u673a\u5668\u200b\u4f1a\u200b\u4f18\u5148\u200b\u53d6\u200b \u200b\u8f83\u5927\u200b \u200b\u6570\u989d\u200b\u7684\u200b\u94b1\u200b\u3002</p> <ul> <li>\u200b\u6bd4\u65b9\u8bf4\u200b\uff0c\u200b\u4f60\u200b\u60f3\u53d6\u200b <code>$300</code> \uff0c\u200b\u5e76\u4e14\u200b\u673a\u5668\u200b\u91cc\u200b\u6709\u200b <code>2</code> \u200b\u5f20\u200b <code>$50</code> \u200b\u7684\u200b\u949e\u7968\u200b\uff0c<code>1</code> \u200b\u5f20\u200b <code>$100</code> \u200b\u7684\u200b\u949e\u7968\u200b\u548c\u200b <code>1</code> \u200b\u5f20\u200b <code>$200</code> \u200b\u7684\u200b\u949e\u7968\u200b\uff0c\u200b\u90a3\u4e48\u200b\u673a\u5668\u200b\u4f1a\u200b\u53d6\u51fa\u200b <code>$100</code> \u200b\u548c\u200b <code>$200</code> \u200b\u7684\u200b\u949e\u7968\u200b\u3002</li> <li>\u200b\u4f46\u662f\u200b\uff0c\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u53d6\u200b <code>$600</code> \uff0c\u200b\u673a\u5668\u200b\u91cc\u200b\u6709\u200b <code>3</code> \u200b\u5f20\u200b <code>$200</code> \u200b\u7684\u200b\u949e\u7968\u200b\u548c\u200b <code>1</code> \u200b\u5f20\u200b <code>$500</code> \u200b\u7684\u200b\u949e\u7968\u200b\uff0c\u200b\u90a3\u4e48\u200b\u53d6\u6b3e\u200b\u8bf7\u6c42\u200b\u4f1a\u200b\u88ab\u200b\u62d2\u7edd\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u673a\u5668\u200b\u4f1a\u5148\u200b\u53d6\u51fa\u200b <code>$500</code> \u200b\u7684\u200b\u949e\u7968\u200b\uff0c\u200b\u7136\u540e\u200b\u65e0\u6cd5\u200b\u53d6\u51fa\u200b\u5269\u4f59\u200b\u7684\u200b <code>$100</code> \u3002\u200b\u6ce8\u610f\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u6709\u200b <code>$500</code> \u200b\u949e\u7968\u200b\u7684\u200b\u5b58\u5728\u200b\uff0c\u200b\u673a\u5668\u200b \u200b\u4e0d\u80fd\u200b \u200b\u53d6\u200b <code>$200</code> \u200b\u7684\u200b\u949e\u7968\u200b\u3002</li> </ul> <p>\u200b\u8bf7\u200b\u4f60\u200b\u5b9e\u73b0\u200b ATM \u200b\u7c7b\u200b\uff1a</p> <ul> <li><code>ATM()</code> \u200b\u521d\u59cb\u5316\u200b ATM \u200b\u5bf9\u8c61\u200b\u3002</li> <li><code>void deposit(int[] banknotesCount)</code> \u200b\u5206\u522b\u200b\u5b58\u5165\u200b <code>$20</code> \uff0c<code>$50</code>\uff0c<code>$100</code>\uff0c<code>$200</code> \u200b\u548c\u200b <code>$500</code> \u200b\u949e\u7968\u200b\u7684\u200b\u6570\u76ee\u200b\u3002</li> <li><code>int[] withdraw(int amount)</code> \u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u957f\u5ea6\u200b\u4e3a\u200b <code>5</code> \u200b\u7684\u200b\u6570\u7ec4\u200b\uff0c\u200b\u5206\u522b\u200b\u8868\u793a\u200b <code>$20</code> \uff0c<code>$50</code>\uff0c<code>$100</code> \uff0c<code>$200</code> \u200b\u548c\u200b <code>$500</code> \u200b\u949e\u7968\u200b\u7684\u200b\u6570\u76ee\u200b\uff0c\u200b\u5e76\u4e14\u200b\u66f4\u65b0\u200b ATM \u200b\u673a\u91cc\u200b\u53d6\u6b3e\u200b\u540e\u200b\u949e\u7968\u200b\u7684\u200b\u5269\u4f59\u200b\u6570\u91cf\u200b\u3002\u200b\u5982\u679c\u200b\u65e0\u6cd5\u200b\u53d6\u51fa\u200b\u6307\u5b9a\u200b\u6570\u989d\u200b\u7684\u200b\u94b1\u200b\uff0c\u200b\u8bf7\u200b\u8fd4\u56de\u200b <code>[-1]</code> \uff08\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b \u200b\u4e0d\u200b \u200b\u53d6\u51fa\u200b\u4efb\u4f55\u200b\u949e\u7968\u200b\uff09\u3002</li> </ul> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a <pre><code>[\"ATM\", \"deposit\", \"withdraw\", \"deposit\", \"withdraw\", \"withdraw\"]\n[[], [[0,0,1,2,1]], [600], [[0,1,0,1,1]], [600], [550]]\n</code></pre> \u200b\u8f93\u51fa\u200b\uff1a <pre><code>[null, null, [0,0,1,0,1], null, [-1], [0,1,0,0,1]]\n</code></pre></p> <p>\u200b\u89e3\u91ca\u200b\uff1a <pre><code>ATM atm = new ATM();\natm.deposit([0,0,1,2,1]); // \u200b\u5b58\u5165\u200b 1 \u200b\u5f20\u200b $100 \uff0c2 \u200b\u5f20\u200b $200 \u200b\u548c\u200b 1 \u200b\u5f20\u200b $500 \u200b\u7684\u200b\u949e\u7968\u200b\u3002\natm.withdraw(600);        // \u200b\u8fd4\u56de\u200b [0,0,1,0,1] \u3002\u200b\u673a\u5668\u200b\u8fd4\u56de\u200b 1 \u200b\u5f20\u200b $100 \u200b\u548c\u200b 1 \u200b\u5f20\u200b $500 \u200b\u7684\u200b\u949e\u7968\u200b\u3002\u200b\u673a\u5668\u200b\u91cc\u200b\u5269\u4f59\u200b\u949e\u7968\u200b\u7684\u200b\u6570\u91cf\u200b\u4e3a\u200b [0,0,0,2,0] \u3002\natm.deposit([0,1,0,1,1]); // \u200b\u5b58\u5165\u200b 1 \u200b\u5f20\u200b $50 \uff0c1 \u200b\u5f20\u200b $200 \u200b\u548c\u200b 1 \u200b\u5f20\u200b $500 \u200b\u7684\u200b\u949e\u7968\u200b\u3002\n                          // \u200b\u673a\u5668\u200b\u4e2d\u200b\u5269\u4f59\u200b\u949e\u7968\u200b\u6570\u91cf\u200b\u4e3a\u200b [0,1,0,3,1] \u3002\natm.withdraw(600);        // \u200b\u8fd4\u56de\u200b [-1] \u3002\u200b\u673a\u5668\u200b\u4f1a\u200b\u5c1d\u8bd5\u200b\u53d6\u51fa\u200b $500 \u200b\u7684\u200b\u949e\u7968\u200b\uff0c\u200b\u7136\u540e\u200b\u65e0\u6cd5\u200b\u5f97\u5230\u200b\u5269\u4f59\u200b\u7684\u200b $100 \uff0c\u200b\u6240\u4ee5\u200b\u53d6\u6b3e\u200b\u8bf7\u6c42\u200b\u4f1a\u200b\u88ab\u200b\u62d2\u7edd\u200b\u3002\n                          // \u200b\u7531\u4e8e\u200b\u8bf7\u6c42\u200b\u88ab\u200b\u62d2\u7edd\u200b\uff0c\u200b\u673a\u5668\u200b\u4e2d\u200b\u949e\u7968\u200b\u7684\u200b\u6570\u91cf\u200b\u4e0d\u4f1a\u200b\u53d1\u751f\u200b\u6539\u53d8\u200b\u3002\natm.withdraw(550);        // \u200b\u8fd4\u56de\u200b [0,1,0,0,1] \uff0c\u200b\u673a\u5668\u200b\u4f1a\u200b\u8fd4\u56de\u200b 1 \u200b\u5f20\u200b $50 \u200b\u7684\u200b\u949e\u7968\u200b\u548c\u200b 1 \u200b\u5f20\u200b $500 \u200b\u7684\u200b\u949e\u7968\u200b\u3002\n</code></pre></p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>banknotesCount.length == 5</code></li> <li><code>0 &lt;= banknotesCount[i] &lt;= 10^9</code></li> <li><code>1 &lt;= amount &lt;= 10^9</code></li> <li>\u200b\u603b\u5171\u200b \u200b\u6700\u591a\u200b\u6709\u200b <code>5000</code> \u200b\u6b21\u200b <code>withdraw</code> \u200b\u548c\u200b <code>deposit</code> \u200b\u7684\u200b\u8c03\u7528\u200b\u3002</li> <li>\u200b\u51fd\u6570\u200b <code>withdraw</code> \u200b\u548c\u200b <code>deposit</code> \u200b\u81f3\u5c11\u200b\u5404\u6709\u200b \u200b\u4e00\u6b21\u200b \u200b\u8c03\u7528\u200b\u3002</li> </ul> <p>Reference</p>","tags":["\u8d2a\u5fc3","\u8bbe\u8ba1","\u6570\u7ec4"]},{"location":"coding/leetcode/2241/#_2","title":"\u9898\u89e3","text":"<p>ATM\u200b\u673a\u53ea\u200b\u91c7\u53d6\u200b\u8d2a\u5fc3\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u5f53\u200b\u8d2a\u5fc3\u200b\u7b97\u6cd5\u200b\u65e0\u6cd5\u200b\u6ee1\u8db3\u200b\u65f6\u200b\uff0cATM\u200b\u673a\u4f1a\u200b\u62d2\u7edd\u200b\u53d6\u6b3e\u200b\u8bf7\u6c42\u200b\u3002</p> <pre><code>from typing import List\n\nclass ATM:\n\n    def __init__(self):\n        self.cash: List[int] = [0] * 5\n        self.amount: List[int] = [500, 200, 100, 50, 20]\n\n    def deposit(self, banknotesCount: List[int]) -&gt; None:\n        for i, x in enumerate(banknotesCount[::-1]):\n            self.cash[i] += x\n\n    def withdraw(self, amount: int) -&gt; List[int]:\n        if amount % 10:\n            return [-1]\n\n        result = [0] * 5\n        for i, x in enumerate(self.amount):\n            num, rest = divmod(amount, x)\n            num = min(self.cash[i], num)\n            amount -= x * num\n            result[4 - i] += num\n            self.cash[i] -= num\n\n        if amount:\n            self.deposit(result)\n            return [-1]\n        return result\n\n\n# Your ATM object will be instantiated and called as such:\n# obj = ATM()\n# obj.deposit(banknotesCount)\n# param_2 = obj.withdraw(amount)\n</code></pre>","tags":["\u8d2a\u5fc3","\u8bbe\u8ba1","\u6570\u7ec4"]},{"location":"coding/leetcode/2264/","title":"2264. \u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u6700\u5927\u200b\u7684\u200b 3 \u200b\u4f4d\u200b\u76f8\u540c\u200b\u6570\u5b57","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/2264/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b <code>num</code> \uff0c\u200b\u8868\u793a\u200b\u4e00\u4e2a\u200b\u5927\u200b\u6574\u6570\u200b\u3002\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u6ee1\u8db3\u200b\u4e0b\u8ff0\u200b\u6240\u6709\u200b\u6761\u4ef6\u200b\uff0c\u200b\u5219\u200b\u8ba4\u4e3a\u200b\u8be5\u200b\u6574\u6570\u200b\u662f\u200b\u4e00\u4e2a\u200b \u200b\u4f18\u8d28\u200b\u6574\u6570\u200b \uff1a</p> <ul> <li>\u200b\u8be5\u200b\u6574\u6570\u200b\u662f\u200b <code>num</code> \u200b\u7684\u200b\u4e00\u4e2a\u200b\u957f\u5ea6\u200b\u4e3a\u200b <code>3</code> \u200b\u7684\u200b \u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b \u3002</li> <li>\u200b\u8be5\u200b\u6574\u6570\u200b\u7531\u200b\u552f\u4e00\u200b\u4e00\u4e2a\u200b\u6570\u5b57\u200b\u91cd\u590d\u200b <code>3</code> \u200b\u6b21\u200b\u7ec4\u6210\u200b\u3002</li> </ul> <p>\u200b\u4ee5\u200b\u5b57\u7b26\u4e32\u200b\u5f62\u5f0f\u200b\u8fd4\u56de\u200b \u200b\u6700\u5927\u200b\u7684\u200b\u4f18\u8d28\u200b\u6574\u6570\u200b \u3002\u200b\u5982\u679c\u200b\u4e0d\u200b\u5b58\u5728\u200b\u6ee1\u8db3\u8981\u6c42\u200b\u7684\u200b\u6574\u6570\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u7a7a\u200b\u5b57\u7b26\u4e32\u200b <code>\"\"</code> \u3002</p> <p>\u200b\u6ce8\u610f\u200b\uff1a</p> <ul> <li>\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b \u200b\u662f\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u8fde\u7eed\u200b\u5b57\u7b26\u200b\u5e8f\u5217\u200b\u3002</li> <li><code>num</code> \u200b\u6216\u200b\u4f18\u8d28\u200b\u6574\u6570\u200b\u4e2d\u200b\u53ef\u80fd\u200b\u5b58\u5728\u200b \u200b\u524d\u5bfc\u200b\u96f6\u200b \u3002</li> </ul> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>num = \"6777133339\"</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>\"777\"</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a<code>num \u200b\u4e2d\u200b\u5b58\u5728\u200b\u4e24\u4e2a\u200b\u4f18\u8d28\u200b\u6574\u6570\u200b\uff1a\"777\" \u200b\u548c\u200b \"333\" \u3002</code></p> <p><code>\"777\" \u200b\u662f\u200b\u6700\u5927\u200b\u7684\u200b\u90a3\u4e2a\u200b\uff0c\u200b\u6240\u4ee5\u200b\u8fd4\u56de\u200b \"777\" \u3002</code></p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>num = \"2300019\"</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>\"000\"</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a<code>\"000\" \u200b\u662f\u200b\u552f\u4e00\u200b\u4e00\u4e2a\u200b\u4f18\u8d28\u200b\u6574\u6570\u200b\u3002</code></p> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>num = \"42352338\"</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>\"\"</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a<code>\u200b\u4e0d\u200b\u5b58\u5728\u200b\u957f\u5ea6\u200b\u4e3a\u200b 3 \u200b\u4e14\u200b\u4ec5\u200b\u7531\u200b\u4e00\u4e2a\u200b\u552f\u4e00\u200b\u6570\u5b57\u200b\u7ec4\u6210\u200b\u7684\u200b\u6574\u6570\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u4e0d\u200b\u5b58\u5728\u200b\u4f18\u8d28\u200b\u6574\u6570\u200b\u3002</code></p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>3 &lt;= num.length &lt;= 1000</code></li> <li><code>num</code> \u200b\u4ec5\u200b\u7531\u200b\u6570\u5b57\u200b\uff08<code>0</code> - <code>9</code>\uff09\u200b\u7ec4\u6210\u200b</li> </ul> <p>Reference</p>","tags":["\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/2264/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4f9d\u5e8f\u200b\u904d\u5386\u200b\u6570\u7ec4\u200b\uff0c\u200b\u5bfb\u627e\u200b\u6700\u5927\u200b\u7684\u200b\u8fde\u7eed\u200b\u51fa\u73b0\u200b\u4e09\u6b21\u200b\u7684\u200b\u6570\u5b57\u200b\u5373\u53ef\u200b\u3002</p> <pre><code>class Solution:\n    def largestGoodInteger(self, num: str) -&gt; str:\n        max = -1\n        for (x, y1), (y2, z) in zip(pairwise(num), pairwise(num[1:])):\n            if x == y1 and y2 == z and int(x) &gt; max:\n                max = int(x)\n        if max == -1:\n            return \"\"\n        return str(max) * 3\n</code></pre>","tags":["\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/2266/","title":"2266. \u200b\u7edf\u8ba1\u200b\u6253\u5b57\u200b\u65b9\u6848\u200b\u6570","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u54c8\u5e0c\u8868","\u6570\u5b66","\u5b57\u7b26\u4e32","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/2266/#_1","title":"\u9898\u76ee","text":"<p>Alice \u200b\u5728\u200b\u7ed9\u200b Bob \u200b\u7528\u200b\u624b\u673a\u200b\u6253\u5b57\u200b\u3002\u200b\u6570\u5b57\u200b\u5230\u200b\u5b57\u6bcd\u200b\u7684\u200b \u200b\u5bf9\u5e94\u200b \u200b\u5982\u4e0b\u200b\u56fe\u200b\u6240\u793a\u200b\u3002</p> <p></p> <p>\u200b\u4e3a\u4e86\u200b \u200b\u6253\u51fa\u200b \u200b\u4e00\u4e2a\u200b\u5b57\u6bcd\u200b\uff0cAlice \u200b\u9700\u8981\u200b \u200b\u6309\u200b \u200b\u5bf9\u5e94\u200b\u5b57\u6bcd\u200b <code>i</code> \u200b\u6b21\u200b\uff0c<code>i</code> \u200b\u662f\u200b\u8be5\u200b\u5b57\u6bcd\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u6309\u952e\u200b\u4e0a\u200b\u6240\u5904\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u3002</p> <ul> <li>\u200b\u6bd4\u65b9\u8bf4\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u6309\u51fa\u200b\u5b57\u6bcd\u200b <code>'s'</code> \uff0cAlice \u200b\u9700\u8981\u200b\u6309\u200b <code>'7'</code> \u200b\u56db\u6b21\u200b\u3002\u200b\u7c7b\u4f3c\u200b\u7684\u200b\uff0c Alice \u200b\u9700\u8981\u200b\u6309\u200b <code>'5'</code> \u200b\u4e24\u6b21\u200b\u5f97\u5230\u200b\u5b57\u6bcd\u200b <code>'k'</code> \u3002</li> <li>\u200b\u6ce8\u610f\u200b\uff0c\u200b\u6570\u5b57\u200b <code>'0'</code> \u200b\u548c\u200b <code>'1'</code> \u200b\u4e0d\u200b\u6620\u5c04\u200b\u5230\u200b\u4efb\u4f55\u200b\u5b57\u6bcd\u200b\uff0c\u200b\u6240\u4ee5\u200b Alice \u200b\u4e0d\u200b \u200b\u4f7f\u7528\u200b\u5b83\u4eec\u200b\u3002</li> </ul> <p>\u200b\u4f46\u662f\u200b\uff0c\u200b\u7531\u4e8e\u200b\u4f20\u8f93\u200b\u7684\u200b\u9519\u8bef\u200b\uff0cBob \u200b\u6ca1\u6709\u200b\u6536\u5230\u200b Alice \u200b\u6253\u5b57\u200b\u7684\u200b\u5b57\u6bcd\u200b\u4fe1\u606f\u200b\uff0c\u200b\u53cd\u800c\u200b\u6536\u5230\u200b\u4e86\u200b \u200b\u6309\u952e\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u4fe1\u606f\u200b \u3002</p> <ul> <li>\u200b\u6bd4\u65b9\u8bf4\u200b\uff0cAlice \u200b\u53d1\u51fa\u200b\u7684\u200b\u4fe1\u606f\u200b\u4e3a\u200b <code>\"bob\"</code> \uff0cBob \u200b\u5c06\u200b\u6536\u5230\u200b\u5b57\u7b26\u4e32\u200b <code>\"2266622\"</code> \u3002</li> </ul> <p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b <code>pressedKeys</code> \uff0c\u200b\u8868\u793a\u200b Bob \u200b\u6536\u5230\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u8bf7\u200b\u4f60\u200b\u8fd4\u56de\u200b Alice \u200b\u603b\u5171\u200b\u53ef\u80fd\u200b\u53d1\u51fa\u200b\u591a\u5c11\u200b\u79cd\u200b\u6587\u5b57\u200b\u4fe1\u606f\u200b \u3002</p> <p>\u200b\u7531\u4e8e\u200b\u7b54\u6848\u200b\u53ef\u80fd\u200b\u5f88\u5927\u200b\uff0c\u200b\u5c06\u200b\u5b83\u200b\u5bf9\u200b <code>10^9 + 7</code> \u200b\u53d6\u4f59\u200b \u200b\u540e\u200b\u8fd4\u56de\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1apressedKeys = \"22233\"</p> <p>\u200b\u8f93\u51fa\u200b\uff1a8</p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>Alice \u200b\u53ef\u80fd\u200b\u53d1\u51fa\u200b\u7684\u200b\u6587\u5b57\u200b\u4fe1\u606f\u200b\u5305\u62ec\u200b\uff1a</p> <p>\"aaadd\", \"abdd\", \"badd\", \"cdd\", \"aaae\", \"abe\", \"bae\" \u200b\u548c\u200b \"ce\" \u3002</p> <p>\u200b\u7531\u4e8e\u200b\u603b\u5171\u200b\u6709\u200b 8 \u200b\u79cd\u200b\u53ef\u80fd\u200b\u7684\u200b\u4fe1\u606f\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u8fd4\u56de\u200b 8 \u3002</p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1apressedKeys = \"222222222222222222222222222222222222\"</p> <p>\u200b\u8f93\u51fa\u200b\uff1a82876089</p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u603b\u5171\u200b\u6709\u200b 2082876103 \u200b\u79cd\u200b Alice \u200b\u53ef\u80fd\u200b\u53d1\u51fa\u200b\u7684\u200b\u6587\u5b57\u200b\u4fe1\u606f\u200b\u3002</p> <p>\u200b\u7531\u4e8e\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5c06\u200b\u7b54\u6848\u200b\u5bf9\u200b 10^9 + 7 \u200b\u53d6\u4f59\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u8fd4\u56de\u200b 2082876103 % (10^9 + 7) = 82876089 \u3002</p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= pressedKeys.length &lt;= 10^5</code></li> <li><code>pressedKeys</code> \u200b\u53ea\u200b\u5305\u542b\u200b\u6570\u5b57\u200b <code>'2'</code> \u200b\u5230\u200b <code>'9'</code> \u3002</li> </ul> <p>Reference</p>","tags":["\u54c8\u5e0c\u8868","\u6570\u5b66","\u5b57\u7b26\u4e32","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/2266/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4f7f\u7528\u200b\u52a8\u6001\u200b\u89c4\u5212\u200b\u8ba1\u7b97\u200b\u6590\u6ce2\u200b\u90a3\u200b\u5951\u6570\u200b\u7684\u200b\u5347\u7ea7\u7248\u200b\u3002\u200b\u624b\u673a\u200b\u952e\u76d8\u200b\u4e0a\u200b\u7684\u200b\u6309\u952e\u200b\u5206\u4e3a\u200b\u4e24\u79cd\u200b\uff1a7\u30019\u200b\u53ef\u4ee5\u200b\u6309\u200b4\u200b\u6b21\u200b\uff1b\u200b\u5176\u4f59\u200b\u6309\u952e\u200b\u53ef\u4ee5\u200b\u6309\u200b3\u200b\u6b21\u200b\u3002</p> <ul> <li>\u200b\u5bf9\u4e8e\u200b\u53ef\u4ee5\u200b\u51fa\u73b0\u200b\\(n\\)\u200b\u6b21\u200b\u7684\u200b\u6309\u952e\u200b\uff0c\u200b\u8fde\u7eed\u200b\u51fa\u73b0\u200b\\(k\\)\u200b\u6b21\u200b\u7684\u200b\u6240\u6709\u200b\u79cd\u7c7b\u200b\u6570\u200b\u7b49\u4e8e\u200b\u8fde\u7eed\u200b\u51fa\u73b0\u200b\\(k - n\\)\u200b\u5230\u200b\\(k - 1\\)\u200b\u6b21\u200b\u7684\u200b\u6240\u6709\u200b\u79cd\u7c7b\u200b\u6570\u200b\u4e4b\u200b\u548c\u200b\u3002</li> <li>\u200b\u82e5\u200b\\(k - n &lt; 0\\)\uff0c\u200b\u5219\u200b\u5bf9\u5e94\u200b\u7684\u200b\u79cd\u7c7b\u200b\u6570\u4e3a\u200b\\(0\\)\uff0c\u200b\u8fde\u7eed\u200b\u51fa\u73b0\u200b\\(0\\)\u200b\u6b21\u200b\u5bf9\u5e94\u200b\u7684\u200b\u79cd\u7c7b\u200b\u6570\u4e3a\u200b\\(1\\)</li> </ul> <p>\u200b\u5206\u6bb5\u200b\u7edf\u8ba1\u200b\u51fa\u200b\u6bcf\u4e2a\u200b\u6309\u952e\u200b\u8fde\u7eed\u200b\u51fa\u73b0\u200b\u7684\u200b\u6b21\u6570\u200b\uff0c\u200b\u5c06\u200b\u6bcf\u4e2a\u200b\u5206\u6bb5\u200b\u53ef\u80fd\u200b\u7684\u200b\u7ec4\u5408\u200b\u6570\u200b\u76f8\u4e58\u200b\uff0c\u200b\u5373\u200b\u4e3a\u200b\u6700\u7ec8\u200b\u7ed3\u679c\u200b\u3002</p> <pre><code>from typing import Tuple\n\nclass Solution:\n    maxCounts = {\n        str(_): 4 if _ in {7, 9} else 3\n        for _ in range(2, 10)\n    }\n    letterCounts = {\n        3: [1],\n        4: [1]\n    }\n    const = 1000000000 + 7\n\n    def count(self, pressedKeys: str):\n        current_char, current_count = None, 0\n        for _ in pressedKeys:\n            if _ != current_char:\n                yield (current_char, current_count)\n                current_char, current_count = _, 0\n            current_count += 1\n        yield (current_char, current_count)\n\n    def letterCount(self, count: int, maxCount: int) -&gt; int:\n        if count &lt; 0:\n            return 0\n        while len(self.letterCounts[maxCount]) &lt;= count:\n            self.letterCounts[maxCount].append(\n                sum(self.letterCounts[maxCount][-maxCount:]) \\\n                % self.const\n            )\n        return self.letterCounts[maxCount][count]\n\n    def countTexts(self, pressedKeys: str) -&gt; int:\n        result = 1\n        for key, count in self.count(pressedKeys):\n            if key is None:\n                continue\n            maxCount = self.maxCounts[key]\n            result *= self.letterCount(count, maxCount)\n            result %= self.const\n        return result\n</code></pre>","tags":["\u54c8\u5e0c\u8868","\u6570\u5b66","\u5b57\u7b26\u4e32","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/2270/","title":"2270. \u200b\u5206\u5272\u200b\u6570\u7ec4\u200b\u7684\u200b\u65b9\u6848\u200b\u6570","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u7ec4","\u524d\u7f00\u548c"]},{"location":"coding/leetcode/2270/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u4e0b\u6807\u200b\u4ece\u200b 0 \u200b\u5f00\u59cb\u200b\u957f\u5ea6\u200b\u4e3a\u200b <code>n</code> \u200b\u7684\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b <code>nums</code> \u3002 \u200b\u5982\u679c\u200b\u4ee5\u4e0b\u200b\u63cf\u8ff0\u200b\u4e3a\u200b\u771f\u200b\uff0c\u200b\u90a3\u4e48\u200b <code>nums</code> \u200b\u5728\u200b\u4e0b\u6807\u200b <code>i</code> \u200b\u5904\u6709\u200b\u4e00\u4e2a\u200b \u200b\u5408\u6cd5\u200b\u7684\u200b\u5206\u5272\u200b \uff1a</p> <p>\u200b\u524d\u200b <code>i + 1</code> \u200b\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u548c\u200b \u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b \u200b\u5269\u4e0b\u200b\u7684\u200b <code>n - i - 1</code> \u200b\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u548c\u200b\u3002 \u200b\u4e0b\u6807\u200b <code>i</code> \u200b\u7684\u200b\u53f3\u8fb9\u200b \u200b\u81f3\u5c11\u200b\u6709\u200b\u4e00\u4e2a\u200b \u200b\u5143\u7d20\u200b\uff0c\u200b\u4e5f\u5c31\u662f\u8bf4\u200b\u4e0b\u6807\u200b <code>i</code> \u200b\u6ee1\u8db3\u200b 0 &lt;= i &lt; n - 1 \u3002 \u200b\u8bf7\u200b\u4f60\u200b\u8fd4\u56de\u200b <code>nums</code> \u200b\u4e2d\u200b\u7684\u200b \u200b\u5408\u6cd5\u200b\u5206\u5272\u200b \u200b\u65b9\u6848\u200b\u6570\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1anums = [10,4,-8,7]</p> <p>\u200b\u8f93\u51fa\u200b\uff1a2</p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u603b\u5171\u200b\u6709\u200b 3 \u200b\u79cd\u200b\u4e0d\u540c\u200b\u7684\u200b\u65b9\u6848\u200b\u53ef\u4ee5\u200b\u5c06\u200b nums \u200b\u5206\u5272\u200b\u6210\u200b\u4e24\u4e2a\u200b\u975e\u7a7a\u200b\u7684\u200b\u90e8\u5206\u200b\uff1a</p> <ul> <li>\u200b\u5728\u200b\u4e0b\u6807\u200b 0 \u200b\u5904\u200b\u5206\u5272\u200b nums \u3002\u200b\u90a3\u4e48\u200b\u7b2c\u4e00\u90e8\u200b\u5206\u4e3a\u200b [10] \uff0c\u200b\u548c\u200b\u4e3a\u200b 10 \u3002\u200b\u7b2c\u4e8c\u200b\u90e8\u5206\u200b\u4e3a\u200b [4,-8,7] \uff0c\u200b\u548c\u200b\u4e3a\u200b 3 \u3002\u200b\u56e0\u4e3a\u200b 10 &gt;= 3 \uff0c\u200b\u6240\u4ee5\u200b i = 0 \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5408\u6cd5\u200b\u7684\u200b\u5206\u5272\u200b\u3002</li> <li>\u200b\u5728\u200b\u4e0b\u6807\u200b 1 \u200b\u5904\u200b\u5206\u5272\u200b nums \u3002\u200b\u90a3\u4e48\u200b\u7b2c\u4e00\u90e8\u200b\u5206\u4e3a\u200b [10,4] \uff0c\u200b\u548c\u200b\u4e3a\u200b 14 \u3002\u200b\u7b2c\u4e8c\u200b\u90e8\u5206\u200b\u4e3a\u200b [-8,7] \uff0c\u200b\u548c\u200b\u4e3a\u200b -1 \u3002\u200b\u56e0\u4e3a\u200b 14 &gt;= -1 \uff0c\u200b\u6240\u4ee5\u200b i = 1 \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5408\u6cd5\u200b\u7684\u200b\u5206\u5272\u200b\u3002</li> <li>\u200b\u5728\u200b\u4e0b\u6807\u200b 2 \u200b\u5904\u200b\u5206\u5272\u200b nums \u3002\u200b\u90a3\u4e48\u200b\u7b2c\u4e00\u90e8\u200b\u5206\u4e3a\u200b [10,4,-8] \uff0c\u200b\u548c\u200b\u4e3a\u200b 6 \u3002\u200b\u7b2c\u4e8c\u200b\u90e8\u5206\u200b\u4e3a\u200b [7] \uff0c\u200b\u548c\u200b\u4e3a\u200b 7 \u3002\u200b\u56e0\u4e3a\u200b 6 &lt; 7 \uff0c\u200b\u6240\u4ee5\u200b i = 2 \u200b\u4e0d\u662f\u200b\u4e00\u4e2a\u200b\u5408\u6cd5\u200b\u7684\u200b\u5206\u5272\u200b\u3002</li> </ul> <p>\u200b\u6240\u4ee5\u200b nums \u200b\u4e2d\u200b\u603b\u5171\u200b\u5408\u6cd5\u200b\u5206\u5272\u200b\u65b9\u6848\u200b\u53d7\u4e3a\u200b 2 \u3002</p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>nums = [2,3,1,0]</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>2</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u603b\u5171\u200b\u6709\u200b 2 \u200b\u79cd\u200b nums \u200b\u7684\u200b\u5408\u6cd5\u200b\u5206\u5272\u200b\uff1a</p> <ul> <li>\u200b\u5728\u200b\u4e0b\u6807\u200b 1 \u200b\u5904\u200b\u5206\u5272\u200b nums \u3002\u200b\u90a3\u4e48\u200b\u7b2c\u4e00\u90e8\u200b\u5206\u4e3a\u200b [2,3] \uff0c\u200b\u548c\u200b\u4e3a\u200b 5 \u3002\u200b\u7b2c\u4e8c\u200b\u90e8\u5206\u200b\u4e3a\u200b [1,0] \uff0c\u200b\u548c\u200b\u4e3a\u200b 1 \u3002\u200b\u56e0\u4e3a\u200b 5 &gt;= 1 \uff0c\u200b\u6240\u4ee5\u200b i = 1 \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5408\u6cd5\u200b\u7684\u200b\u5206\u5272\u200b\u3002</li> <li>\u200b\u5728\u200b\u4e0b\u6807\u200b 2 \u200b\u5904\u200b\u5206\u5272\u200b nums \u3002\u200b\u90a3\u4e48\u200b\u7b2c\u4e00\u90e8\u200b\u5206\u4e3a\u200b [2,3,1] \uff0c\u200b\u548c\u200b\u4e3a\u200b 6 \u3002\u200b\u7b2c\u4e8c\u200b\u90e8\u5206\u200b\u4e3a\u200b [0] \uff0c\u200b\u548c\u200b\u4e3a\u200b 0 \u3002\u200b\u56e0\u4e3a\u200b 6 &gt;= 0 \uff0c\u200b\u6240\u4ee5\u200b i = 2 \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5408\u6cd5\u200b\u7684\u200b\u5206\u5272\u200b\u3002</li> </ul> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>2 &lt;= nums.length &lt;= 10^5</code></li> <li><code>-10^5 &lt;= nums[i] &lt;= 10^5</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u524d\u7f00\u548c"]},{"location":"coding/leetcode/2270/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u6309\u7167\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u904d\u5386\u200b\u4e00\u904d\u200b\u6570\u7ec4\u200b\u8ba1\u7b97\u200b\u524d\u7f00\u200b\u548c\u200b\uff0c\u200b\u518d\u200b\u904d\u5386\u200b\u4e00\u904d\u200b\u524d\u7f00\u200b\u548c\u200b\u6570\u7ec4\u200b\uff0c\u200b\u5224\u65ad\u200b\u662f\u5426\u200b\u6ee1\u8db3\u6761\u4ef6\u200b\u5373\u53ef\u200b\u3002\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\u7684\u200b\u662f\u200b\u5176\u4ed6\u200b\u8bed\u8a00\u200b\u5982\u679c\u200b\u7528\u200b4\u200b\u5b57\u8282\u200b\u7684\u200b<code>int</code>\u200b\u7c7b\u578b\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u6ea2\u51fa\u200b\u3002</p> <pre><code>class Solution:\n    def waysToSplitArray(self, nums: List[int]) -&gt; int:\n        prefixSum = [0]\n        for _ in nums:\n            prefixSum.append(prefixSum[-1] + _)\n        prefixSum.pop(0)\n\n        minSum = prefixSum[-1] / 2\n        result = 0\n        for _ in prefixSum[:-1]:\n            if _ &gt;= minSum:\n                result += 1\n        return result\n</code></pre>","tags":["\u6570\u7ec4","\u524d\u7f00\u548c"]},{"location":"coding/leetcode/2274/","title":"2241. \u200b\u8bbe\u8ba1\u200b\u4e00\u4e2a\u200b ATM \u200b\u673a\u5668","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u7ec4","\u6392\u5e8f"]},{"location":"coding/leetcode/2274/#_1","title":"\u9898\u76ee","text":"<p>Alice \u200b\u7ba1\u7406\u200b\u7740\u200b\u4e00\u5bb6\u200b\u516c\u53f8\u200b\uff0c\u200b\u5e76\u200b\u79df\u7528\u200b\u5927\u697c\u200b\u7684\u200b\u90e8\u5206\u200b\u697c\u5c42\u200b\u4f5c\u4e3a\u200b\u529e\u516c\u200b\u7a7a\u95f4\u200b\u3002Alice \u200b\u51b3\u5b9a\u200b\u5c06\u200b\u4e00\u4e9b\u200b\u697c\u5c42\u200b\u4f5c\u4e3a\u200b \u200b\u7279\u6b8a\u200b\u697c\u5c42\u200b \uff0c\u200b\u4ec5\u200b\u7528\u4e8e\u200b\u653e\u677e\u200b\u3002</p> <p>\u200b\u7ed9\u200b\u4f60\u200b\u4e24\u4e2a\u200b\u6574\u6570\u200b <code>bottom</code> \u200b\u548c\u200b <code>top</code> \uff0c\u200b\u8868\u793a\u200b Alice \u200b\u79df\u7528\u200b\u4e86\u200b\u4ece\u200b <code>bottom</code> \u200b\u5230\u200b <code>top</code>\uff08\u200b\u542b\u200b <code>bottom</code> \u200b\u548c\u200b <code>top</code> \u200b\u5728\u5185\u200b\uff09\u200b\u7684\u200b\u6240\u6709\u200b\u697c\u5c42\u200b\u3002\u200b\u53e6\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b <code>special</code> \uff0c\u200b\u5176\u4e2d\u200b <code>special[i]</code> \u200b\u8868\u793a\u200b Alice \u200b\u6307\u5b9a\u200b\u7528\u4e8e\u200b\u653e\u677e\u200b\u7684\u200b\u7279\u6b8a\u200b\u697c\u5c42\u200b\u3002</p> <p>\u200b\u8fd4\u56de\u200b\u4e0d\u200b\u542b\u200b\u7279\u6b8a\u200b\u697c\u5c42\u200b\u7684\u200b \u200b\u6700\u5927\u200b \u200b\u8fde\u7eed\u200b\u697c\u5c42\u200b\u6570\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>bottom = 2, top = 9, special = [4,6]</code> \u200b\u8f93\u51fa\u200b\uff1a<code>3</code> \u200b\u89e3\u91ca\u200b\uff1a<code>\u200b\u4e0b\u9762\u200b\u5217\u51fa\u200b\u7684\u200b\u662f\u200b\u4e0d\u200b\u542b\u200b\u7279\u6b8a\u200b\u697c\u5c42\u200b\u7684\u200b\u8fde\u7eed\u200b\u697c\u5c42\u200b\u8303\u56f4\u200b\uff1a - (2, 3) \uff0c\u200b\u697c\u5c42\u200b\u6570\u4e3a\u200b 2 \u3002 - (5, 5) \uff0c\u200b\u697c\u5c42\u200b\u6570\u4e3a\u200b 1 \u3002 - (7, 9) \uff0c\u200b\u697c\u5c42\u200b\u6570\u4e3a\u200b 3 \u3002 \u200b\u56e0\u6b64\u200b\uff0c\u200b\u8fd4\u56de\u200b\u6700\u5927\u200b\u8fde\u7eed\u200b\u697c\u5c42\u200b\u6570\u200b 3 \u3002</code></p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>bottom = 6, top = 8, special = [7,6,8]</code> \u200b\u8f93\u51fa\u200b\uff1a<code>0</code> \u200b\u89e3\u91ca\u200b\uff1a<code>\u200b\u6bcf\u200b\u5c42\u697c\u200b\u90fd\u200b\u88ab\u200b\u89c4\u5212\u200b\u4e3a\u200b\u7279\u6b8a\u200b\u697c\u5c42\u200b\uff0c\u200b\u6240\u4ee5\u200b\u8fd4\u56de\u200b 0 \u3002</code></p> <p>\u200b\u63d0\u793a\u200b</p> <ul> <li><code>1 &lt;= special.length &lt;= 10^5</code></li> <li><code>1 &lt;= bottom &lt;= special[i] &lt;= top &lt;= 10^9</code></li> <li><code>special</code> \u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u503c\u200b \u200b\u4e92\u4e0d\u200b\u76f8\u540c\u200b</li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u6392\u5e8f"]},{"location":"coding/leetcode/2274/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u5c06\u200b<code>bottom - 1</code>\u200b\u548c\u200b<code>top + 1</code>\u200b\u52a0\u5165\u200b<code>special</code>\u200b\u6570\u7ec4\u200b\uff0c\u200b\u7136\u540e\u200b\u5bf9\u200b<code>special</code>\u200b\u6570\u7ec4\u200b\u6392\u5e8f\u200b\uff0c\u200b\u8ba1\u7b97\u200b<code>special</code>\u200b\u6570\u7ec4\u200b\u76f8\u90bb\u200b\u4e24\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u5dee\u503c\u200b\uff0c\u200b\u53d6\u200b\u6700\u5927\u503c\u200b\u5373\u53ef\u200b\u3002</p> <pre><code>class Solution:\n\n    def maxConsecutive(self, bottom: int, top: int, special: List[int]) -&gt; int:\n        special_ascending = sorted([bottom - 1, *special, top + 1])\n        result = 0\n        for i in range(len(special) + 1):\n            result = max(result, special_ascending[i + 1] - special_ascending[i] - 1)\n        return result\n</code></pre>","tags":["\u6570\u7ec4","\u6392\u5e8f"]},{"location":"coding/leetcode/2275/","title":"2275. \u200b\u6309\u4f4d\u200b\u4e0e\u200b\u7ed3\u679c\u200b\u5927\u4e8e\u200b\u96f6\u200b\u7684\u200b\u6700\u957f\u200b\u7ec4","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u4f4d\u8fd0\u7b97","\u6570\u7ec4","\u54c8\u5e0c\u8868","\u8ba1\u6570"]},{"location":"coding/leetcode/2275/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u5bf9\u200b\u6570\u7ec4\u200b <code>nums</code> \u200b\u6267\u884c\u200b \u200b\u6309\u4f4d\u200b\u4e0e\u200b \u200b\u76f8\u5f53\u4e8e\u200b\u5bf9\u200b\u6570\u7ec4\u200b <code>nums</code> \u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u6574\u6570\u200b\u6267\u884c\u200b \u200b\u6309\u4f4d\u200b\u4e0e\u200b \u3002</p> <p>\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5bf9\u200b <code>nums = [1, 5, 3]</code> \u200b\u6765\u8bf4\u200b\uff0c\u200b\u6309\u4f4d\u200b\u4e0e\u200b\u7b49\u4e8e\u200b <code>1 &amp; 5 &amp; 3 = 1</code> \u3002 \u200b\u540c\u6837\u200b\uff0c\u200b\u5bf9\u200b <code>nums = [7]</code> \u200b\u800c\u8a00\u200b\uff0c\u200b\u6309\u4f4d\u200b\u4e0e\u200b\u7b49\u4e8e\u200b <code>7</code> \u3002 \u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u6b63\u6574\u6570\u200b\u6570\u7ec4\u200b <code>candidates</code> \u3002\u200b\u8ba1\u7b97\u200b <code>candidates</code> \u200b\u4e2d\u200b\u7684\u200b\u6570\u5b57\u200b\u6bcf\u79cd\u200b\u7ec4\u5408\u200b\u4e0b\u200b \u200b\u6309\u4f4d\u200b\u4e0e\u200b \u200b\u7684\u200b\u7ed3\u679c\u200b\u3002</p> <p>\u200b\u8fd4\u56de\u200b\u6309\u4f4d\u200b\u4e0e\u200b\u7ed3\u679c\u200b\u5927\u4e8e\u200b <code>0</code> \u200b\u7684\u200b \u200b\u6700\u957f\u200b \u200b\u7ec4\u5408\u200b\u7684\u200b\u957f\u5ea6\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>candidates = [16,17,71,62,12,24,14]</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>4</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a\u200b\u7ec4\u5408\u200b <code>[16,17,62,24]</code> \u200b\u7684\u200b\u6309\u4f4d\u200b\u4e0e\u200b\u7ed3\u679c\u200b\u662f\u200b <code>16 &amp; 17 &amp; 62 &amp; 24 = 16 &gt; 0</code> \u3002</p> <p>\u200b\u7ec4\u5408\u200b\u957f\u5ea6\u200b\u662f\u200b <code>4</code> \u3002</p> <p>\u200b\u53ef\u4ee5\u200b\u8bc1\u660e\u200b\u4e0d\u200b\u5b58\u5728\u200b\u6309\u4f4d\u200b\u4e0e\u200b\u7ed3\u679c\u200b\u5927\u4e8e\u200b <code>0</code> \u200b\u4e14\u200b\u957f\u5ea6\u200b\u5927\u4e8e\u200b <code>4</code> \u200b\u7684\u200b\u7ec4\u5408\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b\uff0c\u200b\u7b26\u5408\u200b\u957f\u5ea6\u200b\u6700\u5927\u200b\u7684\u200b\u7ec4\u5408\u200b\u53ef\u80fd\u200b\u4e0d\u6b62\u200b\u4e00\u79cd\u200b\u3002</p> <p>\u200b\u4f8b\u5982\u200b\uff0c\u200b\u7ec4\u5408\u200b <code>[62,12,24,14]</code> \u200b\u7684\u200b\u6309\u4f4d\u200b\u4e0e\u200b\u7ed3\u679c\u200b\u662f\u200b <code>62 &amp; 12 &amp; 24 &amp; 14 = 8 &gt; 0</code> \u3002</p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>candidates = [8,8]</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>2</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a\u200b\u6700\u957f\u200b\u7ec4\u5408\u200b\u662f\u200b <code>[8,8]</code> \uff0c\u200b\u6309\u4f4d\u200b\u4e0e\u200b\u7ed3\u679c\u200b <code>8 &amp; 8 = 8 &gt; 0</code> \u3002</p> <p>\u200b\u7ec4\u5408\u200b\u957f\u5ea6\u200b\u662f\u200b <code>2</code> \uff0c\u200b\u6240\u4ee5\u200b\u8fd4\u56de\u200b <code>2</code> \u3002</p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= candidates.length &lt;= 10^5</code></li> <li><code>1 &lt;= candidates[i] &lt;= 10^7</code></li> </ul> <p>Reference</p>","tags":["\u4f4d\u8fd0\u7b97","\u6570\u7ec4","\u54c8\u5e0c\u8868","\u8ba1\u6570"]},{"location":"coding/leetcode/2275/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u6309\u4f4d\u200b\u4e0e\u200b\u7684\u200b\u7ed3\u679c\u200b\uff0c\u200b\u5982\u679c\u200b\u975e\u96f6\u200b\uff0c\u200b\u5219\u200b\u5176\u4e2d\u200b\u81f3\u5c11\u200b\u4e00\u4f4d\u200b\u4e3a\u200b1\u3002\u200b\u4e3a\u200b1\u200b\u7684\u200b\u8fd9\u200b\u4e00\u4f4d\u200b\uff0c\u200b\u9700\u8981\u200b\u6574\u4e2a\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u6240\u6709\u200b\u6570\u200b\u7684\u200b\u8fd9\u200b\u4e00\u4f4d\u200b\u90fd\u200b\u5fc5\u987b\u200b\u662f\u200b1\u200b\u624d\u80fd\u200b\u6ee1\u8db3\u200b\u7ed3\u679c\u200b\u4e3a\u200b1\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6309\u4f4d\u200b\u4e0e\u200b\u6240\u80fd\u200b\u8fbe\u5230\u200b\u7684\u200b\u6700\u957f\u200b\u7684\u200b\u7ec4\u5408\u200b\u957f\u5ea6\u200b\uff0c\u200b\u6070\u597d\u200b\u7b49\u4e8e\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u540c\u4e00\u200bbit\u200b\u4f4d\u7f6e\u200b\u4e3a\u200b1\u200b\u7684\u200b\u6700\u5927\u200b\u6570\u5b57\u200b\u4e2a\u6570\u200b\u3002\u200b\u53ea\u200b\u9700\u8981\u200b\u4f9d\u5e8f\u200b\u68c0\u67e5\u200b\u6bcf\u4e2a\u200b\u6570\u5b57\u200b\uff0c\u200b\u7edf\u8ba1\u200b\u5404\u4e2a\u200bbit\u200b\u4e3a\u200b1\u200b\u7684\u200b\u6b21\u6570\u200b\u5373\u53ef\u200b\u3002</p> <pre><code>import math\n\nclass Solution:\n    def largestCombination(self, candidates: List[int]) -&gt; int:\n        highest_bit = int(math.log2(max(candidates))) + 1\n        bits = {(2 ** i): 0 for i in range(highest_bit)}\n\n        for k in bits:\n            for num in candidates:\n                if num &amp; k:\n                    bits[k] += 1\n\n        return max(bits.values())\n</code></pre>","tags":["\u4f4d\u8fd0\u7b97","\u6570\u7ec4","\u54c8\u5e0c\u8868","\u8ba1\u6570"]},{"location":"coding/leetcode/23/","title":"23. \u200b\u5408\u5e76\u200bK\u200b\u4e2a\u200b\u5347\u5e8f\u200b\u94fe\u8868","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u56f0\u96be\u200b</p>","tags":["\u5806","\u94fe\u8868","\u5206\u6cbb\u7b97\u6cd5"]},{"location":"coding/leetcode/23/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u94fe\u8868\u200b\u6570\u7ec4\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u94fe\u8868\u200b\u90fd\u200b\u5df2\u7ecf\u200b\u6309\u200b\u5347\u5e8f\u200b\u6392\u5217\u200b\u3002</p> <p>\u200b\u8bf7\u200b\u4f60\u200b\u5c06\u200b\u6240\u6709\u200b\u94fe\u8868\u200b\u5408\u5e76\u200b\u5230\u200b\u4e00\u4e2a\u200b\u5347\u5e8f\u200b\u94fe\u8868\u200b\u4e2d\u200b\uff0c\u200b\u8fd4\u56de\u200b\u5408\u5e76\u200b\u540e\u200b\u7684\u200b\u94fe\u8868\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1alists = [[1,4,5],[1,3,4],[2,6]]\n\u200b\u8f93\u51fa\u200b\uff1a[1,1,2,3,4,4,5,6]\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u94fe\u8868\u200b\u6570\u7ec4\u200b\u5982\u4e0b\u200b\uff1a\n[\n  1-&gt;4-&gt;5,\n  1-&gt;3-&gt;4,\n  2-&gt;6\n]\n\u200b\u5c06\u200b\u5b83\u4eec\u200b\u5408\u5e76\u200b\u5230\u200b\u4e00\u4e2a\u200b\u6709\u5e8f\u200b\u94fe\u8868\u200b\u4e2d\u200b\u5f97\u5230\u200b\u3002\n1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4-&gt;5-&gt;6\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1alists = []\n\u200b\u8f93\u51fa\u200b\uff1a[]\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1alists = [[]]\n\u200b\u8f93\u51fa\u200b\uff1a[]\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>k == lists.length</code></li> <li><code>0 &lt;= k &lt;= 10^4</code></li> <li><code>0 &lt;= lists[i].length &lt;= 500</code></li> <li><code>-10^4 &lt;= lists[i][j] &lt;= 10^4</code></li> <li><code>lists[i]</code> \u200b\u6309\u200b \u200b\u5347\u5e8f\u200b \u200b\u6392\u5217\u200b</li> <li><code>lists[i].length</code> \u200b\u7684\u200b\u603b\u548c\u200b\u4e0d\u200b\u8d85\u8fc7\u200b <code>10^4</code></li> </ul> <p>Reference</p>","tags":["\u5806","\u94fe\u8868","\u5206\u6cbb\u7b97\u6cd5"]},{"location":"coding/leetcode/23/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u6700\u200b\u76f4\u63a5\u200b\u7684\u200b\u5408\u5e76\u200b\u601d\u8def\u200b\u662f\u200b\u6309\u7167\u200b\u987a\u5e8f\u200b\u5bf9\u200b\u94fe\u8868\u200b\u8fdb\u884c\u200b\u5408\u5e76\u200b\u3002\u200b\u8003\u8651\u200b\u5230\u200b\u5408\u5e76\u200b\u540e\u200b\u94fe\u8868\u200b\u53d8\u200b\u957f\u200b\uff0c\u200b\u5e73\u5747\u200b\u6bcf\u6b21\u200b\u5408\u5e76\u200b\u9700\u8981\u200b\u82b1\u8d39\u200b\\(\\mathcal O(MN)\\)\u200b\u7684\u200b\u65f6\u95f4\u200b\uff0c\u200b\u5171\u9700\u200b\u5408\u5e76\u200b\\(\\mathcal O(M)\\)\u200b\u6b21\u200b\uff0c\u200b\u56e0\u6b64\u200b\u603b\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(\\mathcal O(M^2N)\\)</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\n\nstruct ListNode* mergeLists(struct ListNode* l1, struct ListNode* l2);\nstruct ListNode* mergeKLists(struct ListNode** lists, int listsSize){\n    if (!listsSize)\n        return NULL;\n    struct ListNode *head = lists[0];\n    for (int i = 1; i&lt;listsSize; i++)\n    {\n        if (!head)\n        {\n            head = lists[i];\n            continue;\n        }\n        head = mergeLists(head, lists[i]);\n    }\n    return head;\n}\n\nstruct ListNode* mergeLists(struct ListNode* l1, struct ListNode* l2){\n    if (!l1)\n        return l2;\n    if (!l2)\n        return l1;\n    if (l1-&gt;val &lt; l2-&gt;val)\n    {\n        l1-&gt;next = mergeLists(l1-&gt;next, l2);\n        return l1;\n    }\n    else\n    {\n        l2-&gt;next = mergeLists(l1, l2-&gt;next);\n        return l2;\n    }\n}\n</code></pre> <p>\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b\u4e24\u200b\u4e24\u200b\u5408\u5e76\u200b\u7684\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5408\u5e76\u200b\u64cd\u4f5c\u200b\u7684\u200b\u5e73\u5747\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u964d\u4f4e\u200b\u81f3\u200b\\(\\mathcal O(N\\log M)\\)\uff0c\u200b\u603b\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u53d8\u4e3a\u200b\\(\\mathcal O(MN\\log M)\\)\u3002</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\n\nstruct ListNode* mergeLists(struct ListNode* l1, struct ListNode* l2);\nstruct ListNode* mergeKLists(struct ListNode** lists, int listsSize){\n    if (!listsSize)\n        return NULL;\n    else if (listsSize == 1)\n        return lists[0];\n    else if (listsSize == 2)\n        return mergeLists(lists[0], lists[1]);\n    struct ListNode *head = lists[0];\n    int step = (listsSize + 1) &gt;&gt; 1;\n    for (int i = 0; i &lt; step; i++)\n    {\n        if (i + step &lt; listsSize)\n            lists[i] = mergeLists(lists[i], lists[i + step]);\n    }\n    return mergeKLists(lists, step);\n}\n\nstruct ListNode* mergeLists(struct ListNode* l1, struct ListNode* l2){\n    if (!l1)\n        return l2;\n    if (!l2)\n        return l1;\n    if (l1-&gt;val &lt; l2-&gt;val)\n    {\n        l1-&gt;next = mergeLists(l1-&gt;next, l2);\n        return l1;\n    }\n    else\n    {\n        l2-&gt;next = mergeLists(l1, l2-&gt;next);\n        return l2;\n    }\n}\n</code></pre>","tags":["\u5806","\u94fe\u8868","\u5206\u6cbb\u7b97\u6cd5"]},{"location":"coding/leetcode/234/","title":"234. \u200b\u56de\u6587\u200b\u94fe\u8868","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u94fe\u8868","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/234/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u8bf7\u200b\u5224\u65ad\u200b\u4e00\u4e2a\u200b\u94fe\u8868\u200b\u662f\u5426\u200b\u4e3a\u200b\u56de\u6587\u200b\u94fe\u8868\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: 1-&gt;2\n\u200b\u8f93\u51fa\u200b: false\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: 1-&gt;2-&gt;2-&gt;1\n\u200b\u8f93\u51fa\u200b: true\n</code></pre> <p>\u200b\u8fdb\u9636\u200b\uff1a</p> <p>\u200b\u4f60\u200b\u80fd\u5426\u200b\u7528\u200b\\(O(n)\\)\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u548c\u200b\\(O(1)\\)\u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b\u89e3\u51b3\u200b\u6b64\u9898\u200b\uff1f</p> <p>Reference</p>","tags":["\u94fe\u8868","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/234/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u53cd\u5e8f\u200b\u6784\u5efa\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u94fe\u8868\u200b\uff0c\u200b\u6bd4\u8f83\u200b\u4e24\u4e2a\u200b\u94fe\u8868\u200b\u662f\u5426\u200b\u76f8\u540c\u200b</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\nstruct ListNode *getNode(int val, struct ListNode *next)\n{\n    struct ListNode *ret = (struct ListNode *)malloc(sizeof(struct ListNode));\n    ret-&gt;val = val;\n    ret-&gt;next = next;\n    return ret;\n}\n\nbool isPalindrome(struct ListNode* head){\n    int len = 0;\n    struct ListNode *reversed = NULL, *cur1 = head, *cur2 = NULL;\n    while(cur1 != NULL)\n    {\n        reversed = getNode(cur1-&gt;val, reversed);\n        cur1 = cur1-&gt;next;\n        len++;\n    }\n    cur1 = head;\n    cur2 = reversed;\n    for (int i = 0; i &lt; len / 2; i++)\n    {\n        if (cur1-&gt;val != cur2-&gt;val)\n            return false;\n        cur1 = cur1-&gt;next;\n        cur2 = cur2-&gt;next;\n    }\n    return true;\n}\n</code></pre>","tags":["\u94fe\u8868","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/237/","title":"237. \u200b\u5220\u9664\u200b\u94fe\u8868\u200b\u4e2d\u200b\u7684\u200b\u8282\u70b9","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/237/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u8bf7\u200b\u7f16\u5199\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u4f7f\u200b\u5176\u200b\u53ef\u4ee5\u200b\u5220\u9664\u200b\u67d0\u4e2a\u200b\u94fe\u8868\u200b\u4e2d\u200b\u7ed9\u5b9a\u200b\u7684\u200b\uff08\u200b\u975e\u200b\u672b\u5c3e\u200b\uff09\u200b\u8282\u70b9\u200b\u3002\u200b\u4f20\u5165\u200b\u51fd\u6570\u200b\u7684\u200b\u552f\u4e00\u200b\u53c2\u6570\u200b\u4e3a\u200b \u200b\u8981\u200b\u88ab\u200b\u5220\u9664\u200b\u7684\u200b\u8282\u70b9\u200b \u3002</p> <p>\u200b\u73b0\u6709\u200b\u4e00\u4e2a\u200b\u94fe\u8868\u200b --\u00a0head =\u00a0[4,5,1,9]\uff0c\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u8868\u793a\u200b\u4e3a\u200b:</p> <p></p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1ahead = [4,5,1,9], node = 5\n\u200b\u8f93\u51fa\u200b\uff1a[4,1,9]\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u7ed9\u5b9a\u200b\u4f60\u200b\u94fe\u8868\u200b\u4e2d\u503c\u200b\u4e3a\u200b\u00a05\u00a0\u200b\u7684\u200b\u7b2c\u4e8c\u4e2a\u200b\u8282\u70b9\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5728\u200b\u8c03\u7528\u200b\u4e86\u200b\u4f60\u200b\u7684\u200b\u51fd\u6570\u200b\u4e4b\u540e\u200b\uff0c\u200b\u8be5\u200b\u94fe\u8868\u200b\u5e94\u53d8\u200b\u4e3a\u200b 4 -&gt; 1 -&gt; 9.\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1ahead = [4,5,1,9], node = 1\n\u200b\u8f93\u51fa\u200b\uff1a[4,5,9]\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u7ed9\u5b9a\u200b\u4f60\u200b\u94fe\u8868\u200b\u4e2d\u503c\u200b\u4e3a\u200b\u00a01\u00a0\u200b\u7684\u200b\u7b2c\u4e09\u4e2a\u200b\u8282\u70b9\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5728\u200b\u8c03\u7528\u200b\u4e86\u200b\u4f60\u200b\u7684\u200b\u51fd\u6570\u200b\u4e4b\u540e\u200b\uff0c\u200b\u8be5\u200b\u94fe\u8868\u200b\u5e94\u53d8\u200b\u4e3a\u200b 4 -&gt; 5 -&gt; 9.\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li>\u200b\u94fe\u8868\u200b\u81f3\u5c11\u200b\u5305\u542b\u200b\u4e24\u4e2a\u200b\u8282\u70b9\u200b\u3002</li> <li>\u200b\u94fe\u8868\u200b\u4e2d\u200b\u6240\u6709\u200b\u8282\u70b9\u200b\u7684\u200b\u503c\u200b\u90fd\u200b\u662f\u200b\u552f\u4e00\u200b\u7684\u200b\u3002</li> <li>\u200b\u7ed9\u5b9a\u200b\u7684\u200b\u8282\u70b9\u200b\u4e3a\u200b\u975e\u200b\u672b\u5c3e\u200b\u8282\u70b9\u200b\u5e76\u4e14\u200b\u4e00\u5b9a\u200b\u662f\u200b\u94fe\u8868\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u6709\u6548\u200b\u8282\u70b9\u200b\u3002</li> <li>\u200b\u4e0d\u8981\u200b\u4ece\u200b\u4f60\u200b\u7684\u200b\u51fd\u6570\u200b\u4e2d\u200b\u8fd4\u56de\u200b\u4efb\u4f55\u200b\u7ed3\u679c\u200b\u3002</li> </ul> <p>Reference</p>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/237/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u5c06\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u7684\u200b\u503c\u200b\u590d\u5236\u5230\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\uff0c\u200b\u7136\u540e\u200b\u5220\u53bb\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u3002\uff08\u200b\u5df2\u77e5\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\u4e00\u5b9a\u200b\u4e0d\u662f\u200b\u672b\u5c3e\u200b\u8282\u70b9\u200b\uff09</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>void deleteNode(struct ListNode* node) {\n    node-&gt;val = node-&gt;next-&gt;val;\n    node-&gt;next = node-&gt;next-&gt;next;\n}\n</code></pre>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/24/","title":"24. \u200b\u4e24\u200b\u4e24\u200b\u4ea4\u6362\u200b\u94fe\u8868\u200b\u4e2d\u200b\u7684\u200b\u8282\u70b9","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u9012\u5f52","\u94fe\u8868"]},{"location":"coding/leetcode/24/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u94fe\u8868\u200b\uff0c\u200b\u4e24\u200b\u4e24\u200b\u4ea4\u6362\u200b\u5176\u4e2d\u200b\u76f8\u90bb\u200b\u7684\u200b\u8282\u70b9\u200b\uff0c\u200b\u5e76\u200b\u8fd4\u56de\u200b\u4ea4\u6362\u200b\u540e\u200b\u7684\u200b\u94fe\u8868\u200b\u3002</p> <p>\u200b\u4f60\u200b\u4e0d\u80fd\u200b\u53ea\u662f\u200b\u5355\u7eaf\u200b\u7684\u200b\u6539\u53d8\u200b\u8282\u70b9\u200b\u5185\u90e8\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u800c\u662f\u200b\u9700\u8981\u200b\u5b9e\u9645\u200b\u7684\u200b\u8fdb\u884c\u200b\u8282\u70b9\u200b\u4ea4\u6362\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\uff1a <pre><code>\u200b\u7ed9\u5b9a\u200b 1-&gt;2-&gt;3-&gt;4, \u200b\u4f60\u200b\u5e94\u8be5\u200b\u8fd4\u56de\u200b 2-&gt;1-&gt;4-&gt;3.\n</code></pre></p> <p>Reference</p>","tags":["\u9012\u5f52","\u94fe\u8868"]},{"location":"coding/leetcode/24/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u5148\u200b\u4ea4\u6362\u200b\u524d\u200b\u4e24\u4e2a\u200b\u8282\u70b9\u200b\uff0c\u200b\u518d\u200b\u9012\u5f52\u200b\u5904\u7406\u200b\u540e\u9762\u200b\u7684\u200b\u8282\u70b9\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\n\nstruct ListNode* swapPairs(struct ListNode* head){\n    if (!head || !(head-&gt;next))\n        return head;\n    struct ListNode *temp1 = head-&gt;next, *temp2 = temp1-&gt;next;\n    temp1-&gt;next = head;\n    head-&gt;next = swapPairs(temp2);\n    return temp1;\n}\n</code></pre>","tags":["\u9012\u5f52","\u94fe\u8868"]},{"location":"coding/leetcode/2412/","title":"2412. \u200b\u5b8c\u6210\u200b\u6240\u6709\u200b\u4ea4\u6613\u200b\u7684\u200b\u521d\u59cb\u200b\u6700\u5c11\u200b\u94b1\u6570","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u56f0\u96be\u200b</p>","tags":["\u8d2a\u5fc3","\u6570\u7ec4","\u6392\u5e8f"]},{"location":"coding/leetcode/2412/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u4e0b\u6807\u200b\u4ece\u200b 0 \u200b\u5f00\u59cb\u200b\u7684\u200b\u4e8c\u7ef4\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b <code>transactions</code>\uff0c\u200b\u5176\u4e2d\u200b<code>transactions[i] = [cost_i, cashback_i]</code> \u3002</p> <p>\u200b\u6570\u7ec4\u200b\u63cf\u8ff0\u200b\u4e86\u200b\u82e5\u5e72\u200b\u7b14\u200b\u4ea4\u6613\u200b\u3002\u200b\u5176\u4e2d\u200b\u6bcf\u7b14\u200b\u4ea4\u6613\u200b\u5fc5\u987b\u200b\u4ee5\u200b \u200b\u67d0\u79cd\u200b\u987a\u5e8f\u200b \u200b\u6070\u597d\u200b\u5b8c\u6210\u200b\u4e00\u6b21\u200b\u3002\u200b\u5728\u200b\u4efb\u610f\u200b\u4e00\u4e2a\u200b\u65f6\u523b\u200b\uff0c\u200b\u4f60\u200b\u6709\u200b\u4e00\u5b9a\u200b\u6570\u76ee\u200b\u7684\u200b\u94b1\u200b <code>money</code> \uff0c\u200b\u4e3a\u4e86\u200b\u5b8c\u6210\u200b\u4ea4\u6613\u200b <code>i</code> \uff0c<code>money &gt;= cost_i</code> \u200b\u8fd9\u4e2a\u200b\u6761\u4ef6\u200b\u5fc5\u987b\u200b\u4e3a\u200b\u771f\u200b\u3002\u200b\u6267\u884c\u200b\u4ea4\u6613\u200b\u540e\u200b\uff0c\u200b\u4f60\u200b\u7684\u200b\u94b1\u6570\u200b <code>money</code> \u200b\u53d8\u6210\u200b <code>money - cost_i + cashback_i</code> \u3002</p> <p>\u200b\u8bf7\u200b\u4f60\u200b\u8fd4\u56de\u200b \u200b\u4efb\u610f\u200b\u4e00\u79cd\u200b \u200b\u4ea4\u6613\u200b\u987a\u5e8f\u200b\u4e0b\u200b\uff0c\u200b\u4f60\u200b\u90fd\u200b\u80fd\u200b\u5b8c\u6210\u200b\u6240\u6709\u200b\u4ea4\u6613\u200b\u7684\u200b\u6700\u5c11\u200b\u94b1\u6570\u200b <code>money</code> \u200b\u662f\u200b\u591a\u5c11\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>transactions = [[2,1],[5,0],[4,2]]</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>10</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u521a\u200b\u5f00\u59cb\u200b money = 10 \uff0c\u200b\u4ea4\u6613\u200b\u53ef\u4ee5\u200b\u4ee5\u200b\u4efb\u610f\u200b\u987a\u5e8f\u200b\u8fdb\u884c\u200b\u3002</p> <p>\u200b\u53ef\u4ee5\u200b\u8bc1\u660e\u200b\u5982\u679c\u200b money &lt; 10 \uff0c\u200b\u90a3\u4e48\u200b\u67d0\u4e9b\u200b\u4ea4\u6613\u200b\u65e0\u6cd5\u200b\u8fdb\u884c\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>transactions = [[3,0],[0,3]]</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>3</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <ul> <li>\u200b\u5982\u679c\u200b\u4ea4\u6613\u200b\u6267\u884c\u200b\u7684\u200b\u987a\u5e8f\u200b\u662f\u200b [[3,0],[0,3]] \uff0c\u200b\u5b8c\u6210\u200b\u6240\u6709\u200b\u4ea4\u6613\u200b\u9700\u8981\u200b\u7684\u200b\u6700\u5c11\u200b\u94b1\u6570\u200b\u662f\u200b 3 \u3002</li> <li>\u200b\u5982\u679c\u200b\u4ea4\u6613\u200b\u6267\u884c\u200b\u7684\u200b\u987a\u5e8f\u200b\u662f\u200b [[0,3],[3,0]] \uff0c\u200b\u5b8c\u6210\u200b\u6240\u6709\u200b\u4ea4\u6613\u200b\u9700\u8981\u200b\u7684\u200b\u6700\u5c11\u200b\u94b1\u6570\u200b\u662f\u200b 0 \u3002</li> </ul> <p>\u200b\u6240\u4ee5\u200b\uff0c\u200b\u521a\u200b\u5f00\u59cb\u200b\u94b1\u6570\u200b\u4e3a\u200b 3 \uff0c\u200b\u4efb\u610f\u200b\u987a\u5e8f\u200b\u4e0b\u200b\u4ea4\u6613\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u5168\u90e8\u200b\u5b8c\u6210\u200b\u3002</p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= transactions.length &lt;= 10^5</code></li> <li><code>transactions[i].length == 2</code></li> <li><code>0 &lt;= cost_i, cashback_i &lt;= 10^9</code></li> </ul> <p>Reference</p>","tags":["\u8d2a\u5fc3","\u6570\u7ec4","\u6392\u5e8f"]},{"location":"coding/leetcode/2412/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4ea4\u6613\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u5206\u4e3a\u200b\u4e24\u79cd\u200b\uff0c\u200b\u5373\u200b\u76c8\u5229\u200b\u7684\u200b\u4ea4\u6613\u200b\u548c\u200b\u4e8f\u635f\u200b\u7684\u200b\u4ea4\u6613\u200b\u3002\u200b\u5728\u200b\u6700\u574f\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff1a</p> <ol> <li>\u200b\u5148\u200b\u8fdb\u884c\u200b\u4e8f\u635f\u200b\u7684\u200b\u4ea4\u6613\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4e0d\u200b\u8003\u8651\u200b\u4ea4\u6613\u200b\u7684\u200b\u542f\u52a8\u8d44\u91d1\u200b<code>cost</code>\uff0c\u200b\u6211\u4eec\u200b\u7684\u200b\u521d\u59cb\u200b\u8d44\u91d1\u200b\u5fc5\u987b\u200b\u81f3\u5c11\u200b\u8986\u76d6\u200b\u6240\u6709\u200b\u4e8f\u635f\u200b\u4ea4\u6613\u200b\u7684\u200b\u4e8f\u635f\u200b\u91d1\u989d\u200b<code>cost - cashback</code>\uff0c\u200b\u5bf9\u4e8e\u200b\u6ca1\u6709\u200b\u4e8f\u635f\u200b\u7684\u200b\u76c8\u5229\u200b\u4ea4\u6613\u200b\uff0c\u200b\u4e8f\u635f\u200b\u91d1\u989d\u200b\u4e3a\u200b<code>0</code>\u3002</li> <li>\u200b\u4ee5\u4e0a\u200b\u7b2c\u4e00\u6b65\u200b\u53ea\u200b\u8003\u8651\u200b\u4e86\u200b\u4ea4\u6613\u200b\u7684\u200b\u53d8\u5316\u200b\uff0c\u200b\u800c\u200b\u6ca1\u6709\u200b\u8003\u8651\u200b\u4ea4\u6613\u200b\u7684\u200b\u542f\u52a8\u200b\u6761\u4ef6\u200b\u3002\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u4ea4\u6613\u200b\u88ab\u200b\u653e\u5728\u200b\u4e86\u200b\u4ea4\u6613\u200b\u987a\u5e8f\u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\uff1a<ol> <li>\u200b\u5982\u679c\u200b\u5b83\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e8f\u635f\u200b\u4ea4\u6613\u200b\uff0c\u200b\u4ea4\u6613\u200b\u7ed3\u675f\u200b\u65f6\u200b\uff0c\u200b\u5269\u4f59\u200b\u7684\u200b\u91d1\u989d\u200b\u5fc5\u987b\u200b\u9ad8\u4e8e\u200b\u5b83\u200b\u7684\u200b<code>cashback</code>\uff0c\u200b\u5426\u5219\u200b\u5fc5\u7136\u200b\u6709\u200b\u4e00\u6b65\u200b\u65e0\u6cd5\u200b\u542f\u52a8\u200b\u4ea4\u6613\u200b\uff1b</li> <li>\u200b\u5982\u679c\u200b\u5b83\u200b\u662f\u200b\u4e00\u4e2a\u200b\u76c8\u5229\u200b\u4ea4\u6613\u200b\uff0c\u200b\u4ea4\u6613\u200b\u5f00\u59cb\u200b\u65f6\u200b\u7684\u200b\u91d1\u989d\u200b\u5fc5\u987b\u200b\u9ad8\u4e8e\u200b\u542f\u52a8\u200b\u4ea4\u6613\u200b\u7684\u200b\u6761\u4ef6\u200b<code>cash</code>\uff1b</li> </ol> </li> <li>\u200b\u6211\u4eec\u200b\u53ea\u200b\u9700\u200b\u6ee1\u8db3\u200b\u6700\u574f\u200b\u4ea4\u6613\u200b\u7684\u200b\u4ea4\u6613\u200b\u6761\u4ef6\u200b\u5373\u53ef\u200b\u3002</li> </ol> <p>\u200b\u4f7f\u7528\u200b\u4e24\u4e2a\u200b\u53d8\u91cf\u200b<code>total_lose</code>\u200b\u548c\u200b<code>init</code>\u200b\u5206\u522b\u200b\u7edf\u8ba1\u200b\u603b\u200b\u7684\u200b\u4e8f\u635f\u200b\u91d1\u989d\u200b\u548c\u200b\u6700\u574f\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u7684\u200b\u542f\u52a8\u200b\u6761\u4ef6\u200b\u3002\u200b\u5b8c\u6210\u200b\u4ea4\u6613\u200b\u9700\u8981\u200b\u540c\u65f6\u200b\u6ee1\u8db3\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u6761\u4ef6\u200b\uff0c\u200b\u5373\u200b\u4e24\u4e2a\u200b\u6570\u503c\u200b\u4e4b\u200b\u548c\u200b\u3002</p> <pre><code>class Solution:\n    def minimumMoney(self, transactions: List[List[int]]) -&gt; int:\n        total_lose, init = 0, 0\n        for cost, cashback in transactions:\n            if cost &gt; cashback:\n                total_lose += cost - cashback\n                init = max(init, cashback)\n            else:\n                init = max(init, cost)\n        return total_lose + init\n</code></pre>","tags":["\u8d2a\u5fc3","\u6570\u7ec4","\u6392\u5e8f"]},{"location":"coding/leetcode/242/","title":"242. \u200b\u6709\u6548\u200b\u7684\u200b\u5b57\u6bcd\u200b\u5f02\u4f4d\u200b\u8bcd","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6392\u5e8f","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/242/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e24\u4e2a\u200b\u5b57\u7b26\u4e32\u200b s \u200b\u548c\u200b t \uff0c\u200b\u7f16\u5199\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u6765\u200b\u5224\u65ad\u200b t \u200b\u662f\u5426\u662f\u200b s \u200b\u7684\u200b\u5b57\u6bcd\u200b\u5f02\u4f4d\u200b\u8bcd\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u00a01\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: s = \"anagram\", t = \"nagaram\"\n\u200b\u8f93\u51fa\u200b: true\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: s = \"rat\", t = \"car\"\n\u200b\u8f93\u51fa\u200b: false\n</code></pre> <p>\u200b\u8bf4\u660e\u200b\uff1a</p> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5047\u8bbe\u200b\u5b57\u7b26\u4e32\u200b\u53ea\u200b\u5305\u542b\u200b\u5c0f\u5199\u5b57\u6bcd\u200b\u3002</p> <p>\u200b\u8fdb\u9636\u200b\uff1a</p> <p>\u200b\u5982\u679c\u200b\u8f93\u5165\u200b\u5b57\u7b26\u4e32\u200b\u5305\u542b\u200b unicode \u200b\u5b57\u7b26\u200b\u600e\u4e48\u529e\u200b\uff1f\u200b\u4f60\u200b\u80fd\u5426\u200b\u8c03\u6574\u200b\u4f60\u200b\u7684\u200b\u89e3\u6cd5\u200b\u6765\u200b\u5e94\u5bf9\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\uff1f</p> <p>Reference</p>","tags":["\u6392\u5e8f","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/242/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u7edf\u8ba1\u200b\u5e76\u200b\u6bd4\u8f83\u200b\u4e24\u4e2a\u200b\u8f93\u5165\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u5404\u200b\u5b57\u7b26\u200b\u7684\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u5373\u53ef\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>bool isAnagram(char * s, char * t){\n    int hashMap1[26] = {0}, hashMap2[26] = {0};\n    char *cur = s;\n    while(*cur)\n    {\n        hashMap1[*cur - 'a']++;\n        cur++;\n    }\n    cur = t;\n    while(*cur)\n    {\n        hashMap2[*cur - 'a']++;\n        cur++;\n    }\n    int i = 0;\n    for (i = 0; i &lt; 26; i++)\n        if (hashMap1[i] != hashMap2[i])\n            return false;\n    return true;\n}\n</code></pre>","tags":["\u6392\u5e8f","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/25/","title":"25. K \u200b\u4e2a\u200b\u4e00\u7ec4\u200b\u7ffb\u8f6c\u200b\u94fe\u8868","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u56f0\u96be\u200b</p>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/25/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u94fe\u8868\u200b\uff0c\u200b\u6bcf\u200b\u00a0k\u00a0\u200b\u4e2a\u200b\u8282\u70b9\u200b\u4e00\u7ec4\u200b\u8fdb\u884c\u200b\u7ffb\u8f6c\u200b\uff0c\u200b\u8bf7\u200b\u4f60\u200b\u8fd4\u56de\u200b\u7ffb\u8f6c\u200b\u540e\u200b\u7684\u200b\u94fe\u8868\u200b\u3002</p> <p>k\u00a0\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6b63\u6574\u6570\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b\u503c\u200b\u5c0f\u4e8e\u200b\u6216\u200b\u7b49\u4e8e\u200b\u94fe\u8868\u200b\u7684\u200b\u957f\u5ea6\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u8282\u70b9\u200b\u603b\u6570\u200b\u4e0d\u662f\u200b\u00a0k\u00a0\u200b\u7684\u200b\u6574\u6570\u500d\u200b\uff0c\u200b\u90a3\u4e48\u200b\u8bf7\u200b\u5c06\u200b\u6700\u540e\u200b\u5269\u4f59\u200b\u7684\u200b\u8282\u70b9\u200b\u4fdd\u6301\u200b\u539f\u6709\u200b\u987a\u5e8f\u200b\u3002</p> <p>\u200b\u8fdb\u9636\u200b\uff1a</p> <ul> <li>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u8bbe\u8ba1\u200b\u4e00\u4e2a\u200b\u53ea\u200b\u4f7f\u7528\u200b\u5e38\u6570\u200b\u989d\u5916\u200b\u7a7a\u95f4\u200b\u7684\u200b\u7b97\u6cd5\u200b\u6765\u200b\u89e3\u51b3\u200b\u6b64\u200b\u95ee\u9898\u200b\u5417\u200b\uff1f</li> <li>\u200b\u4f60\u200b\u4e0d\u80fd\u200b\u53ea\u662f\u200b\u5355\u7eaf\u200b\u7684\u200b\u6539\u53d8\u200b\u8282\u70b9\u200b\u5185\u90e8\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u800c\u662f\u200b\u9700\u8981\u200b\u5b9e\u9645\u200b\u8fdb\u884c\u200b\u8282\u70b9\u200b\u4ea4\u6362\u200b\u3002</li> </ul> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p></p> <pre><code>\u200b\u8f93\u5165\u200b\uff1ahead = [1,2,3,4,5], k = 2\n\u200b\u8f93\u51fa\u200b\uff1a[2,1,4,3,5]\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p></p> <pre><code>\u200b\u8f93\u5165\u200b\uff1ahead = [1,2,3,4,5], k = 3\n\u200b\u8f93\u51fa\u200b\uff1a[3,2,1,4,5]\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1ahead = [1,2,3,4,5], k = 1\n\u200b\u8f93\u51fa\u200b\uff1a[1,2,3,4,5]\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 4\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1ahead = [1], k = 1\n\u200b\u8f93\u51fa\u200b\uff1a[1]\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li>\u200b\u5217\u8868\u200b\u4e2d\u200b\u8282\u70b9\u200b\u7684\u200b\u6570\u91cf\u200b\u5728\u200b\u8303\u56f4\u200b <code>sz</code> \u200b\u5185\u200b</li> <li><code>1 &lt;= sz &lt;= 5000</code></li> <li><code>0 &lt;= Node.val &lt;= 1000</code></li> <li><code>1 &lt;= k &lt;= sz</code></li> </ul> <p>Reference</p>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/25/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u904d\u5386\u200b k \u200b\u4e2a\u200b\u5143\u7d20\u200b\u540e\u200b\u5c06\u200b\u94fe\u8868\u200b\u7684\u200b\u7ed3\u5c3e\u200b\u8bbe\u200b\u4e3a\u200b<code>NULL</code>\uff0c\u200b\u6267\u884c\u200b\u53cd\u8f6c\u200b\u64cd\u4f5c\u200b\u540e\u200b\u63a5\u4e0a\u200b\u540e\u9762\u200b\u7684\u200b\u94fe\u8868\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\\(\\mathcal O(1)\\)\u200b\u7684\u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b\u53cd\u8f6c\u200b\u94fe\u8868\u200b\u3002</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\nstruct ListNode *reverse(struct ListNode *head)\n{\n    struct ListNode *prev = NULL, *cur = head, *next = head-&gt;next;\n    while (next != NULL)\n    {\n        cur-&gt;next = prev;\n        prev = cur;\n        cur = next;\n        next = next-&gt;next;\n    }\n    cur-&gt;next = prev;\n    return cur;\n}\n\nstruct ListNode* reverseKGroup(struct ListNode* head, int k){\n    int i = 0;\n    struct ListNode *ret = NULL, *tempHead = NULL, *cur = head;\n    for (i = 0; i &lt; k - 1 &amp;&amp; cur != NULL; i++)\n        cur = cur-&gt;next;\n    if (cur == NULL)\n        return head;\n    tempHead = cur-&gt;next;\n    cur-&gt;next = NULL;\n    ret = reverse(head);\n    head-&gt;next = reverseKGroup(tempHead, k);\n    return ret;\n}\n</code></pre>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/26/","title":"26. \u200b\u5220\u9664\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u91cd\u590d\u200b\u9879","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/26/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b\uff0c\u200b\u4f60\u200b\u9700\u8981\u200b\u5728\u200b\u539f\u5730\u200b\u5220\u9664\u200b\u91cd\u590d\u200b\u51fa\u73b0\u200b\u7684\u200b\u5143\u7d20\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u53ea\u200b\u51fa\u73b0\u200b\u4e00\u6b21\u200b\uff0c\u200b\u8fd4\u56de\u200b\u79fb\u9664\u200b\u540e\u200b\u6570\u7ec4\u200b\u7684\u200b\u65b0\u200b\u957f\u5ea6\u200b\u3002</p> <p>\u200b\u4e0d\u8981\u200b\u4f7f\u7528\u200b\u989d\u5916\u200b\u7684\u200b\u6570\u7ec4\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u4f60\u200b\u5fc5\u987b\u200b\u5728\u200b\u539f\u5730\u200b\u4fee\u6539\u200b\u8f93\u5165\u200b\u6570\u7ec4\u200b \u200b\u5e76\u200b\u5728\u200b\u4f7f\u7528\u200b\\(O(1)\\)\u200b\u989d\u5916\u200b\u7a7a\u95f4\u200b\u7684\u200b\u6761\u4ef6\u200b\u4e0b\u200b\u5b8c\u6210\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u00a01\uff1a</p> <pre><code>\u200b\u7ed9\u5b9a\u200b\u6570\u7ec4\u200b nums = [1,1,2], \n\n\u200b\u51fd\u6570\u200b\u5e94\u8be5\u200b\u8fd4\u56de\u200b\u65b0\u200b\u7684\u200b\u957f\u5ea6\u200b 2, \u200b\u5e76\u4e14\u200b\u539f\u200b\u6570\u7ec4\u200b nums \u200b\u7684\u200b\u524d\u200b\u4e24\u4e2a\u200b\u5143\u7d20\u200b\u88ab\u200b\u4fee\u6539\u200b\u4e3a\u200b 1, 2\u3002 \n\n\u200b\u4f60\u200b\u4e0d\u200b\u9700\u8981\u200b\u8003\u8651\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u8d85\u51fa\u200b\u65b0\u200b\u957f\u5ea6\u200b\u540e\u9762\u200b\u7684\u200b\u5143\u7d20\u200b\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a02\uff1a</p> <pre><code>\u200b\u7ed9\u5b9a\u200b nums = [0,0,1,1,1,2,2,3,3,4],\n\n\u200b\u51fd\u6570\u200b\u5e94\u8be5\u200b\u8fd4\u56de\u200b\u65b0\u200b\u7684\u200b\u957f\u5ea6\u200b 5, \u200b\u5e76\u4e14\u200b\u539f\u200b\u6570\u7ec4\u200b nums \u200b\u7684\u200b\u524d\u200b\u4e94\u4e2a\u200b\u5143\u7d20\u200b\u88ab\u200b\u4fee\u6539\u200b\u4e3a\u200b 0, 1, 2, 3, 4\u3002\n\n\u200b\u4f60\u200b\u4e0d\u200b\u9700\u8981\u200b\u8003\u8651\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u8d85\u51fa\u200b\u65b0\u200b\u957f\u5ea6\u200b\u540e\u9762\u200b\u7684\u200b\u5143\u7d20\u200b\u3002\n</code></pre> <p>\u200b\u8bf4\u660e\u200b\uff1a</p> <p>\u200b\u4e3a\u4ec0\u4e48\u200b\u8fd4\u56de\u200b\u6570\u503c\u200b\u662f\u200b\u6574\u6570\u200b\uff0c\u200b\u4f46\u200b\u8f93\u51fa\u200b\u7684\u200b\u7b54\u6848\u200b\u662f\u200b\u6570\u7ec4\u200b\u5462\u200b?</p> <p>\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u8f93\u5165\u200b\u6570\u7ec4\u200b\u662f\u200b\u4ee5\u200b \u300c\u200b\u5f15\u7528\u200b\u300d \u200b\u65b9\u5f0f\u200b\u4f20\u9012\u200b\u7684\u200b\uff0c\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u5728\u200b\u51fd\u6570\u200b\u91cc\u200b\u4fee\u6539\u200b\u8f93\u5165\u200b\u6570\u7ec4\u200b\u5bf9\u4e8e\u200b\u8c03\u7528\u8005\u200b\u662f\u200b\u53ef\u89c1\u200b\u7684\u200b\u3002</p> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u60f3\u8c61\u200b\u5185\u90e8\u200b\u64cd\u4f5c\u200b\u5982\u4e0b\u200b:</p> <pre><code>// nums \u200b\u662f\u200b\u4ee5\u200b\u201c\u200b\u5f15\u7528\u200b\u201d\u200b\u65b9\u5f0f\u200b\u4f20\u9012\u200b\u7684\u200b\u3002\u200b\u4e5f\u5c31\u662f\u8bf4\u200b\uff0c\u200b\u4e0d\u200b\u5bf9\u200b\u5b9e\u53c2\u200b\u505a\u200b\u4efb\u4f55\u200b\u62f7\u8d1d\u200b\nint len = removeDuplicates(nums);\n\n// \u200b\u5728\u200b\u51fd\u6570\u200b\u91cc\u200b\u4fee\u6539\u200b\u8f93\u5165\u200b\u6570\u7ec4\u200b\u5bf9\u4e8e\u200b\u8c03\u7528\u8005\u200b\u662f\u200b\u53ef\u89c1\u200b\u7684\u200b\u3002\n// \u200b\u6839\u636e\u200b\u4f60\u200b\u7684\u200b\u51fd\u6570\u200b\u8fd4\u56de\u200b\u7684\u200b\u957f\u5ea6\u200b, \u200b\u5b83\u4f1a\u200b\u6253\u5370\u200b\u51fa\u200b\u6570\u7ec4\u200b\u4e2d\u8be5\u200b\u957f\u5ea6\u200b\u8303\u56f4\u200b\u5185\u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u3002\nfor (int i = 0; i &lt; len; i++) {\n\u00a0 \u00a0 print(nums[i]);\n}\n</code></pre> <p>Reference</p>","tags":["\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/26/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a </p> <ol> <li>\u200b\u5f53\u200b\u6570\u7ec4\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u65f6\u200b\uff0c\u200b\u4e0d\u200b\u5b58\u5728\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b\uff1b</li> <li>\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u6307\u9488\u200b\u5206\u522b\u200b\u6307\u5411\u200b\u5220\u9664\u200b\u91cd\u590d\u200b\u503c\u540e\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u672b\u5c3e\u200b\uff0c\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u6570\u503c\u200b\u8868\u793a\u200b\u5220\u53bb\u200b\u5143\u7d20\u200b\u7684\u200b\u4e2a\u6570\u200b\u3002</li> </ol> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>int removeDuplicates(int* nums, int numsSize){\n    if (numsSize &lt; 2)\n        return numsSize;\n    int steps = 0, i = 0;\n    while(i &lt; numsSize - steps - 1)\n    {\n        if (steps)\n            nums[i + 1] = nums[i + steps + 1];\n        if (nums[i] == nums[i + steps + 1])\n            steps++;\n        else\n            i++;\n    }\n    return numsSize - steps;\n}\n</code></pre>","tags":["\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/27/","title":"27. \u200b\u79fb\u9664\u200b\u5143\u7d20","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/27/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b <code>nums</code>\u00a0\u200b\u548c\u200b\u4e00\u4e2a\u200b\u503c\u200b <code>val</code>\uff0c\u200b\u4f60\u200b\u9700\u8981\u200b \u200b\u539f\u5730\u200b \u200b\u79fb\u9664\u200b\u6240\u6709\u200b\u6570\u503c\u200b\u7b49\u4e8e\u200b\u00a0<code>val</code>\u00a0\u200b\u7684\u200b\u5143\u7d20\u200b\uff0c\u200b\u5e76\u200b\u8fd4\u56de\u200b\u79fb\u9664\u200b\u540e\u200b\u6570\u7ec4\u200b\u7684\u200b\u65b0\u200b\u957f\u5ea6\u200b\u3002</p> <p>\u200b\u4e0d\u8981\u200b\u4f7f\u7528\u200b\u989d\u5916\u200b\u7684\u200b\u6570\u7ec4\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u4f60\u200b\u5fc5\u987b\u200b\u4ec5\u200b\u4f7f\u7528\u200b <code>O(1)</code> \u200b\u989d\u5916\u200b\u7a7a\u95f4\u200b\u5e76\u200b \u200b\u539f\u5730\u200b \u200b\u4fee\u6539\u200b\u8f93\u5165\u200b\u6570\u7ec4\u200b\u3002</p> <p>\u200b\u5143\u7d20\u200b\u7684\u200b\u987a\u5e8f\u200b\u53ef\u4ee5\u200b\u6539\u53d8\u200b\u3002\u200b\u4f60\u200b\u4e0d\u200b\u9700\u8981\u200b\u8003\u8651\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u8d85\u51fa\u200b\u65b0\u200b\u957f\u5ea6\u200b\u540e\u9762\u200b\u7684\u200b\u5143\u7d20\u200b\u3002</p> <p>\u200b\u8bf4\u660e\u200b:</p> <p>\u200b\u4e3a\u4ec0\u4e48\u200b\u8fd4\u56de\u200b\u6570\u503c\u200b\u662f\u200b\u6574\u6570\u200b\uff0c\u200b\u4f46\u200b\u8f93\u51fa\u200b\u7684\u200b\u7b54\u6848\u200b\u662f\u200b\u6570\u7ec4\u200b\u5462\u200b?</p> <p>\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u8f93\u5165\u200b\u6570\u7ec4\u200b\u662f\u200b\u4ee5\u200b\u300c\u200b\u5f15\u7528\u200b\u300d\u200b\u65b9\u5f0f\u200b\u4f20\u9012\u200b\u7684\u200b\uff0c\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u5728\u200b\u51fd\u6570\u200b\u91cc\u200b\u4fee\u6539\u200b\u8f93\u5165\u200b\u6570\u7ec4\u200b\u5bf9\u4e8e\u200b\u8c03\u7528\u8005\u200b\u662f\u200b\u53ef\u89c1\u200b\u7684\u200b\u3002</p> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u60f3\u8c61\u200b\u5185\u90e8\u200b\u64cd\u4f5c\u200b\u5982\u4e0b\u200b:</p> <pre><code>// nums \u200b\u662f\u200b\u4ee5\u200b\u201c\u200b\u5f15\u7528\u200b\u201d\u200b\u65b9\u5f0f\u200b\u4f20\u9012\u200b\u7684\u200b\u3002\u200b\u4e5f\u5c31\u662f\u8bf4\u200b\uff0c\u200b\u4e0d\u200b\u5bf9\u200b\u5b9e\u53c2\u200b\u4f5c\u200b\u4efb\u4f55\u200b\u62f7\u8d1d\u200b\nint len = removeElement(nums, val);\n\n// \u200b\u5728\u200b\u51fd\u6570\u200b\u91cc\u200b\u4fee\u6539\u200b\u8f93\u5165\u200b\u6570\u7ec4\u200b\u5bf9\u4e8e\u200b\u8c03\u7528\u8005\u200b\u662f\u200b\u53ef\u89c1\u200b\u7684\u200b\u3002\n// \u200b\u6839\u636e\u200b\u4f60\u200b\u7684\u200b\u51fd\u6570\u200b\u8fd4\u56de\u200b\u7684\u200b\u957f\u5ea6\u200b, \u200b\u5b83\u4f1a\u200b\u6253\u5370\u200b\u51fa\u200b\u6570\u7ec4\u200b\u4e2d\u200b \u200b\u8be5\u200b\u957f\u5ea6\u200b\u8303\u56f4\u200b\u5185\u200b \u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u3002\nfor (int i = 0; i &lt; len; i++) {\n\u00a0 \u00a0 print(nums[i]);\n}\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [3,2,2,3], val = 3\n\u200b\u8f93\u51fa\u200b\uff1a2, nums = [2,2]\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u51fd\u6570\u200b\u5e94\u8be5\u200b\u8fd4\u56de\u200b\u65b0\u200b\u7684\u200b\u957f\u5ea6\u200b 2, \u200b\u5e76\u4e14\u200b nums \u200b\u4e2d\u200b\u7684\u200b\u524d\u200b\u4e24\u4e2a\u200b\u5143\u7d20\u200b\u5747\u200b\u4e3a\u200b 2\u3002\u200b\u4f60\u200b\u4e0d\u200b\u9700\u8981\u200b\u8003\u8651\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u8d85\u51fa\u200b\u65b0\u200b\u957f\u5ea6\u200b\u540e\u9762\u200b\u7684\u200b\u5143\u7d20\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u51fd\u6570\u200b\u8fd4\u56de\u200b\u7684\u200b\u65b0\u200b\u957f\u5ea6\u200b\u4e3a\u200b 2 \uff0c\u200b\u800c\u200b nums = [2,2,3,3] \u200b\u6216\u200b nums = [2,2,0,0]\uff0c\u200b\u4e5f\u200b\u4f1a\u200b\u88ab\u200b\u89c6\u4f5c\u200b\u6b63\u786e\u200b\u7b54\u6848\u200b\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [0,1,2,2,3,0,4,2], val = 2\n\u200b\u8f93\u51fa\u200b\uff1a5, nums = [0,1,4,0,3]\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u51fd\u6570\u200b\u5e94\u8be5\u200b\u8fd4\u56de\u200b\u65b0\u200b\u7684\u200b\u957f\u5ea6\u200b 5, \u200b\u5e76\u4e14\u200b nums \u200b\u4e2d\u200b\u7684\u200b\u524d\u200b\u4e94\u4e2a\u200b\u5143\u7d20\u200b\u4e3a\u200b 0, 1, 3, 0, 4\u3002\u200b\u6ce8\u610f\u200b\u8fd9\u200b\u4e94\u4e2a\u200b\u5143\u7d20\u200b\u53ef\u200b\u4e3a\u200b\u4efb\u610f\u200b\u987a\u5e8f\u200b\u3002\u200b\u4f60\u200b\u4e0d\u200b\u9700\u8981\u200b\u8003\u8651\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u8d85\u51fa\u200b\u65b0\u200b\u957f\u5ea6\u200b\u540e\u9762\u200b\u7684\u200b\u5143\u7d20\u200b\u3002\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>0 &lt;= nums.length &lt;= 100</code></li> <li><code>0 &lt;= nums[i] &lt;= 50</code></li> <li><code>0 &lt;= val &lt;= 100</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/27/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4f7f\u7528\u200b\u53cc\u200b\u6307\u9488\u200b\u6cd5\u200b\uff0c\u200b\u4e24\u4e2a\u200b\u6307\u9488\u200b\u5206\u522b\u200b\u6307\u5411\u200b\uff1a</p> <ul> <li>\u200b\u5c1a\u672a\u200b\u68c0\u67e5\u200b\u8fc7\u200b\u7684\u200b\u90e8\u5206\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u5143\u7d20\u200b</li> <li>\u200b\u5df2\u7ecf\u200b\u68c0\u67e5\u200b\u8fc7\u200b\u7684\u200b\u90e8\u5206\u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b</li> </ul> <p>\u200b\u5f53\u200b\u4e24\u4e2a\u200b\u6307\u9488\u200b\u91cd\u5408\u200b\u65f6\u200b\u4e0d\u200b\u9700\u8981\u200b\u8fdb\u884c\u200b\u590d\u5236\u200b\u64cd\u4f5c\u200b\u3002</p> <pre><code>int removeElement(int* nums, int numsSize, int val){\n    int slow = 0, fast = 0, ret = numsSize;\n    if (numsSize == 0)\n        return 0;\n    do\n    {\n        if (fast &gt; slow)\n            nums[slow] = nums[fast];\n        if (nums[fast] == val)\n            ret--;\n        else\n            slow++;\n        fast++;\n    }\n    while (fast &lt; numsSize);\n    return ret;\n}\n</code></pre>","tags":["\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/28/","title":"28. \u200b\u5b9e\u73b0\u200b strStr()","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/28/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u5b9e\u73b0\u200b<code>strStr()</code>\u200b\u51fd\u6570\u200b\u3002</p> <p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b<code>haystack</code>\u200b\u5b57\u7b26\u4e32\u200b\u548c\u200b\u4e00\u4e2a\u200b<code>needle</code>\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u5728\u200b<code>haystack</code>\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u627e\u51fa\u200b needle \u200b\u5b57\u7b26\u4e32\u200b\u51fa\u73b0\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b (\u200b\u4ece\u200b0\u200b\u5f00\u59cb\u200b)\u3002\u200b\u5982\u679c\u200b\u4e0d\u200b\u5b58\u5728\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b\u00a0-1\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1:</p> <pre><code>\u200b\u8f93\u5165\u200b: haystack = \"hello\", needle = \"ll\"\n\u200b\u8f93\u51fa\u200b: 2\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2:</p> <pre><code>\u200b\u8f93\u5165\u200b: haystack = \"aaaaa\", needle = \"bba\"\n\u200b\u8f93\u51fa\u200b: -1\n</code></pre> <p>\u200b\u8bf4\u660e\u200b:</p> <p>\u200b\u5f53\u200b<code>needle</code>\u200b\u662f\u200b\u7a7a\u200b\u5b57\u7b26\u4e32\u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u5e94\u5f53\u200b\u8fd4\u56de\u200b\u4ec0\u4e48\u200b\u503c\u200b\u5462\u200b\uff1f\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u5728\u200b\u9762\u8bd5\u200b\u4e2d\u200b\u5f88\u200b\u597d\u200b\u7684\u200b\u95ee\u9898\u200b\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u672c\u9898\u200b\u800c\u8a00\u200b\uff0c\u200b\u5f53\u200b<code>needle</code>\u200b\u662f\u200b\u7a7a\u200b\u5b57\u7b26\u4e32\u200b\u65f6\u200b\u6211\u4eec\u200b\u5e94\u5f53\u200b\u8fd4\u56de\u200b 0 \u3002\u200b\u8fd9\u200b\u4e0e\u200bC\u200b\u8bed\u8a00\u200b\u7684\u200b<code>strstr()</code>\u200b\u4ee5\u53ca\u200bJava\u200b\u7684\u200b<code>indexOf()</code>\u200b\u5b9a\u4e49\u200b\u76f8\u7b26\u200b\u3002</p> <p>Reference</p>","tags":["\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/28/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u66b4\u529b\u200b\u6309\u4f4d\u200b\u5339\u914d\u200b</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>int strStr(char * haystack, char * needle){\n    int len1 = strlen(haystack), len2 = strlen(needle), cur1 = 0, cur2 = 0, cur3 = 0, success = 1;\n    if (!len2)\n        return 0;\n    if (len1 &lt; len2)\n        return -1;\n    do\n    {\n        success = 1;\n        if (haystack[cur1] == needle[0])\n        {\n            cur2 = 0;\n            cur3 = 0;\n            while(cur2 &lt; len2 &amp;&amp; cur3 + cur1 &lt; len1 &amp;&amp; success)\n            {\n                if(haystack[cur1 + cur3] != needle[cur2])\n                    success = 0;\n                cur3++;\n                cur2++;\n            }\n            if (success)\n                return cur1;\n        }\n        cur1++;\n    }\n    while (haystack[cur1 + len2 - 1]);\n    return -1;\n}\n</code></pre>","tags":["\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/2920/","title":"2920. \u200b\u6536\u96c6\u200b\u6240\u6709\u200b\u91d1\u5e01\u200b\u53ef\u200b\u83b7\u5f97\u200b\u7684\u200b\u6700\u5927\u200b\u79ef\u5206","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u56f0\u96be\u200b</p>","tags":["\u4f4d\u8fd0\u7b97","\u6811","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/2920/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u6709\u200b\u4e00\u68f5\u200b\u7531\u200b <code>n</code> \u200b\u4e2a\u200b\u8282\u70b9\u200b\u7ec4\u6210\u200b\u7684\u200b\u65e0\u200b\u5411\u200b\u6811\u200b\uff0c\u200b\u4ee5\u200b <code>0</code> \u200b\u4e3a\u6839\u200b\u8282\u70b9\u200b\uff0c\u200b\u8282\u70b9\u200b\u7f16\u53f7\u200b\u4ece\u200b <code>0</code> \u200b\u5230\u200b <code>n - 1</code> \u3002\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u957f\u5ea6\u200b\u4e3a\u200b <code>n - 1</code> \u200b\u7684\u200b\u4e8c\u7ef4\u200b \u200b\u6574\u6570\u200b \u200b\u6570\u7ec4\u200b <code>edges</code> \uff0c\u200b\u5176\u4e2d\u200b <code>edges[i] = [a_i, b_i]</code> \u200b\u8868\u793a\u200b\u5728\u200b\u6811\u4e0a\u200b\u7684\u200b\u8282\u70b9\u200b <code>a_i</code> \u200b\u548c\u200b <code>b_i</code> \u200b\u4e4b\u95f4\u200b\u5b58\u5728\u200b\u4e00\u6761\u200b\u8fb9\u200b\u3002\u200b\u53e6\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u4e0b\u6807\u200b\u4ece\u200b 0 \u200b\u5f00\u59cb\u200b\u3001\u200b\u957f\u5ea6\u200b\u4e3a\u200b <code>n</code> \u200b\u7684\u200b\u6570\u7ec4\u200b <code>coins</code> \u200b\u548c\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b <code>k</code> \uff0c\u200b\u5176\u4e2d\u200b <code>coins[i]</code> \u200b\u8868\u793a\u200b\u8282\u70b9\u200b <code>i</code> \u200b\u5904\u200b\u7684\u200b\u91d1\u5e01\u200b\u6570\u91cf\u200b\u3002</p> <p>\u200b\u4ece\u6839\u200b\u8282\u70b9\u200b\u5f00\u59cb\u200b\uff0c\u200b\u4f60\u200b\u5fc5\u987b\u200b\u6536\u96c6\u200b\u6240\u6709\u200b\u91d1\u5e01\u200b\u3002\u200b\u8981\u200b\u60f3\u200b\u6536\u96c6\u200b\u8282\u70b9\u200b\u4e0a\u200b\u7684\u200b\u91d1\u5e01\u200b\uff0c\u200b\u5fc5\u987b\u200b\u5148\u200b\u6536\u96c6\u200b\u8be5\u200b\u8282\u70b9\u200b\u7684\u200b\u7956\u5148\u200b\u8282\u70b9\u200b\u4e0a\u200b\u7684\u200b\u91d1\u5e01\u200b\u3002</p> <p>\u200b\u8282\u70b9\u200b <code>i</code> \u200b\u4e0a\u200b\u7684\u200b\u91d1\u5e01\u200b\u53ef\u4ee5\u200b\u7528\u200b\u4e0b\u8ff0\u200b\u65b9\u6cd5\u200b\u4e4b\u4e00\u200b\u8fdb\u884c\u200b\u6536\u96c6\u200b\uff1a</p> <ul> <li>\u200b\u6536\u96c6\u200b\u6240\u6709\u200b\u91d1\u5e01\u200b\uff0c\u200b\u5f97\u5230\u200b\u5171\u8ba1\u200b <code>coins[i] - k</code> \u200b\u70b9\u200b\u79ef\u5206\u200b\u3002\u200b\u5982\u679c\u200b <code>coins[i] - k</code> \u200b\u662f\u200b\u8d1f\u6570\u200b\uff0c\u200b\u4f60\u200b\u5c06\u200b\u4f1a\u200b\u5931\u53bb\u200b <code>abs(coins[i] - k)</code> \u200b\u70b9\u200b\u79ef\u5206\u200b\u3002</li> <li>\u200b\u6536\u96c6\u200b\u6240\u6709\u200b\u91d1\u5e01\u200b\uff0c\u200b\u5f97\u5230\u200b\u5171\u8ba1\u200b <code>floor(coins[i] / 2)</code> \u200b\u70b9\u200b\u79ef\u5206\u200b\u3002\u200b\u5982\u679c\u200b\u91c7\u7528\u200b\u8fd9\u79cd\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u8282\u70b9\u200b <code>i</code> \u200b\u5b50\u6811\u4e2d\u200b\u6240\u6709\u200b\u8282\u70b9\u200b <code>j</code> \u200b\u7684\u200b\u91d1\u5e01\u200b\u6570\u200b <code>coins[j]</code> \u200b\u5c06\u4f1a\u200b\u51cf\u5c11\u200b\u81f3\u200b <code>floor(coins[j] / 2)</code> \u3002</li> </ul> <p>\u200b\u8fd4\u56de\u200b\u6536\u96c6\u200b \u200b\u6240\u6709\u200b \u200b\u6811\u200b\u8282\u70b9\u200b\u7684\u200b\u91d1\u5e01\u200b\u4e4b\u540e\u200b\u53ef\u4ee5\u200b\u83b7\u5f97\u200b\u7684\u200b\u6700\u5927\u200b\u79ef\u5206\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p></p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>edges = [[0,1],[1,2],[2,3]], coins = [10,10,3,3], k = 5</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>11</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u4f7f\u7528\u200b\u7b2c\u4e00\u79cd\u200b\u65b9\u6cd5\u200b\u6536\u96c6\u200b\u8282\u70b9\u200b 0 \u200b\u4e0a\u200b\u7684\u200b\u6240\u6709\u200b\u91d1\u5e01\u200b\u3002\u200b\u603b\u200b\u79ef\u5206\u200b = 10 - 5 = 5 \u3002</p> <p>\u200b\u4f7f\u7528\u200b\u7b2c\u4e00\u79cd\u200b\u65b9\u6cd5\u200b\u6536\u96c6\u200b\u8282\u70b9\u200b 1 \u200b\u4e0a\u200b\u7684\u200b\u6240\u6709\u200b\u91d1\u5e01\u200b\u3002\u200b\u603b\u200b\u79ef\u5206\u200b = 5 + (10 - 5) = 10 \u3002</p> <p>\u200b\u4f7f\u7528\u200b\u7b2c\u4e8c\u79cd\u200b\u65b9\u6cd5\u200b\u6536\u96c6\u200b\u8282\u70b9\u200b 2 \u200b\u4e0a\u200b\u7684\u200b\u6240\u6709\u200b\u91d1\u5e01\u200b\u3002\u200b\u6240\u4ee5\u200b\u8282\u70b9\u200b 3 \u200b\u4e0a\u200b\u7684\u200b\u91d1\u5e01\u200b\u5c06\u4f1a\u200b\u53d8\u4e3a\u200b floor(3 / 2) = 1 \uff0c\u200b\u603b\u200b\u79ef\u5206\u200b = 10 + floor(3 / 2) = 11 \u3002</p> <p>\u200b\u4f7f\u7528\u200b\u7b2c\u4e8c\u79cd\u200b\u65b9\u6cd5\u200b\u6536\u96c6\u200b\u8282\u70b9\u200b 3 \u200b\u4e0a\u200b\u7684\u200b\u6240\u6709\u200b\u91d1\u5e01\u200b\u3002\u200b\u603b\u200b\u79ef\u5206\u200b =  11 + floor(1 / 2) = 11.</p> <p>\u200b\u53ef\u4ee5\u200b\u8bc1\u660e\u200b\u6536\u96c6\u200b\u6240\u6709\u200b\u8282\u70b9\u200b\u4e0a\u200b\u7684\u200b\u91d1\u5e01\u200b\u80fd\u200b\u83b7\u5f97\u200b\u7684\u200b\u6700\u5927\u200b\u79ef\u5206\u200b\u662f\u200b 11 \u3002</p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p></p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>edges = [[0,1],[0,2]], coins = [8,4,4], k = 0</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>16</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u4f7f\u7528\u200b\u7b2c\u4e00\u79cd\u200b\u65b9\u6cd5\u200b\u6536\u96c6\u200b\u6240\u6709\u200b\u8282\u70b9\u200b\u4e0a\u200b\u7684\u200b\u91d1\u5e01\u200b\uff0c\u200b\u56e0\u6b64\u200b\uff0c\u200b\u603b\u200b\u79ef\u5206\u200b = (8 - 0) + (4 - 0) + (4 - 0) = 16 \u3002</p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>n == coins.length</code></li> <li><code>2 &lt;= n &lt;= 10^5</code></li> <li><code>0 &lt;= coins[i] &lt;= 10^4</code></li> <li><code>edges.length == n - 1</code></li> <li><code>0 &lt;= edges[i][0], edges[i][1] &lt; n</code></li> <li><code>0 &lt;= k &lt;= 10^4</code></li> </ul> <p>Reference</p>","tags":["\u4f4d\u8fd0\u7b97","\u6811","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/2920/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u8868\u200b<code>dp[node][t]</code>\u200b\u5b58\u50a8\u200b\u8282\u70b9\u200b<code>node</code>\u200b\u5728\u200b\u5176\u7236\u200b\u8282\u70b9\u200b\u6267\u884c\u200b<code>t</code>\u200b\u6b21\u200b\u64cd\u4f5c\u200b2\u200b\u540e\u200b\uff0c\u200b\u6240\u200b\u80fd\u200b\u83b7\u5f97\u200b\u7684\u200b\u6700\u5927\u200b\u79ef\u5206\u200b\u3002</p> <ul> <li>\u200b\u4f7f\u7528\u200b\u7b2c\u4e00\u79cd\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\u83b7\u5f97\u200b\u7684\u200b\u79ef\u5206\u200b\u4e3a\u200b<code>(coins[node] &gt;&gt; t) - k</code>\uff0c\u200b\u4e4b\u540e\u200b\u6536\u96c6\u200b\u5b50\u200b\u8282\u70b9\u200b\u83b7\u5f97\u200b\u7684\u200b\u79ef\u5206\u200b\u4e3a\u200b<code>sum(dp[_][t] for _ in child)</code></li> <li>\u200b\u4f7f\u7528\u200b\u7b2c\u4e8c\u79cd\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\u83b7\u5f97\u200b\u7684\u200b\u79ef\u5206\u200b\u4e3a\u200b<code>(coins[node] &gt;&gt; t + 1)</code>\uff0c\u200b\u4e4b\u540e\u200b\u6536\u96c6\u200b\u5b50\u200b\u8282\u70b9\u200b\u83b7\u5f97\u200b\u7684\u200b\u79ef\u5206\u200b\u4e3a\u200b<code>sum(dp[_][t + 1] for _ in child)</code></li> </ul> <p>\u200b\u4e4b\u540e\u200b\u53cd\u5411\u200b\u5c42\u5e8f\u200b\u904d\u5386\u200b\u6811\u200b\uff0c\u200b\u4ece\u200b\u53f6\u5b50\u200b\u8282\u70b9\u200b\u5f00\u59cb\u200b\uff0c\u200b\u9010\u6b65\u200b\u8ba1\u7b97\u200b\u6536\u96c6\u200b\u8282\u70b9\u200b\u83b7\u5f97\u200b\u7684\u200b\u79ef\u5206\u200b\uff0c\u200b\u6700\u7ec8\u200b<code>dp[0][0]</code>\u200b\u5373\u4f4d\u200b\u6240\u6c42\u200b\u7684\u200b\u79ef\u5206\u200b\u503c\u200b\u3002\u200b\u6ce8\u610f\u200b<code>coins[node] &lt;= 10^4</code>\uff0c\u200b\u800c\u200b\\(2^13 = 8192 &lt; 10^4, 2^14 = 16384 &gt; 10^4\\)\uff0c\u200b\u56e0\u6b64\u200b\u5bf9\u4e8e\u200b\\(t \\geq 14\\)\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u6536\u96c6\u200b\u5b50\u200b\u8282\u70b9\u200b\u83b7\u5f97\u200b\u7684\u200b\u79ef\u5206\u200b\u56fa\u5b9a\u200b\u4e3a\u200b\\(0\\)\uff0c\u200b\u53ef\u4ee5\u200b\u501f\u6b64\u200b\u9650\u5236\u200b<code>dp</code>\u200b\u8868\u200b\u7684\u200b\u5bbd\u5ea6\u200b\u3002</p> <p>\u200b\u53e6\u5916\u200b\uff0c<code>edges</code>\u200b\u5217\u8868\u200b\u5e76\u200b\u6ca1\u6709\u200b\u4fdd\u8bc1\u200b\u7b2c\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u662f\u200b\u7236\u200b\u8282\u70b9\u200b\uff0c\u200b\u7b2c\u4e8c\u4e2a\u200b\u5143\u7d20\u200b\u662f\u5b50\u200b\u8282\u70b9\u200b\uff0c\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u5904\u7406\u200b\u3002</p> <pre><code>class Solution:\n    def maximumPoints(self, edges: List[List[int]], coins: List[int], k: int) -&gt; int:\n        node_order, descs = [{0}], {i: set() for i, _ in enumerate(coins)}\n\n        # Parse tree\n        for a, b in edges:\n            descs[a].add(b)\n            descs[b].add(a)\n        parent_layer = set()\n\n        while True:\n            # Layer iteration\n            new_layer, current_layer = set(), node_order[-1]\n            for node in current_layer:\n                descs[node] -= parent_layer\n                new_layer |= descs[node]\n\n            if not new_layer:\n                break\n            parent_layer = current_layer\n            node_order.append(new_layer)\n\n        # dp[node][times]\n        dp: List[List[int]] = [[0] * 14 for _ in coins]\n\n        for level in node_order[::-1]:\n            for node in level:\n                child = descs[node]\n                for t in range(14):\n                    # Method 1:\n                    result1 = (coins[node] &gt;&gt; t) - k + sum(dp[_][t] for _ in child)\n                    # Method 2:\n                    result2 = (coins[node] &gt;&gt; t + 1)\n                    if t &lt; 13:\n                        result2 += sum(dp[_][t + 1] for _ in child)\n                    dp[node][t] = max(result1, result2)\n\n        return dp[0][0]\n</code></pre>","tags":["\u4f4d\u8fd0\u7b97","\u6811","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/2944/","title":"2944. \u200b\u8d2d\u4e70\u200b\u6c34\u679c\u200b\u9700\u8981\u200b\u7684\u200b\u6700\u5c11\u200b\u91d1\u5e01\u200b\u6570","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u961f\u5217","\u6570\u7ec4","\u52a8\u6001\u89c4\u5212","\u5355\u8c03\u961f\u5217","\u5806\uff08\u4f18\u5148\u961f\u5217\uff09"]},{"location":"coding/leetcode/2944/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b \u200b\u4e0b\u6807\u200b\u4ece\u200b 1 \u200b\u5f00\u59cb\u200b\u7684\u200b \u200b\u6574\u6570\u200b\u6570\u7ec4\u200b <code>prices</code> \uff0c\u200b\u5176\u4e2d\u200b <code>prices[i]</code> \u200b\u8868\u793a\u200b\u4f60\u200b\u8d2d\u4e70\u200b\u7b2c\u200b <code>i</code> \u200b\u4e2a\u200b\u6c34\u679c\u200b\u9700\u8981\u200b\u82b1\u8d39\u200b\u7684\u200b\u91d1\u5e01\u200b\u6570\u76ee\u200b\u3002</p> <p>\u200b\u6c34\u679c\u200b\u8d85\u5e02\u200b\u6709\u200b\u5982\u4e0b\u200b\u4fc3\u9500\u200b\u6d3b\u52a8\u200b\uff1a</p> <ul> <li>\u200b\u5982\u679c\u200b\u4f60\u200b\u82b1\u8d39\u200b <code>prices[i]</code> \u200b\u8d2d\u4e70\u200b\u4e86\u200b\u4e0b\u6807\u200b\u4e3a\u200b <code>i</code> \u200b\u7684\u200b\u6c34\u679c\u200b\uff0c\u200b\u90a3\u4e48\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u514d\u8d39\u200b\u83b7\u5f97\u200b\u4e0b\u6807\u200b\u8303\u56f4\u200b\u5728\u200b <code>[i + 1, i + i]</code> \u200b\u7684\u200b\u6c34\u679c\u200b\u3002</li> </ul> <p>\u200b\u6ce8\u610f\u200b \uff0c\u200b\u5373\u4f7f\u200b\u4f60\u200b \u200b\u53ef\u4ee5\u200b \u200b\u514d\u8d39\u200b\u83b7\u5f97\u200b\u6c34\u679c\u200b <code>j</code> \uff0c\u200b\u4f60\u200b\u4ecd\u7136\u200b\u53ef\u4ee5\u200b\u82b1\u8d39\u200b <code>prices[j]</code> \u200b\u4e2a\u200b\u91d1\u5e01\u200b\u53bb\u200b\u8d2d\u4e70\u200b\u5b83\u200b\u4ee5\u200b\u83b7\u5f97\u200b\u5b83\u200b\u7684\u200b\u5956\u52b1\u200b\u3002</p> <p>\u200b\u8bf7\u200b\u4f60\u200b\u8fd4\u56de\u200b\u83b7\u5f97\u200b\u6240\u6709\u200b\u6c34\u679c\u200b\u6240\u200b\u9700\u8981\u200b\u7684\u200b \u200b\u6700\u5c11\u200b \u200b\u91d1\u5e01\u200b\u6570\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>prices = [3,1,2]</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>4</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <ul> <li>\u200b\u7528\u200b prices[0] = 3 \u200b\u4e2a\u200b\u91d1\u5e01\u200b\u8d2d\u4e70\u200b\u7b2c\u200b 1 \u200b\u4e2a\u200b\u6c34\u679c\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u514d\u8d39\u200b\u83b7\u5f97\u200b\u7b2c\u200b 2 \u200b\u4e2a\u200b\u6c34\u679c\u200b\u3002</li> <li>\u200b\u7528\u200b prices[1] = 1 \u200b\u4e2a\u200b\u91d1\u5e01\u200b\u8d2d\u4e70\u200b\u7b2c\u200b 2 \u200b\u4e2a\u200b\u6c34\u679c\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u514d\u8d39\u200b\u83b7\u5f97\u200b\u7b2c\u200b 3 \u200b\u4e2a\u200b\u6c34\u679c\u200b\u3002</li> <li>\u200b\u514d\u8d39\u200b\u83b7\u5f97\u200b\u7b2c\u200b 3 \u200b\u4e2a\u200b\u6c34\u679c\u200b\u3002</li> </ul> <p>\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u5373\u4f7f\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u514d\u8d39\u200b\u83b7\u5f97\u200b\u7b2c\u200b 2 \u200b\u4e2a\u200b\u6c34\u679c\u200b\u4f5c\u4e3a\u200b\u8d2d\u4e70\u200b\u7b2c\u200b 1 \u200b\u4e2a\u200b\u6c34\u679c\u200b\u7684\u200b\u5956\u52b1\u200b\uff0c\u200b\u4f46\u200b\u60a8\u200b\u8d2d\u4e70\u200b\u5b83\u200b\u662f\u200b\u4e3a\u4e86\u200b\u83b7\u5f97\u200b\u5176\u200b\u5956\u52b1\u200b\uff0c\u200b\u8fd9\u200b\u662f\u200b\u66f4\u200b\u4f18\u5316\u200b\u7684\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>prices = [1,10,1,1]</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>2</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <ul> <li>\u200b\u7528\u200b prices[0] = 1 \u200b\u4e2a\u200b\u91d1\u5e01\u200b\u8d2d\u4e70\u200b\u7b2c\u200b 1 \u200b\u4e2a\u200b\u6c34\u679c\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u514d\u8d39\u200b\u83b7\u5f97\u200b\u7b2c\u200b 2 \u200b\u4e2a\u200b\u6c34\u679c\u200b\u3002</li> <li>\u200b\u514d\u8d39\u200b\u83b7\u5f97\u200b\u7b2c\u200b 2 \u200b\u4e2a\u200b\u6c34\u679c\u200b\u3002</li> <li>\u200b\u7528\u200b prices[2] = 1 \u200b\u4e2a\u200b\u91d1\u5e01\u200b\u8d2d\u4e70\u200b\u7b2c\u200b 3 \u200b\u4e2a\u200b\u6c34\u679c\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u514d\u8d39\u200b\u83b7\u5f97\u200b\u7b2c\u200b 4 \u200b\u4e2a\u200b\u6c34\u679c\u200b\u3002</li> <li>\u200b\u514d\u8d39\u200b\u83b7\u5f97\u200b\u7b2c\u200b 4 \u200b\u4e2a\u200b\u6c34\u679c\u200b\u3002</li> </ul> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>prices = [26,18,6,12,49,7,45,45]</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>39</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <ul> <li>\u200b\u7528\u200b prices[0] = 26 \u200b\u4e2a\u200b\u91d1\u5e01\u200b\u8d2d\u4e70\u200b\u7b2c\u200b 1 \u200b\u4e2a\u200b\u6c34\u679c\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u514d\u8d39\u200b\u83b7\u5f97\u200b\u7b2c\u200b 2 \u200b\u4e2a\u200b\u6c34\u679c\u200b\u3002</li> <li>\u200b\u514d\u8d39\u200b\u83b7\u5f97\u200b\u7b2c\u200b 2 \u200b\u4e2a\u200b\u6c34\u679c\u200b\u3002</li> <li>\u200b\u7528\u200b prices[2] = 6 \u200b\u4e2a\u200b\u91d1\u5e01\u200b\u8d2d\u4e70\u200b\u7b2c\u200b 3 \u200b\u4e2a\u200b\u6c34\u679c\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u514d\u8d39\u200b\u83b7\u5f97\u200b\u7b2c\u200b 4\uff0c5\uff0c6\uff08\u200b\u63a5\u4e0b\u6765\u200b\u7684\u200b\u4e09\u4e2a\u200b\uff09\u200b\u6c34\u679c\u200b\u3002</li> <li>\u200b\u514d\u8d39\u200b\u83b7\u5f97\u200b\u7b2c\u200b 4 \u200b\u4e2a\u200b\u6c34\u679c\u200b\u3002</li> <li>\u200b\u514d\u8d39\u200b\u83b7\u5f97\u200b\u7b2c\u200b 5 \u200b\u4e2a\u200b\u6c34\u679c\u200b\u3002</li> <li>\u200b\u7528\u200b prices[5] = 7 \u200b\u4e2a\u200b\u91d1\u5e01\u200b\u8d2d\u4e70\u200b\u7b2c\u200b 6 \u200b\u4e2a\u200b\u6c34\u679c\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u514d\u8d39\u200b\u83b7\u5f97\u200b\u7b2c\u200b 7 \u200b\u548c\u200b \u200b\u7b2c\u200b 8 \u200b\u4e2a\u200b\u6c34\u679c\u200b\u3002</li> <li>\u200b\u514d\u8d39\u200b\u83b7\u5f97\u200b\u7b2c\u200b 7 \u200b\u4e2a\u200b\u6c34\u679c\u200b\u3002</li> <li>\u200b\u514d\u8d39\u200b\u83b7\u5f97\u200b\u7b2c\u200b 8 \u200b\u4e2a\u200b\u6c34\u679c\u200b\u3002</li> </ul> <p>\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u5373\u4f7f\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u514d\u8d39\u200b\u83b7\u5f97\u200b\u7b2c\u200b 6 \u200b\u4e2a\u200b\u6c34\u679c\u200b\u4f5c\u4e3a\u200b\u8d2d\u4e70\u200b\u7b2c\u200b 3 \u200b\u4e2a\u200b\u6c34\u679c\u200b\u7684\u200b\u5956\u52b1\u200b\uff0c\u200b\u4f46\u200b\u60a8\u200b\u8d2d\u4e70\u200b\u5b83\u200b\u662f\u200b\u4e3a\u4e86\u200b\u83b7\u5f97\u200b\u5176\u200b\u5956\u52b1\u200b\uff0c\u200b\u8fd9\u200b\u662f\u200b\u66f4\u200b\u4f18\u5316\u200b\u7684\u200b\u3002</p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= prices.length &lt;= 1000</code></li> <li><code>1 &lt;= prices[i] &lt;= 10^5</code></li> </ul> <p>Reference</p>","tags":["\u961f\u5217","\u6570\u7ec4","\u52a8\u6001\u89c4\u5212","\u5355\u8c03\u961f\u5217","\u5806\uff08\u4f18\u5148\u961f\u5217\uff09"]},{"location":"coding/leetcode/2944/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4ee5\u4e0b\u200b<code>index</code>\u200b\u4ece\u200b1\u200b\u5f00\u59cb\u200b\uff0c\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u8868\u200b<code>dp[i]</code>\uff08<code>i</code>\u200b\u4ece\u200b<code>0</code>\u200b\u5f00\u59cb\u200b\uff09\u200b\u5b58\u50a8\u200b\u8d2d\u4e70\u200b\u7b2c\u200b<code>index</code>\u200b\u4e2a\u200b\u6c34\u679c\u200b\uff0c\u200b\u5e76\u4e14\u200b\u901a\u8fc7\u200b\u6700\u4f18\u200b\u65b9\u5f0f\u200b\u83b7\u53d6\u200b\u5269\u4e0b\u200b\u7684\u200b\u6c34\u679c\u200b\u3002\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\uff1a</p> <ul> <li>\u200b\u9996\u5148\u200b\uff0c\u200b\u8d2d\u4e70\u200b\u7b2c\u200b<code>index</code>\u200b\u4e2a\u200b\u6c34\u679c\u200b\u3002</li> <li>\u200b\u7b2c\u200b<code>index</code>\u200b\u4e2a\u200b\u6c34\u679c\u200b\u53ea\u80fd\u200b\u4fdd\u8bc1\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u83b7\u5f97\u200b\u7b2c\u200b<code>index + 1</code>\u200b\u81f3\u200b\u7b2c\u200b<code>2 * index</code>\u200b\u4e2a\u200b\u6c34\u679c\u200b\u3002</li> <li>\u200b\u4e3a\u4e86\u200b\u4fdd\u8bc1\u200b\u83b7\u5f97\u200b\u5269\u4e0b\u200b\u7684\u200b\u6c34\u679c\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u4ece\u200b\u8fd9\u4e2a\u200b\u533a\u95f4\u200b\u3001\u200b\u4ee5\u53ca\u200b\u7b2c\u200b<code>2 * index + 1</code>\u200b\u4e2a\u200b\u6c34\u679c\u200b\u4e2d\u200b\u6311\u9009\u200b\u4e00\u4e2a\u200b\u8d2d\u4e70\u200b\uff0c\u200b\u6765\u200b\u83b7\u53d6\u200b\u5269\u4e0b\u200b\u7684\u200b\u6c34\u679c\u200b\u3002</li> <li>\u200b\u5c06\u200b\u7b2c\u200b<code>index</code>\u200b\u4e2a\u200b\u6c34\u679c\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u4ece\u200b0\u200b\u5f00\u59cb\u200b\u7684\u200b\u4e0b\u6807\u200b\uff0c\u200b\u5373\u200b<code>dp[index - 1]</code>\u200b\u5bf9\u5e94\u200b\u7b2c\u200b<code>index</code>\u200b\u4e2a\u200b\u6c34\u679c\u200b\uff0c\u200b\u5207\u7247\u200b\u533a\u95f4\u200b<code>[index: 2 * index + 1]</code>\u200b\u5bf9\u5e94\u200b\u7b2c\u200b<code>index + 1</code>\u200b\u81f3\u200b\u7b2c\u200b<code>2 * index + 1</code>\u200b\u4e2a\u200b\u6c34\u679c\u200b\u7684\u200b\u67e5\u627e\u200b\u8303\u56f4\u200b\u3002</li> </ul> <p>\u200b\u72b6\u6001\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u4e3a\u200b</p> \\[ \\text{dp}[\\text{index} - 1] = \\text{prices}[\\text{index} - 1] + \\min(\\text{dp}[\\text{index}:2\\times\\text{index} + 1]) \\] <pre><code>class Solution:\n    def minimumCoins(self, prices: List[int]) -&gt; int:\n        dp: List[int] = [0] * (2 * len(prices))\n        length, index = len(prices), len(prices)\n        while index &gt; 0:\n            dp[index - 1] = prices[index - 1] + min(dp[index:2 * index + 1])\n            index -= 1\n        return dp[0]\n</code></pre>","tags":["\u961f\u5217","\u6570\u7ec4","\u52a8\u6001\u89c4\u5212","\u5355\u8c03\u961f\u5217","\u5806\uff08\u4f18\u5148\u961f\u5217\uff09"]},{"location":"coding/leetcode/3/","title":"3. \u200b\u65e0\u200b\u91cd\u590d\u200b\u5b57\u7b26\u200b\u7684\u200b\u6700\u957f\u200b\u5b50\u4e32","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u54c8\u5e0c\u8868","\u53cc\u6307\u9488","\u5b57\u7b26\u4e32","Sliding Window"]},{"location":"coding/leetcode/3/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u8bf7\u200b\u4f60\u200b\u627e\u51fa\u200b\u5176\u4e2d\u200b\u4e0d\u200b\u542b\u6709\u200b\u91cd\u590d\u200b\u5b57\u7b26\u200b\u7684\u200b\u00a0\u200b\u6700\u957f\u200b\u5b50\u4e32\u200b\u00a0\u200b\u7684\u200b\u957f\u5ea6\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u00a01:</p> <pre><code>\u200b\u8f93\u5165\u200b: s = \"abcabcbb\"\n\u200b\u8f93\u51fa\u200b: 3 \n\u200b\u89e3\u91ca\u200b: \u200b\u56e0\u4e3a\u200b\u65e0\u200b\u91cd\u590d\u200b\u5b57\u7b26\u200b\u7684\u200b\u6700\u957f\u200b\u5b50\u4e32\u200b\u662f\u200b \"abc\"\uff0c\u200b\u6240\u4ee5\u200b\u5176\u200b\u957f\u5ea6\u200b\u4e3a\u200b 3\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2:</p> <pre><code>\u200b\u8f93\u5165\u200b: s = \"bbbbb\"\n\u200b\u8f93\u51fa\u200b: 1\n\u200b\u89e3\u91ca\u200b: \u200b\u56e0\u4e3a\u200b\u65e0\u200b\u91cd\u590d\u200b\u5b57\u7b26\u200b\u7684\u200b\u6700\u957f\u200b\u5b50\u4e32\u200b\u662f\u200b \"b\"\uff0c\u200b\u6240\u4ee5\u200b\u5176\u200b\u957f\u5ea6\u200b\u4e3a\u200b 1\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 3:</p> <pre><code>\u200b\u8f93\u5165\u200b: s = \"pwwkew\"\n\u200b\u8f93\u51fa\u200b: 3\n\u200b\u89e3\u91ca\u200b: \u200b\u56e0\u4e3a\u200b\u65e0\u200b\u91cd\u590d\u200b\u5b57\u7b26\u200b\u7684\u200b\u6700\u957f\u200b\u5b50\u4e32\u200b\u662f\u200b\u00a0\"wke\"\uff0c\u200b\u6240\u4ee5\u200b\u5176\u200b\u957f\u5ea6\u200b\u4e3a\u200b 3\u3002\n\u00a0    \u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u4f60\u200b\u7684\u200b\u7b54\u6848\u200b\u5fc5\u987b\u200b\u662f\u200b \u200b\u5b50\u4e32\u200b \u200b\u7684\u200b\u957f\u5ea6\u200b\uff0c\"pwke\"\u00a0\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5b50\u200b\u5e8f\u5217\u200b\uff0c\u200b\u4e0d\u662f\u200b\u5b50\u4e32\u200b\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 4:</p> <pre><code>\u200b\u8f93\u5165\u200b: s = \"\"\n\u200b\u8f93\u51fa\u200b: 0\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>0 &lt;= s.length &lt;= 5 * 104</code></li> <li><code>s</code>\u00a0\u200b\u7531\u200b\u82f1\u6587\u5b57\u6bcd\u200b\u3001\u200b\u6570\u5b57\u200b\u3001\u200b\u7b26\u53f7\u200b\u548c\u200b\u7a7a\u683c\u200b\u7ec4\u6210\u200b</li> </ul>","tags":["\u54c8\u5e0c\u8868","\u53cc\u6307\u9488","\u5b57\u7b26\u4e32","Sliding Window"]},{"location":"coding/leetcode/3/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b \uff1a\u200b\u7528\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\u5b58\u50a8\u200b\u5404\u200b\u5b57\u6bcd\u200b\u51fa\u73b0\u200b\u7684\u200b\u6b21\u6570\u200b\uff08\u200b\u54c8\u5e0c\u200b\u8868\u200b\uff09\u3002\u200b\u5f53\u200b\u4e0d\u200b\u5b58\u5728\u200b\u91cd\u590d\u200b\u5b57\u6bcd\u200b\u65f6\u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b\u4e0d\u65ad\u200b\u5411\u200b\u53f3\u200b\u5ef6\u4f38\u200b\uff0c\u200b\u76f4\u5230\u200b\u51fa\u73b0\u200b\u91cd\u590d\u200b\u5b57\u6bcd\u200b\u6216\u200b\u5230\u8fbe\u200b\u5b57\u7b26\u4e32\u200b\u7ed3\u5c3e\u200b\u3002\u200b\u68c0\u6d4b\u200b\u5230\u200b\u91cd\u590d\u200b\u5b57\u6bcd\u200b\u540e\u200b\uff0c\u200b\u4ece\u200b\u5de6\u5411\u53f3\u200b\u6536\u7f29\u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u6536\u7f29\u200b\u90fd\u200b\u5bf9\u200b\u54c8\u5e0c\u200b\u8868\u200b\u8fdb\u884c\u200b\u66f4\u65b0\u200b\u3002\u200b\u76f4\u5230\u200b\u4e0d\u200b\u5b58\u5728\u200b\u91cd\u590d\u200b\u5b57\u6bcd\u200b\u65f6\u200b\uff0c\u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b\u624d\u200b\u505c\u6b62\u200b\u6536\u7f29\u200b\uff0c\u200b\u7ee7\u7eed\u200b\u5411\u200b\u53f3\u200b\u5ef6\u4f38\u200b\u3002</p> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b \uff1a\\(O(N)\\)</p> <p>\u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b \uff1a\\(O(1)\\)\uff0c\u200b\u4e0e\u200b\u5b57\u7b26\u4e32\u200b\u957f\u5ea6\u200b\u65e0\u5173\u200b\uff0c\u200b\u4f46\u200b\u4e0e\u200b\u5355\u4e2a\u200b\u5b57\u7b26\u200b\u7684\u200b\u5bbd\u5ea6\u200b\u6709\u5173\u200b\u3002</p> <pre><code>int lengthOfLongestSubstring(char * s){\n    int length = 0, ret = 0;\n    char hashMap[256] = {0}, *cur = s;\n    while(*cur)\n    {\n        while(hashMap[*cur])\n        {\n            hashMap[*(cur - length)] -= 1;\n            length--;\n        }\n        hashMap[*cur] = 1;\n        length++;\n        ret = ret &gt; length ? ret : length;\n        cur++;\n    }\n    return ret;\n}\n</code></pre> <p>Reference</p>","tags":["\u54c8\u5e0c\u8868","\u53cc\u6307\u9488","\u5b57\u7b26\u4e32","Sliding Window"]},{"location":"coding/leetcode/3019/","title":"3019. \u200b\u6309\u952e\u200b\u53d8\u66f4\u200b\u7684\u200b\u6b21\u6570","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/3019/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u4e0b\u6807\u200b\u4ece\u200b <code>0</code> \u200b\u5f00\u59cb\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b <code>s</code> \uff0c\u200b\u8be5\u200b\u5b57\u7b26\u4e32\u200b\u7531\u200b\u7528\u6237\u200b\u8f93\u5165\u200b\u3002\u200b\u6309\u952e\u200b\u53d8\u66f4\u200b\u7684\u200b\u5b9a\u4e49\u200b\u662f\u200b\uff1a\u200b\u4f7f\u7528\u200b\u4e0e\u200b\u4e0a\u6b21\u200b\u4f7f\u7528\u200b\u7684\u200b\u6309\u952e\u200b\u4e0d\u540c\u200b\u7684\u200b\u952e\u200b\u3002\u200b\u4f8b\u5982\u200b <code>s = \"ab\"</code> \u200b\u8868\u793a\u200b\u6309\u952e\u200b\u53d8\u66f4\u200b\u4e00\u6b21\u200b\uff0c\u200b\u800c\u200b <code>s = \"bBBb\"</code> \u200b\u4e0d\u200b\u5b58\u5728\u200b\u6309\u952e\u200b\u53d8\u66f4\u200b\u3002</p> <p>\u200b\u8fd4\u56de\u200b\u7528\u6237\u200b\u8f93\u5165\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u6309\u952e\u200b\u53d8\u66f4\u200b\u7684\u200b\u6b21\u6570\u200b\u3002</p> <p><code>\u200b\u6ce8\u610f\u200b\uff1ashift</code> \u200b\u6216\u200b <code>caps lock</code> \u200b\u7b49\u200b\u4fee\u9970\u200b\u952e\u200b\u4e0d\u200b\u8ba1\u5165\u200b\u6309\u952e\u200b\u53d8\u66f4\u200b\uff0c\u200b\u4e5f\u5c31\u662f\u8bf4\u200b\uff0c\u200b\u5982\u679c\u200b\u7528\u6237\u200b\u5148\u200b\u8f93\u5165\u200b\u5b57\u6bcd\u200b <code>'a'</code> \u200b\u7136\u540e\u200b\u8f93\u5165\u200b\u5b57\u6bcd\u200b <code>'A'</code> \uff0c\u200b\u4e0d\u200b\u7b97\u4f5c\u200b\u6309\u952e\u200b\u53d8\u66f4\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>s = \"aAbBcC\"</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>2</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a <pre><code>\u200b\u4ece\u200b s[0] = 'a' \u200b\u5230\u200b s[1] = 'A'\uff0c\u200b\u4e0d\u200b\u5b58\u5728\u200b\u6309\u952e\u200b\u53d8\u66f4\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u4e0d\u200b\u8ba1\u5165\u200b caps lock \u200b\u6216\u200b shift \u3002\n\u200b\u4ece\u200b s[1] = 'A' \u200b\u5230\u200b s[2] = 'b'\uff0c\u200b\u6309\u952e\u200b\u53d8\u66f4\u200b\u3002\n\u200b\u4ece\u200b s[2] = 'b' \u200b\u5230\u200b s[3] = 'B'\uff0c\u200b\u4e0d\u200b\u5b58\u5728\u200b\u6309\u952e\u200b\u53d8\u66f4\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u4e0d\u200b\u8ba1\u5165\u200b caps lock \u200b\u6216\u200b shift \u3002\n\u200b\u4ece\u200b s[3] = 'B' \u200b\u5230\u200b s[4] = 'c'\uff0c\u200b\u6309\u952e\u200b\u53d8\u66f4\u200b\u3002\n\u200b\u4ece\u200b s[4] = 'c' \u200b\u5230\u200b s[5] = 'C'\uff0c\u200b\u4e0d\u200b\u5b58\u5728\u200b\u6309\u952e\u200b\u53d8\u66f4\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u4e0d\u200b\u8ba1\u5165\u200b caps lock \u200b\u6216\u200b shift \u3002\n</code></pre></p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>s = \"AaAaAaaA\"</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>0</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a<code>\u200b\u4e0d\u200b\u5b58\u5728\u200b\u6309\u952e\u200b\u53d8\u66f4\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u8fd9\u4e2a\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u53ea\u200b\u6309\u200b\u4e0b\u200b\u5b57\u6bcd\u200b 'a' \u200b\u548c\u200b 'A' \uff0c\u200b\u4e0d\u200b\u9700\u8981\u200b\u8fdb\u884c\u200b\u6309\u952e\u200b\u53d8\u66f4\u200b\u3002</code></p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= s.length &lt;= 100</code></li> <li><code>s</code> \u200b\u4ec5\u200b\u7531\u200b\u82f1\u6587\u200b\u5927\u5199\u5b57\u6bcd\u200b\u548c\u200b\u5c0f\u5199\u5b57\u6bcd\u200b\u7ec4\u6210\u200b\u3002</li> </ul> <p>Reference</p>","tags":["\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/3019/#_2","title":"\u9898\u89e3","text":"<pre><code>class Solution:\n    def countKeyChanges(self, s: str) -&gt; int:\n        diff = [\n            int((x - y) % 32 != 0)\n            for x, y in pairwise(map(ord, s))\n        ]\n        return sum(diff)\n</code></pre> <p>\u200b\u8ba1\u7b97\u200b\u76f8\u90bb\u200b\u4e24\u4e2a\u200b\u5b57\u7b26\u200b\u7684\u200b\u5dee\u200b\uff0c\u200b\u5982\u679c\u200b\u80fd\u200b\u88ab\u200b32\u200b\u6574\u9664\u200b\u5219\u200b\u4e0d\u200b\u9700\u8981\u200b\u5207\u6362\u200b\u6309\u952e\u200b\u3002</p>","tags":["\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/3065/","title":"3065. \u200b\u8d85\u8fc7\u200b\u9608\u503c\u200b\u7684\u200b\u6700\u5c11\u200b\u64cd\u4f5c\u6570\u200b I","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/3065/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u4e0b\u6807\u200b\u4ece\u200b 0 \u200b\u5f00\u59cb\u200b\u7684\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b <code>nums</code> \u200b\u548c\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b <code>k</code> \u3002</p> <p>\u200b\u4e00\u6b21\u200b\u64cd\u4f5c\u200b\u4e2d\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5220\u9664\u200b <code>nums</code> \u200b\u4e2d\u200b\u7684\u200b\u6700\u5c0f\u200b\u5143\u7d20\u200b\u3002</p> <p>\u200b\u4f60\u200b\u9700\u8981\u200b\u4f7f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u90fd\u200b\u5927\u4e8e\u200b\u6216\u200b\u7b49\u4e8e\u200b <code>k</code> \uff0c\u200b\u8bf7\u200b\u4f60\u200b\u8fd4\u56de\u200b\u9700\u8981\u200b\u7684\u200b \u200b\u6700\u5c11\u200b \u200b\u64cd\u4f5c\u200b\u6b21\u6570\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>nums = [2,11,10,1,3], k = 10</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>3</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a\u200b\u7b2c\u4e00\u6b21\u200b\u64cd\u4f5c\u200b\u540e\u200b\uff0cnums \u200b\u53d8\u4e3a\u200b [2, 11, 10, 3] \u3002</p> <p>\u200b\u7b2c\u4e8c\u6b21\u200b\u64cd\u4f5c\u200b\u540e\u200b\uff0cnums \u200b\u53d8\u4e3a\u200b [11, 10, 3] \u3002</p> <p>\u200b\u7b2c\u4e09\u6b21\u200b\u64cd\u4f5c\u200b\u540e\u200b\uff0cnums \u200b\u53d8\u4e3a\u200b [11, 10] \u3002</p> <p>\u200b\u6b64\u65f6\u200b\uff0c\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u90fd\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b 10 \uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u505c\u6b62\u200b\u64cd\u4f5c\u200b\u3002</p> <p>\u200b\u4f7f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u90fd\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b 10 \u200b\u9700\u8981\u200b\u7684\u200b\u6700\u5c11\u200b\u64cd\u4f5c\u200b\u6b21\u6570\u200b\u4e3a\u200b 3 \u3002</p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>nums = [1,1,2,4,9], k = 1</code> \u200b\u8f93\u51fa\u200b\uff1a<code>0</code> \u200b\u89e3\u91ca\u200b\uff1a\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u90fd\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b 1 \uff0c\u200b\u6240\u4ee5\u200b\u4e0d\u200b\u9700\u8981\u200b\u5bf9\u200b nums \u200b\u505a\u200b\u4efb\u4f55\u200b\u64cd\u4f5c\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>nums = [1,1,2,4,9], k = 9</code> \u200b\u8f93\u51fa\u200b\uff1a<code>4</code> \u200b\u89e3\u91ca\u200b\uff1anums \u200b\u4e2d\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b 9 \uff0c\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u6267\u884c\u200b 4 \u200b\u6b21\u200b\u64cd\u4f5c\u200b\u3002</p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 50</code></li> <li><code>1 &lt;= nums[i] &lt;= 10^9</code></li> <li><code>1 &lt;= k &lt;= 10^9</code></li> <li>\u200b\u8f93\u5165\u200b\u4fdd\u8bc1\u200b\u81f3\u5c11\u200b\u6709\u200b\u4e00\u4e2a\u200b\u6ee1\u8db3\u200b <code>nums[i] &gt;= k</code> \u200b\u7684\u200b\u4e0b\u6807\u200b <code>i</code> \u200b\u5b58\u5728\u200b\u3002</li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/3065/#_2","title":"\u9898\u89e3","text":"<pre><code>class Solution:\n    def minOperations(self, nums: List[int], k: int) -&gt; int:\n        result = 0\n        for _ in nums:\n            if _ &lt; k:\n                result += 1\n        return result\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/3066/","title":"3066. \u200b\u8d85\u8fc7\u200b\u9608\u503c\u200b\u7684\u200b\u6700\u5c11\u200b\u64cd\u4f5c\u6570\u200b II","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u7ec4","\u6a21\u62df","\u5806\uff08\u4f18\u5148\u961f\u5217\uff09"]},{"location":"coding/leetcode/3066/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u4e0b\u6807\u200b\u4ece\u200b 0 \u200b\u5f00\u59cb\u200b\u7684\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b <code>nums</code> \u200b\u548c\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b <code>k</code> \u3002</p> <p>\u200b\u4e00\u6b21\u200b\u64cd\u4f5c\u200b\u4e2d\u200b\uff0c\u200b\u4f60\u200b\u5c06\u200b\u6267\u884c\u200b\uff1a</p> <ul> <li>\u200b\u9009\u62e9\u200b <code>nums</code> \u200b\u4e2d\u200b\u6700\u5c0f\u200b\u7684\u200b\u4e24\u4e2a\u200b\u6574\u6570\u200b <code>x</code> \u200b\u548c\u200b <code>y</code> \u3002</li> <li>\u200b\u5c06\u200b <code>x</code> \u200b\u548c\u200b <code>y</code> \u200b\u4ece\u200b <code>nums</code> \u200b\u4e2d\u200b\u5220\u9664\u200b\u3002</li> <li>\u200b\u5c06\u200b <code>min(x, y) * 2 + max(x, y)</code> \u200b\u6dfb\u52a0\u200b\u5230\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u4efb\u610f\u200b\u4f4d\u7f6e\u200b\u3002</li> </ul> <p>\u200b\u6ce8\u610f\u200b\uff0c\u200b\u53ea\u6709\u200b\u5f53\u200b <code>nums</code> \u200b\u81f3\u5c11\u200b\u5305\u542b\u200b\u4e24\u4e2a\u200b\u5143\u7d20\u200b\u65f6\u200b\uff0c\u200b\u4f60\u200b\u624d\u200b\u53ef\u4ee5\u200b\u6267\u884c\u200b\u4ee5\u4e0a\u200b\u64cd\u4f5c\u200b\u3002</p> <p>\u200b\u4f60\u200b\u9700\u8981\u200b\u4f7f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u90fd\u200b\u5927\u4e8e\u200b\u6216\u200b\u7b49\u4e8e\u200b <code>k</code> \uff0c\u200b\u8bf7\u200b\u4f60\u200b\u8fd4\u56de\u200b\u9700\u8981\u200b\u7684\u200b \u200b\u6700\u5c11\u200b \u200b\u64cd\u4f5c\u200b\u6b21\u6570\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>nums = [2,11,10,1,3], k = 10</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>2</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a\u200b\u7b2c\u4e00\u6b21\u200b\u64cd\u4f5c\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5220\u9664\u200b\u5143\u7d20\u200b 1 \u200b\u548c\u200b 2 \uff0c\u200b\u7136\u540e\u200b\u6dfb\u52a0\u200b 1 * 2 + 2 \u200b\u5230\u200b nums \u200b\u4e2d\u200b\uff0cnums \u200b\u53d8\u4e3a\u200b [4, 11, 10, 3] \u3002</p> <p>\u200b\u7b2c\u4e8c\u6b21\u200b\u64cd\u4f5c\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5220\u9664\u200b\u5143\u7d20\u200b 3 \u200b\u548c\u200b 4 \uff0c\u200b\u7136\u540e\u200b\u6dfb\u52a0\u200b 3 * 2 + 4 \u200b\u5230\u200b nums \u200b\u4e2d\u200b\uff0cnums \u200b\u53d8\u4e3a\u200b [10, 11, 10] \u3002</p> <p>\u200b\u6b64\u65f6\u200b\uff0c\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u90fd\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b 10 \uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u505c\u6b62\u200b\u64cd\u4f5c\u200b\u3002</p> <p>\u200b\u4f7f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u90fd\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b 10 \u200b\u9700\u8981\u200b\u7684\u200b\u6700\u5c11\u200b\u64cd\u4f5c\u200b\u6b21\u6570\u200b\u4e3a\u200b 2 \u3002</p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>nums = [1,1,2,4,9], k = 20</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>4</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a\u200b\u7b2c\u4e00\u6b21\u200b\u64cd\u4f5c\u200b\u540e\u200b\uff0cnums \u200b\u53d8\u4e3a\u200b [2, 4, 9, 3] \u3002</p> <p>\u200b\u7b2c\u4e8c\u6b21\u200b\u64cd\u4f5c\u200b\u540e\u200b\uff0cnums \u200b\u53d8\u4e3a\u200b [7, 4, 9] \u3002</p> <p>\u200b\u7b2c\u4e09\u6b21\u200b\u64cd\u4f5c\u200b\u540e\u200b\uff0cnums \u200b\u53d8\u4e3a\u200b [15, 9] \u3002</p> <p>\u200b\u7b2c\u56db\u6b21\u200b\u64cd\u4f5c\u200b\u540e\u200b\uff0cnums \u200b\u53d8\u4e3a\u200b [33] \u3002</p> <p>\u200b\u6b64\u65f6\u200b\uff0c\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u90fd\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b 20 \uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u505c\u6b62\u200b\u64cd\u4f5c\u200b\u3002</p> <p>\u200b\u4f7f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u90fd\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b 20 \u200b\u9700\u8981\u200b\u7684\u200b\u6700\u5c11\u200b\u64cd\u4f5c\u200b\u6b21\u6570\u200b\u4e3a\u200b 4 \u3002</p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>2 &lt;= nums.length &lt;= 2 * 10^5</code></li> <li><code>1 &lt;= nums[i] &lt;= 10^9</code></li> <li><code>1 &lt;= k &lt;= 10^9</code></li> <li>\u200b\u8f93\u5165\u200b\u4fdd\u8bc1\u200b\u7b54\u6848\u200b\u4e00\u5b9a\u200b\u5b58\u5728\u200b\uff0c\u200b\u4e5f\u5c31\u662f\u8bf4\u200b\u4e00\u5b9a\u200b\u5b58\u5728\u200b\u4e00\u4e2a\u200b\u64cd\u4f5c\u200b\u5e8f\u5217\u200b\u4f7f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u90fd\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b <code>k</code> \u3002</li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u6a21\u62df","\u5806\uff08\u4f18\u5148\u961f\u5217\uff09"]},{"location":"coding/leetcode/3066/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4f7f\u7528\u200bpython\u200b\u63d0\u4f9b\u200b\u7684\u200b<code>heapq</code>\uff0c\u200b\u6a21\u62df\u200b\u63d2\u5165\u200b\u548c\u200b\u5220\u9664\u200b\u8fc7\u7a0b\u200b\u5373\u53ef\u200b\uff0c\u200b\u6ce8\u610f\u200b\u5f53\u200b<code>x</code>\u200b\u548c\u200b<code>y</code>\u200b\u6309\u200b\u987a\u5e8f\u200b\u53d6\u51fa\u200b\u65f6\u200b\uff0c<code>min(x, y) * 2 + max(x, y)</code>\u200b\u7b49\u4ef7\u200b\u4e8e\u200b<code>2 * x + y</code>\u3002</p> <pre><code>import heapq\n\nclass Solution:\n    def minOperations(self, nums: List[int], k: int) -&gt; int:\n        heap = []\n        for _ in nums:\n            heapq.heappush(heap, _)\n        result = 0\n        while heap[0] &lt; k:\n            x = heapq.heappop(heap)\n            y = heapq.heappop(heap)\n            heapq.heappush(heap, 2 * x + y)\n            result += 1\n        return result\n</code></pre>","tags":["\u6570\u7ec4","\u6a21\u62df","\u5806\uff08\u4f18\u5148\u961f\u5217\uff09"]},{"location":"coding/leetcode/3095/","title":"3095. \u200b\u6216\u503c\u200b\u81f3\u5c11\u200b K \u200b\u7684\u200b\u6700\u200b\u77ed\u5b50\u200b\u6570\u7ec4\u200b I","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u4f4d\u8fd0\u7b97","\u6570\u7ec4","\u6ed1\u52a8\u7a97\u53e3"]},{"location":"coding/leetcode/3095/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b \u200b\u975e\u8d1f\u200b \u200b\u6574\u6570\u200b\u6570\u7ec4\u200b <code>nums</code> \u200b\u548c\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b <code>k</code> \u3002</p> <p>\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u7684\u200b\u6309\u4f4d\u200b\u6216\u200b\u8fd0\u7b97\u200b <code>OR</code> \u200b\u7684\u200b\u503c\u200b \u200b\u81f3\u5c11\u200b \u200b\u4e3a\u200b <code>k</code> \uff0c\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b\u79f0\u200b\u8fd9\u4e2a\u200b\u6570\u7ec4\u200b\u662f\u200b \u200b\u7279\u522b\u200b\u7684\u200b \u3002</p> <p>\u200b\u8bf7\u200b\u4f60\u200b\u8fd4\u56de\u200b <code>nums</code> \u200b\u4e2d\u200b \u200b\u6700\u77ed\u200b\u7279\u522b\u200b\u975e\u200b\u7a7a\u5b50\u200b\u6570\u7ec4\u200b \u200b\u7684\u200b\u957f\u5ea6\u200b\uff0c\u200b\u5982\u679c\u200b\u7279\u522b\u200b\u5b50\u200b\u6570\u7ec4\u200b\u4e0d\u200b\u5b58\u5728\u200b\uff0c\u200b\u90a3\u4e48\u200b\u8fd4\u56de\u200b <code>-1</code> \u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1anums = [1,2,3], k = 2</p> <p>\u200b\u8f93\u51fa\u200b\uff1a1</p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u5b50\u200b\u6570\u7ec4\u200b [3] \u200b\u7684\u200b\u6309\u4f4d\u200b OR \u200b\u503c\u4e3a\u200b 3 \uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u8fd4\u56de\u200b 1 \u3002</p> <p>\u200b\u6ce8\u610f\u200b\uff0c[2] \u200b\u4e5f\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7279\u522b\u200b\u5b50\u200b\u6570\u7ec4\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1anums = [2,1,8], k = 10</p> <p>\u200b\u8f93\u51fa\u200b\uff1a3</p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u5b50\u200b\u6570\u7ec4\u200b [2,1,8] \u200b\u7684\u200b\u6309\u4f4d\u200b OR \u200b\u503c\u4e3a\u200b 11 \uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u8fd4\u56de\u200b 3 \u3002</p> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1anums = [1,2], k = 0</p> <p>\u200b\u8f93\u51fa\u200b\uff1a1</p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u5b50\u200b\u6570\u7ec4\u200b [1] \u200b\u7684\u200b\u6309\u4f4d\u200b OR \u200b\u503c\u4e3a\u200b 1 \uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u8fd4\u56de\u200b 1 \u3002</p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 50</code></li> <li><code>0 &lt;= nums[i] &lt;= 50</code></li> <li><code>0 &lt;= k &lt; 64</code></li> </ul> <p>Reference</p>","tags":["\u4f4d\u8fd0\u7b97","\u6570\u7ec4","\u6ed1\u52a8\u7a97\u53e3"]},{"location":"coding/leetcode/3095/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4ee5\u4e0b\u200b\u6240\u6307\u200b\u201c\u200b\u6761\u4ef6\u200b\u201d\u200b\u662f\u200b\u6307\u200b\u533a\u95f4\u200b\u6309\u4f4d\u200b\u6216\u200b\u7684\u200b\u503c\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b<code>k</code>\u3002</p> <p>\u200b\u6ce8\u610f\u200b\u5230\u200b<code>x | y &gt;= x</code>\u200b\u4ee5\u53ca\u200b<code>x | y &gt;= y</code>\uff0c\u200b\u56e0\u6b64\u200b\uff1a</p> <ul> <li>\u200b\u82e5\u200b\u4e00\u4e2a\u200b\u533a\u95f4\u200b<code>[l:r]</code>\u200b\u6ee1\u8db3\u6761\u4ef6\u200b\uff0c\u200b\u5219\u200b\u4ee5\u200b<code>l</code>\u200b\u5f00\u5934\u200b\u7684\u200b\u6240\u6709\u200b\u540e\u7eed\u200b\u533a\u95f4\u200b\u90fd\u200b\u6ee1\u8db3\u6761\u4ef6\u200b\u3002</li> <li>\u200b\u82e5\u200b\u4e00\u4e2a\u200b\u533a\u95f4\u200b<code>[l:r]</code>\u200b\u4e0d\u200b\u6ee1\u8db3\u6761\u4ef6\u200b\uff0c\u200b\u5219\u200b\u4ee5\u200b<code>r</code>\u200b\u7ed3\u5c3e\u200b\u7684\u200b\u6240\u6709\u200b\u4e4b\u524d\u200b\u7684\u200b\u533a\u95f4\u200b\u90fd\u200b\u4e0d\u200b\u6ee1\u8db3\u6761\u4ef6\u200b\u3002</li> </ul> <p>\u200b\u53ef\u4ee5\u200b\u7528\u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b\u7684\u200b\u601d\u8def\u200b\uff0c\u200b\u8bbe\u7f6e\u200b\u4e00\u4e2a\u200b\u533a\u95f4\u200b<code>[l:r]</code>\u200b\u5e76\u200b\u8bb0\u5f55\u200b\u533a\u95f4\u200b\u5185\u200b\u6570\u503c\u200b\u7684\u200b\u6309\u4f4d\u200b\u6216\u200b\u7684\u200b\u503c\u200b\u3002\u200b\u9996\u5148\u200b\u5411\u200b\u53f3\u200b\u5ef6\u4f38\u200b\u533a\u95f4\u200b\uff08\u200b\u9012\u589e\u200b<code>r</code>\uff09\uff0c\u200b\u627e\u5230\u200b\u4e00\u4e2a\u200b\u6ee1\u8db3\u6761\u4ef6\u200b\u7684\u200b\u533a\u95f4\u200b\u540e\u200b\uff1a</p> <ul> <li>\u200b\u4ece\u53f3\u200b\u5411\u200b\u5de6\u200b\u5bfb\u627e\u200b\u6700\u77ed\u200b\u7684\u200b\u6ee1\u8db3\u6761\u4ef6\u200b\u7684\u200b\u533a\u95f4\u200b\uff0c\u200b\u4f5c\u4e3a\u200b\u5f53\u524d\u200b\u627e\u5230\u200b\u7684\u200b\u6700\u200b\u77ed\u200b\u533a\u95f4\u200b</li> <li>\u200b\u5c06\u200b<code>l</code>\u200b\u7684\u200b\u503c\u200b\u8bbe\u4e3a\u200b\u6700\u957f\u200b\u7684\u200b\u4e0d\u200b\u6ee1\u8db3\u6761\u4ef6\u200b\u533a\u95f4\u200b\u7684\u200b\u8d77\u70b9\u200b</li> </ul> <p>\u200b\u4e4b\u540e\u200b\u7ee7\u7eed\u200b\u5411\u200b\u53f3\u200b\u79fb\u52a8\u200b<code>r</code>\uff0c\u200b\u5bfb\u627e\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u6ee1\u8db3\u6761\u4ef6\u200b\u7684\u200b\u533a\u95f4\u200b\u3002</p> <pre><code>class Solution:\n    def minimumSubarrayLength(self, nums: List[int], k: int) -&gt; int:\n        min_range, right_or_value = len(nums) + 1, 0\n        for r, value in enumerate(nums):\n            right_or_value |= value\n\n            if right_or_value &gt;= k:\n                l, left_or_value, right_or_value = r - 1, value, 0\n                while l &gt;= 0 and left_or_value &lt; k:\n                    left_or_value |= nums[l]\n                    right_or_value |= nums[l + 1]\n                    l -= 1\n                min_range = min(min_range, r - l)\n        return -1 if min_range &gt; len(nums) else min_range\n</code></pre>","tags":["\u4f4d\u8fd0\u7b97","\u6570\u7ec4","\u6ed1\u52a8\u7a97\u53e3"]},{"location":"coding/leetcode/3097/","title":"3097. \u200b\u6216\u503c\u200b\u81f3\u5c11\u200b K \u200b\u7684\u200b\u6700\u200b\u77ed\u5b50\u200b\u6570\u7ec4\u200b II","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u4f4d\u8fd0\u7b97","\u6570\u7ec4","\u6ed1\u52a8\u7a97\u53e3"]},{"location":"coding/leetcode/3097/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b \u200b\u975e\u8d1f\u200b \u200b\u6574\u6570\u200b\u6570\u7ec4\u200b <code>nums</code> \u200b\u548c\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b <code>k</code> \u3002</p> <p>\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u7684\u200b\u6309\u4f4d\u200b\u6216\u200b\u8fd0\u7b97\u200b <code>OR</code> \u200b\u7684\u200b\u503c\u200b \u200b\u81f3\u5c11\u200b \u200b\u4e3a\u200b <code>k</code> \uff0c\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b\u79f0\u200b\u8fd9\u4e2a\u200b\u6570\u7ec4\u200b\u662f\u200b \u200b\u7279\u522b\u200b\u7684\u200b \u3002</p> <p>\u200b\u8bf7\u200b\u4f60\u200b\u8fd4\u56de\u200b <code>nums</code> \u200b\u4e2d\u200b \u200b\u6700\u77ed\u200b\u7279\u522b\u200b\u975e\u200b\u7a7a\u5b50\u200b\u6570\u7ec4\u200b \u200b\u7684\u200b\u957f\u5ea6\u200b\uff0c\u200b\u5982\u679c\u200b\u7279\u522b\u200b\u5b50\u200b\u6570\u7ec4\u200b\u4e0d\u200b\u5b58\u5728\u200b\uff0c\u200b\u90a3\u4e48\u200b\u8fd4\u56de\u200b <code>-1</code> \u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1anums = [1,2,3], k = 2</p> <p>\u200b\u8f93\u51fa\u200b\uff1a1</p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u5b50\u200b\u6570\u7ec4\u200b [3] \u200b\u7684\u200b\u6309\u4f4d\u200b OR \u200b\u503c\u4e3a\u200b 3 \uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u8fd4\u56de\u200b 1 \u3002</p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1anums = [2,1,8], k = 10</p> <p>\u200b\u8f93\u51fa\u200b\uff1a3</p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u5b50\u200b\u6570\u7ec4\u200b [2,1,8] \u200b\u7684\u200b\u6309\u4f4d\u200b OR \u200b\u503c\u4e3a\u200b 11 \uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u8fd4\u56de\u200b 3 \u3002</p> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1anums = [1,2], k = 0</p> <p>\u200b\u8f93\u51fa\u200b\uff1a1</p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u5b50\u200b\u6570\u7ec4\u200b [1] \u200b\u7684\u200b\u6309\u4f4d\u200b OR \u200b\u503c\u4e3a\u200b 1 \uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u8fd4\u56de\u200b 1 \u3002</p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 2 * 10^5</code></li> <li><code>0 &lt;= nums[i] &lt;= 10^9</code></li> <li><code>0 &lt;= k &lt; 10^9</code></li> </ul> <p>Reference</p>","tags":["\u4f4d\u8fd0\u7b97","\u6570\u7ec4","\u6ed1\u52a8\u7a97\u53e3"]},{"location":"coding/leetcode/3097/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u53c2\u89c1\u200b3095. \u200b\u6216\u503c\u200b\u81f3\u5c11\u200b K \u200b\u7684\u200b\u6700\u200b\u77ed\u5b50\u200b\u6570\u7ec4\u200b I\u3002</p>","tags":["\u4f4d\u8fd0\u7b97","\u6570\u7ec4","\u6ed1\u52a8\u7a97\u53e3"]},{"location":"coding/leetcode/315/","title":"315. \u200b\u8ba1\u7b97\u200b\u53f3\u4fa7\u200b\u5c0f\u4e8e\u200b\u5f53\u524d\u200b\u5143\u7d20\u200b\u7684\u200b\u4e2a\u6570","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u56f0\u96be\u200b</p>","tags":["\u6392\u5e8f","\u6811\u72b6\u6570\u7ec4","\u7ebf\u6bb5\u6811","\u4e8c\u5206\u67e5\u627e","\u5206\u6cbb\u7b97\u6cd5"]},{"location":"coding/leetcode/315/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b nums \uff0c\u200b\u6309\u200b\u8981\u6c42\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u6570\u7ec4\u200b\u00a0counts \u3002\u200b\u6570\u7ec4\u200b counts \u200b\u6709\u200b\u8be5\u200b\u6027\u8d28\u200b\uff1a<code>counts[i]</code>\u200b\u7684\u200b\u503c\u200b\u662f\u200b<code>nums[i]</code>\u200b\u53f3\u4fa7\u200b\u5c0f\u4e8e\u200b<code>nums[i]</code>\u200b\u7684\u200b\u5143\u7d20\u200b\u7684\u200b\u6570\u91cf\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [5,2,6,1]\n\u200b\u8f93\u51fa\u200b\uff1a[2,1,1,0] \n\u200b\u89e3\u91ca\u200b\uff1a\n5 \u200b\u7684\u200b\u53f3\u4fa7\u200b\u6709\u200b 2 \u200b\u4e2a\u200b\u66f4\u200b\u5c0f\u200b\u7684\u200b\u5143\u7d20\u200b (2 \u200b\u548c\u200b 1)\n2 \u200b\u7684\u200b\u53f3\u4fa7\u200b\u4ec5\u200b\u6709\u200b 1 \u200b\u4e2a\u200b\u66f4\u200b\u5c0f\u200b\u7684\u200b\u5143\u7d20\u200b (1)\n6 \u200b\u7684\u200b\u53f3\u4fa7\u200b\u6709\u200b 1 \u200b\u4e2a\u200b\u66f4\u200b\u5c0f\u200b\u7684\u200b\u5143\u7d20\u200b (1)\n1 \u200b\u7684\u200b\u53f3\u4fa7\u200b\u6709\u200b 0 \u200b\u4e2a\u200b\u66f4\u200b\u5c0f\u200b\u7684\u200b\u5143\u7d20\u200b\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>0 &lt;= nums.length &lt;= 10^5</code></li> <li><code>-10^4\u00a0&lt;= nums[i] &lt;= 10^4</code></li> </ul> <p>Reference</p>","tags":["\u6392\u5e8f","\u6811\u72b6\u6570\u7ec4","\u7ebf\u6bb5\u6811","\u4e8c\u5206\u67e5\u627e","\u5206\u6cbb\u7b97\u6cd5"]},{"location":"coding/leetcode/315/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u4ece\u540e\u200b\u5f80\u524d\u200b\u6784\u9020\u200b\u4e00\u4e2a\u200b\u4e8c\u53c9\u200b\u67e5\u627e\u200b\u6811\u200b\uff0c\u200b\u5728\u200b\u4e8c\u53c9\u200b\u67e5\u627e\u200b\u6811\u4e2d\u200b\u7ef4\u62a4\u200b\u6811\u4e2d\u200b\u5c0f\u4e8e\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\u7684\u200b\u6570\u5b57\u200b\u7684\u200b\u4e2a\u6570\u200b\u3002</p> <p>\u200b\u4e8c\u53c9\u6811\u200b\u9700\u8981\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u57df\u200b\u7528\u4e8e\u200b\u8ba1\u7b97\u200b\u5de6\u5b50\u200b\u6811\u200b\u7684\u200b\u5143\u7d20\u200b\u603b\u6570\u200b\uff0c\u200b\u5373\u200b\u5f53\u524d\u200b\u6811\u4e2d\u200b\u6570\u503c\u200b\u5c0f\u4e8e\u200b\u8be5\u200b\u8282\u70b9\u200b\u7684\u200b\u5143\u7d20\u200b\u603b\u6570\u200b\u3002\u200b\u5b9e\u73b0\u200b\u65b9\u6cd5\u200b\u662f\u200b\u5728\u200b\u5de6\u5b50\u200b\u6811\u200b\u6dfb\u52a0\u200b\u5143\u7d20\u200b\u540e\u200b\u8be5\u57df\u200b\u7684\u200b\u503c\u200b\u589e\u52a0\u200b1\u3002</p> <p>\u200b\u5728\u200b\u8282\u70b9\u200b\u7684\u200b\u53f3\u5b50\u200b\u6811\u200b\u6dfb\u52a0\u200b\u5143\u7d20\u200b\u65f6\u200b\uff0c\u200b\u610f\u5473\u7740\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\u548c\u200b\u8282\u70b9\u200b\u5de6\u5b50\u200b\u6811\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u8282\u70b9\u200b\u90fd\u200b\u662f\u200b\u7b26\u5408\u200b\u53f3\u4fa7\u200b\u5c0f\u4e8e\u200b\u5f53\u524d\u200b\u5143\u7d20\u200b\u7684\u200b\u8282\u70b9\u200b\u3002\u200b\u5728\u200b\u9012\u5f52\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u9700\u8981\u200b\u4f20\u9012\u200b\u4e00\u4e2a\u200b\u7528\u4f5c\u200b\u8ba1\u6570\u5668\u200b\u7684\u200b\u6307\u9488\u200b\u53c2\u6570\u200b\uff08\u200b\u8ba1\u6570\u200b\u7684\u200b\u6570\u503c\u200b\u5373\u200b\u4e3a\u200b\u6240\u6c42\u200b\u7684\u200b\u7ed3\u679c\u200b\uff09\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nstruct TreeNode2\n{\n    struct TreeNode2 *left;\n    struct TreeNode2 *right;\n    int val;\n    int subs;\n};\n\nstruct TreeNode2 *insert(struct TreeNode2 *dest, int src, int *depth)\n{\n    if (dest == NULL)\n    {\n        struct TreeNode2 *ret = (struct TreeNode2 *)malloc(sizeof(struct TreeNode2));\n        ret-&gt;left = NULL;\n        ret-&gt;right = NULL;\n        ret-&gt;val = src;\n        ret-&gt;subs = 0;\n        return ret;\n    }\n    if (src &gt; dest-&gt;val)\n    {\n        *depth += 1 + dest-&gt;subs;\n        dest-&gt;right = insert(dest-&gt;right, src, depth);\n    }\n    else\n    {\n        dest-&gt;subs++;\n        dest-&gt;left = insert(dest-&gt;left, src, depth);\n    }\n    return dest;\n}\n\nint *countSmaller(int *nums, int numsSize, int *returnSize)\n{\n    *returnSize = numsSize;\n    int *ret = (int *)memset(malloc(sizeof(int) * numsSize), 0, sizeof(int) * numsSize), i = 0;\n    if (numsSize &lt;= 1)\n        return ret;\n    struct TreeNode2 *tempTree = NULL;\n    for (i = numsSize - 1; i &gt;= 0; i--)\n        tempTree = insert(tempTree, nums[i], ret + i);\n    return ret;\n}\n</code></pre>","tags":["\u6392\u5e8f","\u6811\u72b6\u6570\u7ec4","\u7ebf\u6bb5\u6811","\u4e8c\u5206\u67e5\u627e","\u5206\u6cbb\u7b97\u6cd5"]},{"location":"coding/leetcode/3270/","title":"3270. \u200b\u6c42\u200b\u51fa\u200b\u6570\u5b57\u200b\u7b54\u6848","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/3270/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e09\u4e2a\u200b \u200b\u6b63\u200b \u200b\u6574\u6570\u200b <code>num1</code> <code>\uff0cnum2</code> \u200b\u548c\u200b <code>num3</code> \u3002</p> <p>\u200b\u6570\u5b57\u200b <code>num1</code> \uff0c<code>num2</code> \u200b\u548c\u200b <code>num3</code> \u200b\u7684\u200b\u6570\u5b57\u200b\u7b54\u6848\u200b <code>key</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u56db\u4f4d\u6570\u200b\uff0c\u200b\u5b9a\u4e49\u200b\u5982\u4e0b\u200b\uff1a</p> <ul> <li>\u200b\u4e00\u200b\u5f00\u59cb\u200b\uff0c\u200b\u5982\u679c\u200b\u6709\u200b\u6570\u5b57\u200b \u200b\u5c11\u4e8e\u200b \u200b\u56db\u4f4d\u6570\u200b\uff0c\u200b\u7ed9\u200b\u5b83\u200b\u8865\u200b \u200b\u524d\u5bfc\u200b 0 \u3002</li> <li>\u200b\u7b54\u6848\u200b <code>key</code> \u200b\u7684\u200b\u7b2c\u200b <code>i</code> \u200b\u4e2a\u200b\u6570\u4f4d\u200b\uff08<code>1 &lt;= i &lt;= 4</code>\uff09\u200b\u4e3a\u200b <code>num1</code> <code>\uff0cnum2</code> \u200b\u548c\u200b <code>num3</code> \u200b\u7b2c\u200b <code>i</code> \u200b\u4e2a\u200b\u6570\u4f4d\u200b\u4e2d\u200b\u7684\u200b \u200b\u6700\u5c0f\u200b \u200b\u503c\u200b\u3002</li> </ul> <p>\u200b\u8bf7\u200b\u4f60\u200b\u8fd4\u56de\u200b\u4e09\u4e2a\u200b\u6570\u5b57\u200b \u200b\u6ca1\u6709\u200b \u200b\u524d\u5bfc\u200b 0 \u200b\u7684\u200b\u6570\u5b57\u200b\u7b54\u6848\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>num1 = 1, num2 = 10, num3 = 1000</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>0</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u8865\u200b\u524d\u5bfc\u200b 0 \u200b\u540e\u200b\uff0c<code>num1</code> \u200b\u53d8\u4e3a\u200b <code>\"0001\"</code> \uff0c<code>num2</code> \u200b\u53d8\u4e3a\u200b <code>\"0010\"</code> \uff0c<code>num3</code> \u200b\u4fdd\u6301\u200b\u4e0d\u53d8\u200b\uff0c\u200b\u4e3a\u200b <code>\"1000\"</code>\u3002</p> <p>\u200b\u6570\u5b57\u200b\u7b54\u6848\u200b <code>key</code> \u200b\u7684\u200b\u7b2c\u200b <code>1</code> \u200b\u4e2a\u200b\u6570\u4f4d\u200b\u4e3a\u200b <code>min(0, 0, 1)</code> \u3002 \u200b\u6570\u5b57\u200b\u7b54\u6848\u200b <code>key</code> \u200b\u7684\u200b\u7b2c\u200b <code>2</code> \u200b\u4e2a\u200b\u6570\u4f4d\u200b\u4e3a\u200b <code>min(0, 0, 0)</code> \u3002 \u200b\u6570\u5b57\u200b\u7b54\u6848\u200b <code>key</code> \u200b\u7684\u200b\u7b2c\u200b <code>3</code> \u200b\u4e2a\u200b\u6570\u4f4d\u200b\u4e3a\u200b <code>min(0, 1, 0)</code> \u3002 \u200b\u6570\u5b57\u200b\u7b54\u6848\u200b <code>key</code> \u200b\u7684\u200b\u7b2c\u200b <code>4</code> \u200b\u4e2a\u200b\u6570\u4f4d\u200b\u4e3a\u200b <code>min(1, 0, 0)</code> \u3002 \u200b\u6240\u4ee5\u200b\u6570\u5b57\u200b\u7b54\u6848\u200b\u4e3a\u200b <code>\"0000\"</code> \uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b 0 \u3002</p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a <code>num1 = 987, num2 = 879, num3 = 798</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>777</code></p> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>num1 = 1, num2 = 2, num3 = 3</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>1</code></p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= num1, num2, num3 &lt;= 9999</code></li> </ul> <p>Reference</p>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/3270/#_2","title":"\u9898\u89e3","text":"<pre><code>class Solution:\n    def generateKey(self, num1: int, num2: int, num3: int) -&gt; int:\n        div, result, nums = 1000, 0, [num1, num2, num3]\n        for div in [10 ** _ for _ in range(3, -1, -1)]:\n            xs, nums = zip(*[divmod(_, div) for _ in nums])\n            result = result * 10 + min(xs)\n        return result\n</code></pre>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/3280/","title":"3280. \u200b\u5c06\u200b\u65e5\u671f\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u4e8c\u8fdb\u5236\u200b\u8868\u793a","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/3280/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b <code>date</code>\uff0c\u200b\u5b83\u200b\u7684\u200b\u683c\u5f0f\u200b\u4e3a\u200b <code>yyyy-mm-dd</code>\uff0c\u200b\u8868\u793a\u200b\u4e00\u4e2a\u200b\u516c\u5386\u200b\u65e5\u671f\u200b\u3002</p> <p><code>date</code> \u200b\u53ef\u4ee5\u200b\u91cd\u5199\u200b\u4e3a\u200b\u4e8c\u8fdb\u5236\u200b\u8868\u793a\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u5c06\u200b\u5e74\u200b\u3001\u200b\u6708\u200b\u3001\u200b\u65e5\u200b\u5206\u522b\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u5bf9\u5e94\u200b\u7684\u200b\u4e8c\u8fdb\u5236\u200b\u8868\u793a\u200b\uff08\u200b\u4e0d\u5e26\u200b\u524d\u5bfc\u200b\u96f6\u200b\uff09\u200b\u5e76\u200b\u9075\u5faa\u200b <code>year-month-day</code> \u200b\u7684\u200b\u683c\u5f0f\u200b\u3002</p> <p>\u200b\u8fd4\u56de\u200b <code>date</code> \u200b\u7684\u200b \u200b\u4e8c\u8fdb\u5236\u200b \u200b\u8868\u793a\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a <code>date = \"2080-02-29\"</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a <code>\"100000100000-10-11101\"</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <pre><code>100000100000, 10 \u200b\u548c\u200b 11101 \u200b\u5206\u522b\u200b\u662f\u200b 2080, 02 \u200b\u548c\u200b 29 \u200b\u7684\u200b\u4e8c\u8fdb\u5236\u200b\u8868\u793a\u200b\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a <code>date = \"1900-01-01\"</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a <code>\"11101101100-1-1\"</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <pre><code>11101101100, 1 \u200b\u548c\u200b 1 \u200b\u5206\u522b\u200b\u662f\u200b 1900, 1 \u200b\u548c\u200b 1 \u200b\u7684\u200b\u4e8c\u8fdb\u5236\u200b\u8868\u793a\u200b\u3002\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>date.length == 10</code></li> <li><code>date[4] == date[7] == '-'</code>\uff0c\u200b\u5176\u4f59\u200b\u7684\u200b <code>date[i]</code> \u200b\u90fd\u200b\u662f\u200b\u6570\u5b57\u200b\u3002</li> <li>\u200b\u8f93\u5165\u200b\u4fdd\u8bc1\u200b <code>date</code> \u200b\u4ee3\u8868\u200b\u4e00\u4e2a\u200b\u6709\u6548\u200b\u7684\u200b\u516c\u5386\u200b\u65e5\u671f\u200b\uff0c\u200b\u65e5\u671f\u200b\u8303\u56f4\u200b\u4ece\u200b 1900 \u200b\u5e74\u200b 1 \u200b\u6708\u200b 1 \u200b\u65e5\u5230\u200b 2100 \u200b\u5e74\u200b 12 \u200b\u6708\u200b 31 \u200b\u65e5\u200b\uff08\u200b\u5305\u62ec\u200b\u8fd9\u200b\u4e24\u5929\u200b\uff09\u3002</li> </ul> <p>Reference</p>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/3280/#_2","title":"\u9898\u89e3","text":"<pre><code>import datetime\nimport time\n\nclass Solution:\n    def convertDateToBinary(self, date: str) -&gt; str:\n        return '{0:b}-{1:b}-{2:b}'.format(\n            *time.strptime(date, '%Y-%m-%d')\n        )\n</code></pre> <p>\u200b\u6216\u8005\u200b\u7528\u200b<code>split()</code>\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u518d\u7528\u200b<code>int()</code>\u200b\u51fd\u6570\u200b\u8f6c\u6362\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u3002</p>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/3287/","title":"3287. \u200b\u6c42\u200b\u51fa\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u6700\u5927\u200b\u5e8f\u5217\u200b\u503c","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u56f0\u96be\u200b</p>","tags":["\u4f4d\u8fd0\u7b97","\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/3287/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b <code>nums</code> \u200b\u548c\u200b\u4e00\u4e2a\u200b \u200b\u6b63\u200b \u200b\u6574\u6570\u200b <code>k</code> \u3002</p> <p>\u200b\u5b9a\u4e49\u200b\u957f\u5ea6\u200b\u4e3a\u200b <code>2 * x</code> \u200b\u7684\u200b\u5e8f\u5217\u200b <code>seq</code> \u200b\u7684\u200b \u200b\u503c\u200b \u200b\u4e3a\u200b\uff1a</p> <ul> <li><code>(seq[0] OR seq[1] OR ... OR seq[x - 1]) XOR (seq[x] OR seq[x + 1] OR ... OR seq[2 * x - 1])</code>.</li> </ul> <p>\u200b\u8bf7\u200b\u4f60\u200b\u6c42\u51fa\u200b <code>nums</code> \u200b\u4e2d\u200b\u6240\u6709\u200b\u957f\u5ea6\u200b\u4e3a\u200b <code>2 * k</code> \u200b\u7684\u200b \u200b\u5b50\u200b\u5e8f\u5217\u200b<sup>1</sup> \u200b\u7684\u200b \u200b\u6700\u5927\u503c\u200b \u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>nums = [2,6,7], k = 1</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>5</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u5b50\u200b\u5e8f\u5217\u200b <code>[2, 7]</code> \u200b\u7684\u200b\u503c\u200b\u6700\u5927\u200b\uff0c\u200b\u4e3a\u200b <code>2 XOR 7 = 5</code> \u3002</p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>nums = [4,2,5,6,7], k = 2</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>2</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u5b50\u200b\u5e8f\u5217\u200b <code>[4, 5, 6, 7]</code> \u200b\u7684\u200b\u503c\u200b\u6700\u5927\u200b\uff0c\u200b\u4e3a\u200b <code>(4 OR 5) XOR (6 OR 7) = 2</code> \u3002</p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>2 &lt;= nums.length &lt;= 400</code></li> <li><code>1 &lt;= nums[i] &lt; 2^7</code></li> <li><code>1 &lt;= k &lt;= nums.length / 2</code></li> </ul> <p>Reference</p>","tags":["\u4f4d\u8fd0\u7b97","\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/3287/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u8868\u200b<code>dp_left[i][j] = set()</code>\u200b\u5206\u522b\u200b\u5b58\u50a8\u200b\u4ece\u200b\u5f53\u524d\u200b\u4f4d\u7f6e\u200b<code>i</code>\u200b\u5f00\u59cb\u200b\uff08\u200b\u5305\u62ec\u200b\u81ea\u8eab\u200b\uff09\u200b\u5411\u524d\u200b\u9009\u53d6\u200b<code>j</code>\u200b\u4e2a\u200b\u5143\u7d20\u200b\u540e\u200b\uff0c\u200b\u5bf9\u200b\u5176\u53d6\u200b<code>or</code>\u200b\u64cd\u4f5c\u200b\u7684\u200b\u6240\u6709\u200b\u53ef\u80fd\u200b\u7ed3\u679c\u200b\u3002<code>dp_left[i][j]</code>\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4ee5\u4e0b\u200b\u65b9\u5f0f\u200b\u8ba1\u7b97\u200b\u3002</p> <ul> <li>\u200b\u9009\u62e9\u200b\u5f53\u524d\u200b\u5143\u7d20\u200b\uff0c\u200b\u5219\u200b\u8fd9\u90e8\u5206\u200b\u7684\u200b\u53ef\u80fd\u200b\u53d6\u503c\u200b\u4e3a\u200b<code>[_ | current_value for _ in dp_left[i - 1][j - 1]]</code></li> <li>\u200b\u4e0d\u200b\u9009\u62e9\u200b\u5f53\u524d\u200b\u5143\u7d20\u200b\uff0c\u200b\u5219\u200b\u8fd9\u90e8\u5206\u200b\u7684\u200b\u53ef\u80fd\u200b\u53d6\u503c\u200b\u4e3a\u200b<code>dp_left[i - 1][j]</code></li> </ul> <p>\u200b\u5c06\u200b\u8fd9\u200b\u4e24\u200b\u90e8\u5206\u200b\u5408\u5e76\u200b\uff0c\u200b\u5373\u53ef\u200b\u8ba1\u7b97\u200b\u51fa\u200b<code>dp_left[i][j]</code>\u200b\u7684\u200b\u53d6\u503c\u200b\u3002\u200b\u540c\u7406\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6309\u7167\u200b\u76f8\u4f3c\u200b\u7684\u200b\u65b9\u6cd5\u200b\u8ba1\u7b97\u200b\u4ece\u200b\u5f53\u524d\u200b\u4f4d\u7f6e\u200b<code>i</code>\u200b\u5f00\u59cb\u200b\u5411\u200b\u540e\u200b\u9009\u53d6\u200b<code>j</code>\u200b\u4e2a\u200b\u5143\u7d20\u200b\u540e\u200b\u5bf9\u200b\u5176\u53d6\u200b<code>or</code>\u200b\u64cd\u4f5c\u200b\u7684\u200b\u6240\u6709\u200b\u53ef\u80fd\u200b\u7ed3\u679c\u200b\u3002</p> <p>\u200b\u6700\u7ec8\u200b\u7ed3\u679c\u200b\u4e3a\u200b\u904d\u5386\u200b<code>[0, length - 1)</code>\uff0c\u200b\u6bd4\u8f83\u200b<code>dp_left[i][k]</code>\uff08<code>i</code>\u200b\u53ca\u200b<code>i</code>\u200b\u5de6\u4fa7\u200b\uff09\u200b\u548c\u200b<code>dp_right[i + 1][k]</code>\uff08<code>i</code>\u200b\u53f3\u4fa7\u200b\uff0c\u200b\u4e0d\u200b\u5305\u542b\u200b<code>i</code>\uff09\u200b\u4e2d\u200b\u5404\u4e2a\u200b\u53ef\u80fd\u200b\u53d6\u503c\u200b\u7684\u200b\u6700\u5927\u200b<code>xor</code>\u200b\u503c\u200b\u3002</p> <pre><code>import itertools\n\nclass Solution:\n    def buildDp(self, nums: List[int], k: int):\n        dp = [[{0}, *[set() for _ in range(k)]] for _ in nums]\n        for i, value in enumerate(nums):\n            for j in range(1, k + 1):\n                if i &gt;= 0:\n                    dp[i][j] |= dp[i - 1][j]\n                    dp[i][j] |= {_ | value for _ in dp[i - 1][j - 1]}\n        return dp\n\n    def maxValue(self, nums: List[int], k: int) -&gt; int:\n        dp_left = [_[k] for _ in self.buildDp(nums, k)]\n        dp_right = [_[k] for _ in self.buildDp(nums[::-1], k)[::-1]]\n        length = len(nums)\n        max_value = -1\n\n        for i in range(length - 1):\n            for x, y in itertools.product(dp_left[i], dp_right[i + 1]):\n                max_value = max(max_value, x ^ y)\n        return max_value\n</code></pre> <p>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u548c\u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b\u5747\u200b\u8f83\u200b\u9ad8\u200b\uff0c\u200b\u6709\u5f85\u200b\u4f18\u5316\u200b\u3002</p> <ol> <li> <p>\u200b\u5b50\u200b\u5e8f\u5217\u200b \u200b\u662f\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4ece\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\u5220\u9664\u200b\u6216\u200b\u4e0d\u200b\u5220\u9664\u200b\u67d0\u4e9b\u200b\u5143\u7d20\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u200b\u66f4\u6539\u200b\u5176\u4f59\u200b\u5143\u7d20\u200b\u7684\u200b\u987a\u5e8f\u200b\u5f97\u5230\u200b\u7684\u200b\u6570\u7ec4\u200b\u3002\u00a0\u21a9</p> </li> </ol>","tags":["\u4f4d\u8fd0\u7b97","\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/3297/","title":"3297. \u200b\u7edf\u8ba1\u200b\u91cd\u65b0\u6392\u5217\u200b\u540e\u200b\u5305\u542b\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u6570\u76ee\u200b I","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u54c8\u5e0c\u8868","\u5b57\u7b26\u4e32","\u6ed1\u52a8\u7a97\u53e3"]},{"location":"coding/leetcode/3297/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e24\u4e2a\u200b\u5b57\u7b26\u4e32\u200b <code>word1</code> \u200b\u548c\u200b <code>word2</code> \u3002</p> <p>\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b <code>x</code> \u200b\u91cd\u65b0\u6392\u5217\u200b\u540e\u200b\uff0c<code>word2</code> \u200b\u662f\u200b\u91cd\u6392\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u524d\u7f00\u200b\uff0c\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b\u79f0\u200b\u5b57\u7b26\u4e32\u200b <code>x</code> \u200b\u662f\u200b \u200b\u5408\u6cd5\u200b\u7684\u200b \u3002</p> <p>\u200b\u8bf7\u200b\u4f60\u200b\u8fd4\u56de\u200b <code>word1</code> \u200b\u4e2d\u200b \u200b\u5408\u6cd5\u200b \u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u6570\u76ee\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>word1 = \"bcca\", word2 = \"abc\"</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>1</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u552f\u4e00\u200b\u5408\u6cd5\u200b\u7684\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u662f\u200b <code>\"bcca\"</code> \uff0c\u200b\u53ef\u4ee5\u200b\u91cd\u65b0\u6392\u5217\u200b\u5f97\u5230\u200b <code>\"abcc\"</code> \uff0c<code>\"abc\"</code> \u200b\u662f\u200b\u5b83\u200b\u7684\u200b\u524d\u7f00\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>word1 = \"abcabc\", word2 = \"abc\"</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>10</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u9664\u4e86\u200b\u957f\u5ea6\u200b\u4e3a\u200b 1 \u200b\u548c\u200b 2 \u200b\u7684\u200b\u6240\u6709\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u90fd\u200b\u662f\u200b\u5408\u6cd5\u200b\u7684\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>word1 = \"abcabc\", word2 = \"aaabc\"</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>0</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <ul> <li><code>1 &lt;= word1.length &lt;= 10^5</code></li> <li><code>1 &lt;= word2.length &lt;= 10^4</code></li> <li><code>word1</code> \u200b\u548c\u200b <code>word2</code> \u200b\u90fd\u200b\u53ea\u200b\u5305\u542b\u200b\u5c0f\u5199\u200b\u82f1\u6587\u5b57\u6bcd\u200b\u3002</li> </ul> <p>Reference</p>","tags":["\u54c8\u5e0c\u8868","\u5b57\u7b26\u4e32","\u6ed1\u52a8\u7a97\u53e3"]},{"location":"coding/leetcode/3297/#_2","title":"\u9898\u89e3","text":"<p><code>word1</code>\u200b\u4e0a\u200b\u7684\u200b\u4e00\u4e2a\u200b\u533a\u95f4\u200b\u5212\u5b9a\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u5982\u679c\u200b\u8fd9\u4e2a\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u662f\u200b\u5408\u6cd5\u200b\u7684\u200b\uff0c\u200b\u90a3\u4e48\u200b\u79f0\u200b\u8fd9\u4e2a\u200b\u533a\u95f4\u200b\u662f\u200b\u5408\u6cd5\u200b\u7684\u200b\u3002\u200b\u8981\u200b\u5224\u65ad\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u5408\u6cd5\u200b\uff0c\u200b\u53ea\u200b\u9700\u200b<code>word1</code>\u200b\u5728\u200b\u8be5\u200b\u533a\u95f4\u200b\u5185\u200b\u51fa\u73b0\u200b\u7684\u200b\u5404\u4e2a\u200b\u5b57\u7b26\u200b\u6570\u91cf\u200b\u591a\u4e8e\u200b<code>word2</code>\u200b\u4e2d\u200b\u7684\u200b\u5404\u4e2a\u200b\u5b57\u7b26\u200b\u6570\u91cf\u200b\uff0c\u200b\u5373\u200b\uff1a</p> <pre><code>def check(self, word1: Dict[str, int], word2: Dict[str, int]):\n    for k, v in word2.items():\n        if word1.get(k, 0) &lt; v:\n            return False\n    return True\n</code></pre> <p>\u200b\u4f7f\u7528\u200b\u53cc\u200b\u6307\u9488\u200b\u6cd5\u200b\uff1a</p> <ul> <li>\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u533a\u95f4\u200b<code>[l:r]</code>\u200b\u8303\u56f4\u200b\u662f\u200b\u5408\u6cd5\u200b\u7684\u200b\uff0c\u200b\u90a3\u4e48\u200b\uff0c\u200b\u540e\u7eed\u200b\u7684\u200b\u6240\u6709\u200b\u533a\u95f4\u200b<code>[l: r + 1]</code>\u200b\u76f4\u5230\u200b<code>[l:]</code>\u200b\u90fd\u200b\u662f\u200b\u5408\u6cd5\u200b\u7684\u200b\u3002</li> <li>\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u533a\u95f4\u200b<code>[l:r]</code>\u200b\u8303\u56f4\u200b\u4e0d\u662f\u200b\u5408\u6cd5\u200b\u7684\u200b\uff0c\u200b\u90a3\u4e48\u200b\uff0c\u200b\u5c06\u200b<code>l</code>\u200b\u5411\u524d\u200b\u79fb\u52a8\u200b\u7684\u200b\u6240\u6709\u200b\u533a\u95f4\u200b<code>[l + 1: r]</code>\u200b\u76f4\u5230\u200b<code>[r: r]</code>\u200b\u90fd\u200b\u4e0d\u662f\u200b\u5408\u6cd5\u200b\u7684\u200b\u3002</li> </ul> <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u533a\u95f4\u200b<code>[0:0]</code>\u200b\u51fa\u53d1\u200b\uff0c\u200b\u5148\u5411\u200b\u53f3\u200b\u79fb\u52a8\u200b\u53f3\u200b\u7aef\u70b9\u200b\uff0c\u200b\u627e\u5230\u200b\u4e00\u4e2a\u200b\u5408\u6cd5\u200b\u533a\u95f4\u200b\uff0c\u200b\u4e4b\u540e\u200b\u540e\u7eed\u200b\u7684\u200b\u533a\u95f4\u200b\u5219\u200b\u5168\u90fd\u200b\u662f\u200b\u5408\u6cd5\u200b\u7684\u200b\u3002\u200b\u4e0b\u200b\u4e00\u6b65\u200b\u79fb\u52a8\u200b\u5de6\u200b\u7aef\u70b9\u200b\uff0c\u200b\u6bcf\u200b\u4e00\u6b21\u200b\u79fb\u52a8\u200b\u68c0\u67e5\u4e00\u4e0b\u200b\u5f53\u524d\u200b\u533a\u95f4\u200b\u662f\u5426\u200b\u5408\u6cd5\u200b\uff0c\u200b\u5982\u679c\u200b\u5408\u6cd5\u200b\u5219\u200b\u8bb0\u5f55\u200b\u5f53\u524d\u200b\u533a\u95f4\u200b\u548c\u200b\u540e\u7eed\u200b\u7684\u200b\u6240\u6709\u200b\u533a\u95f4\u200b\uff0c\u200b\u4e0d\u65ad\u200b\u79fb\u52a8\u200b\u76f4\u5230\u200b\u5f53\u524d\u200b\u533a\u95f4\u200b\u4e0d\u518d\u200b\u5408\u6cd5\u200b\uff0c\u200b\u6b64\u540e\u200b\u91cd\u65b0\u200b\u5f00\u59cb\u200b\u79fb\u52a8\u200b\u53f3\u200b\u7aef\u70b9\u200b\u3002</p> <pre><code>class Solution:\n    def check(self, word1: Dict[str, int], word2: Dict[str, int]):\n        for k, v in word2.items():\n            if word1.get(k, 0) &lt; v:\n                return False\n        return True\n\n    def validSubstringCount(self, word1: str, word2: str) -&gt; int:\n        l, r, current = 0, 0, {}\n        length, word2_counter = len(word1), {}\n        for char in word2:\n            word2_counter[char] = word2_counter.get(char, 0) + 1\n\n        result = 0\n        while r &lt; length:\n            while r &lt; length and not self.check(current, word2_counter):\n                current[word1[r]] = current.get(word1[r], 0) + 1\n                r += 1\n\n            while self.check(current, word2_counter):\n                result += length - r + 1\n                current[word1[l]] -= 1\n                l += 1\n\n        return result\n</code></pre> <p>\u200b\u4ee5\u4e0a\u200b\u7684\u200b\u4ee3\u7801\u200b\u5728\u200b\u6bcf\u6b21\u200b\u5224\u65ad\u200b\u5408\u6cd5\u200b\u65f6\u200b\u90fd\u200b\u9700\u8981\u200b\u904d\u5386\u200b\u4e00\u904d\u200b\u6240\u6709\u200b\u51fa\u73b0\u200b\u7684\u200b\u5b57\u7b26\u200b\uff0c\u200b\u5f00\u9500\u200b\u8f83\u5927\u200b\u3002\u200b\u5b9e\u9645\u4e0a\u200b\u6211\u4eec\u200b\u53ea\u200b\u9700\u8981\u200b\u6839\u636e\u200b\u7528\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b<code>non_zero</code>\u200b\u8bb0\u5f55\u200b<code>word2</code>\u200b\u91cc\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u591a\u4e8e\u200b<code>word1</code>\u200b\u4e2d\u200b\u7684\u200b\u5b57\u7b26\u200b\u6570\u91cf\u200b\u3002\u200b\u6bcf\u6b21\u200b\u79fb\u52a8\u200b\u533a\u95f4\u200b\u7684\u200b\u65f6\u5019\u200b\u4ec5\u4ec5\u200b\u66f4\u65b0\u200b<code>non_zero</code>\u200b\u5373\u53ef\u200b\u3002</p> <pre><code>class Solution:\n    def validSubstringCount(self, word1: str, word2: str) -&gt; int:\n        l, r = 0, 0\n        length, word2_counter = len(word1), {}\n        for char in word2:\n            word2_counter[char] = word2_counter.get(char, 0) + 1\n        non_zeros = len(word2_counter)\n\n        result = 0\n        while r &lt; length:\n            while r &lt; length and non_zeros:\n                if word1[r] in word2_counter:\n                    word2_counter[word1[r]] -= 1\n                    if word2_counter[word1[r]] == 0:\n                        non_zeros -= 1\n                r += 1\n\n            while not non_zeros:\n                result += length - r + 1\n                if word1[l] in word2_counter:\n                    word2_counter[word1[l]] += 1\n                    if word2_counter[word1[l]] == 1:\n                        non_zeros += 1\n                l += 1\n\n        return result\n</code></pre>","tags":["\u54c8\u5e0c\u8868","\u5b57\u7b26\u4e32","\u6ed1\u52a8\u7a97\u53e3"]},{"location":"coding/leetcode/3298/","title":"3298. \u200b\u7edf\u8ba1\u200b\u91cd\u65b0\u6392\u5217\u200b\u540e\u200b\u5305\u542b\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u6570\u76ee\u200b II","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u56f0\u96be\u200b</p>","tags":["\u54c8\u5e0c\u8868","\u5b57\u7b26\u4e32","\u6ed1\u52a8\u7a97\u53e3"]},{"location":"coding/leetcode/3298/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e24\u4e2a\u200b\u5b57\u7b26\u4e32\u200b <code>word1</code> \u200b\u548c\u200b <code>word2</code> \u3002</p> <p>\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b <code>x</code> \u200b\u91cd\u65b0\u6392\u5217\u200b\u540e\u200b\uff0c<code>word2</code> \u200b\u662f\u200b\u91cd\u6392\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u524d\u7f00\u200b\uff0c\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b\u79f0\u200b\u5b57\u7b26\u4e32\u200b <code>x</code> \u200b\u662f\u200b \u200b\u5408\u6cd5\u200b\u7684\u200b \u3002</p> <p>\u200b\u8bf7\u200b\u4f60\u200b\u8fd4\u56de\u200b <code>word1</code> \u200b\u4e2d\u200b \u200b\u5408\u6cd5\u200b \u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u6570\u76ee\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b \uff0c\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\u4e2d\u200b\u7684\u200b\u5185\u5b58\u200b\u9650\u5236\u200b\u6bd4\u200b\u5176\u4ed6\u200b\u9898\u76ee\u200b\u8981\u200b \u200b\u5c0f\u200b \uff0c\u200b\u6240\u4ee5\u200b\u4f60\u200b \u200b\u5fc5\u987b\u200b \u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u7ebf\u6027\u200b\u590d\u6742\u5ea6\u200b\u7684\u200b\u89e3\u6cd5\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>word1 = \"bcca\", word2 = \"abc\"</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>1</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u552f\u4e00\u200b\u5408\u6cd5\u200b\u7684\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u662f\u200b <code>\"bcca\"</code> \uff0c\u200b\u53ef\u4ee5\u200b\u91cd\u65b0\u6392\u5217\u200b\u5f97\u5230\u200b <code>\"abcc\"</code> \uff0c<code>\"abc\"</code> \u200b\u662f\u200b\u5b83\u200b\u7684\u200b\u524d\u7f00\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>word1 = \"abcabc\", word2 = \"abc\"</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>10</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u9664\u4e86\u200b\u957f\u5ea6\u200b\u4e3a\u200b 1 \u200b\u548c\u200b 2 \u200b\u7684\u200b\u6240\u6709\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u90fd\u200b\u662f\u200b\u5408\u6cd5\u200b\u7684\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>word1 = \"abcabc\", word2 = \"aaabc\"</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>0</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a</p> <ul> <li><code>1 &lt;= word1.length &lt;= 10^5</code></li> <li><code>1 &lt;= word2.length &lt;= 10^4</code></li> <li><code>word1</code> \u200b\u548c\u200b <code>word2</code> \u200b\u90fd\u200b\u53ea\u200b\u5305\u542b\u200b\u5c0f\u5199\u200b\u82f1\u6587\u5b57\u6bcd\u200b\u3002</li> </ul> <p>Reference</p>","tags":["\u54c8\u5e0c\u8868","\u5b57\u7b26\u4e32","\u6ed1\u52a8\u7a97\u53e3"]},{"location":"coding/leetcode/3298/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u53c2\u89c1\u200b3297. \u200b\u7edf\u8ba1\u200b\u91cd\u65b0\u6392\u5217\u200b\u540e\u200b\u5305\u542b\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u6570\u76ee\u200b I</p>","tags":["\u54c8\u5e0c\u8868","\u5b57\u7b26\u4e32","\u6ed1\u52a8\u7a97\u53e3"]},{"location":"coding/leetcode/33/","title":"33. \u200b\u641c\u7d22\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/33/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b <code>nums</code> \u200b\u6309\u200b\u5347\u5e8f\u200b\u6392\u5217\u200b\uff0c\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b \u200b\u4e92\u4e0d\u200b\u76f8\u540c\u200b \u3002</p> <p><code>\u200b\u5728\u200b\u4f20\u9012\u200b\u7ed9\u200b\u51fd\u6570\u200b\u4e4b\u524d\u200b\uff0cnums</code> \u200b\u5728\u200b\u9884\u5148\u200b\u672a\u77e5\u200b\u7684\u200b\u67d0\u4e2a\u200b\u4e0b\u6807\u200b <code>k</code>\uff08<code>0 &lt;= k &lt; nums.length</code>\uff09\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u4e86\u200b \u200b\u65cb\u8f6c\u200b\uff0c\u200b\u4f7f\u200b\u6570\u7ec4\u200b\u53d8\u4e3a\u200b <code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code>\uff08\u200b\u4e0b\u6807\u200b \u200b\u4ece\u200b 0 \u200b\u5f00\u59cb\u200b \u200b\u8ba1\u6570\u200b\uff09\u3002\u200b\u4f8b\u5982\u200b\uff0c <code>[0,1,2,4,5,6,7]</code> \u200b\u5728\u200b\u4e0b\u6807\u200b <code>3</code> \u200b\u5904\u7ecf\u200b\u65cb\u8f6c\u200b\u540e\u200b\u53ef\u80fd\u200b\u53d8\u4e3a\u200b <code>[4,5,6,7,0,1,2]</code> \u3002</p> <p>\u200b\u7ed9\u200b\u4f60\u200b \u200b\u65cb\u8f6c\u200b\u540e\u200b \u200b\u7684\u200b\u6570\u7ec4\u200b <code>nums</code> \u200b\u548c\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b <code>target</code> \uff0c\u200b\u5982\u679c\u200b <code>nums</code> \u200b\u4e2d\u200b\u5b58\u5728\u200b\u8fd9\u4e2a\u200b\u76ee\u6807\u503c\u200b <code>target</code> \uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b\u5b83\u200b\u7684\u200b\u4e0b\u6807\u200b\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b <code>-1</code> \u3002</p> <p>\u200b\u4f60\u200b\u5fc5\u987b\u200b\u8bbe\u8ba1\u200b\u4e00\u4e2a\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b <code>O(log n)</code> \u200b\u7684\u200b\u7b97\u6cd5\u200b\u89e3\u51b3\u200b\u6b64\u200b\u95ee\u9898\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>nums = [4,5,6,7,0,1,2], target = 0</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>4</code></p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>nums = [4,5,6,7,0,1,2], target = 3</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>-1</code></p> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>nums = [1], target = 0</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>-1</code></p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 5000</code></li> <li><code>-10^4 &lt;= nums[i] &lt;= 10^4</code></li> <li><code>nums</code> \u200b\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u503c\u200b\u90fd\u200b \u200b\u72ec\u4e00\u65e0\u4e8c\u200b</li> <li>\u200b\u9898\u76ee\u200b\u6570\u636e\u200b\u4fdd\u8bc1\u200b <code>nums</code> \u200b\u5728\u200b\u9884\u5148\u200b\u672a\u77e5\u200b\u7684\u200b\u67d0\u4e2a\u200b\u4e0b\u6807\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u4e86\u200b\u65cb\u8f6c\u200b</li> <li><code>-10^4 &lt;= target &lt;= 10^4</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/33/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u53c2\u89c1\u200b 81. \u200b\u641c\u7d22\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b II\u3002</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/341/","title":"341. \u200b\u6241\u5e73\u5316\u200b\u5d4c\u5957\u200b\u5217\u8868\u200b\u8fed\u4ee3\u200b\u5668","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6808","\u8bbe\u8ba1"]},{"location":"coding/leetcode/341/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u5d4c\u5957\u200b\u7684\u200b\u6574\u578b\u200b\u5217\u8868\u200b\u3002\u200b\u8bf7\u200b\u4f60\u200b\u8bbe\u8ba1\u200b\u4e00\u4e2a\u200b\u8fed\u4ee3\u200b\u5668\u200b\uff0c\u200b\u4f7f\u200b\u5176\u200b\u80fd\u591f\u200b\u904d\u5386\u200b\u8fd9\u4e2a\u200b\u6574\u578b\u200b\u5217\u8868\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u6574\u6570\u200b\u3002</p> <p>\u200b\u5217\u8868\u200b\u4e2d\u200b\u7684\u200b\u6bcf\u4e00\u9879\u200b\u6216\u8005\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\uff0c\u200b\u6216\u8005\u200b\u662f\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5217\u8868\u200b\u3002\u200b\u5176\u4e2d\u200b\u5217\u8868\u200b\u7684\u200b\u5143\u7d20\u200b\u4e5f\u200b\u53ef\u80fd\u200b\u662f\u200b\u6574\u6570\u200b\u6216\u662f\u200b\u5176\u4ed6\u200b\u5217\u8868\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: [[1,1],2,[1,1]]\n\u200b\u8f93\u51fa\u200b: [1,1,2,1,1]\n\u200b\u89e3\u91ca\u200b: \u200b\u901a\u8fc7\u200b\u91cd\u590d\u200b\u8c03\u7528\u200b\u00a0next \u200b\u76f4\u5230\u200b\u00a0hasNext \u200b\u8fd4\u56de\u200b false\uff0cnext\u00a0\u200b\u8fd4\u56de\u200b\u7684\u200b\u5143\u7d20\u200b\u7684\u200b\u987a\u5e8f\u200b\u5e94\u8be5\u200b\u662f\u200b: [1,1,2,1,1]\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: [1,[4,[6]]]\n\u200b\u8f93\u51fa\u200b: [1,4,6]\n\u200b\u89e3\u91ca\u200b: \u200b\u901a\u8fc7\u200b\u91cd\u590d\u200b\u8c03\u7528\u200b\u00a0next\u00a0\u200b\u76f4\u5230\u200b\u00a0hasNext \u200b\u8fd4\u56de\u200b false\uff0cnext\u00a0\u200b\u8fd4\u56de\u200b\u7684\u200b\u5143\u7d20\u200b\u7684\u200b\u987a\u5e8f\u200b\u5e94\u8be5\u200b\u662f\u200b: [1,4,6]\u3002\n</code></pre> <p>Reference</p>","tags":["\u6808","\u8bbe\u8ba1"]},{"location":"coding/leetcode/341/#_2","title":"\u9898\u89e3","text":"<p>C\u200b\u8bed\u8a00\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5d4c\u5957\u200b\u5217\u8868\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u94fe\u8868\u200b\uff0c\u200b\u7136\u540e\u200b\u5bf9\u200b\u94fe\u8868\u200b\u8fdb\u884c\u200b\u8fed\u4ee3\u200b\uff1a</p> <pre><code>/**\n * *********************************************************************\n * // This is the interface that allows for creating nested lists.\n * // You should not implement it, or speculate about its implementation\n * *********************************************************************\n *\n * // Return true if this NestedInteger holds a single integer, rather than a nested list.\n * bool NestedIntegerIsInteger(struct NestedInteger *);\n *\n * // Return the single integer that this NestedInteger holds, if it holds a single integer\n * // The result is undefined if this NestedInteger holds a nested list\n * int NestedIntegerGetInteger(struct NestedInteger *);\n *\n * // Return the nested list that this NestedInteger holds, if it holds a nested list\n * // The result is undefined if this NestedInteger holds a single integer\n * struct NestedInteger **NestedIntegerGetList(struct NestedInteger *);\n *\n * // Return the nested list's size that this NestedInteger holds, if it holds a nested list\n * // The result is undefined if this NestedInteger holds a single integer\n * int NestedIntegerGetListSize(struct NestedInteger *);\n * };\n */\nstruct NestedIterator {\n    struct ListNode *list;\n    struct ListNode *current;\n};\n\nstruct ListNode *getNode(int val, struct ListNode *next)\n{\n    struct ListNode *ret = (struct ListNode *)malloc(sizeof(struct ListNode));\n    ret-&gt;val = val;\n    ret-&gt;next = next;\n    return ret;\n}\n\nstruct ListNode *toList(struct NestedInteger *src, struct ListNode **tail)\n{\n    if (NestedIntegerIsInteger(src))\n    {\n        struct ListNode *ret = getNode(NestedIntegerGetInteger(src), NULL);\n        if (tail)\n            *tail = ret;\n        return ret;\n    }\n    else\n    {\n        struct NestedInteger **content = NestedIntegerGetList(src);\n        struct ListNode *ret = NULL, *temp = NULL;\n        int i = 0, size = NestedIntegerGetListSize(src);\n        for (i = 0; i &lt; size; i++)\n        {\n            if (!ret)\n                ret = toList(content[i], &amp;temp);\n            else\n                (*tail)-&gt;next = toList(content[i], &amp;temp);\n            if (temp)\n                *tail = temp;\n        }\n        return ret;\n    }\n}\n\nstruct NestedIterator *nestedIterCreate(struct NestedInteger** nestedList, int nestedListSize) {\n    struct NestedIterator *ret = (struct NestedIterator *)malloc(sizeof(struct NestedIterator));\n    ret-&gt;list = NULL;\n    ret-&gt;current = NULL;\n    struct ListNode *temp = NULL;\n    for (int i = 0; i &lt; nestedListSize; i++)\n    {\n        if (!ret-&gt;list)\n            ret-&gt;list = toList(nestedList[i], &amp;temp);\n        else\n            ret-&gt;current-&gt;next = toList(nestedList[i], &amp;temp);\n        ret-&gt;current = temp;\n    }\n    ret-&gt;current = ret-&gt;list;\n    return ret;\n}\n\nbool nestedIterHasNext(struct NestedIterator *iter) {\n    return iter-&gt;current;\n}\n\nint nestedIterNext(struct NestedIterator *iter) {\n    int ret = iter-&gt;current-&gt;val;\n    iter-&gt;current = iter-&gt;current-&gt;next;\n    return ret;\n}\n\n/** Deallocates memory previously allocated for the iterator */\nvoid nestedIterFree(struct NestedIterator *iter) {\n    while (iter-&gt;list)\n    {\n        iter-&gt;current = iter-&gt;list-&gt;next;\n        free(iter-&gt;list);\n        iter-&gt;list = iter-&gt;current;\n    }\n    free(iter);\n}\n\n/**\n * Your NestedIterator will be called like this:\n * struct NestedIterator *i = nestedIterCreate(nestedList, nestedListSize);\n * while (nestedIterHasNext(i)) printf(\"%d\\n\", nestedIterNext(i));\n * nestedIterFree(i);\n */\n</code></pre> <p>Python\u200b\u8bed\u8a00\u200b\u652f\u6301\u200b<code>yield</code>\u200b\u8bed\u53e5\u200b\u4e0e\u200b<code>yield from</code>\u200b\u8bed\u53e5\u200b\uff0c\u200b\u56e0\u6b64\u200b\u76f4\u63a5\u200b\u8fed\u4ee3\u200b\u751f\u6210\u5668\u200b\u5373\u53ef\u200b</p> <pre><code># \"\"\"\n# This is the interface that allows for creating nested lists.\n# You should not implement it, or speculate about its implementation\n# \"\"\"\n#class NestedInteger:\n#    def isInteger(self) -&gt; bool:\n#        \"\"\"\n#        @return True if this NestedInteger holds a single integer, rather than a nested list.\n#        \"\"\"\n#\n#    def getInteger(self) -&gt; int:\n#        \"\"\"\n#        @return the single integer that this NestedInteger holds, if it holds a single integer\n#        Return None if this NestedInteger holds a nested list\n#        \"\"\"\n#\n#    def getList(self) -&gt; [NestedInteger]:\n#        \"\"\"\n#        @return the nested list that this NestedInteger holds, if it holds a nested list\n#        Return None if this NestedInteger holds a single integer\n#        \"\"\"\n\ndef listIter(nestNode):\n    for node in nestNode:\n        if node.isInteger():\n            yield node.getInteger()\n        else:\n            yield from listIter(node.getList())\n\nclass NestedIterator:\n    def __init__(self, nestedList):\n        self.nextvalue = 0\n        self.iterator = listIter(nestedList)\n\n    def next(self):\n        return self.nextvalue\n\n    def hasNext(self):\n        try:\n            self.nextvalue = next(self.iterator)\n        except StopIteration:\n            return False\n        return True\n\n# Your NestedIterator object will be instantiated and called as such:\n# i, v = NestedIterator(nestedList), []\n# while i.hasNext(): v.append(i.next())\n</code></pre>","tags":["\u6808","\u8bbe\u8ba1"]},{"location":"coding/leetcode/344/","title":"344. \u200b\u53cd\u8f6c\u200b\u5b57\u7b26\u4e32","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/344/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7f16\u5199\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u5176\u200b\u4f5c\u7528\u200b\u662f\u200b\u5c06\u200b\u8f93\u5165\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u53cd\u8f6c\u200b\u8fc7\u6765\u200b\u3002\u200b\u8f93\u5165\u200b\u5b57\u7b26\u4e32\u200b\u4ee5\u200b\u5b57\u7b26\u200b\u6570\u7ec4\u200b char[] \u200b\u7684\u200b\u5f62\u5f0f\u200b\u7ed9\u51fa\u200b\u3002</p> <p>\u200b\u4e0d\u8981\u200b\u7ed9\u200b\u53e6\u5916\u200b\u7684\u200b\u6570\u7ec4\u200b\u5206\u914d\u200b\u989d\u5916\u200b\u7684\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u4f60\u200b\u5fc5\u987b\u200b\u539f\u5730\u200b\u4fee\u6539\u200b\u8f93\u5165\u200b\u6570\u7ec4\u200b\u3001\u200b\u4f7f\u7528\u200b O(1) \u200b\u7684\u200b\u989d\u5916\u200b\u7a7a\u95f4\u200b\u89e3\u51b3\u200b\u8fd9\u4e00\u200b\u95ee\u9898\u200b\u3002</p> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5047\u8bbe\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u5b57\u7b26\u200b\u90fd\u200b\u662f\u200b ASCII \u200b\u7801\u8868\u200b\u4e2d\u200b\u7684\u200b\u53ef\u200b\u6253\u5370\u200b\u5b57\u7b26\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a <pre><code>\u200b\u8f93\u5165\u200b\uff1a[\"h\",\"e\",\"l\",\"l\",\"o\"]\n\u200b\u8f93\u51fa\u200b\uff1a[\"o\",\"l\",\"l\",\"e\",\"h\"]\n</code></pre> \u200b\u793a\u4f8b\u200b 2\uff1a <pre><code>\u200b\u8f93\u5165\u200b\uff1a[\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n\u200b\u8f93\u51fa\u200b\uff1a[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n</code></pre></p> <p>Reference</p>","tags":["\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/344/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u5206\u522b\u200b\u4f7f\u7528\u200b\u4e24\u4e2a\u200b\u6307\u9488\u200b\u6307\u5411\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5f00\u5934\u200b\u4e0e\u200b\u7ed3\u5c3e\u200b\uff0c\u200b\u4ea4\u6362\u200b\u4e24\u8005\u200b\u7684\u200b\u503c\u200b\u540e\u200b\u6536\u7f29\u200b\u6307\u9488\u200b\u3002\uff08\u200b\u5de6\u200b\u6307\u9488\u200b\u53f3\u79fb\u200b\uff0c\u200b\u53f3\u200b\u6307\u9488\u200b\u5de6\u79fb\u200b\uff09</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>void reverseString(char* s, int sSize)\n{\n    if (sSize &lt;= 1)\n        return;\n    char temp = 0;\n    temp = *s;\n    *s = s[sSize - 1];\n    s[sSize - 1] = temp;\n    reverseString(s + 1, sSize - 2);\n}\n</code></pre>","tags":["\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/35/","title":"35. \u200b\u641c\u7d22\u200b\u63d2\u5165\u200b\u4f4d\u7f6e","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/35/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b\u548c\u200b\u4e00\u4e2a\u200b\u76ee\u6807\u503c\u200b\uff0c\u200b\u5728\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u627e\u5230\u200b\u76ee\u6807\u503c\u200b\uff0c\u200b\u5e76\u200b\u8fd4\u56de\u200b\u5176\u200b\u7d22\u5f15\u200b\u3002\u200b\u5982\u679c\u200b\u76ee\u6807\u503c\u200b\u4e0d\u200b\u5b58\u5728\u200b\u4e8e\u200b\u6570\u7ec4\u200b\u4e2d\u200b\uff0c\u200b\u8fd4\u56de\u200b\u5b83\u200b\u5c06\u200b\u4f1a\u200b\u88ab\u200b\u6309\u200b\u987a\u5e8f\u200b\u63d2\u5165\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u3002</p> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5047\u8bbe\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u65e0\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1:</p> <pre><code>\u200b\u8f93\u5165\u200b: [1,3,5,6], 5\n\u200b\u8f93\u51fa\u200b: 2\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a02:</p> <pre><code>\u200b\u8f93\u5165\u200b: [1,3,5,6], 2\n\u200b\u8f93\u51fa\u200b: 1\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 3:</p> <pre><code>\u200b\u8f93\u5165\u200b: [1,3,5,6], 7\n\u200b\u8f93\u51fa\u200b: 4\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 4:</p> <pre><code>\u200b\u8f93\u5165\u200b: [1,3,5,6], 0\n\u200b\u8f93\u51fa\u200b: 0\n</code></pre> <p>Reference</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/35/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4f7f\u7528\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u3002</p> <p>\u200b\u8bbe\u200b\u6570\u5217\u200b\\(\\{a_i\\}\\)\u200b\u4e3a\u200b\u5347\u5e8f\u200b\u6570\u5217\u200b\uff0c\u200b\u76ee\u6807\u503c\u200b\\(b\\)\u200b\u7684\u200b\u63d2\u5165\u200b\u4f4d\u7f6e\u200b\\(j\\)\u200b\u6ee1\u8db3\u200b\uff1a</p> <ul> <li>\\(b \\leq a_j\\)</li> <li>\\(b &gt; a_{j - 1}\\)</li> </ul> <p>\u200b\u6ce8\u610f\u200b\u672c\u9898\u200b\u8981\u6c42\u200b\u7684\u200b\u6570\u636e\u200b\u4e0e\u200b\u666e\u901a\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u7684\u200b\u610f\u4e49\u200b\u4e0d\u540c\u200b\u3002</p> <ul> <li>\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u8fd4\u56de\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u4e0d\u200b\u5927\u4e8e\u200b\u76ee\u6807\u503c\u200b\u7684\u200b\u5143\u7d20\u200b\u4e0b\u6807\u200b\u3002</li> <li>\u200b\u672c\u9898\u200b\u8981\u6c42\u200b\u8fd4\u56de\u200b\u7b2c\u4e00\u4e2a\u200b\u4e0d\u200b\u5c0f\u4e8e\u200b\u76ee\u6807\u503c\u200b\u7684\u200b\u5143\u7d20\u200b\u4e0b\u6807\u200b\u3002</li> </ul> <pre><code>int bSearch(int *nums, int lo, int hi, int target)\n{\n    int mid;\n    while (lo &lt; hi)\n    {\n        mid = (lo + hi) &gt;&gt; 1;\n        if (nums[mid] &gt;= target)\n            hi = mid;\n        else\n            lo = mid + 1;\n    }\n    return lo;\n}\n\nint searchInsert(int* nums, int numsSize, int target){\n    return bSearch(nums, 0, numsSize, target);\n}\n</code></pre> <p>\u200b\u9644\u200b\uff1a\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u4f9b\u200b\u6bd4\u8f83\u200b</p> <pre><code>int bSearch(int *nums, int lo, int hi, int target)\n{\n    int mid;\n    while (lo &lt; hi)\n    {\n        mid = (lo + hi) &gt;&gt; 1;\n        if (nums[mid] &gt; target)\n            hi = mid;\n        else\n            lo = mid + 1;\n    }\n    return lo - 1;\n}\n</code></pre> <p>\u200b\u5728\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u4e2d\u200b\uff0c\u200b\u59cb\u7ec8\u200b\u6709\u200b\uff1a</p> <ul> <li><code>nums[lo - 1]</code> \u200b\u662f\u200b\u622a\u81f3\u200b\u5f53\u524d\u200b\u5df2\u200b\u786e\u8ba4\u200b\u7684\u200b\u4e0d\u200b\u5927\u4e8e\u200b<code>target</code>\u200b\u7684\u200b\u6700\u5927\u200b\u5143\u7d20\u200b</li> <li><code>nums[hi]</code> \u200b\u662f\u200b\u622a\u81f3\u200b\u5f53\u524d\u200b\u5df2\u200b\u786e\u8ba4\u200b\u7684\u200b\u5927\u4e8e\u200b<code>target</code>\u200b\u7684\u200b\u6700\u5c0f\u200b\u5143\u7d20\u200b</li> </ul> <p>\u200b\u800c\u200b\u5728\u200b\u672c\u9898\u200b\u7b97\u6cd5\u200b\u4e2d\u200b\uff0c\u200b\u59cb\u7ec8\u200b\u6709\u200b\uff1a</p> <ul> <li><code>nums[lo - 1]</code> \u200b\u662f\u200b\u622a\u81f3\u200b\u5f53\u524d\u200b\u5df2\u200b\u786e\u8ba4\u200b\u7684\u200b\u5c0f\u4e8e\u200b<code>target</code>\u200b\u7684\u200b\u6700\u5927\u200b\u5143\u7d20\u200b</li> <li><code>nums[hi]</code> \u200b\u662f\u200b\u622a\u81f3\u200b\u5f53\u524d\u200b\u5df2\u200b\u786e\u8ba4\u200b\u7684\u200b\u4e0d\u200b\u5c0f\u4e8e\u200b<code>target</code>\u200b\u7684\u200b\u6700\u5c0f\u200b\u5143\u7d20\u200b</li> </ul> <p>\u200b\u539f\u56e0\u200b\u5728\u4e8e\u200b\uff0c\u200b\u4e24\u200b\u7b97\u6cd5\u200b\u5bf9\u200b\u7b49\u4e8e\u200b\u7684\u200b\u60c5\u51b5\u200b\u7684\u200b\u5904\u7406\u200b\u4e0d\u540c\u200b\uff0c\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u5bf9\u200b<code>nums[mid] == target</code>\u200b\u60c5\u51b5\u200b\u7684\u200b\u5904\u7406\u200b\u4e3a\u200b <code>lo = mid + 1</code>\uff0c\u200b\u4ec5\u5f53\u200b<code>nums[mid] &gt; target</code>\u200b\u65f6\u624d\u200b\u6267\u884c\u200b<code>hi = mid</code>\u3002\u200b\u7531\u4e8e\u200b<code>[lo, hi)</code>\u200b\u662f\u200b\u5f53\u524d\u200b\u5df2\u200b \u200b\u786e\u8ba4\u200b\u7684\u200b\u533a\u95f4\u200b\uff0c\u200b\u5219\u200b<code>nums[hi]</code>\u200b\u4e3a\u200b\u5df2\u200b\u786e\u8ba4\u200b\u7684\u200b\u5927\u4e8e\u200b<code>target</code>\u200b\u7684\u200b\u6700\u5c0f\u200b\u5143\u7d20\u200b\uff0c\u200b\u800c\u200b<code>nums[lo - 1]</code>\u200b\u4e3a\u200b\u4e0d\u200b\u5927\u4e8e\u200b <code>target</code>\u200b\u7684\u200b\u6700\u5927\u200b\u5143\u7d20\u200b\u3002\u200b\u800c\u200b\u672c\u9898\u200b\u7b97\u6cd5\u200b\u5bf9\u200b<code>nums[mid] == target</code>\u200b\u60c5\u51b5\u200b\u7684\u200b\u5904\u7406\u200b\u4e3a\u200b<code>hi = mid</code>\uff0c\u200b\u4ec5\u5f53\u200b <code>nums[mid] &lt; target</code>\u200b\u65f6\u624d\u200b\u6267\u884c\u200b<code>lo = mid + 1</code>\uff0c\u200b\u5219\u200b<code>nums[hi]</code>\u200b\u4e3a\u200b\u5df2\u200b\u786e\u8ba4\u200b\u7684\u200b\u4e0d\u200b\u5c0f\u4e8e\u200b<code>target</code>\u200b\u7684\u200b\u6700\u5c0f\u200b \u200b\u5143\u7d20\u200b\uff0c<code>nums[lo - 1]</code>\u200b\u4e3a\u200b\u5df2\u200b\u786e\u8ba4\u200b\u7684\u200b\u5c0f\u4e8e\u200b<code>target</code>\u200b\u7684\u200b\u6700\u5927\u200b\u5143\u7d20\u200b\u3002</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/350/","title":"350. \u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\u7684\u200b\u4ea4\u96c6\u200b II","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6392\u5e8f","\u54c8\u5e0c\u8868","\u53cc\u6307\u9488","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/350/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\uff0c\u200b\u7f16\u5199\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u6765\u200b\u8ba1\u7b97\u200b\u5b83\u4eec\u200b\u7684\u200b\u4ea4\u96c6\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums1 = [1,2,2,1], nums2 = [2,2]\n\u200b\u8f93\u51fa\u200b\uff1a[2,2]\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums1 = [4,9,5], nums2 = [9,4,9,8,4]\n\u200b\u8f93\u51fa\u200b\uff1a[4,9]\n</code></pre> <p>\u200b\u8bf4\u660e\u200b\uff1a</p> <ul> <li>\u200b\u8f93\u51fa\u200b\u7ed3\u679c\u200b\u4e2d\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u51fa\u73b0\u200b\u7684\u200b\u6b21\u6570\u200b\uff0c\u200b\u5e94\u200b\u4e0e\u200b\u5143\u7d20\u200b\u5728\u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u7684\u200b\u6700\u5c0f\u503c\u200b\u4e00\u81f4\u200b\u3002</li> <li>\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4e0d\u200b\u8003\u8651\u200b\u8f93\u51fa\u200b\u7ed3\u679c\u200b\u7684\u200b\u987a\u5e8f\u200b\u3002</li> </ul> <p>\u200b\u8fdb\u9636\u200b\uff1a</p> <ul> <li>\u200b\u5982\u679c\u200b\u7ed9\u5b9a\u200b\u7684\u200b\u6570\u7ec4\u200b\u5df2\u7ecf\u200b\u6392\u597d\u5e8f\u200b\u5462\u200b\uff1f\u200b\u4f60\u200b\u5c06\u200b\u5982\u4f55\u200b\u4f18\u5316\u200b\u4f60\u200b\u7684\u200b\u7b97\u6cd5\u200b\uff1f</li> <li>\u200b\u5982\u679c\u200b<code>nums1</code>\u200b\u7684\u200b\u5927\u5c0f\u200b\u6bd4\u200b<code>nums2</code>\u200b\u5c0f\u200b\u5f88\u591a\u200b\uff0c\u200b\u54ea\u200b\u79cd\u200b\u65b9\u6cd5\u200b\u66f4\u4f18\u200b\uff1f</li> <li>\u200b\u5982\u679c\u200b<code>nums2</code>\u200b\u7684\u200b\u5143\u7d20\u200b\u5b58\u50a8\u200b\u5728\u200b\u78c1\u76d8\u200b\u4e0a\u200b\uff0c\u200b\u5185\u5b58\u200b\u662f\u200b\u6709\u9650\u200b\u7684\u200b\uff0c\u200b\u5e76\u4e14\u200b\u4f60\u200b\u4e0d\u80fd\u200b\u4e00\u6b21\u200b\u52a0\u8f7d\u200b\u6240\u6709\u200b\u7684\u200b\u5143\u7d20\u200b\u5230\u200b\u5185\u5b58\u200b\u4e2d\u200b\uff0c\u200b\u4f60\u200b\u8be5\u200b\u600e\u4e48\u529e\u200b\uff1f</li> </ul> <p>Reference</p>","tags":["\u6392\u5e8f","\u54c8\u5e0c\u8868","\u53cc\u6307\u9488","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/350/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u4f7f\u7528\u200b\u54c8\u5e0c\u200b\u8868\u200b\u5b58\u50a8\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u5404\u200b\u5143\u7d20\u200b\u51fa\u73b0\u200b\u7684\u200b\u6b21\u6570\u200b\uff0c\u200b\u6ce8\u610f\u200b\u6570\u503c\u200b\u5728\u200b\u4ea4\u200b\u96c6\u4e2d\u200b\u53ef\u4ee5\u200b\u91cd\u590d\u200b\u51fa\u73b0\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>#define MIN(x, y) (x &gt; y ? y : x)\nstruct cell\n{\n    int value;\n    int times1;\n    int times2;\n};\nint* intersect(int* nums1, int nums1Size, int* nums2, int nums2Size, int* returnSize){\n    int i = 0, cur, mapSize = nums1Size + nums2Size, *ret = (int *)malloc(sizeof(int) * (nums1Size + nums2Size));\n    *returnSize = 0;\n    struct cell *hashMap = (struct cell *)memset(malloc(sizeof(struct cell) * mapSize), 0, sizeof(struct cell) * mapSize);\n    for (i = 0; i &lt; nums1Size; i++)\n    {\n        cur = (nums1[i] &gt; 0 ? 1 : -1) * (nums1[i] % mapSize);\n        while((hashMap[cur].times1 != 0 || hashMap[cur].times2) &amp;&amp; hashMap[cur].value != nums1[i])\n        {\n            cur++;\n            cur = cur == mapSize ? 0 : cur;\n        }\n        if (hashMap[cur].times1 == 0 &amp;&amp; hashMap[cur].times2 == 0)\n            hashMap[cur].value = nums1[i];\n        hashMap[cur].times1++;\n    }\n    for (i = 0; i &lt; nums2Size; i++)\n    {\n        cur = (nums2[i] &gt; 0 ? 1 : -1) * (nums2[i] % mapSize);\n        while((hashMap[cur].times1 != 0 || hashMap[cur].times2) &amp;&amp; hashMap[cur].value != nums2[i])\n        {\n            cur++;\n            cur = cur == mapSize ? 0 : cur;\n        }\n        if (hashMap[cur].times1 == 0 &amp;&amp; hashMap[cur].times2 == 0)\n            hashMap[cur].value = nums2[i];\n        hashMap[cur].times2++;\n    }\n    for (i = 0; i &lt; mapSize; i++)\n        while ((hashMap[i].times2--) &amp;&amp; (hashMap[i].times1--))\n            ret[(*returnSize)++] = hashMap[i].value;\n    return ret;\n}\n</code></pre> <p>\u200b\u7528\u200bPython\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>collections.Counter</code>\u200b\u6765\u200b\u7edf\u8ba1\u200b\u5143\u7d20\u200b\u51fa\u73b0\u200b\u7684\u200b\u6b21\u6570\u200b\uff0c\u200b\u7b80\u5316\u200b\u4ee3\u7801\u200b\uff1a</p> <pre><code>from collections import Counter\n\nclass Solution:\n    def intersect(self, nums1: List[int], nums2: List[int]) -&gt; List[int]:\n        cnt_1, cnt_2 = Counter(nums1), Counter(nums2)\n        result_dict = {\n            k: min(cnt_1[k], cnt_2[k])\n            for k in cnt_1 if k in cnt_2\n        }\n        return [*itertools.chain(*[\n            [k] * v\n            for k, v in result_dict.items()\n        ])]\n</code></pre>","tags":["\u6392\u5e8f","\u54c8\u5e0c\u8868","\u53cc\u6307\u9488","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/36/","title":"36. \u200b\u6709\u6548\u200b\u7684\u200b\u6570\u72ec","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/36/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u5224\u65ad\u200b\u4e00\u4e2a\u200b\u00a09x9 \u200b\u7684\u200b\u6570\u72ec\u200b\u662f\u5426\u200b\u6709\u6548\u200b\u3002\u200b\u53ea\u200b\u9700\u8981\u200b\u6839\u636e\u200b\u4ee5\u4e0b\u200b\u89c4\u5219\u200b\uff0c\u200b\u9a8c\u8bc1\u200b\u5df2\u7ecf\u200b\u586b\u5165\u200b\u7684\u200b\u6570\u5b57\u200b\u662f\u5426\u200b\u6709\u6548\u200b\u5373\u53ef\u200b\u3002</p> <ol> <li>\u200b\u6570\u5b57\u200b<code>1-9</code>\u200b\u5728\u200b\u6bcf\u200b\u4e00\u884c\u200b\u53ea\u80fd\u200b\u51fa\u73b0\u200b\u4e00\u6b21\u200b\u3002</li> <li>\u200b\u6570\u5b57\u200b<code>1-9</code>\u200b\u5728\u200b\u6bcf\u200b\u4e00\u5217\u200b\u53ea\u80fd\u200b\u51fa\u73b0\u200b\u4e00\u6b21\u200b\u3002</li> <li>\u200b\u6570\u5b57\u200b<code>1-9</code>\u200b\u5728\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u4ee5\u200b\u7c97\u200b\u5b9e\u7ebf\u200b\u5206\u9694\u200b\u7684\u200b<code>3x3</code>\u200b\u5bab\u5185\u200b\u53ea\u80fd\u200b\u51fa\u73b0\u200b\u4e00\u6b21\u200b\u3002</li> </ol> <p></p> <p>\u200b\u4e0a\u56fe\u200b\u662f\u200b\u4e00\u4e2a\u200b\u90e8\u5206\u200b\u586b\u5145\u200b\u7684\u200b\u6709\u6548\u200b\u7684\u200b\u6570\u72ec\u200b\u3002</p> <p>\u200b\u6570\u72ec\u200b\u90e8\u5206\u200b\u7a7a\u683c\u200b\u5185\u200b\u5df2\u200b\u586b\u5165\u200b\u4e86\u200b\u6570\u5b57\u200b\uff0c\u200b\u7a7a\u767d\u200b\u683c\u7528\u200b<code>'.'</code>\u200b\u8868\u793a\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u00a01\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b:\n[\n  [\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],\n  [\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],\n  [\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],\n  [\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],\n  [\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],\n  [\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],\n  [\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],\n  [\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],\n  [\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]\n]\n\u200b\u8f93\u51fa\u200b: true\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a02\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b:\n[\n\u00a0 [\"8\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],\n\u00a0 [\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],\n\u00a0 [\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],\n\u00a0 [\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],\n\u00a0 [\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],\n\u00a0 [\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],\n\u00a0 [\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],\n\u00a0 [\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],\n\u00a0 [\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]\n]\n\u200b\u8f93\u51fa\u200b: false\n\u200b\u89e3\u91ca\u200b: \u200b\u9664\u4e86\u200b\u7b2c\u4e00\u884c\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u6570\u5b57\u200b\u4ece\u200b 5 \u200b\u6539\u4e3a\u200b 8 \u200b\u4ee5\u5916\u200b\uff0c\u200b\u7a7a\u683c\u200b\u5185\u200b\u5176\u4ed6\u200b\u6570\u5b57\u200b\u5747\u200b\u4e0e\u200b \u200b\u793a\u4f8b\u200b1 \u200b\u76f8\u540c\u200b\u3002\n     \u200b\u4f46\u200b\u7531\u4e8e\u200b\u4f4d\u4e8e\u200b\u5de6\u4e0a\u89d2\u200b\u7684\u200b 3x3 \u200b\u5bab\u5185\u200b\u6709\u200b\u4e24\u4e2a\u200b 8 \u200b\u5b58\u5728\u200b, \u200b\u56e0\u6b64\u200b\u8fd9\u4e2a\u200b\u6570\u72ec\u200b\u662f\u200b\u65e0\u6548\u200b\u7684\u200b\u3002\n</code></pre> <p>\u200b\u8bf4\u660e\u200b\uff1a</p> <ul> <li>\u200b\u4e00\u4e2a\u200b\u6709\u6548\u200b\u7684\u200b\u6570\u72ec\u200b\uff08\u200b\u90e8\u5206\u200b\u5df2\u200b\u88ab\u200b\u586b\u5145\u200b\uff09\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u662f\u200b\u53ef\u89e3\u200b\u7684\u200b\u3002</li> <li>\u200b\u53ea\u200b\u9700\u8981\u200b\u6839\u636e\u200b\u4ee5\u4e0a\u200b\u89c4\u5219\u200b\uff0c\u200b\u9a8c\u8bc1\u200b\u5df2\u7ecf\u200b\u586b\u5165\u200b\u7684\u200b\u6570\u5b57\u200b\u662f\u5426\u200b\u6709\u6548\u200b\u5373\u53ef\u200b\u3002</li> <li>\u200b\u7ed9\u200b\u5b9a\u6570\u200b\u72ec\u200b\u5e8f\u5217\u200b\u53ea\u200b\u5305\u542b\u200b\u6570\u5b57\u200b\u00a01-9\u00a0\u200b\u548c\u200b\u5b57\u7b26\u200b\u00a0'.'\u00a0\u3002</li> <li>\u200b\u7ed9\u200b\u5b9a\u6570\u200b\u72ec\u200b\u6c38\u8fdc\u200b\u662f\u200b\u00a09x9\u00a0\u200b\u5f62\u5f0f\u200b\u7684\u200b\u3002</li> </ul> <p>Reference</p>","tags":["\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/36/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u6839\u636e\u200b\u5b9a\u4e49\u200b\u76f4\u63a5\u5224\u65ad\u200b\u8f93\u5165\u200b\u7684\u200b\u6570\u7ec4\u200b\u662f\u5426\u200b\u6ee1\u8db3\u200b\u6570\u72ec\u200b\u7684\u200b3\u200b\u4e2a\u200b\u6761\u4ef6\u200b\u5373\u53ef\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>bool isValidSudoku(char** board, int boardSize, int* boardColSize){\n    int i = 0, j = 0, positions1[boardSize], positions2[boardSize], k = 0;\n    for (i = 0; i &lt; boardSize; i++)\n    {\n        memset(positions1, 0, sizeof(int) * boardSize);\n        memset(positions2, 0, sizeof(int) * boardSize);\n        for (j = 0; j &lt; boardSize; j++)\n        {\n            if (board[i][j] &gt; '0' &amp;&amp; positions1[board[i][j] - '1'])\n                return false;\n            if (board[j][i] &gt; '0' &amp;&amp; positions2[board[j][i] - '1'])\n                return false;\n            if (board[i][j] &gt; '0')\n                positions1[board[i][j] - '1'] = 1;\n            if (board[j][i] &gt; '0')\n                positions2[board[j][i] - '1'] = 1;\n        }\n    }\n    for (i = 0; i &lt; 3; i++)\n    {\n        for (j = 0; j &lt; 3; j++)\n        {\n            memset(positions1, 0, sizeof(int) * boardSize);\n            for (k = 0; k &lt; boardSize; k++)\n            {\n                if (board[i * 3 + k % 3][j * 3 + k / 3] &gt; '0' &amp;&amp; positions1[board[i * 3 + k % 3][j * 3 + k / 3] - '1'])\n                    return false;\n                if (board[i * 3 + k % 3][j * 3 + k / 3] &gt; '0')\n                    positions1[board[i * 3 + k % 3][j * 3 + k / 3] - '1'] = 1;\n            }\n        }\n    }\n    return true;\n}\n</code></pre>","tags":["\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/368/","title":"368. \u200b\u6700\u5927\u200b\u6574\u9664\u200b\u5b50\u96c6","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u5b66","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/368/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u7531\u200b \u200b\u65e0\u200b\u91cd\u590d\u200b \u200b\u6b63\u6574\u6570\u200b\u7ec4\u6210\u200b\u7684\u200b\u96c6\u5408\u200b <code>nums</code> \uff0c\u200b\u8bf7\u200b\u4f60\u200b\u627e\u51fa\u200b\u5e76\u200b\u8fd4\u56de\u200b\u5176\u4e2d\u200b\u6700\u5927\u200b\u7684\u200b\u6574\u9664\u200b\u5b50\u96c6\u200b <code>answer</code> \uff0c\u200b\u5b50\u200b\u96c6\u4e2d\u200b\u6bcf\u4e00\u200b\u5143\u7d20\u200b\u5bf9\u200b <code>(answer[i], answer[j])</code> \u200b\u90fd\u200b\u5e94\u5f53\u200b\u6ee1\u8db3\u200b\uff1a</p> <ul> <li><code>answer[i] % answer[j] == 0</code> \uff0c\u200b\u6216\u200b</li> <li><code>answer[j] % answer[i] == 0</code></li> </ul> <p>\u200b\u5982\u679c\u200b\u5b58\u5728\u200b\u591a\u4e2a\u200b\u6709\u6548\u200b\u89e3\u200b\u5b50\u96c6\u200b\uff0c\u200b\u8fd4\u56de\u200b\u5176\u4e2d\u200b\u4efb\u4f55\u200b\u4e00\u4e2a\u200b\u5747\u200b\u53ef\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [1,2,3]\n\u200b\u8f93\u51fa\u200b\uff1a[1,2]\n\u200b\u89e3\u91ca\u200b\uff1a[1,3] \u200b\u4e5f\u200b\u4f1a\u200b\u88ab\u200b\u89c6\u4e3a\u200b\u6b63\u786e\u200b\u7b54\u6848\u200b\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [1,2,4,8]\n\u200b\u8f93\u51fa\u200b\uff1a[1,2,4,8]\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 1000</code></li> <li><code>1 &lt;= nums[i] &lt;= 2 * 10^9</code></li> <li><code>nums</code> \u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u6574\u6570\u200b \u200b\u4e92\u4e0d\u200b\u76f8\u540c\u200b</li> </ul> <p>Reference</p>","tags":["\u6570\u5b66","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/368/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u6574\u6570\u200b\u4e4b\u95f4\u200b\u7684\u200b\u6574\u9664\u200b\u5173\u7cfb\u200b\u6ee1\u8db3\u200b\u81ea\u53cd\u6027\u200b\u3001\u200b\u53cd\u5bf9\u79f0\u6027\u200b\u548c\u200b\u4f20\u9012\u6027\u200b\uff0c\u200b\u4f7f\u7528\u200b\\(a|b\\)\u200b\u8868\u793a\u200b\\(a\\)\u200b\u53ef\u4ee5\u200b\u88ab\u200b\\(b\\)\u200b\u6574\u9664\u200b\uff0c\u200b\u5219\u200b\uff1a</p> <ol> <li>\u200b\u81ea\u53cd\u6027\u200b\uff1a\\(a|a = T\\)</li> <li>\u200b\u53cd\u5bf9\u79f0\u6027\u200b\uff1a\\(a|b \\overline \\lor b|a = T\\)</li> <li>\u200b\u4f20\u9012\u6027\u200b\uff1a\\(a|b \\land b|c\\Rightarrow a|c\\)</li> </ol> <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6574\u9664\u200b\u5173\u7cfb\u200b\u662f\u200b\u6b63\u6574\u6570\u200b\u96c6\u200b\\(N_+\\)\u200b\u4e0a\u200b\u7684\u200b\u76f8\u5bb9\u200b\u5173\u7cfb\u200b\u4e0e\u200b\u504f\u5e8f\u200b\u5173\u7cfb\u200b\u3002</p> <p>\u200b\u8bbe\u200b\u6b63\u6574\u6570\u200b\u96c6\u5408\u200b\u4e3a\u200b\\(S\\)\uff0c\u200b\u4ee5\u4e0b\u200b\u57fa\u4e8e\u200b\u504f\u5e8f\u200b\u5173\u7cfb\u200b\\(R\\)\u200b\u4e0e\u200b\u504f\u5e8f\u200b\u96c6\u200b\\(S\\)\u200b\u5b9a\u4e49\u200b\u94fe\u200b\u7684\u200b\u6982\u5ff5\u200b\uff1a</p> <ol> <li>\u200b\u82e5\u200b\\(a\\in S, b\\in S\\)\uff0c\u200b\u4e14\u200b\\(a|b \\lor b|a\\)\uff0c\u200b\u5219\u200b\\(a, b\\)\u200b\u662f\u200b\u53ef\u6bd4\u200b\u7684\u200b\uff1b</li> <li>\u200b\u82e5\u200b\u96c6\u5408\u200b\\(B\\subseteq S\\)\uff0c\u200b\u4e14\u200b\u5bf9\u4e8e\u200b\\(B\\)\u200b\u4e2d\u200b\u4efb\u610f\u200b\u4e00\u5bf9\u200b\u5143\u7d20\u200b\\(x, y\\)\u200b\u90fd\u200b\u662f\u200b\u53ef\u6bd4\u200b\u7684\u200b\uff0c\u200b\u5219\u200b\u79f0\u200b\\(B\\)\u200b\u4e3a\u200b\u504f\u5e8f\u200b\u96c6\u200b\\(S\\)\u200b\u4e0a\u200b\u7684\u200b\u94fe\u200b\u3002</li> <li>\u200b\u504f\u5e8f\u200b\u96c6\u200b\\(S\\)\u200b\u4e2d\u200b\u5305\u542b\u200b\u5143\u7d20\u200b\u6700\u591a\u200b\u7684\u200b\u94fe\u200b\u79f0\u4e3a\u200b\u6700\u957f\u200b\u94fe\u200b\u3002</li> </ol> <p>\u200b\u7531\u6b64\u53ef\u89c1\u200b\uff0c\u200b\u6240\u6c42\u200b\u7684\u200b\u6700\u5927\u200b\u6574\u9664\u200b\u5b50\u96c6\u200b\u5373\u200b\u4e3a\u200b\\(S\\)\u200b\u4e0a\u200b\u7684\u200b\u6700\u957f\u200b\u94fe\u200b\u3002</p> <p>\u200b\u504f\u5e8f\u200b\u96c6\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u54c8\u65af\u200b\u56fe\u200b\u8fdb\u884c\u200b\u8868\u793a\u200b\uff0c\u200b\u5982\u200b\u96c6\u5408\u200b\\(\\{2,3,4,6,8\\}\\)\u200b\u4e0a\u200b\u7684\u200b\u504f\u5e8f\u200b\u5173\u7cfb\u200b\u53ef\u4ee5\u200b\u8868\u793a\u200b\u4e3a\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <p></p> <p>\u200b\u54c8\u65af\u200b\u56fe\u662f\u200b\u6709\u200b\u5411\u200b\u65e0\u200b\u73af\u56fe\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u8fde\u901a\u200b\u3002\u200b\u94fe\u200b\u5728\u200b\u54c8\u65af\u200b\u56fe\u4e2d\u200b\u8868\u73b0\u200b\u4e3a\u200b\u4e00\u6bb5\u200b\u8def\u5f84\u200b\uff0c\u200b\u6700\u957f\u200b\u94fe\u5373\u200b\u4e3a\u200b\u54c8\u65af\u200b\u56fe\u4e2d\u200b\u7684\u200b\u6700\u957f\u200b\u8def\u5f84\u200b\uff0c\u200b\u5373\u200b\u5404\u200b\u5206\u91cf\u200b\u7684\u200b\u6700\u957f\u200b\u76f4\u5f84\u200b\uff0c\u200b\u5982\u56fe\u200b\u4e2d\u52a0\u200b\u7c97\u7ebf\u6761\u200b\u6240\u793a\u200b\u3002</p> <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u56fe\u200b\u89e3\u51b3\u200b\u672c\u9898\u200b\uff0c\u200b\u7b2c\u4e00\u6b65\u200b\u6784\u9020\u200b\u504f\u5e8f\u200b\u96c6\u200b\u7684\u200b\u54c8\u65af\u200b\u56fe\u200b\uff0c\u200b\u6d41\u7a0b\u200b\u5982\u4e0b\u200b\uff1a</p> <ol> <li>\u200b\u5bf9\u200b\u96c6\u5408\u200b\u6392\u5e8f\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u96c6\u5408\u200b\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\uff0c\u200b\u5728\u200b\u56fe\u200b\u4e2d\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u4e0e\u200b\u4e4b\u200b\u5bf9\u5e94\u200b\uff1b</li> <li>\u200b\u4ece\u540e\u200b\u5411\u524d\u200b\u904d\u5386\u200b\u96c6\u5408\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\\(a_i\\)\uff1a<ol> <li>\u200b\u4ece\u200b\u7b2c\u200b\\(i + 1\\)\u200b\u4e2a\u200b\u5143\u7d20\u200b\u5f00\u59cb\u200b\uff0c\u200b\u5411\u200b\u540e\u200b\u904d\u5386\u200b\u96c6\u5408\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\\(a_j\\)\uff0c\u200b\u82e5\u200b\\(a_j|a_i\\)\uff0c\u200b\u5e76\u4e14\u200b\u4e0d\u200b\u5b58\u5728\u200b\u66f4\u200b\u5c0f\u200b\u7684\u200b\u8282\u70b9\u200b\u4e0e\u200b\\(a_i\\)\u200b\u76f8\u8fde\u200b\uff0c\u200b\u5219\u200b\u5c06\u200b\u8282\u70b9\u200b\\(i\\)\u200b\u4e0e\u200b\u8282\u70b9\u200b\\(j\\)\u200b\u76f8\u8fde\u63a5\u200b\u3002</li> </ol> </li> </ol> <p>\u200b\u4e3a\u4e86\u200b\u5feb\u901f\u200b\u6c42\u51fa\u200b\u56fe\u200b\u7684\u200b\u76f4\u5f84\u200b\uff0c\u200b\u53ef\u200b\u5728\u200b\u8282\u70b9\u200b\u4e2d\u200b\u5b58\u50a8\u200b\u4e24\u4e2a\u200b\u503c\u200b\uff0c\u200b\u5373\u200b\uff1a</p> <ul> <li>\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\u8ddd\u79bb\u200b\u672b\u7aef\u200b\u8282\u70b9\u200b\uff08\u200b\u51fa\u5ea6\u200b\u4e3a\u200b\\(0\\)\u200b\u7684\u200b\u8282\u70b9\u200b\uff09\u200b\u7684\u200b\u6700\u5927\u200b\u8ddd\u79bb\u200b</li> <li>\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\u8ddd\u79bb\u200b\u672b\u7aef\u200b\u8282\u70b9\u200b\u6700\u5927\u200b\u8ddd\u79bb\u200b\u6240\u200b\u5bf9\u5e94\u200b\u7684\u200b\u51fa\u8fb9\u200b</li> </ul> <p>\u200b\u7531\u4e8e\u200b\u6574\u9664\u200b\u5173\u7cfb\u200b\u8574\u542b\u200b\u5c0f\u4e8e\u200b\u7b49\u4e8e\u200b\u5173\u7cfb\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5728\u200b\u6784\u9020\u200b\u54c8\u65af\u200b\u56fe\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u540c\u65f6\u200b\u6784\u9020\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u503c\u200b\u3002</p> <p>\u200b\u7b2c\u4e8c\u6b65\u200b\u5373\u53ef\u200b\u627e\u51fa\u200b\u6700\u957f\u200b\u76f4\u5f84\u200b\u3002\u200b\u904d\u5386\u200b\u6240\u6709\u200b\u5165\u5ea6\u200b\u4e3a\u200b\\(0\\)\u200b\u7684\u200b\u8282\u70b9\u200b\uff0c\u200b\u627e\u51fa\u200b\u5e76\u200b\u8bb0\u4e0b\u200b\u8ddd\u79bb\u200b\u672b\u7aef\u200b\u8282\u70b9\u200b\u6700\u8fdc\u200b\u7684\u200b\u8282\u70b9\u200b\u3002\u200b\u518d\u200b\u6839\u636e\u200b\u8282\u70b9\u200b\u4e2d\u200b\u5b58\u50a8\u200b\u7684\u200b\u51fa\u8fb9\u200b\u4fe1\u606f\u200b\u5373\u53ef\u200b\u5b8c\u6574\u200b\u6784\u9020\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u6700\u5927\u200b\u6574\u9664\u200b\u5b50\u96c6\u200b\u3002</p> <pre><code>/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\n#define MAX(x, y) ((x) &gt; (y) ? (x) : (y))\nstruct Edge;\nstruct Vertex;\nstruct Edge\n{\n    struct Vertex *dest;\n    struct Edge *next;\n};\nstruct Vertex\n{\n    int val;\n    int status;\n    struct Edge *edges;\n    int height;\n    struct Edge *maxHeight;\n};\nstruct Edge *getEdge(struct Vertex *dest, struct Edge *next)\n{\n    struct Edge *cur = next;\n    while (cur)\n    {\n        if (dest-&gt;val % cur-&gt;dest-&gt;val == 0)\n            return next;\n        cur = cur-&gt;next;\n    }\n    struct Edge *ret = (struct Edge *)malloc(sizeof(struct Edge));\n    ret-&gt;dest = dest;\n    ret-&gt;next = next;\n    return ret;\n}\nint cmp(const void *a, const void *b)\n{\n    return *((int *)a) - *((int *)b);\n}\nvoid dfs(struct Vertex *graph)\n{\n    if (graph == NULL)\n        return;\n    graph-&gt;status = true;\n    struct Edge *edge = graph-&gt;edges;\n    while (edge)\n    {\n        dfs(edge-&gt;dest);\n        edge = edge-&gt;next;\n    }\n}\nint* largestDivisibleSubset(int* nums, int numsSize, int* returnSize){\n    struct Vertex *nodes = (struct Vertex *)malloc(sizeof(struct Vertex) * numsSize), *maxVertex = NULL;\n    int i = 0, j = 0, max = -1, *ret = NULL;\n    qsort(nums, numsSize, sizeof(int), cmp);\n    for (i = 0; i &lt; numsSize; i++)\n    {\n        nodes[i].val = nums[i];\n        nodes[i].status = 0;\n        nodes[i].edges = NULL;\n        nodes[i].height = 0;\n        nodes[i].maxHeight = NULL;\n    }\n    for (i = numsSize - 1; i &gt;= 0; i--)\n    {\n        for (j = i + 1; j &lt; numsSize; j++)\n        {\n            if (nodes[j].val % nodes[i].val)\n                continue;\n            nodes[i].edges = getEdge(nodes + j, nodes[i].edges);\n            if (nodes[i].height &lt; nodes[j].height + 1)\n            {\n                nodes[i].height = nodes[j].height + 1;\n                nodes[i].maxHeight = nodes[i].edges;\n            }\n        }\n    }\n    for (i = 0; i &lt; numsSize; i++)\n    {\n        if (nodes[i].status)\n            continue;\n        if (nodes[i].height &gt; max)\n        {\n            max = nodes[i].height;\n            maxVertex = nodes + i;\n        }\n        dfs(nodes + i);\n    }\n    *returnSize = max + 1;\n    ret = (int *)malloc(sizeof(int) * (max + 1));\n    for (i = 0; i &lt;= max; i++)\n    {\n        ret[i] = maxVertex-&gt;val;\n        if (maxVertex-&gt;maxHeight == NULL)\n            break;\n        maxVertex = maxVertex-&gt;maxHeight-&gt;dest;\n    }\n    return ret;\n}\n</code></pre>","tags":["\u6570\u5b66","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/37/","title":"37. \u200b\u89e3\u6570\u200b\u72ec","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u56f0\u96be\u200b</p>","tags":["\u54c8\u5e0c\u8868","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/37/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7f16\u5199\u200b\u4e00\u4e2a\u200b\u7a0b\u5e8f\u200b\uff0c\u200b\u901a\u8fc7\u200b\u586b\u5145\u200b\u7a7a\u683c\u200b\u6765\u200b\u89e3\u51b3\u200b\u6570\u72ec\u200b\u95ee\u9898\u200b\u3002</p> <p>\u200b\u6570\u72ec\u200b\u7684\u200b\u89e3\u6cd5\u200b\u9700\u200b \u200b\u9075\u5faa\u200b\u5982\u4e0b\u200b\u89c4\u5219\u200b\uff1a</p> <p>\u200b\u6570\u5b57\u200b\u00a0<code>1-9</code>\u00a0\u200b\u5728\u200b\u6bcf\u200b\u4e00\u884c\u200b\u53ea\u80fd\u200b\u51fa\u73b0\u200b\u4e00\u6b21\u200b\u3002 \u200b\u6570\u5b57\u200b\u00a0<code>1-9</code>\u00a0\u200b\u5728\u200b\u6bcf\u200b\u4e00\u5217\u200b\u53ea\u80fd\u200b\u51fa\u73b0\u200b\u4e00\u6b21\u200b\u3002 \u200b\u6570\u5b57\u200b\u00a0<code>1-9</code>\u00a0\u200b\u5728\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u4ee5\u200b\u7c97\u200b\u5b9e\u7ebf\u200b\u5206\u9694\u200b\u7684\u200b\u00a0<code>3x3</code>\u00a0\u200b\u5bab\u5185\u200b\u53ea\u80fd\u200b\u51fa\u73b0\u200b\u4e00\u6b21\u200b\u3002\uff08\u200b\u8bf7\u200b\u53c2\u8003\u200b\u793a\u4f8b\u200b\u56fe\u200b\uff09 \u200b\u6570\u72ec\u200b\u90e8\u5206\u200b\u7a7a\u683c\u200b\u5185\u200b\u5df2\u200b\u586b\u5165\u200b\u4e86\u200b\u6570\u5b57\u200b\uff0c\u200b\u7a7a\u767d\u200b\u683c\u7528\u200b\u00a0<code>'.'</code>\u00a0\u200b\u8868\u793a\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <p></p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aboard = [\n    [\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],\n    [\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],\n    [\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],\n    [\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],\n    [\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],\n    [\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],\n    [\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],\n    [\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],\n    [\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]\n]\n\u200b\u8f93\u51fa\u200b\uff1a[\n    [\"5\",\"3\",\"4\",\"6\",\"7\",\"8\",\"9\",\"1\",\"2\"],\n    [\"6\",\"7\",\"2\",\"1\",\"9\",\"5\",\"3\",\"4\",\"8\"],\n    [\"1\",\"9\",\"8\",\"3\",\"4\",\"2\",\"5\",\"6\",\"7\"],\n    [\"8\",\"5\",\"9\",\"7\",\"6\",\"1\",\"4\",\"2\",\"3\"],\n    [\"4\",\"2\",\"6\",\"8\",\"5\",\"3\",\"7\",\"9\",\"1\"],\n    [\"7\",\"1\",\"3\",\"9\",\"2\",\"4\",\"8\",\"5\",\"6\"],\n    [\"9\",\"6\",\"1\",\"5\",\"3\",\"7\",\"2\",\"8\",\"4\"],\n    [\"2\",\"8\",\"7\",\"4\",\"1\",\"9\",\"6\",\"3\",\"5\"],\n    [\"3\",\"4\",\"5\",\"2\",\"8\",\"6\",\"1\",\"7\",\"9\"]\n]\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u8f93\u5165\u200b\u7684\u200b\u6570\u72ec\u200b\u5982\u4e0a\u56fe\u200b\u6240\u793a\u200b\uff0c\u200b\u552f\u4e00\u200b\u6709\u6548\u200b\u7684\u200b\u89e3\u51b3\u65b9\u6848\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a\n</code></pre> <p></p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>board.length == 9</code></li> <li><code>board[i].length == 9</code></li> <li><code>board[i][j]</code> \u200b\u662f\u200b\u4e00\u4f4d\u200b\u6570\u5b57\u200b\u6216\u8005\u200b <code>'.'</code></li> <li>\u200b\u9898\u76ee\u200b\u6570\u636e\u200b \u200b\u4fdd\u8bc1\u200b \u200b\u8f93\u5165\u200b\u6570\u72ec\u4ec5\u200b\u6709\u200b\u4e00\u4e2a\u200b\u89e3\u200b</li> </ul> <p>Reference</p>","tags":["\u54c8\u5e0c\u8868","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/37/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4f7f\u7528\u200b\u56de\u6eaf\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u6bcf\u4e2a\u200b\u7a7a\u200b\u5355\u5143\u683c\u200b\uff0c\u200b\u68c0\u67e5\u200b\u5176\u200b\u6240\u5728\u200b\u884c\u200b\uff0c\u200b\u6240\u5728\u200b\u5217\u200b\u4e0e\u200b\u6240\u5728\u200b\u65b9\u683c\u200b\uff0c\u200b\u9010\u4e2a\u200b\u68c0\u67e5\u200b\u5176\u200b\u53ef\u4ee5\u200b\u586b\u5165\u200b\u7684\u200b\u6570\u503c\u200b\u3002\u200b\u5982\u679c\u200b \u200b\u6709\u200b\u53ef\u4ee5\u200b\u586b\u5165\u200b\u7684\u200b\u5b57\u7b26\u200b\uff0c\u200b\u5219\u200b\u4f9d\u6b21\u200b\u8fdb\u884c\u200b\u5c1d\u8bd5\u200b\u3002\u200b\u82e5\u200b\u67d0\u4e2a\u200b\u7a7a\u683c\u200b\u6ca1\u6709\u200b\u4efb\u4f55\u200b\u53ef\u4ee5\u200b\u586b\u5165\u200b\u7684\u200b\u6570\u503c\u200b\uff0c\u200b\u6216\u200b\u6240\u6709\u200b\u53ef\u200b\u586b\u5165\u200b\u7684\u200b\u503c\u200b\u90fd\u200b\u662f\u200b\u9519\u8bef\u200b\u7684\u200b \uff0c\u200b\u610f\u5473\u7740\u200b\u5f53\u524d\u200b\u641c\u7d22\u200b\u8def\u5f84\u200b\u5b58\u5728\u200b\u9519\u8bef\u200b\uff0c\u200b\u9700\u8981\u200b\u8fd4\u56de\u200b\u4e0a\u200b\u4e00\u4e2a\u200b\u72b6\u6001\u200b\u8fdb\u884c\u200b\u4e0b\u200b\u4e00\u6b65\u200b\u5c1d\u8bd5\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u65b9\u683c\u200b\u88ab\u200b\u5b8c\u5168\u200b\u586b\u6ee1\u200b\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u7acb\u5373\u200b\u8fd4\u56de\u200b\u3002\u200b\u5e76\u200b\u901a\u8fc7\u200b\u8fd4\u56de\u503c\u200b\u544a\u8bc9\u200b\u4e0a\u200b\u4e00\u6b65\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b\u7ed3\u679c\u200b\u3002</p> <pre><code>bool dfs(char **board, int boardSize, int *boardColSize)\n{\n    int x = 0, y = 0, i = 0, j = 0;\n    bool flag = true, candidate[9] = {false};\n    for (x = 0; x &lt; 9 &amp;&amp; flag; x++)\n        for (y = 0; y &lt; 9 &amp;&amp; flag; y++)\n            if (board[x][y] == '.')\n                flag = false;\n    if (flag)\n        return true;\n    x--;\n    y--;\n    for (i = 0; i &lt; 9; i++)\n    {\n        if (board[x][i] != '.')\n            candidate[board[x][i] - '1'] = true;\n        if (board[i][y] != '.')\n            candidate[board[i][y] - '1'] = true;\n        if (board[3 * (x / 3) + i / 3][3 * (y / 3) + i % 3] != '.')\n            candidate[board[3 * (x / 3) + i / 3][3 * (y / 3) + i % 3] - '1'] = true;\n    }\n    for (i = 0; i &lt; 9 &amp;&amp; !flag; i++)\n    {\n        if (!candidate[i])\n        {\n            board[x][y] = '1' + i;\n            flag = flag || dfs(board, boardSize, boardColSize);\n            if (flag)\n                return flag;\n            board[x][y] = '.';\n        }\n    }\n    return flag;\n}\n\nvoid solveSudoku(char** board, int boardSize, int* boardColSize){\n    dfs(board, boardSize, boardColSize);\n}\n</code></pre>","tags":["\u54c8\u5e0c\u8868","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/377/","title":"377. \u200b\u7ec4\u5408\u200b\u603b\u548c\u200b \u2163","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/377/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u7531\u200b \u200b\u4e0d\u540c\u200b \u200b\u6574\u6570\u200b\u7ec4\u6210\u200b\u7684\u200b\u6570\u7ec4\u200b <code>nums</code> \uff0c\u200b\u548c\u200b\u4e00\u4e2a\u200b\u76ee\u6807\u200b\u6574\u6570\u200b <code>target</code> \u3002\u200b\u8bf7\u200b\u4f60\u200b\u4ece\u200b <code>nums</code> \u200b\u4e2d\u200b\u627e\u51fa\u200b\u5e76\u200b\u8fd4\u56de\u200b\u603b\u548c\u200b\u4e3a\u200b <code>target</code> \u200b\u7684\u200b\u5143\u7d20\u200b\u7ec4\u5408\u200b\u7684\u200b\u4e2a\u6570\u200b\u3002</p> <p>\u200b\u9898\u76ee\u200b\u6570\u636e\u200b\u4fdd\u8bc1\u200b\u7b54\u6848\u200b\u7b26\u5408\u200b <code>32</code> \u200b\u4f4d\u200b\u6574\u6570\u200b\u8303\u56f4\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [1,2,3], target = 4\n\u200b\u8f93\u51fa\u200b\uff1a7\n\u200b\u89e3\u91ca\u200b\uff1a\n\u200b\u6240\u6709\u200b\u53ef\u80fd\u200b\u7684\u200b\u7ec4\u5408\u200b\u4e3a\u200b\uff1a\n(1, 1, 1, 1)\n(1, 1, 2)\n(1, 2, 1)\n(1, 3)\n(2, 1, 1)\n(2, 2)\n(3, 1)\n\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u987a\u5e8f\u200b\u4e0d\u540c\u200b\u7684\u200b\u5e8f\u5217\u200b\u88ab\u200b\u89c6\u4f5c\u200b\u4e0d\u540c\u200b\u7684\u200b\u7ec4\u5408\u200b\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [9], target = 3\n\u200b\u8f93\u51fa\u200b\uff1a0\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 200</code></li> <li><code>1 &lt;= nums[i] &lt;= 1000</code></li> <li><code>nums</code> \u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b \u200b\u4e92\u4e0d\u200b\u76f8\u540c\u200b</li> <li><code>1 &lt;= target &lt;= 1000</code></li> </ul> <p>\u200b\u8fdb\u9636\u200b\uff1a \u200b\u5982\u679c\u200b\u7ed9\u5b9a\u200b\u7684\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u542b\u6709\u200b\u8d1f\u6570\u200b\u4f1a\u200b\u53d1\u751f\u200b\u4ec0\u4e48\u200b\uff1f\u200b\u95ee\u9898\u200b\u4f1a\u200b\u4ea7\u751f\u200b\u4f55\u79cd\u200b\u53d8\u5316\u200b\uff1f\u200b\u5982\u679c\u200b\u5141\u8bb8\u200b\u8d1f\u6570\u200b\u51fa\u73b0\u200b\uff0c\u200b\u9700\u8981\u200b\u5411\u200b\u9898\u76ee\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u54ea\u4e9b\u200b\u9650\u5236\u200b\u6761\u4ef6\u200b\uff1f</p> <p>Reference</p>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/377/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u672c\u9898\u200b\u7684\u200b\u601d\u8def\u200b\u4e0e\u200b70. \u200b\u722c\u697c\u68af\u200b\u76f8\u540c\u200b\u3002\u200b\u6b64\u5904\u200b\u4f7f\u7528\u200b\u8bb0\u5fc6\u200b\u5316\u200b\u9012\u5f52\u200b\u89e3\u51b3\u200b\u3002</p> <p>\u200b\u8bbe\u200b\\(f(x; S)\\)\u200b\u4e3a\u200b\u7ed9\u5b9a\u200b\u6574\u6570\u200b\u96c6\u5408\u200b\\(S\\)\uff0c\u200b\u7ec4\u6210\u200b\u76ee\u6807\u503c\u200b\\(x\\)\u200b\u7684\u200b\u7ec4\u5408\u200b\u6570\u91cf\u200b\uff0c\u200b\u6211\u4eec\u200b\u9ed8\u8ba4\u200b\\(0\\in S\\)\u3002</p> <ul> <li>\u200b\u5f53\u200b\\(x &lt; 0\\)\uff0c\u200b\u7531\u4e8e\u200b\\(\\forall y\\in S, y\\geq 0\\)\uff0c\u200b\u4e0d\u200b\u53ef\u80fd\u200b\u5f97\u5230\u200b\u5c0f\u4e8e\u200b\\(0\\)\u200b\u7684\u200b\u6570\u503c\u200b\uff0c\u200b\u6709\u200b\\(f(x; S) = 0\\)</li> <li>\\(x = 0\\)\uff0c\u200b\u7531\u4e8e\u200b\u9ed8\u8ba4\u200b\\(0\\in S\\)\uff0c\u200b\u6709\u200b\\(f(x; S) = 1\\)\u3002</li> <li>\u200b\u5f53\u200b\\(x &lt; 0\\)\uff0c\\(S\\)\u200b\u4e2d\u200b\u7684\u200b\u4efb\u610f\u200b\u5143\u7d20\u200b\\(y\\)\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u9009\u62e9\u200b\uff0c\u200b\u9009\u62e9\u200b\\(y\\)\u200b\u5f97\u5230\u200b\u7684\u200b\u7ec4\u5408\u200b\u4e2a\u6570\u200b\u4e3a\u200b\\(f(x - y; S)\\)</li> </ul> <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u5f97\u5230\u200b\\(f(x; S)\\)\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\uff1a</p> \\[ f(x; S)=\\left\\{ \\begin{aligned}     &amp; 0 &amp; x &lt; 0 \\\\     &amp; 1 &amp; x = 0 \\\\     &amp; \\sum_{y\\in S} f(x - y; S) &amp; x &gt; 0 \\end{aligned} \\right . \\] <p>\u200b\u7531\u4e8e\u200b\u8ba1\u7b97\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u4f1a\u200b\u91cd\u590d\u200b\u8ba1\u7b97\u200b\u67d0\u4e9b\u200b\\(f(x; S)\\)\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\u8bb0\u5f55\u200b\u6240\u6709\u200b\u5df2\u7ecf\u200b\u8ba1\u7b97\u200b\u8fc7\u200b\u7684\u200b\\(f(x; S)\\)\u3002</p> <pre><code>int helper(int *dp, int *nums, int numsSize, int target)\n{\n    if (target == 0)\n        return 1;\n    if (target &lt; 0)\n        return 0;\n    if (dp[target - 1] &lt; 0)\n    {\n        int ret = 0, i = 0;\n        for (i = 0; i &lt; numsSize; i++)\n            ret += helper(dp, nums, numsSize, target - nums[i]);\n        dp[target - 1] = ret;\n    }\n    return dp[target - 1];\n}\n\nint combinationSum4(int* nums, int numsSize, int target) {\n    int *dp = (int *)malloc(sizeof(int) * target);\n    memset(dp, 0xff, sizeof(int) * target);\n    return helper(dp, nums, numsSize, target);\n}\n</code></pre>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/38/","title":"38. \u200b\u5916\u89c2\u200b\u6570\u5217","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/38/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u6b63\u6574\u6570\u200b\\(n\\)\uff08\\(1 \\leq\u00a0n\u00a0\\leq 30\\)\uff09\uff0c\u200b\u8f93\u51fa\u200b\u5916\u89c2\u200b\u6570\u5217\u200b\u7684\u200b\u7b2c\u200b\\(n\\)\u200b\u9879\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u6574\u6570\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u7684\u200b\u6bcf\u4e00\u9879\u200b\u5c06\u200b\u8868\u793a\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u3002</p> <p>\u300c\u200b\u5916\u89c2\u200b\u6570\u5217\u200b\u300d\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u5e8f\u5217\u200b\uff0c\u200b\u4ece\u200b\u6570\u5b57\u200b 1 \u200b\u5f00\u59cb\u200b\uff0c\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u7684\u200b\u6bcf\u4e00\u9879\u200b\u90fd\u200b\u662f\u200b\u5bf9\u200b\u524d\u200b\u4e00\u9879\u200b\u7684\u200b\u63cf\u8ff0\u200b\u3002\u200b\u524d\u200b\u4e94\u9879\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>1.     1\n2.     11\n3.     21\n4.     1211\n5.     111221\n</code></pre> <p>\u200b\u7b2c\u4e00\u9879\u200b\u662f\u200b\u6570\u5b57\u200b 1</p> <p>\u200b\u63cf\u8ff0\u200b\u524d\u200b\u4e00\u9879\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u6570\u662f\u200b 1 \u200b\u5373\u200b \u201c\u200b\u4e00\u4e2a\u200b 1 \u201d\uff0c\u200b\u8bb0\u200b\u4f5c\u200b 11</p> <p>\u200b\u63cf\u8ff0\u200b\u524d\u200b\u4e00\u9879\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u6570\u662f\u200b 11 \u200b\u5373\u200b \u201c\u200b\u4e24\u4e2a\u200b 1 \u201d \uff0c\u200b\u8bb0\u200b\u4f5c\u200b 21</p> <p>\u200b\u63cf\u8ff0\u200b\u524d\u200b\u4e00\u9879\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u6570\u662f\u200b 21 \u200b\u5373\u200b \u201c\u200b\u4e00\u4e2a\u200b 2 \u200b\u4e00\u4e2a\u200b 1 \u201d \uff0c\u200b\u8bb0\u200b\u4f5c\u200b 1211</p> <p>\u200b\u63cf\u8ff0\u200b\u524d\u200b\u4e00\u9879\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u6570\u662f\u200b 1211 \u200b\u5373\u200b \u201c\u200b\u4e00\u4e2a\u200b 1 \u200b\u4e00\u4e2a\u200b 2 \u200b\u4e24\u4e2a\u200b 1 \u201d \uff0c\u200b\u8bb0\u200b\u4f5c\u200b 111221</p> <p>\u200b\u793a\u4f8b\u200b\u00a01:</p> <pre><code>\u200b\u8f93\u5165\u200b: 1\n\u200b\u8f93\u51fa\u200b: \"1\"\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u57fa\u672c\u200b\u6837\u4f8b\u200b\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2:</p> <pre><code>\u200b\u8f93\u5165\u200b: 4\n\u200b\u8f93\u51fa\u200b: \"1211\"\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u5f53\u200b n = 3 \u200b\u65f6\u200b\uff0c\u200b\u5e8f\u5217\u200b\u662f\u200b \"21\"\uff0c\u200b\u5176\u4e2d\u200b\u6211\u4eec\u200b\u6709\u200b \"2\" \u200b\u548c\u200b \"1\" \u200b\u4e24\u7ec4\u200b\uff0c\"2\" \u200b\u53ef\u4ee5\u200b\u8bfb\u4f5c\u200b \"12\"\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\u51fa\u73b0\u200b\u9891\u6b21\u200b = 1 \u200b\u800c\u200b \u200b\u503c\u200b = 2\uff1b\u200b\u7c7b\u4f3c\u200b \"1\" \u200b\u53ef\u4ee5\u200b\u8bfb\u4f5c\u200b \"11\"\u3002\u200b\u6240\u4ee5\u200b\u7b54\u6848\u200b\u662f\u200b \"12\" \u200b\u548c\u200b \"11\" \u200b\u7ec4\u5408\u200b\u5728\u200b\u4e00\u8d77\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b \"1211\"\u3002\n</code></pre> <p>Reference</p>","tags":["\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/38/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u6839\u636e\u200b\u5b9a\u4e49\u200b\u8fdb\u884c\u200b\u8ba1\u7b97\u200b\u5373\u53ef\u200b\uff0c\u200b\u6ce8\u610f\u200b\u6b21\u6570\u200b\u90e8\u5206\u200b\u53ef\u80fd\u200b\u8d85\u8fc7\u200b10\uff0c\u200b\u800c\u200b\u6570\u5b57\u200b\u90e8\u5206\u200b\u4e0d\u4f1a\u200b\u8d85\u8fc7\u200b10\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>char * toStr(int n)\n{\n    char *ret = (char *)memset(malloc(sizeof(char) * 10), 0, sizeof(char) * 10), temp;\n    int i = 0, head = 0, tail;\n    while (n)\n    {\n        ret[i] = n % 10 + '0';\n        n /= 10;\n        i++;\n    }\n    tail = i - 1;\n    while(head &lt; tail)\n    {\n        temp = ret[head];\n        ret[head] = ret[tail];\n        ret[tail] = temp;\n    }\n    return ret;\n}\n\nchar * countAndSay(int n){\n    if (n == 1)\n    {\n        char *ret = (char *)malloc(sizeof(char) * 2);\n        ret[0] = '1';\n        ret[1] = 0;\n        return ret;\n    }\n    char *rec = countAndSay(n - 1), *cur = rec, flag = *cur, *temp = NULL,\n         *ret = (char *)memset(malloc(sizeof(char) * (strlen(rec) * 2 + 1)), 0, sizeof(char) * (strlen(rec) * 2 + 1)), *retcur = ret;\n    int counter = 0;\n    while(*cur)\n    {\n        if (*cur == flag)\n            counter++;\n        else\n        {\n            temp = toStr(counter);\n            strcpy(retcur, temp);\n            while(*retcur)\n                retcur++;\n            *retcur = flag;\n            *retcur++;\n            flag = *cur;\n            counter = 1;\n            free(temp);\n        }\n        cur++;\n    }\n    temp = toStr(counter);\n    strcpy(retcur, temp);\n    while (*retcur)\n        retcur++;\n    *retcur = flag;\n    free(temp);\n    free(rec);\n    return ret;\n}\n</code></pre>","tags":["\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/384/","title":"384. \u200b\u6253\u4e71\u200b\u6570\u7ec4","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/384/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u6253\u4e71\u200b\u4e00\u4e2a\u200b\u6ca1\u6709\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b\u7684\u200b\u6570\u7ec4\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>// \u200b\u4ee5\u200b\u6570\u5b57\u200b\u96c6\u5408\u200b 1, 2 \u200b\u548c\u200b 3 \u200b\u521d\u59cb\u5316\u200b\u6570\u7ec4\u200b\u3002\nint[] nums = {1,2,3};\nSolution solution = new Solution(nums);\n\n// \u200b\u6253\u4e71\u200b\u6570\u7ec4\u200b [1,2,3] \u200b\u5e76\u200b\u8fd4\u56de\u200b\u7ed3\u679c\u200b\u3002\u200b\u4efb\u4f55\u200b [1,2,3]\u200b\u7684\u200b\u6392\u5217\u200b\u8fd4\u56de\u200b\u7684\u200b\u6982\u7387\u200b\u5e94\u8be5\u200b\u76f8\u540c\u200b\u3002\nsolution.shuffle();\n\n// \u200b\u91cd\u8bbe\u200b\u6570\u7ec4\u200b\u5230\u200b\u5b83\u200b\u7684\u200b\u521d\u59cb\u72b6\u6001\u200b[1,2,3]\u3002\nsolution.reset();\n\n// \u200b\u968f\u673a\u200b\u8fd4\u56de\u200b\u6570\u7ec4\u200b[1,2,3]\u200b\u6253\u4e71\u200b\u540e\u200b\u7684\u200b\u7ed3\u679c\u200b\u3002\nsolution.shuffle();\n</code></pre> <p>Reference</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/384/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a Fisher-Yates \u200b\u6d17\u724c\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u5173\u952e\u5728\u4e8e\u200b\u5b9e\u73b0\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u5143\u7d20\u200b\u7684\u200b\u65e0\u653e\u56de\u200b\u62bd\u6837\u200b\u3002</p> <p>Fisher-Yates \u200b\u6d17\u724c\u200b\u7b97\u6cd5\u200b\u8ddf\u200b\u66b4\u529b\u200b\u7b97\u6cd5\u200b\u5f88\u200b\u50cf\u200b\u3002\u200b\u5728\u200b\u6bcf\u6b21\u200b\u8fed\u4ee3\u200b\u4e2d\u200b\uff0c\u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b\u8303\u56f4\u200b\u5728\u200b\u5f53\u524d\u200b\u4e0b\u6807\u200b\u5230\u200b\u6570\u7ec4\u200b\u672b\u5c3e\u200b\u5143\u7d20\u200b\u4e0b\u6807\u200b\u4e4b\u95f4\u200b\u7684\u200b\u968f\u673a\u200b\u6574\u6570\u200b\u3002\u200b\u63a5\u4e0b\u6765\u200b\uff0c\u200b\u5c06\u200b\u5f53\u524d\u200b\u5143\u7d20\u200b\u548c\u200b\u968f\u673a\u200b\u9009\u51fa\u200b\u7684\u200b\u4e0b\u6807\u200b\u6240\u6307\u200b\u7684\u200b\u5143\u7d20\u200b\u4e92\u76f8\u4ea4\u6362\u200b - \u200b\u8fd9\u200b\u4e00\u6b65\u200b\u6a21\u62df\u200b\u4e86\u200b\u6bcf\u6b21\u200b\u4ece\u200b \u201c\u200b\u5e3d\u5b50\u200b\u201d \u200b\u91cc\u9762\u200b\u6478\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u5176\u4e2d\u200b\u9009\u53d6\u200b\u4e0b\u6807\u200b\u8303\u56f4\u200b\u7684\u200b\u4f9d\u636e\u200b\u5728\u4e8e\u200b\u6bcf\u4e2a\u200b\u88ab\u200b\u6478\u200b\u51fa\u200b\u7684\u200b\u5143\u7d20\u200b\u90fd\u200b\u4e0d\u200b\u53ef\u80fd\u200b\u518d\u200b\u88ab\u200b\u6478\u51fa\u6765\u200b\u4e86\u200b\u3002\u200b\u6b64\u5916\u200b\u8fd8\u6709\u200b\u4e00\u4e2a\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\u7684\u200b\u7ec6\u8282\u200b\uff0c\u200b\u5f53\u524d\u200b\u5143\u7d20\u200b\u662f\u200b\u53ef\u4ee5\u200b\u548c\u200b\u5b83\u200b\u672c\u8eab\u200b\u4e92\u76f8\u4ea4\u6362\u200b\u7684\u200b - \u200b\u5426\u5219\u200b\u751f\u6210\u200b\u6700\u540e\u200b\u7684\u200b\u6392\u5217\u7ec4\u5408\u200b\u7684\u200b\u6982\u7387\u200b\u5c31\u200b\u4e0d\u200b\u5bf9\u200b\u4e86\u200b\u3002</p> <p>Reference</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>typedef struct {\n    int size;\n    int *nums;\n} Solution;\n\n\nSolution* solutionCreate(int* nums, int numsSize) {\n    Solution *ret = (Solution *)malloc(sizeof(Solution));\n    ret-&gt;size = numsSize;\n    ret-&gt;nums = (int *)memcpy(malloc(sizeof(int) * numsSize), nums, sizeof(int) * numsSize);\n    return ret;\n}\n\n/** Resets the array to its original configuration and return it. */\nint* solutionReset(Solution* obj, int* retSize) {\n    *retSize = obj-&gt;size;\n    return obj-&gt;nums;\n}\n\n/** Returns a random shuffling of the array. */\nint* solutionShuffle(Solution* obj, int* retSize) {\n    *retSize = obj-&gt;size;\n    int *ret = (int *)memcpy(malloc(sizeof(int) * obj-&gt;size), obj-&gt;nums, sizeof(int) * obj-&gt;size), i = 0, temp, x, y;\n    unsigned int *seed = malloc(sizeof(unsigned int));\n    *seed += (unsigned int)seed;\n    srand(*seed);\n    for (i = 0; i &lt; obj-&gt;size; i++)\n    {\n        x = i;\n        y = rand() % (obj-&gt;size - i) + i;\n        temp = ret[x];\n        ret[x] = ret[y];\n        ret[y] = temp;\n    }\n    free(seed);\n    return ret;\n}\n\nvoid solutionFree(Solution* obj) {\n    free(obj-&gt;nums);\n    free(obj);\n}\n\n/**\n * Your Solution struct will be instantiated and called as such:\n * Solution* obj = solutionCreate(nums, numsSize);\n * int* param_1 = solutionReset(obj, retSize);\n\n * int* param_2 = solutionShuffle(obj, retSize);\n\n * solutionFree(obj);\n*/\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/387/","title":"387. \u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u552f\u4e00\u200b\u5b57\u7b26","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u54c8\u5e0c\u8868","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/387/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u627e\u5230\u200b\u5b83\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u4e0d\u200b\u91cd\u590d\u200b\u7684\u200b\u5b57\u7b26\u200b\uff0c\u200b\u5e76\u200b\u8fd4\u56de\u200b\u5b83\u200b\u7684\u200b\u7d22\u5f15\u200b\u3002\u200b\u5982\u679c\u200b\u4e0d\u200b\u5b58\u5728\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b<code>-1</code>\u3002</p> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>s = \"leetcode\"\n\u200b\u8fd4\u56de\u200b 0\n\ns = \"loveleetcode\"\n\u200b\u8fd4\u56de\u200b 2\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a \u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5047\u5b9a\u200b\u8be5\u200b\u5b57\u7b26\u4e32\u200b\u53ea\u200b\u5305\u542b\u200b\u5c0f\u5199\u5b57\u6bcd\u200b\u3002</p> <p>Reference</p>","tags":["\u54c8\u5e0c\u8868","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/387/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\u5b58\u50a8\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u5404\u200b\u5b57\u7b26\u200b\u7684\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u3002\u200b\u904d\u5386\u200b\u5b57\u7b26\u4e32\u200b\u8fdb\u884c\u200b\u7edf\u8ba1\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>int firstUniqChar(char * s){\n    int hashMap[26] = {0};\n    char *cur = s;\n    while(*cur)\n    {\n        hashMap[*cur - 'a']++;\n        cur++;\n    }\n    cur = s;\n    while(*cur)\n    {\n        if (hashMap[*cur - 'a'] == 1)\n            return (int)(cur - s);\n        cur++;\n    }\n    return -1;\n}\n</code></pre>","tags":["\u54c8\u5e0c\u8868","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/40/","title":"40. \u200b\u7ec4\u5408\u200b\u603b\u548c\u200b II","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u7ec4","\u56de\u6eaf"]},{"location":"coding/leetcode/40/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u5019\u9009\u4eba\u200b\u7f16\u53f7\u200b\u7684\u200b\u96c6\u5408\u200b <code>candidates</code> \u200b\u548c\u200b\u4e00\u4e2a\u200b\u76ee\u6807\u200b\u6570\u200b <code>target</code> \uff0c\u200b\u627e\u51fa\u200b <code>candidates</code> \u200b\u4e2d\u200b\u6240\u6709\u200b\u53ef\u4ee5\u200b\u4f7f\u200b\u6570\u5b57\u200b\u548c\u200b\u4e3a\u200b <code>target</code> \u200b\u7684\u200b\u7ec4\u5408\u200b\u3002</p> <p><code>candidates</code> \u200b\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u6570\u5b57\u200b\u5728\u200b\u6bcf\u4e2a\u200b\u7ec4\u5408\u200b\u4e2d\u200b\u53ea\u80fd\u200b\u4f7f\u7528\u200b \u200b\u4e00\u6b21\u200b \u3002</p> <p>\u200b\u6ce8\u610f\u200b\uff1a \u200b\u89e3\u96c6\u200b\u4e0d\u80fd\u200b\u5305\u542b\u200b\u91cd\u590d\u200b\u7684\u200b\u7ec4\u5408\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1:</p> <p>\u200b\u8f93\u5165\u200b: <code>candidates = [10,1,2,7,6,1,5], target = 8</code>,</p> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>[\n[1,1,6],\n[1,2,5],\n[1,7],\n[2,6]\n]\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2:</p> <p>\u200b\u8f93\u5165\u200b: <code>candidates = [2,5,2,1,2], target = 5</code>,</p> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>[\n[1,2,2],\n[5]\n]\n</code></pre> <p>\u200b\u63d0\u793a\u200b:</p> <ul> <li><code>1 &lt;= candidates.length &lt;= 100</code></li> <li><code>1 &lt;= candidates[i] &lt;= 50</code></li> <li><code>1 &lt;= target &lt;= 30</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u56de\u6eaf"]},{"location":"coding/leetcode/40/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u7531\u4e8e\u200b\u6bcf\u4e2a\u200b\u6570\u5b57\u200b\u53ea\u80fd\u200b\u4f7f\u7528\u200b\u4e00\u6b21\u200b\uff0c\u200b\u5e76\u4e14\u200b\u4e0d\u80fd\u200b\u8fd4\u56de\u200b\u91cd\u590d\u200b\u7684\u200b\u7ec4\u5408\u200b\uff0c\u200b\u56e0\u6b64\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7edf\u8ba1\u200b\u6bcf\u4e2a\u200b\u6570\u5b57\u200b\u7684\u200b\u4e2a\u6570\u200b\uff0c\u200b\u9010\u4e2a\u200b\u6570\u5b57\u200b\u8fdb\u884c\u200b\u6df1\u5ea6\u200b\u4f18\u5148\u200b\u7684\u200b\u641c\u7d22\u200b\u3002\u200b\u641c\u7d22\u200b\u7684\u200b\u7ec8\u6b62\u200b\u6761\u4ef6\u200b\u4e3a\u200b\uff1a</p> <ol> <li>\u200b\u5f53\u524d\u200b\u7684\u200b\u548c\u200b\u7b49\u4e8e\u200b\u76ee\u6807\u503c\u200b\uff0c\u200b\u6b64\u65f6\u200b\u76f8\u5f53\u4e8e\u200b\u6211\u4eec\u200b\u627e\u5230\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u6709\u6548\u200b\u7684\u200b\u89e3\u200b\uff0c\u200b\u5c06\u200b\u5176\u200b\u8bb0\u5f55\u4e0b\u6765\u200b\u3002</li> <li>\u200b\u5f53\u524d\u200b\u7684\u200b\u548c\u200b\u5927\u4e8e\u200b\u76ee\u6807\u503c\u200b\uff0c\u200b\u6b64\u65f6\u200b\u8bf4\u660e\u200b\u5f53\u524d\u200b\u7684\u200b\u7ec4\u5408\u200b\u4e0d\u200b\u53ef\u80fd\u200b\u662f\u200b\u6709\u6548\u200b\u7684\u200b\u89e3\u200b\uff0c\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b\u3002</li> <li>\u200b\u5f53\u524d\u200b\u7684\u200b\u6570\u5b57\u200b\u5df2\u7ecf\u200b\u8d85\u8fc7\u200b\u4e86\u200b\u76ee\u6807\u503c\u200b\uff0c\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b\u3002</li> </ol> <p>\u200b\u5728\u200b\u5269\u4f59\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u8003\u8651\u200b\u5f53\u524d\u200b\u6570\u5b57\u200b\u7684\u200b\u4e2a\u6570\u200b\\(n\\)\uff0c\u200b\u9010\u4e2a\u200b\u5224\u65ad\u200b\u4f7f\u7528\u200b\u5f53\u524d\u200b\u6570\u5b57\u200b\\(0\\)\u200b\u6b21\u5230\u200b\\(n\\)\u200b\u6b21\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b\u67d0\u200b\u4e00\u6b21\u200b\u540e\u200b\u627e\u5230\u200b\u4e86\u200b\u6709\u6548\u200b\u89e3\u200b\uff0c\u200b\u5c31\u200b\u4e0d\u518d\u200b\u9700\u8981\u200b\u7ee7\u7eed\u200b\u641c\u7d22\u200b\u5176\u4ed6\u200b\u6b21\u6570\u200b\u3002\u200b\u4e00\u79cd\u200b\u601d\u8def\u200b\u662f\u4ece\u200b1\u200b\u9010\u4e2a\u200b\u5730\u200b\u8003\u8651\u200b\u5230\u200b\\(n\\)\u3002</p> <pre><code>class Solution:\n    def dfs(\n        self, k: int, end: int, counter: Dict[int, int], target: int,\n        current_seq: List[int], results: List[List[int]]\n    ):\n        if target == 0:\n            results.append(current_seq)\n            return True\n        if k &gt; end or target &lt; 0:\n            return False\n        v = counter.get(k, 0)\n        for number in range(min(v, target // k) + 1):\n            if self.dfs(\n                k + 1, end, counter, target - k * number,\n                current_seq + [k] * number, results\n            ):\n                break\n        return False\n\n    def combinationSum2(self, candidates: List[int], target: int) -&gt; List[List[int]]:\n        counter = Counter([_ for _ in candidates if _ &lt;= target])\n        result = []\n        self.dfs(1, target, counter, target, [], result)\n        return result\n</code></pre> <p>\u200b\u5982\u200b\u4e0a\u200b\u65b9\u6cd5\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u5927\u91cf\u200b\u65e0\u6548\u200b\u8fed\u4ee3\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u53ea\u200b\u5728\u200b\u51fa\u73b0\u200b\u7684\u200b\u6570\u5b57\u200b\u4e2d\u200b\u8fdb\u884c\u200b\u5bfb\u627e\u200b\uff0c\u200b\u51cf\u5c11\u200b\u65e0\u6548\u200b\u7684\u200b\u641c\u7d22\u200b\u3002</p> <pre><code>class Solution:\n    def dfs(\n        self, k_idx: int, k_list: List[int], counter: Dict[int, int], target: int,\n        current_seq: List[int], results: List[List[int]]\n    ):\n        if target == 0:\n            results.append(current_seq)\n            return True\n        if k_idx &gt;= len(k_list) or target &lt; 0:\n            return False\n        k = k_list[k_idx]\n        v = counter.get(k, 0)\n        for number in range(min(v, target // k) + 1):\n            if self.dfs(\n                k_idx + 1, k_list, counter, target - k * number,\n                current_seq + [k] * number, results\n            ):\n                break\n        return False\n\n    def combinationSum2(self, candidates: List[int], target: int) -&gt; List[List[int]]:\n        counter = Counter([_ for _ in candidates if _ &lt;= target])\n        result = []\n        k_list = [*counter]\n        self.dfs(0, k_list, counter, target, [], result)\n        return result\n</code></pre>","tags":["\u6570\u7ec4","\u56de\u6eaf"]},{"location":"coding/leetcode/403/","title":"403. \u200b\u9752\u86d9\u200b\u8fc7\u6cb3","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u56f0\u96be\u200b</p> <p>\u200b\u4e00\u53ea\u200b\u9752\u86d9\u200b\u60f3\u8981\u200b\u8fc7\u6cb3\u200b\u3002 \u200b\u5047\u5b9a\u200b\u6cb3\u6d41\u200b\u88ab\u200b\u7b49\u200b\u5206\u4e3a\u200b\u82e5\u5e72\u4e2a\u200b\u5355\u5143\u683c\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5728\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u5355\u5143\u683c\u200b\u5185\u200b\u90fd\u200b\u6709\u200b\u53ef\u80fd\u200b\u653e\u200b\u6709\u200b\u4e00\u5757\u200b\u77f3\u5b50\u200b\uff08\u200b\u4e5f\u200b\u6709\u200b\u53ef\u80fd\u200b\u6ca1\u6709\u200b\uff09\u3002 \u200b\u9752\u86d9\u200b\u53ef\u4ee5\u200b\u8df3\u4e0a\u200b\u77f3\u5b50\u200b\uff0c\u200b\u4f46\u662f\u200b\u4e0d\u200b\u53ef\u4ee5\u200b\u8df3\u5165\u200b\u6c34\u4e2d\u200b\u3002</p> <p>\u200b\u7ed9\u200b\u4f60\u200b\u77f3\u5b50\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u5217\u8868\u200b <code>stones</code>\uff08\u200b\u7528\u200b\u5355\u5143\u683c\u200b\u5e8f\u53f7\u200b \u200b\u5347\u5e8f\u200b \u200b\u8868\u793a\u200b\uff09\uff0c\u00a0\u200b\u8bf7\u200b\u5224\u5b9a\u200b\u9752\u86d9\u200b\u80fd\u5426\u200b\u6210\u529f\u200b\u8fc7\u6cb3\u200b\uff08\u200b\u5373\u200b\u80fd\u5426\u200b\u5728\u200b\u6700\u540e\u200b\u4e00\u6b65\u200b\u8df3\u81f3\u200b\u6700\u540e\u200b\u4e00\u5757\u200b\u77f3\u5b50\u200b\u4e0a\u200b\uff09\u3002</p> <p>\u200b\u5f00\u59cb\u200b\u65f6\u200b\uff0c\u00a0\u200b\u9752\u86d9\u200b\u9ed8\u8ba4\u200b\u5df2\u7ad9\u200b\u5728\u200b\u7b2c\u4e00\u5757\u200b\u77f3\u5b50\u200b\u4e0a\u200b\uff0c\u200b\u5e76\u200b\u53ef\u4ee5\u200b\u5047\u5b9a\u200b\u5b83\u200b\u7b2c\u4e00\u6b65\u200b\u53ea\u80fd\u200b\u8df3\u8dc3\u200b\u4e00\u4e2a\u200b\u5355\u4f4d\u200b\uff08\u200b\u5373\u200b\u53ea\u80fd\u200b\u4ece\u200b\u5355\u5143\u683c\u200b 1 \u200b\u8df3\u81f3\u200b\u5355\u5143\u683c\u200b 2 \uff09\u3002</p> <p>\u200b\u5982\u679c\u200b\u9752\u86d9\u200b\u4e0a\u200b\u4e00\u6b65\u200b\u8df3\u8dc3\u200b\u4e86\u200b\u00a0<code>k</code>\u00a0\u200b\u4e2a\u200b\u5355\u4f4d\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5b83\u200b\u63a5\u4e0b\u6765\u200b\u7684\u200b\u8df3\u8dc3\u200b\u8ddd\u79bb\u200b\u53ea\u80fd\u200b\u9009\u62e9\u200b\u4e3a\u200b\u00a0<code>k - 1</code>\u3001<code>k</code>\u00a0\u200b\u6216\u200b\u00a0<code>k + 1</code> \u200b\u4e2a\u200b\u5355\u4f4d\u200b\u3002\u00a0\u200b\u53e6\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u9752\u86d9\u200b\u53ea\u80fd\u200b\u5411\u200b\u524d\u65b9\u200b\uff08\u200b\u7ec8\u70b9\u200b\u7684\u200b\u65b9\u5411\u200b\uff09\u200b\u8df3\u8dc3\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1astones = [0,1,3,5,6,8,12,17]\n\u200b\u8f93\u51fa\u200b\uff1atrue\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u9752\u86d9\u200b\u53ef\u4ee5\u200b\u6210\u529f\u200b\u8fc7\u6cb3\u200b\uff0c\u200b\u6309\u7167\u200b\u5982\u4e0b\u200b\u65b9\u6848\u200b\u8df3\u8dc3\u200b\uff1a\u200b\u8df3\u200b 1 \u200b\u4e2a\u200b\u5355\u4f4d\u200b\u5230\u200b\u7b2c\u200b 2 \u200b\u5757\u200b\u77f3\u5b50\u200b, \u200b\u7136\u540e\u200b\u8df3\u200b 2 \u200b\u4e2a\u200b\u5355\u4f4d\u200b\u5230\u200b\u7b2c\u200b 3 \u200b\u5757\u200b\u77f3\u5b50\u200b, \u200b\u63a5\u7740\u200b \u200b\u8df3\u200b 2 \u200b\u4e2a\u200b\u5355\u4f4d\u200b\u5230\u200b\u7b2c\u200b 4 \u200b\u5757\u200b\u77f3\u5b50\u200b, \u200b\u7136\u540e\u200b\u8df3\u200b 3 \u200b\u4e2a\u200b\u5355\u4f4d\u200b\u5230\u200b\u7b2c\u200b 6 \u200b\u5757\u200b\u77f3\u5b50\u200b, \u200b\u8df3\u200b 4 \u200b\u4e2a\u200b\u5355\u4f4d\u200b\u5230\u200b\u7b2c\u200b 7 \u200b\u5757\u200b\u77f3\u5b50\u200b, \u200b\u6700\u540e\u200b\uff0c\u200b\u8df3\u200b 5 \u200b\u4e2a\u200b\u5355\u4f4d\u200b\u5230\u200b\u7b2c\u200b 8 \u200b\u4e2a\u200b\u77f3\u5b50\u200b\uff08\u200b\u5373\u200b\u6700\u540e\u200b\u4e00\u5757\u200b\u77f3\u5b50\u200b\uff09\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1astones = [0,1,2,3,4,8,9,11]\n\u200b\u8f93\u51fa\u200b\uff1afalse\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u8fd9\u200b\u662f\u56e0\u4e3a\u200b\u7b2c\u200b 5 \u200b\u548c\u200b\u7b2c\u200b 6 \u200b\u4e2a\u200b\u77f3\u5b50\u200b\u4e4b\u95f4\u200b\u7684\u200b\u95f4\u8ddd\u200b\u592a\u200b\u5927\u200b\uff0c\u200b\u6ca1\u6709\u200b\u53ef\u9009\u200b\u7684\u200b\u65b9\u6848\u200b\u4f9b\u200b\u9752\u86d9\u200b\u8df3\u8dc3\u200b\u8fc7\u53bb\u200b\u3002\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>2 &lt;= stones.length &lt;= 2000</code></li> <li><code>0 &lt;= stones[i] &lt;= 2^31 - 1</code></li> <li><code>stones[0] == 0</code></li> </ul> <p>Reference</p>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/403/#_1","title":"\u9898\u89e3","text":"<p>\u200b\u6839\u636e\u200b\u9898\u610f\u200b\uff0c\u200b\u5728\u200b\u4efb\u4f55\u200b\u72b6\u6001\u200b\uff0c\u200b\u9752\u86d9\u200b\u90fd\u200b\u6700\u200b\u591a\u200b\u53ea\u6709\u200b\u4e09\u79cd\u200b\u72b6\u6001\u200b\u53ef\u4ee5\u200b\u9009\u62e9\u200b\uff0c\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u6df1\u5ea6\u200b\u4f18\u5148\u200b\u641c\u7d22\u200b\u67e5\u627e\u200b\u6240\u6709\u200b\u7684\u200b\u72b6\u6001\u200b\u3002\u200b\u5047\u8bbe\u200b\u9752\u86d9\u200b\u8df3\u200b\u4e86\u200b\\(k\\)\u200b\u683c\u200b\u8fbe\u5230\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b</p> <ul> <li>\u200b\u5f53\u200b\u9752\u86d9\u200b\u8fbe\u5230\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u65f6\u200b\u8fd4\u56de\u200b<code>true</code>\uff0c</li> <li>\u200b\u5f53\u200b\u9752\u86d9\u200b\u5230\u8fbe\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u65f6\u200b\uff0c\u200b\u68c0\u67e5\u200b\u524d\u9762\u200b\u7684\u200b\\(k-1, k, k+1\\)\u200b\u4e2a\u200b\u5355\u5143\u683c\u200b\u662f\u5426\u200b\u6709\u200b\u77f3\u5b50\u200b\uff0c</li> <li>\u200b\u5f53\u200b\u9752\u86d9\u200b\u65e0\u6cd5\u200b\u7ee7\u7eed\u200b\u5411\u524d\u200b\u79fb\u52a8\u200b\u65f6\u200b\u8fd4\u56de\u200b<code>false</code>\u200b\u5e76\u200b\u8fdb\u884c\u200b\u56de\u6eaf\u200b\u3002</li> </ul> <pre><code>bool dfs(int *stones, int stonesSize, int currentPos, int lastStep)\n{\n    if (currentPos == stonesSize - 1)\n        return true;\n    int i = 0, j = 0, cur_id = stones[currentPos];\n    bool ret = false;\n    for (i = -1; i &lt; 2; i++)\n    {\n        if (lastStep + i &lt;= 0)\n            continue;\n        for (j = currentPos + 1; !ret &amp;&amp; j &lt; stonesSize &amp;&amp; stones[j] &lt;= cur_id + lastStep + i; j++)\n            if (stones[j] == cur_id + lastStep + i)\n                ret = ret || dfs(stones, stonesSize, j, lastStep + i);\n    }\n    return ret;\n}\n\nbool canCross(int* stones, int stonesSize){\n    return dfs(stones, stonesSize, 0, 0);\n}\n</code></pre> <p>\u200b\u5982\u200b\u4e0a\u200bdfs\u200b\u7b97\u6cd5\u200b\u4f1a\u200b\u5bf9\u200b\u6240\u6709\u200b\u7684\u200b\u5206\u652f\u200b\u8fdb\u884c\u200b\u904d\u5386\u200b\uff0c\u200b\u76f4\u5230\u200b\u627e\u51fa\u200b\u6700\u7ec8\u200b\u7ed3\u679c\u200b\u3002\u200b\u4f1a\u200b\u9020\u6210\u200b\u5927\u91cf\u200b\u65f6\u95f4\u200b\u7684\u200b\u6d6a\u8d39\u200b\u3002\u200b\u6784\u9020\u200b\u5982\u4e0b\u200b\u8f93\u5165\u200b\u6570\u636e\u200b\u5373\u53ef\u200b\u4f7f\u8be5\u200b\u7b97\u6cd5\u200b\u8d85\u65f6\u200b\uff1a</p> <pre><code>[0,1,2,3,4,5,...,998, +infty]\n</code></pre> <p>\u200b\u5176\u4e2d\u200b<code>+infty</code>\u200b\u6307\u200b\u5145\u5206\u200b\u5927\u200b\u7684\u200b\u6574\u6570\u200b\u3002</p> <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u52a0\u5165\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\uff0c\u200b\u7528\u4e8e\u200b\u8bb0\u5fc6\u200b\u4e0d\u540c\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u5230\u200b\u7ec8\u70b9\u200b\u7684\u200b\u53ef\u8fbe\u6027\u200b\uff1a</p> <pre><code>bool dfs(int *stones, int *buf, int stonesSize, int currentPos, int lastStep)\n{\n    if (buf[currentPos] != -1)\n        return buf[currentPos];\n    if (currentPos == stonesSize - 1)\n        return true;\n    int i = 0, j = 0, cur_id = stones[currentPos];\n    bool ret = false;\n    for (i = -1; i &lt; 2; i++)\n    {\n        if (lastStep + i &lt;= 0)\n            continue;\n        for (j = currentPos + 1; !ret &amp;&amp; j &lt; stonesSize &amp;&amp; stones[j] &lt;= cur_id + lastStep + i; j++)\n            if (stones[j] == cur_id + lastStep + i)\n                ret = ret || dfs(stones, buf, stonesSize, j, lastStep + i);\n    }\n    buf[currentPos] = ret;\n    return ret;\n}\n\nbool canCross(int* stones, int stonesSize){\n    int *buf = (int *)malloc(sizeof(int) * stonesSize);\n    memset(buf, 0xff, sizeof(int) * stonesSize);\n    return dfs(stones, buf, stonesSize, 0, 0);\n}\n</code></pre> <p>\u200b\u4f46\u200b\u8fd9\u4e2a\u200b\u7b97\u6cd5\u200b\u53ea\u80fd\u200b\u901a\u8fc7\u200b\u4e00\u90e8\u5206\u200b\u6d4b\u4f8b\u200b\uff0c\u200b\u90e8\u5206\u200b\u6d4b\u4f8b\u200b\u65e0\u6cd5\u200b\u901a\u8fc7\u200b\uff08\u200b\u5982\u200b\u793a\u4f8b\u200b1\uff0c<code>[0,1,3,5,6,8,12,17]</code>\uff09\u3002\u200b\u6211\u4eec\u200b\u67e5\u770b\u200b\u4e00\u4e0b\u200b\u9752\u86d9\u200b\u5728\u200b\u8282\u70b9\u200b\u95f4\u200b\u8df3\u8dc3\u200b\u7684\u200b\u60c5\u51b5\u200b\uff1a</p> <p></p> <p>\u200b\u5f53\u200b\u7b97\u6cd5\u200b\u8d70\u200b\u5230\u200b\u8282\u70b9\u200b<code>5</code>\u200b\u65f6\u200b\uff0c\u200b\u9996\u5148\u200b\u4f1a\u200b\u5c1d\u8bd5\u200b\u8def\u5f84\u200b<code>5-&gt;6-&gt;8</code>\uff0c\u200b\u4f46\u200b\u6b64\u65f6\u200b\u5728\u200b\u8282\u70b9\u200b<code>8</code>\u200b\u9752\u86d9\u200b\u6700\u200b\u591a\u200b\u53ea\u80fd\u200b\u8df3\u200b<code>3</code>\u200b\u6b65\u200b\uff0c\u200b\u4ece\u800c\u200b\u88ab\u200b\u8bb0\u5fc6\u200b\u5316\u200b\u6807\u8bb0\u200b\u4e3a\u200b\u4e0d\u53ef\u200b\u5230\u8fbe\u200b\u7ec8\u70b9\u200b\uff0c\u200b\u4f46\u200b\u5b9e\u9645\u4e0a\u200b\u5982\u679c\u200b\u76f4\u63a5\u200b\u91c7\u53d6\u200b\u8def\u5f84\u200b<code>5-&gt;8</code>\u200b\u5219\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u8282\u70b9\u200b<code>8</code>\u200b\u8df3\u200b\u5230\u200b\u8282\u70b9\u200b<code>12</code>\u3002\u200b\u5373\u200b\u67d0\u4e2a\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u7ec8\u70b9\u200b\u53ef\u8fbe\u6027\u200b\u53d7\u5230\u200b\u4e0a\u200b\u4e00\u6b65\u200b\u8df3\u52a8\u200b\u6b65\u6570\u200b\u7684\u200b\u5f71\u54cd\u200b\uff0c\u200b\u6211\u4eec\u200b\u5728\u200b\u8fdb\u884c\u200b\u8bb0\u5fc6\u200b\u5316\u200b\u65f6\u200b\u9700\u8981\u200b\u8bb0\u5fc6\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u5728\u200b\u6bcf\u4e2a\u200b\u8df3\u52a8\u200b\u6b65\u6570\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u7684\u200b\u53ef\u8fbe\u6027\u200b\u3002</p> <p>\u200b\u5982\u4e0b\u200b\u4f7f\u7528\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u4ee3\u66ff\u200b\u904d\u5386\u200b\uff0c\u200b\u5e76\u200b\u4f7f\u7528\u200b\u62c9\u94fe\u200b\u6cd5\u200b\u5b58\u50a8\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u7684\u200b\u53ef\u8fbe\u6027\u200b\uff0c\u200b\u94fe\u8868\u200b\u8282\u70b9\u200b\u4e2d\u200b\u5b58\u50a8\u200b\u76f8\u5e94\u200b\u7684\u200b\u8df3\u52a8\u200b\u6b65\u6570\u200b\u3002</p> <pre><code>struct BufNode\n{\n    int success;\n    int lastStep;\n    struct BufNode *next;\n};\n\nstruct BufNode *getNode(int success, int lastStep, struct BufNode *next)\n{\n    struct BufNode *ret = (struct BufNode *)malloc(sizeof(struct BufNode));\n    ret-&gt;success = success;\n    ret-&gt;lastStep = lastStep;\n    ret-&gt;next = next;\n    return ret;\n}\n\nbool check(struct BufNode *buf, int lastStep, int *success)\n{\n    if (buf == NULL)\n        return NULL;\n    if (buf-&gt;lastStep == lastStep)\n    {\n        if (success)\n            *success = buf-&gt;success;\n        return true;\n    }\n    return check(buf-&gt;next, lastStep, success);\n}\n\nint bSearch(int *stones, int lo, int hi, int target)\n{\n    int mid;\n    while (lo &lt; hi)\n    {\n        mid = (lo + hi) &gt;&gt; 1;\n        if (target &lt; stones[mid])\n            hi = mid;\n        else\n            lo = mid + 1;\n    }\n    return lo - 1;\n}\n\nbool dfs(int *stones, struct BufNode **buf, int stonesSize, int currentPos, int lastStep)\n{\n    int success = false;\n    if (check(buf[currentPos], lastStep, &amp;success))\n        return success;\n    if (currentPos == stonesSize - 1)\n        return true;\n    int i = 0, j = 0, cur_id = stones[currentPos];\n    bool ret = false;\n    for (i = -1; i &lt; 2; i++)\n    {\n        if (lastStep + i &lt;= 0)\n            continue;\n        j = bSearch(stones, currentPos + 1, stonesSize, cur_id + lastStep + i);\n        if (stones[j] == cur_id + lastStep + i)\n            ret = ret || dfs(stones, buf, stonesSize, j, lastStep + i);\n    }\n    buf[currentPos] = getNode(ret, lastStep, buf[currentPos]);\n    return ret;\n}\n\nbool canCross(int* stones, int stonesSize){\n    struct BufNode **buf = (struct BufNode **)malloc(sizeof(struct BufNode *) * stonesSize);\n    memset(buf, 0, sizeof(struct BufNode *) * stonesSize);\n    return dfs(stones, buf, stonesSize, 0, 0);\n}\n</code></pre>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/42/","title":"42. \u200b\u63a5\u200b\u96e8\u6c34","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u56f0\u96be\u200b</p>","tags":["\u6808","\u6570\u7ec4","\u53cc\u6307\u9488","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/42/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u00a0<code>n</code> \u200b\u4e2a\u200b\u975e\u8d1f\u200b\u6574\u6570\u200b\u8868\u793a\u200b\u6bcf\u4e2a\u200b\u5bbd\u5ea6\u200b\u4e3a\u200b <code>1</code> \u200b\u7684\u200b\u67f1\u5b50\u200b\u7684\u200b\u9ad8\u5ea6\u200b\u56fe\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u6309\u6b64\u200b\u6392\u5217\u200b\u7684\u200b\u67f1\u5b50\u200b\uff0c\u200b\u4e0b\u96e8\u200b\u4e4b\u540e\u200b\u80fd\u63a5\u200b\u591a\u5c11\u200b\u96e8\u6c34\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p></p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aheight = [0,1,0,2,1,0,1,3,2,1,2,1]\n\u200b\u8f93\u51fa\u200b\uff1a6\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u4e0a\u9762\u200b\u662f\u200b\u7531\u200b\u6570\u7ec4\u200b [0,1,0,2,1,0,1,3,2,1,2,1] \u200b\u8868\u793a\u200b\u7684\u200b\u9ad8\u5ea6\u200b\u56fe\u200b\uff0c\u200b\u5728\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u63a5\u200b 6 \u200b\u4e2a\u200b\u5355\u4f4d\u200b\u7684\u200b\u96e8\u6c34\u200b\uff08\u200b\u84dd\u8272\u200b\u90e8\u5206\u200b\u8868\u793a\u200b\u96e8\u6c34\u200b\uff09\u3002 \n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aheight = [4,2,0,3,2,5]\n\u200b\u8f93\u51fa\u200b\uff1a9\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>n == height.length</code></li> <li><code>0 &lt;= n &lt;= 3 * 10^4</code></li> <li><code>0 &lt;= height[i] &lt;= 10^5</code></li> </ul> <p>Reference</p> <p>\u200b\u6ce8\u200b\uff1a\u200b\u672c\u9898\u200b\u4e0e\u200b\u9762\u8bd5\u9898\u200b 17.21. \u200b\u76f4\u65b9\u56fe\u200b\u7684\u200b\u6c34\u91cf\u200b\u76f8\u540c\u200b\u3002</p>","tags":["\u6808","\u6570\u7ec4","\u53cc\u6307\u9488","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/42/#_2","title":"\u9898\u89e3","text":"<ol> <li> <p>\u200b\u5206\u6cbb\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u6c34\u200b\u7684\u200b\u9ad8\u5ea6\u200b\u4e0d\u4f1a\u200b\u9ad8\u4e8e\u200b\u6700\u9ad8\u200b\u7684\u200b\u67f1\u5b50\u200b\uff0c\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u5728\u200b\u6700\u9ad8\u200b\u7684\u200b\u67f1\u5b50\u200b\\(A\\)\u200b\u4e0e\u200b\u6b21\u200b\u9ad8\u200b\u7684\u200b\u67f1\u5b50\u200b\\(B\\)\u200b\u4e24\u5904\u200b\u8fdb\u884c\u200b\u5206\u5272\u200b\uff0c\u200b\u5206\u522b\u200b\u6c42\u89e3\u200b\u4e09\u6bb5\u200b\u5bb9\u7eb3\u200b\u7684\u200b\u6c34\u91cf\u200b\u3002</p> <p>\\(A, B\\)\u200b\u4e4b\u95f4\u200b\u5fc5\u7136\u200b\u53ef\u4ee5\u200b\u5bb9\u7eb3\u200b\u6c34\u200b\uff0c\u200b\u6c34\u200b\u7684\u200b\u91cf\u200b\u7b49\u4e8e\u200b\u5404\u4e2a\u200b\u67f1\u5b50\u200b\u5230\u6b21\u200b\u9ad8\u200b\u67f1\u5b50\u200b\u7684\u200b\u9ad8\u5ea6\u200b\u4e4b\u200b\u548c\u200b\u3002\u200b\u5176\u4ed6\u200b\u533a\u95f4\u200b\u9700\u8981\u200b\u9012\u5f52\u200b\u8fdb\u884c\u200b\u6c42\u89e3\u200b\u3002\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\u5206\u5272\u200b\u65f6\u200b\u5206\u5272\u200b\u70b9\u8981\u200b\u540c\u65f6\u200b\u5305\u542b\u200b\u5728\u200b\u5de6\u53f3\u200b\u4e24\u4fa7\u200b\uff0c\u200b\u5426\u5219\u200b\u65e0\u6cd5\u200b\u5bb9\u7eb3\u200b\u6c34\u200b\u3002</p> <p>\u200b\u5f53\u200b\u67f1\u5b50\u200b\u6570\u91cf\u200b\u5c0f\u4e8e\u200b3\u200b\u65f6\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u5bb9\u7eb3\u200b\u4efb\u4f55\u200b\u6c34\u200b\u3002</p> <pre><code>#define MAX(x, y) (x &gt; y ? x : y)\n#define MIN(x, y) (x &lt; y ? x : y)\n\nint trap(int* height, int heightSize){\n    int *maxLeft = (int *)malloc(sizeof(int) * heightSize),\n        *maxRight = (int *)malloc(sizeof(int) * heightSize),\n        i = 0, ret = 0;\n    if (heightSize == 0)\n        return 0;\n    maxLeft[0] = height[0];\n    maxRight[heightSize - 1] = height[heightSize - 1];\n    for (i = 1; i &lt; heightSize; i++)\n    {\n        maxLeft[i] = MAX(maxLeft[i - 1], height[i - 1]);\n        maxRight[heightSize - i - 1] = MAX(maxRight[heightSize - i], height[heightSize - i]);\n    }\n    for (i = 0; i &lt; heightSize; i++)\n        ret += MAX(0, MIN(maxLeft[i], maxRight[i]) - height[i]);\n    return ret;\n}\n</code></pre> <p>\u200b\u603b\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(\\mathcal O(N)\\)\u3002</p> </li> <li> <p>\u200b\u76f4\u63a5\u200b\u601d\u8def\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u6bcf\u4e2a\u200b\u67f1\u5b50\u200b\uff0c\u200b\u5176\u200b\u5bb9\u7eb3\u200b\u6c34\u540e\u200b\u7684\u200b\u9ad8\u5ea6\u200b\uff08\u200b\u67f1\u5b50\u200b\u9ad8\u5ea6\u200b\u51cf\u53bb\u200b\u6c34\u200b\u9ad8\u5ea6\u200b\uff09\u200b\u7b49\u4e8e\u200b\u8be5\u200b\u67f1\u5b50\u200b\u5de6\u4fa7\u200b\u6700\u9ad8\u200b\u67f1\u5b50\u200b\u7684\u200b\u9ad8\u5ea6\u200b\u4e0e\u200b\u53f3\u4fa7\u200b\u6700\u9ad8\u200b\u67f1\u5b50\u200b\u7684\u200b\u9ad8\u5ea6\u200b\u7684\u200b\u6700\u5c0f\u503c\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u6bcf\u4e2a\u200b\u67f1\u5b50\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7edf\u8ba1\u200b\u5728\u200b\u5176\u200b\u5de6\u4fa7\u200b\u6700\u9ad8\u200b\u67f1\u5b50\u200b\u7684\u200b\u9ad8\u5ea6\u200b\u4e0e\u200b\u5728\u200b\u5176\u200b\u53f3\u4fa7\u200b\u6700\u9ad8\u200b\u67f1\u5b50\u200b\u7684\u200b\u9ad8\u5ea6\u200b\uff0c\u200b\u5b58\u50a8\u200b\u5728\u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u3002</p> <p>\u200b\u7ed3\u679c\u200b\u4e3a\u200b\u6bcf\u4e2a\u200b\u67f1\u5b50\u200b\u5bb9\u7eb3\u200b\u6c34\u540e\u200b\u7684\u200b\u9ad8\u5ea6\u200b\u4e0e\u200b\u67f1\u5b50\u200b\u9ad8\u5ea6\u200b\u4e4b\u5dee\u200b\u7684\u200b\u6c42\u548c\u200b\u3002</p> <pre><code>#define MAX(x, y) (x &gt; y ? x : y)\n#define MIN(x, y) (x &lt; y ? x : y)\n\nint trap(int* height, int heightSize){\n    int *maxLeft = (int *)malloc(sizeof(int) * heightSize),\n        *maxRight = (int *)malloc(sizeof(int) * heightSize),\n        i = 0, ret = 0;\n    if (heightSize == 0)\n        return 0;\n    maxLeft[0] = height[0];\n    maxRight[heightSize - 1] = height[heightSize - 1];\n    for (i = 1; i &lt; heightSize; i++)\n    {\n        maxLeft[i] = MAX(maxLeft[i - 1], height[i - 1]);\n        maxRight[heightSize - i - 1] = MAX(maxRight[heightSize - i], height[heightSize - i]);\n    }\n    for (i = 0; i &lt; heightSize; i++)\n        ret += MAX(0, MIN(maxLeft[i], maxRight[i]) - height[i]);\n    return ret;\n}\n</code></pre> </li> </ol>","tags":["\u6808","\u6570\u7ec4","\u53cc\u6307\u9488","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/43/","title":"43. \u200b\u5b57\u7b26\u4e32\u200b\u76f8\u4e58","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/43/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e24\u4e2a\u200b\u4ee5\u200b\u5b57\u7b26\u4e32\u200b\u5f62\u5f0f\u200b\u8868\u793a\u200b\u7684\u200b\u975e\u8d1f\u200b\u6574\u6570\u200b\u00a0<code>num1</code>\u00a0\u200b\u548c\u200b\u00a0<code>num2</code>\uff0c\u200b\u8fd4\u56de\u200b\u00a0<code>num1</code>\u00a0\u200b\u548c\u200b\u00a0<code>num2</code>\u00a0\u200b\u7684\u200b\u4e58\u79ef\u200b\uff0c\u200b\u5b83\u4eec\u200b\u7684\u200b\u4e58\u79ef\u200b\u4e5f\u200b\u8868\u793a\u200b\u4e3a\u200b\u5b57\u7b26\u4e32\u200b\u5f62\u5f0f\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1:</p> <pre><code>\u200b\u8f93\u5165\u200b: num1 = \"2\", num2 = \"3\"\n\u200b\u8f93\u51fa\u200b: \"6\"\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a02:</p> <pre><code>\u200b\u8f93\u5165\u200b: num1 = \"123\", num2 = \"456\"\n\u200b\u8f93\u51fa\u200b: \"56088\"\n</code></pre> <p>\u200b\u8bf4\u660e\u200b\uff1a</p> <ul> <li><code>num1</code>\u00a0\u200b\u548c\u200b\u00a0<code>num2</code>\u00a0\u200b\u7684\u200b\u957f\u5ea6\u200b\u5c0f\u4e8e\u200b110\u3002</li> <li><code>num1</code> \u200b\u548c\u200b\u00a0<code>num2</code> \u200b\u53ea\u200b\u5305\u542b\u200b\u6570\u5b57\u200b\u00a0<code>0-9</code>\u3002</li> <li><code>num1</code> \u200b\u548c\u200b\u00a0<code>num2</code>\u00a0\u200b\u5747\u200b\u4e0d\u200b\u4ee5\u200b\u96f6\u200b\u5f00\u5934\u200b\uff0c\u200b\u9664\u975e\u200b\u662f\u200b\u6570\u5b57\u200b <code>0</code> \u200b\u672c\u8eab\u200b\u3002</li> <li>\u200b\u4e0d\u80fd\u200b\u4f7f\u7528\u200b\u4efb\u4f55\u200b\u6807\u51c6\u200b\u5e93\u200b\u7684\u200b\u5927\u6570\u200b\u7c7b\u578b\u200b\uff08\u200b\u6bd4\u5982\u200bBigInteger\uff09\u200b\u6216\u200b\u76f4\u63a5\u200b\u5c06\u200b\u8f93\u5165\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u6574\u6570\u200b\u6765\u200b\u5904\u7406\u200b\u3002</li> </ul> <p>Reference</p>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/43/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u8ba1\u7b97\u65b9\u6cd5\u200b\u4e0e\u200b\u5217\u7ad6\u5f0f\u200b\u76f8\u540c\u200b\uff0c\u200b\u6ce8\u610f\u200b\u5bf9\u200b\u7279\u6b8a\u200b\u8f93\u5165\u200b<code>0</code>\u200b\u7684\u200b\u5904\u7406\u200b\u3002\u200b\u7ed3\u679c\u200b\u7684\u200b\u957f\u5ea6\u200b\u4e0d\u4f1a\u200b\u8d85\u8fc7\u200b\u8f93\u5165\u200b\u5b57\u7b26\u4e32\u200b\u957f\u5ea6\u200b\u4e4b\u200b\u548c\u200b\u3002</p> <pre><code>char * multiply(char * num1, char * num2){\n    if (*num1 == '0' || *num2 == '0')\n        return *num1 == '0' ? num1 : num2;\n    int len1 = strlen(num1), len2 = strlen(num2), retLen = len1 + len2, i = 0, j = 0, incre, curDigit, pos;\n    char *ret = (char *)memset(malloc(sizeof(char) * (retLen + 1)), '0', sizeof(char) * (retLen + 1)),\n         *cur = ret;\n    ret[retLen] = 0;\n    for (i = len1 - 1; i &gt;= 0; i--)\n    {\n        for (j = len2 - 1; j &gt;= 0; j--)\n        {\n            incre = (num1[i] - '0') * (num2[j] - '0');\n            curDigit = incre % 10;\n            incre /= 10;\n            pos = retLen - ((len1 - i - 1) + (len2 - j - 1)) - 1;\n            while (incre != 0 || curDigit != 0)\n            {\n                ret[pos] += curDigit;\n                incre += ret[pos] &gt; '9';\n                ret[pos] -= ret[pos] &gt; '9' ? 10 : 0;\n                curDigit = incre &gt;= 10 ? incre - 10 : incre;\n                incre = incre &gt;= 10;\n                pos--;\n            }\n        }\n    }\n    while (*cur == '0')\n        cur++;\n    return cur;\n}\n</code></pre>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/433/","title":"433. \u200b\u6700\u5c0f\u200b\u57fa\u56e0\u200b\u53d8\u5316","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/433/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u4e00\u6761\u200b\u57fa\u56e0\u200b\u5e8f\u5217\u200b\u7531\u200b\u4e00\u4e2a\u200b\u5e26\u6709\u200b8\u200b\u4e2a\u5b57\u7b26\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u8868\u793a\u200b\uff0c\u200b\u5176\u4e2d\u200b\u6bcf\u4e2a\u200b\u5b57\u7b26\u200b\u90fd\u200b\u5c5e\u4e8e\u200b <code>\"A\"</code>, <code>\"C\"</code>, <code>\"G\"</code>, <code>\"T\"</code>\u200b\u4e2d\u200b\u7684\u200b\u4efb\u610f\u200b\u4e00\u4e2a\u200b\u3002</p> <p>\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u8981\u200b\u8c03\u67e5\u200b\u4e00\u4e2a\u200b\u57fa\u56e0\u200b\u5e8f\u5217\u200b\u7684\u200b\u53d8\u5316\u200b\u3002\u200b\u4e00\u6b21\u200b\u57fa\u56e0\u200b\u53d8\u5316\u200b\u610f\u5473\u7740\u200b\u8fd9\u4e2a\u200b\u57fa\u56e0\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u200b\u53d1\u751f\u200b\u4e86\u200b\u53d8\u5316\u200b\u3002</p> <p>\u200b\u4f8b\u5982\u200b\uff0c\u200b\u57fa\u56e0\u200b\u5e8f\u5217\u200b\u7531\u200b <code>\"AACCGGTT\"</code>\u00a0\u200b\u53d8\u5316\u200b\u81f3\u200b\u00a0<code>\"AACCGGTA\"</code>\u00a0\u200b\u5373\u200b\u53d1\u751f\u200b\u4e86\u200b\u4e00\u6b21\u200b\u57fa\u56e0\u200b\u53d8\u5316\u200b\u3002</p> <p>\u200b\u4e0e\u6b64\u540c\u65f6\u200b\uff0c\u200b\u6bcf\u200b\u4e00\u6b21\u200b\u57fa\u56e0\u200b\u53d8\u5316\u200b\u7684\u200b\u7ed3\u679c\u200b\uff0c\u200b\u90fd\u200b\u9700\u8981\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5408\u6cd5\u200b\u7684\u200b\u57fa\u56e0\u200b\u4e32\u200b\uff0c\u200b\u5373\u8be5\u200b\u7ed3\u679c\u200b\u5c5e\u4e8e\u200b\u4e00\u4e2a\u200b\u57fa\u56e0\u5e93\u200b\u3002</p> <p>\u200b\u73b0\u5728\u200b\u7ed9\u5b9a\u200b3\u200b\u4e2a\u200b\u53c2\u6570\u200b \u2014 <code>start</code>, <code>end</code>, <code>bank</code>\uff0c\u200b\u5206\u522b\u200b\u4ee3\u8868\u200b\u8d77\u59cb\u200b\u57fa\u56e0\u200b\u5e8f\u5217\u200b\uff0c\u200b\u76ee\u6807\u200b\u57fa\u56e0\u200b\u5e8f\u5217\u200b\u53ca\u200b\u57fa\u56e0\u5e93\u200b\uff0c\u200b\u8bf7\u200b\u627e\u51fa\u200b\u80fd\u591f\u200b\u4f7f\u200b\u8d77\u59cb\u200b\u57fa\u56e0\u200b\u5e8f\u5217\u200b\u53d8\u5316\u200b\u4e3a\u200b\u76ee\u6807\u200b\u57fa\u56e0\u200b\u5e8f\u5217\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u6700\u5c11\u200b\u53d8\u5316\u200b\u6b21\u6570\u200b\u3002\u200b\u5982\u679c\u200b\u65e0\u6cd5\u200b\u5b9e\u73b0\u76ee\u6807\u200b\u53d8\u5316\u200b\uff0c\u200b\u8bf7\u200b\u8fd4\u56de\u200b <code>-1</code>\u3002</p> <p>\u200b\u6ce8\u610f\u200b\uff1a</p> <ul> <li>\u200b\u8d77\u59cb\u200b\u57fa\u56e0\u200b\u5e8f\u5217\u200b\u9ed8\u8ba4\u200b\u662f\u200b\u5408\u6cd5\u200b\u7684\u200b\uff0c\u200b\u4f46\u662f\u200b\u5b83\u200b\u5e76\u4e0d\u4e00\u5b9a\u200b\u4f1a\u200b\u51fa\u73b0\u200b\u5728\u200b\u57fa\u56e0\u5e93\u200b\u4e2d\u200b\u3002</li> <li>\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u8d77\u59cb\u200b\u57fa\u56e0\u200b\u5e8f\u5217\u200b\u9700\u8981\u200b\u591a\u6b21\u200b\u53d8\u5316\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5b83\u200b\u6bcf\u200b\u4e00\u6b21\u200b\u53d8\u5316\u200b\u4e4b\u540e\u200b\u7684\u200b\u57fa\u56e0\u200b\u5e8f\u5217\u200b\u90fd\u200b\u5fc5\u987b\u200b\u662f\u200b\u5408\u6cd5\u200b\u7684\u200b\u3002</li> <li>\u200b\u5047\u5b9a\u200b\u8d77\u59cb\u200b\u57fa\u56e0\u200b\u5e8f\u5217\u200b\u4e0e\u200b\u76ee\u6807\u200b\u57fa\u56e0\u200b\u5e8f\u5217\u200b\u662f\u200b\u4e0d\u200b\u4e00\u6837\u200b\u7684\u200b\u3002</li> </ul> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>start: \"AACCGGTT\"\nend:   \"AACCGGTA\"\nbank: [\"AACCGGTA\"]\n\n\u200b\u8fd4\u56de\u503c\u200b: 1\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>start: \"AACCGGTT\"\nend:   \"AAACGGTA\"\nbank: [\"AACCGGTA\", \"AACCGCTA\", \"AAACGGTA\"]\n\n\u200b\u8fd4\u56de\u503c\u200b: 2\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <pre><code>start: \"AAAAACCC\"\nend:   \"AACCCCCC\"\nbank: [\"AAAACCCC\", \"AAACCCCC\", \"AACCCCCC\"]\n\n\u200b\u8fd4\u56de\u503c\u200b: 3\n</code></pre> <p>Reference</p>","tags":["\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/433/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4f7f\u7528\u200b\u5e7f\u5ea6\u200b\u4f18\u5148\u200b\u7b97\u6cd5\u200b\u904d\u5386\u200b\u57fa\u56e0\u200b\u7684\u200b\u6240\u6709\u200b\u53ef\u80fd\u200b\u6539\u52a8\u200b\u60c5\u51b5\u200b\u3002\u200b\u57fa\u56e0\u200b\u5e8f\u5217\u200b\u957f\u5ea6\u200b\u4e3a\u200b8\uff0c\u200b\u6bcf\u6b21\u200b\u53ef\u80fd\u200b\u7684\u200b\u6539\u52a8\u200b\u60c5\u51b5\u200b\u4e3a\u200b\\(8\\times 3 = 24\\)\u200b\u79cd\u200b\uff0c\u200b\u5728\u200b\u8fd9\u200b24\u200b\u79cd\u200b\u6539\u52a8\u200b\u60c5\u51b5\u200b\u4e2d\u200b\u9009\u62e9\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6761\u4ef6\u200b\u7684\u200b\u7ed3\u679c\u200b\uff1a</p> <ul> <li>\u200b\u7ed3\u679c\u200b\u662f\u200b\u5408\u6cd5\u200b\u7684\u200b\u57fa\u56e0\u200b</li> <li>\u200b\u7ed3\u679c\u200b\u672a\u200b\u88ab\u200b\u904d\u5386\u200b\u8fc7\u200b</li> </ul> <p>\u200b\u4f7f\u7528\u200b\u54c8\u5e0c\u200b\u8868\u200b\u5b58\u50a8\u200b\u57fa\u56e0\u5e93\u200b\u548c\u200b\u5df2\u7ecf\u200b\u88ab\u200b\u904d\u5386\u200b\u8fc7\u200b\u7684\u200b\u57fa\u56e0\u200b\u3002</p> <pre><code>char *genes = \"TGCATGCA\";\n\nint getCode(char *s)\n{\n    int ret = 0;\n    switch (*s)\n    {\n    case 'A':\n        ret++;\n    case 'C':\n        ret++;\n    case 'G':\n        ret++;\n    case 'T':\n        break;\n    }\n    return ret;\n}\n\nint hash(char *s)\n{\n    char *cur = s;\n    int ret = 0;\n    while (*cur)\n    {\n        ret &lt;&lt;= 2;\n        ret += getCode(cur);\n        cur++;\n    }\n    return ret;\n}\n\nchar *dehash(int o)\n{\n    char *ret = (char *)malloc(sizeof(char) * 9);\n    ret[8] = 0;\n    for (int i = 7; i &gt;= 0; i--)\n    {\n        ret[i] = genes[o &amp; 3];\n        o &gt;&gt;= 2;\n    }\n    return ret;\n}\n\nstruct Bank {\n    char *bitmap;\n};\n\nvoid deleteBank(struct Bank *dest)\n{\n    free(dest-&gt;bitmap);\n    free(dest);\n}\n\nvoid removeGene(struct Bank *dest, char *seq)\n{\n    int i = hash(seq);\n    dest-&gt;bitmap[i &gt;&gt; 3] &amp;= ~(1 &lt;&lt; (i &amp; 7));\n}\n\nvoid addGene(struct Bank *dest, char *seq)\n{\n    int i = hash(seq);\n    dest-&gt;bitmap[i &gt;&gt; 3] |= 1 &lt;&lt; (i &amp; 7);\n}\n\nbool queryGene(struct Bank *dest, char *seq)\n{\n    int i = hash(seq);\n    return dest-&gt;bitmap[i &gt;&gt; 3] &amp; (1 &lt;&lt; (i &amp; 7));\n}\n\nvoid merge(struct Bank *dest, struct Bank *src)\n{\n    int i = 0;\n    for (i = 0; i &lt; 8192; i++)\n        dest-&gt;bitmap[i] |= src-&gt;bitmap[i];\n    deleteBank(src);\n}\n\nstruct Bank *getBank(char **bank, int bankSize)\n{\n    struct Bank *ret = (struct Bank *)malloc(sizeof(struct Bank));\n    ret-&gt;bitmap = (char *)malloc(sizeof(char) * 8192);\n    memset(ret-&gt;bitmap, 0, sizeof(char) * 8192);\n    for (int i = 0; i &lt; bankSize; i++)\n        addGene(ret, bank[i]);\n    return ret;\n}\n\nstruct Bank *step(char *current, char *end, struct Bank *passed, struct Bank *fullBank, int *count)\n{\n    int startHash = hash(current);\n    struct Bank *ret = getBank(NULL, 0);\n    addGene(passed, current);\n    for (int i = 0; i &lt; 8; i++)\n    {\n        for (int j = 0; j &lt; 4; j++)\n        {\n            current[i] = genes[getCode(current + i) + 1];\n            if (startHash == hash(current))\n                continue;\n            if (!queryGene(fullBank, current))\n                continue;\n            if (queryGene(passed, current))\n                continue;\n            addGene(ret, current);\n            (*count)++;\n        }\n    }\n    return ret;\n}\n\nstruct Bank *stepBank(struct Bank *current, char *end, struct Bank *passed, struct Bank *fullBank, int* count)\n{\n    int index = 0;\n    struct Bank *ret = getBank(NULL, 0);\n    char *temp = NULL;\n    for (int i = 0; i &lt; 8192; i++)\n    {\n        if (current-&gt;bitmap[i])\n        {\n            index = i &lt;&lt; 3;\n            for (int j = 0; j &lt; 8; j++)\n            {\n                if (current-&gt;bitmap[i] &amp; (1 &lt;&lt; j))\n                {\n                    index += j;\n                    temp = dehash(index);\n                    merge(ret, step(temp, end, passed, fullBank, count));\n                    free(temp);\n                }\n            }\n        }\n    }\n    return ret;\n}\n\nint minMutation(char * start, char * end, char ** bank, int bankSize){\n    struct Bank *fullBank = getBank(bank, bankSize), *passed = getBank(NULL, 0);\n    struct Bank *temp = getBank(NULL, 0), *temp2 = NULL;\n    addGene(temp, start);\n    int ret = 0, modified = 0;\n    while (!queryGene(temp, end))\n    {\n        modified = 0;\n        temp2 = stepBank(temp, end, passed, fullBank, &amp;modified);\n        deleteBank(temp);\n        temp = temp2;\n        if (!modified)\n            return -1;\n        ret++;\n    }\n    return ret;\n}\n</code></pre>","tags":["\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/45/","title":"45. \u200b\u8df3\u8dc3\u200b\u6e38\u620f\u200b II","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u8d2a\u5fc3","\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/45/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u957f\u5ea6\u200b\u4e3a\u200b <code>n</code> \u200b\u7684\u200b 0 \u200b\u7d22\u5f15\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b <code>nums</code>\u3002\u200b\u521d\u59cb\u200b\u4f4d\u7f6e\u200b\u4e3a\u200b <code>nums[0]</code>\u3002</p> <p>\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b <code>nums[i]</code> \u200b\u8868\u793a\u200b\u4ece\u200b\u7d22\u5f15\u200b <code>i</code> \u200b\u5411\u200b\u540e\u200b\u8df3\u8f6c\u200b\u7684\u200b\u6700\u5927\u200b\u957f\u5ea6\u200b\u3002\u200b\u6362\u53e5\u8bdd\u8bf4\u200b\uff0c\u200b\u5982\u679c\u200b\u4f60\u200b\u5728\u200b <code>nums[i]</code> \u200b\u5904\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u8df3\u8f6c\u200b\u5230\u200b\u4efb\u610f\u200b <code>nums[i + j]</code> \u200b\u5904\u200b:</p> <ul> <li><code>0 &lt;= j &lt;= nums[i]</code></li> <li><code>i + j &lt; n</code></li> </ul> <p>\u200b\u8fd4\u56de\u200b\u5230\u8fbe\u200b <code>nums[n - 1]</code> \u200b\u7684\u200b\u6700\u5c0f\u200b\u8df3\u8dc3\u200b\u6b21\u6570\u200b\u3002\u200b\u751f\u6210\u200b\u7684\u200b\u6d4b\u8bd5\u7528\u4f8b\u200b\u53ef\u4ee5\u200b\u5230\u8fbe\u200b <code>nums[n - 1]</code>\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1:</p> <pre><code>\u200b\u8f93\u5165\u200b: nums = [2,3,1,1,4]\n\u200b\u8f93\u51fa\u200b: 2\n\u200b\u89e3\u91ca\u200b: \u200b\u8df3\u200b\u5230\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u6700\u5c0f\u200b\u8df3\u8dc3\u200b\u6570\u662f\u200b 2\u3002\n     \u200b\u4ece\u200b\u4e0b\u6807\u200b\u4e3a\u200b 0 \u200b\u8df3\u200b\u5230\u200b\u4e0b\u6807\u200b\u4e3a\u200b 1 \u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u8df3\u200b 1 \u200b\u6b65\u200b\uff0c\u200b\u7136\u540e\u200b\u8df3\u200b 3 \u200b\u6b65\u200b\u5230\u8fbe\u200b\u6570\u7ec4\u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2:</p> <pre><code>\u200b\u8f93\u5165\u200b: nums = [2,3,0,1,4]\n\u200b\u8f93\u51fa\u200b: 2\n</code></pre> <p>\u200b\u63d0\u793a\u200b:</p> <ul> <li><code>1 &lt;= nums.length &lt;= 10^4</code></li> <li><code>0 &lt;= nums[i] &lt;= 1000</code></li> <li>\u200b\u9898\u76ee\u200b\u4fdd\u8bc1\u200b\u53ef\u4ee5\u200b\u5230\u8fbe\u200b <code>nums[n-1]</code></li> </ul> <p>Reference</p>","tags":["\u8d2a\u5fc3","\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/45/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b\u52a8\u6001\u200b\u89c4\u5212\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>dp[i]</code>\u200b\u7ef4\u62a4\u200b\u4ece\u200b\u7b2c\u200b<code>i</code>\u200b\u4e2a\u200b\u4f4d\u7f6e\u200b\u5230\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u6700\u5c0f\u200b\u8df3\u8dc3\u200b\u6b21\u6570\u200b\uff0c\u200b\u72b6\u6001\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u4e3a\u200b\uff1a</p> \\[ \\text{dp}[i] = \\min(\\text{dp}[i:i + \\text{nums}[i] + 1]) + 1 \\] <p>\u200b\u52a8\u6001\u200b\u89c4\u5212\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(O(n^2)\\)\u3002</p> <pre><code>class Solution:\n    def jump(self, nums: List[int]) -&gt; int:\n        length = len(nums)\n        dp: List[int] = [length for _ in nums]\n        dp[-1] = 0\n        for index in range(length - 2, -1, -1):\n            end = min(length, index + nums[index] + 1)\n            dp[index] = min(dp[index:end]) + 1\n        return dp[0]\n</code></pre> <p>\u200b\u53e6\u5916\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u6b63\u5411\u200b\u904d\u5386\u200b\u6570\u7ec4\u200b\u3002\u200b\u7528\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b<code>s</code>\u200b\u8bb0\u5f55\u200b\u8df3\u8dc3\u200b\u6b21\u6570\u200b\uff0c\u200b\u7ef4\u62a4\u200b\u4e00\u4e2a\u200b\u533a\u95f4\u200b\\([l_s, r_s - 1]\\)\u200b\u8bb0\u5f55\u200b\u6700\u5c11\u200b\u9700\u8981\u200b<code>s</code>\u200b\u6b21\u200b\u8df3\u8dc3\u200b\u624d\u80fd\u200b\u5230\u8fbe\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u533a\u95f4\u200b\u3002\u200b\u5219\u200b\u81f3\u5c11\u200b\u9700\u8981\u200b<code>s + 1</code>\u200b\u6b21\u200b\u8df3\u8dc3\u200b\u624d\u80fd\u200b\u5230\u8fbe\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u533a\u95f4\u200b\u4e3a\u200b</p> \\[ [r_s, \\max_{i \\in [l_s, r_s - 1]}(i + \\text{nums}[i] + 1)] \\] <p>\u200b\u6b64\u6cd5\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(O(n)\\)\u3002</p> <pre><code>class Solution:\n    def jump(self, nums: List[int]) -&gt; int:\n        l, r, step, length = 0, 1, 0, len(nums)\n        while r &lt; length:\n            step += 1\n            new_r = r\n            for _ in range(l, r):\n                new_r = max(new_r, _ + nums[_])\n            l, r = r, new_r + 1\n        return step\n</code></pre>","tags":["\u8d2a\u5fc3","\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/46/","title":"46. \u200b\u5168\u200b\u6392\u5217","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u7ec4","\u56de\u6eaf"]},{"location":"coding/leetcode/46/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b \u200b\u6ca1\u6709\u200b\u91cd\u590d\u200b \u200b\u6570\u5b57\u200b\u7684\u200b\u5e8f\u5217\u200b\uff0c\u200b\u8fd4\u56de\u200b\u5176\u200b\u6240\u6709\u200b\u53ef\u80fd\u200b\u7684\u200b\u5168\u200b\u6392\u5217\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b:</p> <pre><code>\u200b\u8f93\u5165\u200b: [1,2,3]\n\u200b\u8f93\u51fa\u200b:\n[\n  [1,2,3],\n  [1,3,2],\n  [2,1,3],\n  [2,3,1],\n  [3,1,2],\n  [3,2,1]\n]\n</code></pre> <p>Reference</p>","tags":["\u6570\u7ec4","\u56de\u6eaf"]},{"location":"coding/leetcode/46/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4f7f\u7528\u200b\u56de\u6eaf\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u7ed9\u5b9a\u200b\u7684\u200b\u5e8f\u5217\u200b\uff1a</p> <ul> <li>\u200b\u82e5\u200b\u957f\u5ea6\u200b\u4e3a\u200b1\uff0c\u200b\u5219\u200b\u53ea\u6709\u200b\u4e00\u79cd\u200b\u6392\u5217\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b</li> <li>\u200b\u82e5\u200b\u957f\u5ea6\u200b\u5927\u4e8e\u200b1\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\uff1a<ul> <li>\u200b\u5c06\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u7b2c\u4e00\u4e2a\u200b\u6570\u200b\u653e\u5728\u200b\u6392\u5217\u200b\u7684\u200b\u7b2c\u4e00\u4f4d\u200b\uff0c\u200b\u7136\u540e\u200b\u4e0e\u200b\u540e\u9762\u200b\u90e8\u5206\u200b\u7684\u200b\u5168\u200b\u6392\u5217\u200b\u5408\u5e76\u200b</li> <li>\u200b\u5c06\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u7b2c\u4e8c\u4e2a\u200b\u6570\u200b\u653e\u5728\u200b\u6392\u5217\u200b\u7684\u200b\u7b2c\u4e00\u4f4d\u200b\uff0c\u200b\u7136\u540e\u200b\u4e0e\u200b\u540e\u9762\u200b\u90e8\u5206\u200b\u7684\u200b\u5168\u200b\u6392\u5217\u200b\u5408\u5e76\u200b</li> <li>\u2026\u2026</li> <li>\u200b\u5c06\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u6570\u200b\u653e\u5728\u200b\u6392\u5217\u200b\u7684\u200b\u7b2c\u4e00\u4f4d\u200b\uff0c\u200b\u7136\u540e\u200b\u4e0e\u200b\u540e\u9762\u200b\u90e8\u5206\u200b\u7684\u200b\u5168\u200b\u6392\u5217\u200b\u5408\u5e76\u200b</li> <li>\u200b\u6700\u7ec8\u200b\u7ed3\u679c\u200b\u5305\u542b\u200b\u5982\u200b\u4e0a\u200b\u6240\u6709\u200b\u7684\u200b\u6392\u5217\u200b\u3002</li> </ul> </li> </ul> <p>\u200b\u5bf9\u4e8e\u200b\u957f\u5ea6\u200b\u4e3a\u200b\\(n\\)\u200b\u7684\u200b\u5e8f\u5217\u200b\uff0c\u200b\u5171\u6709\u200b\\(n!\\)\u200b\u79cd\u200b\u6392\u5217\u200b\u3002</p> <pre><code>int fact(int x)\n{\n    if (!x)\n        return 0;\n    int i = 1, ret = 1;\n    for (i = 1; i &lt;= x; i++)\n        ret *= i;\n    return ret;\n}\nvoid swap(int *a, int *b)\n{\n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}\nint** permute(int* nums, int numsSize, int* returnSize, int** returnColumnSizes){\n    if (numsSize &lt; 2)\n    {\n        *returnSize = 1;\n        *returnColumnSizes = (int *)malloc(sizeof(int) * *returnSize);\n        *returnColumnSizes[0] = numsSize;\n        if (numsSize == 0)\n            return NULL;\n        int **ret = (int **)malloc(sizeof(int *) * *returnSize);\n        *ret = (int *)malloc(sizeof(int));\n        **ret = *nums;\n        return ret;\n    }\n    *returnSize = fact(numsSize);\n    *returnColumnSizes = (int *)malloc(sizeof(int *) * *returnSize);\n    int *sub = (int *)malloc(sizeof(int) * numsSize), i = 0, **rec = NULL, recSize, *recColSize,\n        **ret = (int **)malloc(sizeof(int *) * *returnSize), retpos = 0, j = 0;\n    for (i = 0; i &lt; *returnSize; i++)\n        (*returnColumnSizes)[i] = numsSize;\n    for (i = 0; i &lt; numsSize; i++)\n    {\n        sub = memcpy(sub, nums, sizeof(int) * numsSize);\n        swap(sub + i, sub);\n        rec = permute(sub + 1, numsSize - 1, &amp;recSize, &amp;recColSize);\n        for (j = 0; j &lt; recSize; j++)\n        {\n            ret[retpos] = (int *)malloc(sizeof(int) * numsSize);\n            ret[retpos][0] = sub[0];\n            memcpy(ret[retpos] + 1, rec[j], sizeof(int) * (numsSize - 1));\n            retpos++;\n        }\n    }\n    return ret;\n}\n</code></pre>","tags":["\u6570\u7ec4","\u56de\u6eaf"]},{"location":"coding/leetcode/47/","title":"47. \u200b\u5168\u200b\u6392\u5217\u200b II","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u7ec4","\u56de\u6eaf","\u6392\u5e8f"]},{"location":"coding/leetcode/47/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u53ef\u200b\u5305\u542b\u200b\u91cd\u590d\u200b\u6570\u5b57\u200b\u7684\u200b\u5e8f\u5217\u200b <code>nums</code> \uff0c\u200b\u6309\u200b\u4efb\u610f\u200b\u987a\u5e8f\u200b \u200b\u8fd4\u56de\u200b\u6240\u6709\u200b\u4e0d\u200b\u91cd\u590d\u200b\u7684\u200b\u5168\u200b\u6392\u5217\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>nums = [1,1,2]</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a <code>[[1,1,2],  [1,2,1],  [2,1,1]]</code></p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>nums = [1,2,3]</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]</code></p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 8</code></li> <li><code>-10 &lt;= nums[i] &lt;= 10</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u56de\u6eaf","\u6392\u5e8f"]},{"location":"coding/leetcode/47/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u6b64\u5904\u200b\u4f7f\u7528\u200bBFS\u200b\u7b97\u6cd5\u200b\u3002\u200b\u5c06\u200b\u6570\u7ec4\u200b\u6392\u5e8f\u200b\u540e\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u53d6\u51fa\u200b\u4e00\u4e2a\u200b\u6570\u503c\u200b\u3002\u200b\u5047\u8bbe\u200b\u5df2\u7ecf\u200b\u6784\u9020\u200b\u597d\u524d\u200b\\(k\\)\u200b\u4e2a\u503c\u200b\u7684\u200b\u5168\u200b\u6392\u5217\u200b\uff0c\u200b\u65b0\u200b\u53d6\u51fa\u200b\u7684\u200b\u6570\u503c\u200b\u53ef\u4ee5\u200b\u52a0\u5165\u200b\u5230\u200b\\(k\\)\u200b\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u5168\u200b\u6392\u5217\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u5f97\u5230\u200b\\(k+1\\)\u200b\u4e2a\u503c\u200b\u7684\u200b\u5168\u200b\u6392\u5217\u200b\u3002\u200b\u6ce8\u610f\u200b\u5bf9\u200b\u91cd\u590d\u200b\u6570\u503c\u200b\u7684\u200b\u5904\u7406\u200b\uff0c\u200b\u5f53\u65b0\u200b\u52a0\u5165\u200b\u7684\u200b\u6570\u200b\u548c\u200b\u540e\u200b\u4e00\u4e2a\u200b\u6570\u200b\u76f8\u540c\u200b\u65f6\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u907f\u514d\u200b\u751f\u6210\u200b\u91cd\u590d\u200b\u7684\u200b\u6392\u5217\u200b\uff0c\u200b\u9700\u8981\u200b\u8df3\u8fc7\u200b\u540e\u7eed\u200b\u6240\u6709\u200b\u7684\u200b\u904d\u5386\u200b\u6d41\u7a0b\u200b\u3002</p> <pre><code>class Solution:\n    def permuteUnique(self, nums: List[int]) -&gt; List[List[int]]:\n        sorted_nums = sorted(nums)\n        result = [[]]\n        step = 0\n        for num in sorted_nums:\n            new_result = []\n            for record in result:\n                for pos in range(step + 1):\n                    # Insert Element\n                    new_result.append([*record[:pos], num, *record[pos:]])\n                    # Skip if duplicate\n                    if pos &lt; step and record[pos] == num:\n                        break\n            step += 1\n            result = new_result\n        return result\n</code></pre>","tags":["\u6570\u7ec4","\u56de\u6eaf","\u6392\u5e8f"]},{"location":"coding/leetcode/48/","title":"48. \u200b\u65cb\u8f6c\u200b\u56fe\u50cf","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/48/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b n\u00a0\u00d7\u00a0n \u200b\u7684\u200b\u4e8c\u7ef4\u200b\u77e9\u9635\u200b\u8868\u793a\u200b\u4e00\u4e2a\u200b\u56fe\u50cf\u200b\u3002</p> <p>\u200b\u5c06\u200b\u56fe\u50cf\u200b\u987a\u65f6\u9488\u200b\u65cb\u8f6c\u200b 90 \u200b\u5ea6\u200b\u3002</p> <p>\u200b\u8bf4\u660e\u200b\uff1a</p> <p>\u200b\u4f60\u200b\u5fc5\u987b\u200b\u5728\u200b\u539f\u5730\u200b\u65cb\u8f6c\u200b\u56fe\u50cf\u200b\uff0c\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u4f60\u200b\u9700\u8981\u200b\u76f4\u63a5\u200b\u4fee\u6539\u200b\u8f93\u5165\u200b\u7684\u200b\u4e8c\u7ef4\u200b\u77e9\u9635\u200b\u3002\u200b\u8bf7\u200b\u4e0d\u8981\u200b\u4f7f\u7528\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u77e9\u9635\u200b\u6765\u200b\u65cb\u8f6c\u200b\u56fe\u50cf\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u7ed9\u5b9a\u200b matrix = \n[\n  [1,2,3],\n  [4,5,6],\n  [7,8,9]\n],\n\n\u200b\u539f\u5730\u200b\u65cb\u8f6c\u200b\u8f93\u5165\u200b\u77e9\u9635\u200b\uff0c\u200b\u4f7f\u200b\u5176\u200b\u53d8\u4e3a\u200b:\n[\n  [7,4,1],\n  [8,5,2],\n  [9,6,3]\n]\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u7ed9\u5b9a\u200b matrix =\n[\n  [ 5, 1, 9,11],\n  [ 2, 4, 8,10],\n  [13, 3, 6, 7],\n  [15,14,12,16]\n], \n\n\u200b\u539f\u5730\u200b\u65cb\u8f6c\u200b\u8f93\u5165\u200b\u77e9\u9635\u200b\uff0c\u200b\u4f7f\u200b\u5176\u200b\u53d8\u4e3a\u200b:\n[\n  [15,13, 2, 5],\n  [14, 3, 4, 1],\n  [12, 6, 8, 9],\n  [16, 7,10,11]\n]\n</code></pre> <p>Reference</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/48/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u5c06\u200b\u77e9\u9635\u200b\u8f6c\u7f6e\u200b\u540e\u200b\u53cd\u8f6c\u200b\u5404\u5217\u200b\u7684\u200b\u987a\u5e8f\u200b\u5373\u53ef\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>void rotate(int** matrix, int matrixSize, int* matrixColSize){\n    int i = 0, j = 0, temp;\n    for (i = 0; i &lt; matrixSize; i++)\n    {\n        for (j = i; j &lt; matrixSize; j++)\n        {\n            temp = matrix[i][j];\n            matrix[i][j] = matrix[j][i];\n            matrix[j][i] = temp;\n        }\n    }\n    for (i = 0; i &lt; matrixSize; i++)\n    {\n        for (j = 0; j &lt; matrixSize / 2; j++)\n        {\n            temp = matrix[i][j];\n            matrix[i][j] = matrix[i][matrixSize - j - 1];\n            matrix[i][matrixSize - j - 1] = temp;\n        }\n    }\n}\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/488/","title":"488. \u200b\u7956\u739b\u200b\u6e38\u620f","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u56f0\u96be\u200b</p>","tags":["\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"]},{"location":"coding/leetcode/488/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u56de\u5fc6\u200b\u4e00\u4e0b\u200b\u7956\u739b\u200b\u6e38\u620f\u200b\u3002\u200b\u73b0\u5728\u200b\u684c\u4e0a\u200b\u6709\u200b\u4e00\u4e32\u200b\u7403\u200b\uff0c\u200b\u989c\u8272\u200b\u6709\u200b\u7ea2\u8272\u200b(R)\uff0c\u200b\u9ec4\u8272\u200b(Y)\uff0c\u200b\u84dd\u8272\u200b(B)\uff0c\u200b\u7eff\u8272\u200b(G)\uff0c\u200b\u8fd8\u6709\u200b\u767d\u8272\u200b(W)\u3002 \u200b\u73b0\u5728\u200b\u4f60\u200b\u624b\u91cc\u200b\u4e5f\u200b\u6709\u200b\u51e0\u4e2a\u200b\u7403\u200b\u3002</p> <p>\u200b\u6bcf\u200b\u4e00\u6b21\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u624b\u91cc\u200b\u7684\u200b\u7403\u9009\u200b\u4e00\u4e2a\u200b\uff0c\u200b\u7136\u540e\u200b\u628a\u200b\u8fd9\u4e2a\u200b\u7403\u200b\u63d2\u5165\u200b\u5230\u200b\u4e00\u4e32\u200b\u7403\u4e2d\u200b\u7684\u200b\u67d0\u4e2a\u200b\u4f4d\u7f6e\u200b\u4e0a\u200b\uff08\u200b\u5305\u62ec\u200b\u6700\u200b\u5de6\u7aef\u200b\uff0c\u200b\u6700\u200b\u53f3\u7aef\u200b\uff09\u3002\u200b\u63a5\u7740\u200b\uff0c\u200b\u5982\u679c\u200b\u6709\u200b\u51fa\u73b0\u200b\u4e09\u4e2a\u200b\u6216\u8005\u200b\u4e09\u4e2a\u200b\u4ee5\u4e0a\u200b\u989c\u8272\u200b\u76f8\u540c\u200b\u7684\u200b\u7403\u200b\u76f8\u8fde\u200b\u7684\u8bdd\u200b\uff0c\u200b\u5c31\u200b\u628a\u200b\u5b83\u4eec\u200b\u79fb\u200b\u9664\u6389\u200b\u3002\u200b\u91cd\u590d\u200b\u8fd9\u4e00\u200b\u6b65\u9aa4\u200b\u76f4\u5230\u200b\u684c\u4e0a\u200b\u6240\u6709\u200b\u7684\u200b\u7403\u200b\u90fd\u200b\u88ab\u200b\u79fb\u9664\u200b\u3002</p> <p>\u200b\u627e\u5230\u200b\u63d2\u5165\u200b\u5e76\u200b\u53ef\u4ee5\u200b\u79fb\u200b\u9664\u6389\u200b\u684c\u4e0a\u200b\u6240\u6709\u200b\u7403\u6240\u200b\u9700\u200b\u7684\u200b\u6700\u5c11\u200b\u7684\u200b\u7403\u6570\u200b\u3002\u200b\u5982\u679c\u200b\u4e0d\u80fd\u200b\u79fb\u9664\u200b\u684c\u4e0a\u200b\u6240\u6709\u200b\u7684\u200b\u7403\u200b\uff0c\u200b\u8f93\u51fa\u200b <code>-1</code> \u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aboard = \"WRRBBW\", hand = \"RB\"\n\u200b\u8f93\u51fa\u200b\uff1a-1\n\u200b\u89e3\u91ca\u200b\uff1aWRRBBW -&gt; WRR[R]BBW -&gt; WBBW -&gt; WBB[B]W -&gt; WW\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aboard = \"WWRRBBWW\", hand = \"WRBRW\"\n\u200b\u8f93\u51fa\u200b\uff1a2\n\u200b\u89e3\u91ca\u200b\uff1aWWRRBBWW -&gt; WWRR[R]BBWW -&gt; WWBBWW -&gt; WWBB[B]WW -&gt; WWWW -&gt; empty\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aboard = \"G\", hand = \"GGGGG\"\n\u200b\u8f93\u51fa\u200b\uff1a2\n\u200b\u89e3\u91ca\u200b\uff1aG -&gt; G[G] -&gt; GG[G] -&gt; empty \n</code></pre> <p>\u200b\u793a\u4f8b\u200b 4\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aboard = \"RBYYBBRRB\", hand = \"YRBGB\"\n\u200b\u8f93\u51fa\u200b\uff1a3\n\u200b\u89e3\u91ca\u200b\uff1aRBYYBBRRB -&gt; RBYY[Y]BBRRB -&gt; RBBBRRB -&gt; RRRB -&gt; B -&gt; B[B] -&gt; BB[B] -&gt; empty \n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5047\u8bbe\u200b\u684c\u4e0a\u200b\u4e00\u200b\u5f00\u59cb\u200b\u7684\u200b\u7403\u200b\u4e2d\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u6709\u200b\u4e09\u4e2a\u200b\u53ca\u200b\u4e09\u4e2a\u200b\u4ee5\u4e0a\u200b\u989c\u8272\u200b\u76f8\u540c\u200b\u4e14\u200b\u8fde\u200b\u7740\u200b\u7684\u200b\u7403\u200b\u3002</li> <li><code>1 &lt;= board.length &lt;= 16</code></li> <li><code>1 &lt;= hand.length &lt;= 5</code></li> <li>\u200b\u8f93\u5165\u200b\u7684\u200b\u4e24\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u5747\u200b\u4e3a\u200b\u975e\u7a7a\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u4e14\u200b\u53ea\u200b\u5305\u542b\u200b\u5b57\u7b26\u200b <code>'R','Y','B','G','W'</code>\u3002</li> </ul> <p>Reference</p>","tags":["\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"]},{"location":"coding/leetcode/488/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u5b9a\u4e49\u200b\u5f53\u524d\u200b\u6e38\u620f\u200b\u7684\u200b\u72b6\u6001\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u72b6\u6001\u200b\u7531\u200b\u684c\u4e0a\u200b\u7684\u200b\u7403\u200b\u5217\u8868\u200b\u4e0e\u200b\u624b\u4e2d\u200b\u7684\u200b\u7403\u200b\u5217\u8868\u200b\u8868\u793a\u200b\u3002\u200b\u6bcf\u6b21\u200b\u63d2\u5165\u200b\u64cd\u4f5c\u200b\u6784\u6210\u200b\u4e00\u4e2a\u200b\u72b6\u6001\u200b\u95f4\u200b\u7684\u200b\u72b6\u6001\u200b\u8f6c\u79fb\u200b\u8fc7\u7a0b\u200b\u3002\u200b\u4f7f\u7528\u200b\u4e24\u4e2a\u200b\u961f\u5217\u200b\u5b58\u50a8\u200b\u5f53\u524d\u200b\u72b6\u6001\u200b\uff0c\u200b\u548c\u200b\u5f53\u524d\u200b\u72b6\u6001\u200b\u7684\u200b \u200b\u6240\u6709\u200b \u200b\u53ef\u80fd\u200b\u8f6c\u79fb\u200b\u5230\u200b\u7684\u200b\u72b6\u6001\u200b\u3002\u200b\u518d\u200b\u5c06\u200b\u8f6c\u79fb\u200b\u5230\u200b\u7684\u200b\u72b6\u6001\u200b\u8bbe\u200b\u4e3a\u200b\u5f53\u524d\u200b\u72b6\u6001\u200b\uff0c\u200b\u7ee7\u7eed\u200b\u8fdb\u884c\u200b\u641c\u7d22\u200b\u8fc7\u7a0b\u200b\u3002\u200b\u672c\u9898\u200b\u4e2d\u200b\uff0c\u200b\u72b6\u6001\u200b\u8f6c\u79fb\u200b\u662f\u200b\u5355\u5411\u200b\u7684\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4e0d\u200b\u9700\u8981\u200b\u8003\u8651\u200b\u91cd\u590d\u200b\u7ecf\u8fc7\u200b\u4e00\u79cd\u200b\u72b6\u6001\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002</p> <p>\u200b\u7531\u4e8e\u200b\u4e00\u4e2a\u200b\u72b6\u6001\u200b\u53ef\u4ee5\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u66f4\u200b\u591a\u200b\u7684\u200b\u72b6\u6001\u200b\uff0c\u200b\u9700\u8981\u200b\u5728\u200b\u8fd9\u4e9b\u200b\u72b6\u6001\u200b\u95f4\u200b\u8fdb\u884c\u200b\u7b5b\u9009\u200b\u3002\u200b\u7b5b\u9009\u200b\u89c4\u5219\u200b\u5982\u4e0b\u200b\uff1a</p> <ol> <li>\u200b\u5f53\u200b\u63d2\u5165\u200b\u4f4d\u7f6e\u200b\u4e24\u4fa7\u200b\u7684\u200b\u989c\u8272\u200b\u4e0d\u200b\u540c\u65f6\u200b\uff0c\u200b\u65b0\u7403\u200b\u7684\u200b\u989c\u8272\u200b\u9700\u8981\u200b\u4e0e\u200b\u5de6\u53f3\u200b\u4e24\u4fa7\u200b\u5176\u4e2d\u200b\u4e00\u4e2a\u200b\u7403\u200b\u7684\u200b\u989c\u8272\u200b\u76f8\u540c\u200b</li> <li>\u200b\u5f53\u200b\u63d2\u5165\u200b\u4f4d\u7f6e\u200b\u4e24\u4fa7\u200b\u989c\u8272\u200b\u76f8\u540c\u200b\u65f6\u200b\uff0c\u200b\u65b0\u7403\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4efb\u610f\u200b\u53ef\u80fd\u200b\u7684\u200b\u989c\u8272\u200b</li> <li>\u200b\u5f53\u200b\u63d2\u5165\u200b\u4f4d\u7f6e\u200b\u4f4d\u4e8e\u200b\u7aef\u70b9\u200b\u65f6\u200b\uff0c\u200b\u65b0\u7403\u200b\u7684\u200b\u989c\u8272\u200b\u9700\u8981\u200b\u4e0e\u200b\u76f8\u90bb\u200b\u7403\u200b\u7684\u200b\u989c\u8272\u200b\u76f8\u540c\u200b</li> </ol> <p>\u200b\u5982\u200b\u4e0a\u200b\u526a\u679d\u200b\u601d\u8def\u200b\u4e0d\u4f1a\u200b\u5f71\u54cd\u200b\u6d4b\u4f8b\u200b<code>\"RRYGGYYRRYGGYYRR\" \"GGBBB\"</code>\u200b\u4e0e\u200b<code>\"RRWWRRBBRR\" \"WB\"</code>\u200b\u7b49\u200b\u9700\u8981\u200b\u5c06\u200b\u8fde\u7eed\u200b\u5e8f\u5217\u200b\u5206\u5272\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002\u200b\u4e0d\u200b\u6ee1\u8db3\u200b\u5982\u200b\u4e0a\u200b\u6761\u4ef6\u200b\u7684\u200b\u72b6\u6001\u200b\u89c6\u4e3a\u200b\u65e0\u6548\u200b\u7684\u200b\u72b6\u6001\u200b\uff0c\u200b\u76f4\u63a5\u200b\u8df3\u8fc7\u200b\u5bf9\u200b\u8fd9\u4e9b\u200b\u72b6\u6001\u200b\u7684\u200b\u641c\u7d22\u200b\u3002</p> <p>\u200b\u4f7f\u7528\u200b\u94fe\u8868\u200b\u6a21\u62df\u200b\u961f\u5217\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u94fe\u8868\u200b\u8282\u70b9\u200b\u8868\u793a\u200b\u95ee\u9898\u200b\u7684\u200b\u4e00\u4e2a\u200b\u72b6\u6001\u200b\uff0c\u200b\u7531\u4e8e\u200b\u94fe\u8868\u200b\u8282\u70b9\u200b\u9700\u8981\u200b\u591a\u6b21\u200b\u5206\u914d\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u63d0\u524d\u200b\u5206\u914d\u5185\u5b58\u200b\u6c60\u200b\u7684\u200b\u7b56\u7565\u200b\u4ee5\u200b\u51cf\u5c11\u200b<code>malloc()</code>\u200b\u7684\u200b\u8c03\u7528\u200b\u6b21\u6570\u200b\u3002</p> <pre><code>struct Queue\n{\n    char *val;\n    int colorsOnHand[5];\n    struct Queue *next;\n};\n\nstruct Queue *nodePool;\nint poolSize;\nint poolAllocated;\n\nstruct Queue *getNode(char *val, struct Queue *next, int *colorsOnHand)\n{\n    int i = 0;\n    struct Queue *ret;\n    if (!nodePool || poolAllocated &gt;= poolSize)\n    {\n        if (poolAllocated)\n            poolSize &lt;&lt;= 1;\n        else\n            poolSize = 1000;\n        poolAllocated = 0;\n        nodePool = (struct Queue *)malloc(sizeof(struct Queue) * poolSize);\n    }\n    ret = nodePool + (poolAllocated++);\n    ret-&gt;val = val;\n    ret-&gt;next = next;\n    for (i = 0; i &lt; 5; i++)\n        ret-&gt;colorsOnHand[i] = colorsOnHand[i];\n    return ret;\n}\n</code></pre> <p>\u200b\u5206\u200b\u4e24\u6b65\u200b\u8fdb\u884c\u200b\u72b6\u6001\u200b\u8f6c\u79fb\u200b\uff0c\u200b\u7b2c\u4e00\u6b65\u200b\u5148\u200b\u63d2\u5165\u200b\u4e00\u4e2a\u200b\u7403\u200b\uff0c\u200b\u7b2c\u4e8c\u6b65\u200b\u6d88\u9664\u200b\u8fde\u7eed\u200b\u7684\u200b\u7403\u200b\uff0c\u200b\u76f4\u5230\u200b\u65e0\u7403\u200b\u53ef\u6d88\u200b\u3002</p> <pre><code>char *strPool;\nint strSize;\nint strAllocated;\n\nchar *getStr(int len)\n{\n    if (!strPool || strAllocated + len &gt;= strSize)\n    {\n        if (strAllocated)\n            strSize &lt;&lt;= 1;\n        else\n            strSize = 32768;\n        strAllocated = 0;\n        strPool = (char *)malloc(sizeof(char) * strSize);\n    }\n    char *ret = strPool + strAllocated;\n    strAllocated += len;\n    return ret;\n}\n\nbool play(char *src)\n{\n    char *ptrfast = src, *ptrslow = src, cur = 0;\n    int i = 0;\n    bool flag = false;\n    while (*ptrfast)\n    {\n        if (cur == *ptrfast)\n            i++;\n        else\n        {\n            if (i &lt; 3)\n            {\n                while (i)\n                {\n                    *(ptrslow++) = cur;\n                    i--;\n                }\n            }\n            else\n                flag = true;\n            i = 1;\n            cur = *ptrfast;\n        }\n        ptrfast++;\n    }\n    if (i &lt; 3)\n    {\n        while (i)\n        {\n            *(ptrslow++) = cur;\n            i--;\n        }\n    }\n    else\n        flag = true;\n    *ptrslow = 0;\n    return flag;\n}\n\nchar *addBall(char *src, int len, char ball, int loc)\n{\n    char *ret = (char *)malloc(sizeof(char) * (len + 2));\n    ret[len + 1] = 0;\n    memcpy(ret, src, sizeof(char) * loc);\n    memcpy(ret + loc + 1, src + loc, sizeof(char) * (len - loc));\n    ret[loc] = ball;\n    return ret;\n}\n</code></pre> <pre><code>int findMinStep(char * board, char * hand) {\n    struct Queue *current = NULL, *temp = NULL;\n    char *cur = hand, *init = getStr(strlen(board) + 1), *newseq = NULL,\n         *colors = \"RYBGW\";\n    int i = 0, j = 0, len = 0, ret = 0, colorsOnHand[5] = {0}, flag;\n\n    nodePool = NULL;\n    poolSize = 0;\n    poolAllocated = 0;\n    strPool = NULL;\n    strSize = 0;\n    strAllocated = 0;\n\n    strcpy(init, board);\n    do\n        for (i = 0; i &lt; 5; i++)\n            if (*cur == colors[i])\n                colorsOnHand[i]++;\n    while (*(++cur));\n\n    current = getNode(init, NULL, colorsOnHand);\n    while (current)\n    {\n        while (current)\n        {\n            len = strlen(current-&gt;val);\n            if (!len)\n                return ret;\n            for (i = 0; i &lt;= len; i++)\n            {\n                flag = false;\n                for (j = 0; j &lt; 5; j++)\n                {\n                    if (current-&gt;colorsOnHand[j] == 0)\n                        continue;\n                    if (i &gt; 0)\n                        flag = flag || current-&gt;val[i - 1] == colors[j];\n                    if (i &lt; len)\n                        flag = flag || current-&gt;val[i] == colors[j];\n                    if (i &gt; 0 &amp;&amp; i &lt; len)\n                        flag = flag || current-&gt;val[i - 1] == current-&gt;val[i];\n                    if (!flag)\n                        continue;\n                    current-&gt;colorsOnHand[j]--;\n                    newseq = addBall(current-&gt;val, len, colors[j], i);\n                    while (play(newseq));\n                    temp = getNode(newseq, temp, current-&gt;colorsOnHand);\n                    current-&gt;colorsOnHand[j]++;\n                }\n            }\n            current = current-&gt;next;\n        }\n        ret++;\n        current = temp;\n        temp = NULL;\n    }\n    return -1;\n}\n</code></pre>","tags":["\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"]},{"location":"coding/leetcode/50/","title":"50. Pow(x, n)","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u5b66","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/50/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u5b9e\u73b0\u200b\u00a0pow(x, n)\uff0c\u200b\u5373\u200b\u8ba1\u7b97\u200b x \u200b\u7684\u200b n \u200b\u6b21\u200b\u5e42\u51fd\u6570\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a <pre><code>\u200b\u8f93\u5165\u200b: 2.00000, 10\n\u200b\u8f93\u51fa\u200b: 1024.00000\n</code></pre> \u200b\u793a\u4f8b\u200b\u00a02\uff1a <pre><code>\u200b\u8f93\u5165\u200b: 2.10000, 3\n\u200b\u8f93\u51fa\u200b: 9.26100\n</code></pre> \u200b\u793a\u4f8b\u200b\u00a03\uff1a <pre><code>\u200b\u8f93\u5165\u200b: 2.00000, -2\n\u200b\u8f93\u51fa\u200b: 0.25000\n\u200b\u89e3\u91ca\u200b: 2^(-2) = (1/2)^2 = 1/4 = 0.25\n</code></pre> \u200b\u8bf4\u660e\u200b\uff1a</p> <ul> <li>-100.0 &lt;\u00a0x\u00a0&lt; 100.0</li> <li>n\u00a0\u200b\u662f\u200b 32 \u200b\u4f4d\u6709\u200b\u7b26\u53f7\u200b\u6574\u6570\u200b\uff0c\u200b\u5176\u200b\u6570\u503c\u200b\u8303\u56f4\u200b\u662f\u200b\\([\u22122^{31},\u00a02^{31}\u00a0\u2212 1]\\)\u3002</li> </ul> <p>Reference</p>","tags":["\u6570\u5b66","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/50/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u5229\u7528\u200b\u5feb\u901f\u200b\u5e42\u200b\u7684\u200b\u601d\u8def\u200b\uff0c\u200b\u5b58\u50a8\u200b\u6b21\u6570\u200b\u4e3a\u200b2\u200b\u7684\u200b\u6574\u6570\u200b\u5e42\u200b\u7684\u200b\u8ba1\u7b97\u7ed3\u679c\u200b\uff0c\u200b\u7136\u540e\u200b\u7528\u200b\u8fd9\u4e9b\u200b\u7ed3\u679c\u200b\u76f8\u4e58\u200b\u5f97\u5230\u200b\u8f93\u51fa\u200b\u7ed3\u679c\u200b\u3002\u200b\u6ce8\u610f\u200b\u6307\u6570\u200b\u4e3a\u200b\u8d1f\u6570\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002\u200b\u5f53\u200b\u6307\u6570\u200b\u4e3a\u200b<code>-2147483648</code>\u200b\u65f6\u200b\u4e0d\u80fd\u200b\u53d6\u8d1f\u200b\uff0c\u200b\u6b64\u65f6\u200b\u53ef\u4ee5\u200b\u5148\u52a0\u200b\u4e00\u518d\u200b\u53d6\u8d1f\u200b\uff0c\u200b\u6700\u540e\u200b\u9664\u4ee5\u200b\u5e95\u6570\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>double myPow(double x, int n)\n{\n    if (n &lt; 0)\n        return 1 / myPow(x, -(n + 1)) / x;\n    double cache[32] = {0}, ret = 1;\n    int i = 0;\n    cache[0] = x;\n    while (n)\n    {\n        if (n &amp; 1)\n            ret *= cache[i];\n        n &gt;&gt;= 1;\n        i++;\n        cache[i] = cache[i - 1] * cache[i - 1];\n    }\n    return ret;\n}\n</code></pre>","tags":["\u6570\u5b66","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/509/","title":"509. \u200b\u6590\u6ce2\u200b\u90a3\u200b\u5951\u6570","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/509/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u6590\u6ce2\u200b\u90a3\u200b\u5951\u6570\u200b\uff0c\u200b\u901a\u5e38\u200b\u7528\u200b<code>F(n)</code>\u200b\u8868\u793a\u200b\uff0c\u200b\u5f62\u6210\u200b\u7684\u200b\u5e8f\u5217\u200b\u79f0\u4e3a\u200b\u6590\u6ce2\u200b\u90a3\u5951\u200b\u6570\u5217\u200b\u3002\u200b\u8be5\u200b\u6570\u5217\u200b\u7531\u200b<code>0</code>\u200b\u548c\u200b<code>1</code>\u200b\u5f00\u59cb\u200b\uff0c\u200b\u540e\u9762\u200b\u7684\u200b\u6bcf\u4e00\u9879\u200b\u6570\u5b57\u200b\u90fd\u200b\u662f\u200b\u524d\u9762\u200b\u4e24\u9879\u200b\u6570\u5b57\u200b\u7684\u200b\u548c\u200b\u3002\u200b\u4e5f\u200b\u5c31\u662f\u200b\uff1a <pre><code>F(0) = 0,\u00a0 \u00a0F(1)\u00a0= 1\nF(N) = F(N - 1) + F(N - 2), \u200b\u5176\u4e2d\u200b N &gt; 1.\n</code></pre> \u200b\u7ed9\u5b9a\u200b<code>N</code>\uff0c\u200b\u8ba1\u7b97\u200b<code>F(N)</code>\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a <pre><code>\u200b\u8f93\u5165\u200b\uff1a2\n\u200b\u8f93\u51fa\u200b\uff1a1\n\u200b\u89e3\u91ca\u200b\uff1aF(2) = F(1) + F(0) = 1 + 0 = 1.\n</code></pre></p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1a3\n\u200b\u8f93\u51fa\u200b\uff1a2\n\u200b\u89e3\u91ca\u200b\uff1aF(3) = F(2) + F(1) = 1 + 1 = 2.\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1a4\n\u200b\u8f93\u51fa\u200b\uff1a3\n\u200b\u89e3\u91ca\u200b\uff1aF(4) = F(3) + F(2) = 2 + 1 = 3.\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <p>\\(0\\leq N\\leq30\\)</p> <p>Reference</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/509/#_2","title":"\u9898\u89e3","text":"","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/509/#_3","title":"\u9012\u5f52","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\u5b58\u653e\u200b\u5386\u53f2\u200b\u7ed3\u679c\u200b\uff0c\u200b\u52a0\u901f\u200b\u9012\u5f52\u8ba1\u7b97\u200b</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>int fib_cache(int N, int **cache, int *lenCache, int *fullCache){\n    if (!N)\n        return 0;\n    if (!(*cache))\n    {\n        *lenCache = 2;\n        *fullCache = N + 1;\n        *cache = (int *)memset(malloc(sizeof(int) * *fullCache), 0, sizeof(int) * *fullCache);\n        (*cache)[0] = 1;\n        (*cache)[1] = 1;\n    }\n    if (N &gt; *lenCache &amp;&amp; N &lt;= *fullCache)\n        (*cache)[N-1] = fib_cache(N - 1, cache, lenCache, fullCache) + fib_cache(N - 2, cache, lenCache, fullCache);\n        *lenCache = N;\n    return (*cache)[N - 1];\n}\n\nint fib(int N){\n    int *cache = NULL, lenCache = 0, fullCache = 0;\n    return fib_cache(N, &amp;cache, &amp;lenCache, &amp;fullCache);\n}\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/509/#_4","title":"\u8fed\u4ee3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u6839\u636e\u200b\u5b9a\u4e49\u200b\u63a8\u7b97\u200b\u6590\u6ce2\u200b\u90a3\u200b\u5951\u6570\u200b</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>int fib(int N){\n    int ret = 0, next = 1, tmp;\n    while (N)\n    {\n        tmp = ret;\n        ret = next;\n        next = ret + tmp;\n        N--;\n    }\n    return ret;\n}\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/53/","title":"53. \u200b\u6700\u5927\u200b\u5b50\u5e8f\u200b\u548c","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u7ec4","\u5206\u6cbb\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/53/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b <code>nums</code>\u00a0\uff0c\u200b\u627e\u5230\u200b\u4e00\u4e2a\u200b\u5177\u6709\u200b\u6700\u5927\u200b\u548c\u200b\u7684\u200b\u8fde\u7eed\u200b\u5b50\u200b\u6570\u7ec4\u200b\uff08\u200b\u5b50\u200b\u6570\u7ec4\u200b\u6700\u5c11\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\uff09\uff0c\u200b\u8fd4\u56de\u200b\u5176\u200b\u6700\u5927\u200b\u548c\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [-2,1,-3,4,-1,2,1,-5,4]\n\u200b\u8f93\u51fa\u200b\uff1a6\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u8fde\u7eed\u200b\u5b50\u200b\u6570\u7ec4\u200b\u00a0[4,-1,2,1] \u200b\u7684\u200b\u548c\u200b\u6700\u5927\u200b\uff0c\u200b\u4e3a\u200b\u00a06 \u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [1]\n\u200b\u8f93\u51fa\u200b\uff1a1\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [0]\n\u200b\u8f93\u51fa\u200b\uff1a0\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 4\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [-1]\n\u200b\u8f93\u51fa\u200b\uff1a-1\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 5\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [-100000]\n\u200b\u8f93\u51fa\u200b\uff1a-100000\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 3 * 10^4</code></li> <li><code>-10^5 &lt;= nums[i] &lt;= 10^5</code></li> </ul> <p>\u200b\u8fdb\u9636\u200b\uff1a\u200b\u5982\u679c\u200b\u4f60\u200b\u5df2\u7ecf\u200b\u5b9e\u73b0\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b <code>O(n)</code> \u200b\u7684\u200b\u89e3\u6cd5\u200b\uff0c\u200b\u5c1d\u8bd5\u200b\u4f7f\u7528\u200b\u66f4\u4e3a\u200b\u7cbe\u5999\u200b\u7684\u200b \u200b\u5206\u6cbb\u200b\u6cd5\u200b \u200b\u6c42\u89e3\u200b\u3002</p> <p>Reference</p>","tags":["\u6570\u7ec4","\u5206\u6cbb\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/53/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4f7f\u7528\u200b\u52a8\u6001\u200b\u89c4\u5212\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u4ece\u540e\u200b\u5411\u524d\u200b\u8fdb\u884c\u200b\u8003\u8651\u200b\uff0c\u200b\u8bbe\u200b\u6570\u7ec4\u200b\u4e2d\u5171\u200b\u6709\u200b\\(n\\)\u200b\u4e2a\u200b\u5143\u7d20\u200b\\(\\{a_n\\}\\)\uff0c\u200b\u5f53\u524d\u200b\u4f4d\u7f6e\u200b\\(i\\)\u200b\u4ece\u540e\u200b\u5411\u524d\u200b\u79fb\u52a8\u200b\uff0c\\(i\\)\u200b\u4f4d\u7f6e\u200b\u53ca\u200b\\(i\\)\u200b\u4f4d\u7f6e\u200b\u4e4b\u540e\u200b\u6784\u6210\u200b\u7684\u200b\u6700\u5927\u200b\u5b50\u200b\u5e8f\u5217\u200b\u6570\u503c\u200b\u4e3a\u200b\\(s_i\\)\u3002</p> <ol> <li>\u200b\u521d\u59cb\u200b\u60c5\u51b5\u200b\uff0c\\(s_n = 0\\)</li> <li>\u200b\u8ba8\u8bba\u200b\\(s_{i + 1}\\)\uff1a</li> <li>\u200b\u82e5\u200b\\(s_{i + 1} \\leq 0\\)\uff0c\u200b\u5219\u200b\\(s_{i} = a_{i}\\)</li> <li>\u200b\u82e5\u200b\\(s_{i + 1} &gt; 0\\)\uff0c\u200b\u5219\u200b\\(s_{i} = a_{i} + s_{i + 1}\\)</li> </ol> <p>\u200b\u7531\u6b64\u200b\u4e0d\u65ad\u200b\u8fdb\u884c\u200b\uff0c\u200b\u4e22\u5f03\u200b\u548c\u200b\u4e3a\u200b\u8d1f\u6570\u200b\u7684\u200b\u5b50\u200b\u5e8f\u5217\u200b\uff0c\u200b\u6700\u7ec8\u200b\u5f97\u5230\u200b\u7684\u200b\\(s_0\\)\u200b\u5373\u200b\u4e3a\u200b\u6700\u5927\u200b\u5b50\u5e8f\u200b\u548c\u200b\u3002</p> <pre><code>#define MAX(x, y) (x &gt; y ? x : y)\nint maxSubArray(int* nums, int numsSize){\n    int ret = INT_MIN, value = 0;\n    for (int i = numsSize - 1; i &gt;= 0; i--)\n    {\n        value = MAX(value, 0) + nums[i];\n        ret = MAX(ret, value);\n    }\n    return ret;\n}\n</code></pre>","tags":["\u6570\u7ec4","\u5206\u6cbb\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/541/","title":"541. \u200b\u53cd\u8f6c\u200b\u5b57\u7b26\u4e32\u200b II","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/541/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b <code>s</code> \u200b\u548c\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b <code>k</code>\uff0c\u200b\u4ece\u200b\u5b57\u7b26\u4e32\u200b\u5f00\u5934\u200b\u7b97\u200b\u8d77\u200b\uff0c\u200b\u6bcf\u200b\u8ba1\u6570\u200b\u81f3\u200b <code>2k</code> \u200b\u4e2a\u5b57\u7b26\u200b\uff0c\u200b\u5c31\u200b\u53cd\u8f6c\u200b\u8fd9\u200b <code>2k</code> \u200b\u5b57\u7b26\u200b\u4e2d\u200b\u7684\u200b\u524d\u200b <code>k</code> \u200b\u4e2a\u5b57\u7b26\u200b\u3002</p> <ul> <li>\u200b\u5982\u679c\u200b\u5269\u4f59\u200b\u5b57\u7b26\u200b\u5c11\u4e8e\u200b <code>k</code> \u200b\u4e2a\u200b\uff0c\u200b\u5219\u200b\u5c06\u200b\u5269\u4f59\u200b\u5b57\u7b26\u200b\u5168\u90e8\u200b\u53cd\u8f6c\u200b\u3002</li> <li>\u200b\u5982\u679c\u200b\u5269\u4f59\u200b\u5b57\u7b26\u200b\u5c0f\u4e8e\u200b <code>2k</code> \u200b\u4f46\u200b\u5927\u4e8e\u200b\u6216\u200b\u7b49\u4e8e\u200b <code>k</code> \u200b\u4e2a\u200b\uff0c\u200b\u5219\u200b\u53cd\u8f6c\u200b\u524d\u200b <code>k</code> \u200b\u4e2a\u5b57\u7b26\u200b\uff0c\u200b\u5176\u4f59\u200b\u5b57\u7b26\u200b\u4fdd\u6301\u200b\u539f\u6837\u200b\u3002</li> </ul> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>s = \"abcdefg\", k = 2</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>\"bacdfeg\"</code></p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>s = \"abcd\", k = 2</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>\"bacd\"</code></p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= s.length &lt;= 10^4</code></li> <li><code>s</code> \u200b\u4ec5\u200b\u7531\u200b\u5c0f\u5199\u200b\u82f1\u6587\u200b\u7ec4\u6210\u200b</li> <li><code>1 &lt;= k &lt;= 10^4</code></li> </ul> <p>Reference</p>","tags":["\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/541/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4ee5\u200b<code>2k</code>\u200b\u4e3a\u200b\u5355\u4f4d\u200b\u8fdb\u884c\u200b\u904d\u5386\u200b\uff0c\u200b\u53cd\u8f6c\u200b\u6bcf\u4e2a\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u524d\u200b<code>k</code>\u200b\u4e2a\u5b57\u7b26\u200b\u3002</p> <pre><code>class Solution:\n    def reverseStr(self, s: str, k: int) -&gt; str:\n        result = ''\n        for i in range(0, len(s), 2 * k):\n            left, right = s[i: i + k], s[i + k: i + 2 * k]\n            result += left[::-1] + right\n        return result\n</code></pre>","tags":["\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/55/","title":"55. \u200b\u8df3\u8dc3\u200b\u6e38\u620f","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p> <p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u975e\u8d1f\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b\u00a0<code>nums</code> \uff0c\u200b\u4f60\u200b\u6700\u521d\u200b\u4f4d\u4e8e\u200b\u6570\u7ec4\u200b\u7684\u200b \u200b\u7b2c\u4e00\u4e2a\u200b\u4e0b\u6807\u200b \u3002</p> <p>\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u4ee3\u8868\u200b\u4f60\u200b\u5728\u200b\u8be5\u200b\u4f4d\u7f6e\u200b\u53ef\u4ee5\u200b\u8df3\u8dc3\u200b\u7684\u200b\u6700\u5927\u200b\u957f\u5ea6\u200b\u3002</p> <p>\u200b\u5224\u65ad\u200b\u4f60\u200b\u662f\u5426\u200b\u80fd\u591f\u200b\u5230\u8fbe\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u4e0b\u6807\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u00a01\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [2,3,1,1,4]\n\u200b\u8f93\u51fa\u200b\uff1atrue\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u53ef\u4ee5\u200b\u5148\u200b\u8df3\u200b 1 \u200b\u6b65\u200b\uff0c\u200b\u4ece\u200b\u4e0b\u6807\u200b 0 \u200b\u5230\u8fbe\u200b\u4e0b\u6807\u200b 1, \u200b\u7136\u540e\u200b\u518d\u200b\u4ece\u200b\u4e0b\u6807\u200b 1 \u200b\u8df3\u200b 3 \u200b\u6b65\u200b\u5230\u8fbe\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u4e0b\u6807\u200b\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a02\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [3,2,1,0,4]\n\u200b\u8f93\u51fa\u200b\uff1afalse\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u65e0\u8bba\u600e\u6837\u200b\uff0c\u200b\u603b\u4f1a\u200b\u5230\u8fbe\u200b\u4e0b\u6807\u200b\u4e3a\u200b 3 \u200b\u7684\u200b\u4f4d\u7f6e\u200b\u3002\u200b\u4f46\u200b\u8be5\u200b\u4e0b\u200b\u6807\u7684\u200b\u6700\u5927\u200b\u8df3\u8dc3\u200b\u957f\u5ea6\u200b\u662f\u200b 0 \uff0c \u200b\u6240\u4ee5\u200b\u6c38\u8fdc\u200b\u4e0d\u200b\u53ef\u80fd\u200b\u5230\u8fbe\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u4e0b\u6807\u200b\u3002\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 3 * 10^4</code></li> <li><code>0 &lt;= nums[i] &lt;= 10^5</code></li> </ul> <p>Reference</p>","tags":["\u8d2a\u5fc3\u7b97\u6cd5","\u6570\u7ec4"]},{"location":"coding/leetcode/55/#_1","title":"\u9898\u89e3","text":"<p>\u200b\u53cd\u5e8f\u200b\u904d\u5386\u200b\u6570\u7ec4\u200b\uff0c\u200b\u4ece\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b\u5f00\u59cb\u200b\uff0c\u200b\u68c0\u67e5\u200b\u5404\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u53ef\u200b\u8df3\u200b\u8ddd\u79bb\u200b\uff0c\u200b\u4ece\u800c\u200b\u6784\u9020\u200b\u4e00\u4e2a\u200b\u53ef\u4ee5\u200b\u8df3\u5230\u200b\u4e2d\u70b9\u200b\u7684\u200b\u4e0b\u6807\u200b\u533a\u95f4\u200b\u3002\u200b\u904d\u5386\u200b\u5b8c\u6210\u200b\u540e\u200b\u68c0\u67e5\u200b\u8d77\u70b9\u200b\u662f\u5426\u200b\u5728\u200b\u8be5\u200b\u4e0b\u6807\u200b\u533a\u95f4\u200b\u4e2d\u200b\u3002</p> <pre><code>bool canJump(int* nums, int numsSize) {\n\n    int distance = numsSize - 1, i = 0;\n    for (i = numsSize - 1; i &gt;= 0; i--)\n        if (i + nums[i] &gt;= distance)\n            distance = i;\n    return distance == 0;\n}\n</code></pre>","tags":["\u8d2a\u5fc3\u7b97\u6cd5","\u6570\u7ec4"]},{"location":"coding/leetcode/56/","title":"56. \u200b\u5408\u5e76\u200b\u533a\u95f4","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u7ec4","\u6392\u5e8f"]},{"location":"coding/leetcode/56/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u4ee5\u200b\u6570\u7ec4\u200b <code>intervals</code> \u200b\u8868\u793a\u200b\u82e5\u5e72\u4e2a\u200b\u533a\u95f4\u200b\u7684\u200b\u96c6\u5408\u200b\uff0c\u200b\u5176\u4e2d\u200b\u5355\u4e2a\u200b\u533a\u95f4\u200b\u4e3a\u200b <code>intervals[i] = [start_i, end_i]</code> \u3002\u200b\u8bf7\u200b\u4f60\u200b\u5408\u5e76\u200b\u6240\u6709\u200b\u91cd\u53e0\u200b\u7684\u200b\u533a\u95f4\u200b\uff0c\u200b\u5e76\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u4e0d\u200b\u91cd\u53e0\u200b\u7684\u200b\u533a\u95f4\u200b\u6570\u7ec4\u200b\uff0c\u200b\u8be5\u200b\u6570\u7ec4\u200b\u9700\u200b\u6070\u597d\u200b\u8986\u76d6\u200b\u8f93\u5165\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u533a\u95f4\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aintervals = [[1,3],[2,6],[8,10],[15,18]]\n\u200b\u8f93\u51fa\u200b\uff1a[[1,6],[8,10],[15,18]]\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u533a\u95f4\u200b [1,3] \u200b\u548c\u200b [2,6] \u200b\u91cd\u53e0\u200b, \u200b\u5c06\u200b\u5b83\u4eec\u200b\u5408\u5e76\u200b\u4e3a\u200b [1,6].\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a02\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aintervals = [[1,4],[4,5]]\n\u200b\u8f93\u51fa\u200b\uff1a[[1,5]]\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u533a\u95f4\u200b [1,4] \u200b\u548c\u200b [4,5] \u200b\u53ef\u200b\u88ab\u200b\u89c6\u4e3a\u200b\u91cd\u53e0\u200b\u533a\u95f4\u200b\u3002\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= intervals.length &lt;= 10^4</code></li> <li><code>intervals[i].length == 2</code></li> <li><code>0 &lt;= starti &lt;= endi &lt;= 10^4</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u6392\u5e8f"]},{"location":"coding/leetcode/56/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u9996\u5148\u200b\u5bf9\u200b\u533a\u95f4\u200b\u7684\u200b\u8d77\u70b9\u200b\u6309\u7167\u200b\u5347\u5e8f\u200b\u6392\u5e8f\u200b\uff0c\u200b\u4e4b\u540e\u200b\u904d\u5386\u200b\u533a\u95f4\u200b\u5217\u8868\u200b\uff0c\u200b\u4e0d\u65ad\u200b\u68c0\u67e5\u200b\u5df2\u200b\u5408\u5e76\u200b\u533a\u95f4\u200b\u4e0e\u200b\u5f53\u524d\u200b\u533a\u95f4\u200b\u662f\u5426\u200b\u5b58\u5728\u200b\u91cd\u53e0\u200b\uff0c\u200b\u5982\u679c\u200b\u5b58\u5728\u200b\u91cd\u53e0\u200b\uff0c\u200b\u5219\u200b\u5c06\u200b\u4e24\u200b\u533a\u95f4\u200b\u5408\u5e76\u200b\uff0c\u200b\u5426\u5219\u200b\u5c06\u200b\u5df2\u200b\u5408\u5e76\u200b\u533a\u95f4\u200b\u52a0\u5165\u200b\u7ed3\u679c\u200b\u96c6\u4e2d\u200b\uff0c\u200b\u5f53\u524d\u200b\u533a\u95f4\u200b\u8bbe\u4e3a\u200b\u5df2\u200b\u5408\u5e76\u200b\u533a\u95f4\u200b\u3002</p> <pre><code>/**\n * Return an array of arrays of size *returnSize.\n * The sizes of the arrays are returned as *returnColumnSizes array.\n * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().\n */\n#define MAX(x, y) (x &gt; y ? x : y)\nint comp(const void *x, const void *y)\n{\n    return **(int **)x - **(int **)y;\n}\nint** merge(int** intervals, int intervalsSize, int* intervalsColSize, int* returnSize, int** returnColumnSizes){\n    if (intervalsSize == 0)\n    {\n        *returnSize = 0;\n        return NULL;\n    }\n    qsort(intervals, intervalsSize, sizeof(int *), comp);\n    int **ret = (int **)malloc(sizeof(int *) * intervalsSize), i = 0;\n    ret[0] = (int *)memcpy(malloc(sizeof(int) * 2), intervals[0], sizeof(int) * 2);\n    *returnSize = 0;\n    for (i = 1; i &lt; intervalsSize; i++)\n    {\n        if (ret[*returnSize][1] &gt;= intervals[i][0])\n            ret[*returnSize][1] = MAX(intervals[i][1], ret[*returnSize][1]);\n        else\n            ret[++(*returnSize)] = (int *)memcpy(malloc(sizeof(int) * 2), intervals[i], sizeof(int) * 2);\n    }\n    (*returnSize)++;\n    *returnColumnSizes = (int *)malloc(sizeof(int) * *returnSize);\n    for (i = 0; i &lt; *returnSize; i++)\n        (*returnColumnSizes)[i] = 2;\n    return ret;\n}\n</code></pre>","tags":["\u6570\u7ec4","\u6392\u5e8f"]},{"location":"coding/leetcode/59/","title":"59. \u200b\u87ba\u65cb\u200b\u77e9\u9635\u200b II","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/59/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u6b63\u6574\u6570\u200b\u00a0<code>n</code> \uff0c\u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b <code>1</code> \u200b\u5230\u200b\u00a0<code>n^2</code>\u00a0\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\uff0c\u200b\u4e14\u200b\u5143\u7d20\u200b\u6309\u200b\u987a\u65f6\u9488\u200b\u987a\u5e8f\u200b\u87ba\u65cb\u200b\u6392\u5217\u200b\u7684\u200b\u00a0<code>n x n</code> \u200b\u6b63\u65b9\u5f62\u200b\u77e9\u9635\u200b <code>matrix</code> \u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1an = 3\n\u200b\u8f93\u51fa\u200b\uff1a[[1,2,3],[8,9,4],[7,6,5]]\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1an = 1\n\u200b\u8f93\u51fa\u200b\uff1a[[1]]\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= n &lt;= 20</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/59/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u6309\u200b\u987a\u5e8f\u200b\u586b\u5145\u200b\u77e9\u9635\u200b\uff0c\u200b\u5f53\u200b\u8d85\u51fa\u200b\u77e9\u9635\u200b\u6216\u200b\u9047\u5230\u200b\u5df2\u200b\u586b\u5145\u200b\u5143\u7d20\u200b\u65f6\u200b\u8f6c\u5411\u200b\u3002</p> <pre><code>/**\n * Return an array of arrays of size *returnSize.\n * The sizes of the arrays are returned as *returnColumnSizes array.\n * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().\n */\nvoid change(int direction, int *i, int *j, int incre)\n{\n    switch(direction)\n    {\n        case 0:\n            *j += incre;\n            break;\n        case 1:\n            *i += incre;\n            break;\n        case 2:\n            *j -= incre;\n            break;\n        case 3:\n            *i -= incre;\n            break;\n    }\n}\nint** generateMatrix(int n, int* returnSize, int** returnColumnSizes){\n    *returnSize = n;\n    *returnColumnSizes = (int *)malloc(sizeof(int) * n);\n\n    int i = 0, j = 0, m = 1, direction = 0, **ret = (int **)malloc(sizeof(int *) * n);\n    for (i = 0; i &lt; n; i++)\n    {\n        (*returnColumnSizes)[i] = n;\n        ret[i] = (int *)malloc(sizeof(int) * n);\n        memset(ret[i], 0, sizeof(int) * n);\n    }\n\n    i = 0;\n    while (m &lt; n * n)\n    {\n        ret[i][j] = m;\n        change(direction, &amp;i, &amp;j, 1);\n        m++;\n        if (i &lt; 0 || j &lt; 0 || i &gt;= n || j &gt;= n || ret[i][j])\n        {\n            change(direction, &amp;i, &amp;j, -1);\n            direction = (direction + 1) &amp; 3;\n            m--;\n        }\n    }\n    ret[i][j] = m;\n    return ret;\n}\n</code></pre> <pre><code>class Solution:\n    def generateMatrix(self, n: int) -&gt; List[List[int]]:\n        result = [[0] * n for _ in range(n)]\n        i, j, step, total = 0, 0, 2, n * n\n        directions = [(0, 1), (1, 0), (0, -1), (-1, 0)] * n\n        result[i][j] = 1\n        for d_i, d_j in directions:\n            i, j = i + d_i, j + d_j\n            while i &gt;= 0 and i &lt; n and j &gt;= 0 and j &lt; n:\n                if result[i][j]:\n                    break\n                result[i][j] = step\n                step += 1\n                i, j = i + d_i, j + d_j\n            i, j = i - d_i, j - d_j\n        return result\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/598/","title":"598. \u200b\u533a\u95f4\u200b\u52a0\u6cd5\u200b II","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u7ec4","\u6570\u5b66"]},{"location":"coding/leetcode/598/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b <code>m x n</code> \u200b\u7684\u200b\u77e9\u9635\u200b <code>M</code> \u200b\u548c\u200b\u4e00\u4e2a\u200b\u64cd\u4f5c\u200b\u6570\u7ec4\u200b <code>op</code> \u3002\u200b\u77e9\u9635\u200b\u521d\u59cb\u5316\u200b\u65f6\u200b\u6240\u6709\u200b\u7684\u200b\u5355\u5143\u683c\u200b\u90fd\u200b\u4e3a\u200b <code>0</code> \u3002<code>ops[i] = [ai, bi]</code> \u200b\u610f\u5473\u7740\u200b\u5f53\u200b\u6240\u6709\u200b\u7684\u200b <code>0 &lt;= x &lt; ai</code> \u200b\u548c\u200b <code>0 &lt;= y &lt; bi</code> \u200b\u65f6\u200b\uff0c <code>M[x][y]</code> \u200b\u5e94\u8be5\u200b\u52a0\u200b 1\u3002</p> <p>\u200b\u5728\u200b \u200b\u6267\u884c\u200b\u5b8c\u200b\u6240\u6709\u200b\u64cd\u4f5c\u200b\u540e\u200b \uff0c\u200b\u8ba1\u7b97\u200b\u5e76\u200b\u8fd4\u56de\u200b \u200b\u77e9\u9635\u200b\u4e2d\u200b\u6700\u5927\u200b\u6574\u6570\u200b\u7684\u200b\u4e2a\u6570\u200b \u3002</p> <p>\u200b\u793a\u4f8b\u200b 1:</p> <p></p> <p>\u200b\u8f93\u5165\u200b: <code>m = 3, n = 3\uff0cops = [[2,2],[3,3]]</code></p> <p>\u200b\u8f93\u51fa\u200b: <code>4</code></p> <p>\u200b\u89e3\u91ca\u200b: M \u200b\u4e2d\u200b\u6700\u5927\u200b\u7684\u200b\u6574\u6570\u200b\u662f\u200b 2, \u200b\u800c\u4e14\u200b M \u200b\u4e2d\u6709\u200b4\u200b\u4e2a\u503c\u200b\u4e3a\u200b2\u200b\u7684\u200b\u5143\u7d20\u200b\u3002\u200b\u56e0\u6b64\u200b\u8fd4\u56de\u200b 4\u3002</p> <p>\u200b\u793a\u4f8b\u200b 2:</p> <p>\u200b\u8f93\u5165\u200b: <code>m = 3, n = 3, ops = [[2,2],[3,3],[3,3],[3,3],[2,2],[3,3],[3,3],[3,3],[2,2],[3,3],[3,3],[3,3]]</code></p> <p>\u200b\u8f93\u51fa\u200b: <code>4</code></p> <p>\u200b\u793a\u4f8b\u200b 3:</p> <p>\u200b\u8f93\u5165\u200b: m = 3, n = 3, ops = []</p> <p>\u200b\u8f93\u51fa\u200b: 9</p> <p>\u200b\u63d0\u793a\u200b:</p> <ul> <li><code>1 &lt;= m, n &lt;= 4 * 10^4</code></li> <li><code>0 &lt;= ops.length &lt;= 10^4</code></li> <li><code>ops[i].length == 2</code></li> <li><code>1 &lt;= a_i &lt;= m</code></li> <li><code>1 &lt;= b_i &lt;= n</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u6570\u5b66"]},{"location":"coding/leetcode/598/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u53ea\u200b\u9700\u8981\u200b\u7edf\u8ba1\u200b\u6240\u6709\u200b\u64cd\u4f5c\u200b\u4e2d\u200b\u7684\u200b\u6700\u5c0f\u200b\u884c\u6570\u200b\u548c\u200b\u6700\u5c0f\u200b\u5217\u6570\u200b\u5373\u53ef\u200b\u3002</p> <pre><code>class Solution:\n    def maxCount(self, m: int, n: int, ops: List[List[int]]) -&gt; int:\n        ops.append([m, n])\n        l, r = zip(*ops)\n        return min(l) * min(r)\n</code></pre>","tags":["\u6570\u7ec4","\u6570\u5b66"]},{"location":"coding/leetcode/61/","title":"61. \u200b\u65cb\u8f6c\u200b\u94fe\u8868","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u94fe\u8868","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/61/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u94fe\u8868\u200b\u7684\u200b\u5934\u200b\u8282\u70b9\u200b <code>head</code> \uff0c\u200b\u65cb\u8f6c\u200b\u94fe\u8868\u200b\uff0c\u200b\u5c06\u200b\u94fe\u8868\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u5411\u200b\u53f3\u200b\u79fb\u52a8\u200b\u00a0<code>k</code>\u00a0\u200b\u4e2a\u200b\u4f4d\u7f6e\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p></p> <pre><code>\u200b\u8f93\u5165\u200b\uff1ahead = [1,2,3,4,5], k = 2\n\u200b\u8f93\u51fa\u200b\uff1a[4,5,1,2,3]\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p></p> <pre><code>\u200b\u8f93\u5165\u200b\uff1ahead = [0,1,2], k = 4\n\u200b\u8f93\u51fa\u200b\uff1a[2,0,1]\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li>\u200b\u94fe\u8868\u200b\u4e2d\u200b\u8282\u70b9\u200b\u7684\u200b\u6570\u76ee\u200b\u5728\u200b\u8303\u56f4\u200b <code>[0, 500]</code> \u200b\u5185\u200b</li> <li><code>-100 &lt;= Node.val &lt;= 100</code></li> <li><code>0 &lt;= k &lt;= 2 * 10^9</code></li> </ul> <p>Reference</p>","tags":["\u94fe\u8868","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/61/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u5148\u200b\u5c06\u200b\u94fe\u8868\u200b\u95ed\u73af\u200b\uff0c\u200b\u53f3\u79fb\u200b k \u200b\u4e2a\u200b\u8282\u70b9\u200b\u540e\u200b\u4ee5\u200b\u8be5\u200b\u8282\u70b9\u200b\u4f5c\u4e3a\u200b\u5934\u200b\u8282\u70b9\u200b\uff0c\u200b\u5c06\u200b\u94fe\u8868\u200b\u7684\u200b\u73af\u200b\u6253\u5f00\u200b\u3002</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\n\n\nstruct ListNode* rotateRight(struct ListNode* head, int k) {\n    if (!head)\n        return NULL;\n    struct ListNode *cur = head, *ret = NULL;\n    int len = 1;\n    while (cur-&gt;next != NULL)\n    {\n        cur = cur-&gt;next;\n        len++;\n    }\n    cur-&gt;next = head;\n    cur = head;\n    k %= len;\n    for (int i = k + 1; i &lt; len; i++)\n        cur = cur-&gt;next;\n    ret = cur-&gt;next;\n    cur-&gt;next = NULL;\n    return ret;\n}\n</code></pre>","tags":["\u94fe\u8868","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/62/","title":"62. \u200b\u4e0d\u540c\u200b\u8def\u5f84","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/62/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u4e00\u4e2a\u200b\u673a\u5668\u4eba\u200b\u4f4d\u4e8e\u200b\u4e00\u4e2a\u200b <code>m x n</code>\u00a0\u200b\u7f51\u683c\u200b\u7684\u200b\u5de6\u4e0a\u89d2\u200b \uff08\u200b\u8d77\u59cb\u200b\u70b9\u200b\u5728\u200b\u4e0b\u56fe\u200b\u4e2d\u200b\u6807\u8bb0\u200b\u4e3a\u200b \u201cStart\u201d \uff09\u3002</p> <p>\u200b\u673a\u5668\u4eba\u200b\u6bcf\u6b21\u200b\u53ea\u80fd\u200b\u5411\u4e0b\u200b\u6216\u8005\u200b\u5411\u200b\u53f3\u200b\u79fb\u52a8\u200b\u4e00\u6b65\u200b\u3002\u200b\u673a\u5668\u4eba\u200b\u8bd5\u56fe\u200b\u8fbe\u5230\u200b\u7f51\u683c\u200b\u7684\u200b\u53f3\u4e0b\u89d2\u200b\uff08\u200b\u5728\u200b\u4e0b\u56fe\u200b\u4e2d\u200b\u6807\u8bb0\u200b\u4e3a\u200b \u201cFinish\u201d \uff09\u3002</p> <p>\u200b\u95ee\u200b\u603b\u5171\u200b\u6709\u200b\u591a\u5c11\u200b\u6761\u200b\u4e0d\u540c\u200b\u7684\u200b\u8def\u5f84\u200b\uff1f</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p></p> <pre><code>\u200b\u8f93\u5165\u200b\uff1am = 3, n = 7\n\u200b\u8f93\u51fa\u200b\uff1a28\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1am = 3, n = 2\n\u200b\u8f93\u51fa\u200b\uff1a3\n\u200b\u89e3\u91ca\u200b\uff1a\n\u200b\u4ece\u200b\u5de6\u4e0a\u89d2\u200b\u5f00\u59cb\u200b\uff0c\u200b\u603b\u5171\u200b\u6709\u200b 3 \u200b\u6761\u200b\u8def\u5f84\u200b\u53ef\u4ee5\u200b\u5230\u8fbe\u200b\u53f3\u4e0b\u89d2\u200b\u3002\n1. \u200b\u5411\u200b\u53f3\u200b -&gt; \u200b\u5411\u4e0b\u200b -&gt; \u200b\u5411\u4e0b\u200b\n2. \u200b\u5411\u4e0b\u200b -&gt; \u200b\u5411\u4e0b\u200b -&gt; \u200b\u5411\u200b\u53f3\u200b\n3. \u200b\u5411\u4e0b\u200b -&gt; \u200b\u5411\u200b\u53f3\u200b -&gt; \u200b\u5411\u4e0b\u200b\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1am = 7, n = 3\n\u200b\u8f93\u51fa\u200b\uff1a28\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 4\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1am = 3, n = 3\n\u200b\u8f93\u51fa\u200b\uff1a6\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= m, n &lt;= 100</code></li> <li>\u200b\u9898\u76ee\u200b\u6570\u636e\u200b\u4fdd\u8bc1\u200b\u7b54\u6848\u200b\u5c0f\u4e8e\u200b\u7b49\u4e8e\u200b <code>2 * 10^9</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/62/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4ece\u200b\u6700\u540e\u200b\u4e00\u884c\u200b\u5f00\u59cb\u200b\u8003\u8651\u200b\uff0c\u200b\u8981\u200b\u5230\u8fbe\u200b\u53f3\u4e0b\u89d2\u200b\u7684\u200b\u65b9\u683c\u200b\uff0c\u200b\u6709\u200b\u4e24\u79cd\u200b\u65b9\u6cd5\u200b\uff1a</p> <ol> <li>\u200b\u4ece\u200b\u659c\u200b\u4e0a\u65b9\u200b\u7684\u200b\u65b9\u683c\u200b\u5f00\u59cb\u200b\uff0c\u200b\u5148\u200b\u5411\u4e0b\u200b\u540e\u200b\u5411\u200b\u53f3\u200b</li> <li>\u200b\u4ece\u200b\u659c\u200b\u4e0a\u65b9\u200b\u7684\u200b\u65b9\u683c\u200b\u5f00\u59cb\u200b\uff0c\u200b\u5148\u5411\u200b\u53f3\u540e\u200b\u5411\u4e0b\u200b</li> </ol> <p>\u200b\u7531\u6b64\u200b\u5373\u53ef\u200b\u5f97\u51fa\u200b\u72b6\u6001\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\u3002</p> <pre><code>int uniquePaths(int m, int n){\n    if (m &lt; n)\n        return uniquePaths(n, m);\n    int *dp = (int *)malloc(sizeof(int) * m), i = 0, j = 0;\n    for (i = 0; i &lt; m; i++)\n        dp[i] = 1;\n    for (i = 1; i &lt; n; i++)\n        for (j = 1; j &lt; m; j++)\n            dp[j] += dp[j - 1];\n    return dp[m - 1];\n}\n</code></pre> <p>\u200b\u6216\u8005\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u6392\u5217\u7ec4\u5408\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u957f\u4e3a\u200b\\(m\\)\uff0c\u200b\u5bbd\u4e3a\u200b\\(n\\)\u200b\u7684\u200b\u65b9\u683c\u200b\uff0c\u200b\u9700\u8981\u200b\u5411\u200b\u53f3\u200b\u79fb\u52a8\u200b\\(m - 1\\)\u200b\u6b21\u200b\uff0c\u200b\u5411\u4e0b\u200b\u79fb\u52a8\u200b\\(n - 1\\)\u200b\u6b21\u200b\uff0c\u200b\u5171\u200b\\(m + n - 2\\)\u200b\u6b21\u200b\u3002</p> <p>\u200b\u56e0\u6b64\u200b\u603b\u200b\u7684\u200b\u8def\u5f84\u200b\u4e2a\u6570\u200b\u4e3a\u200b\\(m + n - 2\\)\u200b\u4e2a\u200b\u9009\u62e9\u200b\u4e2d\u4e2d\u200b\u9009\u62e9\u200b\\(m - 1\\)\u200b\u6b21\u200b\u5411\u4e0b\u200b\u79fb\u52a8\u200b\u7684\u200b\u65b9\u6848\u200b\u603b\u6570\u200b\uff0c\u200b\u8be5\u200b\u65b9\u6848\u200b\u603b\u6570\u200b\u4e3a\u200b\uff1a</p> \\[ \\frac{(m + n - 2)!}{(m - 1)!(n - 1)!} \\]","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/64/","title":"64. \u200b\u6700\u5c0f\u200b\u8def\u5f84\u200b\u548c","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p> <p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b\u975e\u8d1f\u200b\u6574\u6570\u200b\u7684\u200b <code>m\u00a0x\u00a0n</code>\u00a0\u200b\u7f51\u683c\u200b\u00a0<code>grid</code> \uff0c\u200b\u8bf7\u200b\u627e\u51fa\u200b\u4e00\u6761\u200b\u4ece\u200b\u5de6\u4e0a\u89d2\u200b\u5230\u200b\u53f3\u4e0b\u89d2\u200b\u7684\u200b\u8def\u5f84\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u8def\u5f84\u200b\u4e0a\u200b\u7684\u200b\u6570\u5b57\u200b\u603b\u548c\u200b\u4e3a\u200b\u6700\u5c0f\u200b\u3002</p> <p>\u200b\u8bf4\u660e\u200b\uff1a\u200b\u6bcf\u6b21\u200b\u53ea\u80fd\u200b\u5411\u4e0b\u200b\u6216\u8005\u200b\u5411\u200b\u53f3\u200b\u79fb\u52a8\u200b\u4e00\u6b65\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p></p> <pre><code>\u200b\u8f93\u5165\u200b\uff1agrid = [[1,3,1],[1,5,1],[4,2,1]]\n\u200b\u8f93\u51fa\u200b\uff1a7\n\u200b\u89e3\u91ca\u200b\uff1a\u200b\u56e0\u4e3a\u200b\u8def\u5f84\u200b 1\u21923\u21921\u21921\u21921 \u200b\u7684\u200b\u603b\u548c\u200b\u6700\u5c0f\u200b\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1agrid = [[1,2,3],[4,5,6]]\n\u200b\u8f93\u51fa\u200b\uff1a12\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>m == grid.length</code></li> <li><code>n == grid[i].length</code></li> <li><code>1 &lt;= m, n &lt;= 200</code></li> <li><code>0 &lt;= grid[i][j] &lt;= 100</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/64/#_1","title":"\u9898\u89e3","text":"<p>\u200b\u8bbe\u200b\u7b2c\u200b\\(i\\)\u200b\u884c\u7b2c\u200b\\(j\\)\u200b\u5217\u200b\u7684\u200b\u5143\u7d20\u200b\\(a_{ij}\\)\u200b\u5230\u200b\u53f3\u4e0b\u89d2\u200b\u8def\u5f84\u200b\u4e0a\u200b\u7684\u200b\u6570\u5b57\u200b\u548c\u200b\u4e3a\u200b\\(f(i, j)\\)\uff0c\u200b\u7279\u522b\u200b\u5730\u200b\uff0c\u200b\u6709\u200b\\(f(m, n) = a_{mn}\\)\uff0c\u200b\u5219\u200b\uff1a</p> <p>\u200b\u5bf9\u4e8e\u200b\u6700\u540e\u200b\u4e00\u884c\u200b\u5143\u7d20\u200b\uff0c\u200b\u53ea\u80fd\u200b\u5411\u200b\u53f3\u200b\u79fb\u52a8\u200b\uff0c\u200b\u6709\u200b\uff1a</p> \\[ f(m, j) = \\sum_{k=j} ^{n} a_{mk} \\] <p>\u200b\u540c\u7406\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u6700\u540e\u200b\u4e00\u5217\u200b\u5143\u7d20\u200b\uff0c\u200b\u6709\u200b\uff1a</p> \\[ f(i, n) = \\sum_{k = i} ^ {m} a_{kn} \\] <p>\u200b\u8bbe\u200b\u7b2c\u200b\\(i\\)\u200b\u884c\u200b\u5230\u8fbe\u200b\u53f3\u4e0b\u89d2\u200b\u7684\u200b\u6700\u200b\u77ed\u200b\u8def\u5f84\u200b\u548c\u200b\uff08\u200b\u5373\u200b\\(f(i, j), \\forall j\\)\uff09\u200b\u4ee5\u53ca\u200b\u7b2c\u200b\\(i - 1\\)\u200b\u884c\u200b\u6700\u540e\u200b\u4e00\u5217\u200b\u5230\u8fbe\u200b\u53f3\u4e0b\u89d2\u200b\u7684\u200b\u6700\u200b\u77ed\u200b\u8def\u5f84\u200b\u548c\u200b\uff0c\u200b\u5373\u200b\\(f(i - 1, n)\\)\u200b\u5df2\u77e5\u200b\u3002\u200b\u7531\u4e8e\u200b\u6bcf\u200b\u4e00\u6b65\u200b\u53ea\u80fd\u200b\u5411\u200b\u53f3\u200b\u6216\u200b\u5411\u4e0b\u200b\u79fb\u52a8\u200b\uff0c\\(f(i - 1, j)\\)\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5982\u4e0b\u200b\u65b9\u7a0b\u200b\u63a8\u5bfc\u200b\uff1a</p> \\[ f(i - 1, j - 1) = \\min\\{f(i - 1, j), f(i, j - 1)\\} + a_{(i - 1)(j - 1)} \\] <p>\u200b\u7531\u6b64\u200b\u5f97\u5230\u200b\u72b6\u6001\u200b\u8f6c\u79fb\u200b\u65b9\u7a0b\u200b\uff0c\u200b\u5373\u53ef\u200b\u4f7f\u7528\u200b\u52a8\u6001\u200b\u89c4\u5212\u200b\u81ea\u200b\u5e95\u5411\u4e0a\u200b\u6c42\u89e3\u200b\u3002\u200b\u6c42\u89e3\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u53ea\u200b\u9700\u8981\u200b\u5b58\u50a8\u200b\u4e00\u884c\u200b\u7684\u200b\u6700\u200b\u77ed\u200b\u8def\u5f84\u200b\u548c\u200b\u5373\u53ef\u200b\u3002</p> <pre><code>#define MIN(x, y) ((x) &lt; (y) ? x : y)\nint minPathSum(int** grid, int gridSize, int* gridColSize){\n    if (gridSize == 0 || *gridColSize == 0)\n        return 0;\n    int *dp = (int *)memset(malloc(sizeof(int) * *gridColSize), 0, sizeof(int) * *gridColSize),\n        i = 0, j = 0;\n    for (i = 0; i &lt; *gridColSize; i++)\n        dp[i] = INT_MAX;\n    dp[0] = 0;\n    for (i = 0; i &lt; gridSize; i++)\n    {\n        dp[0] += grid[i][0];\n        for (j = 1; j &lt; *gridColSize; j++)\n            dp[j] = MIN(dp[j - 1], dp[j]) + grid[i][j];\n    }\n    return dp[*gridColSize - 1];\n}\n</code></pre>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/66/","title":"66. \u200b\u52a0\u4e00","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/66/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u7531\u200b\u6574\u6570\u200b\u7ec4\u6210\u200b\u7684\u200b\u975e\u7a7a\u200b\u6570\u7ec4\u200b\u6240\u200b\u8868\u793a\u200b\u7684\u200b\u975e\u8d1f\u200b\u6574\u6570\u200b\uff0c\u200b\u5728\u200b\u8be5\u6570\u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u52a0\u200b\u4e00\u200b\u3002</p> <p>\u200b\u6700\u9ad8\u200b\u4f4d\u200b\u6570\u5b57\u200b\u5b58\u653e\u200b\u5728\u200b\u6570\u7ec4\u200b\u7684\u200b\u9996\u4f4d\u200b\uff0c \u200b\u6570\u7ec4\u200b\u4e2d\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u53ea\u200b\u5b58\u50a8\u200b\u5355\u4e2a\u200b\u6570\u5b57\u200b\u3002</p> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5047\u8bbe\u200b\u9664\u4e86\u200b\u6574\u6570\u200b 0 \u200b\u4e4b\u5916\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u6574\u6570\u200b\u4e0d\u4f1a\u200b\u4ee5\u200b\u96f6\u200b\u5f00\u5934\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u00a01\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: [1,2,3]\n\u200b\u8f93\u51fa\u200b: [1,2,4]\n\u200b\u89e3\u91ca\u200b: \u200b\u8f93\u5165\u200b\u6570\u7ec4\u200b\u8868\u793a\u200b\u6570\u5b57\u200b 123\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a02\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: [4,3,2,1]\n\u200b\u8f93\u51fa\u200b: [4,3,2,2]\n\u200b\u89e3\u91ca\u200b: \u200b\u8f93\u5165\u200b\u6570\u7ec4\u200b\u8868\u793a\u200b\u6570\u5b57\u200b 4321\u3002\n</code></pre> <p>Reference</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/66/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u4ece\u200b\u6700\u540e\u200b\u4e00\u4f4d\u200b\u5f00\u59cb\u200b\u52a0\u200b\uff0c\u200b\u5411\u524d\u200b\u5904\u7406\u200b\u8fdb\u4f4d\u200b\u3002\u200b\u6ce8\u610f\u200b9999+1\u200b\u7684\u200b\u7279\u6b8a\u200b\u60c5\u51b5\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* plusOne(int* digits, int digitsSize, int* returnSize){\n    int *ret = (int *)malloc(sizeof(int) * (digitsSize + 1)), i = digitsSize, add = 1;\n    *ret = 0;\n    memcpy(ret + 1, digits, sizeof(int) * digitsSize);\n    for (i = digitsSize; i &gt;= 0 &amp;&amp; add; i--)\n    {\n        if (add = ret[i] == 9)\n            ret[i] = 0;\n        else\n            ret[i]++;\n    }\n    *returnSize = (i + 1) ? digitsSize : digitsSize + 1;\n    return ret + ((i + 1) ? 1 : 0);\n}\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/680/","title":"680. \u200b\u9a8c\u8bc1\u200b\u56de\u6587\u200b\u4e32\u200b II","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u8d2a\u5fc3","\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/680/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b <code>s</code>\uff0c\u200b\u6700\u200b\u591a\u200b \u200b\u53ef\u4ee5\u200b\u4ece\u4e2d\u200b\u5220\u9664\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u200b\u3002</p> <p>\u200b\u8bf7\u200b\u4f60\u200b\u5224\u65ad\u200b <code>s</code> \u200b\u662f\u5426\u200b\u80fd\u200b\u6210\u4e3a\u200b\u56de\u6587\u200b\u5b57\u7b26\u4e32\u200b\uff1a\u200b\u5982\u679c\u200b\u80fd\u200b\uff0c\u200b\u8fd4\u56de\u200b <code>true</code> \uff1b\u200b\u5426\u5219\u200b\uff0c\u200b\u8fd4\u56de\u200b <code>false</code> \u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>s = \"aba\"</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>true</code></p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>s = \"abca\"</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>true</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5220\u9664\u200b\u5b57\u7b26\u200b 'c' \u3002</p> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>s = \"abc\"</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>false</code></p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= s.length &lt;= 10^5</code></li> <li><code>s</code> \u200b\u7531\u200b\u5c0f\u5199\u200b\u82f1\u6587\u5b57\u6bcd\u200b\u7ec4\u6210\u200b</li> </ul> <p>Reference</p>","tags":["\u8d2a\u5fc3","\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/680/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u9996\u5148\u200b\u4f7f\u7528\u200b\u53cc\u200b\u6307\u9488\u200b\u6cd5\u200b\u5224\u65ad\u200b\u662f\u5426\u200b\u56de\u6587\u200b\u4e32\u200b\uff0c\u200b\u5f53\u200b\u9047\u5230\u200b\u4e0d\u540c\u200b\u5b57\u7b26\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u5206\u522b\u200b\u5224\u65ad\u200b\u53ea\u200b\u5220\u9664\u200b\u5de6\u4fa7\u200b\u5b57\u7b26\u200b\u548c\u200b\u53ea\u200b\u5220\u9664\u200b\u53f3\u4fa7\u200b\u5b57\u7b26\u200b\uff0c\u200b\u5269\u4e0b\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u662f\u5426\u200b\u56de\u6587\u200b\u4e32\u200b\u3002\u200b\u53ea\u8981\u200b\u6709\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u662f\u200b\u56de\u6587\u200b\u4e32\u200b\u5c31\u200b\u6ee1\u8db3\u6761\u4ef6\u200b</p> <pre><code>class Solution:\n    def check(self, s: str):\n        return s[::-1] == s\n\n    def validPalindrome(self, s: str) -&gt; bool:\n        l, r, flag = 0, len(s), True\n        if self.check(s):\n            return True\n\n        while l &lt; r:\n            if s[l] != s[r - 1]:\n                return self.check(s[l + 1:r]) or self.check(s[l: r - 1])\n\n            l += 1\n            r -= 1\n        return True\n</code></pre>","tags":["\u8d2a\u5fc3","\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/69/","title":"69. x \u200b\u7684\u200b\u5e73\u65b9\u6839","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u5b66","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/69/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u5b9e\u73b0\u200b\u00a0<code>int sqrt(int x)</code>\u00a0\u200b\u51fd\u6570\u200b\u3002</p> <p>\u200b\u8ba1\u7b97\u200b\u5e76\u200b\u8fd4\u56de\u200b\u00a0<code>x</code>\u00a0\u200b\u7684\u200b\u5e73\u65b9\u6839\u200b\uff0c\u200b\u5176\u4e2d\u200b\u00a0<code>x</code> \u200b\u662f\u975e\u200b\u8d1f\u200b\u6574\u6570\u200b\u3002</p> <p>\u200b\u7531\u4e8e\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u662f\u200b\u6574\u6570\u200b\uff0c\u200b\u7ed3\u679c\u200b\u53ea\u200b\u4fdd\u7559\u200b\u6574\u6570\u200b\u7684\u200b\u90e8\u5206\u200b\uff0c\u200b\u5c0f\u6570\u200b\u90e8\u5206\u200b\u5c06\u200b\u88ab\u200b\u820d\u53bb\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1:</p> <pre><code>\u200b\u8f93\u5165\u200b: 4\n\u200b\u8f93\u51fa\u200b: 2\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2:</p> <pre><code>\u200b\u8f93\u5165\u200b: 8\n\u200b\u8f93\u51fa\u200b: 2\n\u200b\u8bf4\u660e\u200b: 8 \u200b\u7684\u200b\u5e73\u65b9\u6839\u200b\u662f\u200b 2.82842..., \n\u00a0    \u200b\u7531\u4e8e\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u662f\u200b\u6574\u6570\u200b\uff0c\u200b\u5c0f\u6570\u200b\u90e8\u5206\u200b\u5c06\u200b\u88ab\u200b\u820d\u53bb\u200b\u3002\n</code></pre> <p>Reference</p>","tags":["\u6570\u5b66","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/69/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4f7f\u7528\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u5373\u53ef\u200b\uff0c\u200b\u5173\u4e8e\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u7684\u200b\u8ba8\u8bba\u200b\uff0c\u200b\u8bf7\u200b\u53c2\u89c1\u200b35. \u200b\u641c\u7d22\u200b\u63d2\u5165\u200b\u4f4d\u7f6e\u200b</p> <pre><code>unsigned int binsearch(unsigned int target, unsigned int lo, unsigned int hi)\n{\n    int mid;\n    while (lo &lt; hi)\n    {\n        mid = (lo + hi) &gt;&gt; 1;\n        if (mid * mid &gt; target)\n            hi = mid;\n        else\n            lo = mid + 1;\n    }\n    return lo - 1;\n}\nint mySqrt(int x){\n    return binsearch(x, 0, 46341);\n}\n</code></pre>","tags":["\u6570\u5b66","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/7/","title":"7. \u200b\u6574\u6570\u200b\u53cd\u8f6c","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/7/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u51fa\u200b\u4e00\u4e2a\u200b 32 \u200b\u4f4d\u200b\u7684\u200b\u6709\u200b\u7b26\u53f7\u200b\u6574\u6570\u200b\uff0c\u200b\u4f60\u200b\u9700\u8981\u200b\u5c06\u200b\u8fd9\u4e2a\u200b\u6574\u6570\u200b\u4e2d\u200b\u6bcf\u4f4d\u200b\u4e0a\u200b\u7684\u200b\u6570\u5b57\u200b\u8fdb\u884c\u200b\u53cd\u8f6c\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u00a01\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: 123\n\u200b\u8f93\u51fa\u200b: 321\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: -123\n\u200b\u8f93\u51fa\u200b: -321\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: 120\n\u200b\u8f93\u51fa\u200b: 21\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\uff1a</p> <p>\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u7684\u200b\u73af\u5883\u200b\u53ea\u80fd\u200b\u5b58\u50a8\u200b\u5f97\u200b\u4e0b\u200b 32 \u200b\u4f4d\u200b\u7684\u200b\u6709\u200b\u7b26\u53f7\u200b\u6574\u6570\u200b\uff0c\u200b\u5219\u200b\u5176\u200b\u6570\u503c\u200b\u8303\u56f4\u200b\u4e3a\u200b \\([\u22122^{31},\u00a0 2^{31}\u00a0\u2212 1]\\) \u3002\u200b\u8bf7\u200b\u6839\u636e\u200b\u8fd9\u4e2a\u200b\u5047\u8bbe\u200b\uff0c\u200b\u5982\u679c\u200b\u53cd\u8f6c\u200b\u540e\u200b\u6574\u6570\u200b\u6ea2\u51fa\u200b\u90a3\u4e48\u200b\u5c31\u200b\u8fd4\u56de\u200b 0\u3002</p> <p>Reference</p>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/7/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u6bcf\u200b\u4e00\u6b21\u200b\u4ece\u200b\u53f3\u4fa7\u200b\u63d0\u53d6\u200b\u51fa\u200b\u6700\u540e\u200b\u4e00\u4f4d\u200b\u52a0\u200b\u5230\u200b\u7ed3\u679c\u200b\u7684\u200b\u53f3\u4fa7\u200b\u3002\u200b\u6ce8\u610f\u200b\u8d1f\u6570\u200b<code>-2147483648</code>\u200b\u5728\u200b 32 \u200b\u4f4d\u6709\u200b\u7b26\u53f7\u200b\u6574\u6570\u200b\u73af\u5883\u200b\u4e0b\u200b\u4e0d\u80fd\u200b\u53d6\u8d1f\u200b\uff0c\u200b\u5c06\u200b\u4e2d\u95f4\u200b\u53d8\u91cf\u200b\u58f0\u660e\u200b\u4e3a\u200b<code>long</code>\u200b\u5373\u53ef\u200b\u89e3\u51b3\u200b\u3002</p> <pre><code>int reverse(int x){\n    long ret = 0, testcase = x;\n    testcase = testcase &gt; 0 ? testcase : -testcase;\n    while(testcase)\n    {\n        ret *= 10;\n        ret += testcase % 10;\n        testcase /= 10;\n    }\n    return ((ret &gt;&gt; 31) ? 0 : ret) * (x &gt; 0 ? 1 : -1);\n}\n</code></pre>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/70/","title":"70. \u200b\u722c\u697c\u68af","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/70/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u5047\u8bbe\u200b\u4f60\u200b\u6b63\u5728\u200b\u722c\u697c\u68af\u200b\u3002\u200b\u9700\u8981\u200b n\u00a0\u200b\u9636\u200b\u4f60\u200b\u624d\u80fd\u200b\u5230\u8fbe\u200b\u697c\u9876\u200b\u3002</p> <p>\u200b\u6bcf\u6b21\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u722c\u200b 1 \u200b\u6216\u200b 2 \u200b\u4e2a\u200b\u53f0\u9636\u200b\u3002\u200b\u4f60\u200b\u6709\u200b\u591a\u5c11\u200b\u79cd\u200b\u4e0d\u540c\u200b\u7684\u200b\u65b9\u6cd5\u200b\u53ef\u4ee5\u200b\u722c\u200b\u5230\u200b\u697c\u9876\u200b\u5462\u200b\uff1f</p> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u7ed9\u5b9a\u200b n \u200b\u662f\u200b\u4e00\u4e2a\u200b\u6b63\u6574\u6570\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1a 2\n\u200b\u8f93\u51fa\u200b\uff1a 2\n\u200b\u89e3\u91ca\u200b\uff1a \u200b\u6709\u200b\u4e24\u79cd\u200b\u65b9\u6cd5\u200b\u53ef\u4ee5\u200b\u722c\u200b\u5230\u200b\u697c\u9876\u200b\u3002\n1.  1 \u200b\u9636\u200b + 1 \u200b\u9636\u200b\n2.  2 \u200b\u9636\u200b\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1a 3\n\u200b\u8f93\u51fa\u200b\uff1a 3\n\u200b\u89e3\u91ca\u200b\uff1a \u200b\u6709\u200b\u4e09\u79cd\u200b\u65b9\u6cd5\u200b\u53ef\u4ee5\u200b\u722c\u200b\u5230\u200b\u697c\u9876\u200b\u3002\n1.  1 \u200b\u9636\u200b + 1 \u200b\u9636\u200b + 1 \u200b\u9636\u200b\n2.  1 \u200b\u9636\u200b + 2 \u200b\u9636\u200b\n3.  2 \u200b\u9636\u200b + 1 \u200b\u9636\u200b\n</code></pre> <p>Reference</p>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/70/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\u5b58\u50a8\u200b\u4e34\u65f6\u200b\u7ed3\u679c\u200b\uff0c\u200b\u9012\u5f52\u8ba1\u7b97\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>int climbStairs_cache(int n, int **cache)\n{\n    if (n &lt;= 2)\n        return n;\n    if (*cache == NULL)\n        *cache = memset(malloc(sizeof(int) * n), 0, sizeof(int) * n);\n    if (!(*cache)[n - 1])\n        (*cache)[n - 1] = climbStairs_cache(n - 1, cache) + climbStairs_cache(n - 2, cache);\n    return (*cache)[n - 1];\n}\n\nint climbStairs(int n){\n    int *cache = NULL;\n    return climbStairs_cache(n, &amp;cache);\n}\n</code></pre>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/729/","title":"729. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b I","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u8bbe\u8ba1","\u7ebf\u6bb5\u6811","\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e","\u6709\u5e8f\u96c6\u5408"]},{"location":"coding/leetcode/729/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b <code>MyCalendar</code> \u200b\u7c7b\u6765\u200b\u5b58\u653e\u200b\u4f60\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u3002\u200b\u5982\u679c\u200b\u8981\u200b\u6dfb\u52a0\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u4e0d\u4f1a\u200b\u9020\u6210\u200b \u200b\u91cd\u590d\u200b\u9884\u8ba2\u200b \uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u5b58\u50a8\u200b\u8fd9\u4e2a\u200b\u65b0\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u3002</p> <p>\u200b\u5f53\u200b\u4e24\u4e2a\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u6709\u200b\u4e00\u4e9b\u200b\u65f6\u95f4\u200b\u4e0a\u200b\u7684\u200b\u4ea4\u53c9\u200b\u65f6\u200b\uff08\u200b\u4f8b\u5982\u200b\u4e24\u4e2a\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u90fd\u200b\u5728\u200b\u540c\u4e00\u65f6\u95f4\u200b\u5185\u200b\uff09\uff0c\u200b\u5c31\u200b\u4f1a\u200b\u4ea7\u751f\u200b \u200b\u91cd\u590d\u200b\u9884\u8ba2\u200b \u3002</p> <p>\u200b\u65e5\u7a0b\u200b\u53ef\u4ee5\u200b\u7528\u200b\u4e00\u5bf9\u200b\u6574\u6570\u200b <code>startTime</code> \u200b\u548c\u200b <code>endTime</code> \u200b\u8868\u793a\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u7684\u200b\u65f6\u95f4\u200b\u662f\u200b\u534a\u200b\u5f00\u533a\u95f4\u200b\uff0c\u200b\u5373\u200b <code>[startTime, endTime)</code>, \u200b\u5b9e\u6570\u200b <code>x</code> \u200b\u7684\u200b\u8303\u56f4\u200b\u4e3a\u200b\uff0c <code>startTime &lt;= x &lt; endTime</code> \u3002</p> <p>\u200b\u5b9e\u73b0\u200b <code>MyCalendar</code> \u200b\u7c7b\u200b\uff1a</p> <ul> <li><code>MyCalendar()</code> \u200b\u521d\u59cb\u5316\u200b\u65e5\u5386\u200b\u5bf9\u8c61\u200b\u3002</li> <li><code>boolean book(int startTime, int endTime)</code> \u200b\u5982\u679c\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u6210\u529f\u200b\u6dfb\u52a0\u200b\u5230\u200b\u65e5\u5386\u200b\u4e2d\u200b\u800c\u200b\u4e0d\u4f1a\u200b\u5bfc\u81f4\u200b\u91cd\u590d\u200b\u9884\u8ba2\u200b\uff0c\u200b\u8fd4\u56de\u200b <code>true</code> \u3002\u200b\u5426\u5219\u200b\uff0c\u200b\u8fd4\u56de\u200b <code>false</code> \u200b\u5e76\u4e14\u200b\u4e0d\u8981\u200b\u5c06\u200b\u8be5\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u6dfb\u52a0\u200b\u5230\u200b\u65e5\u5386\u200b\u4e2d\u200b\u3002</li> </ul> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a <pre><code>[\"MyCalendar\", \"book\", \"book\", \"book\"]\n[[], [10, 20], [15, 25], [20, 30]]\n</code></pre> \u200b\u8f93\u51fa\u200b\uff1a <pre><code>[null, true, false, true]\n</code></pre></p> <p>\u200b\u89e3\u91ca\u200b\uff1a <pre><code>MyCalendar myCalendar = new MyCalendar();\nmyCalendar.book(10, 20); // return True\nmyCalendar.book(15, 25); // return False \uff0c\u200b\u8fd9\u4e2a\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u4e0d\u80fd\u200b\u6dfb\u52a0\u200b\u5230\u200b\u65e5\u5386\u200b\u4e2d\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u65f6\u95f4\u200b 15 \u200b\u5df2\u7ecf\u200b\u88ab\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u9884\u8ba2\u200b\u4e86\u200b\u3002\nmyCalendar.book(20, 30); // return True \uff0c\u200b\u8fd9\u4e2a\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u53ef\u4ee5\u200b\u6dfb\u52a0\u200b\u5230\u200b\u65e5\u5386\u200b\u4e2d\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u7b2c\u4e00\u4e2a\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u9884\u8ba2\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u65f6\u95f4\u200b\u90fd\u200b\u5c0f\u4e8e\u200b 20 \uff0c\u200b\u4e14\u200b\u4e0d\u200b\u5305\u542b\u200b\u65f6\u95f4\u200b 20 \u3002\n</code></pre></p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>0 &lt;= start &lt; end &lt;= 109</code></li> <li>\u200b\u6bcf\u4e2a\u200b\u6d4b\u8bd5\u7528\u4f8b\u200b\uff0c\u200b\u8c03\u7528\u200b <code>book</code> \u200b\u65b9\u6cd5\u200b\u7684\u200b\u6b21\u6570\u200b\u6700\u591a\u200b\u4e0d\u200b\u8d85\u8fc7\u200b <code>1000</code> \u200b\u6b21\u200b\u3002</li> </ul> <p>Reference</p>","tags":["\u8bbe\u8ba1","\u7ebf\u6bb5\u6811","\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e","\u6709\u5e8f\u96c6\u5408"]},{"location":"coding/leetcode/729/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u5217\u8868\u200b\u5b58\u653e\u200b\u6240\u6709\u200b\u5f00\u59cb\u200b\u7684\u200b\u65f6\u95f4\u200b\u548c\u200b\u7ed3\u675f\u200b\u7684\u200b\u65f6\u95f4\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u5217\u8868\u200b\u6ee1\u8db3\u200b\uff1a(1) \u200b\u5217\u8868\u200b\u5355\u8c03\u200b\u975e\u51cf\u200b\uff1b(2) \u200b\u5076\u6570\u200b\u4e0b\u200b\u6807\u7684\u200b\u65f6\u95f4\u200b\u662f\u200b\u5f00\u59cb\u200b\u65f6\u95f4\u200b\uff0c\u200b\u5947\u6570\u200b\u4e0b\u200b\u6807\u7684\u200b\u65f6\u95f4\u200b\u662f\u200b\u7ed3\u675f\u200b\u65f6\u95f4\u200b\u3002</p> <p>\u200b\u5728\u200b\u628a\u200b\u65b0\u200b\u7684\u200b\u65f6\u95f4\u6bb5\u200b\u52a0\u5165\u200b\u5230\u200b\u5217\u8868\u200b\u65f6\u200b\uff0c\u200b\u4e24\u4e2a\u200b\u65f6\u95f4\u200b\u52a0\u5165\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u9700\u8981\u200b\u6ee1\u8db3\u200b\uff1a(1) \u200b\u4e24\u4e2a\u200b\u4f4d\u7f6e\u200b\u4e4b\u95f4\u200b\u9700\u8981\u200b\u6ca1\u6709\u200b\u5176\u4ed6\u200b\u5143\u7d20\u200b\uff0c\u200b\u5426\u5219\u200b\u8fd9\u4e2a\u200b\u533a\u95f4\u200b\u5185\u200b\u5305\u542b\u200b\u4e86\u200b\u53e6\u5916\u200b\u4e00\u4e2a\u200b\u533a\u95f4\u200b\u7684\u200b\u5f00\u59cb\u200b\u6216\u200b\u7ed3\u675f\u200b\uff0c\u200b\u5373\u200b\u5305\u542b\u200b\u91cd\u53e0\u200b\u3002(2) \u200b\u63d2\u5165\u200b\u4f4d\u7f6e\u200b\u4e4b\u524d\u200b\u7684\u200b\u5143\u7d20\u200b\u5fc5\u987b\u200b\u662f\u200b\u5947\u6570\u200b\u4e0b\u6807\u200b\uff08\u200b\u5bf9\u5e94\u200b\u5230\u200b\u4e00\u4e2a\u200b\u533a\u95f4\u200b\u7684\u200b\u7ed3\u675f\u200b\u65f6\u95f4\u200b\uff09\uff0c\u200b\u5426\u5219\u200b\u63d2\u5165\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5df2\u7ecf\u200b\u8bb0\u5f55\u200b\u7684\u200b\u65f6\u95f4\u6bb5\u200b\u7684\u200b\u4e2d\u95f4\u200b\u3002</p> <p><code>bisect</code>\u200b\u5e93\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u548c\u200b\u4e8c\u5206\u200b\u63d2\u5165\u200b\u7684\u200b\u76f8\u5173\u200b\u51fd\u6570\u200b\u3002\u200b\u7531\u4e8e\u200b\u65f6\u95f4\u200b\u533a\u95f4\u200b\u4e3a\u200b\u5de6\u200b\u5305\u542b\u200b\uff0c\u200b\u56e0\u6b64\u200b\uff0c\u200b\u5728\u200b\u68c0\u67e5\u200b\u5f00\u59cb\u200b\u65f6\u95f4\u200b\u65f6\u200b\uff0c\u200b\u63d2\u5165\u200b\u4f4d\u7f6e\u200b\u9700\u8981\u200b\u662f\u200b\u53f3\u4fa7\u200b\u63d2\u5165\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff1b\u200b\u540c\u7406\u200b\uff0c\u200b\u68c0\u67e5\u200b\u7ed3\u675f\u200b\u65f6\u95f4\u200b\u65f6\u200b\uff0c\u200b\u63d2\u5165\u200b\u4f4d\u7f6e\u200b\u9700\u8981\u200b\u662f\u200b\u5de6\u4fa7\u200b\u63d2\u5165\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>from typing import List, Optional, Tuple\nimport bisect\n\nclass MyCalendar:\n\n    def __init__(self):\n        self.times: List[int] = []\n\n    def _check(self, startTime: int, endTime: int) -&gt; Optional[int]:\n        assert not (len(self.times) % 2)\n        x = bisect.bisect_right(self.times, startTime)\n        y = bisect.bisect_left(self.times, endTime)\n\n        if x != y:\n            return None\n        if x % 2:\n            return None\n        return x\n\n    def book(self, startTime: int, endTime: int) -&gt; bool:\n        result = self._check(startTime, endTime)\n        if result is None:\n            return False\n\n        bisect.insort_left(self.times, endTime)\n        bisect.insort_right(self.times, startTime)\n        return True\n\n\n# Your MyCalendar object will be instantiated and called as such:\n# obj = MyCalendar()\n# param_1 = obj.book(startTime,endTime)\n</code></pre>","tags":["\u8bbe\u8ba1","\u7ebf\u6bb5\u6811","\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e","\u6709\u5e8f\u96c6\u5408"]},{"location":"coding/leetcode/73/","title":"73. \u200b\u77e9\u9635\u200b\u7f6e\u200b\u96f6","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/73/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u00a0<code>m x n</code> \u200b\u7684\u200b\u77e9\u9635\u200b\uff0c\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u4e3a\u200b <code>0</code> \uff0c\u200b\u5219\u200b\u5c06\u200b\u5176\u200b\u6240\u5728\u200b\u884c\u548c\u5217\u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u90fd\u200b\u8bbe\u4e3a\u200b <code>0</code> \u3002\u200b\u8bf7\u200b\u4f7f\u7528\u200b \u200b\u539f\u5730\u200b \u200b\u7b97\u6cd5\u200b\u3002</p> <p>\u200b\u8fdb\u9636\u200b\uff1a</p> <ul> <li>\u200b\u4e00\u4e2a\u200b\u76f4\u89c2\u200b\u7684\u200b\u89e3\u51b3\u65b9\u6848\u200b\u662f\u200b\u4f7f\u7528\u200b \u00a0\\(O(mn)\\)\u00a0\u200b\u7684\u200b\u989d\u5916\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u4f46\u200b\u8fd9\u200b\u5e76\u200b\u4e0d\u662f\u200b\u4e00\u4e2a\u200b\u597d\u200b\u7684\u200b\u89e3\u51b3\u65b9\u6848\u200b\u3002</li> <li>\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200b\u6539\u8fdb\u200b\u65b9\u6848\u200b\u662f\u200b\u4f7f\u7528\u200b \\(O(m\u00a0+\u00a0n)\\) \u200b\u7684\u200b\u989d\u5916\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u4f46\u200b\u8fd9\u200b\u4ecd\u7136\u200b\u4e0d\u662f\u200b\u6700\u597d\u200b\u7684\u200b\u89e3\u51b3\u65b9\u6848\u200b\u3002</li> <li>\u200b\u4f60\u200b\u80fd\u200b\u60f3\u200b\u51fa\u200b\u4e00\u4e2a\u200b\u4ec5\u200b\u4f7f\u7528\u200b\u5e38\u91cf\u200b\u7a7a\u95f4\u200b\u7684\u200b\u89e3\u51b3\u65b9\u6848\u200b\u5417\u200b\uff1f</li> </ul> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p></p> <pre><code>\u200b\u8f93\u5165\u200b\uff1amatrix = [[1,1,1],[1,0,1],[1,1,1]]\n\u200b\u8f93\u51fa\u200b\uff1a[[1,0,1],[0,0,0],[1,0,1]]\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p></p> <pre><code>\u200b\u8f93\u5165\u200b\uff1amatrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]\n\u200b\u8f93\u51fa\u200b\uff1a[[0,0,0,0],[0,4,5,0],[0,3,1,0]]\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>m == matrix.length</code></li> <li><code>n == matrix[0].length</code></li> <li><code>1 &lt;= m, n &lt;= 200</code></li> <li><code>-2^31 &lt;= matrix[i][j] &lt;= 2^31 - 1</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/73/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4f7f\u7528\u200b\\(m\\)\u200b\u4e2a\u200b\u6807\u8bb0\u53d8\u91cf\u200b\u6807\u8bb0\u200b\u884c\u4e2d\u200b\u662f\u5426\u200b\u51fa\u73b0\u200b0\uff0c\u200b\u7528\u200b\\(n\\)\u200b\u4e2a\u200b\u6807\u8bb0\u53d8\u91cf\u200b\u6807\u8bb0\u200b\u5217\u4e2d\u200b\u662f\u5426\u200b\u51fa\u73b0\u200b0\u3002</p> <pre><code>void setZeroes(int** matrix, int matrixSize, int* matrixColSize){\n    int *rows = memset(malloc(sizeof(int) * matrixSize), 0, sizeof(int) * matrixSize),\n        *cols = memset(malloc(sizeof(int) * *matrixColSize), 0, sizeof(int) * *matrixColSize),\n        i = 0, j = 0;\n    for (i = 0; i &lt; matrixSize; i++)\n    {\n        for (j = 0; j &lt; matrixColSize[i]; j++)\n        {\n            if (matrix[i][j] == 0)\n            {\n                rows[i] = 1;\n                cols[j] = 1;\n            }\n        }\n    }\n    for (i = 0; i &lt; matrixSize; i++)\n        for (j = 0; j &lt; matrixColSize[i]; j++)\n            if (rows[i] || cols[j])\n                matrix[i][j] = 0;\n}\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/731/","title":"731. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b II","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u8bbe\u8ba1","\u7ebf\u6bb5\u6811","\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e","\u6709\u5e8f\u96c6\u5408"]},{"location":"coding/leetcode/731/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u7a0b\u5e8f\u200b\u6765\u200b\u5b58\u653e\u200b\u4f60\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u3002\u200b\u5982\u679c\u200b\u8981\u200b\u6dfb\u52a0\u200b\u7684\u200b\u65f6\u95f4\u200b\u5185\u200b\u4e0d\u4f1a\u200b\u5bfc\u81f4\u200b\u4e09\u91cd\u200b\u9884\u8ba2\u200b\u65f6\u200b\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u5b58\u50a8\u200b\u8fd9\u4e2a\u200b\u65b0\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u3002</p> <p>\u200b\u5f53\u200b\u4e09\u4e2a\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u6709\u200b\u4e00\u4e9b\u200b\u65f6\u95f4\u200b\u4e0a\u200b\u7684\u200b\u4ea4\u53c9\u200b\u65f6\u200b\uff08\u200b\u4f8b\u5982\u200b\u4e09\u4e2a\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u90fd\u200b\u5728\u200b\u540c\u4e00\u65f6\u95f4\u200b\u5185\u200b\uff09\uff0c\u200b\u5c31\u200b\u4f1a\u200b\u4ea7\u751f\u200b \u200b\u4e09\u91cd\u200b\u9884\u8ba2\u200b\u3002</p> <p>\u200b\u4e8b\u4ef6\u200b\u80fd\u591f\u200b\u7528\u200b\u4e00\u5bf9\u200b\u6574\u6570\u200b <code>startTime</code> \u200b\u548c\u200b <code>endTime</code> \u200b\u8868\u793a\u200b\uff0c\u200b\u5728\u200b\u4e00\u4e2a\u534a\u200b\u5f00\u533a\u95f4\u200b\u7684\u200b\u65f6\u95f4\u200b <code>[startTime, endTime)</code> \u200b\u4e0a\u200b\u9884\u5b9a\u200b\u3002\u200b\u5b9e\u6570\u200b <code>x</code> \u200b\u7684\u200b\u8303\u56f4\u200b\u4e3a\u200b <code>startTime &lt;= x &lt; endTime</code>\u3002</p> <p>\u200b\u5b9e\u73b0\u200b <code>MyCalendarTwo</code> \u200b\u7c7b\u200b\uff1a</p> <ul> <li><code>MyCalendarTwo()</code> \u200b\u521d\u59cb\u5316\u200b\u65e5\u5386\u200b\u5bf9\u8c61\u200b\u3002</li> <li><code>boolean book(int startTime, int endTime)</code> \u200b\u5982\u679c\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u6210\u529f\u200b\u6dfb\u52a0\u200b\u5230\u200b\u65e5\u5386\u200b\u4e2d\u200b\u800c\u200b\u4e0d\u4f1a\u200b\u5bfc\u81f4\u200b\u4e09\u91cd\u200b\u9884\u8ba2\u200b\uff0c\u200b\u8fd4\u56de\u200b <code>true</code>\u3002\u200b\u5426\u5219\u200b\uff0c\u200b\u8fd4\u56de\u200b <code>false</code> \u200b\u5e76\u4e14\u200b\u4e0d\u8981\u200b\u5c06\u200b\u8be5\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u6dfb\u52a0\u200b\u5230\u200b\u65e5\u5386\u200b\u4e2d\u200b\u3002</li> </ul> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a <pre><code>[\"MyCalendarTwo\", \"book\", \"book\", \"book\", \"book\", \"book\", \"book\"]\n[[], [10, 20], [50, 60], [10, 40], [5, 15], [5, 10], [25, 55]]\n</code></pre> \u200b\u8f93\u51fa\u200b\uff1a <pre><code>[null, true, true, true, false, true, true]\n</code></pre></p> <p>\u200b\u89e3\u91ca\u200b\uff1a <pre><code>MyCalendarTwo myCalendarTwo = new MyCalendarTwo();\nmyCalendarTwo.book(10, 20); // \u200b\u8fd4\u56de\u200b True\uff0c\u200b\u80fd\u591f\u200b\u9884\u5b9a\u200b\u8be5\u200b\u65e5\u7a0b\u200b\u3002\nmyCalendarTwo.book(50, 60); // \u200b\u8fd4\u56de\u200b True\uff0c\u200b\u80fd\u591f\u200b\u9884\u5b9a\u200b\u8be5\u200b\u65e5\u7a0b\u200b\u3002\nmyCalendarTwo.book(10, 40); // \u200b\u8fd4\u56de\u200b True\uff0c\u200b\u8be5\u200b\u65e5\u7a0b\u200b\u80fd\u591f\u200b\u88ab\u200b\u91cd\u590d\u200b\u9884\u5b9a\u200b\u3002\nmyCalendarTwo.book(5, 15);  // \u200b\u8fd4\u56de\u200b False\uff0c\u200b\u8be5\u200b\u65e5\u7a0b\u200b\u5bfc\u81f4\u200b\u4e86\u200b\u4e09\u91cd\u200b\u9884\u5b9a\u200b\uff0c\u200b\u6240\u4ee5\u200b\u4e0d\u80fd\u200b\u9884\u5b9a\u200b\u3002\nmyCalendarTwo.book(5, 10); // \u200b\u8fd4\u56de\u200b True\uff0c\u200b\u80fd\u591f\u200b\u9884\u5b9a\u200b\u8be5\u200b\u65e5\u7a0b\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5b83\u200b\u4e0d\u200b\u4f7f\u7528\u200b\u5df2\u7ecf\u200b\u53cc\u91cd\u200b\u9884\u8ba2\u200b\u7684\u200b\u65f6\u95f4\u200b 10\u3002\nmyCalendarTwo.book(25, 55); // \u200b\u8fd4\u56de\u200b True\uff0c\u200b\u80fd\u591f\u200b\u9884\u5b9a\u200b\u8be5\u200b\u65e5\u7a0b\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u65f6\u95f4\u6bb5\u200b [25, 40) \u200b\u5c06\u200b\u88ab\u200b\u7b2c\u4e09\u4e2a\u200b\u65e5\u7a0b\u200b\u91cd\u590d\u200b\u9884\u5b9a\u200b\uff0c\u200b\u65f6\u95f4\u6bb5\u200b [40, 50) \u200b\u5c06\u200b\u88ab\u200b\u5355\u72ec\u200b\u9884\u5b9a\u200b\uff0c\u200b\u800c\u200b\u65f6\u95f4\u6bb5\u200b [50, 55) \u200b\u5c06\u200b\u88ab\u200b\u7b2c\u4e8c\u4e2a\u200b\u65e5\u7a0b\u200b\u91cd\u590d\u200b\u9884\u5b9a\u200b\u3002\n</code></pre></p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>0 &lt;= start &lt; end &lt;= 109</code></li> <li>\u200b\u6700\u200b\u591a\u200b\u8c03\u7528\u200b <code>book</code> 1000 \u200b\u6b21\u200b\u3002</li> </ul> <p>Reference</p>","tags":["\u8bbe\u8ba1","\u7ebf\u6bb5\u6811","\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e","\u6709\u5e8f\u96c6\u5408"]},{"location":"coding/leetcode/731/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u4f7f\u7528\u200b\u4e24\u4e2a\u200b\u5217\u8868\u200b\u5b58\u653e\u200b\u533a\u95f4\u200b\u5f00\u59cb\u200b\u7684\u200b\u65f6\u95f4\u200b\u548c\u200b\u7ed3\u675f\u200b\u7684\u200b\u65f6\u95f4\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u5217\u8868\u200b\u6ee1\u8db3\u200b\uff1a(1) \u200b\u5217\u8868\u200b\u5355\u8c03\u200b\u975e\u51cf\u200b\uff1b(2) \u200b\u5076\u6570\u200b\u4e0b\u200b\u6807\u7684\u200b\u65f6\u95f4\u200b\u662f\u200b\u5f00\u59cb\u200b\u65f6\u95f4\u200b\uff0c\u200b\u5947\u6570\u200b\u4e0b\u200b\u6807\u7684\u200b\u65f6\u95f4\u200b\u662f\u200b\u7ed3\u675f\u200b\u65f6\u95f4\u200b\u3002\u200b\u7b2c\u4e00\u4e2a\u200b\u5217\u8868\u200b\u5b58\u50a8\u200b\u7684\u200b\u662f\u200b\u81f3\u5c11\u200b\u9884\u5b9a\u200b\u8fc7\u200b\u4e00\u6b21\u200b\u7684\u200b\u65f6\u95f4\u6bb5\u200b\uff0c\u200b\u7b2c\u4e8c\u4e2a\u200b\u5217\u8868\u200b\u5b58\u50a8\u200b\u7684\u200b\u662f\u200b\u9884\u5b9a\u200b\u4e24\u6b21\u200b\u7684\u200b\u65f6\u95f4\u6bb5\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u65b0\u200b\u7684\u200b\u65f6\u95f4\u6bb5\u200b\u548c\u200b\u7b2c\u4e8c\u4e2a\u200b\u5217\u8868\u200b\u4e2d\u200b\u7684\u200b\u65f6\u95f4\u6bb5\u200b\u6709\u200b\u91cd\u53e0\u200b\uff0c\u200b\u8bf4\u660e\u200b\u6709\u200b\u4e09\u91cd\u200b\u9884\u8ba2\u200b\u3002\u200b\u53ef\u4ee5\u200b\u7528\u200b729. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b I\u200b\u7684\u200b\u65b9\u6cd5\u200b\u5728\u200b\u7b2c\u4e8c\u4e2a\u200b\u5217\u8868\u200b\u4e2d\u200b\u68c0\u67e5\u200b\u662f\u5426\u200b\u6709\u200b\u91cd\u53e0\u200b\u7684\u200b\u65f6\u95f4\u6bb5\u200b\u3002\u200b\u5426\u5219\u200b\uff0c\u200b\u6309\u7167\u200b\u5982\u4e0b\u200b\u7684\u200b\u65b9\u5f0f\u200b\u5c06\u200b\u65b0\u200b\u7684\u200b\u65f6\u95f4\u6bb5\u200b\u52a0\u5165\u200b\u5230\u200b\u5217\u8868\u200b\u4e2d\u200b\uff1a</p> <ol> <li>\u200b\u66f4\u65b0\u200b\u7b2c\u4e00\u4e2a\u200b\u5217\u8868\u200b\uff0c\u200b\u5408\u5e76\u200b\u5df2\u6709\u200b\u7684\u200b\u533a\u95f4\u200b\u548c\u200b\u65b0\u200b\u7684\u200b\u533a\u95f4\u200b\uff0c</li> <li>\u200b\u68c0\u67e5\u200b\u662f\u5426\u200b\u6709\u200b\u91cd\u53e0\u200b\u7684\u200b\u65f6\u95f4\u6bb5\u200b</li> <li>\u200b\u5c06\u200b\u91cd\u53e0\u200b\u7684\u200b\u65f6\u95f4\u6bb5\u200b\u52a0\u5165\u200b\u7b2c\u4e8c\u4e2a\u200b\u5217\u8868\u200b\u3002</li> </ol> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>from typing import List\nimport bisect\n\nclass MyCalendarTwo:\n\n    def __init__(self):\n        self.times: List[int] = []\n        self.double_times: List[int] = []\n\n    def _check(self, startTime: int, endTime: int) -&gt; bool:\n        # Only check in the time span visited twice\n        x = bisect.bisect_right(self.double_times, startTime)\n        y = bisect.bisect_left(self.double_times, endTime)\n\n        if x != y:\n            return False\n        if x % 2:\n            return False\n        return True\n\n    def insert_double(self, start: int, end: int) -&gt; None:\n        bisect.insort_left(self.double_times, end)\n        bisect.insort_right(self.double_times, start)\n\n    def update(self, startTime: int, endTime: int) -&gt; None:\n        left_idx = bisect.bisect_right(self.times, startTime)\n        right_idx = bisect.bisect_left(self.times, endTime)\n\n        left = self.times[:left_idx]\n        mid = [startTime, *self.times[left_idx:right_idx], endTime]\n        right = self.times[right_idx:]\n\n        # We only care about mid\n        new = [startTime, endTime]\n        if left_idx % 2: # Left side falls in the time span\n            new.pop(0)\n        elif left and left[-1] == new[0]: # Merge time span\n            left.pop(-1), new.pop(0)\n        if right_idx % 2: # Right side falls in the time span\n            new.pop(-1)\n        elif right and right[0] == new[-1]: # Merge time span\n            right.pop(0), new.pop(-1)\n\n        # Re-merge all the time span\n        self.times = [*left, *new, *right]\n\n        # Update time span visited twice\n        for i in range((left_idx + 1) % 2, len(mid), 2):\n            if i + 1 &gt;= len(mid):\n                break\n            self.insert_double(mid[i], mid[i + 1])\n\n    def book(self, startTime: int, endTime: int) -&gt; bool:\n        if not self._check(startTime, endTime):\n            return False\n        self.update(startTime, endTime)\n        return True\n\n\n# Your MyCalendarTwo object will be instantiated and called as such:\n# obj = MyCalendarTwo()\n# param_1 = obj.book(startTime,endTime)\n</code></pre>","tags":["\u8bbe\u8ba1","\u7ebf\u6bb5\u6811","\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e","\u6709\u5e8f\u96c6\u5408"]},{"location":"coding/leetcode/732/","title":"732. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b III","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u56f0\u96be\u200b</p>","tags":["\u8bbe\u8ba1","\u7ebf\u6bb5\u6811","\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e","\u6709\u5e8f\u96c6\u5408"]},{"location":"coding/leetcode/732/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u5f53\u200b <code>k</code> \u200b\u4e2a\u200b\u65e5\u7a0b\u200b\u5b58\u5728\u200b\u4e00\u4e9b\u200b\u975e\u7a7a\u200b\u4ea4\u96c6\u200b\u65f6\u200b\uff08\u200b\u5373\u200b, <code>k</code> \u200b\u4e2a\u200b\u65e5\u7a0b\u200b\u5305\u542b\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u76f8\u540c\u200b\u65f6\u95f4\u200b\uff09\uff0c\u200b\u5c31\u200b\u4f1a\u200b\u4ea7\u751f\u200b <code>k</code> \u200b\u6b21\u200b\u9884\u8ba2\u200b\u3002</p> <p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e9b\u200b\u65e5\u7a0b\u5b89\u6392\u200b <code>[startTime, endTime)</code> \uff0c\u200b\u8bf7\u200b\u4f60\u200b\u5728\u200b\u6bcf\u4e2a\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u6dfb\u52a0\u200b\u540e\u200b\uff0c\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b <code>k</code> \uff0c\u200b\u8868\u793a\u200b\u6240\u6709\u200b\u5148\u524d\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u4f1a\u200b\u4ea7\u751f\u200b\u7684\u200b\u6700\u5927\u200b <code>k</code> \u200b\u6b21\u200b\u9884\u8ba2\u200b\u3002</p> <p>\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b <code>MyCalendarThree</code> \u200b\u7c7b\u6765\u200b\u5b58\u653e\u200b\u4f60\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4e00\u76f4\u200b\u6dfb\u52a0\u200b\u65b0\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u3002</p> <ul> <li><code>MyCalendarThree()</code> \u200b\u521d\u59cb\u5316\u200b\u5bf9\u8c61\u200b\u3002</li> <li><code>int book(int startTime, int endTime)</code> \u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b <code>k</code> \uff0c\u200b\u8868\u793a\u200b\u65e5\u5386\u200b\u4e2d\u200b\u5b58\u5728\u200b\u7684\u200b <code>k</code> \u200b\u6b21\u200b\u9884\u8ba2\u200b\u7684\u200b\u6700\u5927\u503c\u200b\u3002</li> </ul> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a <pre><code>[\"MyCalendarThree\", \"book\", \"book\", \"book\", \"book\", \"book\", \"book\"]\n[[], [10, 20], [50, 60], [10, 40], [5, 15], [5, 10], [25, 55]]\n</code></pre> \u200b\u8f93\u51fa\u200b\uff1a <pre><code>[null, 1, 1, 2, 3, 3, 3]\n</code></pre></p> <p>\u200b\u89e3\u91ca\u200b\uff1a <pre><code>MyCalendarThree myCalendarThree = new MyCalendarThree();\nmyCalendarThree.book(10, 20); // \u200b\u8fd4\u56de\u200b 1 \uff0c\u200b\u7b2c\u4e00\u4e2a\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u53ef\u4ee5\u200b\u9884\u8ba2\u200b\u5e76\u4e14\u200b\u4e0d\u200b\u5b58\u5728\u200b\u76f8\u4ea4\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6700\u5927\u200b k \u200b\u6b21\u200b\u9884\u8ba2\u200b\u662f\u200b 1 \u200b\u6b21\u200b\u9884\u8ba2\u200b\u3002\nmyCalendarThree.book(50, 60); // \u200b\u8fd4\u56de\u200b 1 \uff0c\u200b\u7b2c\u4e8c\u4e2a\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u53ef\u4ee5\u200b\u9884\u8ba2\u200b\u5e76\u4e14\u200b\u4e0d\u200b\u5b58\u5728\u200b\u76f8\u4ea4\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6700\u5927\u200b k \u200b\u6b21\u200b\u9884\u8ba2\u200b\u662f\u200b 1 \u200b\u6b21\u200b\u9884\u8ba2\u200b\u3002\nmyCalendarThree.book(10, 40); // \u200b\u8fd4\u56de\u200b 2 \uff0c\u200b\u7b2c\u4e09\u4e2a\u200b\u65e5\u7a0b\u5b89\u6392\u200b [10, 40) \u200b\u4e0e\u200b\u7b2c\u4e00\u4e2a\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u76f8\u4ea4\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6700\u5927\u200b k \u200b\u6b21\u200b\u9884\u8ba2\u200b\u662f\u200b 2 \u200b\u6b21\u200b\u9884\u8ba2\u200b\u3002\nmyCalendarThree.book(5, 15); // \u200b\u8fd4\u56de\u200b 3 \uff0c\u200b\u5269\u4e0b\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u7684\u200b\u6700\u5927\u200b k \u200b\u6b21\u200b\u9884\u8ba2\u200b\u662f\u200b 3 \u200b\u6b21\u200b\u9884\u8ba2\u200b\u3002\nmyCalendarThree.book(5, 10); // \u200b\u8fd4\u56de\u200b 3\nmyCalendarThree.book(25, 55); // \u200b\u8fd4\u56de\u200b 3\n</code></pre></p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>0 &lt;= startTime &lt; endTime &lt;= 109</code></li> <li>\u200b\u6bcf\u4e2a\u200b\u6d4b\u8bd5\u7528\u4f8b\u200b\uff0c\u200b\u8c03\u7528\u200b <code>book</code> \u200b\u51fd\u6570\u200b\u6700\u591a\u200b\u4e0d\u200b\u8d85\u8fc7\u200b <code>400</code> \u200b\u6b21\u200b</li> </ul> <p>Reference</p>","tags":["\u8bbe\u8ba1","\u7ebf\u6bb5\u6811","\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e","\u6709\u5e8f\u96c6\u5408"]},{"location":"coding/leetcode/732/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u548c\u200b 731. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b II \u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u4f7f\u7528\u200b\u5d4c\u5957\u200b\u5217\u8868\u200b\u5b58\u50a8\u200b\u6240\u6709\u200b\u65f6\u95f4\u6bb5\u200b\uff0c\u200b\u7b2c\u200b\\(i\\)\u200b\u4e2a\u200b\u5217\u8868\u200b\u5b58\u50a8\u200b\u88ab\u200b\u8bbf\u95ee\u200b\\(i\\)\u200b\u6b21\u200b\u7684\u200b\u65f6\u95f4\u6bb5\u200b\u3002\u200b\u6bcf\u200b\u4e00\u8f6e\u200b\u63d2\u5165\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u533a\u95f4\u200b\u540e\u200b\uff0c(1) \u200b\u66f4\u65b0\u200b\u672c\u5c42\u200b\u8bb0\u5f55\u200b\u7684\u200b\u533a\u95f4\u200b\uff0c(2) \u200b\u5c06\u200b\u91cd\u590d\u200b\u7684\u200b\u533a\u95f4\u200b\u63d2\u5165\u200b\u5230\u200b\u4e0b\u200b\u4e00\u5c42\u200b\u4e2d\u200b\u3002\u200b\u6700\u7ec8\u200b\uff0c\u200b\u5d4c\u5957\u200b\u5c42\u6570\u200b\u5373\u200b\u4e3a\u200b\u6700\u5927\u200b\u7684\u200b\u9884\u8ba2\u200b\u6b21\u6570\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>from typing import List\nimport bisect\n\nclass MyCalendarThree:\n\n    def __init__(self):\n        self.times: List[List[int]] = []\n\n    def insert(self, startTime: int, endTime: int, level: int):\n        if level == len(self.times):\n            self.times.append([])\n        left_idx = bisect.bisect_right(self.times[level], startTime)\n        right_idx = bisect.bisect_left(self.times[level], endTime)\n\n        left = self.times[level][:left_idx]\n        mid = [startTime, *self.times[level][left_idx:right_idx], endTime]\n        right = self.times[level][right_idx:]\n\n        new = [startTime, endTime]\n        if left_idx % 2:\n            new.pop(0)\n        elif left and left[-1] == new[0]:\n            left.pop(-1), new.pop(0)\n        if right_idx % 2:\n            new.pop(-1)\n        elif right and right[0] == new[-1]:\n            right.pop(0), new.pop(-1)\n        self.times[level] = [*left, *new, *right]\n\n        for i in range((left_idx + 1) % 2, len(mid), 2):\n            if i + 1 &gt;= len(mid):\n                break\n            self.insert(mid[i], mid[i + 1], level + 1)\n\n    def book(self, startTime: int, endTime: int) -&gt; int:\n        self.insert(startTime, endTime, 0)\n        return len(self.times)\n\n\n# Your MyCalendarThree object will be instantiated and called as such:\n# obj = MyCalendarThree()\n# param_1 = obj.book(startTime,endTime)\n</code></pre>","tags":["\u8bbe\u8ba1","\u7ebf\u6bb5\u6811","\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e","\u6709\u5e8f\u96c6\u5408"]},{"location":"coding/leetcode/74/","title":"74. \u200b\u641c\u7d22\u200b\u4e8c\u7ef4\u200b\u77e9\u9635","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/74/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7f16\u5199\u200b\u4e00\u4e2a\u200b\u9ad8\u6548\u200b\u7684\u200b\u7b97\u6cd5\u200b\u6765\u200b\u5224\u65ad\u200b\u00a0<code>m x n</code>\u00a0\u200b\u77e9\u9635\u200b\u4e2d\u200b\uff0c\u200b\u662f\u5426\u200b\u5b58\u5728\u200b\u4e00\u4e2a\u200b\u76ee\u6807\u503c\u200b\u3002\u200b\u8be5\u200b\u77e9\u9635\u200b\u5177\u6709\u200b\u5982\u4e0b\u200b\u7279\u6027\u200b\uff1a</p> <ul> <li>\u200b\u6bcf\u884c\u200b\u4e2d\u200b\u7684\u200b\u6574\u6570\u200b\u4ece\u5de6\u5230\u53f3\u200b\u6309\u200b\u5347\u5e8f\u200b\u6392\u5217\u200b\u3002</li> <li>\u200b\u6bcf\u884c\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u6574\u6570\u200b\u5927\u4e8e\u200b\u524d\u200b\u4e00\u884c\u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u3002</li> </ul> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p></p> <pre><code>\u200b\u8f93\u5165\u200b\uff1amatrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3\n\u200b\u8f93\u51fa\u200b\uff1atrue\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p></p> <pre><code>\u200b\u8f93\u5165\u200b\uff1amatrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13\n\u200b\u8f93\u51fa\u200b\uff1afalse\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>m == matrix.length</code></li> <li><code>n == matrix[i].length</code></li> <li><code>1 &lt;= m, n &lt;= 100</code></li> <li><code>-10^4 &lt;= matrix[i][j], target &lt;= 10^4</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/74/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u6839\u636e\u200b\u77e9\u9635\u200b\u7684\u200b\u7279\u6027\u200b\u53ef\u77e5\u200b\uff0c\u200b\u5047\u8bbe\u200b\u77e9\u9635\u200b\u4e3a\u200b\\(\\{a_{ij}\\}_{m\\times n}\\)\uff0c\u200b\u76ee\u6807\u503c\u200b\\(t\\)\u200b\u4f4d\u4e8e\u200b\u5750\u6807\u200b\\((i^*, j^*)\\)\u200b\u5904\u200b\uff0c\u200b\u6709\u200b\uff1a</p> <ul> <li>\u200b\u5bf9\u4e8e\u200b\u4efb\u4f55\u200b\\(i, j\\)\uff0c\u200b\u82e5\u200b\\(i &lt; i^*\\)\uff0c\u200b\u5219\u200b\\(a_{ij} &lt; t\\)\uff0c\u200b\u5f53\u200b\\(i = i^*\\)\u200b\u65f6\u200b\uff0c\u200b\u82e5\u200b\\(j &lt; j^*\\)\uff0c\u200b\u5219\u200b\\(a_{ij} &lt; t\\)</li> <li>\u200b\u5bf9\u4e8e\u200b\u4efb\u4f55\u200b\\(i, j\\)\uff0c\u200b\u82e5\u200b\\(i &gt; i^*\\)\uff0c\u200b\u5219\u200b\\(a_{ij} &gt; t\\)\uff0c\u200b\u5f53\u200b\\(i = i^*\\)\u200b\u65f6\u200b\uff0c\u200b\u82e5\u200b\\(j &gt; j^*\\)\uff0c\u200b\u5219\u200b\\(a_{ij} &lt; t\\)</li> </ul> <p>\u200b\u5373\u200b\u76ee\u6807\u503c\u200b\u5c06\u200b\u77e9\u9635\u200b\u5206\u4e3a\u200b\u4e24\u200b\u90e8\u5206\u200b\uff1a\u200b\u53f3\u4fa7\u200b\u548c\u200b\u4e0b\u4fa7\u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b\u76ee\u6807\u503c\u200b\uff0c\u200b\u5de6\u4fa7\u200b\u548c\u200b\u4e0a\u4fa7\u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u5c0f\u4e8e\u200b\u7b49\u4e8e\u200b\u76ee\u6807\u503c\u200b\u3002</p> <p>\u200b\u4ece\u200b\u77e9\u5f62\u200b\u7684\u200b\u5de6\u4e0b\u89d2\u200b\u5f00\u59cb\u200b\uff1a</p> <ul> <li>\u200b\u82e5\u200b\u5f53\u524d\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u6570\u503c\u200b\u5c0f\u4e8e\u200b\u76ee\u6807\u503c\u200b\uff0c\u200b\u8bf4\u660e\u200b\u76ee\u6807\u503c\u200b\u4f4d\u4e8e\u200b\u5f53\u524d\u200b\u884c\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5411\u200b\u53f3\u200b\u79fb\u52a8\u200b\u5373\u53ef\u200b\u627e\u5230\u200b\u76ee\u6807\u503c\u200b</li> <li>\u200b\u82e5\u200b\u5f53\u524d\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u6570\u503c\u200b\u5927\u4e8e\u200b\u76ee\u6807\u503c\u200b\uff0c\u200b\u8bf4\u660e\u200b\u76ee\u6807\u503c\u200b\u4e0d\u200b\u5728\u200b\u5f53\u524d\u200b\u884c\u200b\uff0c\u200b\u9700\u8981\u200b\u5411\u4e0a\u200b\u79fb\u52a8\u200b</li> </ul> <p>\u200b\u91cd\u590d\u200b\u5982\u200b\u4e0a\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u76f4\u81f3\u200b\u627e\u5230\u200b\u76ee\u6807\u200b\u5143\u7d20\u200b\u3002</p> <pre><code>bool searchMatrix(int** matrix, int matrixSize, int* matrixColSize, int target){\n    int x = matrixSize - 1, y = 0;\n    while (x &gt;= 0 &amp;&amp; y &lt; *matrixColSize)\n    {\n        if (matrix[x][y] &lt; target)\n            y++;\n        else if (matrix[x][y] &gt; target)\n            x--;\n        else\n            return true;\n    }\n    return false;\n}\n</code></pre> <p>\u200b\u4ee5\u4e0a\u200b\u7b97\u6cd5\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u8fdb\u884c\u200b\u4f18\u5316\u200b\u3002</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/75/","title":"75. \u200b\u989c\u8272\u200b\u5206\u7c7b","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6392\u5e8f","\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/75/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b\u7ea2\u8272\u200b\u3001\u200b\u767d\u8272\u200b\u548c\u200b\u84dd\u8272\u200b\uff0c\u200b\u4e00\u5171\u200b\u00a0<code>n</code> \u200b\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u6570\u7ec4\u200b\uff0c\u200b\u539f\u5730\u200b\u5bf9\u200b\u5b83\u4eec\u200b\u8fdb\u884c\u200b\u6392\u5e8f\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u76f8\u540c\u200b\u989c\u8272\u200b\u7684\u200b\u5143\u7d20\u200b\u76f8\u90bb\u200b\uff0c\u200b\u5e76\u200b\u6309\u7167\u200b\u7ea2\u8272\u200b\u3001\u200b\u767d\u8272\u200b\u3001\u200b\u84dd\u8272\u200b\u987a\u5e8f\u6392\u5217\u200b\u3002</p> <p>\u200b\u6b64\u9898\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u6574\u6570\u200b <code>0</code>\u3001\u00a0<code>1</code> \u200b\u548c\u200b <code>2</code> \u200b\u5206\u522b\u200b\u8868\u793a\u200b\u7ea2\u8272\u200b\u3001\u200b\u767d\u8272\u200b\u548c\u200b\u84dd\u8272\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [2,0,2,1,1,0]\n\u200b\u8f93\u51fa\u200b\uff1a[0,0,1,1,2,2]\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [2,0,1]\n\u200b\u8f93\u51fa\u200b\uff1a[0,1,2]\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [0]\n\u200b\u8f93\u51fa\u200b\uff1a[0]\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 4\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [1]\n\u200b\u8f93\u51fa\u200b\uff1a[1]\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>n == nums.length</code></li> <li><code>1 &lt;= n &lt;= 300</code></li> <li><code>nums[i]</code> \u200b\u4e3a\u200b <code>0</code>\u3001<code>1</code> \u200b\u6216\u200b <code>2</code></li> </ul> <p>\u200b\u8fdb\u9636\u200b\uff1a</p> <ul> <li>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4e0d\u200b\u4f7f\u7528\u200b\u4ee3\u7801\u200b\u5e93\u4e2d\u200b\u7684\u200b\u6392\u5e8f\u200b\u51fd\u6570\u200b\u6765\u200b\u89e3\u51b3\u200b\u8fd9\u9053\u9898\u200b\u5417\u200b\uff1f</li> <li>\u200b\u4f60\u200b\u80fd\u200b\u60f3\u200b\u51fa\u200b\u4e00\u4e2a\u200b\u4ec5\u200b\u4f7f\u7528\u200b\u5e38\u6570\u200b\u7a7a\u95f4\u200b\u7684\u200b\u4e00\u8d9f\u200b\u626b\u63cf\u200b\u7b97\u6cd5\u200b\u5417\u200b\uff1f</li> </ul> <p>Reference</p>","tags":["\u6392\u5e8f","\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/75/#_2","title":"\u9898\u89e3","text":"<ol> <li>\u200b\u7edf\u8ba1\u200b\u6570\u7ec4\u200b\u4e2d\u200b<code>0</code>\u3001<code>1</code>\u200b\u548c\u200b<code>2</code>\u200b\u7684\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\uff0c\u200b\u6309\u7167\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u91cd\u65b0\u200b\u751f\u6210\u200b\u6570\u7ec4\u200b\u3002</li> <li>\u200b\u4f7f\u7528\u200b\u5feb\u901f\u200b\u6392\u5e8f\u200b\u7684\u200b\u601d\u8def\u200b\uff0c\u200b\u82e5\u200b\u51fa\u73b0\u200b<code>0</code>\u200b\u5219\u200b\u79fb\u52a8\u200b\u5230\u200b\u6570\u7ec4\u200b\u5f00\u5934\u200b\uff0c\u200b\u82e5\u200b\u51fa\u73b0\u200b<code>2</code>\u200b\u5219\u200b\u79fb\u52a8\u200b\u5230\u200b\u6570\u7ec4\u200b\u7ed3\u5c3e\u200b\u3002</li> </ol> <pre><code>void swap(int *a, int *b)\n{\n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}\nvoid sortColors(int* nums, int numsSize){\n    int head = 0, tail = numsSize - 1, i = 0;\n    for (i = 0; i &lt;= tail &amp;&amp; tail &gt; head; i++)\n    {\n        if (nums[i] == 0)\n            swap(nums + head++, nums + i);\n        if (nums[i] == 2)\n            swap(nums + tail--, nums + i--);\n    }\n}\n</code></pre>","tags":["\u6392\u5e8f","\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/779/","title":"779. \u200b\u7b2c\u200bK\u200b\u4e2a\u200b\u8bed\u6cd5\u200b\u7b26\u53f7","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u9012\u5f52"]},{"location":"coding/leetcode/779/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u5728\u200b\u7b2c\u4e00\u884c\u200b\u6211\u4eec\u200b\u5199\u200b\u4e0a\u200b\u4e00\u4e2a\u200b<code>0</code>\u3002\u200b\u63a5\u4e0b\u6765\u200b\u7684\u200b\u6bcf\u200b\u4e00\u884c\u200b\uff0c\u200b\u5c06\u200b\u524d\u200b\u4e00\u884c\u200b\u4e2d\u200b\u7684\u200b<code>0</code>\u200b\u66ff\u6362\u200b\u4e3a\u200b<code>01</code>\uff0c<code>1</code>\u200b\u66ff\u6362\u200b\u4e3a\u200b<code>10</code>\u3002</p> <p>\u200b\u7ed9\u5b9a\u200b\u884c\u200b\u6570\u200b<code>N</code>\u200b\u548c\u200b\u5e8f\u6570\u200b<code>K</code>\uff0c\u200b\u8fd4\u56de\u200b\u7b2c\u200b<code>N</code>\u200b\u884c\u4e2d\u200b\u7b2c\u200b<code>K</code>\u200b\u4e2a\u5b57\u7b26\u200b\u3002\uff08<code>K</code>\u200b\u4ece\u200b 1 \u200b\u5f00\u59cb\u200b\uff09</p> <p>\u200b\u4f8b\u5b50\u200b: <pre><code>\u200b\u8f93\u5165\u200b: N = 1, K = 1\n\u200b\u8f93\u51fa\u200b: 0\n\n\u200b\u8f93\u5165\u200b: N = 2, K = 1\n\u200b\u8f93\u51fa\u200b: 0\n\n\u200b\u8f93\u5165\u200b: N = 2, K = 2\n\u200b\u8f93\u51fa\u200b: 1\n\n\u200b\u8f93\u5165\u200b: N = 4, K = 5\n\u200b\u8f93\u51fa\u200b: 1\n\n\u200b\u89e3\u91ca\u200b:\n\u200b\u7b2c\u4e00\u884c\u200b: 0\n\u200b\u7b2c\u4e8c\u884c\u200b: 01\n\u200b\u7b2c\u4e09\u884c\u200b: 0110\n\u200b\u7b2c\u56db\u884c\u200b: 01101001\n</code></pre> \u200b\u6ce8\u610f\u200b\uff1a</p> <ul> <li><code>N</code>\u200b\u7684\u200b\u8303\u56f4\u200b<code>[1, 30]</code>.</li> <li><code>K</code>\u200b\u7684\u200b\u8303\u56f4\u200b<code>[1, 2^(N-1)]</code>.</li> </ul> <p>Reference</p>","tags":["\u9012\u5f52"]},{"location":"coding/leetcode/779/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u6ce8\u610f\u200b\u5230\u200b\u6bcf\u4e2a\u200b\u7ed3\u679c\u200b\u5b57\u7b26\u4e32\u200b\u53ef\u4ee5\u200b\u5206\u4e3a\u200b4\u200b\u4e2a\u200b\u7b49\u200b\u957f\u200b\u7684\u200b\u90e8\u5206\u200b\uff0c\u200b\u5176\u4e2d\u200b\u7b2c\u200b1\u30014\u200b\u90e8\u5206\u200b\u76f8\u540c\u200b\uff0c2\u30013\u200b\u90e8\u5206\u200b\u76f8\u540c\u200b\uff0c\u200b\u4e24\u7ec4\u200b\u7684\u200b\u4e8c\u8fdb\u5236\u200b\u4e92\u8865\u200b\u3002\u200b\u540c\u65f6\u200b\uff0c\u200b\u4efb\u610f\u200b\u4e00\u884c\u200b\u4ee5\u4e2d\u70b9\u200b\u4e3a\u754c\u200b\uff0c\u200b\u5de6\u53f3\u200b\u4e24\u4fa7\u200b\u4e92\u8865\u200b\u3002\u200b\u56e0\u6b64\u200b\u53ea\u200b\u9700\u8981\u200b\u5728\u200b\u5de6\u4fa7\u200b\u8fdb\u884c\u200b\u67e5\u627e\u200b\uff0c\u200b\u53f3\u4fa7\u200b\u90e8\u5206\u200b\u53d6\u53cd\u200b\u5373\u53ef\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>int kthGrammar(int N, int K)\n{\n    if (N == 1)\n        return 0;\n    int unit = 1 &lt;&lt; (N - 2);\n    return !(K &lt;= unit) ^ kthGrammar(N - 1, ((K - 1) &amp; (unit - 1)) + 1);\n}\n</code></pre>","tags":["\u9012\u5f52"]},{"location":"coding/leetcode/78/","title":"78. \u200b\u5b50\u96c6","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u4f4d\u8fd0\u7b97","\u6570\u7ec4","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/78/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b\u00a0<code>nums</code> \uff0c\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b \u200b\u4e92\u4e0d\u200b\u76f8\u540c\u200b \u3002\u200b\u8fd4\u56de\u200b\u8be5\u200b\u6570\u7ec4\u200b\u6240\u6709\u200b\u53ef\u80fd\u200b\u7684\u200b\u5b50\u96c6\u200b\uff08\u200b\u5e42\u96c6\u200b\uff09\u3002</p> <p>\u200b\u89e3\u96c6\u200b \u200b\u4e0d\u80fd\u200b \u200b\u5305\u542b\u200b\u91cd\u590d\u200b\u7684\u200b\u5b50\u96c6\u200b\u3002\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u6309\u200b \u200b\u4efb\u610f\u200b\u987a\u5e8f\u200b \u200b\u8fd4\u56de\u200b\u89e3\u96c6\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [1,2,3]\n\u200b\u8f93\u51fa\u200b\uff1a[[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [0]\n\u200b\u8f93\u51fa\u200b\uff1a[[],[0]]\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 10</code></li> <li><code>-10 &lt;= nums[i] &lt;= 10</code></li> <li><code>nums</code> \u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b \u200b\u4e92\u4e0d\u200b\u76f8\u540c\u200b</li> </ul> <p>Reference</p>","tags":["\u4f4d\u8fd0\u7b97","\u6570\u7ec4","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/78/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u5df2\u77e5\u200b\u96c6\u5408\u200b\u4e2d\u200b\u4e0d\u200b\u5b58\u5728\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u6574\u6570\u200b\u4e2d\u200b\u7684\u200b\u6bcf\u200b\u4e00\u4f4d\u200b\u8868\u793a\u200b\u96c6\u5408\u200b\u4e2d\u200b\u5143\u7d20\u200b\u7684\u200b\u9009\u53d6\u200b\u72b6\u6001\u200b\u3002</p> <pre><code>/**\n * Return an array of arrays of size *returnSize.\n * The sizes of the arrays are returned as *returnColumnSizes array.\n * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().\n */\nint count1(int x)\n{\n    int ret = 0;\n    while (x)\n    {\n        ret += x &amp; 1;\n        x &gt;&gt;= 1;\n    }\n    return ret;\n}\nint** subsets(int* nums, int numsSize, int* returnSize, int** returnColumnSizes){\n    *returnSize = 1 &lt;&lt; numsSize;\n    *returnColumnSizes = (int *)memset(malloc(sizeof(int) * *returnSize), 0, sizeof(int) * *returnSize);\n    int i = 0, j = 0, **ret = (int **)malloc(sizeof(int *) * *returnSize), pos;\n    for (i = 0; i &lt; *returnSize; i++)\n    {\n        (*returnColumnSizes)[i] = count1(i);\n        ret[i] = (int *)malloc(sizeof(int) * (*returnColumnSizes)[i]);\n        pos = 0;\n        for (j = 0; j &lt; numsSize; j++)\n            if (i &amp; (1 &lt;&lt; j))\n                ret[i][pos++] = nums[j];\n    }\n    return ret;\n}\n</code></pre>","tags":["\u4f4d\u8fd0\u7b97","\u6570\u7ec4","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/781/","title":"781. \u200b\u68ee\u6797\u200b\u4e2d\u200b\u7684\u200b\u5154\u5b50","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u54c8\u5e0c\u8868","\u6570\u5b66"]},{"location":"coding/leetcode/781/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u68ee\u6797\u200b\u4e2d\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5154\u5b50\u200b\u90fd\u200b\u6709\u200b\u989c\u8272\u200b\u3002\u200b\u5176\u4e2d\u200b\u4e00\u4e9b\u200b\u5154\u5b50\u200b\uff08\u200b\u53ef\u80fd\u200b\u662f\u200b\u5168\u90e8\u200b\uff09\u200b\u544a\u8bc9\u200b\u4f60\u200b\u8fd8\u6709\u200b\u591a\u5c11\u200b\u5176\u4ed6\u200b\u7684\u200b\u5154\u5b50\u200b\u548c\u200b\u81ea\u5df1\u200b\u6709\u200b\u76f8\u540c\u200b\u7684\u200b\u989c\u8272\u200b\u3002\u200b\u6211\u4eec\u200b\u5c06\u200b\u8fd9\u4e9b\u200b\u56de\u7b54\u200b\u653e\u5728\u200b\u00a0<code>answers</code>\u00a0\u200b\u6570\u7ec4\u200b\u91cc\u200b\u3002</p> <p>\u200b\u8fd4\u56de\u200b\u68ee\u6797\u200b\u4e2d\u200b\u5154\u5b50\u200b\u7684\u200b\u6700\u5c11\u200b\u6570\u91cf\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b:</p> <pre><code>\u200b\u8f93\u5165\u200b: answers = [1, 1, 2]\n\u200b\u8f93\u51fa\u200b: 5\n\u200b\u89e3\u91ca\u200b:\n\u200b\u4e24\u53ea\u200b\u56de\u7b54\u200b\u4e86\u200b \"1\" \u200b\u7684\u200b\u5154\u5b50\u200b\u53ef\u80fd\u200b\u6709\u200b\u76f8\u540c\u200b\u7684\u200b\u989c\u8272\u200b\uff0c\u200b\u8bbe\u200b\u4e3a\u200b\u7ea2\u8272\u200b\u3002\n\u200b\u4e4b\u540e\u200b\u56de\u7b54\u200b\u4e86\u200b \"2\" \u200b\u7684\u200b\u5154\u5b50\u200b\u4e0d\u4f1a\u200b\u662f\u200b\u7ea2\u8272\u200b\uff0c\u200b\u5426\u5219\u200b\u4ed6\u4eec\u200b\u7684\u200b\u56de\u7b54\u200b\u4f1a\u200b\u76f8\u4e92\u200b\u77db\u76fe\u200b\u3002\n\u200b\u8bbe\u200b\u56de\u7b54\u200b\u4e86\u200b \"2\" \u200b\u7684\u200b\u5154\u5b50\u200b\u4e3a\u200b\u84dd\u8272\u200b\u3002\n\u200b\u6b64\u5916\u200b\uff0c\u200b\u68ee\u6797\u200b\u4e2d\u200b\u8fd8\u200b\u5e94\u6709\u200b\u53e6\u5916\u200b 2 \u200b\u53ea\u200b\u84dd\u8272\u200b\u5154\u5b50\u200b\u7684\u200b\u56de\u7b54\u200b\u6ca1\u6709\u200b\u5305\u542b\u200b\u5728\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u3002\n\u200b\u56e0\u6b64\u200b\u68ee\u6797\u200b\u4e2d\u200b\u5154\u5b50\u200b\u7684\u200b\u6700\u5c11\u200b\u6570\u91cf\u200b\u662f\u200b 5: 3 \u200b\u53ea\u200b\u56de\u7b54\u200b\u7684\u200b\u548c\u200b 2 \u200b\u53ea\u200b\u6ca1\u6709\u200b\u56de\u7b54\u200b\u7684\u200b\u3002\n\n\u200b\u8f93\u5165\u200b: answers = [10, 10, 10]\n\u200b\u8f93\u51fa\u200b: 11\n\n\u200b\u8f93\u5165\u200b: answers = []\n\u200b\u8f93\u51fa\u200b: 0\n</code></pre> <p>\u200b\u8bf4\u660e\u200b:</p> <ul> <li><code>answers</code>\u00a0\u200b\u7684\u200b\u957f\u5ea6\u200b\u6700\u5927\u200b\u4e3a\u200b<code>1000</code>\u3002</li> <li><code>answers[i]</code>\u00a0\u200b\u662f\u200b\u5728\u200b\u00a0<code>[0, 999]</code>\u00a0\u200b\u8303\u56f4\u200b\u5185\u200b\u7684\u200b\u6574\u6570\u200b\u3002</li> </ul> <p>Reference</p>","tags":["\u54c8\u5e0c\u8868","\u6570\u5b66"]},{"location":"coding/leetcode/781/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u5154\u5b50\u200b\u7684\u200b\u5206\u7c7b\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u60c5\u51b5\u200b\uff0c\u200b\u8bbe\u200b\u7b2c\u200b\\(i\\)\u200b\u53ea\u200b\u5154\u5b50\u200b\u7684\u200b\u62a5\u6570\u200b\u4e3a\u200b\\(a_i\\)\uff0c\u200b\u5219\u200b\uff1a</p> <ul> <li>\u200b\u82e5\u200b\\(a_i \\not = a_j\\)\uff0c\u200b\u5219\u200b\u7b2c\u200b\\(i\\)\u200b\u53ea\u200b\u5154\u5b50\u200b\u4e0e\u200b\u7b2c\u200b\\(j\\)\u200b\u53ea\u200b\u5154\u5b50\u200b\u5fc5\u7136\u200b\u4e0d\u200b\u5c5e\u4e8e\u200b\u4e00\u7c7b\u200b</li> <li>\u200b\u82e5\u200b\\(a_i = a_j\\)\uff0c\u200b\u5219\u200b\u7b2c\u200b\\(i\\)\u200b\u53ea\u200b\u5154\u5b50\u200b\u4e0e\u200b\u7b2c\u200b\\(j\\)\u200b\u53ea\u200b\u5154\u5b50\u200b\u53ef\u80fd\u200b\u5c5e\u4e8e\u200b\u4e00\u7c7b\u200b\uff0c</li> <li>\u200b\u7b2c\u200b\\(i\\)\u200b\u53ea\u200b\u5154\u5b50\u200b\u6240\u5c5e\u200b\u7684\u200b\u7c7b\u200b\u4e2d\u200b\u6700\u200b\u591a\u200b\u6709\u200b\\(a_i + 1\\)\u200b\u53ea\u200b\u5154\u5b50\u200b</li> </ul> <p>\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u5f97\u51fa\u200b\u7b97\u6cd5\u200b\uff1a\u200b\u7edf\u8ba1\u200b\u76f8\u540c\u200b\u6570\u5b57\u200b\\(a_i\\)\u200b\u51fa\u73b0\u200b\u7684\u200b\u6b21\u6570\u200b\\(b_j\\)\uff0c\u200b\u5bf9\u4e8e\u200b\u6bcf\u4e2a\u200b\u6570\u5b57\u200b\uff0c\u200b\u4e0e\u200b\u4e4b\u200b\u5bf9\u5e94\u200b\u7684\u200b\u6700\u5c11\u200b\u7684\u200b\u5154\u5b50\u200b\u6570\u91cf\u200b\u4e3a\u200b\\(b'_j\\)\uff0c\u200b\u5219\u200b\\(b'_j\\)\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6761\u4ef6\u200b\uff1a</p> <ul> <li>\\(b'_j = k \\times (a_i + 1), k\\in \\N\\)</li> <li>\\(b'_j \\geq b_j\\)</li> <li>\\(b'_j - (a_i + 1) &lt; b_j\\)</li> </ul> <p>\u200b\u5373\u200b\\(b'_j = \\left\\lceil\\frac{b_j}{a_i + 1}\\right\\rceil\\times (a_i + 1)\\)</p> <pre><code>int numRabbits(int* answers, int answersSize){\n    int hash[1000] = {0}, i = 0, ret = 0;\n    for (i = 0; i &lt; answersSize; i++)\n        hash[answers[i]]++;\n    for (i = 0; i &lt; 1000; i++)\n        ret += (hash[i] + i) / (i + 1) * (i + 1);\n    return ret;\n}\n</code></pre> <p>Python\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u5185\u7f6e\u200b\u5e93\u200b<code>collections</code>\u200b\u4e2d\u200b\u7684\u200b<code>Counter</code>\u200b\u7c7b\u200b\u7edf\u8ba1\u6570\u5b57\u200b\u7684\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\uff1a</p> <pre><code>import collections\n\nclass Solution:\n    def numRabbits(self, answers: List[int]) -&gt; int:\n        return sum(map(\n            lambda args: sum(args) // (args[0] + 1) * (args[0] + 1)\n            collections.Counter(answers).items()\n        ))\n</code></pre>","tags":["\u54c8\u5e0c\u8868","\u6570\u5b66"]},{"location":"coding/leetcode/79/","title":"79. \u200b\u5355\u8bcd\u200b\u641c\u7d22","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u7ec4","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/79/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u00a0<code>m x n</code> \u200b\u4e8c\u7ef4\u200b\u5b57\u7b26\u200b\u7f51\u683c\u200b\u00a0<code>board</code> \u200b\u548c\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u5355\u8bcd\u200b\u00a0<code>word</code> \u3002\u200b\u5982\u679c\u200b\u00a0<code>word</code> \u200b\u5b58\u5728\u200b\u4e8e\u200b\u7f51\u683c\u200b\u4e2d\u200b\uff0c\u200b\u8fd4\u56de\u200b <code>true</code> \uff1b\u200b\u5426\u5219\u200b\uff0c\u200b\u8fd4\u56de\u200b <code>false</code> \u3002</p> <p>\u200b\u5355\u8bcd\u200b\u5fc5\u987b\u200b\u6309\u7167\u200b\u5b57\u6bcd\u200b\u987a\u5e8f\u200b\uff0c\u200b\u901a\u8fc7\u200b\u76f8\u90bb\u200b\u7684\u200b\u5355\u5143\u683c\u200b\u5185\u200b\u7684\u200b\u5b57\u6bcd\u200b\u6784\u6210\u200b\uff0c\u200b\u5176\u4e2d\u200b\u201c\u200b\u76f8\u90bb\u200b\u201d\u200b\u5355\u5143\u683c\u200b\u662f\u200b\u90a3\u4e9b\u200b\u6c34\u5e73\u200b\u76f8\u90bb\u200b\u6216\u200b\u5782\u76f4\u200b\u76f8\u90bb\u200b\u7684\u200b\u5355\u5143\u683c\u200b\u3002\u200b\u540c\u4e00\u4e2a\u200b\u5355\u5143\u683c\u200b\u5185\u200b\u7684\u200b\u5b57\u6bcd\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u88ab\u200b\u91cd\u590d\u4f7f\u7528\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p></p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aboard = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCCED\"\n\u200b\u8f93\u51fa\u200b\uff1atrue\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p></p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aboard = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"SEE\"\n\u200b\u8f93\u51fa\u200b\uff1atrue\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <p></p> <pre><code>\u200b\u8f93\u5165\u200b\uff1aboard = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCB\"\n\u200b\u8f93\u51fa\u200b\uff1afalse\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>m == board.length</code></li> <li><code>n = board[i].length</code></li> <li><code>1 &lt;= m, n &lt;= 6</code></li> <li><code>1 &lt;= word.length &lt;= 15</code></li> <li><code>board</code> \u200b\u548c\u200b <code>word</code> \u200b\u4ec5\u200b\u7531\u200b\u5927\u5c0f\u5199\u200b\u82f1\u6587\u5b57\u6bcd\u200b\u7ec4\u6210\u200b</li> </ul> <p>\u200b\u8fdb\u9636\u200b\uff1a\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u641c\u7d22\u200b\u526a\u679d\u200b\u7684\u200b\u6280\u672f\u200b\u6765\u200b\u4f18\u5316\u200b\u89e3\u51b3\u65b9\u6848\u200b\uff0c\u200b\u4f7f\u200b\u5176\u200b\u5728\u200b <code>board</code> \u200b\u66f4\u5927\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u53ef\u4ee5\u200b\u66f4\u200b\u5feb\u200b\u89e3\u51b3\u95ee\u9898\u200b\uff1f</p> <p>Reference</p>","tags":["\u6570\u7ec4","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/79/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4f7f\u7528\u200b\u6df1\u5ea6\u200b\u4f18\u5148\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u5728\u200b\u4e8c\u7ef4\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u5bfb\u627e\u200b\u5355\u8bcd\u200b\u7b2c\u4e00\u4e2a\u200b\u5b57\u6bcd\u200b\u51fa\u73b0\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u6bcf\u4e2a\u200b\u51fa\u73b0\u200b\u4f4d\u7f6e\u200b\uff1a</p> <ul> <li>\u200b\u5c06\u200b\u5f53\u524d\u200b\u4f4d\u7f6e\u200b\u6807\u5fd7\u200b\u4e3a\u200b\u7ecf\u5386\u200b\u8fc7\u200b</li> <li>\u200b\u5bfb\u627e\u200b\u5f53\u524d\u200b\u4f4d\u7f6e\u200b\u9644\u8fd1\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6761\u4ef6\u200b\u7684\u200b\u5355\u5143\u683c\u200b<ol> <li>\u200b\u5355\u5143\u683c\u200b\u4e2d\u200b\u7684\u200b\u5b57\u6bcd\u200b\u7b49\u4e8e\u200b\u5355\u8bcd\u200b\u7684\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u5b57\u6bcd\u200b</li> <li>\u200b\u5355\u5143\u683c\u200b\u672a\u200b\u88ab\u200b\u904d\u5386\u200b\u8fc7\u200b</li> </ol> </li> <li>\u200b\u5982\u679c\u200b\u627e\u200b\u4e0d\u5230\u200b\u5355\u5143\u683c\u200b\uff0c\u200b\u610f\u5473\u7740\u200b\u4e8c\u7ef4\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u65e0\u6cd5\u200b\u627e\u5230\u200b\u76ee\u6807\u200b\u5355\u8bcd\u200b</li> <li>\u200b\u5982\u679c\u200b\u627e\u5230\u200b\u4e00\u4e2a\u200b\u6216\u200b\u591a\u4e2a\u200b\u5355\u5143\u683c\u200b\uff0c\u200b\u5219\u200b\u524d\u8fdb\u200b\u5230\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u5355\u5143\u683c\u200b\u7ee7\u7eed\u200b\u8fdb\u884c\u200b\u5339\u914d\u200b</li> <li>\u200b\u5982\u679c\u200b\u5355\u8bcd\u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u5b57\u6bcd\u200b\u6210\u529f\u200b\u5339\u914d\u200b\uff0c\u200b\u610f\u5473\u7740\u200b\u5339\u914d\u200b\u6210\u529f\u200b</li> </ul> <pre><code>bool dfs(char **board, int boardSize, int* boardColSize, char *word, int posX, int posY, int **map)\n{\n    if (*word == 0)\n        return true;\n    bool ret = false;\n    if (posX &gt; 0 &amp;&amp; board[posX - 1][posY] == *word &amp;&amp; map[posX - 1][posY] == 0)\n    {\n        map[posX - 1][posY] = 1;\n        ret = ret || dfs(board, boardSize, boardColSize, word + 1, posX - 1, posY, map);\n        map[posX - 1][posY] = 0;\n    }\n    if (posX &lt; boardSize - 1 &amp;&amp; board[posX + 1][posY] == *word &amp;&amp; map[posX + 1][posY] == 0)\n    {\n        map[posX + 1][posY] = 1;\n        ret = ret || dfs(board, boardSize, boardColSize, word + 1, posX + 1, posY, map);\n        map[posX + 1][posY] = 0;\n    }\n    if (posY &gt; 0 &amp;&amp; board[posX][posY - 1] == *word &amp;&amp; map[posX][posY - 1] == 0)\n    {\n        map[posX][posY - 1] = 1;\n        ret = ret || dfs(board, boardSize, boardColSize, word + 1, posX, posY - 1, map);\n        map[posX][posY - 1] = 0;\n    }\n    if (posY &lt; boardColSize[0] - 1 &amp;&amp; board[posX][posY + 1] == *word &amp;&amp; map[posX][posY + 1] == 0)\n    {\n        map[posX][posY + 1] = 1;\n        ret = ret || dfs(board, boardSize, boardColSize, word + 1, posX, posY + 1, map);\n        map[posX][posY + 1] = 0;\n    }\n    return ret;\n}\nbool exist(char** board, int boardSize, int* boardColSize, char * word){\n    bool ret = false;\n    int i = 0, j = 0, **map = (int **)malloc(sizeof(int *) * boardSize);\n    for (i = 0; i &lt; boardSize; i++)\n        map[i] = (int *)memset(malloc(sizeof(int) * boardColSize[i]), 0, sizeof(int) * boardColSize[i]);\n    for (i = 0; i &lt; boardSize &amp;&amp; !ret; i++)\n    {\n        for (j = 0; j &lt; boardColSize[0] &amp;&amp; !ret; j++)\n        {\n            if (board[i][j] == *word)\n            {\n                map[i][j] = 1;\n                ret = ret || dfs(board, boardSize, boardColSize, word + 1, i, j, map);\n                map[i][j] = 0;\n            }\n        }\n    }\n    return ret;\n}\n</code></pre>","tags":["\u6570\u7ec4","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/8/","title":"8. \u200b\u5b57\u7b26\u4e32\u200b\u8f6c\u6362\u200b\u6574\u6570\u200b (atoi)","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/8/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u8bf7\u200b\u4f60\u200b\u6765\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b<code>atoi</code>\u200b\u51fd\u6570\u200b\uff0c\u200b\u4f7f\u200b\u5176\u80fd\u200b\u5c06\u200b\u5b57\u7b26\u4e32\u200b\u8f6c\u6362\u6210\u200b\u6574\u6570\u200b\u3002</p> <p>\u200b\u9996\u5148\u200b\uff0c\u200b\u8be5\u200b\u51fd\u6570\u200b\u4f1a\u200b\u6839\u636e\u200b\u9700\u8981\u200b\u4e22\u5f03\u200b\u65e0\u7528\u200b\u7684\u200b\u5f00\u5934\u200b\u7a7a\u683c\u200b\u5b57\u7b26\u200b\uff0c\u200b\u76f4\u5230\u200b\u5bfb\u627e\u200b\u5230\u200b\u7b2c\u4e00\u4e2a\u200b\u975e\u200b\u7a7a\u683c\u200b\u7684\u200b\u5b57\u7b26\u200b\u4e3a\u6b62\u200b\u3002\u200b\u63a5\u4e0b\u6765\u200b\u7684\u200b\u8f6c\u5316\u200b\u89c4\u5219\u200b\u5982\u4e0b\u200b\uff1a</p> <ul> <li>\u200b\u5982\u679c\u200b\u7b2c\u4e00\u4e2a\u200b\u975e\u200b\u7a7a\u5b57\u7b26\u200b\u4e3a\u200b\u6b63\u200b\u6216\u8005\u200b\u8d1f\u53f7\u200b\u65f6\u200b\uff0c\u200b\u5219\u200b\u5c06\u200b\u8be5\u200b\u7b26\u53f7\u200b\u4e0e\u200b\u4e4b\u200b\u540e\u9762\u200b\u5c3d\u53ef\u80fd\u200b\u591a\u200b\u7684\u200b\u8fde\u7eed\u200b\u6570\u5b57\u200b\u5b57\u7b26\u200b\u7ec4\u5408\u200b\u8d77\u6765\u200b\uff0c\u200b\u5f62\u6210\u200b\u4e00\u4e2a\u200b\u6709\u200b\u7b26\u53f7\u200b\u6574\u6570\u200b\u3002</li> <li>\u200b\u5047\u5982\u200b\u7b2c\u4e00\u4e2a\u200b\u975e\u200b\u7a7a\u5b57\u7b26\u200b\u662f\u200b\u6570\u5b57\u200b\uff0c\u200b\u5219\u200b\u76f4\u63a5\u200b\u5c06\u200b\u5176\u200b\u4e0e\u200b\u4e4b\u540e\u200b\u8fde\u7eed\u200b\u7684\u200b\u6570\u5b57\u200b\u5b57\u7b26\u200b\u7ec4\u5408\u200b\u8d77\u6765\u200b\uff0c\u200b\u5f62\u6210\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u3002</li> <li>\u200b\u8be5\u200b\u5b57\u7b26\u4e32\u200b\u5728\u200b\u6709\u6548\u200b\u7684\u200b\u6574\u6570\u200b\u90e8\u5206\u200b\u4e4b\u540e\u200b\u4e5f\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5b58\u5728\u200b\u591a\u4f59\u200b\u7684\u200b\u5b57\u7b26\u200b\uff0c\u200b\u90a3\u4e48\u200b\u8fd9\u4e9b\u200b\u5b57\u7b26\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u5ffd\u7565\u200b\uff0c\u200b\u5b83\u4eec\u200b\u5bf9\u200b\u51fd\u6570\u200b\u4e0d\u200b\u5e94\u8be5\u200b\u9020\u6210\u200b\u5f71\u54cd\u200b\u3002</li> </ul> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u5047\u5982\u200b\u8be5\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u975e\u200b\u7a7a\u683c\u200b\u5b57\u7b26\u200b\u4e0d\u662f\u200b\u4e00\u4e2a\u200b\u6709\u6548\u200b\u6574\u6570\u200b\u5b57\u7b26\u200b\u3001\u200b\u5b57\u7b26\u4e32\u200b\u4e3a\u7a7a\u200b\u6216\u200b\u5b57\u7b26\u4e32\u200b\u4ec5\u200b\u5305\u542b\u200b\u7a7a\u767d\u200b\u5b57\u7b26\u200b\u65f6\u200b\uff0c\u200b\u5219\u200b\u4f60\u200b\u7684\u200b\u51fd\u6570\u200b\u4e0d\u200b\u9700\u8981\u200b\u8fdb\u884c\u200b\u8f6c\u6362\u200b\uff0c\u200b\u5373\u200b\u65e0\u6cd5\u200b\u8fdb\u884c\u200b\u6709\u6548\u200b\u8f6c\u6362\u200b\u3002</p> <p>\u200b\u5728\u200b\u4efb\u4f55\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u82e5\u200b\u51fd\u6570\u200b\u4e0d\u80fd\u200b\u8fdb\u884c\u200b\u6709\u6548\u200b\u7684\u200b\u8f6c\u6362\u200b\u65f6\u200b\uff0c\u200b\u8bf7\u200b\u8fd4\u56de\u200b 0 \u3002</p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li>\u200b\u672c\u9898\u200b\u4e2d\u200b\u7684\u200b\u7a7a\u767d\u200b\u5b57\u7b26\u200b\u53ea\u200b\u5305\u62ec\u200b\u7a7a\u683c\u200b\u5b57\u7b26\u200b<code>' '</code>\u3002</li> <li>\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u7684\u200b\u73af\u5883\u200b\u53ea\u80fd\u200b\u5b58\u50a8\u200b 32 \u200b\u4f4d\u200b\u5927\u5c0f\u200b\u7684\u200b\u6709\u200b\u7b26\u53f7\u200b\u6574\u6570\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5176\u200b\u6570\u503c\u200b\u8303\u56f4\u200b\u4e3a\u200b\\([\u22122^{31},\u00a0 2^{31}\u00a0\u2212 1]\\)\u3002\u200b\u5982\u679c\u200b\u6570\u503c\u200b\u8d85\u8fc7\u200b\u8fd9\u4e2a\u200b\u8303\u56f4\u200b\uff0c\u200b\u8bf7\u200b\u8fd4\u56de\u200b<code>INT_MAX</code>(\\(2^{31}\u00a0\u2212 1\\))\u200b\u6216\u200b<code>INT_MIN</code>(\\(\u22122^{31}\\)) \u3002 \u00a0</li> </ul> <p>\u200b\u793a\u4f8b\u200b\u00a01:</p> <pre><code>\u200b\u8f93\u5165\u200b: \"42\"\n\u200b\u8f93\u51fa\u200b: 42\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a02:</p> <pre><code>\u200b\u8f93\u5165\u200b: \"   -42\"\n\u200b\u8f93\u51fa\u200b: -42\n\u200b\u89e3\u91ca\u200b: \u200b\u7b2c\u4e00\u4e2a\u200b\u975e\u200b\u7a7a\u767d\u200b\u5b57\u7b26\u200b\u4e3a\u200b '-', \u200b\u5b83\u200b\u662f\u200b\u4e00\u4e2a\u200b\u8d1f\u53f7\u200b\u3002\n\u00a0    \u200b\u6211\u4eec\u200b\u5c3d\u53ef\u80fd\u200b\u5c06\u200b\u8d1f\u53f7\u200b\u4e0e\u200b\u540e\u9762\u200b\u6240\u6709\u200b\u8fde\u7eed\u200b\u51fa\u73b0\u200b\u7684\u200b\u6570\u5b57\u200b\u7ec4\u5408\u200b\u8d77\u6765\u200b\uff0c\u200b\u6700\u540e\u200b\u5f97\u5230\u200b -42 \u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a03:</p> <pre><code>\u200b\u8f93\u5165\u200b: \"4193 with words\"\n\u200b\u8f93\u51fa\u200b: 4193\n\u200b\u89e3\u91ca\u200b: \u200b\u8f6c\u6362\u200b\u622a\u6b62\u200b\u4e8e\u200b\u6570\u5b57\u200b '3' \uff0c\u200b\u56e0\u4e3a\u200b\u5b83\u200b\u7684\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u200b\u4e0d\u200b\u4e3a\u200b\u6570\u5b57\u200b\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a04:</p> <pre><code>\u200b\u8f93\u5165\u200b: \"words and 987\"\n\u200b\u8f93\u51fa\u200b: 0\n\u200b\u89e3\u91ca\u200b: \u200b\u7b2c\u4e00\u4e2a\u200b\u975e\u200b\u7a7a\u5b57\u7b26\u200b\u662f\u200b 'w', \u200b\u4f46\u200b\u5b83\u200b\u4e0d\u662f\u200b\u6570\u5b57\u200b\u6216\u200b\u6b63\u200b\u3001\u200b\u8d1f\u53f7\u200b\u3002\n     \u200b\u56e0\u6b64\u200b\u65e0\u6cd5\u200b\u6267\u884c\u200b\u6709\u6548\u200b\u7684\u200b\u8f6c\u6362\u200b\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a05:</p> <pre><code>\u200b\u8f93\u5165\u200b: \"-91283472332\"\n\u200b\u8f93\u51fa\u200b: -2147483648\n\u200b\u89e3\u91ca\u200b: \u200b\u6570\u5b57\u200b \"-91283472332\" \u200b\u8d85\u8fc7\u200b 32 \u200b\u4f4d\u6709\u200b\u7b26\u53f7\u200b\u6574\u6570\u200b\u8303\u56f4\u200b\u3002 \n\u00a0    \u200b\u56e0\u6b64\u200b\u8fd4\u56de\u200b INT_MIN (\u2212231) \u3002\n</code></pre> <p>Reference</p>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/8/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a </p> <ol> <li>\u200b\u6ce8\u610f\u200b\u4e00\u4e2a\u200b\u6709\u6548\u200b\u7684\u200b\u6570\u5b57\u200b\u5b57\u7b26\u4e32\u200b\u53ef\u4ee5\u200b\u4ee5\u200b<code>0-9</code>\u3001<code>'-'</code>\u3001<code>'+'</code>\u200b\u548c\u200b\u7a7a\u683c\u200b<code>' '</code>\u200b\u5f00\u5934\u200b\u3002</li> <li>\u200b\u4e3a\u4e86\u200b\u907f\u514d\u200b\u6ea2\u51fa\u200b\uff0c\u200b\u5e94\u5f53\u200b\u4f7f\u7528\u200b<code>long</code>\u200b\u7c7b\u578b\u200b\u3002</li> </ol> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>int myAtoi(char * str){\n    int flag = 0;\n    char *cur = str;\n    while (*cur &amp;&amp; *cur == ' ')\n        cur++;\n    if (*cur == '-' || *cur == '+')\n        flag = *(cur++) - '+';\n    if (*cur &lt; '0' || *cur &gt; '9')\n        return 0;\n    long ret = 0;\n    while(*cur &gt;= '0' &amp;&amp; *cur &lt;= '9')\n    {\n        ret *= 10;\n        ret += *cur - '0';\n        cur++;\n        if (ret &gt;= -(long)INT_MIN || (ret == (long)INT_MAX &amp;&amp; !flag))\n            return flag ? INT_MIN : INT_MAX;\n    }\n    return flag ? -ret : ret;\n}\n</code></pre>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/81/","title":"81. \u200b\u641c\u7d22\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b II","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/81/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u5df2\u77e5\u200b\u5b58\u5728\u200b\u4e00\u4e2a\u200b\u6309\u975e\u200b\u964d\u5e8f\u200b\u6392\u5217\u200b\u7684\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b <code>nums</code> \uff0c\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\u4e0d\u5fc5\u200b\u4e92\u4e0d\u200b\u76f8\u540c\u200b\u3002</p> <p><code>\u200b\u5728\u200b\u4f20\u9012\u200b\u7ed9\u200b\u51fd\u6570\u200b\u4e4b\u524d\u200b\uff0cnums</code> \u200b\u5728\u200b\u9884\u5148\u200b\u672a\u77e5\u200b\u7684\u200b\u67d0\u4e2a\u200b\u4e0b\u6807\u200b <code>k</code>\uff08<code>0 &lt;= k &lt; nums.length</code>\uff09\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u4e86\u200b \u200b\u65cb\u8f6c\u200b \uff0c\u200b\u4f7f\u200b\u6570\u7ec4\u200b\u53d8\u4e3a\u200b <code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code>\uff08\u200b\u4e0b\u6807\u200b \u200b\u4ece\u200b 0 \u200b\u5f00\u59cb\u200b \u200b\u8ba1\u6570\u200b\uff09\u3002\u200b\u4f8b\u5982\u200b\uff0c <code>[0,1,2,4,4,4,5,6,6,7]</code> \u200b\u5728\u200b\u4e0b\u6807\u200b <code>5</code> \u200b\u5904\u7ecf\u200b\u65cb\u8f6c\u200b\u540e\u200b\u53ef\u80fd\u200b\u53d8\u4e3a\u200b <code>[4,5,6,6,7,0,1,2,4,4]</code> \u3002</p> <p>\u200b\u7ed9\u200b\u4f60\u200b \u200b\u65cb\u8f6c\u200b\u540e\u200b \u200b\u7684\u200b\u6570\u7ec4\u200b <code>nums</code> \u200b\u548c\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b <code>target</code> \uff0c\u200b\u8bf7\u200b\u4f60\u200b\u7f16\u5199\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u6765\u200b\u5224\u65ad\u200b\u7ed9\u5b9a\u200b\u7684\u200b\u76ee\u6807\u503c\u200b\u662f\u5426\u200b\u5b58\u5728\u200b\u4e8e\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u3002\u200b\u5982\u679c\u200b <code>nums</code> \u200b\u4e2d\u200b\u5b58\u5728\u200b\u8fd9\u4e2a\u200b\u76ee\u6807\u503c\u200b <code>target</code> \uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b <code>true</code> \uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b <code>false</code> \u3002</p> <p>\u200b\u4f60\u200b\u5fc5\u987b\u200b\u5c3d\u53ef\u80fd\u51cf\u5c11\u200b\u6574\u4e2a\u200b\u64cd\u4f5c\u6b65\u9aa4\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>nums = [2,5,6,0,0,1,2], target = 0</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>true</code></p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>nums = [2,5,6,0,0,1,2], target = 3</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>false</code></p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 5000</code></li> <li><code>-10^4 &lt;= nums[i] &lt;= 10^4</code></li> <li>\u200b\u9898\u76ee\u200b\u6570\u636e\u200b\u4fdd\u8bc1\u200b <code>nums</code> \u200b\u5728\u200b\u9884\u5148\u200b\u672a\u77e5\u200b\u7684\u200b\u67d0\u4e2a\u200b\u4e0b\u6807\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u4e86\u200b\u65cb\u8f6c\u200b</li> <li><code>-10^4 &lt;= target &lt;= 10^4</code></li> </ul> <p>\u200b\u8fdb\u9636\u200b\uff1a</p> <p>\u200b\u6b64\u9898\u200b\u4e0e\u200b \u200b\u641c\u7d22\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b \u200b\u76f8\u4f3c\u200b\uff0c\u200b\u4f46\u200b\u672c\u9898\u200b\u4e2d\u200b\u7684\u200b <code>nums</code> \u200b\u53ef\u80fd\u200b\u5305\u542b\u200b \u200b\u91cd\u590d\u200b \u200b\u5143\u7d20\u200b\u3002\u200b\u8fd9\u4f1a\u200b\u5f71\u54cd\u200b\u5230\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u5417\u200b\uff1f\u200b\u4f1a\u200b\u6709\u200b\u600e\u6837\u200b\u7684\u200b\u5f71\u54cd\u200b\uff0c\u200b\u4e3a\u4ec0\u4e48\u200b\uff1f</p> <p>Reference</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/81/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u9996\u5148\u200b\uff0c\u200b\u5047\u5b9a\u200b\u5bf9\u4e8e\u200b\u7ed9\u5b9a\u200b\u533a\u95f4\u200b<code>[left:right]</code>\uff0c\u200b\u5982\u679c\u200b\u5b83\u200b\u662f\u200b\u6709\u5e8f\u200b\u7684\u200b\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u7528\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u7684\u200b\u65b9\u5f0f\u200b\u8fdb\u884c\u200b\u641c\u7d22\u200b\u3002\u200b\u6ce8\u610f\u200b\u53f3\u200b\u7aef\u70b9\u200b\u662f\u200b\u5f00\u533a\u95f4\u200b\uff0c\u200b\u5373\u200b<code>right</code>\u200b\u4e0d\u200b\u5728\u200b\u641c\u7d22\u200b\u8303\u56f4\u200b\u5185\u200b\u3002</p> <ol> <li>\u200b\u8ba1\u7b97\u200b\u533a\u95f4\u200b\u4e2d\u200b\u70b9\u200b<code>med_idx</code>\uff0c\u200b\u5c06\u200b\u533a\u95f4\u200b\u5212\u5206\u200b\u4e3a\u200b<code>[left:med_idx]</code>\u200b\u548c\u200b<code>[med_idx:right]</code>\u3002</li> <li>\u200b\u5982\u679c\u200b<code>target &gt;= nums[med_idx]</code>\uff0c\u200b\u8bf4\u660e\u200b\u76ee\u6807\u503c\u200b\u5728\u200b\u53f3\u534a\u200b\u533a\u95f4\u200b\uff0c\u200b\u5c06\u200b\u5de6\u200b\u7aef\u70b9\u200b<code>left</code>\u200b\u6536\u7f29\u200b\u5230\u200b<code>med_idx</code>\u3002\u200b\u5426\u5219\u200b\uff0c\u200b\u5c06\u200b\u53f3\u200b\u7aef\u70b9\u200b<code>right</code>\u200b\u6536\u7f29\u200b\u5230\u200b<code>med_idx</code>\u3002</li> <li>\u200b\u91cd\u590d\u200b\u6b65\u9aa4\u200b1\u200b\u548c\u200b2\uff0c\u200b\u76f4\u5230\u200b\u533a\u95f4\u200b\u957f\u5ea6\u200b\u7b49\u4e8e\u200b1\u3002\u200b\u6b64\u65f6\u200b<code>nums[left]</code>\u200b\u5c31\u662f\u200b\u67e5\u627e\u200b\u5230\u200b\u7684\u200b\u76ee\u6807\u503c\u200b\uff0c\u200b\u6ee1\u8db3\u200b<code>nums[left] &lt;= target &lt; nums[right]</code>\u3002</li> <li>\u200b\u5224\u65ad\u200b\u6bd4\u8f83\u200b<code>target</code>\u200b\u548c\u200b<code>nums[left]</code>\u200b\u662f\u5426\u200b\u76f8\u7b49\u200b\u3002</li> </ol> <p>\u200b\u5bf9\u4e8e\u200b\u65cb\u8f6c\u200b\u6570\u7ec4\u200b\uff0c\u200b\u9996\u5148\u200b\u9700\u8981\u200b\u786e\u5b9a\u200b\u6570\u7ec4\u200b\u7684\u200b\u54ea\u200b\u4e00\u90e8\u5206\u200b\u662f\u200b\u6709\u5e8f\u200b\u7684\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u641c\u7d22\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b\u9898\u76ee\u200b\u6765\u8bf4\u200b\uff0c\u200b\u60c5\u51b5\u200b\u66f4\u4e3a\u200b\u7b80\u5355\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u4e0d\u200b\u5305\u542b\u200b\u91cd\u590d\u200b\u6570\u503c\u200b\u3002\u200b\u6211\u4eec\u200b\u53ea\u200b\u9700\u8981\u200b\u53d6\u200b\u533a\u95f4\u200b\u4e2d\u200b\u70b9\u200b\uff0c\u200b\u5224\u65ad\u200b<code>nums[left] &lt; nums[med_idx]</code>\u200b\u548c\u200b<code>nums[med_idx] &lt; nums[right - 1]</code>\u200b\u4e2d\u200b\u7684\u200b\u54ea\u200b\u4e00\u4e2a\u200b\u6210\u7acb\u200b\u3002\u200b\u5982\u679c\u200b\u524d\u8005\u200b\u6210\u7acb\u200b\uff0c\u200b\u8bf4\u660e\u200b\u5de6\u534a\u200b\u533a\u95f4\u200b\u6709\u5e8f\u200b\uff0c\u200b\u5426\u5219\u200b\u53f3\u534a\u200b\u533a\u95f4\u200b\u6709\u5e8f\u200b\u3002\u200b\u7c7b\u4f3c\u200b\u5730\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6309\u7167\u200b\u4e8c\u5206\u200b\u7684\u200b\u65b9\u5f0f\u200b\u8fdb\u884c\u200b\u641c\u7d22\u200b\uff1a</p> <ol> <li>\u200b\u5224\u65ad\u200b\u76ee\u6807\u503c\u200b\u662f\u5426\u200b\u843d\u200b\u5728\u200b\u6709\u5e8f\u200b\u533a\u95f4\u200b\u5185\u200b\uff0c\u200b\u5982\u679c\u200b\u662f\u200b\uff0c\u200b\u5219\u200b\u5bf9\u200b\u6709\u5e8f\u200b\u533a\u95f4\u200b\u8fdb\u884c\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\uff0c\u200b\u8fd4\u56de\u200b\u67e5\u627e\u200b\u7ed3\u679c\u200b\u3002</li> <li>\u200b\u5982\u679c\u200b\u76ee\u6807\u503c\u200b\u4e0d\u200b\u5728\u200b\u6709\u5e8f\u200b\u533a\u95f4\u200b\u5185\u200b\uff0c\u200b\u5c06\u200b\u641c\u7d22\u200b\u533a\u95f4\u200b\u7f29\u5c0f\u200b\u5230\u200b\u53e6\u4e00\u534a\u200b\u3002</li> <li>\u200b\u91cd\u590d\u200b\u6b65\u9aa4\u200b1\u200b\u548c\u200b2\uff0c\u200b\u76f4\u5230\u200b\u641c\u7d22\u200b\u533a\u95f4\u200b\u957f\u5ea6\u200b\u7b49\u4e8e\u200b1\u3002\u200b\u6b64\u65f6\u200b<code>nums[left]</code>\u200b\u5c31\u662f\u200b\u67e5\u627e\u200b\u5230\u200b\u7684\u200b\u76ee\u6807\u503c\u200b\uff0c\u200b\u6ee1\u8db3\u200b<code>nums[left] &lt;= target &lt; nums[right]</code>\u3002</li> <li>\u200b\u5224\u65ad\u200b\u6bd4\u8f83\u200b<code>target</code>\u200b\u548c\u200b<code>nums[left]</code>\u200b\u662f\u5426\u200b\u76f8\u7b49\u200b\u3002</li> </ol> <p>\u200b\u5bf9\u4e8e\u200b\u641c\u7d22\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b II\u200b\u9898\u76ee\u200b\uff0c\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u53ef\u80fd\u200b\u5305\u542b\u200b\u91cd\u590d\u200b\u6570\u503c\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u539f\u672c\u200b\u5bf9\u4e8e\u200b\u6709\u5e8f\u200b\u533a\u95f4\u200b\u7684\u200b\u5224\u65ad\u200b\u53d8\u5f97\u590d\u6742\u200b\u3002</p> <ol> <li>\u200b\u5982\u679c\u200b<code>nums[left] &lt;= nums[med_idx]</code>\u200b\u548c\u200b<code>nums[med_idx] &lt;= nums[right - 1]</code>\u200b\u4e24\u8005\u200b\u4e2d\u200b\u53ea\u200b\u6ee1\u8db3\u200b\u4e00\u4e2a\u200b\uff0c\u200b\u8bf4\u660e\u200b\u6709\u5e8f\u200b\u533a\u95f4\u200b\u662f\u200b\u6ee1\u8db3\u6761\u4ef6\u200b\u7684\u200b\u90a3\u200b\u4e00\u534a\u200b\u3002</li> <li>\u200b\u5982\u679c\u200b\u4e24\u8005\u200b\u90fd\u200b\u6ee1\u8db3\u200b\uff0c\u200b\u8bf4\u660e\u200b<code>nums[left] == nums[right - 1] == nums[med_idx]</code>\uff0c\u200b\u6b64\u65f6\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u4e00\u4e2a\u200b\u65b9\u5411\u200b\u5bf9\u200b\u533a\u95f4\u200b\u8fdb\u884c\u200b\u6536\u7f29\u200b\uff0c\u200b\u76f4\u5230\u200b<code>nums[left] != nums[right - 1]</code>\uff0c\u200b\u6216\u8005\u200b\u533a\u95f4\u200b\u957f\u5ea6\u200b\u4e3a\u200b1\u3002</li> <li>\u200b\u7ee7\u7eed\u200b\u6309\u7167\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u7684\u200b\u65b9\u5f0f\u200b\u8fdb\u884c\u200b\u641c\u7d22\u200b\u3002</li> <li>\u200b\u6700\u574f\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(O(n)\\)\uff0c\u200b\u5373\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u4e0d\u540c\u200b\u7684\u200b\u6570\u503c\u200b\u3002</li> </ol> <pre><code>class Solution:\n    def bisect(self, target: int, nums: List[int], left: int = 0, right: Optional[int] = None):\n        if right is None:\n            right = len(nums)\n        while right - left &gt; 1:\n            med_idx = (left + right) // 2\n            if target &gt;= nums[med_idx]:\n                left = med_idx\n            if target &lt; nums[med_idx]:\n                right = med_idx\n        return target == nums[left]\n\n    def search(self, nums: List[int], target: int) -&gt; bool:\n        left, right = 0, len(nums)\n        while right - left &gt; 1 and nums[left] == nums[right - 1]:\n            right -= 1\n        while right - left &gt; 1:\n            med_idx = (left + right) // 2\n            if nums[med_idx] &gt; nums[right - 1]:\n                if nums[left] &lt;= target and target &lt;= nums[med_idx - 1]:\n                    return self.bisect(target, nums, left, med_idx)\n                left = med_idx\n            else:\n                if nums[med_idx] &lt;= target and target &lt;= nums[right - 1]:\n                    return self.bisect(target, nums, med_idx, right)\n                right = med_idx\n        return target == nums[left]\n</code></pre> <p>\u200b\u5982\u679c\u200b\u9700\u8981\u200b\u67e5\u627e\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u7b80\u5355\u200b\u5224\u65ad\u200b\u5143\u7d20\u200b\u662f\u5426\u200b\u5b58\u5728\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u8fd4\u56de\u503c\u200b\u6539\u4e3a\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>return left if target == nums[left] else -1\n</code></pre>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/87/","title":"87. \u200b\u6270\u4e71\u200b\u5b57\u7b26\u4e32","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u56f0\u96be\u200b</p>","tags":["\u5b57\u7b26\u4e32","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/87/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u4f7f\u7528\u200b\u4e0b\u9762\u200b\u63cf\u8ff0\u200b\u7684\u200b\u7b97\u6cd5\u200b\u53ef\u4ee5\u200b\u6270\u4e71\u200b\u5b57\u7b26\u4e32\u200b <code>s</code> \u200b\u5f97\u5230\u200b\u5b57\u7b26\u4e32\u200b <code>t</code> \uff1a</p> <ol> <li>\u200b\u5982\u679c\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u957f\u5ea6\u200b\u4e3a\u200b 1 \uff0c\u200b\u7b97\u6cd5\u200b\u505c\u6b62\u200b</li> <li>\u200b\u5982\u679c\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u957f\u5ea6\u200b &gt; 1 \uff0c\u200b\u6267\u884c\u200b\u4e0b\u8ff0\u200b\u6b65\u9aa4\u200b\uff1a<ul> <li>\u200b\u5728\u200b\u4e00\u4e2a\u200b\u968f\u673a\u200b\u4e0b\u6807\u200b\u5904\u200b\u5c06\u200b\u5b57\u7b26\u4e32\u200b\u5206\u5272\u200b\u6210\u200b\u4e24\u4e2a\u200b\u975e\u7a7a\u200b\u7684\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u3002\u200b\u5373\u200b\uff0c\u200b\u5982\u679c\u200b\u5df2\u77e5\u200b\u5b57\u7b26\u4e32\u200b <code>s</code> \uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5176\u200b\u5206\u6210\u200b\u4e24\u4e2a\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b <code>x</code> \u200b\u548c\u200b <code>y</code> \uff0c\u200b\u4e14\u200b\u6ee1\u8db3\u200b <code>s = x + y</code> \u3002</li> <li>\u200b\u968f\u673a\u200b \u200b\u51b3\u5b9a\u200b\u662f\u200b\u8981\u200b\u300c\u200b\u4ea4\u6362\u200b\u4e24\u4e2a\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u300d\u200b\u8fd8\u662f\u200b\u8981\u200b\u300c\u200b\u4fdd\u6301\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u987a\u5e8f\u200b\u4e0d\u53d8\u200b\u300d\u3002\u200b\u5373\u200b\uff0c\u200b\u5728\u200b\u6267\u884c\u200b\u8fd9\u4e00\u200b\u6b65\u9aa4\u200b\u4e4b\u540e\u200b\uff0c<code>s</code> \u200b\u53ef\u80fd\u200b\u662f\u200b <code>s = x + y</code> \u200b\u6216\u8005\u200b <code>s = y + x</code> \u3002</li> <li>\u200b\u5728\u200b <code>x</code> \u200b\u548c\u200b <code>y</code> \u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u4e0a\u200b\u7ee7\u7eed\u200b\u4ece\u200b\u6b65\u9aa4\u200b 1 \u200b\u5f00\u59cb\u200b\u9012\u5f52\u200b\u6267\u884c\u200b\u6b64\u200b\u7b97\u6cd5\u200b\u3002</li> </ul> </li> </ol> <p>\u200b\u7ed9\u200b\u4f60\u200b\u4e24\u4e2a\u200b \u200b\u957f\u5ea6\u200b\u76f8\u7b49\u200b \u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b <code>s1</code> \u200b\u548c\u200b\u00a0<code>s2</code>\uff0c\u200b\u5224\u65ad\u200b\u00a0<code>s2</code>\u00a0\u200b\u662f\u5426\u662f\u200b\u00a0<code>s1</code>\u00a0\u200b\u7684\u200b\u6270\u4e71\u200b\u5b57\u7b26\u4e32\u200b\u3002\u200b\u5982\u679c\u200b\u662f\u200b\uff0c\u200b\u8fd4\u56de\u200b <code>true</code> \uff1b\u200b\u5426\u5219\u200b\uff0c\u200b\u8fd4\u56de\u200b <code>false</code> \u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1as1 = \"great\", s2 = \"rgeat\"\n\u200b\u8f93\u51fa\u200b\uff1atrue\n\u200b\u89e3\u91ca\u200b\uff1as1 \u200b\u4e0a\u200b\u53ef\u80fd\u200b\u53d1\u751f\u200b\u7684\u200b\u4e00\u79cd\u200b\u60c5\u5f62\u200b\u662f\u200b\uff1a\n\"great\" --&gt; \"gr/eat\" // \u200b\u5728\u200b\u4e00\u4e2a\u200b\u968f\u673a\u200b\u4e0b\u6807\u200b\u5904\u200b\u5206\u5272\u200b\u5f97\u5230\u200b\u4e24\u4e2a\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\n\"gr/eat\" --&gt; \"gr/eat\" // \u200b\u968f\u673a\u200b\u51b3\u5b9a\u200b\uff1a\u300c\u200b\u4fdd\u6301\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u987a\u5e8f\u200b\u4e0d\u53d8\u200b\u300d\n\"gr/eat\" --&gt; \"g/r / e/at\" // \u200b\u5728\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u4e0a\u200b\u9012\u5f52\u200b\u6267\u884c\u200b\u6b64\u200b\u7b97\u6cd5\u200b\u3002\u200b\u4e24\u4e2a\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u5206\u522b\u200b\u5728\u200b\u968f\u673a\u200b\u4e0b\u6807\u200b\u5904\u200b\u8fdb\u884c\u200b\u4e00\u8f6e\u200b\u5206\u5272\u200b\n\"g/r / e/at\" --&gt; \"r/g / e/at\" // \u200b\u968f\u673a\u200b\u51b3\u5b9a\u200b\uff1a\u200b\u7b2c\u4e00\u7ec4\u200b\u300c\u200b\u4ea4\u6362\u200b\u4e24\u4e2a\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u300d\uff0c\u200b\u7b2c\u4e8c\u7ec4\u200b\u300c\u200b\u4fdd\u6301\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u987a\u5e8f\u200b\u4e0d\u53d8\u200b\u300d\n\"r/g / e/at\" --&gt; \"r/g / e/ a/t\" // \u200b\u7ee7\u7eed\u200b\u9012\u5f52\u200b\u6267\u884c\u200b\u6b64\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u5c06\u200b \"at\" \u200b\u5206\u5272\u200b\u5f97\u5230\u200b \"a/t\"\n\"r/g / e/ a/t\" --&gt; \"r/g / e/ a/t\" // \u200b\u968f\u673a\u200b\u51b3\u5b9a\u200b\uff1a\u300c\u200b\u4fdd\u6301\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u987a\u5e8f\u200b\u4e0d\u53d8\u200b\u300d\n\u200b\u7b97\u6cd5\u200b\u7ec8\u6b62\u200b\uff0c\u200b\u7ed3\u679c\u200b\u5b57\u7b26\u4e32\u200b\u548c\u200b s2 \u200b\u76f8\u540c\u200b\uff0c\u200b\u90fd\u200b\u662f\u200b \"rgeat\"\n\u200b\u8fd9\u662f\u200b\u4e00\u79cd\u200b\u80fd\u591f\u200b\u6270\u4e71\u200b s1 \u200b\u5f97\u5230\u200b s2 \u200b\u7684\u200b\u60c5\u5f62\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8ba4\u4e3a\u200b s2 \u200b\u662f\u200b s1 \u200b\u7684\u200b\u6270\u4e71\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u8fd4\u56de\u200b true\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1as1 = \"abcde\", s2 = \"caebd\"\n\u200b\u8f93\u51fa\u200b\uff1afalse\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1as1 = \"a\", s2 = \"a\"\n\u200b\u8f93\u51fa\u200b\uff1atrue\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>s1.length == s2.length</code></li> <li><code>1 &lt;= s1.length &lt;= 30</code></li> <li><code>s1</code> \u200b\u548c\u200b <code>s2</code> \u200b\u7531\u200b\u5c0f\u5199\u200b\u82f1\u6587\u5b57\u6bcd\u200b\u7ec4\u6210\u200b</li> </ul> <p>Reference</p>","tags":["\u5b57\u7b26\u4e32","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/87/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u8003\u8651\u200b\u4e24\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\\(s_1, s_2\\)\uff0c\u200b\u51fd\u6570\u200b\\(f(x, y)\\)\u200b\u5b9a\u4e49\u200b\u5982\u4e0b\u200b\uff1a</p> \\[ f(x, y) = \\left\\{ \\begin{aligned}     &amp; T &amp; y\\mathrm{\u200b\u662f\u200b}x\\mathrm{\u200b\u7684\u200b\u6270\u4e71\u200b\u5b57\u7b26\u4e32\u200b} \\\\     &amp; F &amp; y\\mathrm{\u200b\u4e0d\u662f\u200b}x\\mathrm{\u200b\u7684\u200b\u6270\u4e71\u200b\u5b57\u7b26\u4e32\u200b} \\end{aligned} \\right . \\] <p>\u200b\u5219\u200b\u5bf9\u4e8e\u200b\u51fd\u6570\u200b\\(f(x, y)\\)\uff0c\u200b\u6709\u200b\u5982\u4e0b\u200b\u6027\u8d28\u200b\uff1a</p> <ul> <li>\\(f(s_1, s_2) = f(s_2, s_1)\\)</li> <li>\\(f(s_1, s_1) = T\\)</li> <li>\\(f(s_1, s_2) \\land f(s_2, s_3)\\rightarrow f(s_1, s_3)\\)</li> </ul> <p>\u200b\u5373\u200b\u6270\u4e71\u200b\u5b57\u7b26\u4e32\u200b\u5173\u7cfb\u200b\u662f\u200b\u7b49\u4ef7\u5173\u7cfb\u200b\u3002</p> <p>\u200b\u5b9a\u4e49\u200b\u53e6\u200b\u4e00\u79cd\u200b\u7b49\u4ef7\u5173\u7cfb\u200b\\(g(x, y)\\)\uff1a</p> \\[ g(x, y) = \\left\\{ \\begin{aligned}     &amp; T &amp; x, y \\mathrm{\u200b\u5404\u200b\u5b57\u6bcd\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u76f8\u540c\u200b} \\\\     &amp; F &amp; x, y \\mathrm{\u200b\u5404\u200b\u5b57\u6bcd\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u4e0d\u540c\u200b} \\end{aligned} \\right . \\] <p>\u200b\u6839\u636e\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u6270\u4e71\u200b\u5b57\u7b26\u4e32\u200b\u64cd\u4f5c\u200b \u200b\u4e0d\u4f1a\u200b \u200b\u6539\u53d8\u200b</p> <ol> <li>\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u957f\u5ea6\u200b</li> <li>\u200b\u5b57\u7b26\u4e32\u200b\u5185\u200b\u5404\u200b\u5b57\u6bcd\u200b\u7684\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b</li> </ol> <p>\u200b\u5982\u679c\u200b\\(s_1, s_2\\)\u200b\u7684\u200b\u957f\u5ea6\u200b\u4e0d\u200b\u5339\u914d\u200b\u6216\u200b\u5b57\u6bcd\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u4e0d\u200b\u5339\u914d\u200b\uff0c\\(f(s_1, s_2)\\)\u200b\u5373\u53ef\u200b\u63d0\u524d\u200b\u8fd4\u56de\u200b\\(F\\)\u3002</p> <p>\u200b\u8003\u8651\u200b\u5206\u5272\u200b\u540e\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u5c06\u200b\\(s_1\\)\u200b\u5728\u200b\u4e0b\u6807\u200b\\(i\\)\u200b\u4e0e\u200b\u4e0b\u6807\u200b\\(i + 1\\)\u200b\u5904\u200b\u5206\u5272\u200b\u5f97\u5230\u200b\u7684\u200b\u4e24\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u79f0\u4e3a\u200b \\(s_{1, i}, s'_{1, i}\\)\uff0c\\(s_{1, i}\\)\u200b\u4f4d\u4e8e\u200b\u5de6\u4fa7\u200b\uff0c\\(s'_{1, i}\\)\u200b\u4f4d\u4e8e\u200b\u53f3\u4fa7\u200b\u3002\u200b\u5bf9\u4e8e\u200b\\(s_2\\)\uff0c\u200b\u6709\u200b\u540c\u6837\u200b\u7684\u200b\u5206\u5272\u200b \u200b\u65b9\u6cd5\u200b\u5f97\u5230\u200b\\(s_{2, i}, s'_{2, i}\\)\u3002\u200b\u8bbe\u200b\u5b57\u7b26\u4e32\u200b\u957f\u5ea6\u200b\u4e3a\u200b\\(s\\)\uff0c\u200b\u4ee4\u200b\\(-i\\)\u200b\u4e3a\u200b\u4ece\u200b\u5b57\u7b26\u4e32\u200b\u53f3\u4fa7\u200b\u5f00\u59cb\u200b\u7684\u200b\u4e0b\u6807\u200b\\(i\\)\u3002</p> <p>\u200b\u6839\u636e\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u82e5\u4efb\u200b\u4e00\u7ec4\u200b\u5206\u5272\u200b\u540e\u200b\u7684\u200b\u4e24\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u6ee1\u8db3\u200b\u6270\u4e71\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5173\u7cfb\u200b\uff0c\u200b\u5219\u200b\u539f\u6765\u200b\u7684\u200b\u4e24\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u6ee1\u8db3\u200b\u6270\u4e71\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5173\u7cfb\u200b \uff0c\u200b\u5e76\u4e14\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5173\u7cfb\u200b\u4e0e\u200b\u539f\u200b\u5b57\u7b26\u4e32\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5173\u7cfb\u200b\u65e0\u5173\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u76f8\u4e92\u5f71\u54cd\u200b\u3002\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u91c7\u7528\u200b\u52a8\u6001\u200b\u89c4\u5212\u200b\uff0c\u200b\u5c06\u200b\u539f\u200b \u200b\u95ee\u9898\u200b\u5206\u5272\u200b\u4e3a\u200b\u4e00\u7cfb\u5217\u200b\u66f4\u200b\u5c0f\u200b\u7684\u200b\u5b50\u200b\u95ee\u9898\u200b\u3002</p> <p>\u200b\u7531\u4e8e\u200b\\(f(s_1, s_2)\\)\u200b\u5b58\u5728\u200b\u5bf9\u79f0\u6027\u200b\uff0c\u200b\u4e0d\u59a8\u200b\u56fa\u5b9a\u200b\\(s_1\\)\u200b\u7684\u200b\u5206\u5272\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u8003\u8651\u200b\\(s_2\\)\u200b\u7684\u200b\u5206\u5272\u200b\u65b9\u5f0f\u200b\u3002\\(s_2\\)\u200b\u6709\u200b\u4e24\u79cd\u200b\u5206\u5272\u200b \u200b\u65b9\u5f0f\u200b\uff0c\u200b\u5373\u200b\u201c\u200b\u4fdd\u6301\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u987a\u5e8f\u200b\u4e0d\u53d8\u200b\u201d\u200b\u6216\u200b\u201c\u200b\u4ea4\u6362\u200b\u4e24\u4e2a\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u201d\u3002\u200b\u5206\u522b\u200b\u5bf9\u5e94\u200b\u4e8e\u200b\u5982\u4e0b\u200b\u60c5\u51b5\u200b\uff1a</p> <ul> <li>\\(s_{1, i}\\)\u200b\u5bf9\u5e94\u200b\u4e8e\u200b\\(s_{2, i}\\)\uff0c\\(s'_{1, i}\\)\u200b\u5bf9\u5e94\u200b\u4e8e\u200b\\(s'_{2, i}\\)\u3002</li> <li>\\(s_{1, i}\\)\u200b\u5bf9\u5e94\u200b\u4e8e\u200b\\(s'_{2, -i}\\)\uff0c\\(s'_{1, i}\\)\u200b\u5bf9\u5e94\u200b\u4e8e\u200b\\(s_{2, -i}\\)\u3002</li> </ul> <p>\u200b\u5219\u200b\\(f(s_1, s_2)\\)\u200b\u53ef\u4ee5\u200b\u6309\u7167\u200b\u5982\u4e0b\u200b\u65b9\u5f0f\u200b\u8ba1\u7b97\u200b\uff0c\u200b\u8bbe\u200b\\(\\mathrm{len}(s_1) = \\mathrm{len}(s_2) = s\\)\u3002</p> \\[ f(s_1, s_2) = \\left\\{ \\begin{aligned}     &amp; F &amp; \\lnot g(s_1, s_2) \\\\     &amp; T &amp; s\\leq 3 \\land g(s_1, s_2) \\\\     &amp; \\left(\\bigvee_{i} f(s_{1, i}, s_{2, i})\\land f(s'_{1, i}, s'_{2, i})\\right)     \\lor     \\left(\\bigvee_{i} f(s_{1, i}, s'_{2, -i})\\land f(s'_{1, i}, s_{2, -i})\\right) &amp; s &gt; 3 \\land g(s_1, s_2)\\\\ \\end{aligned} \\right . \\] <p>\u200b\u7531\u6b64\u200b\u5373\u53ef\u200b\u5f97\u51fa\u200b\u521d\u6b65\u200b\u7684\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u4f46\u200b\u591a\u6b21\u200b\u9012\u5f52\u200b\u4f1a\u200b\u4f7f\u5f97\u200b\u7b97\u6cd5\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e0a\u5347\u200b\uff0c\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u6570\u7ec4\u200b\u4fdd\u5b58\u200b\u5b50\u200b\u95ee\u9898\u200b\u7684\u200b\u89e3\u200b\u3002\u200b\u5171\u6709\u200b \\(\\mathcal O(n^3)\\)\u200b\u89c4\u6a21\u200b\u7684\u200b\u5b50\u200b\u95ee\u9898\u200b\uff0c\u200b\u56e0\u6b64\u200b\u9700\u8981\u200b\u82b1\u8d39\u200b\\(\\mathcal O(n^3)\\)\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e0e\u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b\u3002</p> <pre><code>inline int hash(char *s, int len)\n{\n    int i, hashMap[26] = {0};\n    unsigned long long ret = 0;\n    for (i = 0; i &lt; len; i++)\n        hashMap[s[i] - 'a']++;\n    for (i = 0; i &lt; 26; i++)\n    {\n        ret *= 31;\n        ret += hashMap[i] + 1;\n        if (ret &gt; INT_MAX)\n            ret = ret &amp; INT_MAX;\n    }\n    return (int)ret;\n}\n\nbool helper(char *s1, int offset1, char *s2, int offset2, int len, int ***dp)\n{\n    if (dp[offset1][offset2][len - 1] &gt;= 0)\n        return dp[offset1][offset2][len - 1];\n    else if (len &lt; 4)\n    {\n        dp[offset1][offset2][len - 1] = hash(s1 + offset1, len) == hash(s2 + offset2, len);\n        return dp[offset1][offset2][len - 1];\n    }\n    int flag = false, a, i;\n    dp[offset1][offset2][len - 1] = 0;\n    for (i = 1; i &lt; len; i++)\n    {\n        a = hash(s1 + offset1, i);\n        if (a == hash(s2 + offset2, i))\n            flag = flag || (\n                helper(s1, offset1, s2, offset2, i, dp) &amp;&amp; \n                helper(s1, offset1 + i, s2, offset2 + i, len - i, dp)\n            );\n        if (!flag &amp;&amp; a == hash(s2 + offset2 + len - i, i))\n            flag = flag || (\n                helper(s1, offset1, s2, offset2 + len - i, i, dp) &amp;&amp; \n                helper(s1, offset1 + i, s2, offset2, len - i, dp)\n            );\n        if (flag)\n            break;\n    }\n    dp[offset1][offset2][len - 1] = flag;\n    return dp[offset1][offset2][len - 1];\n}\n\nbool isScramble(char * s1, char * s2){\n    int len = strlen(s1), i, j,\n        ***dp = (int ***)malloc(sizeof(int **) * len),\n        **_dp = (int **)malloc(sizeof(int *) * len * len),\n        *__dp = (int *)malloc(sizeof(int) * len * len * len);\n    memset(__dp, 0xff, sizeof(int) * len * len * len);\n    for (i = 0; i &lt; len; i++)\n    {\n        dp[i] = _dp + i * len;\n        for (j = 0; j &lt; len; j++)\n            dp[i][j] = __dp + i * len * len + j * len;\n    }\n    return helper(s1, 0, s2, 0, strlen(s1), dp);\n}\n</code></pre>","tags":["\u5b57\u7b26\u4e32","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/88/","title":"88. \u200b\u5408\u5e76\u200b\u4e24\u4e2a\u200b\u6709\u5e8f\u200b\u6570\u7ec4","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/88/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e24\u4e2a\u200b\u6709\u5e8f\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b\u00a0<code>nums1</code> \u200b\u548c\u200b <code>nums2</code>\uff0c\u200b\u8bf7\u200b\u4f60\u200b\u5c06\u200b <code>nums2</code> \u200b\u5408\u5e76\u200b\u5230\u200b\u00a0<code>nums1</code>\u00a0\u200b\u4e2d\u200b\uff0c\u200b\u4f7f\u200b <code>nums1</code> \u200b\u6210\u4e3a\u200b\u4e00\u4e2a\u200b\u6709\u5e8f\u200b\u6570\u7ec4\u200b\u3002</p> <p>\u200b\u8bf4\u660e\u200b:</p> <ul> <li>\u200b\u521d\u59cb\u5316\u200b\u00a0<code>nums1</code> \u200b\u548c\u200b <code>nums2</code> \u200b\u7684\u200b\u5143\u7d20\u200b\u6570\u91cf\u200b\u5206\u522b\u200b\u4e3a\u200b\u00a0<code>m</code> \u200b\u548c\u200b <code>n</code> \u3002</li> <li>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5047\u8bbe\u200b\u00a0<code>nums1</code>\u00a0\u200b\u6709\u200b\u8db3\u591f\u200b\u7684\u200b\u7a7a\u95f4\u200b\uff08\u200b\u7a7a\u95f4\u200b\u5927\u5c0f\u200b\u5927\u4e8e\u200b\u6216\u200b\u7b49\u4e8e\u200b\u00a0<code>m + n</code>\uff09\u200b\u6765\u200b\u4fdd\u5b58\u200b <code>nums2</code> \u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u3002</li> </ul> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b:\nnums1 = [1,2,3,0,0,0], m = 3\nnums2 = [2,5,6],       n = 3\n\n\u200b\u8f93\u51fa\u200b:\u00a0[1,2,2,3,5,6]\n</code></pre> <p>Reference</p>","tags":["\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/88/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u76f4\u63a5\u200b\u5728\u200b<code>nums1</code>\u200b\u7684\u200b\u5185\u5b58\u7a7a\u95f4\u200b\u4e0a\u200b\u4ece\u200b\u540e\u200b\u5411\u524d\u200b\u539f\u4f4d\u200b\u5408\u5e76\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>#define MAX(x, y) (x &gt; y ? x : y)\nvoid merge(int* nums1, int nums1Size, int m, int* nums2, int nums2Size, int n){\n    int x = m - 1, y = n - 1;\n    while(y &gt;= 0 &amp;&amp; x &gt;= 0)\n    {\n        nums1[x + y + 1] = MAX(nums1[x], nums2[y]);\n        if (nums1[x] &gt; nums2[y])\n            x--;\n        else\n            y--;\n    }\n    if (y &gt;= 0)\n        memcpy(nums1, nums2, sizeof(int) * (y + 1));\n}\n</code></pre>","tags":["\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/9/","title":"9. \u200b\u56de\u6587\u200b\u6570","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/9/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u5224\u65ad\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u662f\u5426\u662f\u200b\u56de\u6587\u200b\u6570\u200b\u3002\u200b\u56de\u6587\u200b\u6570\u662f\u200b\u6307\u6b63\u200b\u5e8f\u200b\uff08\u200b\u4ece\u200b\u5de6\u5411\u53f3\u200b\uff09\u200b\u548c\u200b\u5012\u5e8f\u200b\uff08\u200b\u4ece\u53f3\u200b\u5411\u200b\u5de6\u200b\uff09\u200b\u8bfb\u200b\u90fd\u200b\u662f\u200b\u4e00\u6837\u200b\u7684\u200b\u6574\u6570\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: 121\n\u200b\u8f93\u51fa\u200b: true\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a02\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: -121\n\u200b\u8f93\u51fa\u200b: false\n\u200b\u89e3\u91ca\u200b: \u200b\u4ece\u200b\u5de6\u5411\u53f3\u200b\u8bfb\u200b, \u200b\u4e3a\u200b -121 \u3002 \u200b\u4ece\u53f3\u200b\u5411\u200b\u5de6\u8bfb\u200b, \u200b\u4e3a\u200b 121- \u3002\u200b\u56e0\u6b64\u200b\u5b83\u200b\u4e0d\u662f\u200b\u4e00\u4e2a\u200b\u56de\u6587\u200b\u6570\u200b\u3002\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b: 10\n\u200b\u8f93\u51fa\u200b: false\n\u200b\u89e3\u91ca\u200b: \u200b\u4ece\u53f3\u200b\u5411\u200b\u5de6\u8bfb\u200b, \u200b\u4e3a\u200b 01 \u3002\u200b\u56e0\u6b64\u200b\u5b83\u200b\u4e0d\u662f\u200b\u4e00\u4e2a\u200b\u56de\u6587\u200b\u6570\u200b\u3002\n</code></pre> <p>\u200b\u8fdb\u9636\u200b\uff1a</p> <p>\u200b\u4f60\u200b\u80fd\u200b\u4e0d\u200b\u5c06\u200b\u6574\u6570\u200b\u8f6c\u4e3a\u200b\u5b57\u7b26\u4e32\u200b\u6765\u200b\u89e3\u51b3\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\u5417\u200b\uff1f</p> <p>Reference</p>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/9/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a </p> <ol> <li>\u200b\u5c0f\u4e8e\u200b0\u200b\u7684\u200b\u6570\u200b\u5fc5\u7136\u200b\u4e0d\u662f\u200b\u56de\u6587\u200b\u6570\u200b\uff1b</li> <li>\u200b\u5bf9\u4e8e\u200b\u975e\u8d1f\u200b\u6574\u6570\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u5224\u65ad\u200b\u6309\u4f4d\u200b\u53cd\u8f6c\u200b\u540e\u200b\u7684\u200b\u6570\u503c\u200b\u4e0e\u200b\u539f\u200b\u6570\u503c\u200b\u662f\u5426\u200b\u76f8\u7b49\u200b\u5373\u53ef\u200b\u3002</li> </ol> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>bool isPalindrome(int x){\n    if (x &lt; 0)\n        return false;\n    long transformed = 0, original = x;\n    while (x)\n    {\n        transformed *= 10;\n        transformed += x % 10;\n        x /= 10;\n    }\n    return transformed == original;\n}\n</code></pre>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/90/","title":"90. \u200b\u5b50\u96c6\u200b II","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6570\u7ec4","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/90/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b <code>nums</code> \uff0c\u200b\u5176\u4e2d\u200b\u53ef\u80fd\u200b\u5305\u542b\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b\uff0c\u200b\u8bf7\u200b\u4f60\u200b\u8fd4\u56de\u200b\u8be5\u200b\u6570\u7ec4\u200b\u6240\u6709\u200b\u53ef\u80fd\u200b\u7684\u200b\u5b50\u96c6\u200b\uff08\u200b\u5e42\u96c6\u200b\uff09\u3002</p> <p>\u200b\u89e3\u96c6\u200b \u200b\u4e0d\u80fd\u200b \u200b\u5305\u542b\u200b\u91cd\u590d\u200b\u7684\u200b\u5b50\u96c6\u200b\u3002\u200b\u8fd4\u56de\u200b\u7684\u200b\u89e3\u200b\u96c6\u4e2d\u200b\uff0c\u200b\u5b50\u96c6\u200b\u53ef\u4ee5\u200b\u6309\u200b \u200b\u4efb\u610f\u200b\u987a\u5e8f\u200b \u200b\u6392\u5217\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [1,2,2]\n\u200b\u8f93\u51fa\u200b\uff1a[[],[1],[1,2],[1,2,2],[2],[2,2]]\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1anums = [0]\n\u200b\u8f93\u51fa\u200b\uff1a[[],[0]]\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 10</code></li> <li><code>-10 &lt;= nums[i] &lt;= 10</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/90/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u5148\u200b\u7edf\u8ba1\u200b\u96c6\u5408\u200b\u4e2d\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\uff0c\u200b\u518d\u200b\u6839\u636e\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u8fdb\u884c\u200b\u56de\u6eaf\u200b\uff0c\u200b\u6700\u540e\u200b\u91cd\u65b0\u200b\u751f\u6210\u200b\u6bcf\u4e2a\u200b\u96c6\u5408\u200b\u3002</p> <pre><code>/**\n * Return an array of arrays of size *returnSize.\n * The sizes of the arrays are returned as *returnColumnSizes array.\n * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().\n */\nint *convert(int *count, int countLen, int *returnSize)\n{\n    int i = 0, j = 0, k = 0;\n    *returnSize = 0;\n    for (i = 0; i &lt; countLen; i++)\n        (*returnSize) += count[i];\n    int *ret = (int *)malloc(sizeof(int) * *returnSize);\n    for (i = 0; i &lt; countLen; i++)\n        for (j = 0; j &lt; count[i]; j++)\n            ret[k++] = i - 10;\n    return ret;\n}\n\nvoid dfs(int **ret, int *retSize, int *count, int *current, int currentPos, int maxPos, int *number)\n{\n    if (currentPos == maxPos)\n    {\n        ret[*number] = convert(current, maxPos, retSize + *number);\n        (*number)++;\n    }\n    else\n    {\n        if (count[currentPos] == 0)\n            dfs(ret, retSize, count, current, currentPos + 1, maxPos, number);\n        else\n        {\n            int i = 0;\n            for (i = 0; i &lt;= count[currentPos]; i++)\n            {\n                current[currentPos] = i;\n                dfs(ret, retSize, count, current, currentPos + 1, maxPos, number);\n                current[currentPos] = 0;\n            }\n        }\n    }\n}\n\nint** subsetsWithDup(int* nums, int numsSize, int* returnSize, int** returnColumnSizes){\n    int *count = (int *)malloc(sizeof(int) * 21), *buffer = (int *)malloc(sizeof(int) * 21),\n        i = 0, **ret = NULL;\n    memset(count, 0, sizeof(int) * 21);\n    memset(buffer, 0, sizeof(int) * 21);\n    *returnSize = 1;\n    for (i = 0; i &lt; numsSize; i++)\n        count[nums[i] + 10]++;\n    for (i = 0; i &lt; 21; i++)\n        *returnSize *= count[i] + 1;\n    *returnColumnSizes = (int *)malloc(sizeof(int) * *returnSize);\n    ret = (int **)malloc(sizeof(int *) * *returnSize);\n    i = 0;\n    dfs(ret, *returnColumnSizes, count, buffer, 0, 21, &amp;i);\n    return ret;\n}\n</code></pre> <p>Python\u200b\u8bed\u8a00\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>collections.Counter</code>\u200b\u7edf\u8ba1\u6570\u5b57\u200b\u7684\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u3002</p> <pre><code>from collections import Counter\n\nclass Solution:\n    def subsetsWithDup(self, nums: List[int]) -&gt; List[List[int]]:\n        counts = Counter(nums)\n        result = [[]]\n        for k, v in counts.items():\n            new_result = []\n            for i in range(v + 1):\n                new_result.extend([\n                    [*entry, *([k] * i)]\n                    for entry in result\n                ])\n            result = new_result\n        return result\n</code></pre>","tags":["\u6570\u7ec4","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/917/","title":"917. \u200b\u4ec5\u4ec5\u200b\u53cd\u8f6c\u200b\u5b57\u6bcd","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/917/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u00a0<code>S</code>\uff0c\u200b\u8fd4\u56de\u200b\u00a0\u201c\u200b\u53cd\u8f6c\u200b\u540e\u200b\u7684\u200b\u201d\u00a0\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u5176\u4e2d\u200b\u4e0d\u662f\u200b\u5b57\u6bcd\u200b\u7684\u200b\u5b57\u7b26\u200b\u90fd\u200b\u4fdd\u7559\u200b\u5728\u200b\u539f\u5730\u200b\uff0c\u200b\u800c\u200b\u6240\u6709\u200b\u5b57\u6bcd\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u53d1\u751f\u200b\u53cd\u8f6c\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1a\"ab-cd\"\n\u200b\u8f93\u51fa\u200b\uff1a\"dc-ba\"\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1a\"a-bC-dEf-ghIj\"\n\u200b\u8f93\u51fa\u200b\uff1a\"j-Ih-gfE-dCba\"\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 3\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1a\"Test1ng-Leet=code-Q!\"\n\u200b\u8f93\u51fa\u200b\uff1a\"Qedo1ct-eeLg=ntse-T!\"\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>S.length &lt;= 100</code></li> <li><code>33 &lt;= S[i].ASCIIcode &lt;= 122</code></li> <li><code>S</code> \u200b\u4e2d\u200b\u4e0d\u200b\u5305\u542b\u200b\u00a0<code>\\</code> or <code>\"</code></li> </ul> <p>Reference</p>","tags":["\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/917/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u548c\u200b\u53cd\u8f6c\u200b\u5b57\u7b26\u4e32\u200b\u4f7f\u7528\u200b\u76f8\u540c\u200b\u7684\u200b\u601d\u8def\u200b\uff0c\u200b\u53ea\u200b\u9700\u200b\u52a0\u4e0a\u200b\u5bf9\u200b\u5f53\u524d\u200b\u5b57\u7b26\u200b\u7684\u200b\u5224\u65ad\u200b\u5373\u53ef\u200b\u3002</p> <pre><code>bool isChar(char *s)\n{\n    return (*s &gt;= 'a' &amp;&amp; *s &lt;= 'z') || (*s &gt;= 'A' &amp;&amp; *s &lt;= 'Z');\n}\nchar * reverseOnlyLetters(char * S) {\n    int len = strlen(S);\n    char *head = S, *tail = S + len - 1, temp;\n    while (tail &gt; head)\n    {\n        while (!isChar(head) &amp;&amp; head &lt; tail)\n            head++;\n        while (!isChar(tail) &amp;&amp; head &lt; tail)\n            tail--;\n        temp = *head;\n        *head = *tail;\n        *tail = temp;\n        head++;\n        tail--;\n    }\n    return S;\n}\n</code></pre>","tags":["\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/92/","title":"92. \u200b\u53cd\u8f6c\u200b\u94fe\u8868\u200b II","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/92/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u5355\u94fe\u200b\u8868\u200b\u7684\u200b\u5934\u200b\u8282\u70b9\u200b\u00a0<code>head</code> \u200b\u548c\u200b\u4e24\u4e2a\u200b\u6574\u6570\u200b\u00a0<code>left</code> \u200b\u548c\u200b <code>right</code> \uff0c\u200b\u5176\u4e2d\u200b\u00a0<code>left &lt;= right</code> \u3002\u200b\u8bf7\u200b\u4f60\u200b\u53cd\u8f6c\u200b\u4ece\u200b\u4f4d\u7f6e\u200b <code>left</code> \u200b\u5230\u200b\u4f4d\u7f6e\u200b <code>right</code> \u200b\u7684\u200b\u94fe\u8868\u200b\u8282\u70b9\u200b\uff0c\u200b\u8fd4\u56de\u200b \u200b\u53cd\u8f6c\u200b\u540e\u200b\u7684\u200b\u94fe\u8868\u200b \u3002</p> <p></p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1ahead = [1,2,3,4,5], left = 2, right = 4\n\u200b\u8f93\u51fa\u200b\uff1a[1,4,3,2,5]\n</code></pre> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b\uff1ahead = [5], left = 1, right = 1\n\u200b\u8f93\u51fa\u200b\uff1a[5]\n</code></pre> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li>\u200b\u94fe\u8868\u200b\u4e2d\u200b\u8282\u70b9\u200b\u6570\u76ee\u200b\u4e3a\u200b <code>n</code></li> <li><code>1 &lt;= n &lt;= 500</code></li> <li><code>-500 &lt;= Node.val &lt;= 500</code></li> <li><code>1 &lt;= left &lt;= right &lt;= n</code></li> </ul> <p>Reference</p>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/92/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u5148\u200b\u8003\u8651\u200b\u53cd\u8f6c\u200b\u6574\u4e2a\u200b\u94fe\u8868\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4e09\u200b\u6307\u9488\u200b\u6cd5\u5728\u200b\\(\\mathcal O(N)\\)\u200b\u7684\u200b\u65f6\u95f4\u200b\u5185\u200b\u4f7f\u7528\u200b\\(\\mathcal O(1)\\)\u200b\u7684\u200b\u7a7a\u95f4\u200b\u53cd\u8f6c\u200b\u94fe\u8868\u200b</p> <p>\u200b\u94fe\u8868\u200b\u53cd\u8f6c\u200b\u7684\u200b\u4e09\u200b\u6307\u9488\u200b\u6cd5\u200b\uff1a\u200b\u5b9a\u4e49\u200b<code>cur1, cur2, cur3</code>\u200b\u4e09\u4e2a\u200b\u6307\u9488\u200b\uff0c\u200b\u5206\u522b\u200b\u6307\u5411\u200b\u94fe\u8868\u200b\u7684\u200b\u5934\u200b\u8282\u70b9\u200b\u3001\u200b\u7b2c\u4e8c\u4e2a\u200b\u8282\u70b9\u200b\u4e0e\u200b\u7b2c\u4e09\u4e2a\u200b\u8282\u70b9\u200b\u3002\u200b\u6307\u9488\u200b<code>cur1, cur2</code>\u200b\u7528\u4e8e\u200b\u4ea4\u6362\u200b\u94fe\u8868\u200b\u8282\u70b9\u200b\u7684\u200b\u8fde\u63a5\u200b\u65b9\u5411\u200b\u3002\u200b\u7531\u4e8e\u200b\u4ea4\u6362\u200b\u8282\u70b9\u200b\u64cd\u4f5c\u200b\u7834\u574f\u200b\u4e86\u200b\u539f\u6709\u200b\u7684\u200b\u8fde\u63a5\u7ed3\u6784\u200b\uff0c\u200b\u56e0\u6b64\u200b\u9700\u8981\u200b\u4e00\u4e2a\u200b\u989d\u5916\u200b\u7684\u200b\u6307\u9488\u200b<code>cur3</code>\u200b\u7528\u4e8e\u200b\u79fb\u52a8\u200b\u6307\u9488\u200b\u3002</p> <p>\u200b\u4e09\u200b\u6307\u9488\u200b\u6cd5\u200b\u7684\u200b\u4e3b\u8981\u200b\u6d41\u7a0b\u200b\u5982\u4e0b\u200b\u56fe\u200b\uff1a</p> <ol> <li>\u200b\u521d\u59cb\u5316\u200b<code>cur1, cur2, cur3</code>\uff0c\u200b\u7f6e\u200b<code>cur1-&gt;next</code>\u200b\u4e3a\u200b<code>NULL</code></li> <li>\u200b\u4ee4\u200b<code>cur2-&gt;next = cur1</code>\uff0c\u200b\u5b8c\u6210\u200b\u4ea4\u6362\u200b\u64cd\u4f5c\u200b</li> <li>\u200b\u4ee4\u200b<code>cur1 = cur2</code></li> <li>\u200b\u4ee4\u200b<code>cur2 = cur3</code></li> <li>\u200b\u5982\u679c\u200b<code>cur3</code>\u200b\u4e0d\u200b\u4e3a\u200b<code>NULL</code>\uff0c<code>cur3</code>\u200b\u5728\u200b\u94fe\u8868\u200b\u4e0a\u200b\u5411\u524d\u200b\u79fb\u52a8\u200b\uff0c\u200b\u7136\u540e\u200b\u8fd4\u56de\u200b2</li> <li>\u200b\u5982\u679c\u200b<code>cur3</code>\u200b\u4e3a\u200b<code>NULL</code>\uff0c\u200b\u7ed3\u675f\u200b</li> <li>\u200b\u8fd4\u56de\u200b<code>cur2</code></li> </ol> <p></p> <p>\u200b\u53cd\u8f6c\u200b\u7ed9\u5b9a\u200b\u8303\u56f4\u200b\u5185\u200b\u7684\u200b\u94fe\u8868\u200b\uff0c\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\u5982\u4e0b\u200b\u60c5\u51b5\u200b\uff1a</p> <ul> <li>\u200b\u5982\u679c\u200b\u53cd\u8f6c\u200b\u533a\u95f4\u200b\u4ece\u200b\u7b2c\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u5f00\u59cb\u200b\uff0c\u200b\u94fe\u8868\u200b\u7684\u200b\u5934\u200b\u8282\u70b9\u200b\u4f1a\u200b\u6539\u53d8\u200b\uff0c\u200b\u5426\u5219\u200b\u4e0d\u200b\u6539\u53d8\u200b</li> <li>\u200b\u5982\u679c\u200b\u533a\u95f4\u200b\u957f\u5ea6\u200b\u4e3a\u200b1\uff0c\u200b\u5219\u200b\u65e0\u9700\u200b\u53cd\u8f6c\u200b</li> <li>\u200b\u53cd\u8f6c\u200b\u540e\u200b\u9700\u8981\u200b\u66f4\u65b0\u200b\u53cd\u8f6c\u200b\u533a\u95f4\u200b\u524d\u540e\u200b\u7684\u200b\u8282\u70b9\u200b\u8fde\u63a5\u200b\u5173\u7cfb\u200b</li> </ul> <p>\u200b\u6574\u4f53\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\nstruct ListNode* reverseBetween(struct ListNode* head, int left, int right){\n    if (left == right)\n        return head;\n    struct ListNode *cur = head, *prev = NULL;\n    left--;\n    right--;\n    while (left)\n    {\n        left--;\n        right--;\n        prev = cur;\n        cur = cur-&gt;next;\n    }\n    struct ListNode * cur2 = cur-&gt;next, *cur3 = cur2-&gt;next, *tail = cur;\n    while (right)\n    {\n        cur2-&gt;next = cur;\n        cur = cur2;\n        cur2 = cur3;\n        if (cur3)\n            cur3 = cur3-&gt;next;\n        else\n            break;\n        right--;\n    }\n    tail-&gt;next = cur2;\n    if (prev)\n        prev-&gt;next = cur;\n    return prev ? head : cur;\n}\n</code></pre>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/922/","title":"922. \u200b\u6309\u200b\u5947\u5076\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b II","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u7b80\u5355\u200b</p>","tags":["\u6570\u7ec4","\u53cc\u6307\u9488","\u6392\u5e8f"]},{"location":"coding/leetcode/922/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u975e\u8d1f\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b <code>nums</code>\uff0c  <code>nums</code> \u200b\u4e2d\u200b\u4e00\u534a\u200b\u6574\u6570\u200b\u662f\u200b \u200b\u5947\u6570\u200b \uff0c\u200b\u4e00\u534a\u200b\u6574\u6570\u200b\u662f\u200b \u200b\u5076\u6570\u200b \u3002</p> <p>\u200b\u5bf9\u200b\u6570\u7ec4\u200b\u8fdb\u884c\u200b\u6392\u5e8f\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u5f53\u200b <code>nums[i]</code> \u200b\u4e3a\u200b\u5947\u6570\u200b\u65f6\u200b\uff0c<code>i</code> \u200b\u4e5f\u200b\u662f\u200b \u200b\u5947\u6570\u200b \uff1b\u200b\u5f53\u200b <code>nums[i]</code> \u200b\u4e3a\u200b\u5076\u6570\u200b\u65f6\u200b\uff0c <code>i</code> \u200b\u4e5f\u200b\u662f\u200b \u200b\u5076\u6570\u200b \u3002</p> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u8fd4\u56de\u200b \u200b\u4efb\u4f55\u200b\u6ee1\u8db3\u200b\u4e0a\u8ff0\u200b\u6761\u4ef6\u200b\u7684\u200b\u6570\u7ec4\u200b\u4f5c\u4e3a\u200b\u7b54\u6848\u200b \u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>nums = [4,2,5,7]</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>[4,5,2,7]</code></p> <p>\u200b\u89e3\u91ca\u200b\uff1a[4,7,2,5]\uff0c[2,5,4,7]\uff0c[2,7,4,5] \u200b\u4e5f\u200b\u4f1a\u200b\u88ab\u200b\u63a5\u53d7\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a<code>nums = [2,3]</code></p> <p>\u200b\u8f93\u51fa\u200b\uff1a<code>[2,3]</code></p> <p>\u200b\u63d0\u793a\u200b\uff1a</p> <ul> <li><code>2 &lt;= nums.length &lt;= 2 * 10^4</code></li> <li><code>nums.length</code> \u200b\u662f\u200b\u5076\u6570\u200b</li> <li><code>nums</code> \u200b\u4e2d\u200b\u4e00\u534a\u200b\u662f\u200b\u5076\u6570\u200b</li> <li><code>0 &lt;= nums[i] &lt;= 1000</code></li> </ul> <p>\u200b\u8fdb\u9636\u200b\uff1a\u200b\u53ef\u4ee5\u200b\u4e0d\u200b\u4f7f\u7528\u200b\u989d\u5916\u200b\u7a7a\u95f4\u200b\u89e3\u51b3\u95ee\u9898\u200b\u5417\u200b\uff1f</p> <p>Reference</p>","tags":["\u6570\u7ec4","\u53cc\u6307\u9488","\u6392\u5e8f"]},{"location":"coding/leetcode/922/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u4ee5\u200b2\u200b\u4e3a\u200b\u6b65\u957f\u200b\u904d\u5386\u200b\u5217\u8868\u200b\uff1a\u200b\u5728\u200b\u5947\u6570\u200b\u4e0b\u6807\u200b\u4e2d\u200b\u5bfb\u627e\u200b\u7b2c\u4e00\u4e2a\u200b\u5076\u6570\u200b\uff0c\u200b\u5728\u200b\u5076\u6570\u200b\u4e0b\u6807\u200b\u4e2d\u200b\u5bfb\u627e\u200b\u7b2c\u4e00\u4e2a\u200b\u5947\u6570\u200b\uff0c\u200b\u7136\u540e\u200b\u5c06\u200b\u5176\u200b\u4ea4\u6362\u200b\u3002</p> <pre><code>class Solution:\n    def sortArrayByParityII(self, nums: List[int]) -&gt; List[int]:\n        odd, even, length = 1, 0, len(nums)\n        while even &lt; len(nums) and odd &lt; len(nums):\n            if nums[even] % 2 == 0:\n                even += 2\n            elif nums[odd] % 2 == 1:\n                odd += 2\n            else:\n                nums[odd], nums[even] = nums[even], nums[odd]\n        return nums\n</code></pre>","tags":["\u6570\u7ec4","\u53cc\u6307\u9488","\u6392\u5e8f"]},{"location":"coding/leetcode/98/","title":"98. \u200b\u9a8c\u8bc1\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811","text":"<p>\u200b\u96be\u5ea6\u200b\uff1a\u200b\u4e2d\u7b49\u200b</p>","tags":["\u6811","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u9012\u5f52"]},{"location":"coding/leetcode/98/#_1","title":"\u9898\u76ee","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u4e8c\u53c9\u6811\u200b\uff0c\u200b\u5224\u65ad\u200b\u5176\u200b\u662f\u5426\u662f\u200b\u4e00\u4e2a\u200b\u6709\u6548\u200b\u7684\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b\u3002</p> <p>\u200b\u5047\u8bbe\u200b\u4e00\u4e2a\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b\u5177\u6709\u200b\u5982\u4e0b\u200b\u7279\u5f81\u200b\uff1a</p> <ul> <li>\u200b\u8282\u70b9\u200b\u7684\u200b\u5de6\u5b50\u200b\u6811\u200b\u53ea\u200b\u5305\u542b\u200b\u5c0f\u4e8e\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\u7684\u200b\u6570\u200b\u3002</li> <li>\u200b\u8282\u70b9\u200b\u7684\u200b\u53f3\u5b50\u200b\u6811\u200b\u53ea\u200b\u5305\u542b\u200b\u5927\u4e8e\u200b\u5f53\u524d\u200b\u8282\u70b9\u200b\u7684\u200b\u6570\u200b\u3002</li> <li>\u200b\u6240\u6709\u200b\u5de6\u5b50\u200b\u6811\u200b\u548c\u200b\u53f3\u5b50\u200b\u6811\u200b\u81ea\u8eab\u200b\u5fc5\u987b\u200b\u4e5f\u200b\u662f\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b\u3002</li> </ul> <p>\u200b\u793a\u4f8b\u200b\u00a01\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b:\n    2\n   / \\\n  1   3\n\u200b\u8f93\u51fa\u200b: true\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\u00a02\uff1a</p> <pre><code>\u200b\u8f93\u5165\u200b:\n    5\n   / \\\n  1   4\n\u00a0    / \\\n\u00a0   3   6\n\u200b\u8f93\u51fa\u200b: false\n\u200b\u89e3\u91ca\u200b: \u200b\u8f93\u5165\u200b\u4e3a\u200b: [5,1,4,null,null,3,6]\u3002\n\u00a0    \u200b\u6839\u200b\u8282\u70b9\u200b\u7684\u200b\u503c\u200b\u4e3a\u200b 5 \uff0c\u200b\u4f46\u662f\u200b\u5176\u53f3\u5b50\u200b\u8282\u70b9\u200b\u503c\u4e3a\u200b 4 \u3002\n</code></pre> <p>Reference</p>","tags":["\u6811","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u9012\u5f52"]},{"location":"coding/leetcode/98/#_2","title":"\u9898\u89e3","text":"<p>\u200b\u57fa\u672c\u601d\u8def\u200b\uff1a \u200b\u5c06\u200b\u4e8c\u53c9\u200b\u67e5\u627e\u200b\u6811\u4e2d\u5e8f\u200b\u5c55\u5f00\u200b\u4e3a\u200b\u94fe\u8868\u200b\uff0c\u200b\u5224\u65ad\u200b\u94fe\u8868\u200b\u662f\u5426\u662f\u200b\u6709\u5e8f\u200b\u7684\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     struct TreeNode *left;\n *     struct TreeNode *right;\n * };\n */\nstruct ListNode *insert(struct ListNode *List, int val)\n{\n    struct ListNode *ret = malloc(sizeof(struct ListNode));\n    ret-&gt;val = val;\n    ret-&gt;next = List;\n    return ret;\n}\nstruct ListNode *toList(struct TreeNode *root, struct ListNode *List)\n{\n    if (root == NULL)\n        return List;\n    List = toList(root-&gt;right, List);\n    List = insert(List, root-&gt;val);\n    List = toList(root-&gt;left, List);\n    return List;\n}\nbool isValidBST(struct TreeNode* root){\n    if (root == NULL)\n        return true;\n    struct ListNode *rec = toList(root, NULL), *cur = rec;\n    do\n    {\n        if (cur-&gt;next == NULL)\n            break;\n        if (cur-&gt;val &gt;= cur-&gt;next-&gt;val)\n            return false;\n        cur = cur-&gt;next;\n    }\n    while (true);\n    return true;\n}\n</code></pre>","tags":["\u6811","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u9012\u5f52"]},{"location":"coding/leetcode/tags/","title":"Leetcode \u200b\u9898\u76ee","text":"<p>\u200b\u70b9\u51fb\u200b\u53f3\u4fa7\u200b\u76ee\u5f55\u200b\u53ef\u4ee5\u200b\u8df3\u8f6c\u200b\u5230\u200b\u5bf9\u5e94\u200b\u7684\u200b\u6807\u7b7e\u200b</p>"},{"location":"coding/leetcode/tags/#_1","title":"\u6570\u7ec4","text":"<p>\u200b\u6570\u7ec4\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b58\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u6570\u7ec4\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 1. \u200b\u4e24\u6570\u200b\u4e4b\u200b\u548c\u200b 26. \u200b\u5220\u9664\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u91cd\u590d\u200b\u9879\u200b 27. \u200b\u79fb\u9664\u200b\u5143\u7d20\u200b 33. \u200b\u641c\u7d22\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b 35. \u200b\u641c\u7d22\u200b\u63d2\u5165\u200b\u4f4d\u7f6e\u200b 40. \u200b\u7ec4\u5408\u200b\u603b\u548c\u200b II 42. \u200b\u63a5\u200b\u96e8\u6c34\u200b 45. \u200b\u8df3\u8dc3\u200b\u6e38\u620f\u200b II 46. \u200b\u5168\u200b\u6392\u5217\u200b 47. \u200b\u5168\u200b\u6392\u5217\u200b II 48. \u200b\u65cb\u8f6c\u200b\u56fe\u50cf\u200b 53. \u200b\u6700\u5927\u200b\u5b50\u5e8f\u200b\u548c\u200b 55. \u200b\u8df3\u8dc3\u200b\u6e38\u620f\u200b 56. \u200b\u5408\u5e76\u200b\u533a\u95f4\u200b 59. \u200b\u87ba\u65cb\u200b\u77e9\u9635\u200b II 62. \u200b\u4e0d\u540c\u200b\u8def\u5f84\u200b 64. \u200b\u6700\u5c0f\u200b\u8def\u5f84\u200b\u548c\u200b 66. \u200b\u52a0\u4e00\u200b 73. \u200b\u77e9\u9635\u200b\u7f6e\u200b\u96f6\u200b 74. \u200b\u641c\u7d22\u200b\u4e8c\u7ef4\u200b\u77e9\u9635\u200b 75. \u200b\u989c\u8272\u200b\u5206\u7c7b\u200b 78. \u200b\u5b50\u96c6\u200b 79. \u200b\u5355\u8bcd\u200b\u641c\u7d22\u200b 81. \u200b\u641c\u7d22\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b II 88. \u200b\u5408\u5e76\u200b\u4e24\u4e2a\u200b\u6709\u5e8f\u200b\u6570\u7ec4\u200b 90. \u200b\u5b50\u96c6\u200b II 118. \u200b\u6768\u8f89\u4e09\u89d2\u200b 119. \u200b\u6768\u8f89\u4e09\u89d2\u200b II 120. \u200b\u4e09\u89d2\u5f62\u200b\u6700\u5c0f\u200b\u8def\u5f84\u200b\u548c\u200b 121. \u200b\u4e70\u5356\u200b\u80a1\u7968\u200b\u7684\u200b\u6700\u4f73\u65f6\u673a\u200b 122. \u200b\u4e70\u5356\u200b\u80a1\u7968\u200b\u7684\u200b\u6700\u4f73\u65f6\u673a\u200b II 189. \u200b\u65cb\u8f6c\u200b\u6570\u7ec4\u200b 217. \u200b\u5b58\u5728\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b 219. \u200b\u5b58\u5728\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b II 384. \u200b\u6253\u4e71\u200b\u6570\u7ec4\u200b 509. \u200b\u6590\u6ce2\u200b\u90a3\u200b\u5951\u6570\u200b 598. \u200b\u533a\u95f4\u200b\u52a0\u6cd5\u200b II 729. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b I 731. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b II 732. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b III 922. \u200b\u6309\u200b\u5947\u5076\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b II 1011. \u200b\u5728\u200b D \u200b\u5929\u200b\u5185\u200b\u9001\u8fbe\u200b\u5305\u88f9\u200b\u7684\u200b\u80fd\u529b\u200b 1300. \u200b\u8f6c\u53d8\u200b\u6570\u7ec4\u200b\u540e\u200b\u6700\u200b\u63a5\u8fd1\u200b\u76ee\u6807\u503c\u200b\u7684\u200b\u6570\u7ec4\u200b\u548c\u200b 1561. \u200b\u4f60\u200b\u53ef\u4ee5\u200b\u83b7\u5f97\u200b\u7684\u200b\u6700\u5927\u200b\u786c\u5e01\u200b\u6570\u76ee\u200b 2218. \u200b\u4ece\u6808\u200b\u4e2d\u200b\u53d6\u51fa\u200b K \u200b\u4e2a\u200b\u786c\u5e01\u200b\u7684\u200b\u6700\u5927\u200b\u9762\u503c\u200b\u548c\u200b 2239. \u200b\u627e\u5230\u200b\u6700\u200b\u63a5\u8fd1\u200b 0 \u200b\u7684\u200b\u6570\u5b57\u200b 2241. \u200b\u8bbe\u8ba1\u200b\u4e00\u4e2a\u200b ATM \u200b\u673a\u5668\u200b 2270. \u200b\u5206\u5272\u200b\u6570\u7ec4\u200b\u7684\u200b\u65b9\u6848\u200b\u6570\u200b 2274. \u200b\u4e0d\u200b\u542b\u200b\u7279\u6b8a\u200b\u697c\u5c42\u200b\u7684\u200b\u6700\u5927\u200b\u8fde\u7eed\u200b\u697c\u5c42\u200b\u6570\u200b 2275. \u200b\u6309\u4f4d\u200b\u4e0e\u200b\u7ed3\u679c\u200b\u5927\u4e8e\u200b\u96f6\u200b\u7684\u200b\u6700\u957f\u200b\u7ec4\u200b 2412. \u200b\u5b8c\u6210\u200b\u6240\u6709\u200b\u4ea4\u6613\u200b\u7684\u200b\u521d\u59cb\u200b\u6700\u5c11\u200b\u94b1\u6570\u200b 2920. \u200b\u6536\u96c6\u200b\u6240\u6709\u200b\u91d1\u5e01\u200b\u53ef\u200b\u83b7\u5f97\u200b\u7684\u200b\u6700\u5927\u200b\u79ef\u5206\u200b 2944. \u200b\u8d2d\u4e70\u200b\u6c34\u679c\u200b\u9700\u8981\u200b\u7684\u200b\u6700\u5c11\u200b\u91d1\u5e01\u200b\u6570\u200b 3065. \u200b\u8d85\u8fc7\u200b\u9608\u503c\u200b\u7684\u200b\u6700\u5c11\u200b\u64cd\u4f5c\u6570\u200b I 3066. \u200b\u8d85\u8fc7\u200b\u9608\u503c\u200b\u7684\u200b\u6700\u5c11\u200b\u64cd\u4f5c\u6570\u200b II 3095. \u200b\u6216\u503c\u200b\u81f3\u5c11\u200b K \u200b\u7684\u200b\u6700\u200b\u77ed\u5b50\u200b\u6570\u7ec4\u200b I 3097. \u200b\u6216\u503c\u200b\u81f3\u5c11\u200b K \u200b\u7684\u200b\u6700\u200b\u77ed\u5b50\u200b\u6570\u7ec4\u200b II 3287. \u200b\u6c42\u200b\u51fa\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u6700\u5927\u200b\u5e8f\u5217\u200b\u503c"},{"location":"coding/leetcode/tags/#_2","title":"\u5b57\u7b26\u4e32","text":"<p>\u200b\u5b57\u7b26\u4e32\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b24\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u5b57\u7b26\u4e32\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 3. \u200b\u65e0\u200b\u91cd\u590d\u200b\u5b57\u7b26\u200b\u7684\u200b\u6700\u957f\u200b\u5b50\u4e32\u200b 8. \u200b\u5b57\u7b26\u4e32\u200b\u8f6c\u6362\u200b\u6574\u6570\u200b (atoi) 13. \u200b\u7f57\u9a6c\u6570\u5b57\u200b\u8f6c\u200b\u6574\u6570\u200b 14. \u200b\u6700\u957f\u200b\u516c\u5171\u200b\u524d\u7f00\u200b 17. \u200b\u7535\u8bdd\u53f7\u7801\u200b\u7684\u200b\u5b57\u6bcd\u7ec4\u5408\u200b 20. \u200b\u6709\u6548\u200b\u7684\u200b\u62ec\u53f7\u200b 22. \u200b\u62ec\u53f7\u200b\u751f\u6210\u200b 28. \u200b\u5b9e\u73b0\u200b strStr() 38. \u200b\u5916\u89c2\u200b\u6570\u5217\u200b 43. \u200b\u5b57\u7b26\u4e32\u200b\u76f8\u4e58\u200b 87. \u200b\u6270\u4e71\u200b\u5b57\u7b26\u4e32\u200b 115. \u200b\u4e0d\u540c\u200b\u7684\u200b\u5b50\u200b\u5e8f\u5217\u200b 125. \u200b\u9a8c\u8bc1\u200b\u56de\u6587\u200b\u4e32\u200b 344. \u200b\u53cd\u8f6c\u200b\u5b57\u7b26\u4e32\u200b 387. \u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u552f\u4e00\u200b\u5b57\u7b26\u200b 541. \u200b\u53cd\u8f6c\u200b\u5b57\u7b26\u4e32\u200b II 680. \u200b\u9a8c\u8bc1\u200b\u56de\u6587\u200b\u4e32\u200b II 917. \u200b\u4ec5\u4ec5\u200b\u53cd\u8f6c\u200b\u5b57\u6bcd\u200b 2264. \u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u6700\u5927\u200b\u7684\u200b 3 \u200b\u4f4d\u200b\u76f8\u540c\u200b\u6570\u5b57\u200b 2266. \u200b\u7edf\u8ba1\u200b\u6253\u5b57\u200b\u65b9\u6848\u200b\u6570\u200b 3019. \u200b\u6309\u952e\u200b\u53d8\u66f4\u200b\u7684\u200b\u6b21\u6570\u200b 3280. \u200b\u5c06\u200b\u65e5\u671f\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u4e8c\u8fdb\u5236\u200b\u8868\u793a\u200b 3297. \u200b\u7edf\u8ba1\u200b\u91cd\u65b0\u6392\u5217\u200b\u540e\u200b\u5305\u542b\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u6570\u76ee\u200b I 3298. \u200b\u7edf\u8ba1\u200b\u91cd\u65b0\u6392\u5217\u200b\u540e\u200b\u5305\u542b\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u6570\u76ee\u200b II"},{"location":"coding/leetcode/tags/#_3","title":"\u6570\u5b66","text":"<p>\u200b\u6570\u5b66\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b20\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u6570\u5b66\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 2. \u200b\u4e24\u200b\u6570\u200b\u76f8\u52a0\u200b 7. \u200b\u6574\u6570\u200b\u53cd\u8f6c\u200b 8. \u200b\u5b57\u7b26\u4e32\u200b\u8f6c\u6362\u200b\u6574\u6570\u200b (atoi) 9. \u200b\u56de\u6587\u200b\u6570\u200b 11. \u200b\u76db\u200b\u6700\u591a\u6c34\u200b\u7684\u200b\u5bb9\u5668\u200b 13. \u200b\u7f57\u9a6c\u6570\u5b57\u200b\u8f6c\u200b\u6574\u6570\u200b 14. \u200b\u6700\u957f\u200b\u516c\u5171\u200b\u524d\u7f00\u200b 43. \u200b\u5b57\u7b26\u4e32\u200b\u76f8\u4e58\u200b 50. Pow(x, n) 69. x \u200b\u7684\u200b\u5e73\u65b9\u6839\u200b 204. \u200b\u8ba1\u6570\u200b\u8d28\u6570\u200b 368. \u200b\u6700\u5927\u200b\u6574\u9664\u200b\u5b50\u96c6\u200b 598. \u200b\u533a\u95f4\u200b\u52a0\u6cd5\u200b II 781. \u200b\u68ee\u6797\u200b\u4e2d\u200b\u7684\u200b\u5154\u5b50\u200b 1006. \u200b\u7b28\u200b\u9636\u4e58\u200b 1561. \u200b\u4f60\u200b\u53ef\u4ee5\u200b\u83b7\u5f97\u200b\u7684\u200b\u6700\u5927\u200b\u786c\u5e01\u200b\u6570\u76ee\u200b 1835. \u200b\u6240\u6709\u200b\u6570\u5bf9\u200b\u6309\u4f4d\u200b\u4e0e\u200b\u7ed3\u679c\u200b\u7684\u200b\u5f02\u6216\u200b\u548c\u200b 2266. \u200b\u7edf\u8ba1\u200b\u6253\u5b57\u200b\u65b9\u6848\u200b\u6570\u200b 3270. \u200b\u6c42\u200b\u51fa\u200b\u6570\u5b57\u200b\u7b54\u6848\u200b 3280. \u200b\u5c06\u200b\u65e5\u671f\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u4e8c\u8fdb\u5236\u200b\u8868\u793a"},{"location":"coding/leetcode/tags/#_4","title":"\u52a8\u6001\u200b\u89c4\u5212","text":"<p>\u200b\u52a8\u6001\u200b\u89c4\u5212\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b19\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u52a8\u6001\u200b\u89c4\u5212\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 42. \u200b\u63a5\u200b\u96e8\u6c34\u200b 45. \u200b\u8df3\u8dc3\u200b\u6e38\u620f\u200b II 53. \u200b\u6700\u5927\u200b\u5b50\u5e8f\u200b\u548c\u200b 62. \u200b\u4e0d\u540c\u200b\u8def\u5f84\u200b 64. \u200b\u6700\u5c0f\u200b\u8def\u5f84\u200b\u548c\u200b 70. \u200b\u722c\u697c\u68af\u200b 87. \u200b\u6270\u4e71\u200b\u5b57\u7b26\u4e32\u200b 115. \u200b\u4e0d\u540c\u200b\u7684\u200b\u5b50\u200b\u5e8f\u5217\u200b 120. \u200b\u4e09\u89d2\u5f62\u200b\u6700\u5c0f\u200b\u8def\u5f84\u200b\u548c\u200b 121. \u200b\u4e70\u5356\u200b\u80a1\u7968\u200b\u7684\u200b\u6700\u4f73\u65f6\u673a\u200b 198. \u200b\u6253\u5bb6\u52ab\u820d\u200b 368. \u200b\u6700\u5927\u200b\u6574\u9664\u200b\u5b50\u96c6\u200b 377. \u200b\u7ec4\u5408\u200b\u603b\u548c\u200b \u2163 403. \u200b\u9752\u86d9\u200b\u8fc7\u6cb3\u200b 2218. \u200b\u4ece\u6808\u200b\u4e2d\u200b\u53d6\u51fa\u200b K \u200b\u4e2a\u200b\u786c\u5e01\u200b\u7684\u200b\u6700\u5927\u200b\u9762\u503c\u200b\u548c\u200b 2266. \u200b\u7edf\u8ba1\u200b\u6253\u5b57\u200b\u65b9\u6848\u200b\u6570\u200b 2920. \u200b\u6536\u96c6\u200b\u6240\u6709\u200b\u91d1\u5e01\u200b\u53ef\u200b\u83b7\u5f97\u200b\u7684\u200b\u6700\u5927\u200b\u79ef\u5206\u200b 2944. \u200b\u8d2d\u4e70\u200b\u6c34\u679c\u200b\u9700\u8981\u200b\u7684\u200b\u6700\u5c11\u200b\u91d1\u5e01\u200b\u6570\u200b 3287. \u200b\u6c42\u200b\u51fa\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u6700\u5927\u200b\u5e8f\u5217\u200b\u503c"},{"location":"coding/leetcode/tags/#_5","title":"\u54c8\u5e0c\u200b\u8868","text":"<p>\u200b\u54c8\u5e0c\u200b\u8868\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b17\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u54c8\u5e0c\u200b\u8868\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 1. \u200b\u4e24\u6570\u200b\u4e4b\u200b\u548c\u200b 3. \u200b\u65e0\u200b\u91cd\u590d\u200b\u5b57\u7b26\u200b\u7684\u200b\u6700\u957f\u200b\u5b50\u4e32\u200b 36. \u200b\u6709\u6548\u200b\u7684\u200b\u6570\u72ec\u200b 37. \u200b\u89e3\u6570\u200b\u72ec\u200b 136. \u200b\u53ea\u200b\u51fa\u73b0\u200b\u4e00\u6b21\u200b\u7684\u200b\u6570\u5b57\u200b 204. \u200b\u8ba1\u6570\u200b\u8d28\u6570\u200b 217. \u200b\u5b58\u5728\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b 219. \u200b\u5b58\u5728\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b II 242. \u200b\u6709\u6548\u200b\u7684\u200b\u5b57\u6bcd\u200b\u5f02\u4f4d\u200b\u8bcd\u200b 350. \u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\u7684\u200b\u4ea4\u96c6\u200b II 387. \u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u552f\u4e00\u200b\u5b57\u7b26\u200b 433. \u200b\u6700\u5c0f\u200b\u57fa\u56e0\u200b\u53d8\u5316\u200b 781. \u200b\u68ee\u6797\u200b\u4e2d\u200b\u7684\u200b\u5154\u5b50\u200b 2266. \u200b\u7edf\u8ba1\u200b\u6253\u5b57\u200b\u65b9\u6848\u200b\u6570\u200b 2275. \u200b\u6309\u4f4d\u200b\u4e0e\u200b\u7ed3\u679c\u200b\u5927\u4e8e\u200b\u96f6\u200b\u7684\u200b\u6700\u957f\u200b\u7ec4\u200b 3297. \u200b\u7edf\u8ba1\u200b\u91cd\u65b0\u6392\u5217\u200b\u540e\u200b\u5305\u542b\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u6570\u76ee\u200b I 3298. \u200b\u7edf\u8ba1\u200b\u91cd\u65b0\u6392\u5217\u200b\u540e\u200b\u5305\u542b\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u6570\u76ee\u200b II"},{"location":"coding/leetcode/tags/#_6","title":"\u53cc\u200b\u6307\u9488","text":"<p>\u200b\u53cc\u200b\u6307\u9488\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b17\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u53cc\u200b\u6307\u9488\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 3. \u200b\u65e0\u200b\u91cd\u590d\u200b\u5b57\u7b26\u200b\u7684\u200b\u6700\u957f\u200b\u5b50\u4e32\u200b 11. \u200b\u76db\u200b\u6700\u591a\u6c34\u200b\u7684\u200b\u5bb9\u5668\u200b 19. \u200b\u5220\u9664\u200b\u94fe\u8868\u200b\u7684\u200b\u5012\u6570\u7b2c\u200bN\u200b\u4e2a\u200b\u8282\u70b9\u200b 26. \u200b\u5220\u9664\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u91cd\u590d\u200b\u9879\u200b 27. \u200b\u79fb\u9664\u200b\u5143\u7d20\u200b 28. \u200b\u5b9e\u73b0\u200b strStr() 42. \u200b\u63a5\u200b\u96e8\u6c34\u200b 61. \u200b\u65cb\u8f6c\u200b\u94fe\u8868\u200b 75. \u200b\u989c\u8272\u200b\u5206\u7c7b\u200b 88. \u200b\u5408\u5e76\u200b\u4e24\u4e2a\u200b\u6709\u5e8f\u200b\u6570\u7ec4\u200b 125. \u200b\u9a8c\u8bc1\u200b\u56de\u6587\u200b\u4e32\u200b 234. \u200b\u56de\u6587\u200b\u94fe\u8868\u200b 344. \u200b\u53cd\u8f6c\u200b\u5b57\u7b26\u4e32\u200b 350. \u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\u7684\u200b\u4ea4\u96c6\u200b II 541. \u200b\u53cd\u8f6c\u200b\u5b57\u7b26\u4e32\u200b II 680. \u200b\u9a8c\u8bc1\u200b\u56de\u6587\u200b\u4e32\u200b II 922. \u200b\u6309\u200b\u5947\u5076\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b II"},{"location":"coding/leetcode/tags/#_7","title":"\u4e8c\u5206\u200b\u67e5\u627e","text":"<p>\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b14\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 33. \u200b\u641c\u7d22\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b 35. \u200b\u641c\u7d22\u200b\u63d2\u5165\u200b\u4f4d\u7f6e\u200b 50. Pow(x, n) 69. x \u200b\u7684\u200b\u5e73\u65b9\u6839\u200b 74. \u200b\u641c\u7d22\u200b\u4e8c\u7ef4\u200b\u77e9\u9635\u200b 81. \u200b\u641c\u7d22\u200b\u65cb\u8f6c\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b II 315. \u200b\u8ba1\u7b97\u200b\u53f3\u4fa7\u200b\u5c0f\u4e8e\u200b\u5f53\u524d\u200b\u5143\u7d20\u200b\u7684\u200b\u4e2a\u6570\u200b 350. \u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\u7684\u200b\u4ea4\u96c6\u200b II 729. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b I 731. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b II 732. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b III 1011. \u200b\u5728\u200b D \u200b\u5929\u200b\u5185\u200b\u9001\u8fbe\u200b\u5305\u88f9\u200b\u7684\u200b\u80fd\u529b\u200b 1283. \u200b\u4f7f\u200b\u7ed3\u679c\u200b\u4e0d\u200b\u8d85\u8fc7\u200b\u9608\u503c\u200b\u7684\u200b\u6700\u5c0f\u200b\u9664\u6570\u200b 1300. \u200b\u8f6c\u53d8\u200b\u6570\u7ec4\u200b\u540e\u200b\u6700\u200b\u63a5\u8fd1\u200b\u76ee\u6807\u503c\u200b\u7684\u200b\u6570\u7ec4\u200b\u548c"},{"location":"coding/leetcode/tags/#_8","title":"\u94fe\u8868","text":"<p>\u200b\u94fe\u8868\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b11\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u94fe\u8868\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 2. \u200b\u4e24\u200b\u6570\u200b\u76f8\u52a0\u200b 19. \u200b\u5220\u9664\u200b\u94fe\u8868\u200b\u7684\u200b\u5012\u6570\u7b2c\u200bN\u200b\u4e2a\u200b\u8282\u70b9\u200b 21. \u200b\u5408\u5e76\u200b\u4e24\u4e2a\u200b\u6709\u5e8f\u200b\u94fe\u8868\u200b 23. \u200b\u5408\u5e76\u200bK\u200b\u4e2a\u200b\u5347\u5e8f\u200b\u94fe\u8868\u200b 24. \u200b\u4e24\u200b\u4e24\u200b\u4ea4\u6362\u200b\u94fe\u8868\u200b\u4e2d\u200b\u7684\u200b\u8282\u70b9\u200b 25. K \u200b\u4e2a\u200b\u4e00\u7ec4\u200b\u7ffb\u8f6c\u200b\u94fe\u8868\u200b 61. \u200b\u65cb\u8f6c\u200b\u94fe\u8868\u200b 92. \u200b\u53cd\u8f6c\u200b\u94fe\u8868\u200b II 206. \u200b\u53cd\u8f6c\u200b\u94fe\u8868\u200b 234. \u200b\u56de\u6587\u200b\u94fe\u8868\u200b 237. \u200b\u5220\u9664\u200b\u94fe\u8868\u200b\u4e2d\u200b\u7684\u200b\u8282\u70b9"},{"location":"coding/leetcode/tags/#_9","title":"\u6392\u5e8f","text":"<p>\u200b\u6392\u5e8f\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b10\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u6392\u5e8f\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 47. \u200b\u5168\u200b\u6392\u5217\u200b II 56. \u200b\u5408\u5e76\u200b\u533a\u95f4\u200b 75. \u200b\u989c\u8272\u200b\u5206\u7c7b\u200b 242. \u200b\u6709\u6548\u200b\u7684\u200b\u5b57\u6bcd\u200b\u5f02\u4f4d\u200b\u8bcd\u200b 315. \u200b\u8ba1\u7b97\u200b\u53f3\u4fa7\u200b\u5c0f\u4e8e\u200b\u5f53\u524d\u200b\u5143\u7d20\u200b\u7684\u200b\u4e2a\u6570\u200b 350. \u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\u7684\u200b\u4ea4\u96c6\u200b II 922. \u200b\u6309\u200b\u5947\u5076\u200b\u6392\u5e8f\u200b\u6570\u7ec4\u200b II 1561. \u200b\u4f60\u200b\u53ef\u4ee5\u200b\u83b7\u5f97\u200b\u7684\u200b\u6700\u5927\u200b\u786c\u5e01\u200b\u6570\u76ee\u200b 2274. \u200b\u4e0d\u200b\u542b\u200b\u7279\u6b8a\u200b\u697c\u5c42\u200b\u7684\u200b\u6700\u5927\u200b\u8fde\u7eed\u200b\u697c\u5c42\u200b\u6570\u200b 2412. \u200b\u5b8c\u6210\u200b\u6240\u6709\u200b\u4ea4\u6613\u200b\u7684\u200b\u521d\u59cb\u200b\u6700\u5c11\u200b\u94b1\u6570"},{"location":"coding/leetcode/tags/#_10","title":"\u4f4d\u200b\u8fd0\u7b97","text":"<p>\u200b\u4f4d\u200b\u8fd0\u7b97\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b7\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u4f4d\u200b\u8fd0\u7b97\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 78. \u200b\u5b50\u96c6\u200b 136. \u200b\u53ea\u200b\u51fa\u73b0\u200b\u4e00\u6b21\u200b\u7684\u200b\u6570\u5b57\u200b 2275. \u200b\u6309\u4f4d\u200b\u4e0e\u200b\u7ed3\u679c\u200b\u5927\u4e8e\u200b\u96f6\u200b\u7684\u200b\u6700\u957f\u200b\u7ec4\u200b 2920. \u200b\u6536\u96c6\u200b\u6240\u6709\u200b\u91d1\u5e01\u200b\u53ef\u200b\u83b7\u5f97\u200b\u7684\u200b\u6700\u5927\u200b\u79ef\u5206\u200b 3095. \u200b\u6216\u503c\u200b\u81f3\u5c11\u200b K \u200b\u7684\u200b\u6700\u200b\u77ed\u5b50\u200b\u6570\u7ec4\u200b I 3097. \u200b\u6216\u503c\u200b\u81f3\u5c11\u200b K \u200b\u7684\u200b\u6700\u200b\u77ed\u5b50\u200b\u6570\u7ec4\u200b II 3287. \u200b\u6c42\u200b\u51fa\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u6700\u5927\u200b\u5e8f\u5217\u200b\u503c"},{"location":"coding/leetcode/tags/#_11","title":"\u8bbe\u8ba1","text":"<p>\u200b\u8bbe\u8ba1\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b7\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u8bbe\u8ba1\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 155. \u200b\u6700\u5c0f\u200b\u6808\u200b 341. \u200b\u6241\u5e73\u5316\u200b\u5d4c\u5957\u200b\u5217\u8868\u200b\u8fed\u4ee3\u200b\u5668\u200b 729. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b I 731. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b II 732. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b III 1603. \u200b\u8bbe\u8ba1\u200b\u505c\u8f66\u200b\u7cfb\u7edf\u200b 2241. \u200b\u8bbe\u8ba1\u200b\u4e00\u4e2a\u200b ATM \u200b\u673a\u5668"},{"location":"coding/leetcode/tags/#_12","title":"\u9012\u5f52","text":"<p>\u200b\u9012\u5f52\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b6\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u9012\u5f52\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 2. \u200b\u4e24\u200b\u6570\u200b\u76f8\u52a0\u200b 17. \u200b\u7535\u8bdd\u53f7\u7801\u200b\u7684\u200b\u5b57\u6bcd\u7ec4\u5408\u200b 21. \u200b\u5408\u5e76\u200b\u4e24\u4e2a\u200b\u6709\u5e8f\u200b\u94fe\u8868\u200b 24. \u200b\u4e24\u200b\u4e24\u200b\u4ea4\u6362\u200b\u94fe\u8868\u200b\u4e2d\u200b\u7684\u200b\u8282\u70b9\u200b 98. \u200b\u9a8c\u8bc1\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b 779. \u200b\u7b2c\u200bK\u200b\u4e2a\u200b\u8bed\u6cd5\u200b\u7b26\u53f7"},{"location":"coding/leetcode/tags/#_13","title":"\u56de\u6eaf\u200b\u7b97\u6cd5","text":"<p>\u200b\u56de\u6eaf\u200b\u7b97\u6cd5\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b6\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u56de\u6eaf\u200b\u7b97\u6cd5\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 17. \u200b\u7535\u8bdd\u53f7\u7801\u200b\u7684\u200b\u5b57\u6bcd\u7ec4\u5408\u200b 22. \u200b\u62ec\u53f7\u200b\u751f\u6210\u200b 37. \u200b\u89e3\u6570\u200b\u72ec\u200b 78. \u200b\u5b50\u96c6\u200b 79. \u200b\u5355\u8bcd\u200b\u641c\u7d22\u200b 90. \u200b\u5b50\u96c6\u200b II"},{"location":"coding/leetcode/tags/#_14","title":"\u6df1\u5ea6\u200b\u4f18\u5148\u200b\u641c\u7d22","text":"<p>\u200b\u6df1\u5ea6\u200b\u4f18\u5148\u200b\u641c\u7d22\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b5\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u6df1\u5ea6\u200b\u4f18\u5148\u200b\u641c\u7d22\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 17. \u200b\u7535\u8bdd\u53f7\u7801\u200b\u7684\u200b\u5b57\u6bcd\u7ec4\u5408\u200b 98. \u200b\u9a8c\u8bc1\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b 101. \u200b\u5bf9\u79f0\u200b\u4e8c\u53c9\u6811\u200b 488. \u200b\u7956\u739b\u200b\u6e38\u620f\u200b 2920. \u200b\u6536\u96c6\u200b\u6240\u6709\u200b\u91d1\u5e01\u200b\u53ef\u200b\u83b7\u5f97\u200b\u7684\u200b\u6700\u5927\u200b\u79ef\u5206"},{"location":"coding/leetcode/tags/#_15","title":"\u6808","text":"<p>\u200b\u6808\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b5\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u6808\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 20. \u200b\u6709\u6548\u200b\u7684\u200b\u62ec\u53f7\u200b 42. \u200b\u63a5\u200b\u96e8\u6c34\u200b 150. \u200b\u9006\u200b\u6ce2\u5170\u200b\u8868\u8fbe\u5f0f\u200b\u6c42\u503c\u200b 155. \u200b\u6700\u5c0f\u200b\u6808\u200b 341. \u200b\u6241\u5e73\u5316\u200b\u5d4c\u5957\u200b\u5217\u8868\u200b\u8fed\u4ee3\u200b\u5668"},{"location":"coding/leetcode/tags/#_16","title":"\u8d2a\u5fc3","text":"<p>\u200b\u8d2a\u5fc3\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b5\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u8d2a\u5fc3\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 45. \u200b\u8df3\u8dc3\u200b\u6e38\u620f\u200b II 680. \u200b\u9a8c\u8bc1\u200b\u56de\u6587\u200b\u4e32\u200b II 1561. \u200b\u4f60\u200b\u53ef\u4ee5\u200b\u83b7\u5f97\u200b\u7684\u200b\u6700\u5927\u200b\u786c\u5e01\u200b\u6570\u76ee\u200b 2241. \u200b\u8bbe\u8ba1\u200b\u4e00\u4e2a\u200b ATM \u200b\u673a\u5668\u200b 2412. \u200b\u5b8c\u6210\u200b\u6240\u6709\u200b\u4ea4\u6613\u200b\u7684\u200b\u521d\u59cb\u200b\u6700\u5c11\u200b\u94b1\u6570"},{"location":"coding/leetcode/tags/#_17","title":"\u6ed1\u52a8\u200b\u7a97\u53e3","text":"<p>\u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b5\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 219. \u200b\u5b58\u5728\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b II 3095. \u200b\u6216\u503c\u200b\u81f3\u5c11\u200b K \u200b\u7684\u200b\u6700\u200b\u77ed\u5b50\u200b\u6570\u7ec4\u200b I 3097. \u200b\u6216\u503c\u200b\u81f3\u5c11\u200b K \u200b\u7684\u200b\u6700\u200b\u77ed\u5b50\u200b\u6570\u7ec4\u200b II 3297. \u200b\u7edf\u8ba1\u200b\u91cd\u65b0\u6392\u5217\u200b\u540e\u200b\u5305\u542b\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u6570\u76ee\u200b I 3298. \u200b\u7edf\u8ba1\u200b\u91cd\u65b0\u6392\u5217\u200b\u540e\u200b\u5305\u542b\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b\u6570\u76ee\u200b II"},{"location":"coding/leetcode/tags/#_18","title":"\u6811","text":"<p>\u200b\u6811\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b4\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u6811\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 98. \u200b\u9a8c\u8bc1\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b 101. \u200b\u5bf9\u79f0\u200b\u4e8c\u53c9\u6811\u200b 102. \u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u5c42\u5e8f\u200b\u904d\u5386\u200b 2920. \u200b\u6536\u96c6\u200b\u6240\u6709\u200b\u91d1\u5e01\u200b\u53ef\u200b\u83b7\u5f97\u200b\u7684\u200b\u6700\u5927\u200b\u79ef\u5206"},{"location":"coding/leetcode/tags/#_19","title":"\u7ebf\u6bb5\u200b\u6811","text":"<p>\u200b\u7ebf\u6bb5\u200b\u6811\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b4\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u7ebf\u6bb5\u200b\u6811\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 315. \u200b\u8ba1\u7b97\u200b\u53f3\u4fa7\u200b\u5c0f\u4e8e\u200b\u5f53\u524d\u200b\u5143\u7d20\u200b\u7684\u200b\u4e2a\u6570\u200b 729. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b I 731. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b II 732. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b III"},{"location":"coding/leetcode/tags/#_20","title":"\u5e7f\u5ea6\u200b\u4f18\u5148\u200b\u641c\u7d22","text":"<p>\u200b\u5e7f\u5ea6\u200b\u4f18\u5148\u200b\u641c\u7d22\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b3\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u5e7f\u5ea6\u200b\u4f18\u5148\u200b\u641c\u7d22\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 101. \u200b\u5bf9\u79f0\u200b\u4e8c\u53c9\u6811\u200b 102. \u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u5c42\u5e8f\u200b\u904d\u5386\u200b 433. \u200b\u6700\u5c0f\u200b\u57fa\u56e0\u200b\u53d8\u5316"},{"location":"coding/leetcode/tags/#_21","title":"\u5206\u6cbb\u200b\u7b97\u6cd5","text":"<p>\u200b\u5206\u6cbb\u200b\u7b97\u6cd5\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b3\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u5206\u6cbb\u200b\u7b97\u6cd5\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 23. \u200b\u5408\u5e76\u200bK\u200b\u4e2a\u200b\u5347\u5e8f\u200b\u94fe\u8868\u200b 53. \u200b\u6700\u5927\u200b\u5b50\u5e8f\u200b\u548c\u200b 315. \u200b\u8ba1\u7b97\u200b\u53f3\u4fa7\u200b\u5c0f\u4e8e\u200b\u5f53\u524d\u200b\u5143\u7d20\u200b\u7684\u200b\u4e2a\u6570"},{"location":"coding/leetcode/tags/#_22","title":"\u56de\u6eaf","text":"<p>\u200b\u56de\u6eaf\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b3\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u56de\u6eaf\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 40. \u200b\u7ec4\u5408\u200b\u603b\u548c\u200b II 46. \u200b\u5168\u200b\u6392\u5217\u200b 47. \u200b\u5168\u200b\u6392\u5217\u200b II"},{"location":"coding/leetcode/tags/#_23","title":"\u6709\u5e8f\u200b\u96c6\u5408","text":"<p>\u200b\u6709\u5e8f\u200b\u96c6\u5408\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b3\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u6709\u5e8f\u200b\u96c6\u5408\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 729. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b I 731. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b II 732. \u200b\u6211\u200b\u7684\u200b\u65e5\u7a0b\u5b89\u6392\u200b\u8868\u200b III"},{"location":"coding/leetcode/tags/#_24","title":"\u8d2a\u5fc3\u200b\u7b97\u6cd5","text":"<p>\u200b\u8d2a\u5fc3\u200b\u7b97\u6cd5\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b2\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u8d2a\u5fc3\u200b\u7b97\u6cd5\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 55. \u200b\u8df3\u8dc3\u200b\u6e38\u620f\u200b 122. \u200b\u4e70\u5356\u200b\u80a1\u7968\u200b\u7684\u200b\u6700\u4f73\u65f6\u673a\u200b II"},{"location":"coding/leetcode/tags/#_25","title":"\u524d\u7f00\u200b\u548c","text":"<p>\u200b\u524d\u7f00\u200b\u548c\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b2\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u524d\u7f00\u200b\u548c\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 2218. \u200b\u4ece\u6808\u200b\u4e2d\u200b\u53d6\u51fa\u200b K \u200b\u4e2a\u200b\u786c\u5e01\u200b\u7684\u200b\u6700\u5927\u200b\u9762\u503c\u200b\u548c\u200b 2270. \u200b\u5206\u5272\u200b\u6570\u7ec4\u200b\u7684\u200b\u65b9\u6848\u200b\u6570"},{"location":"coding/leetcode/tags/#_26","title":"\u5806\u200b\uff08\u200b\u4f18\u5148\u200b\u961f\u5217\u200b\uff09","text":"<p>\u200b\u5806\u200b\uff08\u200b\u4f18\u5148\u200b\u961f\u5217\u200b\uff09\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b2\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u5806\u200b\uff08\u200b\u4f18\u5148\u200b\u961f\u5217\u200b\uff09 \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 2944. \u200b\u8d2d\u4e70\u200b\u6c34\u679c\u200b\u9700\u8981\u200b\u7684\u200b\u6700\u5c11\u200b\u91d1\u5e01\u200b\u6570\u200b 3066. \u200b\u8d85\u8fc7\u200b\u9608\u503c\u200b\u7684\u200b\u6700\u5c11\u200b\u64cd\u4f5c\u6570\u200b II"},{"location":"coding/leetcode/tags/#_27","title":"\u535a\u5f08","text":"<p>\u200b\u535a\u5f08\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b1\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u535a\u5f08\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 1561. \u200b\u4f60\u200b\u53ef\u4ee5\u200b\u83b7\u5f97\u200b\u7684\u200b\u6700\u5927\u200b\u786c\u5e01\u200b\u6570\u76ee"},{"location":"coding/leetcode/tags/#_28","title":"\u8ba1\u6570","text":"<p>\u200b\u8ba1\u6570\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b1\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u8ba1\u6570\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 2275. \u200b\u6309\u4f4d\u200b\u4e0e\u200b\u7ed3\u679c\u200b\u5927\u4e8e\u200b\u96f6\u200b\u7684\u200b\u6700\u957f\u200b\u7ec4"},{"location":"coding/leetcode/tags/#_29","title":"\u5806","text":"<p>\u200b\u5806\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b1\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u5806\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 23. \u200b\u5408\u5e76\u200bK\u200b\u4e2a\u200b\u5347\u5e8f\u200b\u94fe\u8868"},{"location":"coding/leetcode/tags/#_30","title":"\u961f\u5217","text":"<p>\u200b\u961f\u5217\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b1\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u961f\u5217\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 2944. \u200b\u8d2d\u4e70\u200b\u6c34\u679c\u200b\u9700\u8981\u200b\u7684\u200b\u6700\u5c11\u200b\u91d1\u5e01\u200b\u6570"},{"location":"coding/leetcode/tags/#_31","title":"\u5355\u8c03\u200b\u961f\u5217","text":"<p>\u200b\u5355\u8c03\u200b\u961f\u5217\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b1\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u5355\u8c03\u200b\u961f\u5217\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 2944. \u200b\u8d2d\u4e70\u200b\u6c34\u679c\u200b\u9700\u8981\u200b\u7684\u200b\u6700\u5c11\u200b\u91d1\u5e01\u200b\u6570"},{"location":"coding/leetcode/tags/#sliding-window","title":"Sliding Window","text":"<p>Sliding Window\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b1\u200b\u9053\u200b\u9898\u76ee\u200b</p> Sliding Window \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 3. \u200b\u65e0\u200b\u91cd\u590d\u200b\u5b57\u7b26\u200b\u7684\u200b\u6700\u957f\u200b\u5b50\u4e32"},{"location":"coding/leetcode/tags/#_32","title":"\u6a21\u62df","text":"<p>\u200b\u6a21\u62df\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b1\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u6a21\u62df\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 3066. \u200b\u8d85\u8fc7\u200b\u9608\u503c\u200b\u7684\u200b\u6700\u5c11\u200b\u64cd\u4f5c\u6570\u200b II"},{"location":"coding/leetcode/tags/#_33","title":"\u6811\u72b6\u200b\u6570\u7ec4","text":"<p>\u200b\u6811\u72b6\u200b\u6570\u7ec4\u200b\u6807\u7b7e\u200b\u4e0b\u200b\u5171\u6709\u200b1\u200b\u9053\u200b\u9898\u76ee\u200b</p> \u200b\u6811\u72b6\u200b\u6570\u7ec4\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b \u200b\u9898\u76ee\u200b 315. \u200b\u8ba1\u7b97\u200b\u53f3\u4fa7\u200b\u5c0f\u4e8e\u200b\u5f53\u524d\u200b\u5143\u7d20\u200b\u7684\u200b\u4e2a\u6570"},{"location":"coding/machine-learning/","title":"Machine Learning Glossary","text":""},{"location":"coding/machine-learning/#a","title":"A","text":""},{"location":"coding/machine-learning/#ablation","title":"Ablation","text":"<p>\u200b\u6d88\u878d\u200b\u5b9e\u9a8c\u200b\uff08Ablation Study\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u901a\u8fc7\u200b\u9010\u6b65\u200b\u5254\u9664\u200b\u6a21\u578b\u200b\u7684\u200b\u67d0\u4e9b\u200b\u7ec4\u4ef6\u200b\uff0c\u200b\u6765\u200b\u8bc4\u4f30\u200b\u7ec4\u4ef6\u200b\u5bf9\u6a21\u578b\u200b\u6027\u80fd\u200b\u7684\u200b\u5f71\u54cd\u200b\u7684\u200b\u5b9e\u9a8c\u200b\u3002\u200b\u6d88\u878d\u200b\u5b9e\u9a8c\u200b\u5e38\u7528\u200b\u4e8e\u200b\u8bc4\u4f30\u200b\u6a21\u578b\u200b\u7684\u200b\u53ef\u200b\u89e3\u91ca\u6027\u200b\uff0c\u200b\u6216\u8005\u200b\u9a8c\u8bc1\u200b\u6a21\u578b\u200b\u7684\u200b\u67d0\u4e9b\u200b\u7ec4\u4ef6\u200b\u5bf9\u6a21\u578b\u200b\u6027\u80fd\u200b\u7684\u200b\u8d21\u732e\u200b\u3002</p>"},{"location":"coding/machine-learning/#ab-test","title":"A/B Test","text":"<p>A/B\u200b\u6d4b\u8bd5\u200b\uff08A/B Test\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u901a\u8fc7\u200b\u5bf9\u6bd4\u200b\u4e24\u4e2a\u200b\u6216\u200b\u591a\u4e2a\u200b\u7248\u672c\u200b\u7684\u200b\u5b9e\u9a8c\u200b\uff0c\u200b\u6765\u200b\u8bc4\u4f30\u200b\u4e0d\u540c\u200b\u7248\u672c\u200b\u7684\u200b\u6548\u679c\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002A/B\u200b\u6d4b\u8bd5\u901a\u8fc7\u200b\u63a7\u5236\u53d8\u91cf\u200b\uff0c\u200b\u968f\u673a\u200b\u5206\u914d\u200b\u5b9e\u9a8c\u200b\u5bf9\u8c61\u200b\u63a5\u53d7\u200b\u4e0d\u540c\u200b\u7684\u200b\u7248\u672c\u200b\uff0c\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b\u5047\u8bbe\u68c0\u9a8c\u200b\u7684\u200b\u65b9\u6cd5\u200b\u6765\u200b\u8bc4\u4f30\u200b\u4e0d\u540c\u200b\u7248\u672c\u200b\u7684\u200b\u6548\u679c\u200b\u3002\u200b\u5e38\u7528\u200b\u7684\u200b\u5047\u8bbe\u68c0\u9a8c\u200b\u65b9\u6cd5\u200b\u6709\u200bZ\u200b\u68c0\u9a8c\u200b\u3001T\u200b\u68c0\u9a8c\u200b\u3001\u200b\u5361\u65b9\u200b\u68c0\u9a8c\u200b\u7b49\u200b\u3002</p>"},{"location":"coding/machine-learning/#activation-function","title":"Activation Function","text":"<p>\u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b\uff08Activation Function\uff09\u200b\u662f\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u4e2d\u200b\u7528\u4e8e\u200b\u5f15\u5165\u200b\u975e\u7ebf\u6027\u200b\u56e0\u7d20\u200b\u7684\u200b\u51fd\u6570\u200b\u3002\u200b\u5e38\u7528\u200b\u7684\u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b\u4e3a\u200bsigmoid\u3001ReLU\u200b\u7b49\u200b\u3002</p> <p>softmax\u200b\u4e25\u683c\u200b\u610f\u4e49\u200b\u4e0a\u200b\u4e5f\u200b\u7b97\u4f5c\u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b\uff0c\u200b\u4f46\u200b\u5b83\u200b\u5e38\u7528\u200b\u4e8e\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u7684\u200b\u8f93\u51fa\u200b\u5c42\u200b\uff0c\u200b\u5c06\u200b\u8f93\u51fa\u200b\u503c\u200b\u6620\u5c04\u200b\u5230\u200b\u6982\u7387\u200b\u7a7a\u95f4\u200b\u3002</p>"},{"location":"coding/machine-learning/#action","title":"Action","text":""},{"location":"coding/machine-learning/#active-learning","title":"Active Learning","text":"<p>\u200b\u4e3b\u52a8\u200b\u5b66\u4e60\u200b\uff08Active Learning\uff09\u200b\u662f\u200b\u4e00\u7c7b\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u8303\u5f0f\u200b\u3002\u200b\u4e3b\u52a8\u200b\u5b66\u4e60\u200b\u9996\u5148\u200b\u5728\u200b\u4e00\u4e2a\u200b\u5c0f\u89c4\u6a21\u200b\u7684\u200b\u6807\u6ce8\u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\uff0c\u200b\u968f\u540e\u200b\u8981\u6c42\u200b\u6a21\u578b\u200b\u4ece\u672a\u200b\u6807\u6ce8\u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u81ea\u4e3b\u200b\u9009\u62e9\u200b\u5bf9\u200b\u63d0\u5347\u200b\u6027\u80fd\u200b\u6700\u6709\u200b\u4ef7\u503c\u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u4ea4\u7531\u200b\u4e13\u5bb6\u200b\u6807\u6ce8\u200b\uff0c\u200b\u4ee5\u200b\u63d0\u5347\u200b\u6a21\u578b\u200b\u5bf9\u200b\u6570\u636e\u200b\u7684\u200b\u4f7f\u7528\u200b\u6548\u7387\u200b\u3002\u200b\u4e3b\u52a8\u200b\u5b66\u4e60\u200b\u9002\u5408\u200b\u4e8e\u200b\u6807\u6ce8\u200b\u6570\u636e\u200b\u6210\u672c\u200b\u8f83\u200b\u9ad8\u200b\uff0c\u200b\u6216\u662f\u200b\u6709\u200b\u5927\u91cf\u200b\u672a\u200b\u6807\u6ce8\u200b\u6570\u636e\u200b\uff0c\u200b\u6216\u662f\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u6807\u7b7e\u200b\u5206\u5e03\u200b\u4e0d\u200b\u5747\u5300\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002\u200b\u4f46\u200b\u7531\u4e8e\u200b\u4e3b\u52a8\u200b\u5b66\u4e60\u200b\u4f9d\u8d56\u4e8e\u200b\u6a21\u578b\u200b\u9009\u62e9\u200b\u6807\u6ce8\u200b\u7684\u200b\u6837\u672c\u200b\u70b9\u200b\uff0c\u200b\u6b21\u4f18\u200b\u7684\u200b\u6837\u672c\u200b\u9009\u62e9\u200b\u7b56\u7565\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5f15\u5165\u200b\u9009\u62e9\u200b\u504f\u5dee\u200b\u3002</p> <p>\u200b\u5e38\u89c1\u200b\u7684\u200b\u6837\u672c\u200b\u9009\u62e9\u200b\u7b56\u7565\u200b\u6709\u200b</p> <ul> <li>\u200b\u4e0d\u786e\u5b9a\u6027\u200b\u91c7\u6837\u200b\uff08Uncertainty Sampling\uff09\uff0c\u200b\u5373\u200b\u9009\u62e9\u200b\u6a21\u578b\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u6700\u200b\u4e0d\u200b\u786e\u5b9a\u200b\u7684\u200b\u6837\u672c\u200b\u8fdb\u884c\u200b\u6807\u6ce8\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8fdb\u4e00\u6b65\u200b\u7ec6\u5206\u200b\u4e3a\u200b\uff1a<ul> <li>\u200b\u6700\u5c0f\u200b\u7f6e\u4fe1\u5ea6\u200b\uff08Least Confidence\uff09\uff0c\u200b\u5373\u200b\u9009\u62e9\u200b\u9884\u6d4b\u200b\u6982\u7387\u200b\u4e2d\u200b\u6700\u9ad8\u200b\u6982\u7387\u200b\u6700\u5c0f\u200b\u7684\u200b\u6837\u672c\u200b</li> <li>\u200b\u8fb9\u7f18\u200b\u91c7\u6837\u200b\uff08Margin Sampling\uff09\uff0c\u200b\u5373\u200b\u9009\u62e9\u200b\u9884\u6d4b\u200b\u6982\u7387\u200b\u4e2d\u200b\u6700\u9ad8\u200b\u6982\u7387\u200b\u548c\u200b\u6b21\u200b\u9ad8\u200b\u6982\u7387\u200b\u5dee\u200b\u6700\u5c0f\u200b\u7684\u200b\u6837\u672c\u200b\uff08\u200b\u63a5\u8fd1\u200b\u51b3\u7b56\u200b\u8fb9\u7f18\u200b\uff09</li> <li>\u200b\u71b5\u200b\u91c7\u6837\u200b\uff08Entropy Sampling\uff09\uff0c\u200b\u5373\u200b\u9009\u62e9\u200b\u9884\u6d4b\u200b\u6982\u7387\u5206\u5e03\u200b\u71b5\u200b\u6700\u5927\u200b\u7684\u200b\u6837\u672c\u200b</li> </ul> </li> <li>\u200b\u9884\u671f\u200b\u6a21\u578b\u200b\u53d8\u5316\u200b\uff08Expected Model Change\uff09\uff0c\u200b\u5373\u200b\u9009\u62e9\u200b\u5bf9\u6a21\u578b\u200b\u5f71\u54cd\u200b\u6700\u5927\u200b\u7684\u200b\u6837\u672c\u200b</li> <li>\u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b\uff08Information Gain\uff09\uff0c\u200b\u5373\u200b\u9009\u62e9\u200b\u6700\u5927\u5316\u200b\u6a21\u578b\u200b\u53c2\u6570\u4fe1\u606f\u200b\u589e\u76ca\u200b\u7684\u200b\u6837\u672c\u200b</li> </ul>"},{"location":"coding/machine-learning/#actor-critic","title":"Actor-Critic","text":""},{"location":"coding/machine-learning/#adam","title":"Adam","text":""},{"location":"coding/machine-learning/#adaptor-tuning","title":"Adaptor Tuning","text":""},{"location":"coding/machine-learning/#advantage","title":"Advantage","text":""},{"location":"coding/machine-learning/#adversarial-examples","title":"Adversarial Examples","text":""},{"location":"coding/machine-learning/#adversarial-training","title":"Adversarial Training","text":""},{"location":"coding/machine-learning/#agent-llm","title":"Agent (LLM)","text":""},{"location":"coding/machine-learning/#agent-rl","title":"Agent (RL)","text":""},{"location":"coding/machine-learning/#alignment","title":"Alignment","text":""},{"location":"coding/machine-learning/#attention","title":"Attention","text":"<p>\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\uff08Attention Mechanism\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u5e8f\u5217\u200b\u5efa\u6a21\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u7531\u200bVaswani\u200b\u7b49\u200b\u4eba\u200b\u63d0\u51fa\u200b<sup>5</sup>\u3002\u200b\u9996\u5148\u200b\uff0c\u200b\u5e8f\u5217\u200b\u88ab\u200b\u5efa\u6a21\u200b\u6210\u200b\u67e5\u8be2\u200b\uff08Query\uff09\u3001\u200b\u952e\u200b\uff08Key\uff09\u200b\u548c\u200b\u503c\u200b\uff08Key\uff09\u200b\u4e09\u79cd\u200b\u8868\u793a\u200b\u3002\u200b\u901a\u8fc7\u200b\u67e5\u8be2\u200b\u3001\u200b\u952e\u200b\u7684\u200b\u5339\u914d\u200b\u5f97\u5206\u200b\uff0c\u200b\u901a\u8fc7\u200bsoftmax\u200b\u4e3a\u503c\u200b\u5206\u914d\u200b\u6743\u91cd\u200b\uff0c\u200b\u4ece\u800c\u200b\u5b9e\u73b0\u200b\u5bf9\u200b\u5e8f\u5217\u200b\u7684\u200b\u5efa\u6a21\u200b\u3002\u200b\u5176\u200b\u6570\u5b66\u200b\u8868\u8fbe\u200b\u4e3a\u200b\uff1a</p> \\[ \\text{Attention}(Q, K, V) = \\text{softmax}\\left(\\frac{\\bsQ\\bsK^\\top}{\\sqrt{d_k}}\\right)\\bsV \\]"},{"location":"coding/machine-learning/#attention-mask","title":"Attention Mask","text":""},{"location":"coding/machine-learning/#auc","title":"AUC","text":"<p>Area Under Curve (AUC)\u200b\u6307\u200bROC\u200b\u66f2\u7ebf\u200b\u4e0b\u200b\u7684\u200b\u9762\u79ef\u200b\uff0c\u200b\u662f\u200b\u4e00\u7c7b\u200b\u7528\u4e8e\u200b\u8bc4\u4f30\u200b\u4e8c\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\u7684\u200b\u8bc4\u4ef7\u200b\u6307\u6807\u200b\uff0c\u200b\u5176\u200b\u4e3b\u8981\u200b\u8861\u91cf\u200b\u6a21\u578b\u200b\u533a\u5206\u200b\u6b63\u200b\u6837\u672c\u200b\u548c\u200b\u8d1f\u200b\u6837\u672c\u200b\u7684\u200b\u80fd\u529b\u200b\u3002AUC\u200b\u4e0d\u4f1a\u200b\u53d7\u5230\u200b\u6a21\u578b\u200b\u6807\u7b7e\u200b\u4e0d\u200b\u5e73\u8861\u200b\u7684\u200b\u5f71\u54cd\u200b\u3002\u200b\u503c\u4e3a\u200b\\(0.5\\)\u200b\u65f6\u200b\u8bf4\u660e\u200b\u6a21\u578b\u200b\u548c\u200b\u968f\u673a\u200b\u5206\u7c7b\u200b\u76f8\u5f53\u200b\uff0c\u200b\u503c\u4e3a\u200b\\(1\\)\u200b\u65f6\u200b\u8bf4\u660e\u200b\u6a21\u578b\u200b\u80fd\u591f\u200b\u5b8c\u7f8e\u200b\u5206\u7c7b\u200b\u3002</p> <p>\u200b\u53ef\u4ee5\u200b\u904d\u5386\u200b\u6240\u6709\u200b\u7684\u200b\u9884\u6d4b\u200b\u6982\u7387\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u6bcf\u4e2a\u200b\u6982\u7387\u200b\u9608\u503c\u200b\u4e0b\u200b\u7684\u200bTPR\u200b\u548c\u200bFPR\uff0c\u200b\u4f7f\u7528\u200b\u68af\u5f62\u200b\u6cd5\u200b\u8ba1\u7b97\u200b\u66f2\u7ebf\u200b\u4e0b\u200b\u7684\u200b\u9762\u79ef\u200b\u3002</p>"},{"location":"coding/machine-learning/#autoencoder","title":"Autoencoder","text":"<p>\u200b\u81ea\u200b\u7f16\u7801\u5668\u200b\uff08Autoencoder, AE\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u6570\u636e\u538b\u7f29\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u5b83\u200b\u901a\u8fc7\u200b\u7f16\u7801\u5668\u200b\uff08encoder\uff09\u200b\u5c06\u200b\u6570\u636e\u538b\u7f29\u200b\u4e3a\u200b\u66f4\u200b\u4f4e\u200b\u7ef4\u5ea6\u200b\u7684\u200b\u9690\u200b\u5411\u91cf\u200b\u8868\u793a\u200b\uff0c\u200b\u518d\u200b\u5c1d\u8bd5\u200b\u7528\u200b\u89e3\u7801\u5668\u200b\uff08decoder\uff09\u200b\u590d\u539f\u200b\u4e3a\u200b\u539f\u59cb\u200b\u7684\u200b\u6570\u636e\u200b\u8f93\u5165\u200b\u3002\u200b\u6a21\u578b\u200b\u901a\u8fc7\u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b\u6700\u5c0f\u5316\u200b\u4f4e\u7ef4\u9690\u200b\u5411\u91cf\u200b\u91cd\u5efa\u200b\u540e\u200b\u7684\u200b\u6570\u636e\u200b\u548c\u200b\u539f\u200b\u6570\u636e\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5dee\u5f02\u200b\uff0c\u200b\u4ee5\u200b\u4fdd\u8bc1\u200b\u7f16\u7801\u5668\u200b\u751f\u6210\u200b\u7684\u200b\u9690\u200b\u5411\u91cf\u200b\u6709\u200b\u91cd\u5efa\u200b\u539f\u59cb\u6570\u636e\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u5fc5\u8981\u200b\u4fe1\u606f\u200b\u3002</p> <p>\u200b\u76f8\u5173\u200b\u5b9e\u73b0\u200b\uff1a</p> <ul> <li>Autoencoder on MNIST</li> </ul>"},{"location":"coding/machine-learning/#auto-regression","title":"Auto-regression","text":""},{"location":"coding/machine-learning/#b","title":"B","text":""},{"location":"coding/machine-learning/#bag-of-words","title":"Bag-of-Words","text":""},{"location":"coding/machine-learning/#baseline","title":"Baseline","text":"<p>\u200b\u57fa\u7ebf\u200b\uff08Baseline\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u7528\u4e8e\u200b\u8bc4\u4f30\u200b\u6a21\u578b\u200b\u6027\u80fd\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002\u200b\u57fa\u7ebf\u200b\u6a21\u578b\u200b\u901a\u5e38\u200b\u662f\u200b\u4e00\u79cd\u200b\u7b80\u5355\u200b\u7684\u200b\u6a21\u578b\u200b\uff0c\u200b\u7528\u4e8e\u200b\u8bc4\u4f30\u200b\u65b0\u200b\u6a21\u578b\u200b\u7684\u200b\u6027\u80fd\u200b\u662f\u5426\u200b\u4f18\u4e8e\u200b\u57fa\u7ebf\u200b\u6a21\u578b\u200b\u3002\u200b\u57fa\u7ebf\u200b\u6a21\u578b\u200b\u53ef\u4ee5\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200b\u7ebf\u6027\u200b\u6a21\u578b\u200b\u3001\u200b\u968f\u673a\u200b\u6a21\u578b\u200b\uff0c\u200b\u6216\u662f\u200b\u5df2\u6709\u200b\u7684\u200bSOTA\u200b\u6a21\u578b\u200b\u3002</p>"},{"location":"coding/machine-learning/#bayesian-optimization","title":"Bayesian Optimization","text":"<p>\u200b\u8d1d\u53f6\u65af\u200b\u4f18\u5316\u200b\uff08Bayesian Optimization, BO\uff09\u200b\u662f\u200b\u4e00\u7c7b\u200b\u4ec5\u200b\u4f9d\u8d56\u4e8e\u200b\u5bf9\u200b\u51fd\u6570\u200b\u503c\u200b\u7684\u200b\u89c2\u6d4b\u200b\uff0c\u200b\u5bfb\u627e\u200b\u51fd\u6570\u200b\u6700\u503c\u200b\u7684\u200b\u4f18\u5316\u200b\u7b97\u6cd5\u200b\u3002\u200b\u8d1d\u53f6\u65af\u200b\u4f18\u5316\u200b\u7b97\u6cd5\u200b\u7684\u200b\u6838\u5fc3\u200b\u662f\u200b\u901a\u8fc7\u200b\u6709\u9650\u200b\u6b21\u200b\u5bf9\u200b\u51fd\u6570\u200b\u7684\u200b\u89c2\u6d4b\u200b\uff0c\u200b\u5bf9\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u5efa\u7acb\u200b\u6982\u7387\u200b\u4f30\u8ba1\u200b\uff0c\u200b\u901a\u8fc7\u200b\u6b64\u200b\u6982\u7387\u200b\u4f30\u8ba1\u200b\u627e\u5230\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u7528\u4e8e\u200b\u89c2\u6d4b\u200b\u7684\u200b\u70b9\u200b\u3002\u200b\u4f18\u5316\u200b\u7b97\u6cd5\u200b\u901a\u8fc7\u200b\u4e0d\u65ad\u200b\u5c1d\u8bd5\u200b\uff0c\u200b\u501f\u52a9\u200b\u6982\u7387\u200b\u4f30\u8ba1\u200b\u627e\u5230\u200b\u51fd\u6570\u200b\u7684\u200b\u6700\u4f18\u200b\u503c\u200b\u3002\u200b\u8d1d\u53f6\u65af\u200b\u7b97\u6cd5\u200b\u662f\u200b\u4e00\u79cd\u200b\u4e3b\u52a8\u200b\u5b66\u4e60\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u9002\u5408\u200b\u4e8e\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u4e3a\u200b\u9ed1\u76d2\u200b\u4e14\u200b\u8ba1\u7b97\u200b\u590d\u6742\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u5982\u8d85\u200b\u53c2\u6570\u200b\u4f18\u5316\u200b\u3002</p> <p>\u200b\u5e38\u7528\u200b\u7684\u200b\u5bf9\u200b\u51fd\u6570\u200b\u5efa\u6a21\u200b\u7684\u200b\u65b9\u5f0f\u200b\u4e3a\u200b\u9ad8\u65af\u200b\u8fc7\u7a0b\u200b\u3002\u200b\u9ad8\u65af\u200b\u8fc7\u7a0b\u200b\u901a\u8fc7\u200b\u6838\u200b\u51fd\u6570\u200b\uff0c\u200b\u5047\u8bbe\u200b\u4e86\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u7684\u200b\u5f62\u72b6\u200b\u3002</p> <p>\u200b\u76f8\u5173\u200b\u5b9e\u73b0\u200b\uff1a</p> <ul> <li>\u200b\u8d1d\u53f6\u65af\u200b\u4f18\u5316\u200b</li> </ul>"},{"location":"coding/machine-learning/#bayesian-preference-ranking","title":"Bayesian Preference Ranking","text":""},{"location":"coding/machine-learning/#beam-search","title":"Beam Search","text":""},{"location":"coding/machine-learning/#bernoulli-distribution","title":"Bernoulli Distribution","text":"<p>\u200b\u4f2f\u52aa\u5229\u200b\u5206\u5e03\u200b\uff08Bernoulli Distribution\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u53ea\u6709\u200b\u4e24\u79cd\u200b\u7ed3\u679c\u200b\u7684\u200b\u79bb\u6563\u200b\u6982\u7387\u5206\u5e03\u200b\u3002\u200b\u53c2\u6570\u200b\\(p\\)\u200b\u4e3a\u200b\u6210\u529f\u200b\uff08\\(X = 1\\)\uff09\u200b\u7684\u200b\u6982\u7387\u200b\u3002\u200b\u4f2f\u52aa\u5229\u200b\u5206\u5e03\u200b\u7684\u200b\u6982\u7387\u200b\u8d28\u91cf\u200b\u51fd\u6570\u200b\u4e3a\u200b\uff1a</p> \\[ f(X = x\\mid p) = p^x(1 - p)^{1 - x} \\]"},{"location":"coding/machine-learning/#bernoulli-trial","title":"Bernoulli Trial","text":"<p>\u200b\u4f2f\u52aa\u5229\u200b\u8bd5\u9a8c\u200b\uff08Bernoulli Trial\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u53ea\u6709\u200b\u4e24\u79cd\u200b\u7ed3\u679c\u200b\u7684\u200b\u968f\u673a\u200b\u8bd5\u9a8c\u200b\uff0c\u200b\u5982\u200b\u629b\u200b\u786c\u5e01\u200b\u3001\u200b\u63b7\u9ab0\u5b50\u200b\u7b49\u200b\u3002\u200b\u4f2f\u52aa\u5229\u200b\u8bd5\u9a8c\u200b\u7684\u200b\u7279\u70b9\u200b\u662f\u200b\u6bcf\u6b21\u200b\u8bd5\u9a8c\u200b\u7684\u200b\u7ed3\u679c\u200b\u53ea\u6709\u200b\u4e24\u79cd\u200b\u53ef\u80fd\u200b\uff0c\u200b\u6210\u529f\u200b\uff08\u200b\u6982\u7387\u200b\u4e3a\u200b\\(p\\)\uff09\u200b\u548c\u200b\u5931\u8d25\u200b\uff08\u200b\u6982\u7387\u200b\u4e3a\u200b\\(1 - p\\)\uff09\uff0c\u200b\u670d\u4ece\u200b\u4f2f\u52aa\u5229\u200b\u5206\u5e03\u200b\\(\\text{Bernoulli}(p)\\)\u3002</p>"},{"location":"coding/machine-learning/#bert","title":"BERT","text":""},{"location":"coding/machine-learning/#beta-distribution","title":"Beta Distribution","text":"<p>Beta\u200b\u5206\u5e03\u200b\uff08Beta Distribution\uff09\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5b9a\u4e49\u200b\u5728\u200b\u533a\u95f4\u200b\\([0, 1]\\)\u200b\u4e0a\u200b\u7684\u200b\u8fde\u7eed\u200b\u6982\u7387\u5206\u5e03\u200b\u3002Beta\u200b\u5206\u5e03\u200b\u7684\u200b\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u200b\u4e3a\u200b\uff1a</p> \\[ f(x\\mid\\alpha, \\beta) = \\frac{x^{\\alpha - 1}(1 - x)^{\\beta - 1}}{B(\\alpha, \\beta)} \\] <p>\u200b\u5176\u4e2d\u200b\uff0c\\(B(\\alpha, \\beta)\\)\u200b\u4e3a\u200bBeta\u200b\u51fd\u6570\u200b\uff0c\\(\\alpha, \\beta\\)\u200b\u4e3a\u200b\u5206\u5e03\u200b\u7684\u200b\u4e24\u4e2a\u200b\u53c2\u6570\u200b\u3002Beta\u200b\u5206\u5e03\u200b\u662f\u200b\u4e8c\u9879\u5206\u5e03\u200b\u7684\u200b\u5171\u8f6d\u200b\u5148\u9a8c\u200b\u3002Beta\u200b\u5206\u5e03\u200b\\(\\calB(\\alpha, \\beta)\\)\u200b\u7684\u200b\u5747\u503c\u200b\u4e3a\u200b\\(\\frac{\\alpha}{\\alpha + \\beta}\\)\uff0c\u200b\u65b9\u5dee\u200b\u4e3a\u200b\\(\\frac{\\alpha\\beta}{(\\alpha + \\beta)^2(\\alpha + \\beta + 1)}\\)\u3002Beta\u200b\u5206\u5e03\u200b\u63cf\u8ff0\u200b\u4e86\u200b\u5728\u200b\u535a\u52aa\u5229\u200b\u8bd5\u9a8c\u200b\u8bd5\u9a8c\u200b\u4e2d\u200b\uff0c\u200b\u89c2\u6d4b\u200b\u5230\u200b\\(\\alpha - 1\\)\u200b\u6b21\u200b\u6210\u529f\u200b\u548c\u200b\\(\\beta - 1\\)\u200b\u6b21\u200b\u5931\u8d25\u200b\u540e\u200b\uff0c\u200b\u6210\u529f\u200b\u6982\u7387\u200b\\(p\\)\u200b\u7684\u200b\u5206\u5e03\u200b\u3002</p>"},{"location":"coding/machine-learning/#bias-parameter","title":"Bias (Parameter)","text":""},{"location":"coding/machine-learning/#bias-variance-trade-off","title":"Bias-Variance Trade-off","text":""},{"location":"coding/machine-learning/#bilingual-evaluation-understudy","title":"Bilingual Evaluation Understudy","text":""},{"location":"coding/machine-learning/#bootstrap","title":"Bootstrap","text":""},{"location":"coding/machine-learning/#box-muller-transform","title":"Box-Muller Transform","text":"<p>Box-Muller\u200b\u53d8\u6362\u200b\uff08Box-Muller Transform\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u751f\u6210\u200b\u670d\u4ece\u200b\u6807\u51c6\u200b\u6b63\u6001\u5206\u5e03\u200b\u7684\u200b\u968f\u673a\u53d8\u91cf\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002\u200b\u5728\u200b\u4f7f\u7528\u200b\u9006\u53d8\u6362\u200b\u91c7\u6837\u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u4fdd\u8bc1\u200b\u76ee\u6807\u200b\u5206\u5e03\u200b\u7684\u200b\u7d2f\u79ef\u200b\u5206\u5e03\u200b\u7684\u200b\u9006\u51fd\u6570\u200b\u662f\u200b\u521d\u7b49\u200b\u7684\u200b\u3002\u200b\u4f46\u200b\u5bf9\u4e8e\u200b\u6b63\u6001\u5206\u5e03\u200b\u800c\u8a00\u200b\uff0c\u200b\u5176\u200b\u7d2f\u79ef\u200b\u5206\u5e03\u200b\u51fd\u6570\u200b\u7684\u200b\u9006\u51fd\u6570\u200b\u4e0d\u662f\u200b\u521d\u7b49\u200b\u51fd\u6570\u200b\u3002Box-Muller\u200b\u53d8\u6362\u200b\u901a\u8fc7\u200b\u5f15\u5165\u200b\u6781\u200b\u5750\u6807\u7cfb\u200b\uff0c\u200b\u5229\u7528\u200b\u6781\u200b\u5750\u6807\u7cfb\u200b\u7684\u200b\u5bf9\u79f0\u6027\u200b\u7b80\u5316\u200b\u79ef\u5206\u200b\u8fc7\u7a0b\u200b\u3002\u200b\u5177\u4f53\u200b\u7684\u200b\u6570\u5b66\u200b\u63a8\u5bfc\u200b\u548c\u200b\u4ee3\u7801\u200b\u5b9e\u73b0\u200b\u53c2\u89c1\u200bJupyter Notebook</p>"},{"location":"coding/machine-learning/#byte-pair-encoding","title":"Byte Pair Encoding","text":""},{"location":"coding/machine-learning/#c","title":"C","text":""},{"location":"coding/machine-learning/#catastrophic-forgetting","title":"Catastrophic Forgetting","text":""},{"location":"coding/machine-learning/#causal-decoder","title":"Causal Decoder","text":""},{"location":"coding/machine-learning/#chain-of-thoughts","title":"Chain-of-Thoughts","text":""},{"location":"coding/machine-learning/#classification","title":"Classification","text":""},{"location":"coding/machine-learning/#click-through-rate","title":"Click-Through Rate","text":""},{"location":"coding/machine-learning/#coefficient-of-determination","title":"Coefficient of Determination","text":""},{"location":"coding/machine-learning/#cold-start-problem","title":"Cold-Start Problem","text":""},{"location":"coding/machine-learning/#collaborative-filtering","title":"Collaborative Filtering","text":""},{"location":"coding/machine-learning/#conditional-random-field","title":"Conditional Random Field","text":""},{"location":"coding/machine-learning/#confidence-interval","title":"Confidence Interval","text":""},{"location":"coding/machine-learning/#conjugate-prior","title":"Conjugate Prior","text":""},{"location":"coding/machine-learning/#contrastive-learning","title":"Contrastive Learning","text":"<p>\u200b\u5bf9\u6bd4\u200b\u5b66\u4e60\u200b\uff08Contrastive Learning, CL\uff09\u200b\u662f\u200b\u4e00\u7c7b\u200b\u901a\u8fc7\u200b\u5f3a\u8c03\u200b\u6b63\u200b\u6837\u672c\u200b\u5bf9\u200b\uff08\u200b\u76f8\u4f3c\u200b\u7684\u200b\u4e24\u4e2a\u200b\u6837\u672c\u200b\uff09\u200b\u548c\u200b\u8d1f\u200b\u6837\u672c\u200b\u5bf9\u200b\uff08\u200b\u4e0d\u200b\u76f8\u4f3c\u200b\u7684\u200b\u4e24\u4e2a\u200b\u6837\u672c\u200b\uff09\u200b\u4e4b\u95f4\u200b\u5dee\u5f02\u6027\u200b\u7684\u200b\u81ea\u200b\u76d1\u7763\u200b\u5b66\u4e60\u200b\u65b9\u5f0f\u200b\u3002\u200b\u5b83\u200b\u901a\u8fc7\u200b\u7f16\u7801\u5668\u200b\u751f\u6210\u200b\u539f\u59cb\u6570\u636e\u200b\u5728\u200b\u4f4e\u7ef4\u9690\u200b\u7a7a\u95f4\u200b\u5185\u200b\u7684\u200b\u8868\u793a\u200b\uff0c\u200b\u901a\u8fc7\u200b\u62c9\u8fd1\u200b\u6b63\u200b\u6837\u672c\u200b\u5bf9\u200b\u7684\u200b\u8ddd\u79bb\u200b\uff0c\u200b\u62c9\u8fdc\u8d1f\u200b\u6837\u672c\u200b\u5bf9\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8ddd\u79bb\u200b\uff0c\u200b\u6765\u200b\u5b66\u4e60\u200b\u5230\u200b\u539f\u59cb\u200b\u6837\u672c\u200b\u5728\u200b\u9690\u200b\u5411\u91cf\u200b\u7a7a\u95f4\u200b\u5185\u200b\u7684\u200b\u8868\u793a\u200b\u3002\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u5b9a\u4e49\u200b\u4e3a\u200b</p> \\[ \\calL = y\\Vert x_1 - x_2\\Vert^2 + (1 - y)\\max(m, \\Vert x_1 - x_2\\Vert^2) \\] <p>\\(x_1, x_2\\)\u200b\u4e3a\u200b\u6837\u672c\u200b\uff0c\u200b\u5f53\u200b\u4e24\u8005\u200b\u76f8\u4f3c\u200b\uff08\u200b\u5982\u200b\u6765\u81ea\u200b\u540c\u200b\u4e00\u5f20\u200b\u56fe\u7247\u200b\u7684\u200b\u591a\u4e2a\u200b\u53d8\u6362\u200b\uff0c\u200b\u6216\u200b\u5c5e\u4e8e\u200b\u540c\u4e00\u4e2a\u200b\u7c7b\u522b\u200b\uff09\u200b\u65f6\u200b\uff0c\\(y = 1\\)\uff0c\u200b\u5426\u5219\u200b\\(y = 0\\)\u3002\u200b\u53e6\u200b\u4e00\u79cd\u200b\u5e38\u7528\u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u4e3a\u200b</p> \\[ \\calL = \\max(0, \\Vert x - x^\\plus\\Vert^2 - \\Vert x - x^-\\Vert^2 + m) \\] <p>\u200b\u5176\u4e2d\u200b\\(x, x^\\plus\\)\u200b\u4e3a\u200b\u76f8\u4f3c\u200b\u7684\u200b\u6837\u672c\u200b\uff0c\\(x^-\\)\u200b\u4e3a\u200b\u548c\u200b\\(x, x^\\plus\\)\u200b\u4e0d\u200b\u76f8\u4f3c\u200b\u7684\u200b\u6837\u672c\u200b\u3002</p>"},{"location":"coding/machine-learning/#controlled-decoding","title":"Controlled Decoding","text":""},{"location":"coding/machine-learning/#convolution-neural-network","title":"Convolution Neural Network","text":""},{"location":"coding/machine-learning/#cosine-similarity","title":"Cosine Similarity","text":""},{"location":"coding/machine-learning/#cross-attention","title":"Cross Attention","text":""},{"location":"coding/machine-learning/#cross-entropy","title":"Cross Entropy","text":"<p>\u200b\u4ea4\u53c9\u200b\u71b5\u200b\uff08Cross Entropy\uff09\u200b\u662f\u200b\u4e24\u4e2a\u200b\u5206\u5e03\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5dee\u5f02\u200b\u5ea6\u91cf\u200b\u3002\u200b\u4ece\u200b\u4fe1\u606f\u8bba\u200b\u7684\u200b\u89d2\u5ea6\u200b\u51fa\u53d1\u200b\u7406\u89e3\u200b\uff0c\u200b\u4ea4\u53c9\u200b\u71b5\u200b\u8861\u91cf\u200b\u7684\u200b\u662f\u200b\u7528\u200b\u5206\u5e03\u200b\\(Q\\)\u200b\u6765\u200b\u8868\u793a\u200b\u5206\u5e03\u200b\\(P\\)\u200b\u7684\u200b\u5e73\u5747\u200b\u7f16\u7801\u200b\u957f\u5ea6\u200b\u3002\u200b\u7531\u4e8e\u200b\\(P\\)\u200b\u548c\u200b\\(Q\\)\u200b\u7684\u200b\u5206\u5e03\u200b\u4e0d\u540c\u200b\uff0c\u200b\u7528\u200b\\(Q\\)\u200b\u6765\u200b\u7f16\u7801\u200b\\(P\\)\u200b\u7684\u200b\u4fe1\u606f\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u4fe1\u606f\u200b\u635f\u5931\u200b\uff0c\u200b\u5373\u200b\u5e73\u5747\u200b\u7f16\u7801\u200b\u957f\u5ea6\u200b\u8981\u200b\u9ad8\u4e8e\u200b\\(P\\)\u200b\u7684\u200b\u71b5\u200b\u3002</p> \\[ \\text{CE}(P, Q) = -\\int P(x)\\log Q(x)dx \\] <p>\u200b\u4ea4\u53c9\u200b\u71b5\u200b\u53ef\u4ee5\u200b\u7531\u200bKL\u200b\u6563\u5ea6\u200b\u63a8\u5bfc\u200b\u800c\u200b\u6765\u200b\uff0c\u200b\u4e0b\u5f0f\u200b\u4e2d\u200b\\(H(P)\\)\u200b\u4e3a\u200b\u5206\u5e03\u200b\\(P\\)\u200b\u7684\u200b\u71b5\u200b\u3002</p> \\[ \\begin{aligned} \\text{KL}(P||Q) &amp;= \\int P(x)\\log\\frac{P(x)}{Q(x)}dx \\\\ &amp;= \\int P(x)\\log P(x)dx - \\int P(x)\\log Q(x)dx \\\\ &amp;= H(P) - \\text{CE}(P, Q) \\end{aligned} \\] <p>\u200b\u4ea4\u53c9\u200b\u71b5\u200b\u635f\u5931\u200b\u662f\u200b\u7528\u4e8e\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff0c\u200b\u5176\u4e2d\u200b\\(P\\)\u200b\u4e3a\u200b\u771f\u5b9e\u200b\u5206\u5e03\u200b\uff08\u200b\u7ecf\u9a8c\u200b\u5206\u5e03\u200b\uff09\uff0c\\(Q\\)\u200b\u4e3a\u200b\u6a21\u578b\u200b\u9884\u6d4b\u200b\u5206\u5e03\u200b\uff0c\u200b\u6700\u5c0f\u5316\u200b\u4ea4\u53c9\u200b\u71b5\u200b\u7b49\u4ef7\u200b\u4e8e\u200b\u6700\u5c0f\u5316\u200b\\(\\text{KL}(P\\Vert Q)\\)\u3002</p> <ul> <li> <p>\u200b\u5bf9\u4e8e\u200b\u4e8c\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\uff0c\u200b\u4ea4\u53c9\u200b\u71b5\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\uff1a</p> \\[ \\calL = -\\frac{1}{n}\\sum_{i=1}^{n} y_i\\log p_i + (1 - y_i)\\log(1 - p_i) \\] <p>\u200b\u5176\u4e2d\u200b\uff0c\\(y_i\\)\u200b\u662f\u200b\u7b2c\u200b\\(i\\)\u200b\u4e2a\u200b\u6837\u672c\u200b\u7684\u200b\u771f\u5b9e\u200b\u6807\u7b7e\u200b\uff0c\\(p_i\\)\u200b\u662f\u200b\u6a21\u578b\u200b\u9884\u6d4b\u200b\u7b2c\u200b\\(i\\)\u200b\u4e2a\u200b\u6837\u672c\u200b\u4e3a\u200b\u6b63\u200b\u6837\u672c\u200b\u7684\u200b\u6982\u7387\u200b\uff0c\\(n\\)\u200b\u662f\u200b\u6837\u672c\u200b\u6570\u91cf\u200b\u3002</p> </li> <li> <p>\u200b\u5bf9\u4e8e\u200b\u591a\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\uff0c\u200b\u4ea4\u53c9\u200b\u71b5\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\uff1a</p> \\[ \\calL = -\\frac{1}{n}\\sum_{i=1}^{n}\\sum_{j=1}^{m} \\boldsymbol1_{\\{y_i = j\\}}\\cdot\\log p_{ij} \\] <p>\u200b\u5176\u4e2d\u200b\uff0c\\(y_{i}\\)\u200b\u662f\u200b\u7b2c\u200b\\(i\\)\u200b\u4e2a\u200b\u6837\u672c\u200b\u7684\u200b\u771f\u5b9e\u200b\u6807\u7b7e\u200b\uff0c\\(p_{ij}\\)\u200b\u662f\u200b\u6a21\u578b\u200b\u9884\u6d4b\u200b\u7b2c\u200b\\(i\\)\u200b\u4e2a\u200b\u6837\u672c\u200b\u4e3a\u200b\u7b2c\u200b\\(j\\)\u200b\u7c7b\u200b\u7684\u200b\u6982\u7387\u200b\uff0c\\(n\\)\u200b\u662f\u200b\u6837\u672c\u200b\u6570\u91cf\u200b\uff0c\\(m\\)\u200b\u662f\u200b\u7c7b\u522b\u200b\u6570\u91cf\u200b\u3002</p> </li> </ul> <p>\u200b\u53e6\u5916\u200b\uff0c\u200b\u4ece\u200b\u4f3c\u7136\u200b\u89d2\u5ea6\u200b\u51fa\u53d1\u200b\uff0c\u200b\u4ea4\u53c9\u200b\u71b5\u200b\u53cd\u6620\u200b\u4e86\u200b\u6a21\u578b\u200b\u9884\u6d4b\u200b\u6982\u7387\u200b\u7684\u200b\u8d1f\u200b\u5bf9\u6570\u200b\u4f3c\u7136\u200b\u3002</p>"},{"location":"coding/machine-learning/#cross-validation","title":"Cross Validation","text":""},{"location":"coding/machine-learning/#curse-of-dimensionality","title":"Curse of Dimensionality","text":""},{"location":"coding/machine-learning/#d","title":"D","text":""},{"location":"coding/machine-learning/#data-augmentation","title":"Data Augmentation","text":""},{"location":"coding/machine-learning/#data-imbalance","title":"Data Imbalance","text":""},{"location":"coding/machine-learning/#data-parallelism","title":"Data Parallelism","text":""},{"location":"coding/machine-learning/#decision-boundary","title":"Decision Boundary","text":""},{"location":"coding/machine-learning/#decision-tree","title":"Decision Tree","text":"<ul> <li>\u200b\u51b3\u7b56\u6811\u200b</li> </ul>"},{"location":"coding/machine-learning/#decoder","title":"Decoder","text":""},{"location":"coding/machine-learning/#decoder-only","title":"Decoder-only","text":""},{"location":"coding/machine-learning/#deep-q-network","title":"Deep Q Network","text":""},{"location":"coding/machine-learning/#diffusion-model","title":"Diffusion Model","text":""},{"location":"coding/machine-learning/#direct-preference-optimization","title":"Direct Preference Optimization","text":""},{"location":"coding/machine-learning/#discriminative-model","title":"Discriminative Model","text":""},{"location":"coding/machine-learning/#discriminator","title":"Discriminator","text":""},{"location":"coding/machine-learning/#disentangle","title":"Disentangle","text":""},{"location":"coding/machine-learning/#dropout","title":"Dropout","text":""},{"location":"coding/machine-learning/#dynamic-programming","title":"Dynamic Programming","text":""},{"location":"coding/machine-learning/#e","title":"E","text":""},{"location":"coding/machine-learning/#early-stopping","title":"Early Stopping","text":""},{"location":"coding/machine-learning/#embedding","title":"Embedding","text":""},{"location":"coding/machine-learning/#encoder","title":"Encoder","text":""},{"location":"coding/machine-learning/#encoder-decoder","title":"Encoder-Decoder","text":""},{"location":"coding/machine-learning/#encoder-only","title":"Encoder-only","text":""},{"location":"coding/machine-learning/#end-to-end","title":"End-to-End","text":"<p>\u200b\u7aef\u5230\u200b\u7aef\u200b\uff08End-to-End\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u5c06\u200b\u6574\u4e2a\u200b\u7cfb\u7edf\u200b\u4f5c\u4e3a\u200b\u4e00\u4e2a\u200b\u6574\u4f53\u200b\u8fdb\u884c\u200b\u4f18\u5316\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002\u200b\u5728\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u4e2d\u200b\uff0c\u200b\u7aef\u5230\u200b\u7aef\u200b\u5b66\u4e60\u200b\u6307\u200b\u7684\u200b\u662f\u200b\u5c06\u200b\u8f93\u5165\u200b\u6570\u636e\u200b\u76f4\u63a5\u200b\u6620\u5c04\u200b\u5230\u200b\u8f93\u51fa\u200b\u6570\u636e\u200b\u7684\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u800c\u200b\u4e0d\u200b\u9700\u8981\u200b\u4eba\u5de5\u200b\u8fdb\u884c\u200b\u7279\u5f81\u63d0\u53d6\u200b\u7b49\u200b\u7279\u5f81\u200b\u5de5\u7a0b\u200b\u3002\u200b\u7aef\u5230\u200b\u7aef\u200b\u5b66\u4e60\u200b\u7684\u200b\u4f18\u70b9\u200b\u662f\u200b\u65e0\u9700\u200b\u4eba\u5de5\u5e72\u9884\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4ece\u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b\u4e2d\u200b\u5b66\u4e60\u200b\u5230\u200b\u6a21\u578b\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u7279\u5f81\u200b\u3002\u200b\u7aef\u5230\u200b\u7aef\u200b\u5b66\u4e60\u200b\u7684\u200b\u7f3a\u70b9\u200b\u662f\u200b\u6a21\u578b\u200b\u7684\u200b\u590d\u6742\u5ea6\u200b\u8f83\u200b\u9ad8\u200b\uff0c\u200b\u8bad\u7ec3\u200b\u65f6\u95f4\u200b\u8f83\u957f\u200b\uff1b\u200b\u6a21\u578b\u200b\u7684\u200b\u53ef\u200b\u89e3\u91ca\u6027\u200b\u8f83\u5dee\u200b\uff1b\u200b\u8981\u6c42\u200b\u66f4\u200b\u9ad8\u8d28\u91cf\u200b\u7684\u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b\u3002</p> <p>\u200b\u5982\u200b\uff1atransformer\u200b\u6a21\u578b\u200b<sup>5</sup>\u200b\u6700\u521d\u200b\u7684\u200b\u8bbe\u8ba1\u200b\u7528\u4e8e\u200b\u673a\u5668\u7ffb\u8bd1\u200b\u4efb\u52a1\u200b\uff0c\u200b\u5c06\u200b\u8f93\u5165\u200b\u7684\u200b\u6e90\u8bed\u8a00\u200b\u53e5\u5b50\u200b\u76f4\u63a5\u200b\u6620\u5c04\u200b\u5230\u200b\u76ee\u6807\u8bed\u8a00\u200b\u53e5\u5b50\u200b\uff0c\u200b\u4e0d\u200b\u9700\u8981\u200b\u4eba\u5de5\u200b\u63d0\u53d6\u200b\u7279\u5f81\u200b\u3002</p>"},{"location":"coding/machine-learning/#entropy","title":"Entropy","text":""},{"location":"coding/machine-learning/#environment","title":"Environment","text":""},{"location":"coding/machine-learning/#euclidean-distance","title":"Euclidean Distance","text":""},{"location":"coding/machine-learning/#evidence-lower-bound","title":"Evidence Lower Bound","text":""},{"location":"coding/machine-learning/#experience-replay","title":"Experience Replay","text":""},{"location":"coding/machine-learning/#experimental-distribution","title":"Experimental Distribution","text":""},{"location":"coding/machine-learning/#exploration-exploitation-trade-off","title":"Exploration-Exploitation Trade-off","text":""},{"location":"coding/machine-learning/#exposure-bias","title":"Exposure Bias","text":""},{"location":"coding/machine-learning/#f","title":"F","text":""},{"location":"coding/machine-learning/#f1","title":"F1","text":""},{"location":"coding/machine-learning/#factorization-machine","title":"Factorization Machine","text":""},{"location":"coding/machine-learning/#feedback-loop","title":"Feedback Loop","text":""},{"location":"coding/machine-learning/#feedforward-neural-network","title":"Feedforward Neural Network","text":""},{"location":"coding/machine-learning/#few-shot-learning","title":"Few-shot Learning","text":""},{"location":"coding/machine-learning/#few-shot-prompting","title":"Few-shot Prompting","text":""},{"location":"coding/machine-learning/#g","title":"G","text":""},{"location":"coding/machine-learning/#gated-recurrent-unit","title":"Gated Recurrent Unit","text":""},{"location":"coding/machine-learning/#gaussian-distribution","title":"Gaussian Distribution","text":"<p>\u200b\u9ad8\u65af\u5206\u5e03\u200b\uff08Gaussian Distribution\uff09\uff0c\u200b\u53c8\u79f0\u200b\u6b63\u6001\u5206\u5e03\u200b\uff08Normal Distribution\uff09\uff0c\u200b\u662f\u200b\u4e00\u79cd\u200b\u8fde\u7eed\u200b\u6982\u7387\u5206\u5e03\u200b\u3002</p> <ul> <li> <p>\u200b\u5747\u503c\u200b\u4e3a\u200b\\(\\mu\\)\uff0c\u200b\u65b9\u5dee\u200b\u4e3a\u200b\\(\\sigma^2\\)\u200b\u7684\u200b\u4e00\u5143\u200b\u9ad8\u65af\u5206\u5e03\u200b\u7684\u200b\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u200b\u4e3a\u200b\uff1a</p> \\[ f(x) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}}e^{-\\frac{(x - \\mu)^2}{2\\sigma^2}} \\] <p>\u200b\u6807\u51c6\u200b\u6b63\u6001\u5206\u5e03\u200b\u7684\u200b\u5747\u503c\u200b\u4e3a\u200b0\uff0c\u200b\u65b9\u5dee\u200b\u4e3a\u200b1\uff0c\u200b\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u200b\u7b80\u200b\u5199\u4f5c\u200b\\(\\phi(x)\\)\uff0c\u200b\u7d2f\u79ef\u200b\u5206\u5e03\u200b\u51fd\u6570\u200b\u7b80\u200b\u5199\u4f5c\u200b\\(\\Phi(x)\\)\u3002</p> </li> <li> <p>\u200b\u5747\u503c\u200b\u4e3a\u200b\\(\\boldsymbol\\mu\\)\uff0c\u200b\u65b9\u5dee\u200b\u4e3a\u200b\\(\\Sigma\\)\u200b\u7684\u200b\u591a\u5143\u200b\u9ad8\u65af\u5206\u5e03\u200b\u7684\u200b\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u200b\u4e3a\u200b\uff1a</p> \\[ f(\\bsx) = \\frac{1}{(2\\pi)^{d/2}|\\Sigma|^{1/2}}e^{-\\frac{1}{2}(\\bsx - \\boldsymbol\\mu)^\\top\\Sigma^{-1}(\\bsx - \\boldsymbol\\mu)} \\] </li> </ul> <p>\u200b\u9ad8\u65af\u5206\u5e03\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6027\u8d28\u200b\uff1a</p> <ol> <li>\u200b\u82e5\u200b\u968f\u673a\u53d8\u91cf\u200b\\(X\\)\u200b\u670d\u4ece\u200b\u9ad8\u65af\u5206\u5e03\u200b\\(\\mathcal N(\\mu, \\sigma^2)\\)\uff0c\u200b\u7ecf\u8fc7\u200b\u7ebf\u6027\u53d8\u6362\u200b\\(Y = aX + b\\)\u200b\u540e\u200b\uff0c\\(Y\\)\u200b\u4ecd\u7136\u200b\u670d\u4ece\u200b\u9ad8\u65af\u5206\u5e03\u200b\\(\\mathcal N(a\\mu + b, a^2\\sigma^2)\\)\u3002</li> <li>\u200b\u82e5\u200b\u968f\u673a\u53d8\u91cf\u200b\\(X_1, X_2\\)\u200b\u76f8\u4e92\u200b\u72ec\u7acb\u200b\u4e14\u200b\u5206\u522b\u200b\u670d\u4ece\u200b\u9ad8\u65af\u5206\u5e03\u200b\\(\\mathcal N(\\mu_1, \\sigma_1^2)\\)\u200b\u548c\u200b\\(\\mathcal N(\\mu_2, \\sigma_2^2)\\)\uff0c\u200b\u5219\u200b\\(X_1 + X_2\\)\u200b\u670d\u4ece\u200b\u9ad8\u65af\u5206\u5e03\u200b\\(\\mathcal N(\\mu_1 + \\mu_2, \\sigma_1^2 + \\sigma_2^2)\\)\u3002</li> <li> <p>\u200b\u591a\u5143\u200b\u9ad8\u65af\u5206\u5e03\u200b\u7684\u200b\u6761\u4ef6\u200b\u5206\u5e03\u200b\u4f9d\u7136\u200b\u662f\u200b\u9ad8\u65af\u5206\u5e03\u200b\u3002\u200b\u8bbe\u200b\u968f\u673a\u53d8\u91cf\u200b\\(X = (X_1, X_2)\\)\u200b\u670d\u4ece\u200b\u591a\u5143\u200b\u9ad8\u65af\u5206\u5e03\u200b\\(\\mathcal N(\\mu, \\Sigma)\\)\uff0c\u200b\u5176\u4e2d\u200b\\(\\mu = (\\mu_1, \\mu_2)\\)\uff0c\\(\\Sigma = \\begin{bmatrix} \\Sigma_{11} &amp; \\Sigma_{12} \\\\ \\Sigma_{21} &amp; \\Sigma_{22} \\end{bmatrix}\\)\uff0c\u200b\u5219\u200b\u7ed9\u5b9a\u200b\\(X_1 = x_1\\)\u200b\u540e\u200b\uff0c\\(X_2\\)\u200b\u7684\u200b\u6761\u4ef6\u200b\u5206\u5e03\u200b\u4e3a\u200b\uff1a</p> \\[ (X_2\\mid X_1 = x_1) \\sim \\mathcal N(\\mu_2 + \\Sigma_{21}\\Sigma_{11}^{-1}(x_1 - \\mu_1), \\Sigma_{22} - \\Sigma_{21}\\Sigma_{11}^{-1}\\Sigma_{12}) \\] </li> </ol>"},{"location":"coding/machine-learning/#gaussian-process","title":"Gaussian Process","text":"<p>\u200b\u9ad8\u65af\u200b\u8fc7\u7a0b\u200b\uff08Gaussian Process\uff0cGP\uff09\u200b\u662f\u200b\u5c06\u200b\u591a\u200b\u53d8\u91cf\u200b\u9ad8\u65af\u5206\u5e03\u200b\u63a8\u5e7f\u200b\u5230\u200b\u65e0\u9650\u200b\u7ef4\u5ea6\u200b\\(\\mathcal X\\subseteq \\mathbb R^n\\)\u200b\u7684\u200b\u6982\u7387\u5206\u5e03\u200b\u3002\u200b\u5b83\u200b\u7684\u200b\u6838\u5fc3\u601d\u60f3\u200b\u662f\u200b\u7528\u200b\u6982\u7387\u200b\u7684\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0\u200b\u51fd\u6570\u200b\u5728\u200b\u6bcf\u200b\u4e00\u4e2a\u70b9\u200b\u5904\u200b\u7684\u200b\u5206\u5e03\u200b\uff0c\u200b\u4ece\u800c\u200b\u80fd\u591f\u200b\u5bf9\u200b\u4efb\u610f\u200b\u4f4d\u7f6e\u200b\u51fd\u6570\u200b\u503c\u200b\u8fdb\u884c\u200b\u63a8\u65ad\u200b\u548c\u200b\u4e0d\u786e\u5b9a\u6027\u200b\u91cf\u5316\u200b\u3002\u200b\u603b\u4f53\u200b\u6765\u770b\u200b\uff0c\u200b\u9ad8\u65af\u5206\u5e03\u200b\u7814\u7a76\u200b\u7684\u200b\u662f\u200b\u51fd\u6570\u200b\u7684\u200b\u6982\u7387\u5206\u5e03\u200b\uff0c\u200b\u5e38\u7528\u200b\u4e8e\u200b\u8d1d\u53f6\u65af\u200b\u4f18\u5316\u200b\u3001\u200b\u56de\u5f52\u200b\u4efb\u52a1\u200b\u7b49\u200b\u3002</p> <p>\u200b\u5177\u4f53\u200b\u5730\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\\(\\bsx = \\{x_1, \\ldots, x_n\\}\\subseteq \\mathcal X\\)\uff0c\u200b\u9ad8\u65af\u5206\u5e03\u200b\u5047\u8bbe\u200b\u51fd\u6570\u200b\u5728\u200b\u8fd9\u4e9b\u200b\u70b9\u200b\u7684\u200b\u89c2\u6d4b\u200b\u503c\u200b\\(Y_1 = f(x_1), \\ldots, Y_n = f(x_n)\\)\u200b\u662f\u200b\u968f\u673a\u53d8\u91cf\u200b\uff0c\u200b\u5e76\u4e14\u200b\u670d\u4ece\u200b\u67d0\u4e2a\u200b\u53d7\u200b\u81ea\u53d8\u91cf\u200b\\(\\bsx\\)\u200b\u5f71\u54cd\u200b\u7684\u200b\u591a\u5143\u200b\u9ad8\u65af\u5206\u5e03\u200b\\(\\mathcal N(\\mu(\\bsx), \\Sigma(\\bsx))\\)\u3002\u200b\u5176\u4e2d\u200b\uff0c\\(\\mu(\\bsx)\\)\u200b\u4e3a\u200b\u5747\u503c\u200b\u51fd\u6570\u200b\uff0c\\(\\Sigma(\\bsx)\\)\u200b\u4e3a\u200b\u534f\u65b9\u5dee\u200b\u51fd\u6570\u200b\u3002</p> <p>\u200b\u9ad8\u65af\u200b\u8fc7\u7a0b\u200b\u7684\u200b\u6838\u5fc3\u200b\u662f\u200b\u6838\u200b\u51fd\u6570\u200b\u3002\u200b\u6838\u200b\u51fd\u6570\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u81ea\u53d8\u91cf\u200b\u4e4b\u95f4\u200b\u7684\u200b\u76f8\u4f3c\u6027\u200b\uff0c\u200b\u901a\u8fc7\u200b\u534f\u65b9\u5dee\u200b\u77e9\u9635\u200b\u53cd\u6620\u200b\u51fd\u6570\u200b\u503c\u200b\u4e4b\u95f4\u200b\u7684\u200b\u76f8\u5173\u6027\u200b\u3002\u200b\u9ad8\u65af\u5206\u5e03\u200b\u7684\u200b\u6761\u4ef6\u200b\u5206\u5e03\u200b\u4f9d\u7136\u200b\u662f\u200b\u9ad8\u65af\u5206\u5e03\u200b\uff0c\u200b\u501f\u52a9\u4e8e\u200b\u5747\u503c\u200b\u51fd\u6570\u200b\u548c\u200b\u534f\u65b9\u5dee\u200b\u77e9\u9635\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u63a8\u65ad\u200b\u51fd\u6570\u200b\u5728\u200b\u65b0\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u5206\u5e03\u200b\u3002</p> <p>\u200b\u76f8\u5173\u200b\u5b9e\u73b0\u200b\uff1a</p> <ul> <li>\u200b\u9ad8\u65af\u200b\u8fc7\u7a0b\u200b</li> </ul>"},{"location":"coding/machine-learning/#generalized-linear-models","title":"Generalized Linear Models","text":"<ul> <li>\u200b\u7ebf\u6027\u200b\u6a21\u578b\u200b</li> </ul>"},{"location":"coding/machine-learning/#generative-adversarial-network","title":"Generative Adversarial Network","text":"<p>\u200b\u751f\u6210\u200b\u5bf9\u6297\u200b\u7f51\u7edc\u200b\uff08Generative Adversarial Networks, GAN\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u751f\u6210\u200b\u6a21\u578b\u200b\uff0c\u200b\u5b83\u200b\u7531\u200b\u4e24\u4e2a\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u7ec4\u6210\u200b\uff1a\u200b\u751f\u6210\u5668\u200b\uff08Generator\uff09\u200b\u548c\u200b\u5224\u522b\u200b\u5668\u200b\uff08Discriminator\uff09\u3002\u200b\u751f\u6210\u200b\u7f51\u7edc\u200b\u7684\u200b\u76ee\u6807\u200b\u662f\u4ece\u200b\u6837\u672c\u7a7a\u95f4\u200b\\(\\mathcal X\\)\u200b\u4e2d\u200b\u751f\u6210\u200b\u5c3d\u53ef\u80fd\u200b\u903c\u771f\u200b\u7684\u200b\u6837\u672c\u200b\\(\\mathbb P_g\\)\uff0c\u200b\u800c\u200b\u5224\u522b\u200b\u7f51\u7edc\u200b\u7684\u200b\u76ee\u6807\u200b\u662f\u200b\u5c3d\u53ef\u80fd\u200b\u51c6\u786e\u200b\u5730\u533a\u200b\u5206\u200b\u771f\u5b9e\u200b\u6837\u672c\u200b\u7684\u200b\u5206\u5e03\u200b\\(\\mathbb P\\)\u200b\u548c\u200b\u751f\u6210\u200b\u6837\u672c\u200b\u7684\u200b\u5206\u5e03\u200b\\(\\mathbb P_g\\)\u3002\u200b\u4e24\u4e2a\u200b\u7f51\u7edc\u200b\u7684\u200b\u8bad\u7ec3\u200b\u76ee\u6807\u200b\u76f8\u4e92\u200b\u5bf9\u6297\u200b\uff0c\u200b\u5728\u200b\u5bf9\u6297\u200b\u8bad\u7ec3\u200b\u4e2d\u200b\uff0c\u200b\u751f\u6210\u5668\u200b\u53ef\u4ee5\u200b\u5b66\u4e60\u200b\u5230\u200b\u5982\u4f55\u200b\u4ece\u200b\u968f\u673a\u566a\u58f0\u200b\u4e2d\u200b\u91cd\u5efa\u200b\u6837\u672c\u200b\u3002GAN\u200b\u7684\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u662f\u200b\u4e00\u4e2a\u96f6\u200b\u548c\u200b\u535a\u5f08\u200b\u7684\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u751f\u6210\u5668\u200b\u548c\u200b\u5224\u522b\u200b\u5668\u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u662f\u200b\u76f8\u4e92\u200b\u5bf9\u6297\u200b\u7684\u200b\u3002</p> <p>\u200b\u5728\u200b\u6700\u521d\u200b\u7684\u200bGAN\u200b\u6a21\u578b\u200b<sup>2</sup>\u200b\u4e2d\u200b\uff0c\u200b\u5224\u522b\u200b\u5668\u200b\u4f7f\u7528\u200b\u4e8c\u200b\u5206\u7c7b\u200b\u4ea4\u53c9\u200b\u71b5\u200b\u4f5c\u4e3a\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff0c\u200b\u751f\u6210\u5668\u200b\u4f7f\u7528\u200b\u5224\u522b\u200b\u5668\u200b\u8f93\u51fa\u200b\u7684\u200b\u8d1f\u200b\u5bf9\u6570\u200b\u6982\u7387\u200b\u4f5c\u4e3a\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u3002\u200b\u901a\u8fc7\u200b\u4f18\u5316\u200b\u4e8c\u200b\u5206\u7c7b\u200b\u4ea4\u53c9\u200b\u71b5\u200b\uff0c\u200b\u5224\u522b\u200b\u5668\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u751f\u6210\u5668\u200b\u5206\u5e03\u200b\u548c\u200b\u771f\u5b9e\u200b\u5206\u5e03\u200b\u7684\u200bJS\u200b\u6563\u5ea6\u200b\u7684\u200b\u4e0b\u754c\u200b\uff0c\u200b\u4ece\u800c\u200b\u4f7f\u200b\u751f\u6210\u5668\u200b\u751f\u6210\u200b\u7684\u200b\u6837\u672c\u200b\u66f4\u52a0\u200b\u903c\u771f\u200b\u3002</p> <p>\u200b\u5f53\u200b\u751f\u6210\u5668\u200b\u5206\u5e03\u200b\u548c\u200b\u771f\u5b9e\u200b\u5206\u5e03\u200b\u76f8\u5dee\u200b\u8f83\u5927\u200b\u65f6\u200b\uff0cJS\u200b\u6563\u5ea6\u200b\u9762\u4e34\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b\u7684\u200b\u95ee\u9898\u200b\uff0c\u200b\u5bfc\u81f4\u200b\u8bad\u7ec3\u200b\u4e0d\u200b\u7a33\u5b9a\u200b\u3001\u200b\u6a21\u5f0f\u200b\u5d29\u584c\u200b\u7b49\u200b\u95ee\u9898\u200b\uff0c\u200b\u8868\u73b0\u200b\u4e3a\u200b\u751f\u6210\u5668\u200b\u751f\u6210\u200b\u7684\u200b\u6837\u672c\u200b\u8d28\u91cf\u200b\u8f83\u5dee\u200b\u3002\u200b\u4e3a\u200b\u89e3\u51b3\u200b\u8fd9\u4e00\u200b\u95ee\u9898\u200b\uff0c\u200b\u540e\u7eed\u200b\u7684\u200bGAN\u200b\u6a21\u578b\u200b\u63d0\u51fa\u200b\u4e86\u200b\u591a\u79cd\u200b\u6539\u8fdb\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5982\u200b\u4f7f\u7528\u200bWasserstein\u200b\u8ddd\u79bb\u200b\u8861\u91cf\u200b\u751f\u6210\u5668\u200b\u5206\u5e03\u200b\u548c\u200b\u771f\u5b9e\u200b\u5206\u5e03\u200b\u7684\u200b\u5dee\u5f02\u200b<sup>7</sup>\uff0c\u200b\u4f7f\u7528\u200b\u68af\u5ea6\u200b\u60e9\u7f5a\u200b\u7684\u200b\u65b9\u5f0f\u200b\u8f85\u52a9\u200b\u4f30\u7b97\u200bWasserstein\u200b\u8ddd\u79bb\u200b<sup>8</sup>\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u6709\u200b\u660e\u786e\u200b\u5206\u7c7b\u200b\u6807\u7b7e\u200b\u7684\u200b\u6837\u672c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5206\u7c7b\u200b\u6807\u7b7e\u200b\u4f5c\u4e3a\u200b\u751f\u6210\u5668\u200b\u548c\u200b\u5224\u522b\u200b\u5668\u200b\u7684\u200b\u6761\u4ef6\u200b\u8f93\u5165\u200b\uff0c\u200b\u5f97\u5230\u200b\u6761\u4ef6\u200b\u751f\u6210\u200b\u5bf9\u6297\u200b\u7f51\u7edc\u200b\uff08Conditional GAN\uff09<sup>1</sup>\u3002</p> <p>\u200b\u76f8\u5173\u200b\u5b9e\u73b0\u200b\uff1a</p> <ul> <li>GAN on MNIST</li> <li>Wasserstein GAN on MNIST</li> <li>Conditional GAN on MNIST</li> </ul>"},{"location":"coding/machine-learning/#generative-model","title":"Generative Model","text":""},{"location":"coding/machine-learning/#generator","title":"Generator","text":""},{"location":"coding/machine-learning/#gibbs-sampling","title":"Gibbs Sampling","text":""},{"location":"coding/machine-learning/#gradient-boosted-trees","title":"Gradient Boosted Trees","text":""},{"location":"coding/machine-learning/#gradient-clipping","title":"Gradient Clipping","text":""},{"location":"coding/machine-learning/#gradient-exploding","title":"Gradient Exploding","text":""},{"location":"coding/machine-learning/#gradient-vanishing","title":"Gradient Vanishing","text":""},{"location":"coding/machine-learning/#graph","title":"Graph","text":""},{"location":"coding/machine-learning/#graph-convolution","title":"Graph Convolution","text":""},{"location":"coding/machine-learning/#graph-neural-network","title":"Graph Neural Network","text":""},{"location":"coding/machine-learning/#group-relative-policy-optimization","title":"Group Relative Policy Optimization","text":""},{"location":"coding/machine-learning/#grouped-query-attention","title":"Grouped Query Attention","text":""},{"location":"coding/machine-learning/#h","title":"H","text":""},{"location":"coding/machine-learning/#hadamard-product","title":"Hadamard product","text":""},{"location":"coding/machine-learning/#hinge-loss","title":"Hinge Loss","text":""},{"location":"coding/machine-learning/#hyperparameter","title":"Hyperparameter","text":""},{"location":"coding/machine-learning/#i","title":"I","text":""},{"location":"coding/machine-learning/#importance-sampling","title":"Importance Sampling","text":""},{"location":"coding/machine-learning/#in-context-learning","title":"In-Context Learning","text":""},{"location":"coding/machine-learning/#inner-product","title":"Inner Product","text":""},{"location":"coding/machine-learning/#instruct-tuning","title":"Instruct Tuning","text":""},{"location":"coding/machine-learning/#inverse-transform-sampling","title":"Inverse Transform Sampling","text":""},{"location":"coding/machine-learning/#j","title":"J","text":""},{"location":"coding/machine-learning/#jaccard-coefficient","title":"Jaccard Coefficient","text":""},{"location":"coding/machine-learning/#jacobian-matrix","title":"Jacobian Matrix","text":""},{"location":"coding/machine-learning/#jensen-inequality","title":"Jensen Inequality","text":""},{"location":"coding/machine-learning/#k","title":"K","text":""},{"location":"coding/machine-learning/#kernel-function","title":"Kernel Function","text":""},{"location":"coding/machine-learning/#k-means","title":"K-Means","text":""},{"location":"coding/machine-learning/#k-nearest-neighbor","title":"K-Nearest Neighbor","text":""},{"location":"coding/machine-learning/#kl-divergence","title":"KL Divergence","text":"<p>KL\u200b\u6563\u5ea6\u200b\uff08Kullback-Leibler Divergence, KL Divergence\uff09\u200b\u662f\u200b\u4e24\u4e2a\u200b\u6982\u7387\u5206\u5e03\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5dee\u5f02\u200b\u5ea6\u91cf\u200b\u3002KL\u200b\u6563\u5ea6\u200b\u7684\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\uff1a</p> \\[ \\text{KL}(P\\Vert Q) = \\int P(x)\\log\\frac{P(x)}{Q(x)}\\mathrm dx = \\mathbb E_P\\left[\\log\\frac{P(x)}{Q(x)}\\right] \\] <p>KL\u200b\u6563\u5ea6\u200b\u4e0d\u662f\u200b\u5bf9\u79f0\u200b\u7684\u200b\uff0c\u200b\u5373\u200b\\(\\text{KL}(P\\Vert Q)\\neq\\text{KL}(Q\\Vert P)\\)\u3002KL\u200b\u6563\u5ea6\u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u4e3a\u7528\u200b\u5206\u5e03\u200b\\(Q\\)\u200b\u6765\u200b\u8fd1\u4f3c\u200b\u5206\u5e03\u200b\\(P\\)\u200b\u65f6\u200b\u7684\u200b\u4fe1\u606f\u200b\u635f\u5931\u200b\u3002\\(P\\)\u200b\u672c\u8eab\u200b\u7684\u200b\u4fe1\u606f\u91cf\u200b\u4e3a\u200b\u5206\u5e03\u200b\\(P\\)\u200b\u7684\u200b\u71b5\u200b\\(\\mathbb E_P[-\\log P(x)]\\)\uff0c\u200b\u7528\u200b\\(Q\\)\u200b\u6765\u200b\u8fd1\u4f3c\u200b\\(P\\)\u200b\u65f6\u200b\u7684\u200b\u4fe1\u606f\u91cf\u200b\u4e3a\u200b\u4ea4\u53c9\u200b\u71b5\u200b\\(\\mathbb E_P[-\\log Q(x)]\\)\uff0c\u200b\u4e24\u8005\u200b\u7684\u200b\u5dee\u5f02\u200b\u5373\u200b\u4e3a\u200bKL\u200b\u6563\u5ea6\u200b\u3002\u200b\u4e3a\u4e86\u200b\u4fdd\u8bc1\u200bKL\u200b\u6563\u5ea6\u200b\u7684\u200b\u975e\u200b\u8d1f\u6027\u200b\uff0cKL\u200b\u6563\u5ea6\u200b\u7684\u200b\u5b9a\u4e49\u200b\u4e2d\u200b\u901a\u5e38\u200b\u8981\u6c42\u200b\\(Q\\)\u200b\u7684\u200b\u652f\u6491\u200b\u96c6\u200b\u5305\u542b\u200b\\(P\\)\u200b\u7684\u200b\u652f\u6491\u200b\u96c6\u200b\uff0c\u200b\u5373\u200b\\(Q(x) = 0\\)\u200b\u65f6\u200b\uff0c\\(P(x) = 0\\)\u3002</p> KL\u200b\u6563\u5ea6\u200b\u7684\u200b\u975e\u200b\u8d1f\u6027\u200b <p>\u200b\u5bf9\u4e8e\u200b\u4efb\u610f\u200b\u4e24\u4e2a\u200b\u6982\u7387\u5206\u5e03\u200b\\(P, Q\\)\uff0cKL\u200b\u6563\u5ea6\u200b\\(\\text{KL}(P\\Vert Q)\\geq 0\\)\uff0c\u200b\u4e14\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(P = Q\\)\u200b\u65f6\u200b\uff0cKL\u200b\u6563\u5ea6\u200b\u7b49\u4e8e\u200b0\u3002</p> <p>\u200b\u6ce8\u610f\u200b\u5230\u200b\\(-\\log x\\)\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\uff0c\u200b\u7531\u200bJensen\u200b\u4e0d\u7b49\u5f0f\u200b\u53ef\u200b\u5f97\u200b\uff1a</p> \\[ \\mathbb E_P\\left[\\log\\frac{P(x)}{Q(x)}\\right] = \\mathbb E_P\\left[-\\log\\frac{Q(x)}{P(x)}\\right] \\geq -\\log\\mathbb E_P\\left[\\frac{Q(x)}{P(x)}\\right] = -\\log 1 = 0 \\] <p>JS\u200b\u6563\u5ea6\u200b\uff08Jensen-Shannon Divergence\uff09\u200b\u662f\u200bKL\u200b\u6563\u5ea6\u200b\u7684\u200b\u5bf9\u79f0\u200b\u5f62\u5f0f\u200b\uff0c\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\uff1a</p> \\[ \\text{JS}(P\\Vert Q) = \\frac{1}{2}\\text{KL}(P\\Vert M) + \\frac{1}{2}\\text{KL}(Q\\Vert M) \\] <p>\u200b\u5176\u4e2d\u200b\uff0c\\(M = \\frac{1}{2}(P + Q)\\)\u200b\u4e3a\u200b\\(P\\)\u200b\u548c\u200b\\(Q\\)\u200b\u7684\u200b\u5747\u503c\u200b\u5206\u5e03\u200b\u3002JS\u200b\u6563\u5ea6\u200b\u540c\u6837\u200b\u6ee1\u8db3\u200b\u975e\u200b\u8d1f\u6027\u200b\uff0c\u200b\u4e14\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(P = Q\\)\u200b\u65f6\u200b\uff0cJS\u200b\u6563\u5ea6\u200b\u7b49\u4e8e\u200b0\u3002</p>"},{"location":"coding/machine-learning/#knowledge-distillation","title":"Knowledge Distillation","text":""},{"location":"coding/machine-learning/#knowledge-graph","title":"Knowledge Graph","text":"<p>\u200b\u77e5\u8bc6\u200b\u56fe\u8c31\u200b\uff08Knowledge Graph\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u5b9e\u4f53\u200b\u4e4b\u95f4\u200b\u5173\u7cfb\u200b\u7684\u200b\u56fe\u200b\u7ed3\u6784\u200b<sup>3</sup>\u3002\u200b\u77e5\u8bc6\u200b\u56fe\u8c31\u200b\u4e2d\u200b\u7684\u200b\u8282\u70b9\u200b\u8868\u793a\u200b\u5b9e\u4f53\u200b\uff0c\u200b\u8fb9\u200b\u8868\u793a\u200b\u5b9e\u4f53\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5173\u7cfb\u200b\u3002\u200b\u77e5\u8bc6\u200b\u56fe\u8c31\u200b\u5e38\u7528\u200b\u4e8e\u200b\u77e5\u8bc6\u200b\u8868\u793a\u200b\u3001\u200b\u77e5\u8bc6\u200b\u63a8\u7406\u200b\u7b49\u200b\u4efb\u52a1\u200b\u3002</p> <p>\u200b\u4e24\u4e2a\u200b\u8282\u70b9\u200b\\(L, R\\)\u200b\u548c\u200b\u8fde\u63a5\u200b\u4ed6\u4eec\u200b\u7684\u200b\u8fb9\u200b\\(E\\)\u200b\u6784\u6210\u200b\u4e00\u4e2a\u200b\u4e09\u5143\u7ec4\u200b\\((L, E, R)\\)\uff0c\u200b\u8868\u793a\u200b\\(L\\)\u200b\u548c\u200b\\(R\\)\u200b\u4e4b\u95f4\u200b\u5b58\u5728\u200b\u5173\u7cfb\u200b\\(E\\)\u3002\u200b\u5982\u200b\u4e09\u5143\u7ec4\u200b\\((\\text{\u200b\u5317\u4eac\u200b}, \\text{\u200b\u9996\u90fd\u200b}, \\text{\u200b\u4e2d\u56fd\u200b})\\)\u200b\u8868\u793a\u200b\u201c\u200b\u5317\u4eac\u200b\u662f\u200b\u4e2d\u56fd\u200b\u7684\u200b\u9996\u90fd\u200b\u201d\u3002</p> <p>\u200b\u77e5\u8bc6\u200b\u56fe\u8c31\u200b\u7684\u200b\u6784\u5efa\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u81ea\u52a8\u5316\u200b\u7684\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u5982\u200b\u4ece\u200b\u6587\u672c\u200b\u4e2d\u200b\u62bd\u53d6\u200b\u5b9e\u4f53\u200b\u548c\u200b\u5173\u7cfb\u200b\uff0c\u200b\u6216\u8005\u200b\u901a\u8fc7\u200b\u4eba\u5de5\u200b\u6807\u6ce8\u200b\u7684\u200b\u65b9\u5f0f\u200b\u3002</p>"},{"location":"coding/machine-learning/#kv-cache","title":"KV-Cache","text":""},{"location":"coding/machine-learning/#l","title":"L","text":""},{"location":"coding/machine-learning/#label-smoothing","title":"Label Smoothing","text":""},{"location":"coding/machine-learning/#language-model","title":"Language Model","text":""},{"location":"coding/machine-learning/#lasso-regression","title":"Lasso Regression","text":""},{"location":"coding/machine-learning/#latent-dirichlet-allocation","title":"Latent Dirichlet Allocation","text":""},{"location":"coding/machine-learning/#learning-rate","title":"Learning Rate","text":""},{"location":"coding/machine-learning/#learning-to-rank","title":"Learning to Rank","text":""},{"location":"coding/machine-learning/#likelihood","title":"Likelihood","text":""},{"location":"coding/machine-learning/#linear-discriminative-analysis","title":"Linear Discriminative Analysis","text":""},{"location":"coding/machine-learning/#linear-regression","title":"Linear Regression","text":""},{"location":"coding/machine-learning/#lipschitz-continuity","title":"Lipschitz Continuity","text":""},{"location":"coding/machine-learning/#llama","title":"Llama","text":""},{"location":"coding/machine-learning/#logisitic-regression","title":"Logisitic Regression","text":""},{"location":"coding/machine-learning/#logit","title":"Logit","text":""},{"location":"coding/machine-learning/#long-short-term-memory","title":"Long-Short Term Memory","text":""},{"location":"coding/machine-learning/#loss-function","title":"Loss Function","text":"<p>\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\uff08Loss Function\uff09\u200b\u662f\u200b\u7528\u6765\u200b\u8bc4\u4ef7\u200b\u6a21\u578b\u200b\u9884\u6d4b\u503c\u200b\u4e0e\u200b\u771f\u5b9e\u200b\u503c\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5dee\u5f02\u200b\u7684\u200b\u51fd\u6570\u200b\u3002\u200b\u53ef\u4ee5\u200b\u501f\u52a9\u200b\u968f\u673a\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u7b49\u200b\u4f18\u5316\u200b\u7b97\u6cd5\u200b\u6765\u200b\u8c03\u6574\u200b\u6a21\u578b\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u7684\u200b\u503c\u200b\u6700\u5c0f\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u4e0d\u540c\u200b\u7684\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u4efb\u52a1\u200b\uff0c\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u7684\u200b\u9009\u62e9\u200b\u4e5f\u200b\u4e0d\u540c\u200b\u3002\u200b\u5e38\u7528\u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u6709\u200b\uff1a</p> <ul> <li>\u200b\u56de\u5f52\u200b\u4efb\u52a1\u200b\uff1a\u200b\u5e73\u5747\u200b\u7edd\u5bf9\u8bef\u5dee\u200b\u3001\u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b\u6216\u200b\u5747\u200b\u65b9\u6839\u200b\u8bef\u5dee\u200b</li> <li>\u200b\u591a\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\uff1a\u200b\u4ea4\u53c9\u200b\u71b5\u200b</li> <li>\u200b\u4e8c\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\uff1a\u200b\u4e8c\u200b\u5206\u7c7b\u200b\u4ea4\u53c9\u200b\u71b5\u200b</li> </ul>"},{"location":"coding/machine-learning/#low-rank-adaptation","title":"Low Rank Adaptation","text":""},{"location":"coding/machine-learning/#m","title":"M","text":""},{"location":"coding/machine-learning/#markov-chain","title":"Markov Chain","text":""},{"location":"coding/machine-learning/#markov-chain-monte-carlo","title":"Markov Chain Monte Carlo","text":""},{"location":"coding/machine-learning/#markov-decision-process","title":"Markov Decision Process","text":""},{"location":"coding/machine-learning/#matrix-factorization","title":"Matrix Factorization","text":""},{"location":"coding/machine-learning/#maximum-likelihood-estimation","title":"Maximum Likelihood Estimation","text":""},{"location":"coding/machine-learning/#maximum-a-posteriori","title":"Maximum A Posteriori","text":""},{"location":"coding/machine-learning/#mean-absolute-error","title":"Mean Absolute Error","text":"<p>\u200b\u5e73\u5747\u200b\u7edd\u5bf9\u8bef\u5dee\u200b\uff08Mean Absolute Error, MAE\uff09\uff0c\u200b\u53c8\u79f0\u200bL1 Loss\u3002\u200b\u8ba1\u7b97\u200b\u9884\u6d4b\u503c\u200b\u4e0e\u200b\u771f\u5b9e\u200b\u503c\u200b\u4e4b\u95f4\u200b\u7684\u200b\u7edd\u5bf9\u200b\u5dee\u200b\u7684\u200b\u5747\u503c\u200b\u3002\u200b\u662f\u200b\u5728\u200b\u56de\u5f52\u200b\u4efb\u52a1\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u3002</p> \\[ \\begin{aligned} L(y, t) &amp;= \\frac{1}{2} \\sum_{i=1}^{n} |y_i - t_i| \\\\ \\frac{\\partial L}{\\partial y_i} &amp;= \\begin{cases} 1, &amp; y_i &gt; t_i \\\\ -1, &amp; y_i &lt; t_i \\\\ 0, &amp; y_i = t_i \\end{cases} \\end{aligned} \\] <p>\u200b\u5176\u4e2d\u200b\uff0c\\(y_i\\) \u200b\u662f\u200b\u6a21\u578b\u200b\u5bf9\u200b\u7b2c\u200b\\(i\\)\u200b\u4e2a\u200b\u6837\u672c\u200b\u7684\u200b\u9884\u6d4b\u503c\u200b\uff0c\\(t_i\\) \u200b\u662f\u200b\u7b2c\u200b\\(i\\)\u200b\u4e2a\u200b\u6837\u672c\u200b\u771f\u5b9e\u200b\u503c\u200b\uff0c\\(n\\) \u200b\u662f\u200b\u6837\u672c\u200b\u6570\u91cf\u200b\u3002</p>"},{"location":"coding/machine-learning/#mean-reciprocal-rank","title":"Mean Reciprocal Rank","text":"<p>\u200b\u5e73\u5747\u200b\u5012\u6570\u200b\u6392\u540d\u200b\uff08Mean Reciprocal Rank, MRR\uff09\u200b\u662f\u200b\u7528\u4e8e\u200b\u8bc4\u4f30\u200b\u6392\u5e8f\u200b\u6a21\u578b\u200b\u7684\u200b\u6307\u6807\u200b\u3002\u200b\u8861\u91cf\u200b\u7684\u200b\u662f\u200b\u6a21\u578b\u200b\u5728\u200b\u7ed9\u5b9a\u200b\u67e5\u8be2\u200b\u65f6\u200b\uff0c\u200b\u8fd4\u56de\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u76f8\u5173\u200b\u6587\u6863\u200b\u7684\u200b\u6392\u540d\u200b\u7684\u200b\u5012\u6570\u200b\u3002MRR\u200b\u7684\u200b\u8ba1\u7b97\u516c\u5f0f\u200b\u4e3a\u200b\uff1a</p> \\[ \\text{MRR} = \\frac{1}{n}\\sum_{i=1}^{n}\\frac{1}{\\text{rank}_i} \\] <p>\u200b\u5176\u4e2d\u200b\uff0c\\(n\\)\u200b\u662f\u200b\u67e5\u8be2\u200b\u7684\u200b\u6570\u91cf\u200b\uff0c\\(\\text{rank}_i\\)\u200b\u662f\u200b\u7b2c\u200b\\(i\\)\u200b\u4e2a\u200b\u67e5\u8be2\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u76f8\u5173\u200b\u6587\u6863\u200b\u7684\u200b\u6392\u540d\u200b\u3002MRR\u200b\u6307\u6807\u200b\u5f3a\u8c03\u200b\u76f8\u5173\u200b\u6587\u6863\u200b\u7684\u200b\u6392\u540d\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u9f13\u52b1\u200b\u6a21\u578b\u200b\u5c06\u200b\u76f8\u5173\u200b\u6587\u6863\u200b\u6392\u200b\u5728\u200b\u524d\u9762\u200b\u3002</p>"},{"location":"coding/machine-learning/#mean-squared-error","title":"Mean Squared Error","text":"<p>\u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b\uff08Mean Squared Error, MSE\uff09\uff0c\u200b\u53c8\u79f0\u200bL2 Loss\uff0c\u200b\u662f\u200b\u56de\u5f52\u200b\u4efb\u52a1\u200b\u4e2d\u200b\u5e38\u7528\u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u3002\u200b\u5b83\u200b\u8ba1\u7b97\u200b\u7684\u200b\u662f\u200b\u9884\u6d4b\u503c\u200b\u4e0e\u200b\u771f\u5b9e\u200b\u503c\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5e73\u65b9\u5dee\u200b\u7684\u200b\u5747\u503c\u200b\u3002</p> \\[ \\begin{aligned} L(y, t) &amp;= \\frac{1}{2} \\sum_{i=1}^{n} (y_i - t_i)^2 \\\\ \\frac{\\partial L}{\\partial y_i} &amp;= y_i - t_i \\end{aligned} \\] <p>\u200b\u5176\u4e2d\u200b\uff0c\\(y_i\\) \u200b\u662f\u200b\u6a21\u578b\u200b\u5bf9\u200b\u7b2c\u200b\\(i\\)\u200b\u4e2a\u200b\u6837\u672c\u200b\u7684\u200b\u9884\u6d4b\u503c\u200b\uff0c\\(t_i\\) \u200b\u662f\u200b\u7b2c\u200b\\(i\\)\u200b\u4e2a\u200b\u6837\u672c\u200b\u771f\u5b9e\u200b\u503c\u200b\uff0c\\(n\\) \u200b\u662f\u200b\u6837\u672c\u200b\u6570\u91cf\u200b\u3002</p> <p>\u200b\u6700\u5c0f\u200b\u4e8c\u200b\u4e58\u6cd5\u200b\u5373\u200b\u662f\u200b\u901a\u8fc7\u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b\u8fdb\u884c\u200b\u4f18\u5316\u200b\u7684\u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\u65b9\u6cd5\u200b\u3002</p>"},{"location":"coding/machine-learning/#meta-learning","title":"Meta Learning","text":"<p>\u200b\u5143\u200b\u5b66\u4e60\u200b\uff08Meta Learning\uff09\uff0c\u200b\u53c8\u200b\u79f0\u4e3a\u200b\u201c\u200b\u5b66\u4f1a\u200b\u5b66\u4e60\u200b\u201d\uff08Learning to Learn\uff09\uff0c\u200b\u662f\u200b\u4e00\u79cd\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u8303\u5f0f\u200b\u3002\u200b\u5143\u200b\u5b66\u4e60\u200b\u9488\u5bf9\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u6a21\u578b\u200b\u96be\u4ee5\u200b\u9002\u5e94\u200b\u65b0\u200b\u4efb\u52a1\u200b\u6216\u200b\u65b0\u200b\u573a\u666f\u200b\u7684\u200b\u95ee\u9898\u200b\u3002\u200b\u5176\u200b\u6838\u5fc3\u200b\u76ee\u6807\u200b\u662f\u200b\u8ba9\u200b\u6a21\u578b\u200b\u5177\u5907\u200b\u5feb\u901f\u200b\u9002\u5e94\u200b\u65b0\u200b\u4efb\u52a1\u200b\u6216\u200b\u65b0\u200b\u573a\u666f\u200b\u7684\u200b\u80fd\u529b\u200b\uff0c\u200b\u5c24\u5176\u200b\u662f\u200b\u5728\u200b\u6570\u636e\u200b\u7a00\u7f3a\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u3002\u200b\u901a\u8fc7\u200b\u5b66\u4e60\u200b\u591a\u4e2a\u200b\u4efb\u52a1\u200b\u4e2d\u200b\u7684\u200b\u5171\u6027\u200b\u77e5\u8bc6\u200b\uff08\u200b\u5143\u200b\u77e5\u8bc6\u200b\uff09\uff0c\u200b\u4f7f\u200b\u6a21\u578b\u200b\u5728\u200b\u9762\u5bf9\u200b\u65b0\u200b\u4efb\u52a1\u200b\u65f6\u4ec5\u200b\u9700\u200b\u5c11\u91cf\u200b\u6837\u672c\u200b\u5373\u53ef\u200b\u9ad8\u6548\u200b\u8c03\u6574\u200b\u53c2\u6570\u200b\u3002\u200b\u5143\u200b\u5b66\u4e60\u200b\u901a\u5e38\u200b\u5206\u4e3a\u200b\u5982\u4e0b\u200b\u4e09\u4e2a\u200b\u8303\u5f0f\u200b\uff1a</p> <ol> <li>Optimization-based Meta Learning\uff1a\u200b\u901a\u8fc7\u200b\u5728\u200b\u591a\u4e2a\u200b\u4efb\u52a1\u200b\u4e0a\u200b\u8fed\u4ee3\u200b\u4f18\u5316\u200b\u6a21\u578b\u200b\u53c2\u6570\u200b\uff0c\u200b\u4f7f\u200b\u6a21\u578b\u200b\u53ea\u200b\u9700\u8981\u200b\u5c11\u91cf\u200b\u7684\u200b\u8fed\u4ee3\u200b\u66f4\u65b0\u200b\uff0c\u200b\u5373\u200b\u5177\u5907\u200b\u9002\u5e94\u200b\u65b0\u200b\u4efb\u52a1\u200b\u7684\u200b\u80fd\u529b\u200b\u3002</li> <li>Memory-based Meta Learning\uff1a\u200b\u901a\u8fc7\u200b\u8bb0\u5fc6\u200b\u5386\u53f2\u200b\u4efb\u52a1\u200b\u7684\u200b\u4fe1\u606f\u200b\uff0c\u200b\u4f7f\u200b\u6a21\u578b\u200b\u5728\u200b\u9762\u5bf9\u200b\u65b0\u200b\u4efb\u52a1\u200b\u65f6\u200b\u80fd\u591f\u200b\u68c0\u7d22\u200b\u5229\u7528\u200b\u76f8\u5173\u200b\u5386\u53f2\u200b\u4efb\u52a1\u200b\u7684\u200b\u77e5\u8bc6\u200b\u8f85\u52a9\u200b\u9002\u5e94\u200b\u65b0\u200b\u7684\u200b\u4efb\u52a1\u200b\u3002</li> <li>Black-box Adaptation Meta Learning\uff1a\u200b\u5143\u200b\u6a21\u578b\u200b\u76f4\u63a5\u200b\u4e3a\u5b50\u200b\u4efb\u52a1\u200b\u7684\u200b\u6a21\u578b\u200b\u751f\u6210\u200b\u53c2\u6570\u200b\u3002</li> <li>Metric-based Meta Learning\uff1a\u200b\u901a\u8fc7\u200b\u5ea6\u91cf\u200b\u5b66\u4e60\u200b\u7684\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u5b66\u4e60\u200b\u4efb\u52a1\u200b\u4e4b\u95f4\u200b\u7684\u200b\u76f8\u4f3c\u6027\u200b\uff0c\u200b\u4ece\u800c\u200b\u5728\u200b\u65b0\u200b\u4efb\u52a1\u200b\u4e0a\u200b\u5feb\u901f\u200b\u9002\u5e94\u200b\u3002</li> </ol>"},{"location":"coding/machine-learning/#meteor","title":"METEOR","text":""},{"location":"coding/machine-learning/#metric","title":"Metric","text":""},{"location":"coding/machine-learning/#metroplis-hastings-sampling","title":"Metroplis-Hastings Sampling","text":""},{"location":"coding/machine-learning/#mixture-of-experts","title":"Mixture-of-Experts","text":""},{"location":"coding/machine-learning/#model-parallelism","title":"Model Parallelism","text":""},{"location":"coding/machine-learning/#model-pruning","title":"Model Pruning","text":""},{"location":"coding/machine-learning/#monte-carlo-sampling","title":"Monte Carlo Sampling","text":""},{"location":"coding/machine-learning/#multi-armed-bandit","title":"Multi-armed Bandit","text":""},{"location":"coding/machine-learning/#multi-head-attention","title":"Multi-Head Attention","text":""},{"location":"coding/machine-learning/#multi-head-latent-attention","title":"Multi-Head Latent Attention","text":""},{"location":"coding/machine-learning/#multi-layer-perceptron","title":"Multi-Layer Perceptron","text":""},{"location":"coding/machine-learning/#mutual-learning","title":"Mutual Learning","text":""},{"location":"coding/machine-learning/#n","title":"N","text":""},{"location":"coding/machine-learning/#naive-bayes","title":"Naive Bayes","text":""},{"location":"coding/machine-learning/#norm","title":"Norm","text":""},{"location":"coding/machine-learning/#normalization","title":"Normalization","text":""},{"location":"coding/machine-learning/#normalized-discounted-cumulated-gain","title":"Normalized Discounted Cumulated Gain","text":""},{"location":"coding/machine-learning/#o","title":"O","text":""},{"location":"coding/machine-learning/#offline","title":"Offline","text":""},{"location":"coding/machine-learning/#one-hot-encoding","title":"One-hot Encoding","text":""},{"location":"coding/machine-learning/#online","title":"Online","text":""},{"location":"coding/machine-learning/#ordinary-least-squares","title":"Ordinary Least Squares","text":""},{"location":"coding/machine-learning/#overfitting","title":"Overfitting","text":""},{"location":"coding/machine-learning/#overflow","title":"Overflow","text":""},{"location":"coding/machine-learning/#p","title":"P","text":""},{"location":"coding/machine-learning/#padding","title":"Padding","text":""},{"location":"coding/machine-learning/#parameter-efficient-fine-tuning","title":"Parameter Efficient Fine-Tuning","text":"<p>\u200b\u53c2\u6570\u200b\u9ad8\u6548\u200b\u5fae\u8c03\u200b\uff08Parameter Efficient Fine-Tuning\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u7528\u4e8e\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u7684\u200b\u5fae\u8c03\u200b\u65b9\u6cd5\u200b\u3002\u200b\u4f20\u7edf\u200b\u7684\u200b\u5fae\u8c03\u200b\u65b9\u6cd5\u200b\u662f\u200b\u76f4\u63a5\u200b\u5728\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u5206\u7c7b\u200b\u5934\u200b\uff0c\u200b\u7136\u540e\u200b\u5728\u200b\u76ee\u6807\u200b\u4efb\u52a1\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u7aef\u5230\u200b\u7aef\u7684\u200b\u5fae\u8c03\u200b\u3002\u200b\u6b64\u7c7b\u200b\u5fae\u8c03\u200b\u65b9\u6cd5\u200b\u5728\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u53c2\u6570\u200b\u8f83\u591a\u65f6\u200b\uff0c\u200b\u7531\u4e8e\u200b\u4f18\u5316\u200b\u5668\u200b\u9700\u8981\u200b\u4fdd\u5b58\u200b\u6240\u6709\u200b\u8bad\u7ec3\u200b\u53c2\u6570\u200b\u7684\u200b\u4e2d\u95f4\u72b6\u6001\u200b\uff0c\u200b\u8bad\u7ec3\u200b\u7684\u200b\u7a7a\u95f4\u200b\u548c\u200b\u65f6\u95f4\u200b\u5f00\u9500\u200b\u8f83\u5927\u200b\u3002\u200b\u4e3a\u200b\u89e3\u51b3\u200b\u8fd9\u4e00\u200b\u95ee\u9898\u200b\uff0c\u200b\u51fa\u73b0\u200b\u4e86\u200b\u53c2\u6570\u200b\u9ad8\u6548\u200b\u5fae\u8c03\u200b\u65b9\u6cd5\u200b\u3002\u200b\u8fd9\u200b\u7c7b\u200b\u65b9\u6cd5\u200b\u5728\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u5c0f\u200b\u7684\u200b\u53c2\u6570\u200b\u96c6\u200b\uff0c\u200b\u7136\u540e\u200b\u9501\u5b9a\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u53ea\u200b\u8bad\u7ec3\u200b\u65b0\u200b\u6dfb\u52a0\u200b\u7684\u200b\u53c2\u6570\u200b\u96c6\u200b\u3002\u200b\u901a\u8fc7\u200b\u51cf\u5c11\u200b\u9700\u8981\u200b\u5fae\u8c03\u200b\u7684\u200b\u53c2\u6570\u200b\u6570\u91cf\u200b\uff0c\u200b\u53c2\u6570\u200b\u9ad8\u6548\u200b\u5fae\u8c03\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u5728\u200b\u5229\u7528\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u200b\uff0c\u200b\u51cf\u5c11\u200b\u5fae\u8c03\u200b\u7684\u200b\u8ba1\u7b97\u200b\u91cf\u200b\u548c\u200b\u5b58\u50a8\u200b\u9700\u6c42\u200b\u3002</p> <p>\u200b\u5e38\u89c1\u200b\u7684\u200b\u53c2\u6570\u200b\u9ad8\u6548\u200b\u5fae\u8c03\u200b\u65b9\u6cd5\u200b\u6709\u200bLoRA\u3001Adaptor Tuning\u200b\u7b49\u200b\u3002</p>"},{"location":"coding/machine-learning/#pearson-correlation-coefficient","title":"Pearson Correlation Coefficient","text":""},{"location":"coding/machine-learning/#perplexity","title":"Perplexity","text":""},{"location":"coding/machine-learning/#policy","title":"Policy","text":""},{"location":"coding/machine-learning/#policy-gradient","title":"Policy Gradient","text":""},{"location":"coding/machine-learning/#pooling","title":"Pooling","text":""},{"location":"coding/machine-learning/#positional-embedding","title":"Positional Embedding","text":""},{"location":"coding/machine-learning/#precision","title":"Precision","text":""},{"location":"coding/machine-learning/#prefix-decoder","title":"Prefix Decoder","text":""},{"location":"coding/machine-learning/#prefix-tuning","title":"Prefix Tuning","text":""},{"location":"coding/machine-learning/#pretrained-model","title":"Pretrained Model","text":""},{"location":"coding/machine-learning/#prompt","title":"Prompt","text":""},{"location":"coding/machine-learning/#prompt-tuning","title":"Prompt Tuning","text":""},{"location":"coding/machine-learning/#proximal-preference-optimization","title":"Proximal Preference Optimization","text":""},{"location":"coding/machine-learning/#q","title":"Q","text":""},{"location":"coding/machine-learning/#quantization","title":"Quantization","text":""},{"location":"coding/machine-learning/#r","title":"R","text":""},{"location":"coding/machine-learning/#random-forest","title":"Random Forest","text":""},{"location":"coding/machine-learning/#recall-metric","title":"Recall (Metric)","text":""},{"location":"coding/machine-learning/#recall-recommender-system","title":"Recall (Recommender System)","text":""},{"location":"coding/machine-learning/#recall-oriented-understudy-for-gisting-evaluation","title":"Recall-Oriented Understudy for Gisting Evaluation","text":""},{"location":"coding/machine-learning/#recommender-system","title":"Recommender System","text":""},{"location":"coding/machine-learning/#rectified-linear-unit","title":"Rectified Linear Unit","text":"<p>ReLU\uff08Rectified Linear Unit\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u5e38\u7528\u200b\u7684\u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b\uff0c\u200b\u7531\u200bHinton\u200b\u7b49\u200b\u4eba\u200b\u5728\u200b2010\u200b\u5e74\u200b\u63d0\u51fa\u200b<sup>4</sup>\u3002ReLU\u200b\u51fd\u6570\u200b\u5c06\u200b\u8f93\u5165\u200b\u503c\u200b\u5c0f\u4e8e\u200b0\u200b\u7684\u200b\u90e8\u5206\u200b\u7f6e\u200b\u4e3a\u200b0\uff0c\u200b\u5927\u4e8e\u200b0\u200b\u7684\u200b\u90e8\u5206\u200b\u4fdd\u6301\u200b\u4e0d\u53d8\u200b\u3002</p> \\[ \\begin{aligned} \\text{ReLU}(x) &amp;= \\max(0, x) \\\\ \\text{ReLU}'(x) &amp;= \\begin{cases} 1, &amp; x &gt; 0 \\\\ 0, &amp; x \\leq 0 \\end{cases} \\end{aligned} \\]"},{"location":"coding/machine-learning/#recurrent-neural-network","title":"Recurrent Neural Network","text":""},{"location":"coding/machine-learning/#residual-regression","title":"Residual (Regression)","text":""},{"location":"coding/machine-learning/#residual-connection","title":"Residual Connection","text":""},{"location":"coding/machine-learning/#reward","title":"Reward","text":""},{"location":"coding/machine-learning/#regression","title":"Regression","text":""},{"location":"coding/machine-learning/#regularization","title":"Regularization","text":""},{"location":"coding/machine-learning/#reinforcement-learning","title":"Reinforcement Learning","text":""},{"location":"coding/machine-learning/#reinforcement-learning-from-human-feedback","title":"Reinforcement Learning from Human Feedback","text":""},{"location":"coding/machine-learning/#rejection-sampling","title":"Rejection Sampling","text":""},{"location":"coding/machine-learning/#representation-learning","title":"Representation Learning","text":""},{"location":"coding/machine-learning/#retrieval-augmented-generation","title":"Retrieval Augmented Generation","text":""},{"location":"coding/machine-learning/#ridge-regression","title":"Ridge Regression","text":""},{"location":"coding/machine-learning/#roc-curve","title":"ROC Curve","text":"<p>ROC\u200b\u66f2\u7ebf\u200b\uff08ROC Curve\uff0c\u200b\u5168\u200b\u79f0\u4e3a\u200bReceiver operating characteristic curve\uff0c\u200b\u662f\u200b\u4e00\u4e2a\u200b\u53cd\u6620\u200b\u4e8c\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\u6027\u80fd\u200b\u7684\u200b\u66f2\u7ebf\u200b\u3002\u200b\u5728\u200b\u4e8c\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\u4e2d\u200b\uff0c\u200b\u6a21\u578b\u200b\u901a\u5e38\u200b\u8f93\u51fa\u200b\u6837\u672c\u200b\u4e3a\u200b\u6b63\u4f8b\u200b\u7684\u200b\u6982\u7387\u200b\\(P(y = 1 | x)\\)\uff0c\u200b\u7531\u200b\u5916\u90e8\u200b\u8bbe\u5b9a\u200b\u4e00\u4e2a\u200b\u9608\u503c\u200b\\(t\\)\uff0c\u200b\u89c4\u5b9a\u200b\u6982\u7387\u200b\u9ad8\u4e8e\u200b\\(t\\)\u200b\u7684\u200b\u6837\u672c\u200b\u4e3a\u200b\u6b63\u4f8b\u200b\uff0c\u200b\u4f4e\u4e8e\u200b\\(t\\)\u200b\u7684\u200b\u6837\u672c\u200b\u4e3a\u200b\u8d1f\u4f8b\u200b\u3002\u200b\u9608\u503c\u200b\\(t\\)\u200b\u53ef\u4ee5\u200b\u5728\u200b\u533a\u95f4\u200b\\([0, 1]\\)\u200b\u4e0a\u200b\u81ea\u7531\u9009\u62e9\u200b\uff0c\u200b\u5728\u200b\u9009\u62e9\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u7b2c\u4e00\u7c7b\u200b\u9519\u8bef\u200b\u548c\u200b\u7b2c\u4e8c\u7c7b\u200b\u9519\u8bef\u200b\u4f1a\u200b\u76f8\u7ee7\u200b\u51fa\u73b0\u200b\u3002\u200b\u5b9a\u4e49\u200b\u771f\u6b63\u200b\u4f8b\u7387\u200b\uff08True Positive Rate, TPR\uff09\u200b\u4e3a\u200b\u6240\u6709\u200b\u6b63\u4f8b\u200b\uff08TP+FN\uff09\u200b\u4e2d\u200b\u88ab\u200b\u9884\u6d4b\u200b\u4e3a\u200b\u6b63\u4f8b\u200b\uff08TP\uff09\u200b\u7684\u200b\u6bd4\u4f8b\u200b\uff0c\u200b\u5047\u6b63\u200b\u4f8b\u7387\u200b\uff08False Positive Rate, FPR\uff09\u200b\u4e3a\u200b\u6240\u6709\u200b\u8d1f\u4f8b\u200b\uff08FP+TN\uff09\u200b\u4e2d\u200b\u88ab\u200b\u9884\u6d4b\u200b\u4e3a\u200b\u6b63\u4f8b\u200b\uff08FP\uff09\u200b\u7684\u200b\u6bd4\u4f8b\u200b\u3002ROC\u200b\u66f2\u7ebf\u200b\u5373\u200b\u4e3a\u200b\u5728\u200b\\([0, 1]\\)\u200b\u4e0a\u200b\u79fb\u52a8\u200b\uff0c\u200b\u4ee5\u200bTPR\u200b\u4e3a\u200b\\(y\\)\u200b\u8f74\u200b\u3001FPR\u200b\u4e3a\u200b\\(x\\)\u200b\u8f74\u200b\uff0c\u200b\u4f5c\u51fa\u200b\u7684\u200b\u66f2\u7ebf\u200b\u3002</p> <p>ROC\u200b\u66f2\u7ebf\u200b\u5f00\u59cb\u200b\u4e8e\u200b\\((0, 0)\\)\uff0c\u200b\u7ed3\u675f\u200b\u4e8e\u200b\\((1, 1)\\)\u3002\u200b\u76f4\u7ebf\u200b\\(y = x\\)\u200b\u8868\u793a\u200b\u6a21\u578b\u200b\u7684\u200b\u9884\u6d4b\u200b\u662f\u200b\u968f\u673a\u200b\u7684\u200b\uff0c\u200b\u66f2\u7ebf\u200b\u4e2d\u79bb\u200b\u5de6\u4e0a\u89d2\u200b\u8d8a\u8fd1\u200b\u7684\u200b\u70b9\u200b\u9884\u6d4b\u200b\u51c6\u786e\u7387\u200b\u8d8a\u9ad8\u200b\u3002\u200b\u6709\u200b\u9884\u6d4b\u200b\u6548\u679c\u200b\u7684\u200b\u6a21\u578b\u200b\uff0c\u200b\u5176\u200bROC\u200b\u66f2\u7ebf\u200b\u9ad8\u4e8e\u200b\\(y = x\\)\uff1b\u200b\u6298\u7ebf\u200b\\((0, 0) - (0, 1) - (1, 1)\\)\u200b\u8868\u793a\u200b\u6a21\u578b\u200b\u80fd\u591f\u200b\u5b8c\u7f8e\u200b\u5206\u7c7b\u200b\u3002</p> <p>ROC\u200b\u66f2\u7ebf\u200b\u4e0b\u200b\u7684\u200b\u9762\u79ef\u200b\u79f0\u4e3a\u200bAUC\uff0c\u200b\u662f\u200b\u7528\u4e8e\u200b\u8861\u91cf\u200b\u5206\u7c7b\u5668\u200b\u5206\u7c7b\u200b\u6548\u679c\u200b\u7684\u200b\u8bc4\u4ef7\u200b\u6307\u6807\u200b\u3002</p>"},{"location":"coding/machine-learning/#root-mean-squared-error","title":"Root Mean Squared Error","text":""},{"location":"coding/machine-learning/#recall-oriented-understudy-for-gisting-evaluation_1","title":"Recall-Oriented Understudy for Gisting Evaluation","text":""},{"location":"coding/machine-learning/#s","title":"S","text":""},{"location":"coding/machine-learning/#selection-bias","title":"Selection Bias","text":""},{"location":"coding/machine-learning/#semi-supervised-learning","title":"Semi-Supervised Learning","text":""},{"location":"coding/machine-learning/#self-attention","title":"Self Attention","text":""},{"location":"coding/machine-learning/#self-supervised-learning","title":"Self-Supervised Learning","text":""},{"location":"coding/machine-learning/#sequence-mask","title":"Sequence Mask","text":""},{"location":"coding/machine-learning/#sequence-to-sequence","title":"Sequence-to-Sequence","text":""},{"location":"coding/machine-learning/#sigmoid-function","title":"Sigmoid Function","text":"<p>Sigmoid\u200b\u51fd\u6570\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5c06\u200b\u8f93\u5165\u200b\u503c\u200b\u538b\u7f29\u200b\u5230\u200b0\u200b\u5230\u200b1\u200b\u4e4b\u95f4\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u200b\\(\\sigma\\)\u200b\u8868\u793a\u200b\u3002Sigmoid\u200b\u51fd\u6570\u200b\u5e38\u7528\u200b\u4e8e\u200b\u4e8c\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\u4e2d\u200b\uff0c\u200b\u5c06\u200b\u8f93\u51fa\u200b\u503c\u200b\u6620\u5c04\u200b\u5230\u200b\u6982\u7387\u200b\u7a7a\u95f4\u200b\u3002Sigmoid\u200b\u4e5f\u200b\u5e38\u200b\u4f5c\u4e3a\u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5f15\u5165\u200b\u975e\u7ebf\u6027\u200b\u56e0\u7d20\u200b\u3002</p> \\[ \\begin{aligned} \\sigma(x) &amp;= \\frac{1}{1 + e^{-x}} \\\\ \\sigma'(x) &amp;= \\sigma(x)(1 - \\sigma(x)) \\end{aligned} \\] <p>Sigmoid\u200b\u51fd\u6570\u200b\u5728\u200b\u8f93\u5165\u200b\u503c\u200b\u8f83\u5927\u200b\u6216\u200b\u8f83\u200b\u5c0f\u65f6\u200b\uff0c\u200b\u68af\u5ea6\u200b\u4f1a\u200b\u63a5\u8fd1\u200b\u4e8e\u200b0\uff0c\u200b\u5bfc\u81f4\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b\u95ee\u9898\u200b\u3002</p>"},{"location":"coding/machine-learning/#simulated-annealing","title":"Simulated Annealing","text":""},{"location":"coding/machine-learning/#softmax-function","title":"Softmax Function","text":"<p>Softmax\u200b\u51fd\u6570\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5c06\u200b\u8f93\u5165\u200b\u503c\u200b\u538b\u7f29\u200b\u5230\u200b0\u200b\u5230\u200b1\u200b\u4e4b\u95f4\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u5e38\u7528\u200b\u4e8e\u200b\u591a\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\u4e2d\u200b\uff0c\u200b\u5c06\u200b\u6a21\u578b\u200b\u5728\u200b\u591a\u4e2a\u200b\u5206\u7c7b\u200b\u4e0a\u200b\u7684\u200b\u9884\u6d4b\u200b\u8bc4\u5206\u200b\u6620\u5c04\u200b\u5230\u200b\u5728\u200b\u591a\u4e2a\u200b\u5206\u7c7b\u200b\u4e0a\u200b\u7684\u200b\u6982\u7387\u5206\u5e03\u200b\uff0c\u200b\u6240\u6709\u200b\u7c7b\u522b\u200b\u7684\u200b\u6982\u7387\u200b\u4e4b\u200b\u548c\u200b\u4e3a\u200b1\u3002</p> \\[ \\begin{aligned} \\text{softmax}(\\bsz)_i &amp;= \\frac{e^{z_i}}{\\sum_{j=1}^n e^{z_j}} \\\\ \\text{softmax}'(\\bsz)_i &amp;= \\text{softmax}(\\bsz)_i(1 - \\text{softmax}(\\bsz)_i) \\end{aligned} \\] <p>\u200b\u76f8\u5bf9\u200b\u5e94\u200b\u7684\u200b\uff0csoftmin\u200b\u51fd\u6570\u200b\u662f\u200bsoftmax\u200b\u51fd\u6570\u200b\u7684\u200b\u5bf9\u79f0\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u6700\u5c0f\u5316\u200b\u8f93\u51fa\u200b\u503c\u200b\uff0c\\(\\text{softmin}(\\bsz) = \\text{softmax}(-\\bsz)\\)\u3002</p> <p>Softmax\u200b\u51fd\u6570\u200b\u5728\u200b\u8f93\u5165\u200b\u503c\u200b\u8f83\u5927\u200b\u6216\u200b\u8f83\u200b\u5c0f\u65f6\u200b\uff0c\u200b\u68af\u5ea6\u200b\u4f1a\u200b\u63a5\u8fd1\u200b\u4e8e\u200b0\uff0c\u200b\u5bfc\u81f4\u200b\u68af\u5ea6\u200b\u6d88\u5931\u200b\u95ee\u9898\u200b\u3002\u200b\u53e6\u5916\u200b\uff0c\u200b\u8f93\u5165\u200b\u503c\u8fc7\u200b\u5927\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u4e0a\u6ea2\u200b\u95ee\u9898\u200b\u3002</p>"},{"location":"coding/machine-learning/#speculative-sampling","title":"Speculative Sampling","text":""},{"location":"coding/machine-learning/#state-of-the-art","title":"State-of-the-Art","text":"<p>State of the Art\u200b\u6307\u200b\u5f53\u524d\u200b\u6700\u200b\u5148\u8fdb\u200b\u7684\u200b\u6a21\u578b\u200b\u6216\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u80fd\u591f\u200b\u5728\u200b\u7279\u5b9a\u200b\u7ed9\u5b9a\u200b\u7684\u200b\u4efb\u52a1\u200b\u6216\u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u53d6\u5f97\u200b\u6700\u597d\u200b\u7684\u200b\u6027\u80fd\u200b\u3002</p>"},{"location":"coding/machine-learning/#stochastic-gradient-descent","title":"Stochastic Gradient Descent","text":""},{"location":"coding/machine-learning/#supervised-fine-tuning","title":"Supervised Fine-Tuning","text":""},{"location":"coding/machine-learning/#supervised-learning","title":"Supervised Learning","text":""},{"location":"coding/machine-learning/#support-vector-machine","title":"Support Vector Machine","text":""},{"location":"coding/machine-learning/#t","title":"T","text":""},{"location":"coding/machine-learning/#term-frequency-inverse-document-frequency","title":"Term Frequency-Inverse Document Frequency","text":""},{"location":"coding/machine-learning/#token","title":"Token","text":""},{"location":"coding/machine-learning/#topic-model","title":"Topic Model","text":""},{"location":"coding/machine-learning/#transfer-learning","title":"Transfer Learning","text":""},{"location":"coding/machine-learning/#transformer","title":"Transformer","text":""},{"location":"coding/machine-learning/#type-i-error","title":"Type-I Error","text":"<p>\u200b\u7b2c\u4e00\u7c7b\u200b\u9519\u8bef\u200b\uff08Type-I Error\uff09\u200b\u6307\u200b\u7edf\u8ba1\u200b\u6a21\u578b\u200b\u6216\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u6a21\u578b\u200b\u9519\u8bef\u200b\u5730\u200b\u5c06\u200b\u8d1f\u4f8b\u200b\u89c6\u4e3a\u200b\u6b63\u4f8b\u200b\uff0c\u200b\u6216\u8005\u200b\u9519\u8bef\u200b\u5730\u200b\u62d2\u7edd\u200b\u539f\u200b\u5047\u8bbe\u200b\uff0c\u200b\u5373\u200bFalse Positive (FP)\u3002</p>"},{"location":"coding/machine-learning/#type-ii-error","title":"Type-II Error","text":"<p>\u200b\u7b2c\u4e8c\u7c7b\u200b\u9519\u8bef\u200b\uff08Type-II Error\uff09\u200b\u6307\u200b\u7edf\u8ba1\u200b\u6a21\u578b\u200b\u6216\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u6a21\u578b\u200b\u9519\u8bef\u200b\u5730\u200b\u5c06\u200b\u6b63\u4f8b\u200b\u89c6\u4e3a\u200b\u8d1f\u4f8b\u200b\uff0c\u200b\u6216\u8005\u200b\u9519\u8bef\u200b\u5730\u200b\u63a5\u53d7\u200b\u539f\u200b\u5047\u8bbe\u200b\uff0c\u200b\u5373\u200bFalse Negative (FN)</p>"},{"location":"coding/machine-learning/#u","title":"U","text":""},{"location":"coding/machine-learning/#unsupervised-learning","title":"Unsupervised Learning","text":""},{"location":"coding/machine-learning/#v","title":"V","text":""},{"location":"coding/machine-learning/#value-function","title":"Value Function","text":""},{"location":"coding/machine-learning/#variational-autoencoder","title":"Variational Autoencoder","text":"<p>\u200b\u76f8\u5173\u200b\u4e3b\u9898\u200b<sup>6</sup>\uff1a</p> <ul> <li>Autoencoder</li> </ul>"},{"location":"coding/machine-learning/#variational-distribution","title":"Variational Distribution","text":""},{"location":"coding/machine-learning/#vector-quantization","title":"Vector Quantization","text":""},{"location":"coding/machine-learning/#w","title":"W","text":""},{"location":"coding/machine-learning/#wasserstein-distance","title":"Wasserstein Distance","text":""},{"location":"coding/machine-learning/#x","title":"X","text":""},{"location":"coding/machine-learning/#xgboost","title":"XGBoost","text":""},{"location":"coding/machine-learning/#z","title":"Z","text":""},{"location":"coding/machine-learning/#zero","title":"ZeRO","text":""},{"location":"coding/machine-learning/#zero-shot-learning","title":"Zero-Shot Learning","text":""},{"location":"coding/machine-learning/#zero-shot-prompting","title":"Zero-Shot Prompting","text":""},{"location":"coding/machine-learning/#zero-sum-game","title":"Zero Sum Game","text":"<ol> <li> <p>M. Mirza and S. Osindero, \u201cConditional generative adversarial nets,\u201d 11 2014.\u00a0\u21a9</p> </li> <li> <p>I. Goodfellow, J. Pouget-Abadie, M. Mirza, B. Xu, D. Warde-Farley, S. Ozair, A. Courville, and Y. Ben- gio, \u201cGenerative adversarial nets,\u201d in Advances in Neural Information Processing Systems (Z. Ghahra- mani, M. Welling, C. Cortes, N. Lawrence, and K. Weinberger, eds.), vol. 27, Curran Associates, Inc., 2014.\u00a0\u21a9</p> </li> <li> <p>Aidan Hogan, Eva Blomqvist, Michael Cochez, Claudia D\u2019amato, Gerard De Melo, Claudio Gutierrez, Sabrina Kirrane, Jos\u00e9 Emilio Labra Gayo, Roberto Navigli, Sebastian Neumaier, Axel-Cyrille Ngonga Ngomo, Axel Polleres, Sabbir M. Rashid, Anisa Rula, Lukas Schmelzeisen, Juan Sequeda, Steffen Staab, and Antoine Zimmermann. 2021. Knowledge Graphs. ACM Comput. Surv. 54, 4, Article 71 (May 2022), 37 pages. https://doi.org/10.1145/3447772 \u21a9</p> </li> <li> <p>V. Nair and G. E. Hinton, \u201cRectified linear units improve restricted boltzmann machines,\u201d in Proceedings of the 27<sup>th</sup> international conference on machine learning (ICML-10), pp. 807\u2013814, 2010.\u00a0\u21a9</p> </li> <li> <p>A. Vaswani, N. Shazeer, N. Parmar, J. Uszkoreit, L. Jones, A. N. Gomez, L. Kaiser, and I. Polosukhin, \u201cAttention is all you need,\u201d 06 2017.\u00a0\u21a9\u21a9</p> </li> <li> <p>D. P. Kingma and M. Welling, \u201cAn introduction to variational autoencoders,\u201d Foundations and Trends in Machine Learning: Vol. 12 (2019): No. 4, pp 307-392, 06 2019.\u00a0\u21a9</p> </li> <li> <p>M. Arjovsky, S. Chintala, and L. Bottou, \u201cWasserstein gan,\u201d 01 2017.\u00a0\u21a9</p> </li> <li> <p>I. Gulrajani, F. Ahmed, M. Arjovsky, V. Dumoulin, and A. Courville, \u201cImproved training of wasserstein gans,\u201d 04 2017.\u00a0\u21a9</p> </li> </ol>"},{"location":"coding/machine-learning/activation/","title":"\u6fc0\u6d3b\u200b\u51fd\u6570","text":"<p>\u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b\u662f\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u4e2d\u200b\u7528\u4e8e\u200b\u5f15\u5165\u200b\u975e\u7ebf\u6027\u200b\u56e0\u7d20\u200b\u7684\u200b\u51fd\u6570\u200b\u3002\u200b\u5e38\u7528\u200b\u7684\u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b\u6709\u200b\u5982\u4e0b\u200b\u51e0\u79cd\u200b\uff1a</p>"},{"location":"coding/machine-learning/activation/#sigmoid","title":"Sigmoid \u200b\u51fd\u6570","text":"<p>Sigmoid\u200b\u51fd\u6570\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5c06\u200b\u8f93\u5165\u200b\u503c\u200b\u538b\u7f29\u200b\u5230\u200b0\u200b\u5230\u200b1\u200b\u4e4b\u95f4\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u5e38\u7528\u200b\\(\\sigma\\)\u200b\u8868\u793a\u200b\u3002Sigmoid\u200b\u51fd\u6570\u200b\u5e38\u7528\u200b\u4e8e\u200b\u4e8c\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\u4e2d\u200b\uff0c\u200b\u5c06\u200b\u8f93\u51fa\u200b\u503c\u200b\u6620\u5c04\u200b\u5230\u200b\u6982\u7387\u200b\u7a7a\u95f4\u200b\u3002</p> \\[ \\begin{aligned} \\sigma(x) &amp;= \\frac{1}{1 + e^{-x}} \\\\ \\sigma'(x) &amp;= \\sigma(x)(1 - \\sigma(x)) \\end{aligned} \\] <pre><code>def sigmoid(x: torch.Tensor) -&gt; torch.Tensor:\n    return 1 / (1 + torch.exp(-x))\n\nclass Sigmoid(torch.nn.Module):\n    def __init__(self):\n        super(Sigmoid, self).__init__()\n\n    def forward(self, x: torch.Tensor) -&gt; torch.Tensor:\n        return sigmoid(x)\n</code></pre>"},{"location":"coding/machine-learning/activation/#softmax","title":"Softmax \u200b\u51fd\u6570","text":"<p>Softmax\u200b\u51fd\u6570\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5c06\u200b\u8f93\u5165\u200b\u503c\u200b\u538b\u7f29\u200b\u5230\u200b0\u200b\u5230\u200b1\u200b\u4e4b\u95f4\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u5e38\u7528\u200b\u4e8e\u200b\u591a\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\u4e2d\u200b\uff0c\u200b\u5c06\u200b\u591a\u4e2a\u200b\u5206\u7c7b\u200b\u4e0a\u200b\u8f93\u51fa\u200b\u503c\u200b\u6620\u5c04\u200b\u5230\u200b\u6982\u7387\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u6240\u6709\u200b\u7c7b\u522b\u200b\u7684\u200b\u6982\u7387\u200b\u4e4b\u200b\u548c\u200b\u4e3a\u200b1\u3002</p> \\[ \\begin{aligned} \\text{softmax}(\\bsz)_i &amp;= \\frac{e^{z_i}}{\\sum_{j=1}^n e^{z_j}} \\\\ \\text{softmax}'(\\bsz)_i &amp;= \\text{softmax}(\\bsz)_i(1 - \\text{softmax}(\\bsz)_i) \\end{aligned} \\] <pre><code>def softmax(x: torch.Tensor, dim: int = -1) -&gt; torch.Tensor:\n    return torch.exp(x) / torch.exp(x).sum(dim=dim, keepdim=True)\n\nclass Softmax(torch.nn.Module):\n    def __init__(self, dim: int = -1):\n        super(Softmax, self).__init__()\n        self.dim = dim\n\n    def forward(self, x: torch.Tensor) -&gt; torch.Tensor:\n        return softmax(x, dim=self.dim)\n</code></pre> <p>\u200b\u76f8\u5bf9\u200b\u5e94\u200b\u7684\u200b\uff0csoftmin\u200b\u51fd\u6570\u200b\u662f\u200bsoftmax\u200b\u51fd\u6570\u200b\u7684\u200b\u5bf9\u79f0\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u6700\u5c0f\u5316\u200b\u8f93\u51fa\u200b\u503c\u200b\uff0c\\(\\text{softmin}(\\bsz) = \\text{softmax}(-\\bsz)\\)\u3002</p>"},{"location":"coding/machine-learning/attention/","title":"\u6ce8\u610f\u529b\u200b\u673a\u5236","text":""},{"location":"coding/machine-learning/attention/#_2","title":"\u5e8f\u5217\u200b\u5efa\u6a21","text":"<p>\u200b\u8bed\u8a00\u200b\u6a21\u578b\u200b\u662f\u200b\u4e00\u7c7b\u200b\u5e8f\u5217\u200b\u6a21\u578b\u200b\uff0c\u200b\u5176\u200b\u76ee\u6807\u200b\u662f\u200b\u5bf9\u200b\u7ed9\u5b9a\u200b\u7684\u200b\u5e8f\u5217\u200b\u5efa\u6a21\u200b\uff0c\u200b\u5373\u200b\u5bf9\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u4f4d\u7f6e\u200b\u9884\u6d4b\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u6982\u7387\u200b\u3002\u200b\u6587\u672c\u200b\u9996\u5148\u200b\u901a\u8fc7\u200b\u5206\u8bcd\u200b\uff0c\u200b\u83b7\u5f97\u200b\u5bf9\u5e94\u200b\u7684\u200b\u79bb\u6563\u200b\u7b26\u53f7\u200b\uff08token\uff09\uff0c\u200b\u7136\u540e\u200b\u7ecf\u8fc7\u200b\u5d4c\u5165\u200b\u5c42\u200b\uff08embedding layer\uff09\u200b\u5c06\u200b\u7b26\u53f7\u200b\u6620\u5c04\u200b\u5230\u200b\\(D\\)\u200b\u7ef4\u200b\u5411\u91cf\u200b\u7a7a\u95f4\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u5e8f\u5217\u200b\u5efa\u6a21\u200b\u7684\u200b\u8f93\u5165\u200b\u662f\u200b\u4e00\u4e2a\u200b\\(N\\times L\\times D\\)\u200b\u7684\u200b\u5f20\u91cf\u200b\uff0c\u200b\u5176\u4e2d\u200b\\(N\\)\u200b\u662f\u200bbatch size\uff0c\\(L\\)\u200b\u662f\u200b\u5e8f\u5217\u200b\u957f\u5ea6\u200b\uff0c\\(D\\)\u200b\u662f\u200b\u5d4c\u5165\u200b\u7ef4\u5ea6\u200b\u3002</p>"},{"location":"coding/machine-learning/attention/#transformer","title":"Transformer","text":"<p>Transformer\u200b\u7531\u200bVaswani\u200b\u7b49\u200b\u4eba\u200b\u5728\u200b2017\u200b\u5e74\u200b\u63d0\u51fa\u200b\uff0c\u200b\u5176\u200b\u6838\u5fc3\u601d\u60f3\u200b\u662f\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\uff0c\u200b\u5373\u200b\u901a\u8fc7\u200b\u67e5\u8be2\u200b\u3001\u200b\u952e\u200b\u7684\u200b\u5339\u914d\u200b\u5f97\u200b\u5206\u4e3a\u200b\u503c\u200b\u5206\u914d\u200b\u6743\u91cd\u200b\uff0c\u200b\u4ece\u800c\u200b\u5b9e\u73b0\u200b\u5bf9\u200b\u5e8f\u5217\u200b\u7684\u200b\u5efa\u6a21\u200b\u3002\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u7684\u200b\u6570\u5b66\u200b\u8868\u8fbe\u200b\u4e3a\u200b\uff1a</p> \\[ \\text{Attention}(Q, K, V) = \\text{softmax}\\left(\\frac{\\bsQ\\bsK^\\top}{\\sqrt{d_k}}\\right)\\bsV \\] <p>\u200b\u81ea\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u6307\u200b\u7684\u200b\u662f\u200b\u67e5\u8be2\u200b\u3001\u200b\u952e\u548c\u503c\u200b\u90fd\u200b\u6765\u81ea\u200b\u540c\u4e00\u4e2a\u200b\u5e8f\u5217\u200b\u3002\u200b\u5728\u200b\u5b9e\u73b0\u200b\u4e2d\u200b\uff0c\u200b\u8f93\u5165\u200b\u5e8f\u5217\u200b\\(\\bsx\\)\u200b\u5206\u522b\u200b\u7ecf\u8fc7\u200b\u4e09\u7ec4\u200b\u7ebf\u6027\u53d8\u6362\u200b\\(\\bsW^Q, \\bsW^K, \\bsW^V\\)\u200b\u5f97\u5230\u200b\u67e5\u8be2\u200b\\(\\bsQ\\)\u3001\u200b\u952e\u200b\\(\\bsK\\)\u200b\u548c\u200b\u503c\u200b\\(\\bsV\\)\uff0c\u200b\u7136\u540e\u200b\u8ba1\u7b97\u200b\u6ce8\u610f\u529b\u200b\u5f97\u5206\u200b\uff0c\u200b\u6700\u540e\u200b\u901a\u8fc7\u200b\u503c\u200b\u7684\u200b\u52a0\u6743\u200b\u6c42\u548c\u200b\u5f97\u5230\u200b\u8f93\u51fa\u200b\u3002\u200b\u4ea4\u53c9\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u6307\u200b\u67e5\u8be2\u200b\u548c\u200b</p> <p>\u200b\u4e3a\u4ec0\u4e48\u200b\u9700\u8981\u200b\u7ebf\u6027\u53d8\u6362\u200b</p> <p>\u200b\u7ebf\u6027\u53d8\u6362\u200b\u7684\u200b\u76ee\u7684\u200b\u662f\u200b\u5c06\u200b\u8f93\u5165\u200b\u5e8f\u5217\u200b\u6620\u5c04\u200b\u5230\u200b\u4e0d\u540c\u200b\u7684\u200b\u8bed\u4e49\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u53e6\u5916\u200b\u4e00\u65b9\u9762\u200b\u4e5f\u200b\u4f7f\u5f97\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u4e0d\u518d\u200b\u53d7\u5230\u200b\u77e9\u9635\u200b\u5bf9\u79f0\u200b\u7684\u200b\u7ea6\u675f\u200b\uff08A\u200b\u5bf9\u200bB\u200b\u7684\u200b\u6ce8\u610f\u529b\u200b\u53ef\u4ee5\u200b\u4e0d\u200b\u7b49\u4e8e\u200bB\u200b\u5bf9\u200bA\u200b\u7684\u200b\u6ce8\u610f\u529b\u200b\uff09\u3002</p> <p>\u200b\u4e3a\u4ec0\u4e48\u200b\u8981\u200b\u9664\u4ee5\u200b\\(\\sqrt{d_k}\\)</p> <p>\u200b\u5728\u200b\\(\\bsQ\\bsK^\\top\\)\u200b\u7684\u200b\u8ba1\u7b97\u200b\u4e2d\u200b\uff0c\u200b\u7ed3\u679c\u200b\u7684\u200b\u65b9\u5dee\u200b\u4f1a\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u4f7f\u200b\u7ed3\u679c\u200b\u7684\u200b\u65b9\u5dee\u200b\u4fdd\u6301\u200b\u4e0d\u53d8\u200b\uff0c\u200b\u9700\u8981\u200b\u9664\u4ee5\u200b\\(\\sqrt{d_k}\\)\uff0c\u200b\u5176\u4e2d\u200b\\(d_k\\)\u200b\u662f\u200b\u952e\u200b\u7684\u200b\u7ef4\u5ea6\u200b\u3002\u200b\u5426\u5219\u200b\uff0c\u200b\u5f53\u200b\\(d_k\\)\u200b\u8f83\u5927\u200b\u65f6\u200b\uff0c\\(\\bsQ\\bsK^\\top\\)\u200b\u4e2d\u200b\u5143\u7d20\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5dee\u5f02\u200b\u4f1a\u200b\u53d8\u5f97\u200b\u5f88\u5927\u200b\uff0c\u200b\u5bfc\u81f4\u200bsoftmax\u200b\u51fd\u6570\u200b\u7684\u200b\u68af\u5ea6\u200b\u63a5\u8fd1\u200b\u4e8e\u200b0\u3002</p> <p>softmax\u200b\u51fd\u6570\u200b</p> <p>softmax\u200b\u51fd\u6570\u200b\u7684\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\uff1a</p> \\[ \\text{softmax}(\\bsz)_i = \\frac{e^{z_i}}{\\sum_{j=1}^n e^{z_j}} \\] <p>\u200b\u5373\u200b\u5bf9\u200b\u8f93\u5165\u200b\u5411\u91cf\u200b\\(\\bsz\\)\u200b\u4e2d\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u6307\u6570\u200b\u7684\u200b\u5f52\u4e00\u5316\u200b\u3002\u200b\u5176\u4e2d\u200b\\(\\bsz\\)\u200b\u662f\u200b\u8f93\u5165\u200b\u5411\u91cf\u200b\uff0c\\(n\\)\u200b\u662f\u200b\u5411\u91cf\u200b\u7684\u200b\u7ef4\u5ea6\u200b\u3002</p> <p>\u200b\u4e3a\u4e86\u200b\u4ece\u200b\u591a\u4e2a\u200b\u7ef4\u5ea6\u200b\u5b66\u4e60\u200b\u5230\u200b\u5bf9\u200b\u540c\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b\u4e0d\u540c\u200b\u7279\u5f81\u200b\u7684\u200b\u8868\u5f81\u200b\uff0ctransformer\u200b\u5f15\u5165\u200b\u4e86\u200b\u591a\u5934\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u3002\u200b\u5176\u200b\u6838\u5fc3\u601d\u60f3\u200b\u662f\u200b\u5c06\u200b\u8f93\u5165\u200b\u7684\u200b\\(D\\)\u200b\u7ef4\u200b\u5411\u91cf\u200b\u62c6\u5206\u200b\u5230\u200b\\(h\\)\u200b\u4e2a\u5934\u200b\uff0c\u200b\u7136\u540e\u200b\u5206\u522b\u200b\u8ba1\u7b97\u200b\u6ce8\u610f\u529b\u200b\uff0c\u200b\u6700\u540e\u200b\u5c06\u200b\\(h\\)\u200b\u4e2a\u5934\u200b\u7684\u200b\u8f93\u51fa\u200b\u62fc\u63a5\u200b\u5728\u200b\u4e00\u8d77\u200b\uff0c\u200b\u518d\u200b\u7ecf\u8fc7\u200b\u4e00\u4e2a\u200b\u7ebf\u6027\u53d8\u6362\u200b\u5f97\u5230\u200b\u6700\u7ec8\u200b\u8f93\u51fa\u200b\u3002\u200b\u5728\u200b\u5b9e\u73b0\u200b\u4e2d\u200b\uff0c\u200b\u4e00\u822c\u200b\u4f7f\u7528\u200b\u7ef4\u5ea6\u200b\u53d8\u6362\u200b\u6765\u200b\u5b9e\u73b0\u200b\u8f93\u5165\u200b\u5411\u91cf\u200b\u7684\u200b\u62c6\u5206\u200b\u3002</p> <p>\u200b\u5728\u200b\u90e8\u5206\u200b\u4efb\u52a1\u200b\u4e2d\u200b\uff0c\u200b\u9700\u8981\u200b\u63a7\u5236\u200b\u5e8f\u5217\u200b\u67d0\u4e2a\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u5143\u7d20\u200b\u53ea\u80fd\u200b\u4f9d\u8d56\u4e8e\u200b\u8be5\u200b\u4f4d\u7f6e\u200b\u4e4b\u524d\u200b\u7684\u200b\u5143\u7d20\u200b\uff0c\u200b\u800c\u200b\u4e0d\u80fd\u200b\u4f9d\u8d56\u4e8e\u200b\u4e4b\u540e\u200b\u7684\u200b\u5143\u7d20\u200b\u3002\u200b\u6b64\u65f6\u200b\u9700\u8981\u200b\u4f7f\u7528\u200bmask\u200b\u673a\u5236\u200b\uff0c\u200b\u5373\u200b\u5728\u200b\u8ba1\u7b97\u200b\u6ce8\u610f\u529b\u200b\u5f97\u5206\u200b\u65f6\u200b\uff0c\u200b\u5c06\u200b\u4e0d\u200b\u5408\u6cd5\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u5f97\u5206\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b\u8d1f\u200b\u65e0\u7a77\u200b\uff0c\u200b\u4ece\u800c\u200b\u5728\u200bsoftmax\u200b\u51fd\u6570\u200b\u4e2d\u200b\u5f97\u5230\u200b0\u200b\u7684\u200b\u6982\u7387\u200b\u3002</p>"},{"location":"coding/machine-learning/attention/#_3","title":"\u4ee3\u7801\u200b\u5b9e\u73b0","text":"<p>einsum</p> <p><code>einsum</code>\u200b\u662f\u200bEinstein Summation Notation\u200b\u7684\u200b\u7f29\u5199\u200b\uff0c\u200b\u662f\u200b\u4e00\u79cd\u200b\u7528\u4e8e\u200b\u5f20\u91cf\u200b\u8fd0\u7b97\u200b\u7684\u200b\u8bb0\u53f7\u200b\u3002\u200b\u5728\u200bPyTorch\u200b\u4e2d\u200b\uff0c<code>einsum</code>\u200b\u51fd\u6570\u200b\u7684\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\uff1a</p> <pre><code>torch.einsum(equation, *operands)\n</code></pre> <p>\u200b\u5176\u4e2d\u200b<code>equation</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u63cf\u8ff0\u200b\u4e86\u200b\u5f20\u91cf\u200b\u7684\u200b\u8fd0\u7b97\u200b\u65b9\u5f0f\u200b\uff0c<code>operands</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6216\u200b\u591a\u4e2a\u200b\u5f20\u91cf\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c<code>torch.einsum(\"ij,jk-&gt;ik\", A, B)</code>\u200b\u8868\u793a\u200b\u8ba1\u7b97\u200b\u77e9\u9635\u200b\\(A\\)\u200b\u548c\u200b\\(B\\)\u200b\u7684\u200b\u4e58\u79ef\u200b\u3002\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5176\u200b\u7406\u89e3\u200b\u4e3a\u200b\u4e58\u79ef\u200b-\u200b\u6c42\u548c\u200b\u7684\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u5373\u5c06\u200b<code>equation</code>\u200b\u4e2d\u200b\u7684\u200b\u5b57\u6bcd\u200b\u5bf9\u5e94\u200b\u5230\u200b<code>operands</code>\u200b\u4e2d\u200b\u7684\u200b\u5f20\u91cf\u200b\uff0c\u200b\u7136\u540e\u200b\u5bf9\u200b\u8fd9\u4e9b\u200b\u5f20\u91cf\u200b\u8fdb\u884c\u200b\u4e58\u79ef\u200b\u548c\u200b\u6c42\u548c\u200b\u3002\u200b\u5ffd\u7565\u200bbatch size\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u8ba1\u7b97\u200b\\(\\bsQ\\bsK^\\top\\)\uff0c\u200b\u5176\u4e2d\u200b\\(\\bsQ\\)\u200b\u7684\u200b\u7ef4\u5ea6\u200b\u662f\u200b\\((L, D)\\)\uff0c\\(\\bsK\\)\u200b\u7684\u200b\u7ef4\u5ea6\u200b\u662f\u200b\\((L, D)\\)\uff0c\u200b\u8f93\u51fa\u200b\u7684\u200b\u7ef4\u5ea6\u200b\u662f\u200b\\((L, L)\\)\uff0c\u200b\u56e0\u6b64\u200b<code>equation</code>\u200b\u4e3a\u200b<code>\"id,jd-&gt;ij\"</code>\u3002</p> <p>\u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u901a\u8fc7\u200bPyTorch\u200b\u5b9e\u73b0\u200b\u591a\u5934\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u3002\u200b\u5728\u200b\u5b9e\u73b0\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u524d\u200b\uff0c\u200b\u9700\u8981\u200b\u5148\u200b\u5b9e\u73b0\u200b\u7ebf\u6027\u53d8\u6362\u200b\u548c\u200bsoftmax\u200b\u51fd\u6570\u200b\u3002\u200b\u4e4b\u540e\u200b\u5b9e\u73b0\u200b\u7528\u4e8e\u200b\u591a\u5934\u200b\u6ce8\u610f\u529b\u200b\u7684\u200b<code>MultiHeadSelfAttention</code>\u200b\u7c7b\u200b\uff0c\u200b\u5176\u200b\u8f93\u5165\u200b\u662f\u200b\u4e00\u4e2a\u200b\\(N\\times L\\times D\\)\u200b\u7684\u200b\u5f20\u91cf\u200b\uff0c\u200b\u8f93\u51fa\u200b\u662f\u200b\u4e00\u4e2a\u200b\\(N\\times L\\times D\\)\u200b\u7684\u200b\u5f20\u91cf\u200b\u3002</p> <pre><code>class MultiHeadAttention(torch.nn.Module):\n    def __init__(self, d_model: int, num_heads: int):\n        super(MultiHeadAttention, self).__init__()\n        self.d_model = d_model\n        self.num_heads = num_heads\n        if d_model % num_heads != 0:\n            raise ValueError(\"d_model must be divisible by num_heads\")\n\n        self.d_k = d_model // num_heads\n        self.sqrt_d_k = self.d_k ** 0.5\n\n        self.W_Q = torch.nn.Linear(d_model, d_model)\n        self.W_K = torch.nn.Linear(d_model, d_model)\n        self.W_V = torch.nn.Linear(d_model, d_model)\n        self.W_O = torch.nn.Linear(d_model, d_model)\n\n    def forward(\n        self, x_q: torch.Tensor, x_k: torch.Tensor, x_v: torch.Tensor,\n        mask: torch.Tensor | None = None\n    ) -&gt; torch.Tensor:\n        N, L_Q, D = x_q.size()\n        _, L_KV, _ = x_k.size()\n        Q = self.W_Q(x_q).reshape(N, L_Q, self.num_heads, self.d_k)\n        K = self.W_K(x_k).reshape(N, L_KV, self.num_heads, self.d_k)\n        V = self.W_V(x_v).reshape(N, L_KV, self.num_heads, self.d_k)\n\n        score = torch.einsum(\"nihd,njhd-&gt;nijh\", Q, K) / self.sqrt_d_k\n        score = torch.nn.functional.softmax(score, dim=2)\n        value = torch.einsum(\"nijh,njhd-&gt;nihd\", score, V).reshape(N, L_Q, self.d_model)\n        return self.W_O(value)\n\nclass MultiHeadSelfAttention(MultiHeadAttention):\n    def __init__(self, d_model: int, num_heads: int):\n        super(MultiHeadSelfAttention, self).__init__(d_model, num_heads)\n\n    def forward(self, x: torch.Tensor, mask: torch.Tensor | None = None) -&gt; torch.Tensor:\n        return super().forward(x, x, x, mask)\n\nclass MultiHeadCrossAttention(MultiHeadAttention):\n    def __init__(self, d_model: int, num_heads: int):\n        super(MultiHeadCrossAttention, self).__init__(d_model, num_heads)\n\n    def forward(\n        self, x_q: torch.Tensor, x_kv: torch.Tensor,\n        mask: torch.Tensor | None = None\n    ) -&gt; torch.Tensor:\n        return super().forward(x_q, x_kv, x_kv, mask)\n</code></pre> <p>\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u4e2d\u200b\u7684\u200bmask</p> <p>\u200b\u5728\u200b\u5b9e\u73b0\u200b\u4e2d\u200b\uff0c\u200b\u6709\u65f6\u200b\u9700\u8981\u200b\u5bf9\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u7684\u200b\u5f97\u5206\u200b\u8fdb\u884c\u200bmask\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u4ee5\u200b\u63a7\u5236\u200b\u6a21\u578b\u200b\u7684\u200b\u884c\u4e3a\u200b\u3002mask\u200b\u901a\u5e38\u200b\u5206\u4e3a\u200b\u4e09\u79cd\u200b\uff0c\u200b\u5373\u200b</p> <ol> <li>padding mask\uff1a\u200b\u7ef4\u5ea6\u200b<code>[N, L]</code>\uff0c\u200b\u7528\u4e8e\u200b\u63a9\u76d6\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u7684\u200bpadding\u200b\u5143\u7d20\u200b\uff0c\u200b\u4f7f\u200b\u5176\u200b\u4e0d\u200b\u53c2\u4e0e\u200b\u6ce8\u610f\u529b\u200b\u8ba1\u7b97\u200b\u3002</li> <li>attention mask\uff1a\u200b\u7ef4\u5ea6\u200b<code>[L, L]</code>\uff0c\u200b\u7528\u4e8e\u200b\u81ea\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u4e2d\u200b\uff0c\u200b\u63a7\u5236\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u5143\u7d20\u200b\u7684\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b\u3002\u200b\u901a\u5e38\u200b\u7528\u200bcausal mask\u200b\u6216\u200blook-ahead mask\u200b\u89c4\u5b9a\u200b\u5e8f\u5217\u200b\u67d0\u4e2a\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u5143\u7d20\u200b\u53ea\u80fd\u200b\u4f9d\u8d56\u4e8e\u200b\u8be5\u200b\u4f4d\u7f6e\u200b\u4e4b\u524d\u200b\u7684\u200b\u5143\u7d20\u200b\uff0c\u200b\u800c\u200b\u4e0d\u80fd\u200b\u4f9d\u8d56\u4e8e\u200b\u4e4b\u540e\u200b\u7684\u200b\u5143\u7d20\u200b\u3002</li> <li>\u200b\u5728\u200b\u4ea4\u53c9\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u4e2d\u200b\u7684\u200bmemory mask\uff1a\u200b\u7ef4\u5ea6\u200b<code>[L_Q, L_KV]</code>\uff0c\u200b\u7528\u4e8e\u200b\u63a7\u5236\u200b\u67e5\u8be2\u200b\u548c\u952e\u200b\u4e4b\u95f4\u200b\u7684\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b\u3002</li> </ol> <p>\u200b\u5728\u200b\u5b9e\u73b0\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5c06\u200bmask\u200b\u4e2d\u4e3a\u200b0\u200b\u7684\u200b\u5143\u7d20\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b\u8d1f\u200b\u65e0\u7a77\u200b\uff0c\u200b\u4ece\u800c\u200b\u5728\u200bsoftmax\u200b\u51fd\u6570\u200b\u4e2d\u200b\u5f97\u5230\u200b0\u200b\u7684\u200b\u6982\u7387\u200b\u3002</p> <p>\u200b\u5b8c\u6574\u200b\u7684\u200b\u591a\u5934\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u5b9e\u73b0\u200b\u5982\u4e0b\u200b</p> <pre><code>class MultiHeadAttention(torch.nn.Module):\n    def __init__(self, d_model: int, num_heads: int):\n        super(MultiHeadAttention, self).__init__()\n        self.d_model = d_model\n        self.num_heads = num_heads\n        if d_model % num_heads != 0:\n            raise ValueError(\"d_model must be divisible by num_heads\")\n\n        self.d_k = d_model // num_heads\n        self.sqrt_d_k = self.d_k ** 0.5\n\n        self.W_Q = torch.nn.Linear(d_model, d_model)\n        self.W_K = torch.nn.Linear(d_model, d_model)\n        self.W_V = torch.nn.Linear(d_model, d_model)\n        self.W_O = torch.nn.Linear(d_model, d_model)\n\n    def forward(\n        self, x_q: torch.Tensor, x_k: torch.Tensor, x_v: torch.Tensor,\n        padding_mask: torch.Tensor | None = None,\n        attention_mask: torch.Tensor | None = None\n    ) -&gt; torch.Tensor:\n        # x_q: (N, L_Q, D), x_k: (N, L_KV, D), x_v: (N, L_KV, D)\n        # padding_mask: (N, L_KV), attention_mask: (L_Q, L_KV)\n        N, L_Q, D = x_q.size()\n        _, L_KV, _ = x_k.size()\n\n        # Linear transformation -&gt; Split heads\n        Q = self.W_Q(x_q).reshape(N, L_Q, self.num_heads, self.d_k)\n        K = self.W_K(x_k).reshape(N, L_KV, self.num_heads, self.d_k)\n        V = self.W_V(x_v).reshape(N, L_KV, self.num_heads, self.d_k)\n\n        # Compute attention score\n        score = torch.einsum('nihd,njhd-&gt;nijh', Q, K) / self.sqrt_d_k\n\n        # Apply attention mask\n        if attention_mask is not None:\n            score = score.masked_fill(\n                attention_mask.reshape(1, L_Q, L_KV, 1) == 0, float('-inf')\n            )\n\n        # Apply padding mask\n        if padding_mask is not None:\n            score = score.masked_fill(\n                padding_mask.reshape(N, 1, L_KV, 1) == 0, float('-inf')\n            )\n\n        # Softmax -&gt; Weighted sum -&gt; Merge heads -&gt; Output transformation\n        score = torch.nn.functional.softmax(score, dim=2)\n        value = torch.einsum(\n            'nijh,njhd-&gt;nihd', score, V\n        ).reshape(N, L_Q, self.d_model)\n        return self.W_O(value)\n\n\nclass MultiHeadSelfAttention(MultiHeadAttention):\n    def __init__(self, d_model: int, num_heads: int):\n        super(MultiHeadSelfAttention, self).__init__(d_model, num_heads)\n\n    def forward(\n        self, x: torch.Tensor,\n        padding_mask: torch.Tensor | None = None,\n        attention_mask: torch.Tensor | None = None\n    ) -&gt; torch.Tensor:\n        # Self attention is applied to the same input\n        return super().forward(x, x, x, padding_mask, attention_mask)\n\n\nclass MultiHeadCrossAttention(MultiHeadAttention):\n    def __init__(self, d_model: int, num_heads: int):\n        super(MultiHeadCrossAttention, self).__init__(d_model, num_heads)\n\n    def forward(\n        self, x_q: torch.Tensor, x_kv: torch.Tensor,\n        padding_mask: torch.Tensor | None = None,\n        attention_mask: torch.Tensor | None = None\n    ) -&gt; torch.Tensor:\n        # Cross attention is applying query on another kv sequence\n        return super().forward(x_q, x_kv, x_kv, padding_mask, attention_mask)\n</code></pre>"},{"location":"coding/machine-learning/autoencoder/","title":"Autoencoder","text":"In\u00a0[1]: Copied! <pre>import torch\nimport torchvision\nfrom torch.utils.data import DataLoader\n\n# SVG output\n%config InlineBackend.figure_format = 'svg'\n\n# Fix for certificate error\n# https://stackoverflow.com/questions/71263622\nimport ssl\nssl._create_default_https_context = ssl._create_unverified_context\n</pre> import torch import torchvision from torch.utils.data import DataLoader  # SVG output %config InlineBackend.figure_format = 'svg'  # Fix for certificate error # https://stackoverflow.com/questions/71263622 import ssl ssl._create_default_https_context = ssl._create_unverified_context <p>\u200b\u5bfc\u5165\u200bMNIST\u200b\u6570\u636e\u200b\u96c6\u200b</p> In\u00a0[2]: Copied! <pre>train_dataset = torchvision.datasets.MNIST(\n    train=True, root='data',\n    transform=torchvision.transforms.ToTensor(), download=True\n)\ntest_dataset = torchvision.datasets.MNIST(\n    train=True, root='data',\n    transform=torchvision.transforms.ToTensor(), download=True\n)\ntrain_loader = DataLoader(train_dataset, batch_size=128, shuffle=True, num_workers=8)\ntest_loader = DataLoader(test_dataset, batch_size=512, shuffle=False, num_workers=8)\n</pre> train_dataset = torchvision.datasets.MNIST(     train=True, root='data',     transform=torchvision.transforms.ToTensor(), download=True ) test_dataset = torchvision.datasets.MNIST(     train=True, root='data',     transform=torchvision.transforms.ToTensor(), download=True ) train_loader = DataLoader(train_dataset, batch_size=128, shuffle=True, num_workers=8) test_loader = DataLoader(test_dataset, batch_size=512, shuffle=False, num_workers=8) <p>\u200b\u5b9a\u4e49\u200b\u7f16\u7801\u5668\u200b\u7ed3\u6784\u200b\uff0c\u200b\u7f16\u7801\u5668\u200b\u5c06\u200b\u8f93\u5165\u200b\u6620\u5c04\u200b\u5230\u200b\u4f4e\u200b\u7ef4\u7a7a\u95f4\u200b\u4e2d\u200b</p> In\u00a0[3]: Copied! <pre>import itertools\nfrom typing import List\n\nclass Encoder(torch.nn.Module):\n    def __init__(self, dim_layers: List[int]):\n        super().__init__()\n        dim_layers = [784, *dim_layers]\n        self.layers = torch.nn.Sequential(*[\n            torch.nn.Sequential(\n                torch.nn.Linear(in_dim, out_dim),\n                torch.nn.ReLU(),\n                torch.nn.Dropout(0.2),\n            )\n            for in_dim, out_dim in itertools.pairwise(dim_layers)\n        ])\n\n    def forward(self, x: torch.Tensor):\n        x = x.reshape(-1, 784)\n        return self.layers(x)\n</pre> import itertools from typing import List  class Encoder(torch.nn.Module):     def __init__(self, dim_layers: List[int]):         super().__init__()         dim_layers = [784, *dim_layers]         self.layers = torch.nn.Sequential(*[             torch.nn.Sequential(                 torch.nn.Linear(in_dim, out_dim),                 torch.nn.ReLU(),                 torch.nn.Dropout(0.2),             )             for in_dim, out_dim in itertools.pairwise(dim_layers)         ])      def forward(self, x: torch.Tensor):         x = x.reshape(-1, 784)         return self.layers(x) <p>\u200b\u89e3\u7801\u5668\u200b\u91cd\u65b0\u200b\u5c06\u200b\u4f4e\u7ef4\u200b\u6570\u636e\u200b\u6620\u5c04\u200b\u56de\u9ad8\u200b\u7ef4\u7a7a\u95f4\u200b</p> In\u00a0[4]: Copied! <pre>class Decoder(torch.nn.Module):\n    def __init__(self, dim_layers: List[int]):\n        super().__init__()\n        dim_layers = [*dim_layers, 784]\n        self.layers = torch.nn.Sequential(*[\n            torch.nn.Sequential(\n                torch.nn.Linear(in_dim, out_dim),\n                torch.nn.ReLU(),\n                torch.nn.Dropout(0.2)\n            )\n            for in_dim, out_dim in itertools.pairwise(dim_layers)\n        ], *[torch.nn.Tanh()])\n\n    def forward(self, x: torch.Tensor):\n        return self.layers(x).reshape(-1, 28, 28) * 0.5 + 0.5\n\nclass AutoEncoder(torch.nn.Module):\n    def __init__(self, encoder_layers: List[int], decoder_layers: List[int]):\n        super().__init__()\n        self.encoder = Encoder(encoder_layers)\n        self.decoder = Decoder(decoder_layers)\n        self.loss = torch.nn.MSELoss(reduction='none')\n        self.device = torch.device('cpu')\n\n    def to(self, *args, **kwargs):\n        if args:\n            self.device = args[0]\n        elif 'device' in kwargs:\n            self.device = kwargs['device']\n        super().to(*args, **kwargs)\n\n    def predict(self, x: torch.Tensor):\n        x = x.to(self.device)\n        x_fake = self.decoder(self.encoder(x))\n        return x_fake\n\n    def forward(self, x: torch.Tensor):\n        x = x.to(self.device)\n        x_fake = self.predict(x)\n        x_real = x.reshape(-1, 28, 28)\n        return self.loss(x_fake, x_real)\n\nmodel = AutoEncoder(\n    [512, 512, 256, 128, 64],\n    [64, 128, 256, 512, 512]\n)\n</pre> class Decoder(torch.nn.Module):     def __init__(self, dim_layers: List[int]):         super().__init__()         dim_layers = [*dim_layers, 784]         self.layers = torch.nn.Sequential(*[             torch.nn.Sequential(                 torch.nn.Linear(in_dim, out_dim),                 torch.nn.ReLU(),                 torch.nn.Dropout(0.2)             )             for in_dim, out_dim in itertools.pairwise(dim_layers)         ], *[torch.nn.Tanh()])      def forward(self, x: torch.Tensor):         return self.layers(x).reshape(-1, 28, 28) * 0.5 + 0.5  class AutoEncoder(torch.nn.Module):     def __init__(self, encoder_layers: List[int], decoder_layers: List[int]):         super().__init__()         self.encoder = Encoder(encoder_layers)         self.decoder = Decoder(decoder_layers)         self.loss = torch.nn.MSELoss(reduction='none')         self.device = torch.device('cpu')      def to(self, *args, **kwargs):         if args:             self.device = args[0]         elif 'device' in kwargs:             self.device = kwargs['device']         super().to(*args, **kwargs)      def predict(self, x: torch.Tensor):         x = x.to(self.device)         x_fake = self.decoder(self.encoder(x))         return x_fake      def forward(self, x: torch.Tensor):         x = x.to(self.device)         x_fake = self.predict(x)         x_real = x.reshape(-1, 28, 28)         return self.loss(x_fake, x_real)  model = AutoEncoder(     [512, 512, 256, 128, 64],     [64, 128, 256, 512, 512] ) <p>\u200b\u4ece\u200b\u6d4b\u8bd5\u200b\u96c6\u4e2d\u200b\u9009\u51fa\u200b10\u200b\u4e2a\u200b\u6570\u5b57\u200b\u7684\u200b\u56fe\u7247\u200b</p> In\u00a0[5]: Copied! <pre>from matplotlib.axes import Axes\nfrom matplotlib import pyplot as plt\nfrom typing import Optional\n\ntest_input = {}\nfor (x, y) in test_loader:\n    if len(test_input) == 10:\n        break\n    size = y.size(0)\n    for _ in range(size):\n        if y[_].item() in test_input:\n            continue\n        test_input[y[_].item()] = x[_].detach()\n\ndef plot_image(x: torch.Tensor, ax: Optional[Axes] = None):\n    img = x.view(28, 28).cpu().numpy()\n\n    if ax is None:\n        plt.imshow(img, cmap='gray')\n        plt.axis('off')\n    else:\n        ax.imshow(img, cmap='gray')\n        ax.axis('off')\n\n\nfig, ax = plt.subplots(2, 5, figsize=(8, 3))\naxes = ax.flatten()\nfor i, ax in enumerate(axes):\n    ax.set_title(f'Class {i}', fontsize=9)\n    plot_image(test_input[i], ax)\nplt.show()\n</pre> from matplotlib.axes import Axes from matplotlib import pyplot as plt from typing import Optional  test_input = {} for (x, y) in test_loader:     if len(test_input) == 10:         break     size = y.size(0)     for _ in range(size):         if y[_].item() in test_input:             continue         test_input[y[_].item()] = x[_].detach()  def plot_image(x: torch.Tensor, ax: Optional[Axes] = None):     img = x.view(28, 28).cpu().numpy()      if ax is None:         plt.imshow(img, cmap='gray')         plt.axis('off')     else:         ax.imshow(img, cmap='gray')         ax.axis('off')   fig, ax = plt.subplots(2, 5, figsize=(8, 3)) axes = ax.flatten() for i, ax in enumerate(axes):     ax.set_title(f'Class {i}', fontsize=9)     plot_image(test_input[i], ax) plt.show() <p>\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u7684\u200b\u8d85\u200b\u53c2\u6570\u200b\u5982\u4e0b\u200b\uff1a</p> In\u00a0[6]: Copied! <pre>N = 120\nK = 1 # Evaluate loss on test after K epochs\nK_plot = 10 # Plot sample after K epochs\noptimizer = torch.optim.Adam(model.parameters(), lr=5e-4)\ndevice = 'cuda:5' if torch.cuda.is_available() else 'cpu'  # CUDA\nmodel.to(device)\n\n# Record training metrics\nstep = 0\ntrain_metrics = []\n</pre> N = 120 K = 1 # Evaluate loss on test after K epochs K_plot = 10 # Plot sample after K epochs optimizer = torch.optim.Adam(model.parameters(), lr=5e-4) device = 'cuda:5' if torch.cuda.is_available() else 'cpu'  # CUDA model.to(device)  # Record training metrics step = 0 train_metrics = [] <p>\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u6bcf\u9694\u200b\u82e5\u5e72\u200bepoch\u200b\u8f93\u51fa\u200b\u4e00\u6b21\u200b\u81ea\u200b\u7f16\u7801\u5668\u200b\u5bf9\u200b10\u200b\u4e2a\u200b\u6570\u5b57\u200b\u7684\u200b\u8f93\u51fa\u200b\u3002</p> In\u00a0[7]: Copied! <pre>from typing import Dict, Iterator\n\nfig, ax = plt.subplots(10, N // K_plot + 1, figsize=(8, 6))\naxes = iter(ax.T)\n\ndef plot_column(axes: Iterator[List[Axes]], samples: Dict[int, torch.Tensor]):\n    ax_column = next(axes)\n    for i, x_sample in samples.items():\n        plot_image(x_sample, ax_column[i])\n\n\nplot_column(axes, test_input)\n\nfor epoch in range(N):\n    step_metric = {}\n\n    if (epoch + 1) % K == 0:\n        model.eval()\n        eval_loss, size = 0.0, 0\n        for x_test, _ in test_loader:\n            loss = model(x_test)\n            eval_loss += loss.sum().item()\n            size += loss.size(0)\n        step_metric['eval_loss'] = eval_loss / size\n\n    for x, _ in train_loader:\n        model.train()\n        step += 1\n        optimizer.zero_grad()\n        loss = model(x).mean()\n        step_metric['loss'] = loss.item()\n        loss.backward()\n        optimizer.step()\n\n        train_metrics.append(step_metric)\n        step_metric = {}\n\n    if (epoch + 1) % K_plot == 0:\n        model.eval()\n        decoder_output = {\n            i: model.predict(x_sample).detach()\n            for i, x_sample in test_input.items()\n        }\n        plot_column(axes, decoder_output)\n\nfig.show()\n</pre> from typing import Dict, Iterator  fig, ax = plt.subplots(10, N // K_plot + 1, figsize=(8, 6)) axes = iter(ax.T)  def plot_column(axes: Iterator[List[Axes]], samples: Dict[int, torch.Tensor]):     ax_column = next(axes)     for i, x_sample in samples.items():         plot_image(x_sample, ax_column[i])   plot_column(axes, test_input)  for epoch in range(N):     step_metric = {}      if (epoch + 1) % K == 0:         model.eval()         eval_loss, size = 0.0, 0         for x_test, _ in test_loader:             loss = model(x_test)             eval_loss += loss.sum().item()             size += loss.size(0)         step_metric['eval_loss'] = eval_loss / size      for x, _ in train_loader:         model.train()         step += 1         optimizer.zero_grad()         loss = model(x).mean()         step_metric['loss'] = loss.item()         loss.backward()         optimizer.step()          train_metrics.append(step_metric)         step_metric = {}      if (epoch + 1) % K_plot == 0:         model.eval()         decoder_output = {             i: model.predict(x_sample).detach()             for i, x_sample in test_input.items()         }         plot_column(axes, decoder_output)  fig.show() In\u00a0[8]: Copied! <pre>from typing import Any, Dict, Iterable, List, Tuple\nimport random\n\ndef extract_metrics(data: List[Dict[str, Any]], field: str) -&gt; Tuple[List[int], List[Any]]:\n    x, y = [], []\n    for step, record in enumerate(data, start=1):\n        if field in record:\n            x.append(step)\n            y.append(record[field])\n    return x, y\n\ndef ema(x, beta):\n    y = x[0]\n    for _ in x:\n        y = beta * y + (1 - beta) * _\n        yield y\n\ndef sample(x: Iterable[Any], y: Iterable[Any], ratio: float):\n    result_x, result_y = [], []\n    for x_sample, y_sample in zip(x, y):\n        if random.random() &lt; ratio:\n            result_x.append(x_sample)\n            result_y.append(y_sample)\n    return result_x, result_y\n</pre> from typing import Any, Dict, Iterable, List, Tuple import random  def extract_metrics(data: List[Dict[str, Any]], field: str) -&gt; Tuple[List[int], List[Any]]:     x, y = [], []     for step, record in enumerate(data, start=1):         if field in record:             x.append(step)             y.append(record[field])     return x, y  def ema(x, beta):     y = x[0]     for _ in x:         y = beta * y + (1 - beta) * _         yield y  def sample(x: Iterable[Any], y: Iterable[Any], ratio: float):     result_x, result_y = [], []     for x_sample, y_sample in zip(x, y):         if random.random() &lt; ratio:             result_x.append(x_sample)             result_y.append(y_sample)     return result_x, result_y <p>\u200b\u7ed8\u5236\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u53d8\u5316\u200b\u3002</p> In\u00a0[9]: Copied! <pre>fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(8, 6), sharex=True)\n\nx_train_loss, y_train_loss = extract_metrics(train_metrics, 'loss')\nx_eval_loss, y_eval_loss = extract_metrics(train_metrics, 'eval_loss')\n\nax1.plot(x_train_loss, y_train_loss, color='lightgreen', alpha=0.5)\n\nax1.plot(x_train_loss, [*ema(y_train_loss, 0.99)], label='Train loss', color='green', linewidth=1)\nax2.plot(x_eval_loss, y_eval_loss, label='Evaluation loss', color='red', linewidth=1)\n\n\nax1.legend(loc='upper right')\nax2.legend(loc='upper right')\n\nfig.show()\n</pre> fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(8, 6), sharex=True)  x_train_loss, y_train_loss = extract_metrics(train_metrics, 'loss') x_eval_loss, y_eval_loss = extract_metrics(train_metrics, 'eval_loss')  ax1.plot(x_train_loss, y_train_loss, color='lightgreen', alpha=0.5)  ax1.plot(x_train_loss, [*ema(y_train_loss, 0.99)], label='Train loss', color='green', linewidth=1) ax2.plot(x_eval_loss, y_eval_loss, label='Evaluation loss', color='red', linewidth=1)   ax1.legend(loc='upper right') ax2.legend(loc='upper right')  fig.show()"},{"location":"coding/machine-learning/autoencoder/#autoencoder","title":"Autoencoder\u00b6","text":"<p>\u200b\u81ea\u200b\u7f16\u7801\u5668\u200b\u662f\u200b\u4e00\u7c7b\u200b\u65e0\u200b\u76d1\u7763\u200b\u7684\u200b\u5b66\u4e60\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u8f93\u5165\u200b\u6570\u636e\u538b\u7f29\u200b\u4e3a\u200b\u4f4e\u7ef4\u200b\u7684\u200b\u9690\u200b\u5411\u91cf\u200b\u8868\u793a\u200b\u3002\u200b\u5b83\u200b\u5305\u542b\u200b\u4e24\u200b\u90e8\u5206\u200b\u7f51\u7edc\u7ed3\u6784\u200b\uff0c\u200b\u5373\u200b\u7f16\u7801\u5668\u200b\u548c\u200b\u89e3\u7801\u5668\u200b\u3002\u200b\u7f16\u7801\u5668\u200b\u5c06\u200b\u8f93\u5165\u200b\u6570\u636e\u538b\u7f29\u200b\u4e3a\u200b\u9690\u200b\u5411\u91cf\u200b\uff0c\u200b\u89e3\u7801\u5668\u200b\u5c1d\u8bd5\u200b\u5c06\u200b\u9690\u200b\u5411\u91cf\u200b\u91cd\u5efa\u200b\u4e3a\u200b\u5bf9\u5e94\u200b\u7684\u200b\u6570\u636e\u200b\u3002\u200b\u901a\u8fc7\u200b\u6700\u5c0f\u5316\u200b\u89e3\u7801\u5668\u200b\u8f93\u51fa\u200b\u548c\u200b\u8f93\u5165\u200b\u6570\u636e\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5dee\u5f02\u200b\uff0c\u200b\u7f16\u7801\u5668\u200b\u53ef\u4ee5\u200b\u5b66\u4e60\u200b\u5230\u200b\u8f93\u5165\u200b\u6570\u636e\u200b\u7684\u200b\u538b\u7f29\u200b\u8868\u793a\u200b\u3002</p> <p>\u200b\u8bbe\u200b\u8f93\u5165\u200b\u7a7a\u95f4\u200b\u4e3a\u200b$x\\in \\mathcal X\\subseteq\\mathbb R^m$\uff0c\u200b\u9690\u200b\u5411\u91cf\u200b\u7a7a\u95f4\u200b$z\\in \\mathbb R^n$\uff0c\u200b\u7f16\u7801\u5668\u200b$G: R^m\\rightarrow R^n$\uff0c\u200b\u89e3\u7801\u5668\u200b$D: R^n\\rightarrow R^m$\u3002$d(x, x')$\u200b\u4e3a\u200b\u5b9a\u4e49\u200b\u5728\u200b$\\mathbb R^m$\u200b\u4e0a\u200b\u7684\u200b\u5dee\u5f02\u200b\u5ea6\u91cf\u200b\uff08\u200b\u8303\u6570\u200b\uff0c\u200b\u6216\u200b\u5176\u4ed6\u200b\u80fd\u591f\u200b\u53cd\u6620\u200b$x, x'$\u200b\u5dee\u5f02\u200b\u7684\u200b\u51fd\u6570\u200b\uff09\u3002\u200b\u81ea\u200b\u7f16\u7801\u5668\u200b\u7684\u200b\u8bad\u7ec3\u200b\u76ee\u6807\u200b\u53ef\u4ee5\u200b\u8868\u793a\u200b\u4e3a\u200b\uff1a</p> <p>$$ L(\\theta_G, \\theta_D) = \\mathbb E_{x} [d(x, D_{\\theta_D}(E_{\\theta_E}(x)))] $$</p> <p>\u200b\u901a\u5e38\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c$n &lt; m$\u3002\u200b\u5426\u5219\u200b\uff0c\u200b\u5f80\u5f80\u200b\u4f1a\u200b\u5b66\u4e60\u200b\u5230\u200b\u5e73\u51e1\u200b\u7684\u200b\u7f16\u7801\u5668\u200b\u8868\u793a\u200b\u3002</p>"},{"location":"coding/machine-learning/bayesian-optimization/","title":"\u8d1d\u53f6\u65af\u200b\u4f18\u5316","text":"In\u00a0[1]: Copied! <pre>import numpy as np\nfrom scipy.stats import norm\n\ndef objective(x):\n    return norm.pdf(x, 3, 2) * 1.5 + norm.pdf(x, 7, 1) + norm.pdf(x, 11, 2)\n</pre> import numpy as np from scipy.stats import norm  def objective(x):     return norm.pdf(x, 3, 2) * 1.5 + norm.pdf(x, 7, 1) + norm.pdf(x, 11, 2) <p>\u200b\u521d\u6b65\u200b\u5bf9\u200b\u8be5\u200b\u51fd\u6570\u200b\u8fdb\u884c\u200b\u53ef\u89c6\u5316\u200b</p> In\u00a0[2]: Copied! <pre>from matplotlib import pyplot as plt\n%config InlineBackend.figure_format = 'svg'\n\nx = np.linspace(-5, 20, 50)\nplt.plot(x, objective(x))\nplt.xlabel('x')\nplt.ylabel('f(x)')\nplt.title('Objective function')\nplt.show()\n</pre> from matplotlib import pyplot as plt %config InlineBackend.figure_format = 'svg'  x = np.linspace(-5, 20, 50) plt.plot(x, objective(x)) plt.xlabel('x') plt.ylabel('f(x)') plt.title('Objective function') plt.show() <p>\u200b\u91c7\u96c6\u200b\u51fd\u6570\u200b\u7684\u200b\u76ee\u6807\u200b\u662f\u200b\u9009\u51fa\u200b\u540e\u9a8c\u200b\u4e2d\u200b\u6700\u4f18\u200b\u7684\u200b\u70b9\u200b\u3002\u200b\u5728\u200b\u6b64\u5904\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u671f\u671b\u200b\u6539\u8fdb\u200b\uff08Expected Improvement, EI\uff09\u200b\u6765\u200b\u9009\u62e9\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u91c7\u96c6\u200b\u70b9\u200b\u3002EI\u200b\u7684\u200b\u5b9a\u4e49\u200b\u5982\u4e0b\u200b\uff1a</p> <p>$$ \\begin{aligned} \\text{EI}(x) &amp;= \\mathbb{E}[\\max(0, \\tilde f(x) - f(x^*) - \\xi)] \\\\ \\end{aligned} $$</p> <p>\u200b\u5176\u4e2d\u200b$\\tilde f(x)$\u200b\u662f\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u5728\u200b$x$\u200b\u5904\u200b\u7684\u200b\u9884\u6d4b\u503c\u200b\uff0c$f(x^*)$\u200b\u662f\u200b\u5f53\u524d\u200b\u6700\u4f18\u200b\u7684\u200b\u51fd\u6570\u200b\u503c\u200b\uff0c$\\xi$\u200b\u662f\u200b\u4e00\u4e2a\u200b\u63a7\u5236\u200b\u63a2\u7d22\u200b\u548c\u200b\u5f00\u53d1\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u5f53\u200b$\\xi$\u200b\u8f83\u5927\u200b\u65f6\u200b\uff0c\u200b\u7b97\u6cd5\u200b\u66f4\u200b\u503e\u5411\u200b\u4e8e\u200b\u63a2\u7d22\u200b\uff0c\u200b\u5f53\u200b$\\xi$\u200b\u8f83\u200b\u5c0f\u65f6\u200b\uff0c\u200b\u7b97\u6cd5\u200b\u66f4\u200b\u503e\u5411\u200b\u4e8e\u200b\u5f00\u53d1\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u9ad8\u65af\u5206\u5e03\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u7ed9\u5b9a\u200b$x$, $\\tilde f(x)$\u200b\u7684\u200b\u5206\u5e03\u200b\u662f\u200b\u4e00\u4e2a\u200b\u9ad8\u65af\u5206\u5e03\u200b\uff0c\u200b\u5176\u200b\u5747\u503c\u200b\u4e3a\u200b$\\mu(x)$\uff0c\u200b\u65b9\u5dee\u200b\u4e3a\u200b$\\sigma^2(x)$\uff0c\u200b\u4ee4\u200b</p> <p>$$ z(x) = \\frac{\\mu(x) - f(x^*) - \\xi}{\\sigma(x)} $$</p> <p>\u200b\u5219\u200b\u671f\u671b\u200b\u6539\u8fdb\u200b\u4e3a\u200b</p> <p>$$ \\text{EI}(x) = \\sigma(x)[z(x)\\Phi(z(x)) + \\phi(z(x))] $$</p> In\u00a0[3]: Copied! <pre>from typing import Callable\nfrom sklearn.gaussian_process import GaussianProcessRegressor\n\nGP = GaussianProcessRegressor\nAcquisition = Callable[[np.ndarray, GP, float], np.ndarray]\n\ndef expected_improvement(x: np.ndarray, gp: GP, y_max: float, xi: float = 0.01):\n    x = np.array(x).reshape(-1, 1)\n    mu, sigma = gp.predict(x, return_std=True) # type: ignore\n    sigma = sigma.reshape(-1, 1)\n    mu = mu.reshape(-1, 1)\n\n    with np.errstate(divide='warn'):\n        Z = (mu - y_max - xi) / sigma # Normalized Z-score\n        ei = sigma * (Z * norm.cdf(Z) + norm.pdf(Z))\n\n    return ei\n</pre> from typing import Callable from sklearn.gaussian_process import GaussianProcessRegressor  GP = GaussianProcessRegressor Acquisition = Callable[[np.ndarray, GP, float], np.ndarray]  def expected_improvement(x: np.ndarray, gp: GP, y_max: float, xi: float = 0.01):     x = np.array(x).reshape(-1, 1)     mu, sigma = gp.predict(x, return_std=True) # type: ignore     sigma = sigma.reshape(-1, 1)     mu = mu.reshape(-1, 1)      with np.errstate(divide='warn'):         Z = (mu - y_max - xi) / sigma # Normalized Z-score         ei = sigma * (Z * norm.cdf(Z) + norm.pdf(Z))      return ei <p>\u200b\u6839\u636e\u200b\u91c7\u96c6\u200b\u51fd\u6570\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8303\u56f4\u200b\u4e2d\u200b\u9009\u62e9\u200b\u4e00\u4e2a\u70b9\u200b\u4f7f\u5f97\u200bEI\u200b\u6700\u5927\u200b\uff0c\u200b\u7136\u540e\u200b\u89c2\u6d4b\u200b\u8be5\u70b9\u200b\u7684\u200b\u51fd\u6570\u200b\u503c\u200b\uff0c\u200b\u66f4\u65b0\u200b\u540e\u9a8c\u200b\uff0c\u200b\u91cd\u590d\u200b\u8fd9\u4e2a\u200b\u8fc7\u7a0b\u200b\u76f4\u5230\u200b\u8fbe\u5230\u200b\u8fed\u4ee3\u200b\u6b21\u6570\u200b\u3002</p> In\u00a0[4]: Copied! <pre>def next_point(\n    x_min: float, x_max: float, n_samples: int,\n    acquisition: Acquisition, gp: GP, y_max: float\n):\n    x = np.random.uniform(x_min, x_max, n_samples).reshape(-1, 1)\n    ei = acquisition(x, gp, y_max)\n    return x[np.argmax(ei)]\n</pre> def next_point(     x_min: float, x_max: float, n_samples: int,     acquisition: Acquisition, gp: GP, y_max: float ):     x = np.random.uniform(x_min, x_max, n_samples).reshape(-1, 1)     ei = acquisition(x, gp, y_max)     return x[np.argmax(ei)] <p>\u200b\u6b64\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u9ad8\u65af\u200b\u8fc7\u7a0b\u200b\u6765\u200b\u62df\u5408\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u3002<code>sklearn</code>\u200b\u4e2d\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u9ad8\u65af\u200b\u8fc7\u7a0b\u200b\u7684\u200b\u5b9e\u73b0\u200b\u3002</p> In\u00a0[5]: Copied! <pre>from sklearn.gaussian_process.kernels import RBF\n\nkernel = RBF(length_scale=1.0, length_scale_bounds=(1e-2, 1e2))\ngp = GP(kernel=kernel, alpha=1e-5, n_restarts_optimizer=10)\n\ndef plot_gp(ax, gp: GP, x_min: float, x_max: float, ci: float = 0.95):\n    x = np.linspace(x_min, x_max, 50).reshape(-1, 1)\n    y, sigma = gp.predict(x, return_std=True)\n\n    ci_coef = norm.ppf((1 + ci) / 2)\n\n    ax.plot(x, y, linewidth=1)\n    ax.fill_between(x.flatten(), y - ci_coef * sigma, y + ci_coef * sigma, alpha=0.2)\n    ax.set_xlabel('x')\n    ax.set_ylabel('f(x)')\n\nfig, ax = plt.subplots(1, 1)\nplot_gp(ax, gp, -5, 20)\nfig.show()\n</pre> from sklearn.gaussian_process.kernels import RBF  kernel = RBF(length_scale=1.0, length_scale_bounds=(1e-2, 1e2)) gp = GP(kernel=kernel, alpha=1e-5, n_restarts_optimizer=10)  def plot_gp(ax, gp: GP, x_min: float, x_max: float, ci: float = 0.95):     x = np.linspace(x_min, x_max, 50).reshape(-1, 1)     y, sigma = gp.predict(x, return_std=True)      ci_coef = norm.ppf((1 + ci) / 2)      ax.plot(x, y, linewidth=1)     ax.fill_between(x.flatten(), y - ci_coef * sigma, y + ci_coef * sigma, alpha=0.2)     ax.set_xlabel('x')     ax.set_ylabel('f(x)')  fig, ax = plt.subplots(1, 1) plot_gp(ax, gp, -5, 20) fig.show() <pre>/var/folders/wg/gb8y92_d43j60wvfw6bs_cz00000gn/T/ipykernel_54343/3771838051.py:19: UserWarning: FigureCanvasAgg is non-interactive, and thus cannot be shown\n  fig.show()\n</pre> <p>\u200b\u6b64\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u8fed\u4ee3\u200b\u5730\u200b\u4f18\u5316\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u3002</p> In\u00a0[6]: Copied! <pre>fig, ax = plt.subplots(4, 4, sharex=False, sharey=False, figsize=(9, 9))\nax_flatten = ax.flatten()\n\nx_min = -5\nx_max = 20\nx_samples = np.random.uniform(x_min, x_max, 3).reshape(-1, 1)\ny_samples = objective(x_samples)\ny_max = y_samples.max()\ngp = gp.fit(x_samples, y_samples)\n\nfor i, current_ax in enumerate(ax_flatten):\n    # Setup plot\n    current_ax.set_xlim(x_min, x_max)\n    current_ax.set_ylim(-1, 1)\n    if i // 4 != 3:\n        current_ax.get_xaxis().set_visible(False)\n    if i % 4 != 0:\n        current_ax.get_yaxis().set_visible(False)\n\n    # Plot prediction\n    plot_gp(current_ax, gp, x_min, x_max)\n\n    # Plot function\n    x_grid = np.linspace(x_min, x_max, 50).reshape(-1, 1)\n\n    # Plot samples\n    current_ax.plot(\n        x_grid, objective(x_grid), '--', color='gray', linewidth=0.5\n    )\n    current_ax.scatter(x_samples, y_samples, color='red', s=4, zorder=10)\n\n    # Plot optimal point\n    x_optimal = x_samples[np.argmax(y_samples)].item()\n    current_ax.scatter(x_optimal, y_max, color='green', s=10, zorder=20)\n    current_ax.text(\n        0.5, 0.9,\n        f'Best: x={x_optimal:.2f}, y={y_max:.2f}',\n        ha='center', transform=current_ax.transAxes\n    )\n\n    point = next_point(x_min, x_max, 100, expected_improvement, gp, y_max)\n\n    # Plot next point\n    current_ax.plot(\n        [point, point], [-0.8, 0.8], '--', color='red', linewidth=0.5\n    )\n    current_ax.text(\n        0.5, 0.05,\n        f'Next x: {point[0]:.2f}',\n        ha='center', transform=current_ax.transAxes\n    )\n\n    # Update samples\n    y = objective(point).item()\n    x_samples = np.vstack([x_samples, point])\n    y_samples = np.append(y_samples, y)\n\n    y_max = max(y_max, y)\n\n    # Re-fit model\n    gp = gp.fit(x_samples, y_samples)\n\nfig.show()\n</pre> fig, ax = plt.subplots(4, 4, sharex=False, sharey=False, figsize=(9, 9)) ax_flatten = ax.flatten()  x_min = -5 x_max = 20 x_samples = np.random.uniform(x_min, x_max, 3).reshape(-1, 1) y_samples = objective(x_samples) y_max = y_samples.max() gp = gp.fit(x_samples, y_samples)  for i, current_ax in enumerate(ax_flatten):     # Setup plot     current_ax.set_xlim(x_min, x_max)     current_ax.set_ylim(-1, 1)     if i // 4 != 3:         current_ax.get_xaxis().set_visible(False)     if i % 4 != 0:         current_ax.get_yaxis().set_visible(False)      # Plot prediction     plot_gp(current_ax, gp, x_min, x_max)      # Plot function     x_grid = np.linspace(x_min, x_max, 50).reshape(-1, 1)      # Plot samples     current_ax.plot(         x_grid, objective(x_grid), '--', color='gray', linewidth=0.5     )     current_ax.scatter(x_samples, y_samples, color='red', s=4, zorder=10)      # Plot optimal point     x_optimal = x_samples[np.argmax(y_samples)].item()     current_ax.scatter(x_optimal, y_max, color='green', s=10, zorder=20)     current_ax.text(         0.5, 0.9,         f'Best: x={x_optimal:.2f}, y={y_max:.2f}',         ha='center', transform=current_ax.transAxes     )      point = next_point(x_min, x_max, 100, expected_improvement, gp, y_max)      # Plot next point     current_ax.plot(         [point, point], [-0.8, 0.8], '--', color='red', linewidth=0.5     )     current_ax.text(         0.5, 0.05,         f'Next x: {point[0]:.2f}',         ha='center', transform=current_ax.transAxes     )      # Update samples     y = objective(point).item()     x_samples = np.vstack([x_samples, point])     y_samples = np.append(y_samples, y)      y_max = max(y_max, y)      # Re-fit model     gp = gp.fit(x_samples, y_samples)  fig.show() <pre>/var/folders/wg/gb8y92_d43j60wvfw6bs_cz00000gn/T/ipykernel_54343/3753732084.py:63: UserWarning: FigureCanvasAgg is non-interactive, and thus cannot be shown\n  fig.show()\n</pre>"},{"location":"coding/machine-learning/bayesian-optimization/","title":"\u8d1d\u53f6\u65af\u200b\u4f18\u5316\u200b\u00b6","text":"<p>\u200b\u8d1d\u53f6\u65af\u200b\u4f18\u5316\u200b\u662f\u200b\u4e00\u7c7b\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u4f18\u5316\u200b\u9ed1\u76d2\u200b\u51fd\u6570\u200b\u7684\u200b\u4f18\u5316\u200b\u65b9\u6cd5\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u9ed1\u76d2\u200b\u51fd\u6570\u200b\u6765\u8bf4\u200b\uff0c\u200b\u6211\u4eec\u200b\u65e0\u6cd5\u200b\u5f97\u77e5\u200b\u5176\u200b\u663e\u5f0f\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\uff0c\u200b\u53ea\u80fd\u200b\u901a\u8fc7\u200b\u8f93\u5165\u200b\u4e00\u4e2a\u200b\u6570\u636e\u200b\uff0c\u200b\u89c2\u6d4b\u200b\u5176\u200b\u8f93\u51fa\u200b\u7684\u200b\u65b9\u6cd5\u200b\u5bfb\u627e\u200b\u5b83\u200b\u7684\u200b\u6700\u5927\u503c\u200b\u3002\u200b\u501f\u52a9\u4e8e\u200b\u8d1d\u53f6\u65af\u200b\u7edf\u8ba1\u200b\u7684\u200b\u601d\u60f3\u200b\uff0c\u200b\u8d1d\u53f6\u65af\u200b\u4f18\u5316\u200b\u6700\u521d\u200b\u8ba4\u4e3a\u200b\u51fd\u6570\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5b8c\u5168\u200b\u968f\u673a\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4e0d\u65ad\u200b\u5730\u200b\u89c2\u6d4b\u200b\u6765\u200b\u66f4\u65b0\u200b\u5bf9\u200b\u51fd\u6570\u200b\u7684\u200b\u4f30\u8ba1\u200b\uff08\u200b\u540e\u9a8c\u200b\uff09\u3002\u200b\u5728\u200b\u6bcf\u200b\u4e00\u6b65\u200b\u8fed\u4ee3\u200b\u4e2d\u200b\uff0c\u200b\u7b97\u6cd5\u200b\u4f1a\u200b\u6839\u636e\u200b\u5f53\u524d\u200b\u7684\u200b\u540e\u9a8c\u200b\uff0c\u200b\u901a\u8fc7\u200b\u91c7\u96c6\u200b\u51fd\u6570\u200b\u6765\u200b\u9009\u62e9\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u89c2\u6d4b\u200b\u7684\u200b\u70b9\u200b\u3002\u200b\u8d1d\u53f6\u65af\u200b\u4f18\u5316\u200b\u7684\u200b\u4f18\u70b9\u200b\u662f\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8f83\u200b\u5c11\u200b\u7684\u200b\u8fed\u4ee3\u200b\u6b21\u6570\u200b\u5185\u200b\u627e\u5230\u200b\u5168\u5c40\u200b\u6700\u4f18\u200b\u89e3\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5728\u200b\u5b9e\u9645\u200b\u5e94\u7528\u200b\u4e2d\u200b\u88ab\u200b\u5e7f\u6cdb\u200b\u4f7f\u7528\u200b\u3002</p> <p>\u200b\u5047\u8bbe\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u7684\u200b\u5f62\u5f0f\u200b\u5982\u4e0b\u200b\uff1a</p>"},{"location":"coding/machine-learning/bert/","title":"BERT","text":"In\u00a0[1]: Copied! <pre>import transformers\nimport torch\n\nfrom custom_transformer import Encoder\n</pre> import transformers import torch  from custom_transformer import Encoder <p>huggingface\u200b\u4e2d\u200b\u7684\u200b\u6a21\u578b\u200b\u901a\u5e38\u200b\u5bf9\u5e94\u200b\u4e00\u7ec4\u200bconfig\uff0c\u200b\u5b58\u50a8\u200b\u6a21\u578b\u200b\u7684\u200b\u8d85\u200b\u53c2\u6570\u200b\u3002</p> In\u00a0[2]: Copied! <pre>bert_config = transformers.BertConfig.from_pretrained('bert-base-uncased', local_files_only=True)\n# Remove the pooler layer\nbert_config\n</pre> bert_config = transformers.BertConfig.from_pretrained('bert-base-uncased', local_files_only=True) # Remove the pooler layer bert_config <pre>/opt/homebrew/lib/python3.11/site-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.\n  warnings.warn(\n</pre> Out[2]: <pre>BertConfig {\n  \"architectures\": [\n    \"BertForMaskedLM\"\n  ],\n  \"attention_probs_dropout_prob\": 0.1,\n  \"classifier_dropout\": null,\n  \"gradient_checkpointing\": false,\n  \"hidden_act\": \"gelu\",\n  \"hidden_dropout_prob\": 0.1,\n  \"hidden_size\": 768,\n  \"initializer_range\": 0.02,\n  \"intermediate_size\": 3072,\n  \"layer_norm_eps\": 1e-12,\n  \"max_position_embeddings\": 512,\n  \"model_type\": \"bert\",\n  \"num_attention_heads\": 12,\n  \"num_hidden_layers\": 12,\n  \"pad_token_id\": 0,\n  \"position_embedding_type\": \"absolute\",\n  \"transformers_version\": \"4.41.2\",\n  \"type_vocab_size\": 2,\n  \"use_cache\": true,\n  \"vocab_size\": 30522\n}</pre> <p>\u200b\u9996\u5148\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u52a0\u8f7d\u200b\u9884\u200b\u8bad\u7ec3\u200b\u7684\u200bbert-base-uncased\u200b\u6a21\u578b\u200b\uff0c\u200b\u7528\u4e8e\u200b\u548c\u200b\u6211\u4eec\u200b\u7684\u200b\u6a21\u578b\u200b\u8fdb\u884c\u200b\u5bf9\u6bd4\u200b\u3002</p> In\u00a0[3]: Copied! <pre>bert_tokenizer = transformers.BertTokenizer.from_pretrained(\n    'bert-base-uncased', local_files_only=True\n)\nhf_model = transformers.BertModel.from_pretrained(\n    'bert-base-uncased', config=bert_config, add_pooling_layer=False\n)\nhf_model\n</pre> bert_tokenizer = transformers.BertTokenizer.from_pretrained(     'bert-base-uncased', local_files_only=True ) hf_model = transformers.BertModel.from_pretrained(     'bert-base-uncased', config=bert_config, add_pooling_layer=False ) hf_model Out[3]: <pre>BertModel(\n  (embeddings): BertEmbeddings(\n    (word_embeddings): Embedding(30522, 768, padding_idx=0)\n    (position_embeddings): Embedding(512, 768)\n    (token_type_embeddings): Embedding(2, 768)\n    (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)\n    (dropout): Dropout(p=0.1, inplace=False)\n  )\n  (encoder): BertEncoder(\n    (layer): ModuleList(\n      (0-11): 12 x BertLayer(\n        (attention): BertAttention(\n          (self): BertSdpaSelfAttention(\n            (query): Linear(in_features=768, out_features=768, bias=True)\n            (key): Linear(in_features=768, out_features=768, bias=True)\n            (value): Linear(in_features=768, out_features=768, bias=True)\n            (dropout): Dropout(p=0.1, inplace=False)\n          )\n          (output): BertSelfOutput(\n            (dense): Linear(in_features=768, out_features=768, bias=True)\n            (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)\n            (dropout): Dropout(p=0.1, inplace=False)\n          )\n        )\n        (intermediate): BertIntermediate(\n          (dense): Linear(in_features=768, out_features=3072, bias=True)\n          (intermediate_act_fn): GELUActivation()\n        )\n        (output): BertOutput(\n          (dense): Linear(in_features=3072, out_features=768, bias=True)\n          (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)\n          (dropout): Dropout(p=0.1, inplace=False)\n        )\n      )\n    )\n  )\n)</pre> <p>\u200b\u63a5\u4e0b\u6765\u200b\uff0c\u200b\u6211\u4eec\u200b\u6839\u636e\u200bconfig\u200b\u548c\u200b\u6a21\u578b\u200b\u7684\u200b\u7ed3\u6784\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200bBERT\u200b\u6a21\u578b\u200b\u3002</p> In\u00a0[4]: Copied! <pre>class BertEmbeddings(torch.nn.Module):\n    def __init__(self, config: transformers.BertConfig):\n        super(BertEmbeddings, self).__init__()\n\n        self.word_embeddings = torch.nn.Embedding(\n            config.vocab_size, config.hidden_size, padding_idx=config.pad_token_id\n        )\n        self.positional_embedding = torch.nn.Embedding(\n            config.max_position_embeddings, config.hidden_size\n        )\n        self.token_type_embeddings = torch.nn.Embedding(\n            config.type_vocab_size, config.hidden_size\n        )\n        self.ln = torch.nn.LayerNorm(config.hidden_size, eps=config.layer_norm_eps)\n        self.dropout = torch.nn.Dropout(config.hidden_dropout_prob)\n\n    def forward(self, input_ids):\n        input_embeds = self.word_embeddings(input_ids)\n        pos_embeds = self.positional_embedding(\n            torch.arange(input_ids.size(1), device=input_ids.device)\n        )\n        type_embeds = self.token_type_embeddings(\n            torch.zeros_like(input_ids)\n        )\n        return self.dropout(self.ln(input_embeds + pos_embeds + type_embeds))\n\nclass CustomBertModel(torch.nn.Module):\n    def __init__(self, config: transformers.BertConfig):\n        super(CustomBertModel, self).__init__()\n        self.shared = BertEmbeddings(config)\n        self.encoder = Encoder(\n            num_layers=config.num_hidden_layers,\n            input_dim=config.hidden_size,\n            num_heads=config.num_attention_heads,\n            ffn_dim=config.intermediate_size,\n            dropout=config.hidden_dropout_prob,\n            layer_norm_eps=config.layer_norm_eps,\n            activation=config.hidden_act,\n        )\n\n    def forward(self, input_ids, padding_mask):\n        input_embeds = self.shared(input_ids)\n        return self.encoder(input_embeds, padding_mask=padding_mask)\n\ncustom_model = CustomBertModel(bert_config)\ncustom_model\n</pre> class BertEmbeddings(torch.nn.Module):     def __init__(self, config: transformers.BertConfig):         super(BertEmbeddings, self).__init__()          self.word_embeddings = torch.nn.Embedding(             config.vocab_size, config.hidden_size, padding_idx=config.pad_token_id         )         self.positional_embedding = torch.nn.Embedding(             config.max_position_embeddings, config.hidden_size         )         self.token_type_embeddings = torch.nn.Embedding(             config.type_vocab_size, config.hidden_size         )         self.ln = torch.nn.LayerNorm(config.hidden_size, eps=config.layer_norm_eps)         self.dropout = torch.nn.Dropout(config.hidden_dropout_prob)      def forward(self, input_ids):         input_embeds = self.word_embeddings(input_ids)         pos_embeds = self.positional_embedding(             torch.arange(input_ids.size(1), device=input_ids.device)         )         type_embeds = self.token_type_embeddings(             torch.zeros_like(input_ids)         )         return self.dropout(self.ln(input_embeds + pos_embeds + type_embeds))  class CustomBertModel(torch.nn.Module):     def __init__(self, config: transformers.BertConfig):         super(CustomBertModel, self).__init__()         self.shared = BertEmbeddings(config)         self.encoder = Encoder(             num_layers=config.num_hidden_layers,             input_dim=config.hidden_size,             num_heads=config.num_attention_heads,             ffn_dim=config.intermediate_size,             dropout=config.hidden_dropout_prob,             layer_norm_eps=config.layer_norm_eps,             activation=config.hidden_act,         )      def forward(self, input_ids, padding_mask):         input_embeds = self.shared(input_ids)         return self.encoder(input_embeds, padding_mask=padding_mask)  custom_model = CustomBertModel(bert_config) custom_model Out[4]: <pre>CustomBertModel(\n  (shared): BertEmbeddings(\n    (word_embeddings): Embedding(30522, 768, padding_idx=0)\n    (positional_embedding): Embedding(512, 768)\n    (token_type_embeddings): Embedding(2, 768)\n    (ln): LayerNorm((768,), eps=1e-12, elementwise_affine=True)\n    (dropout): Dropout(p=0.1, inplace=False)\n  )\n  (encoder): Encoder(\n    (layers): ModuleList(\n      (0-11): 12 x EncoderLayer(\n        (attention): MultiHeadSelfAttention(\n          (W_Q): Linear(in_features=768, out_features=768, bias=True)\n          (W_K): Linear(in_features=768, out_features=768, bias=True)\n          (W_V): Linear(in_features=768, out_features=768, bias=True)\n          (W_O): Linear(in_features=768, out_features=768, bias=True)\n        )\n        (norm1): LayerNorm((768,), eps=1e-12, elementwise_affine=True)\n        (dropout1): Dropout(p=0.1, inplace=False)\n        (ffn): FFN(\n          (fc1): Linear(in_features=768, out_features=3072, bias=True)\n          (fc2): Linear(in_features=3072, out_features=768, bias=True)\n          (act): GELU(approximate='none')\n        )\n        (norm2): LayerNorm((768,), eps=1e-12, elementwise_affine=True)\n        (dropout2): Dropout(p=0.1, inplace=False)\n      )\n    )\n  )\n)</pre> <p>\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u5c06\u200b\u9884\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\u7684\u200b\u6743\u91cd\u200b\u52a0\u8f7d\u200b\u5230\u200b\u6211\u4eec\u200b\u7684\u200b\u6a21\u578b\u200b\u4e2d\u200b\u3002</p> In\u00a0[5]: Copied! <pre>def copy_weights(src, dest, bias: bool = False):\n    src.weight.data.copy_(dest.weight.data)\n    if bias:\n        src.bias.data.copy_(dest.bias.data)\n\ndef load_weight_from_hf(model: CustomBertModel, hf_model: transformers.BertModel):\n    # Embeddings\n    unbiased_layer_pairs = [\n        (model.shared.word_embeddings, hf_model.embeddings.word_embeddings),\n        (model.shared.positional_embedding, hf_model.embeddings.position_embeddings),\n        (model.shared.token_type_embeddings, hf_model.embeddings.token_type_embeddings),\n    ]\n    biased_layer_pairs = [\n        (model.shared.ln, hf_model.embeddings.LayerNorm),\n    ]\n    for custom_layer, hf_layer in zip(model.encoder.layers, hf_model.encoder.layer):\n        # attn\n        biased_layer_pairs.append((custom_layer.attention.W_Q, hf_layer.attention.self.query))\n        biased_layer_pairs.append((custom_layer.attention.W_K, hf_layer.attention.self.key))\n        biased_layer_pairs.append((custom_layer.attention.W_V, hf_layer.attention.self.value))\n        biased_layer_pairs.append((custom_layer.attention.W_O, hf_layer.attention.output.dense))\n        biased_layer_pairs.append((custom_layer.norm1, hf_layer.attention.output.LayerNorm))\n        # ffn\n        biased_layer_pairs.append((custom_layer.ffn.fc1, hf_layer.intermediate.dense))\n        biased_layer_pairs.append((custom_layer.ffn.fc2, hf_layer.output.dense))\n        biased_layer_pairs.append((custom_layer.norm2, hf_layer.output.LayerNorm))\n\n    for src, dest in unbiased_layer_pairs:\n        copy_weights(src, dest)\n    for src, dest in biased_layer_pairs:\n        copy_weights(src, dest, bias=True)\n    return model\n</pre> def copy_weights(src, dest, bias: bool = False):     src.weight.data.copy_(dest.weight.data)     if bias:         src.bias.data.copy_(dest.bias.data)  def load_weight_from_hf(model: CustomBertModel, hf_model: transformers.BertModel):     # Embeddings     unbiased_layer_pairs = [         (model.shared.word_embeddings, hf_model.embeddings.word_embeddings),         (model.shared.positional_embedding, hf_model.embeddings.position_embeddings),         (model.shared.token_type_embeddings, hf_model.embeddings.token_type_embeddings),     ]     biased_layer_pairs = [         (model.shared.ln, hf_model.embeddings.LayerNorm),     ]     for custom_layer, hf_layer in zip(model.encoder.layers, hf_model.encoder.layer):         # attn         biased_layer_pairs.append((custom_layer.attention.W_Q, hf_layer.attention.self.query))         biased_layer_pairs.append((custom_layer.attention.W_K, hf_layer.attention.self.key))         biased_layer_pairs.append((custom_layer.attention.W_V, hf_layer.attention.self.value))         biased_layer_pairs.append((custom_layer.attention.W_O, hf_layer.attention.output.dense))         biased_layer_pairs.append((custom_layer.norm1, hf_layer.attention.output.LayerNorm))         # ffn         biased_layer_pairs.append((custom_layer.ffn.fc1, hf_layer.intermediate.dense))         biased_layer_pairs.append((custom_layer.ffn.fc2, hf_layer.output.dense))         biased_layer_pairs.append((custom_layer.norm2, hf_layer.output.LayerNorm))      for src, dest in unbiased_layer_pairs:         copy_weights(src, dest)     for src, dest in biased_layer_pairs:         copy_weights(src, dest, bias=True)     return model In\u00a0[6]: Copied! <pre>custom_model = load_weight_from_hf(custom_model, hf_model)\n</pre> custom_model = load_weight_from_hf(custom_model, hf_model) <p>\u200b\u4f7f\u7528\u200bBERT\u200b\u7f16\u7801\u200b\u4e00\u53e5\u200b\u8bdd\u200b\uff0c\u200b\u9996\u5148\u200b\u9700\u8981\u200b\u5bf9\u200b\u53e5\u5b50\u200b\u5206\u8bcd\u200b\uff0c\u200b\u7136\u540e\u200b\u5c06\u200b\u5176\u200b\u8f93\u5165\u200b\u6a21\u578b\u200b\u5f97\u5230\u200b\u5bf9\u5e94\u200b\u7684\u200b\u8f93\u51fa\u200b\u3002</p> In\u00a0[7]: Copied! <pre>custom_model.eval()\nhf_model.eval()\n\nsentence = \"Hello, World!\"\ntokenized_sentence = bert_tokenizer(sentence, return_tensors='pt')\ninput_ids = tokenized_sentence['input_ids']\npadding_mask = tokenized_sentence['attention_mask']\n\ncustom_output = custom_model(input_ids, padding_mask)\nhf_output = hf_model(input_ids, attention_mask=padding_mask).last_hidden_state\ncustom_output[0, 0, :5], hf_output[0, 0, :5]\n</pre> custom_model.eval() hf_model.eval()  sentence = \"Hello, World!\" tokenized_sentence = bert_tokenizer(sentence, return_tensors='pt') input_ids = tokenized_sentence['input_ids'] padding_mask = tokenized_sentence['attention_mask']  custom_output = custom_model(input_ids, padding_mask) hf_output = hf_model(input_ids, attention_mask=padding_mask).last_hidden_state custom_output[0, 0, :5], hf_output[0, 0, :5] Out[7]: <pre>(tensor([-0.0781,  0.1587,  0.0400, -0.1986, -0.3442], grad_fn=&lt;SliceBackward0&gt;),\n tensor([-0.0781,  0.1587,  0.0400, -0.1986, -0.3442], grad_fn=&lt;SliceBackward0&gt;))</pre> In\u00a0[8]: Copied! <pre>torch.allclose(custom_output, hf_output, atol=1e-5)\n</pre> torch.allclose(custom_output, hf_output, atol=1e-5) Out[8]: <pre>True</pre>"},{"location":"coding/machine-learning/box-muller-transform/","title":"Box-Muller \u200b\u53d8\u6362","text":"In\u00a0[1]: Copied! <pre>import numpy as np\nfrom matplotlib import pyplot as plt\n\n%config InlineBackend.figure_format = 'svg'\n</pre> import numpy as np from matplotlib import pyplot as plt  %config InlineBackend.figure_format = 'svg' In\u00a0[2]: Copied! <pre>theta = np.random.uniform(0, 2*np.pi, 1000)\np = np.random.uniform(0, 1, 1000)\n\nr = np.sqrt(-2 * np.log(1 - p))\nx = r * np.cos(theta)\ny = r * np.sin(theta)\n</pre> theta = np.random.uniform(0, 2*np.pi, 1000) p = np.random.uniform(0, 1, 1000)  r = np.sqrt(-2 * np.log(1 - p)) x = r * np.cos(theta) y = r * np.sin(theta) In\u00a0[3]: Copied! <pre>fig, ax = plt.subplots(\n    2, 2, figsize=(6, 6),\n    width_ratios=[5, 1], height_ratios=[1, 5],\n    sharex='col', sharey='row'\n)\nax[0][1].set_axis_off()\nax[0][0].hist(x, bins=20, orientation='vertical')\nax[1][1].hist(y, bins=20, orientation='horizontal')\nax[1][0].scatter(x, y, s=3, alpha=0.5)\nplt.show()\n</pre> fig, ax = plt.subplots(     2, 2, figsize=(6, 6),     width_ratios=[5, 1], height_ratios=[1, 5],     sharex='col', sharey='row' ) ax[0][1].set_axis_off() ax[0][0].hist(x, bins=20, orientation='vertical') ax[1][1].hist(y, bins=20, orientation='horizontal') ax[1][0].scatter(x, y, s=3, alpha=0.5) plt.show() <p>\u200b\u901a\u8fc7\u200bQ-Q\u200b\u56fe\u200b\u53ef\u4ee5\u200b\u9a8c\u8bc1\u200b\u751f\u6210\u200b\u7684\u200b\u968f\u673a\u53d8\u91cf\u200b\u662f\u5426\u200b\u670d\u4ece\u200b\u6807\u51c6\u200b\u6b63\u6001\u5206\u5e03\u200b\u3002</p> In\u00a0[4]: Copied! <pre>from scipy.stats import norm\n\nreal_norm = norm.ppf(np.linspace(0, 1, 1000))\nsample_norm = np.sort(x)\n\nfig, ax = plt.subplots(figsize=(6, 6))\nax.scatter(real_norm, sample_norm, s=3, alpha=0.5, label='Sample')\nax.plot([-3, 3], [-3, 3], color='red', linestyle='--', label='Theoretical')\nax.set_xlabel('Theoretical quantiles')\nax.set_ylabel('Sample quantiles')\nax.legend()\nax.set_aspect('equal')\nplt.show()\n</pre> from scipy.stats import norm  real_norm = norm.ppf(np.linspace(0, 1, 1000)) sample_norm = np.sort(x)  fig, ax = plt.subplots(figsize=(6, 6)) ax.scatter(real_norm, sample_norm, s=3, alpha=0.5, label='Sample') ax.plot([-3, 3], [-3, 3], color='red', linestyle='--', label='Theoretical') ax.set_xlabel('Theoretical quantiles') ax.set_ylabel('Sample quantiles') ax.legend() ax.set_aspect('equal') plt.show()"},{"location":"coding/machine-learning/box-muller-transform/#box-muller","title":"Box-Muller \u200b\u53d8\u6362\u200b\u00b6","text":"<p>\u200b\u4ee5\u200b\u6807\u51c6\u200b\u6b63\u6001\u5206\u5e03\u200b\u7684\u200b\u91c7\u6837\u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u8bbe\u200b$X, Y$\u200b\u4e3a\u200b\u4e24\u4e2a\u200b\u72ec\u7acb\u200b\u5206\u5e03\u200b\u7684\u200b\u6b63\u6001\u5206\u5e03\u200b\u968f\u673a\u53d8\u91cf\u200b\uff0c\u200b\u5176\u200b\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u200b\u4e3a\u200b</p> <p>$$ f(x, y) = \\frac{1}{2\\pi}e^{-\\frac{x^2 + y^2}{2}} $$</p> <p>\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u6781\u200b\u5750\u6807\u7cfb\u200b\uff0c$x = r\\cos\\theta, y = r\\sin\\theta$\uff0c\u200b\u5219\u200b\u6709\u200b</p> <p>$$ f(r, \\theta) = \\frac{1}{2\\pi}re^{-\\frac{r^2}{2}} $$</p> <p>\u200b\u6b64\u65f6\u200b\uff0c$\\theta$\u200b\u4e0d\u200b\u51fa\u73b0\u200b\u5728\u200b\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u200b\u4e2d\u200b\uff0c\u200b\u56e0\u6b64\u200b$\\theta$\u200b\u72ec\u7acb\u200b\u4e8e\u200b$r$\uff0c\u200b\u4e14\u200b\u670d\u4ece\u200b$[0, 2\\pi)$\u200b\u7684\u200b\u5747\u5300\u5206\u5e03\u200b\u3002$r$\u200b\u7684\u200b\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u200b\u4e3a\u200b$re^{-\\frac{r^2}{2}}$\uff0c\u200b\u5176\u200bCDF\u200b\u4e3a\u200b</p> <p>$$ F(r) = \\int_0^r te^{-\\frac{t^2}{2}}dt = 1 - e^{-\\frac{r^2}{2}} $$</p> <p>$F(r)$\u200b\u7684\u200b\u9006\u200b\u4e3a\u200b</p> <p>$$ F^{-1}(p) = \\sqrt{-2\\log(1 - p)} $$</p> <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4ece\u200b$U(0, 2\\pi)$\u200b\u4e2d\u200b\u91c7\u6837\u200b$\\theta$\uff0c\u200b\u4ece\u200b$U(0, 1)$\u200b\u4e2d\u200b\u91c7\u6837\u200b$p$\uff0c\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b$F^{-1}(p)$\u200b\u8ba1\u7b97\u200b$r$\uff0c\u200b\u6309\u7167\u200b$x = r\\cos\\theta, y = r\\sin\\theta$\u200b\u8ba1\u7b97\u200b\u5f97\u5230\u200b$X, Y$\u200b\u7684\u200b\u91c7\u6837\u200b\u3002\u200b\u91c7\u6837\u200b\u7ed3\u679c\u200b\u5206\u522b\u200b\u670d\u4ece\u200b\u6807\u51c6\u200b\u6b63\u6001\u5206\u5e03\u200b\u3002</p>"},{"location":"coding/machine-learning/cgan/","title":"Conditional GAN","text":"In\u00a0[1]: Copied! <pre>import torch\nimport torchvision\nfrom torch.utils.data import DataLoader\n\n# SVG output\n%config InlineBackend.figure_format = 'svg'\n\n# Fix for certificate error\n# https://stackoverflow.com/questions/71263622\nimport ssl\nssl._create_default_https_context = ssl._create_unverified_context\n</pre> import torch import torchvision from torch.utils.data import DataLoader  # SVG output %config InlineBackend.figure_format = 'svg'  # Fix for certificate error # https://stackoverflow.com/questions/71263622 import ssl ssl._create_default_https_context = ssl._create_unverified_context In\u00a0[2]: Copied! <pre>train_dataset = torchvision.datasets.MNIST(\n    train=True, root='data',\n    transform=torchvision.transforms.ToTensor(), download=True\n)\ntrain_loader = DataLoader(train_dataset, batch_size=64, shuffle=True, num_workers=4)\n</pre> train_dataset = torchvision.datasets.MNIST(     train=True, root='data',     transform=torchvision.transforms.ToTensor(), download=True ) train_loader = DataLoader(train_dataset, batch_size=64, shuffle=True, num_workers=4) <p>\u200b\u6b64\u5904\u200b\u4f7f\u7528\u200bWasserstein GAN\uff0c\u200b\u901a\u8fc7\u200b\u5982\u4e0b\u200b\u65b9\u5f0f\u200b\u5f15\u5165\u200b\u7c7b\u522b\u200b\u4fe1\u606f\u200b\uff1a</p> <ul> <li>\u200b\u5728\u200b\u751f\u6210\u5668\u200b\u4e2d\u200b\u5f15\u5165\u200b\u4e00\u4e2a\u200b128\u200b\u7ef4\u200b\u7684\u200bembedding\u200b\u4f5c\u4e3a\u200b\u7c7b\u522b\u200b\u8f93\u5165\u200b\uff0cembedding\u200b\u540e\u200b\u7684\u200b\u5411\u91cf\u200b\u4e0e\u200b\u8f93\u5165\u200b\u7684\u200b\u968f\u673a\u566a\u58f0\u200b\u62fc\u63a5\u200b\uff0c\u200b\u9001\u5165\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u3002</li> <li>\u200b\u5728\u200b\u5224\u522b\u200b\u5668\u4e2d\u200b\u5f15\u5165\u200b\u4e00\u4e2a\u200b784\u200b\u7ef4\u200b\u7684\u200bembedding\uff0c\u200b\u53d8\u5f62\u200b\u81f3\u200b$1\\times 28\\times 28$\u200b\u7684\u200b\u7ef4\u5ea6\u200b\u540e\u200b\uff0c\u200b\u4f5c\u4e3a\u200b\u8f93\u5165\u200b\u56fe\u50cf\u200b\u7684\u200b\u7b2c\u4e8c\u4e2a\u200b\u901a\u9053\u200b\u3002</li> </ul> In\u00a0[3]: Copied! <pre>class Reshape(torch.nn.Module):\n    def __init__(self, *shape):\n        super(Reshape, self).__init__()\n        self.shape = shape\n\n    def forward(self, x):\n        return x.view(x.shape[0], *self.shape)\n\n\nclass Generator(torch.nn.Module):\n    def __init__(self):\n        super(Generator, self).__init__()\n        self.classes = torch.nn.Embedding(10, 128)\n        self.fcn = torch.nn.Sequential(\n            torch.nn.Linear(in_features=256, out_features=128 * 7 * 7),\n            torch.nn.LeakyReLU(0.2),\n            Reshape(128, 7, 7),\n        )\n        self.deconv = torch.nn.Sequential(\n            torch.nn.ConvTranspose2d(\n                in_channels=128,\n                out_channels=128,\n                kernel_size=(4, 4),\n                stride=(2, 2),\n                padding=(1, 1),\n            ),\n            torch.nn.LeakyReLU(0.2),\n            torch.nn.ConvTranspose2d(\n                in_channels=128,\n                out_channels=128,\n                kernel_size=(4, 4),\n                stride=(2, 2),\n                padding=(1, 1),\n            ),\n            torch.nn.LeakyReLU(0.2),\n            torch.nn.Conv2d(\n                in_channels=128, out_channels=1, kernel_size=(3, 3), padding=(1, 1)\n            ),\n            torch.nn.Tanh(),\n        )\n        self.layers = torch.nn.Sequential(self.fcn, self.deconv)\n\n    def forward(self, x, c):\n        c_embedding = self.classes(c)\n        x = torch.concatenate([x, c_embedding], dim=1)\n        for layer in self.layers:\n            x = layer(x)\n        return x\n\nclass Critic(torch.nn.Module):\n    def __init__(self):\n        super(Critic, self).__init__()\n        self.c_input = torch.nn.Sequential(\n            torch.nn.Embedding(10, 784),\n            Reshape(1, 28, 28)\n        )\n        self.x_input = torch.nn.Sequential(\n            Reshape(1, 28, 28)\n        )\n        self.conv = torch.nn.Sequential(\n            torch.nn.Conv2d(\n                in_channels=2,\n                out_channels=64,\n                kernel_size=(4, 4),\n                stride=(2, 2),\n                padding=(1, 1),\n            ),\n            torch.nn.LeakyReLU(0.2),\n            torch.nn.Conv2d(\n                in_channels=64,\n                out_channels=64,\n                kernel_size=(4, 4),\n                stride=(2, 2),\n                padding=(1, 1),\n            ),\n            torch.nn.LeakyReLU(0.2),\n            Reshape(3136),\n            torch.nn.Linear(in_features=3136, out_features=1)\n        )\n\n    def forward(self, x, c):\n        x = self.x_input(x)\n        c = self.c_input(c)\n        x = self.conv(torch.concatenate([x, c], dim=1))\n        return x.squeeze()\n</pre> class Reshape(torch.nn.Module):     def __init__(self, *shape):         super(Reshape, self).__init__()         self.shape = shape      def forward(self, x):         return x.view(x.shape[0], *self.shape)   class Generator(torch.nn.Module):     def __init__(self):         super(Generator, self).__init__()         self.classes = torch.nn.Embedding(10, 128)         self.fcn = torch.nn.Sequential(             torch.nn.Linear(in_features=256, out_features=128 * 7 * 7),             torch.nn.LeakyReLU(0.2),             Reshape(128, 7, 7),         )         self.deconv = torch.nn.Sequential(             torch.nn.ConvTranspose2d(                 in_channels=128,                 out_channels=128,                 kernel_size=(4, 4),                 stride=(2, 2),                 padding=(1, 1),             ),             torch.nn.LeakyReLU(0.2),             torch.nn.ConvTranspose2d(                 in_channels=128,                 out_channels=128,                 kernel_size=(4, 4),                 stride=(2, 2),                 padding=(1, 1),             ),             torch.nn.LeakyReLU(0.2),             torch.nn.Conv2d(                 in_channels=128, out_channels=1, kernel_size=(3, 3), padding=(1, 1)             ),             torch.nn.Tanh(),         )         self.layers = torch.nn.Sequential(self.fcn, self.deconv)      def forward(self, x, c):         c_embedding = self.classes(c)         x = torch.concatenate([x, c_embedding], dim=1)         for layer in self.layers:             x = layer(x)         return x  class Critic(torch.nn.Module):     def __init__(self):         super(Critic, self).__init__()         self.c_input = torch.nn.Sequential(             torch.nn.Embedding(10, 784),             Reshape(1, 28, 28)         )         self.x_input = torch.nn.Sequential(             Reshape(1, 28, 28)         )         self.conv = torch.nn.Sequential(             torch.nn.Conv2d(                 in_channels=2,                 out_channels=64,                 kernel_size=(4, 4),                 stride=(2, 2),                 padding=(1, 1),             ),             torch.nn.LeakyReLU(0.2),             torch.nn.Conv2d(                 in_channels=64,                 out_channels=64,                 kernel_size=(4, 4),                 stride=(2, 2),                 padding=(1, 1),             ),             torch.nn.LeakyReLU(0.2),             Reshape(3136),             torch.nn.Linear(in_features=3136, out_features=1)         )      def forward(self, x, c):         x = self.x_input(x)         c = self.c_input(c)         x = self.conv(torch.concatenate([x, c], dim=1))         return x.squeeze() <p>\u200b\u5176\u4f59\u90e8\u5206\u200b\u4ee3\u7801\u200b\u548c\u200bWGAN\u200b\u4fdd\u6301\u4e00\u81f4\u200b\u3002</p> In\u00a0[4]: Copied! <pre>from typing import Optional\n\nclass ConditionalWGAN(torch.nn.Module):\n    def __init__(self):\n        super(ConditionalWGAN, self).__init__()\n        self.generator = Generator()\n        self.critic = Critic()\n        self.device = torch.device('cpu')\n\n        for param in self.generator.parameters():\n            torch.nn.init.normal_(param, mean=0, std=0.02)\n\n    def to(self, *args, **kwargs):\n        if args:\n            self.device = args[0]\n        elif 'device' in kwargs:\n            self.device = kwargs['device']\n        super().to(*args, **kwargs)\n\n    def forward(self, c: torch.Tensor, x: Optional[torch.Tensor] = None):\n        c = c.to(self.device)\n        size = c.size(0)\n        if x is None:\n            assert size is not None\n            z = torch.randn(size, 128, device=self.device)\n            x = self.generator(z, c)\n        else:\n            size = x.size(0)\n            x = x.to(self.device)\n            x = x * 2 - 1\n\n        y = self.critic(x, c)\n        return x, y\n\n    def penalty(self, x_real: torch.Tensor, x_fake: torch.Tensor, c: torch.Tensor):\n        assert x_real.shape == x_fake.shape\n        size = x_real.size(0)\n        x_real = x_real.to(self.device)\n        x_fake = x_fake.to(self.device)\n        c = c.to(self.device)\n        alpha = torch.rand(size, 1, 1, device=self.device)\n\n        x_real = x_real.reshape(size, 28, 28)\n        x_fake = x_fake.reshape(size, 28, 28)\n\n        x_mid = (x_real * alpha + x_fake * (1 - alpha)).detach()\n        x_mid.requires_grad_(True)\n        y = self.critic(x_mid, c)\n\n        gradients = torch.autograd.grad(\n            outputs=y,\n            inputs=x_mid,\n            grad_outputs=torch.ones_like(y, device=self.device),\n            create_graph=True,\n            retain_graph=True,\n            only_inputs=True\n        )[0]\n        gradient_norm = gradients.view(size, -1).norm(2, dim=1)\n\n        return (gradient_norm - 1) ** 2\n\nmodel = ConditionalWGAN()\n</pre> from typing import Optional  class ConditionalWGAN(torch.nn.Module):     def __init__(self):         super(ConditionalWGAN, self).__init__()         self.generator = Generator()         self.critic = Critic()         self.device = torch.device('cpu')          for param in self.generator.parameters():             torch.nn.init.normal_(param, mean=0, std=0.02)      def to(self, *args, **kwargs):         if args:             self.device = args[0]         elif 'device' in kwargs:             self.device = kwargs['device']         super().to(*args, **kwargs)      def forward(self, c: torch.Tensor, x: Optional[torch.Tensor] = None):         c = c.to(self.device)         size = c.size(0)         if x is None:             assert size is not None             z = torch.randn(size, 128, device=self.device)             x = self.generator(z, c)         else:             size = x.size(0)             x = x.to(self.device)             x = x * 2 - 1          y = self.critic(x, c)         return x, y      def penalty(self, x_real: torch.Tensor, x_fake: torch.Tensor, c: torch.Tensor):         assert x_real.shape == x_fake.shape         size = x_real.size(0)         x_real = x_real.to(self.device)         x_fake = x_fake.to(self.device)         c = c.to(self.device)         alpha = torch.rand(size, 1, 1, device=self.device)          x_real = x_real.reshape(size, 28, 28)         x_fake = x_fake.reshape(size, 28, 28)          x_mid = (x_real * alpha + x_fake * (1 - alpha)).detach()         x_mid.requires_grad_(True)         y = self.critic(x_mid, c)          gradients = torch.autograd.grad(             outputs=y,             inputs=x_mid,             grad_outputs=torch.ones_like(y, device=self.device),             create_graph=True,             retain_graph=True,             only_inputs=True         )[0]         gradient_norm = gradients.view(size, -1).norm(2, dim=1)          return (gradient_norm - 1) ** 2  model = ConditionalWGAN() <p>\u200b\u5728\u200b\u6ca1\u6709\u200b\u8bad\u7ec3\u200b\u65f6\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u7c7b\u522b\u200b\u53ea\u4f1a\u200b\u8f93\u51fa\u200b\u968f\u673a\u566a\u58f0\u200b\u3002</p> In\u00a0[5]: Copied! <pre>from matplotlib import pyplot as plt\nfrom matplotlib.axes import Axes\nfrom typing import Iterable\n\n\ndef plot_generator(z: torch.Tensor, c: torch.Tensor, model: ConditionalWGAN, ax: Optional[Axes] = None):\n    z = z.to(model.device)\n    c = c.to(model.device)\n    with torch.no_grad():\n        x = model.generator(z, c).view(28, 28).cpu().numpy() * 0.5 + 0.5\n\n    if ax is None:\n        plt.imshow(x, cmap='gray')\n        plt.axis('off')\n    else:\n        ax.imshow(x, cmap='gray')\n        ax.axis('off')\n\ndef plot_all_numbers(x: torch.Tensor, model: ConditionalWGAN, axes: Iterable[Axes]):\n    c = torch.arange(0, 10, dtype=torch.long)\n    for i, ax in enumerate(axes):\n        plot_generator(x.reshape(1, -1), c[i].unsqueeze(0), model, ax)\n\nx_noise = torch.randn(1, 128)\nfig, ax = plt.subplots(2, 5, figsize=(8, 3))\naxes = ax.flatten()\nplot_all_numbers(x_noise, model, axes)\nfor i, ax in enumerate(axes):\n    ax.set_title(f'Class {i}', fontsize=9)\nplt.show()\n</pre> from matplotlib import pyplot as plt from matplotlib.axes import Axes from typing import Iterable   def plot_generator(z: torch.Tensor, c: torch.Tensor, model: ConditionalWGAN, ax: Optional[Axes] = None):     z = z.to(model.device)     c = c.to(model.device)     with torch.no_grad():         x = model.generator(z, c).view(28, 28).cpu().numpy() * 0.5 + 0.5      if ax is None:         plt.imshow(x, cmap='gray')         plt.axis('off')     else:         ax.imshow(x, cmap='gray')         ax.axis('off')  def plot_all_numbers(x: torch.Tensor, model: ConditionalWGAN, axes: Iterable[Axes]):     c = torch.arange(0, 10, dtype=torch.long)     for i, ax in enumerate(axes):         plot_generator(x.reshape(1, -1), c[i].unsqueeze(0), model, ax)  x_noise = torch.randn(1, 128) fig, ax = plt.subplots(2, 5, figsize=(8, 3)) axes = ax.flatten() plot_all_numbers(x_noise, model, axes) for i, ax in enumerate(axes):     ax.set_title(f'Class {i}', fontsize=9) plt.show() In\u00a0[6]: Copied! <pre># Optimizer\noptimizer_g = torch.optim.Adam(model.generator.parameters(), lr=2e-4)\noptimizer_d = torch.optim.Adam(model.critic.parameters(), lr=2e-4)\n\n# Hyper parameters\nN = 120  # Number of epochs\nalpha = 10  # Gradient penalty\nK = 5  # Number of critic updates per generator update\ndevice = 'cuda:5' if torch.cuda.is_available() else 'cpu'  # CUDA\nmodel.to(device)\n\n# Record training metrics\nstep = 0\ntrain_metrics = []\n</pre> # Optimizer optimizer_g = torch.optim.Adam(model.generator.parameters(), lr=2e-4) optimizer_d = torch.optim.Adam(model.critic.parameters(), lr=2e-4)  # Hyper parameters N = 120  # Number of epochs alpha = 10  # Gradient penalty K = 5  # Number of critic updates per generator update device = 'cuda:5' if torch.cuda.is_available() else 'cpu'  # CUDA model.to(device)  # Record training metrics step = 0 train_metrics = [] <p>\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\uff0c\u200b\u6bcf\u9694\u200b10\u200b\u4e2a\u200bepoch\u200b\u8bb0\u5f55\u200b\u5404\u4e2a\u200b\u7c7b\u522b\u200b\u7684\u200b\u751f\u6210\u5668\u200b\u8f93\u51fa\u200b\u3002</p> In\u00a0[7]: Copied! <pre>fig, ax = plt.subplots(10, N // 10, figsize=(8, 6))\naxes = iter(ax.T)\n\nfor epoch in range(N):\n    for i, (x, c) in enumerate(train_loader, start=0):\n        model.train()\n        step_metric = {}\n        step += 1\n        size = x.size(0)\n\n        # Train critic\n        # Fake sample\n        optimizer_g.zero_grad()\n        optimizer_d.zero_grad()\n        x_fake, y_fake = model(c)\n        fake = y_fake.mean()\n        fake.backward()\n        step_metric['fake_score'] = fake.item()\n        optimizer_d.step()\n\n        # Real sample\n        optimizer_g.zero_grad()\n        optimizer_d.zero_grad()\n        _, y_real = model(c, x)\n        real = -y_real.mean()\n        step_metric['real_score'] = -(real.item())\n        real.backward()\n        optimizer_d.step()\n\n        # Gradient penalty\n        optimizer_g.zero_grad()\n        optimizer_d.zero_grad()\n        penalty = model.penalty(x, x_fake, c).mean()\n        step_metric['penalty'] = penalty.item()\n        penalty = penalty * alpha\n        penalty.backward()\n        optimizer_d.step()\n\n        # Train generator\n        if step % K == 0:\n            # Train generator\n            optimizer_g.zero_grad()\n            optimizer_d.zero_grad()\n            x, y = model(c)\n            loss_fake = -y.mean()\n            loss_fake.backward()\n            optimizer_g.step()\n\n            step_metric['generator_score'] = -(loss_fake.item())\n\n        train_metrics.append(step_metric)\n\n    if (epoch + 1) % 10 == 0:\n        model.eval()\n        ax_nums = next(axes)\n        plot_all_numbers(x_noise, model, ax_nums)\n\nfig.show()\n</pre> fig, ax = plt.subplots(10, N // 10, figsize=(8, 6)) axes = iter(ax.T)  for epoch in range(N):     for i, (x, c) in enumerate(train_loader, start=0):         model.train()         step_metric = {}         step += 1         size = x.size(0)          # Train critic         # Fake sample         optimizer_g.zero_grad()         optimizer_d.zero_grad()         x_fake, y_fake = model(c)         fake = y_fake.mean()         fake.backward()         step_metric['fake_score'] = fake.item()         optimizer_d.step()          # Real sample         optimizer_g.zero_grad()         optimizer_d.zero_grad()         _, y_real = model(c, x)         real = -y_real.mean()         step_metric['real_score'] = -(real.item())         real.backward()         optimizer_d.step()          # Gradient penalty         optimizer_g.zero_grad()         optimizer_d.zero_grad()         penalty = model.penalty(x, x_fake, c).mean()         step_metric['penalty'] = penalty.item()         penalty = penalty * alpha         penalty.backward()         optimizer_d.step()          # Train generator         if step % K == 0:             # Train generator             optimizer_g.zero_grad()             optimizer_d.zero_grad()             x, y = model(c)             loss_fake = -y.mean()             loss_fake.backward()             optimizer_g.step()              step_metric['generator_score'] = -(loss_fake.item())          train_metrics.append(step_metric)      if (epoch + 1) % 10 == 0:         model.eval()         ax_nums = next(axes)         plot_all_numbers(x_noise, model, ax_nums)  fig.show() <p>\u200b\u8bad\u7ec3\u200b\u5b8c\u6210\u200b\u540e\u200b\uff0c\u200b\u8ba9\u200b\u6a21\u578b\u200b\u751f\u6210\u200b\u82e5\u5e72\u7ec4\u200b\u6570\u5b57\u200b\u3002\u200b\u4ece\u200b\u7ed3\u679c\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u53d1\u73b0\u200b\uff0c\u200b\u5982\u679c\u200b\u751f\u6210\u200b\u67d0\u4e2a\u200b\u6570\u5b57\u200b\u7684\u200b\u8d28\u91cf\u200b\u5f88\u200b\u597d\u200b\uff0c\u200b\u90a3\u4e48\u200b\u8fd9\u4e2a\u200b\u968f\u673a\u566a\u58f0\u200b\u6240\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5176\u4ed6\u200b\u7c7b\u522b\u200b\u7684\u200b\u8f93\u51fa\u200b\u8d28\u91cf\u200b\u4e5f\u200b\u4f1a\u200b\u8f83\u200b\u597d\u200b\uff0c\u200b\u53cd\u4e4b\u4ea6\u7136\u200b\u3002</p> In\u00a0[8]: Copied! <pre>model.eval()\nx_noise = torch.randn(12, 128)\nfig, ax = plt.subplots(10, 12, figsize=(8, 6))\nax = ax.T\n\nfor i in range(12):\n    plot_all_numbers(x_noise[i], model, ax[i])\nplt.show()\n</pre> model.eval() x_noise = torch.randn(12, 128) fig, ax = plt.subplots(10, 12, figsize=(8, 6)) ax = ax.T  for i in range(12):     plot_all_numbers(x_noise[i], model, ax[i]) plt.show() In\u00a0[9]: Copied! <pre>from typing import Any, Dict, Iterable, List, Tuple\nimport random\n\ndef extract_metrics(data: List[Dict[str, Any]], field: str) -&gt; Tuple[List[int], List[Any]]:\n    x, y = [], []\n    for step, record in enumerate(data, start=1):\n        if field in record:\n            x.append(step)\n            y.append(record[field])\n    return x, y\n\ndef ema(x, beta):\n    y = x[0]\n    for _ in x:\n        y = beta * y + (1 - beta) * _\n        yield y\n\ndef sample(x: Iterable[Any], y: Iterable[Any], ratio: float):\n    result_x, result_y = [], []\n    for x_sample, y_sample in zip(x, y):\n        if random.random() &lt; ratio:\n            result_x.append(x_sample)\n            result_y.append(y_sample)\n    return result_x, result_y\n</pre> from typing import Any, Dict, Iterable, List, Tuple import random  def extract_metrics(data: List[Dict[str, Any]], field: str) -&gt; Tuple[List[int], List[Any]]:     x, y = [], []     for step, record in enumerate(data, start=1):         if field in record:             x.append(step)             y.append(record[field])     return x, y  def ema(x, beta):     y = x[0]     for _ in x:         y = beta * y + (1 - beta) * _         yield y  def sample(x: Iterable[Any], y: Iterable[Any], ratio: float):     result_x, result_y = [], []     for x_sample, y_sample in zip(x, y):         if random.random() &lt; ratio:             result_x.append(x_sample)             result_y.append(y_sample)     return result_x, result_y <p>\u200b\u7ed8\u5236\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u5224\u522b\u200b\u5668\u200b\u5bf9\u200b\u771f\u5b9e\u200b\u6837\u672c\u200b\u548c\u200b\u751f\u6210\u200b\u6837\u672c\u200b\u7684\u200b\u8f93\u51fa\u200b\u3001\u200b\u751f\u6210\u200b\u5206\u5e03\u200b\u548c\u200b\u771f\u5b9e\u200b\u5206\u5e03\u200b\u7684\u200bWasserstein\u200b\u8ddd\u79bb\u200b\uff0c\u200b\u4ee5\u53ca\u200b1-Lipschitz\u200b\u7ea6\u675f\u200b\u7684\u200b\u6ee1\u8db3\u200b\u60c5\u51b5\u200b\u3002</p> In\u00a0[10]: Copied! <pre>fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(8, 6), sharex=True)\n\nx_real_score, y_real_score = extract_metrics(train_metrics, 'real_score')\nx_fake_score, y_fake_score = extract_metrics(train_metrics, 'fake_score')\nx_penalty, y_penalty = extract_metrics(train_metrics, 'penalty')\ny_penalty = [alpha * _ for _ in y_penalty]\n\n# Wasserstein distance\nx_diff, y_diff = zip(*[\n    (x_real, real - fake)\n    for x_real, real, x_fake, fake\n        in zip(x_real_score, y_real_score, x_fake_score, y_fake_score)\n    if x_real == x_fake\n])\n\nax1.plot(*sample(x_real_score, y_real_score, 0.01), color='lightgreen', alpha=0.5)\nax1.plot(*sample(x_fake_score, y_fake_score, 0.01), color='pink', alpha=0.5)\nax2.plot(*sample(x_diff, y_diff, 0.01), color='lightblue', alpha=0.5)\nax2.plot(*sample(x_penalty, y_penalty, 0.01), color='pink', alpha=0.5)\n\nax1.plot(*sample(x_real_score, ema(y_real_score, 0.99), 0.01), label='Real score', color='green', linewidth=1)\nax1.plot(*sample(x_fake_score, ema(y_fake_score, 0.99), 0.01), label='Fake score', color='red', linewidth=1)\nax2.plot(*sample(x_diff, ema(y_diff, 0.99), 0.01), label='Wasserstein distance', color='blue', linewidth=1)\nax2.plot(*sample(x_diff, ema(y_penalty, 0.99), 0.01), label=f'{alpha}x Gradient penalty', color='red', linewidth=1)\n\nax2.set_ylim(0, 3)\nax1.legend(loc='upper right')\nax2.legend(loc='upper right')\n\nfig.show()\n</pre> fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(8, 6), sharex=True)  x_real_score, y_real_score = extract_metrics(train_metrics, 'real_score') x_fake_score, y_fake_score = extract_metrics(train_metrics, 'fake_score') x_penalty, y_penalty = extract_metrics(train_metrics, 'penalty') y_penalty = [alpha * _ for _ in y_penalty]  # Wasserstein distance x_diff, y_diff = zip(*[     (x_real, real - fake)     for x_real, real, x_fake, fake         in zip(x_real_score, y_real_score, x_fake_score, y_fake_score)     if x_real == x_fake ])  ax1.plot(*sample(x_real_score, y_real_score, 0.01), color='lightgreen', alpha=0.5) ax1.plot(*sample(x_fake_score, y_fake_score, 0.01), color='pink', alpha=0.5) ax2.plot(*sample(x_diff, y_diff, 0.01), color='lightblue', alpha=0.5) ax2.plot(*sample(x_penalty, y_penalty, 0.01), color='pink', alpha=0.5)  ax1.plot(*sample(x_real_score, ema(y_real_score, 0.99), 0.01), label='Real score', color='green', linewidth=1) ax1.plot(*sample(x_fake_score, ema(y_fake_score, 0.99), 0.01), label='Fake score', color='red', linewidth=1) ax2.plot(*sample(x_diff, ema(y_diff, 0.99), 0.01), label='Wasserstein distance', color='blue', linewidth=1) ax2.plot(*sample(x_diff, ema(y_penalty, 0.99), 0.01), label=f'{alpha}x Gradient penalty', color='red', linewidth=1)  ax2.set_ylim(0, 3) ax1.legend(loc='upper right') ax2.legend(loc='upper right')  fig.show() <p>Paper reference:</p> <pre>@article{mirza2014conditional,\n\tauthor = {Mehdi Mirza and Simon Osindero},\n\teprint = {1411.1784},\n\tmonth = {11},\n\ttitle = {Conditional Generative Adversarial Nets},\n\turl = {https://arxiv.org/pdf/1411.1784.pdf},\n\tyear = {2014},\n}\n</pre>"},{"location":"coding/machine-learning/cgan/#conditional-gan","title":"Conditional GAN\u00b6","text":"<p>GAN\u200b\u548c\u200bWGAN\u200b\u90fd\u200b\u4ec5\u4ec5\u200b\u662f\u4ece\u200b\u968f\u673a\u200b\u5206\u5e03\u200b\u4e2d\u200b\u201c\u200b\u91c7\u6837\u200b\u201d\u200b\u51fa\u200b\u4e00\u4e2a\u200b\u6837\u672c\u200b\u3002\u200b\u751f\u6210\u200b\u8fd9\u4e2a\u200b\u6837\u672c\u200b\u7684\u200b\u4fe1\u606f\u200b\u6765\u6e90\u200b\u5b8c\u5168\u200b\u4f9d\u8d56\u4e8e\u200b\u968f\u673a\u566a\u58f0\u200b\uff0c\u200b\u6211\u4eec\u200b\u65e0\u6cd5\u200b\u201c\u200b\u63a7\u5236\u200b\u201d\u200b\u8fd9\u4e2a\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u6bd4\u5982\u200b\uff08MNIST\u200b\u4e0b\u200b\uff09\u200b\u8ba9\u200b\u751f\u6210\u5668\u200b\u751f\u6210\u200b\u67d0\u200b\u4e00\u4f4d\u200b\u6570\u5b57\u200b\u3002\u200b\u53e6\u5916\u200b\uff0c\u200b\u7531\u4e8e\u200b\u751f\u6210\u5668\u200b\u65e0\u6cd5\u200b\u533a\u5206\u200b\u4e0d\u540c\u200b\u7c7b\u522b\u200b\u7684\u200b\u751f\u6210\u200b\u6837\u672c\u200b\uff0c\u200b\u5b83\u200b\u53ef\u80fd\u200b\u751f\u6210\u200b\u4e00\u4e9b\u200b\u548c\u200b\u73b0\u5b9e\u200b\u6709\u200b\u8f83\u5927\u200b\u5dee\u5f02\u200b\u7684\u200b\u201c\u200b\u65e0\u6548\u200b\u6837\u672c\u200b\u201d\uff0c\u200b\u6bd4\u5982\u200b\u751f\u6210\u200b\u4e00\u4e9b\u200b\u201c\u200b\u9b3c\u753b\u7b26\u200b\u201d\u200b\u6570\u5b57\u200b\u3002Conditional GAN\u200b\u901a\u8fc7\u200b\u5c06\u200b\u6761\u4ef6\u200b\u4fe1\u606f\u200b\u5f15\u5165\u200b\u751f\u6210\u5668\u200b\u548c\u200b\u5224\u522b\u200b\u5668\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6307\u5bfc\u200b\u751f\u6210\u5668\u200b\u751f\u6210\u200b\u7b26\u5408\u200b\u67d0\u4e2a\u200b\u6761\u4ef6\u200b\u7684\u200b\u6570\u636e\u200b\u3002</p> <p>\u200b\u539f\u59cb\u200bGAN\u200b\u7684\u200b\u751f\u6210\u5668\u200b\u9700\u8981\u200b\u6700\u5c0f\u5316\u200b\u751f\u6210\u200b\u5206\u5e03\u200b$P_{\\text{fake}} (x)$\u200b\u548c\u200b\u771f\u5b9e\u200b\u5206\u5e03\u200b$P_{\\text{real}} (x)$\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5dee\u5f02\u200b\uff08JS\u200b\u6563\u5ea6\u200b\u3001Wasserstein\u200b\u8ddd\u79bb\u200b\u7b49\u200b\uff09\u3002\u200b\u4e0e\u200bGAN\u200b\u4e0d\u540c\u200b\uff0cConditional GAN\u200b\u5efa\u6a21\u200b\u7684\u200b\u662f\u200b\u7ed9\u5b9a\u200b\u6761\u4ef6\u200b$c$\u200b\u4e0b\u200b\uff0c\u200b\u751f\u6210\u200b\u5206\u5e03\u200b$P_{\\text{fake}} (x\\mid c)$\u200b\u548c\u200b\u771f\u5b9e\u200b\u5206\u5e03\u200b$P_{\\text{real}} (x\\mid c)$\u200b\u7684\u200b\u5dee\u5f02\u200b\u3002</p> <ul> <li><p>\u200b\u5bf9\u4e8e\u200bJS\u200b\u6563\u5ea6\u200b\uff0c\u200b\u5176\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u53d8\u4e3a\u200b</p> <p>$$   \\left\\{   \\begin{aligned}       \\mathcal L_D(x, c) &amp;= - \\log D(x, c) - \\log(1 - D(G(z, c), c)) \\\\       \\mathcal L_G(x, c) &amp;= -\\log D(G(z, c), c) \\\\   \\end{aligned}   \\right.   $$</p> </li> <li><p>\u200b\u5bf9\u4e8e\u200bWasserstein\u200b\u8ddd\u79bb\u200b\uff0c\u200b\u5176\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u53d8\u4e3a\u200b</p> <p>$$   \\left\\{   \\begin{aligned}       \\mathcal L_D(x, c) &amp;= - D(x, c) + D(G(z, c), c) \\\\       \\mathcal L_G(x, c) &amp;= - D(G(z, c), c) \\\\       \\mathcal L_P(x, c) &amp;= \\left(\\left\\Vert\\frac{\\partial D(ux + (1 - u)G(z, c), c)}{\\partial (ux + (1 - u)G(z, c))}\\right\\Vert_2 - 1\\right)^2   \\end{aligned}   \\right.   $$</p> </li> </ul>"},{"location":"coding/machine-learning/custom_transformer/","title":"Custom transformer","text":"In\u00a0[\u00a0]: Copied! <pre>import torch\n</pre> import torch In\u00a0[\u00a0]: Copied! <pre>class MultiHeadAttention(torch.nn.Module):\n    def __init__(self, d_model: int, num_heads: int):\n        super(MultiHeadAttention, self).__init__()\n        self.d_model = d_model\n        self.num_heads = num_heads\n        if d_model % num_heads != 0:\n            raise ValueError(\"d_model must be divisible by num_heads\")\n\n        self.d_k = d_model // num_heads\n        self.sqrt_d_k = self.d_k ** 0.5\n\n        self.W_Q = torch.nn.Linear(d_model, d_model)\n        self.W_K = torch.nn.Linear(d_model, d_model)\n        self.W_V = torch.nn.Linear(d_model, d_model)\n        self.W_O = torch.nn.Linear(d_model, d_model)\n\n    def forward(\n        self, x_q: torch.Tensor, x_k: torch.Tensor, x_v: torch.Tensor,\n        padding_mask: torch.Tensor | None = None,\n        attention_mask: torch.Tensor | None = None\n    ) -&gt; torch.Tensor:\n        # x_q: (N, L_Q, D), x_k: (N, L_KV, D), x_v: (N, L_KV, D)\n        # padding_mask: (N, L_KV), attention_mask: (L_Q, L_KV)\n        N, L_Q, D = x_q.size()\n        _, L_KV, _ = x_k.size()\n        Q = self.W_Q(x_q).reshape(N, L_Q, self.num_heads, self.d_k)\n        K = self.W_K(x_k).reshape(N, L_KV, self.num_heads, self.d_k)\n        V = self.W_V(x_v).reshape(N, L_KV, self.num_heads, self.d_k)\n\n        score = torch.einsum('nihd,njhd-&gt;nijh', Q, K) / self.sqrt_d_k\n        # score: (N, L_Q, L_KV, num_heads)\n        # Apply attention mask\n        if attention_mask is not None:\n            score = score.masked_fill(\n                attention_mask.reshape(1, L_Q, L_KV, 1) == 0, float('-inf')\n            )\n        # Apply padding mask\n        if padding_mask is not None:\n            score = score.masked_fill(\n                padding_mask.reshape(N, 1, L_KV, 1) == 0, float('-inf')\n            )\n        score = torch.nn.functional.softmax(score, dim=2)\n        value = torch.einsum(\n            'nijh,njhd-&gt;nihd', score, V\n        ).reshape(N, L_Q, self.d_model)\n        return self.W_O(value)\n</pre> class MultiHeadAttention(torch.nn.Module):     def __init__(self, d_model: int, num_heads: int):         super(MultiHeadAttention, self).__init__()         self.d_model = d_model         self.num_heads = num_heads         if d_model % num_heads != 0:             raise ValueError(\"d_model must be divisible by num_heads\")          self.d_k = d_model // num_heads         self.sqrt_d_k = self.d_k ** 0.5          self.W_Q = torch.nn.Linear(d_model, d_model)         self.W_K = torch.nn.Linear(d_model, d_model)         self.W_V = torch.nn.Linear(d_model, d_model)         self.W_O = torch.nn.Linear(d_model, d_model)      def forward(         self, x_q: torch.Tensor, x_k: torch.Tensor, x_v: torch.Tensor,         padding_mask: torch.Tensor | None = None,         attention_mask: torch.Tensor | None = None     ) -&gt; torch.Tensor:         # x_q: (N, L_Q, D), x_k: (N, L_KV, D), x_v: (N, L_KV, D)         # padding_mask: (N, L_KV), attention_mask: (L_Q, L_KV)         N, L_Q, D = x_q.size()         _, L_KV, _ = x_k.size()         Q = self.W_Q(x_q).reshape(N, L_Q, self.num_heads, self.d_k)         K = self.W_K(x_k).reshape(N, L_KV, self.num_heads, self.d_k)         V = self.W_V(x_v).reshape(N, L_KV, self.num_heads, self.d_k)          score = torch.einsum('nihd,njhd-&gt;nijh', Q, K) / self.sqrt_d_k         # score: (N, L_Q, L_KV, num_heads)         # Apply attention mask         if attention_mask is not None:             score = score.masked_fill(                 attention_mask.reshape(1, L_Q, L_KV, 1) == 0, float('-inf')             )         # Apply padding mask         if padding_mask is not None:             score = score.masked_fill(                 padding_mask.reshape(N, 1, L_KV, 1) == 0, float('-inf')             )         score = torch.nn.functional.softmax(score, dim=2)         value = torch.einsum(             'nijh,njhd-&gt;nihd', score, V         ).reshape(N, L_Q, self.d_model)         return self.W_O(value) In\u00a0[\u00a0]: Copied! <pre>class MultiHeadSelfAttention(MultiHeadAttention):\n    def __init__(self, d_model: int, num_heads: int):\n        super(MultiHeadSelfAttention, self).__init__(d_model, num_heads)\n\n    def forward(\n        self, x: torch.Tensor,\n        padding_mask: torch.Tensor | None = None,\n        attention_mask: torch.Tensor | None = None\n    ) -&gt; torch.Tensor:\n        return super().forward(x, x, x, padding_mask, attention_mask)\n</pre> class MultiHeadSelfAttention(MultiHeadAttention):     def __init__(self, d_model: int, num_heads: int):         super(MultiHeadSelfAttention, self).__init__(d_model, num_heads)      def forward(         self, x: torch.Tensor,         padding_mask: torch.Tensor | None = None,         attention_mask: torch.Tensor | None = None     ) -&gt; torch.Tensor:         return super().forward(x, x, x, padding_mask, attention_mask) In\u00a0[\u00a0]: Copied! <pre>class MultiHeadCrossAttention(MultiHeadAttention):\n    def __init__(self, d_model: int, num_heads: int):\n        super(MultiHeadCrossAttention, self).__init__(d_model, num_heads)\n\n    def forward(\n        self, x_q: torch.Tensor, x_kv: torch.Tensor,\n        padding_mask: torch.Tensor | None = None,\n        attention_mask: torch.Tensor | None = None\n    ) -&gt; torch.Tensor:\n        return super().forward(x_q, x_kv, x_kv, padding_mask, attention_mask)\n</pre> class MultiHeadCrossAttention(MultiHeadAttention):     def __init__(self, d_model: int, num_heads: int):         super(MultiHeadCrossAttention, self).__init__(d_model, num_heads)      def forward(         self, x_q: torch.Tensor, x_kv: torch.Tensor,         padding_mask: torch.Tensor | None = None,         attention_mask: torch.Tensor | None = None     ) -&gt; torch.Tensor:         return super().forward(x_q, x_kv, x_kv, padding_mask, attention_mask) In\u00a0[\u00a0]: Copied! <pre>ACT2FN = {\n    'relu': torch.nn.ReLU,\n    'gelu': torch.nn.GELU,\n}\n</pre> ACT2FN = {     'relu': torch.nn.ReLU,     'gelu': torch.nn.GELU, } In\u00a0[\u00a0]: Copied! <pre>class FFN(torch.nn.Module):\n    def __init__(self, input_dim: int, hidden_dim: int, activation: str = 'relu'):\n        super(FFN, self).__init__()\n        self.fc1 = torch.nn.Linear(input_dim, hidden_dim)\n        self.fc2 = torch.nn.Linear(hidden_dim, input_dim)\n        self.act = ACT2FN[activation]()\n\n    def forward(self, x):\n        return self.fc2(self.act(self.fc1(x)))\n</pre> class FFN(torch.nn.Module):     def __init__(self, input_dim: int, hidden_dim: int, activation: str = 'relu'):         super(FFN, self).__init__()         self.fc1 = torch.nn.Linear(input_dim, hidden_dim)         self.fc2 = torch.nn.Linear(hidden_dim, input_dim)         self.act = ACT2FN[activation]()      def forward(self, x):         return self.fc2(self.act(self.fc1(x))) In\u00a0[\u00a0]: Copied! <pre>class EncoderLayer(torch.nn.Module):\n    def __init__(\n        self, input_dim: int, num_heads: int,\n        ffn_dim: int | None = None, dropout: float = 0.1,\n        layer_norm_eps: float = 1e-6, activation: str = 'relu'\n    ):\n        super(EncoderLayer, self).__init__()\n\n        if ffn_dim is None:\n            ffn_dim = input_dim * 4\n\n        self.attention = MultiHeadSelfAttention(input_dim, num_heads)\n        self.norm1 = torch.nn.LayerNorm(input_dim, layer_norm_eps)\n        self.dropout1 = torch.nn.Dropout(dropout)\n\n        self.ffn = FFN(input_dim, ffn_dim, activation)\n        self.norm2 = torch.nn.LayerNorm(input_dim, layer_norm_eps)\n        self.dropout2 = torch.nn.Dropout(dropout)\n\n    def forward(\n        self, x, padding_mask: torch.Tensor | None = None,\n        src_mask: torch.Tensor | None = None\n    ):\n        x = x + self.dropout1(self.attention(x, padding_mask, src_mask))\n        x = self.norm1(x)\n\n        x = x + self.dropout2(self.ffn(x))\n        x = self.norm2(x)\n\n        return x\n</pre> class EncoderLayer(torch.nn.Module):     def __init__(         self, input_dim: int, num_heads: int,         ffn_dim: int | None = None, dropout: float = 0.1,         layer_norm_eps: float = 1e-6, activation: str = 'relu'     ):         super(EncoderLayer, self).__init__()          if ffn_dim is None:             ffn_dim = input_dim * 4          self.attention = MultiHeadSelfAttention(input_dim, num_heads)         self.norm1 = torch.nn.LayerNorm(input_dim, layer_norm_eps)         self.dropout1 = torch.nn.Dropout(dropout)          self.ffn = FFN(input_dim, ffn_dim, activation)         self.norm2 = torch.nn.LayerNorm(input_dim, layer_norm_eps)         self.dropout2 = torch.nn.Dropout(dropout)      def forward(         self, x, padding_mask: torch.Tensor | None = None,         src_mask: torch.Tensor | None = None     ):         x = x + self.dropout1(self.attention(x, padding_mask, src_mask))         x = self.norm1(x)          x = x + self.dropout2(self.ffn(x))         x = self.norm2(x)          return x In\u00a0[\u00a0]: Copied! <pre>class Encoder(torch.nn.Module):\n    def __init__(\n        self, num_layers: int, input_dim: int, num_heads: int,\n        ffn_dim: int | None = None, dropout: float = 0.1,\n        layer_norm_eps: float = 1e-6, activation: str = 'relu'\n    ):\n        super(Encoder, self).__init__()\n\n        self.layers = torch.nn.ModuleList([\n            EncoderLayer(\n                input_dim, num_heads, ffn_dim,\n                dropout, layer_norm_eps, activation\n            )\n            for _ in range(num_layers)\n        ])\n\n    def forward(\n        self, x, padding_mask: torch.Tensor | None = None,\n        src_mask: torch.Tensor | None = None\n    ):\n        # x: (N, L, D)\n        if src_mask is None:\n            src_mask = torch.ones(x.size(1), x.size(1)).to(x.device)\n        for layer in self.layers:\n            x = layer(x, padding_mask, src_mask)\n        return x\n</pre> class Encoder(torch.nn.Module):     def __init__(         self, num_layers: int, input_dim: int, num_heads: int,         ffn_dim: int | None = None, dropout: float = 0.1,         layer_norm_eps: float = 1e-6, activation: str = 'relu'     ):         super(Encoder, self).__init__()          self.layers = torch.nn.ModuleList([             EncoderLayer(                 input_dim, num_heads, ffn_dim,                 dropout, layer_norm_eps, activation             )             for _ in range(num_layers)         ])      def forward(         self, x, padding_mask: torch.Tensor | None = None,         src_mask: torch.Tensor | None = None     ):         # x: (N, L, D)         if src_mask is None:             src_mask = torch.ones(x.size(1), x.size(1)).to(x.device)         for layer in self.layers:             x = layer(x, padding_mask, src_mask)         return x In\u00a0[\u00a0]: Copied! <pre>class DecoderLayer(torch.nn.Module):\n    def __init__(\n        self, input_dim: int, num_heads: int,\n        ffn_dim: int | None = None, dropout: float = 0.1,\n        layer_norm_eps: float = 1e-6, activation: str = 'relu'\n    ):\n        super(DecoderLayer, self).__init__()\n\n        if ffn_dim is None:\n            ffn_dim = input_dim * 4\n\n        self.self_attention = MultiHeadSelfAttention(input_dim, num_heads)\n        self.norm1 = torch.nn.LayerNorm(input_dim, layer_norm_eps)\n        self.dropout1 = torch.nn.Dropout(dropout)\n\n        self.cross_attention = MultiHeadCrossAttention(input_dim, num_heads)\n        self.norm2 = torch.nn.LayerNorm(input_dim, layer_norm_eps)\n        self.dropout2 = torch.nn.Dropout(dropout)\n\n        self.ffn = FFN(input_dim, ffn_dim, activation)\n        self.norm3 = torch.nn.LayerNorm(input_dim, layer_norm_eps)\n        self.dropout3 = torch.nn.Dropout(dropout)\n\n    def forward(\n        self, x: torch.Tensor, memory: torch.Tensor,\n        padding_mask: torch.Tensor | None = None,\n        memory_mask: torch.Tensor | None = None,\n        tgt_mask: torch.Tensor | None = None\n    ):\n\n        x = x + self.dropout1(self.self_attention(x, padding_mask, tgt_mask))\n        x = self.norm1(x)\n\n        x = x + self.dropout2(self.cross_attention(x, memory, padding_mask, memory_mask))\n        x = self.norm2(x)\n\n        x = x + self.dropout3(self.ffn(x))\n        x = self.norm3(x)\n\n        return x\n</pre> class DecoderLayer(torch.nn.Module):     def __init__(         self, input_dim: int, num_heads: int,         ffn_dim: int | None = None, dropout: float = 0.1,         layer_norm_eps: float = 1e-6, activation: str = 'relu'     ):         super(DecoderLayer, self).__init__()          if ffn_dim is None:             ffn_dim = input_dim * 4          self.self_attention = MultiHeadSelfAttention(input_dim, num_heads)         self.norm1 = torch.nn.LayerNorm(input_dim, layer_norm_eps)         self.dropout1 = torch.nn.Dropout(dropout)          self.cross_attention = MultiHeadCrossAttention(input_dim, num_heads)         self.norm2 = torch.nn.LayerNorm(input_dim, layer_norm_eps)         self.dropout2 = torch.nn.Dropout(dropout)          self.ffn = FFN(input_dim, ffn_dim, activation)         self.norm3 = torch.nn.LayerNorm(input_dim, layer_norm_eps)         self.dropout3 = torch.nn.Dropout(dropout)      def forward(         self, x: torch.Tensor, memory: torch.Tensor,         padding_mask: torch.Tensor | None = None,         memory_mask: torch.Tensor | None = None,         tgt_mask: torch.Tensor | None = None     ):          x = x + self.dropout1(self.self_attention(x, padding_mask, tgt_mask))         x = self.norm1(x)          x = x + self.dropout2(self.cross_attention(x, memory, padding_mask, memory_mask))         x = self.norm2(x)          x = x + self.dropout3(self.ffn(x))         x = self.norm3(x)          return x In\u00a0[\u00a0]: Copied! <pre>class Decoder(torch.nn.Module):\n    def __init__(\n        self, num_layers: int, input_dim: int, num_heads: int,\n        ffn_dim: int | None = None, dropout: float = 0.1,\n        layer_norm_eps: float = 1e-6, activation: str = 'relu'\n    ):\n        super(Decoder, self).__init__()\n\n        self.layers = torch.nn.ModuleList([\n            DecoderLayer(\n                input_dim, num_heads, ffn_dim, dropout,\n                layer_norm_eps, activation\n            )\n            for _ in range(num_layers)\n        ])\n\n    def forward(\n        self, x: torch.Tensor, memory: torch.Tensor,\n        padding_mask: torch.Tensor | None = None,\n        memory_mask: torch.Tensor | None = None,\n        tgt_mask: torch.Tensor | None = None\n    ):\n        # x: (N, L, D)\n        for layer in self.layers:\n            x = layer(x, memory, padding_mask, memory_mask, tgt_mask)\n        return x\n</pre> class Decoder(torch.nn.Module):     def __init__(         self, num_layers: int, input_dim: int, num_heads: int,         ffn_dim: int | None = None, dropout: float = 0.1,         layer_norm_eps: float = 1e-6, activation: str = 'relu'     ):         super(Decoder, self).__init__()          self.layers = torch.nn.ModuleList([             DecoderLayer(                 input_dim, num_heads, ffn_dim, dropout,                 layer_norm_eps, activation             )             for _ in range(num_layers)         ])      def forward(         self, x: torch.Tensor, memory: torch.Tensor,         padding_mask: torch.Tensor | None = None,         memory_mask: torch.Tensor | None = None,         tgt_mask: torch.Tensor | None = None     ):         # x: (N, L, D)         for layer in self.layers:             x = layer(x, memory, padding_mask, memory_mask, tgt_mask)         return x"},{"location":"coding/machine-learning/decision-tree/","title":"\u51b3\u7b56\u6811","text":"In\u00a0[30]: Copied! <pre>import numpy as np\nimport pandas as pd\nimport typing as T\n</pre> import numpy as np import pandas as pd import typing as T <p>\u200b\u4ee5\u4e0b\u200b\u8003\u8651\u200b\u897f\u74dc\u200b\u6570\u636e\u200b\u96c6\u200b3.0\u200b\u4e2d\u200b\u7b2c\u4e00\u6b65\u200b\u5212\u5206\u200b\u7684\u200b\u5c5e\u6027\u200b\u9009\u62e9\u200b\u3002</p> In\u00a0[31]: Copied! <pre>df = pd.read_csv('data/melon3.0a.csv')\nattributes = ['\u200b\u8272\u6cfd\u200b', '\u200b\u6839\u8482\u200b', '\u200b\u6572\u58f0\u200b', '\u200b\u7eb9\u7406\u200b', '\u200b\u8110\u90e8\u200b', '\u200b\u89e6\u611f\u200b']\ncategory = '\u200b\u597d\u74dc\u200b'\n</pre> df = pd.read_csv('data/melon3.0a.csv') attributes = ['\u200b\u8272\u6cfd\u200b', '\u200b\u6839\u8482\u200b', '\u200b\u6572\u58f0\u200b', '\u200b\u7eb9\u7406\u200b', '\u200b\u8110\u90e8\u200b', '\u200b\u89e6\u611f\u200b'] category = '\u200b\u597d\u74dc\u200b' <p>\u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b\u57fa\u4e8e\u200b\u4fe1\u606f\u71b5\u200b\uff0c\u200b\u5728\u200b\u6bcf\u200b\u4e00\u6b21\u200b\u5212\u5206\u200b\u540e\u200b\uff0c\u200b\u96c6\u5408\u200b\u7684\u200b\u4fe1\u606f\u71b5\u200b\u4e4b\u200b\u548c\u200b\uff08\u200b\u6309\u200b\u6bd4\u4f8b\u200b\u52a0\u6743\u200b\uff09\u200b\u4f1a\u200b\u51cf\u5c0f\u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b\u5373\u200b\u4e3a\u200b\u539f\u200b\u4fe1\u606f\u71b5\u200b\u4e0e\u200b\u5212\u5206\u200b\u540e\u200b\u7684\u200b\u4fe1\u606f\u71b5\u200b\u4e4b\u5dee\u200b\u3002</p> In\u00a0[32]: Copied! <pre>def entropy(df, target_col):\n    p = df[target_col].value_counts() / len(df)\n    return -sum(p * np.log2(p))\n\ndef conditional_entropy(df, discrete_col, target_col):\n    ret = 0\n    for val in df[discrete_col].unique():\n        p = len(df[df[discrete_col] == val]) / len(df) # \u200b\u6bd4\u4f8b\u200b\n        ret += p * entropy(df[df[discrete_col] == val], target_col)\n    return ret\n\ndef calc_gain(df, attributes, category) -&gt; T.Dict[str, float]:\n    entropy_original = entropy(df, category)\n    return {\n        k: entropy_original - conditional_entropy(df, k, category)\n        for k in attributes\n    }\n\ngain = pd.DataFrame([calc_gain(df, attributes, category)], index=['\u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b'])\ngain\n</pre> def entropy(df, target_col):     p = df[target_col].value_counts() / len(df)     return -sum(p * np.log2(p))  def conditional_entropy(df, discrete_col, target_col):     ret = 0     for val in df[discrete_col].unique():         p = len(df[df[discrete_col] == val]) / len(df) # \u200b\u6bd4\u4f8b\u200b         ret += p * entropy(df[df[discrete_col] == val], target_col)     return ret  def calc_gain(df, attributes, category) -&gt; T.Dict[str, float]:     entropy_original = entropy(df, category)     return {         k: entropy_original - conditional_entropy(df, k, category)         for k in attributes     }  gain = pd.DataFrame([calc_gain(df, attributes, category)], index=['\u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b']) gain Out[32]: \u200b\u8272\u6cfd\u200b \u200b\u6839\u8482\u200b \u200b\u6572\u58f0\u200b \u200b\u7eb9\u7406\u200b \u200b\u8110\u90e8\u200b \u200b\u89e6\u611f\u200b \u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b 0.108125 0.142675 0.140781 0.380592 0.289159 0.006046 <p>\u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b\u4f1a\u200b\u66f4\u52a0\u200b\u503e\u5411\u200b\u4e8e\u200b\u9009\u62e9\u200b\u5305\u542b\u200b\u7c7b\u522b\u200b\u66f4\u200b\u591a\u200b\u7684\u200b\u5c5e\u6027\u200b\uff0c\u200b\u4f7f\u7528\u200b\u589e\u76ca\u200b\u7387\u200b\u6307\u6807\u200b\u53ef\u4ee5\u200b\u5e73\u8861\u200b\u4e0d\u540c\u200b\u7c7b\u522b\u200b\u4e4b\u95f4\u200b\u7684\u200b\u6743\u91cd\u200b\u3002\u200b\u589e\u76ca\u200b\u7387\u200b\u6307\u6807\u200b\u4e3a\u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b\u4e0e\u200b\u5c5e\u6027\u200b\u56fa\u6709\u200b\u503c\u200b $\\mathrm{IV}$ \u200b\u4e4b\u200b\u6bd4\u200b\u3002</p> In\u00a0[33]: Copied! <pre>def iv(df, discrete_col):\n    p = df[discrete_col].value_counts() / len(df)\n    return -sum(p * np.log2(p))\n\ndef calc_gain_ratio(df, attributes, category) -&gt; T.Dict[str, float]:\n    entropy_original = entropy(df, category)\n    return {k: (entropy_original - conditional_entropy(df, k, category)) / iv(df, k)\n        for k in attributes\n    }\n\ngain_ratio = pd.DataFrame(\n    [calc_gain_ratio(df, attributes, category)], index=['\u200b\u589e\u76ca\u200b\u7387\u200b']\n)\ngain_ratio\n</pre> def iv(df, discrete_col):     p = df[discrete_col].value_counts() / len(df)     return -sum(p * np.log2(p))  def calc_gain_ratio(df, attributes, category) -&gt; T.Dict[str, float]:     entropy_original = entropy(df, category)     return {k: (entropy_original - conditional_entropy(df, k, category)) / iv(df, k)         for k in attributes     }  gain_ratio = pd.DataFrame(     [calc_gain_ratio(df, attributes, category)], index=['\u200b\u589e\u76ca\u200b\u7387\u200b'] ) gain_ratio Out[33]: \u200b\u8272\u6cfd\u200b \u200b\u6839\u8482\u200b \u200b\u6572\u58f0\u200b \u200b\u7eb9\u7406\u200b \u200b\u8110\u90e8\u200b \u200b\u89e6\u611f\u200b \u200b\u589e\u76ca\u200b\u7387\u200b 0.06844 0.101759 0.105627 0.263085 0.186727 0.006918 <p>\u200b\u57fa\u5c3c\u200b\u6307\u6570\u200b\u8861\u91cf\u200b\u4ece\u200b\u6570\u636e\u200b\u96c6\u4e2d\u200b\u968f\u673a\u200b\u62bd\u53d6\u200b\u4e24\u4e2a\u200b\u5143\u7d20\u200b\uff0c\u200b\u6807\u7b7e\u200b\u53d6\u503c\u200b\u4e0d\u540c\u200b\u7684\u200b\u6982\u7387\u200b\u3002</p> In\u00a0[34]: Copied! <pre>def gini(df, target_col):\n    p = df[target_col].value_counts() / len(df)\n    return 1 - sum(p ** 2)\n\ndef gini_conditional(df, discrete_col, target_col):\n    ret = 0\n    for col in df[discrete_col].unique():\n        p = len(df[df[discrete_col] == col]) / len(df)\n        ret += p * gini(df[df[discrete_col] == col], target_col)\n    return ret\n\ndef calc_gini_index(df, attributes, category) -&gt; T.Dict[str, float]:\n    return {\n        k: sum((df[k].value_counts() / len(df)) * gini_conditional(df, k, category))\n        for k in attributes\n    }\n\ngini_index = pd.DataFrame([calc_gini_index(df, attributes, category)], index=['\u200b\u57fa\u5c3c\u200b\u6307\u6570\u200b'])\ngini_index\n</pre> def gini(df, target_col):     p = df[target_col].value_counts() / len(df)     return 1 - sum(p ** 2)  def gini_conditional(df, discrete_col, target_col):     ret = 0     for col in df[discrete_col].unique():         p = len(df[df[discrete_col] == col]) / len(df)         ret += p * gini(df[df[discrete_col] == col], target_col)     return ret  def calc_gini_index(df, attributes, category) -&gt; T.Dict[str, float]:     return {         k: sum((df[k].value_counts() / len(df)) * gini_conditional(df, k, category))         for k in attributes     }  gini_index = pd.DataFrame([calc_gini_index(df, attributes, category)], index=['\u200b\u57fa\u5c3c\u200b\u6307\u6570\u200b']) gini_index Out[34]: \u200b\u8272\u6cfd\u200b \u200b\u6839\u8482\u200b \u200b\u6572\u58f0\u200b \u200b\u7eb9\u7406\u200b \u200b\u8110\u90e8\u200b \u200b\u89e6\u611f\u200b \u200b\u57fa\u5c3c\u200b\u6307\u6570\u200b 0.427451 0.422269 0.423529 0.277124 0.344538 0.494118 In\u00a0[35]: Copied! <pre>class TreeNode():\n\n    def __init__(self, key):\n        self.key = key\n        self.mapping = {}\n\n    def add_child(self, value, child):\n        self.mapping[value] = child\n\n    def predict(self, x):\n        if self.key not in x or x[self.key] not in self.mapping:\n            return None\n        if isinstance(self.mapping[x[self.key]], TreeNode):\n            return self.mapping[x[self.key]].predict(x)\n        return self.mapping[x[self.key]]\n\ndef build_tree(df, attributes, category):\n    if len(df[category].unique()) == 1:\n        return df[category].unique()[0]\n    if len(attributes) == 0:\n        return df[category].value_counts().index[0]\n    gain = calc_gain(df, attributes, category)\n    best_attr = max(gain, key=lambda _: gain[_])\n    for attr in attributes:\n        if entropy(df, category) - conditional_entropy(df, attr, category) &gt; entropy(df, category) - conditional_entropy(df, best_attr, category):\n            best_attr = attr\n    tree = TreeNode(best_attr)\n    for value in df[best_attr].unique():\n        tree.add_child(value, build_tree(df[df[best_attr] == value], [attr for attr in attributes if attr != best_attr], category))\n    return tree\n\ntree = build_tree(df, attributes, category)\n</pre> class TreeNode():      def __init__(self, key):         self.key = key         self.mapping = {}      def add_child(self, value, child):         self.mapping[value] = child      def predict(self, x):         if self.key not in x or x[self.key] not in self.mapping:             return None         if isinstance(self.mapping[x[self.key]], TreeNode):             return self.mapping[x[self.key]].predict(x)         return self.mapping[x[self.key]]  def build_tree(df, attributes, category):     if len(df[category].unique()) == 1:         return df[category].unique()[0]     if len(attributes) == 0:         return df[category].value_counts().index[0]     gain = calc_gain(df, attributes, category)     best_attr = max(gain, key=lambda _: gain[_])     for attr in attributes:         if entropy(df, category) - conditional_entropy(df, attr, category) &gt; entropy(df, category) - conditional_entropy(df, best_attr, category):             best_attr = attr     tree = TreeNode(best_attr)     for value in df[best_attr].unique():         tree.add_child(value, build_tree(df[df[best_attr] == value], [attr for attr in attributes if attr != best_attr], category))     return tree  tree = build_tree(df, attributes, category) <p>\u200b\u51b3\u7b56\u6811\u200b\u91c7\u53d6\u200b\u81ea\u9876\u5411\u4e0b\u200b\u7684\u200bpredict\u200b\u65b9\u5f0f\u200b</p> In\u00a0[36]: Copied! <pre>assert isinstance(tree, TreeNode)\ntree.predict({\n    '\u200b\u8272\u6cfd\u200b': '\u200b\u9752\u7eff\u200b',\n    '\u200b\u6839\u8482\u200b': '\u200b\u8737\u7f29\u200b',\n    '\u200b\u6572\u58f0\u200b': '\u200b\u6d4a\u54cd\u200b',\n    '\u200b\u7eb9\u7406\u200b': '\u200b\u6e05\u6670\u200b',\n    '\u200b\u8110\u90e8\u200b': '\u200b\u51f9\u9677\u200b',\n    '\u200b\u89e6\u611f\u200b': '\u200b\u786c\u6ed1\u200b'\n})\n</pre> assert isinstance(tree, TreeNode) tree.predict({     '\u200b\u8272\u6cfd\u200b': '\u200b\u9752\u7eff\u200b',     '\u200b\u6839\u8482\u200b': '\u200b\u8737\u7f29\u200b',     '\u200b\u6572\u58f0\u200b': '\u200b\u6d4a\u54cd\u200b',     '\u200b\u7eb9\u7406\u200b': '\u200b\u6e05\u6670\u200b',     '\u200b\u8110\u90e8\u200b': '\u200b\u51f9\u9677\u200b',     '\u200b\u89e6\u611f\u200b': '\u200b\u786c\u6ed1\u200b' }) Out[36]: <pre>'\u200b\u662f\u200b'</pre> In\u00a0[119]: Copied! <pre>from sklearn.model_selection import train_test_split\n\ndef no_split(train, test, attributes, category):\n    return train[category].value_counts().index[0]\n\ndef build_pre_prune(train, test, attributes, category, tree_root=None):\n    if len(train[category].unique()) == 1:\n        return train[category].unique()[0]\n    no_split_result = no_split(train, test, attributes, category)\n    no_split_metric = np.sum(test[category] == no_split_result)\n    if len(attributes) == 0:\n        return no_split_result\n\n    # \u200b\u9009\u62e9\u200b\u5212\u5206\u200b\u5c5e\u6027\u200b\n    gain = calc_gain(train, attributes, category)\n    best_attr = max(gain, key=lambda _: gain[_])\n\n    # \u200b\u521b\u5efa\u200b\u8282\u70b9\u200b\n    tree = TreeNode(best_attr)\n    if tree_root is None:\n        tree_root = tree\n    for value in train[best_attr].unique():\n        tree.add_child(value, no_split(\n            train[train[best_attr] == value], test,\n            [attr for attr in attributes if attr != best_attr], category\n        ))\n\n    # \u200b\u8ba1\u7b97\u200b\u526a\u679d\u200b\u6548\u679c\u200b\n    result = []\n    for row in test[attributes].itertuples():\n        row_dict = row._asdict()\n        result.append(tree_root.predict(row_dict))\n    split_metric = np.sum([a == b for a, b in zip(result, test[category])])\n\n    # \u200b\u526a\u679d\u200b\n    print(f'\u200b\u526a\u679d\u200b\u524d\u200b: {no_split_metric}, \u200b\u526a\u679d\u200b\u540e\u200b: {split_metric}')\n    if split_metric &lt; no_split_metric:\n        print('\u200b\u4e0d\u200b\u526a\u679d\u200b')\n        return no_split_result\n    print('\u200b\u526a\u679d\u200b')\n    for value in train[best_attr].unique():\n        child = build_pre_prune(\n            train[train[best_attr] == value], test,\n            [attr for attr in attributes if attr != best_attr], category,\n            tree_root\n        )\n        tree.add_child(value, child)\n    return tree\n\ntrain, test = train_test_split(df, test_size=0.5)\ntree = build_pre_prune(train, test, attributes, category)\n\nresult = [\n    tree.predict(row._asdict()) if isinstance(tree, TreeNode) else tree\n    for row in test[attributes].itertuples()\n]\nsplit_metric = np.mean([a == b for a, b in zip(result, test[category])])\nsplit_metric\n</pre> from sklearn.model_selection import train_test_split  def no_split(train, test, attributes, category):     return train[category].value_counts().index[0]  def build_pre_prune(train, test, attributes, category, tree_root=None):     if len(train[category].unique()) == 1:         return train[category].unique()[0]     no_split_result = no_split(train, test, attributes, category)     no_split_metric = np.sum(test[category] == no_split_result)     if len(attributes) == 0:         return no_split_result      # \u200b\u9009\u62e9\u200b\u5212\u5206\u200b\u5c5e\u6027\u200b     gain = calc_gain(train, attributes, category)     best_attr = max(gain, key=lambda _: gain[_])      # \u200b\u521b\u5efa\u200b\u8282\u70b9\u200b     tree = TreeNode(best_attr)     if tree_root is None:         tree_root = tree     for value in train[best_attr].unique():         tree.add_child(value, no_split(             train[train[best_attr] == value], test,             [attr for attr in attributes if attr != best_attr], category         ))      # \u200b\u8ba1\u7b97\u200b\u526a\u679d\u200b\u6548\u679c\u200b     result = []     for row in test[attributes].itertuples():         row_dict = row._asdict()         result.append(tree_root.predict(row_dict))     split_metric = np.sum([a == b for a, b in zip(result, test[category])])      # \u200b\u526a\u679d\u200b     print(f'\u200b\u526a\u679d\u200b\u524d\u200b: {no_split_metric}, \u200b\u526a\u679d\u200b\u540e\u200b: {split_metric}')     if split_metric &lt; no_split_metric:         print('\u200b\u4e0d\u200b\u526a\u679d\u200b')         return no_split_result     print('\u200b\u526a\u679d\u200b')     for value in train[best_attr].unique():         child = build_pre_prune(             train[train[best_attr] == value], test,             [attr for attr in attributes if attr != best_attr], category,             tree_root         )         tree.add_child(value, child)     return tree  train, test = train_test_split(df, test_size=0.5) tree = build_pre_prune(train, test, attributes, category)  result = [     tree.predict(row._asdict()) if isinstance(tree, TreeNode) else tree     for row in test[attributes].itertuples() ] split_metric = np.mean([a == b for a, b in zip(result, test[category])]) split_metric <pre>\u200b\u526a\u679d\u200b\u524d\u200b: 4, \u200b\u526a\u679d\u200b\u540e\u200b: 4\n\u200b\u526a\u679d\u200b\n\u200b\u526a\u679d\u200b\u524d\u200b: 5, \u200b\u526a\u679d\u200b\u540e\u200b: 0\n\u200b\u4e0d\u200b\u526a\u679d\u200b\n</pre> Out[119]: <pre>0.4444444444444444</pre> In\u00a0[120]: Copied! <pre>def build_post_prune(train, test, attributes, category):\n    tree = build_tree(train, attributes, category)\n    # TODO: apply post pruning\n</pre> def build_post_prune(train, test, attributes, category):     tree = build_tree(train, attributes, category)     # TODO: apply post pruning"},{"location":"coding/machine-learning/decision-tree/","title":"\u51b3\u7b56\u6811\u200b\u00b6","text":"<p>\u200b\u51b3\u7b56\u6811\u200b\u662f\u200b\u4e00\u7c7b\u200b\u57fa\u4e8e\u200b\u89c4\u5219\u200b\u7684\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u7b97\u6cd5\u200b</p>"},{"location":"coding/machine-learning/decision-tree/","title":"\u5212\u5206\u200b\u6307\u6807\u200b\u00b6","text":"<p>\u200b\u51b3\u7b56\u6811\u200b\u7b97\u6cd5\u200b\u4e2d\u200b\u7684\u200b\u6838\u5fc3\u200b\u662f\u200b\u6bcf\u200b\u4e00\u6b65\u200b\u5212\u5206\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u5c5e\u6027\u200b\u7684\u200b\u9009\u62e9\u200b\uff0c\u200b\u6bcf\u200b\u4e00\u6b65\u200b\u5212\u5206\u200b\u9700\u8981\u200b\u53d6\u5f97\u200b\u6700\u5927\u200b\u7684\u200b\u5212\u5206\u200b\u6548\u679c\u200b\uff0c\u200b\u5373\u200b\u4ea7\u751f\u200b\u7684\u200b\u5b50\u96c6\u200b\u201c\u200b\u7eaf\u5ea6\u200b\u201d\u200b\u6700\u9ad8\u200b\u3002\u200b\u5e38\u89c1\u200b\u7684\u200b\u4e09\u79cd\u200b\u8861\u91cf\u200b\u96c6\u5408\u200b\u201c\u200b\u7eaf\u5ea6\u200b\u201d\u200b\u7684\u200b\u6307\u6807\u200b\u4e3a\u200b\u4fe1\u606f\u200b\u589e\u76ca\u200b\u3001\u200b\u589e\u76ca\u200b\u7387\u200b\u4e0e\u200b\u57fa\u5c3c\u200b\u6307\u6570\u200b\u3002</p>"},{"location":"coding/machine-learning/decision-tree/","title":"\u51b3\u7b56\u6811\u200b\u6784\u5efa\u200b\u00b6","text":"<p>\u200b\u672c\u200b\u8282\u200b\u5b9e\u73b0\u200b\u539f\u4e66\u56fe\u200b4.2\u200b\u7684\u200b\u51b3\u7b56\u6811\u200b\u5b66\u4e60\u200b\u7b97\u6cd5\u200b\u3002</p>"},{"location":"coding/machine-learning/decision-tree/","title":"\u51b3\u7b56\u6811\u200b\u526a\u679d\u200b\u5904\u7406\u200b\u00b6","text":"<p>\u200b\u51b3\u7b56\u6811\u200b\u6709\u9884\u200b\u526a\u679d\u200b\u548c\u200b\u540e\u200b\u526a\u679d\u200b\u4e24\u4e2a\u200b\u526a\u679d\u200b\u6b65\u9aa4\u200b\uff0c\u200b\u526a\u679d\u200b\u53ef\u4ee5\u200b\u7f13\u89e3\u200b\u6a21\u578b\u200b\u51fa\u73b0\u200b\u7684\u200b\u8fc7\u200b\u62df\u5408\u200b\u73b0\u8c61\u200b\u3002</p>"},{"location":"coding/machine-learning/decision-tree/","title":"\u9884\u200b\u526a\u679d\u200b\u00b6","text":"<p>\u200b\u9884\u200b\u526a\u679d\u200b\u5728\u200b\u6a21\u578b\u200b\u7684\u200b\u8bad\u7ec3\u200b\u9636\u6bb5\u200b\u5c31\u200b\u901a\u8fc7\u200b\u9a8c\u8bc1\u200b\u96c6\u200b\u7684\u200b\u51c6\u786e\u6027\u200b\u6765\u200b\u51b3\u5b9a\u200b\u662f\u5426\u200b\u8fdb\u884c\u200b\u5212\u5206\u200b\u3002</p>"},{"location":"coding/machine-learning/decision-tree/","title":"\u540e\u200b\u526a\u679d\u200b\u00b6","text":"<p>\u200b\u540e\u200b\u526a\u679d\u200b\u5728\u200b\u51b3\u7b56\u6811\u200b\u751f\u6210\u200b\u540e\u200b\u518d\u200b\u904d\u5386\u200b\u51b3\u7b56\u6811\u200b\uff0c\u200b\u5220\u53bb\u200b\u8fc7\u591a\u200b\u7684\u200b\u8282\u70b9\u200b</p>"},{"location":"coding/machine-learning/encoder-decoder/","title":"\u7f16\u7801\u5668\u200b\u4e0e\u200b\u89e3\u7801\u5668","text":"<p>\u200b\u5728\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u200b\uff0cVaswani\u200b\u7b49\u200b\u4eba\u200b\u63d0\u51fa\u200b\u4e86\u200b\u4e24\u79cd\u200btransformer\u200b\u67b6\u6784\u200b\uff0c\u200b\u5373\u200b\u7f16\u7801\u5668\u200b\u548c\u200b\u89e3\u7801\u5668\u200b\u3002\u200b\u7f16\u7801\u5668\u200b\u5229\u7528\u200b\u81ea\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\uff0c\u200b\u5bf9\u200b\u8f93\u5165\u200b\u7684\u200b\u5e8f\u5217\u200b\u8fdb\u884c\u200b\u7f16\u7801\u200b\uff0c\u200b\u89e3\u7801\u5668\u200b\u5219\u200b\u5229\u7528\u200b\u81ea\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u548c\u200b\u4ea4\u53c9\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\uff0c\u200b\u751f\u6210\u200b\u5bf9\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u9884\u6d4b\u200b\u3002</p>"},{"location":"coding/machine-learning/encoder-decoder/#_2","title":"\u7f16\u7801\u5668","text":"<p>\u200b\u7f16\u7801\u5668\u200b\u7531\u200b\u591a\u4e2a\u200b\u76f8\u540c\u200b\u7684\u200b\u5c42\u200b\u7ec4\u6210\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5c42\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u6b8b\u5dee\u200b\u8fde\u63a5\u200b\u7684\u200b\u591a\u5934\u200b\u81ea\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u548c\u200b\u4e00\u4e2a\u200b\u524d\u9988\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u3002\u200b\u5728\u200b\u6b8b\u5dee\u200b\u8fde\u63a5\u200b\u524d\u200b\uff0c\u200b\u4f7f\u7528\u200bdropout\uff1b\u200b\u5728\u200b\u6b8b\u5dee\u200b\u8fde\u63a5\u200b\u540e\u200b\uff0c\u200b\u4f7f\u7528\u200b\u5c42\u200b\u5f52\u4e00\u5316\u200b\u6765\u200b\u9632\u6b62\u200b\u8fc7\u200b\u62df\u5408\u200b\u3002\u200b\u524d\u9988\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u7531\u200b\u4e24\u4e2a\u200b\u5168\u200b\u8fde\u63a5\u200b\u5c42\u200b\u7ec4\u6210\u200b\uff0c\u200b\u4e24\u4e2a\u200b\u5168\u200b\u8fde\u63a5\u200b\u5c42\u200b\u4e4b\u95f4\u200b\u901a\u5e38\u200b\u4f7f\u7528\u200bReLU\u200b\u6216\u200bGeLU\u200b\u7b49\u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b\u3002</p> <pre><code>ACT2FN = {\n    'relu': torch.nn.ReLU,\n    'gelu': torch.nn.GELU,\n}\n\nclass FFN(torch.nn.Module):\n    def __init__(self, input_dim: int, hidden_dim: int, activation: str = 'relu'):\n        super(FFN, self).__init__()\n        self.fc1 = torch.nn.Linear(input_dim, hidden_dim)\n        self.fc2 = torch.nn.Linear(hidden_dim, input_dim)\n        self.act = ACT2FN[activation]()\n\n    def forward(self, x):\n        return self.fc2(self.act(self.fc1(x)))\n\n\nclass EncoderLayer(torch.nn.Module):\n    def __init__(\n        self, input_dim: int, num_heads: int,\n        ffn_dim: int | None = None, dropout: float = 0.1,\n        layer_norm_eps: float = 1e-6, activation: str = 'relu'\n    ):\n        super(EncoderLayer, self).__init__()\n\n        if ffn_dim is None:\n            ffn_dim = input_dim * 4\n\n        self.attention = MultiHeadSelfAttention(input_dim, num_heads)\n        self.norm1 = torch.nn.LayerNorm(input_dim, layer_norm_eps)\n        self.dropout1 = torch.nn.Dropout(dropout)\n\n        self.ffn = FFN(input_dim, ffn_dim, activation)\n        self.norm2 = torch.nn.LayerNorm(input_dim, layer_norm_eps)\n        self.dropout2 = torch.nn.Dropout(dropout)\n\n    def forward(\n        self, x, padding_mask: torch.Tensor | None = None,\n        src_mask: torch.Tensor | None = None\n    ):\n        x = x + self.dropout1(self.attention(x, padding_mask, src_mask))\n        x = self.norm1(x)\n\n        x = x + self.dropout2(self.ffn(x))\n        x = self.norm2(x)\n\n        return x\n\n\nclass Encoder(torch.nn.Module):\n    def __init__(\n        self, num_layers: int, input_dim: int, num_heads: int,\n        ffn_dim: int | None = None, dropout: float = 0.1,\n        layer_norm_eps: float = 1e-6, activation: str = 'relu'\n    ):\n        super(Encoder, self).__init__()\n\n        self.layers = torch.nn.ModuleList([\n            EncoderLayer(\n                input_dim, num_heads, ffn_dim,\n                dropout, layer_norm_eps, activation\n            )\n            for _ in range(num_layers)\n        ])\n\n    def forward(\n        self, x, padding_mask: torch.Tensor | None = None,\n        src_mask: torch.Tensor | None = None\n    ):\n        # x: (N, L, D)\n        if src_mask is None:\n            src_mask = torch.ones(x.size(1), x.size(1)).to(x.device)\n        for layer in self.layers:\n            x = layer(x, padding_mask, src_mask)\n        return x\n</code></pre>"},{"location":"coding/machine-learning/encoder-decoder/#_3","title":"\u89e3\u7801\u5668","text":"<p>\u200b\u89e3\u7801\u5668\u200b\u5728\u200b\u7f16\u7801\u5668\u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u200b\uff0c\u200b\u5c06\u200b\u81ea\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u7531\u200b\u53cc\u5411\u200b\u6539\u4e3a\u200b\u5355\u5411\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5728\u200b\u81ea\u200b\u6ce8\u610f\u529b\u200b\u5c42\u200b\u548c\u200b\u524d\u9988\u200b\u795e\u7ecf\u200b\u7f51\u7edc\u5c42\u200b\u4e4b\u95f4\u200b\u589e\u52a0\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u6b8b\u5dee\u200b\u8fde\u63a5\u200b\u7684\u200b\u591a\u5934\u200b\u4ea4\u53c9\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u3002\u200b\u4ea4\u53c9\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u4f7f\u7528\u200b\u7f16\u7801\u5668\u200b\u7684\u200b\u8f93\u51fa\u200b\u4f5c\u4e3a\u200b\u5168\u5c40\u200b\u952e\u548c\u503c\u200b\uff0c\u200b\u89e3\u7801\u5668\u200b\u81ea\u200b\u6ce8\u610f\u529b\u200b\u5c42\u200b\u7684\u200b\u8f93\u51fa\u200b\u4f5c\u4e3a\u200b\u67e5\u8be2\u200b\u3002\u200b\u5728\u200b\u6b8b\u5dee\u200b\u8fde\u63a5\u200b\u524d\u540e\u200b\u4f7f\u7528\u200bdropout\u200b\u548c\u200b\u5c42\u200b\u5f52\u4e00\u5316\u200b\u3002\u200b\u6ce8\u610f\u200b\u5bf9\u4e8e\u200bdecoder-only\u200b\u7684\u200btransformer\uff0c\u200b\u6ca1\u6709\u200b\u4ea4\u53c9\u200b\u6ce8\u610f\u529b\u200b\u5c42\u200b\uff0c\u200b\u800c\u662f\u200b\u4ec5\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u5355\u5411\u200b\u81ea\u200b\u6ce8\u610f\u529b\u200b\u5c42\u200b\u3002</p> <pre><code>class DecoderLayer(torch.nn.Module):\n    def __init__(\n        self, input_dim: int, num_heads: int,\n        ffn_dim: int | None = None, dropout: float = 0.1,\n        layer_norm_eps: float = 1e-6, activation: str = 'relu'\n    ):\n        super(DecoderLayer, self).__init__()\n\n        if ffn_dim is None:\n            ffn_dim = input_dim * 4\n\n        self.self_attention = MultiHeadSelfAttention(input_dim, num_heads)\n        self.norm1 = torch.nn.LayerNorm(input_dim, layer_norm_eps)\n        self.dropout1 = torch.nn.Dropout(dropout)\n\n        self.cross_attention = MultiHeadCrossAttention(input_dim, num_heads)\n        self.norm2 = torch.nn.LayerNorm(input_dim, layer_norm_eps)\n        self.dropout2 = torch.nn.Dropout(dropout)\n\n        self.ffn = FFN(input_dim, ffn_dim, activation)\n        self.norm3 = torch.nn.LayerNorm(input_dim, layer_norm_eps)\n        self.dropout3 = torch.nn.Dropout(dropout)\n\n    def forward(\n        self, x: torch.Tensor, memory: torch.Tensor,\n        padding_mask: torch.Tensor | None = None,\n        memory_mask: torch.Tensor | None = None,\n        tgt_mask: torch.Tensor | None = None\n    ):\n        if tgt_mask is None:\n            tgt_mask = torch.triu(\n                torch.ones(x.size(1), x.size(1)), diagonal=1\n            ).to(x.device)\n\n        x = x + self.dropout1(self.self_attention(x, padding_mask, tgt_mask))\n        x = self.norm1(x)\n\n        x = x + self.dropout2(self.cross_attention(x, memory, padding_mask, memory_mask))\n        x = self.norm2(x)\n\n        x = x + self.dropout3(self.ffn(x))\n        x = self.norm3(x)\n\n        return x\n\n\nclass Decoder(torch.nn.Module):\n    def __init__(\n        self, num_layers: int, input_dim: int, num_heads: int,\n        ffn_dim: int | None = None, dropout: float = 0.1,\n        layer_norm_eps: float = 1e-6, activation: str = 'relu'\n    ):\n        super(Decoder, self).__init__()\n\n        self.layers = torch.nn.ModuleList([\n            DecoderLayer(\n                input_dim, num_heads, ffn_dim, dropout,\n                layer_norm_eps, activation\n            )\n            for _ in range(num_layers)\n        ])\n\n    def forward(\n        self, x: torch.Tensor, memory: torch.Tensor,\n        padding_mask: torch.Tensor | None = None,\n        memory_mask: torch.Tensor | None = None,\n        tgt_mask: torch.Tensor | None = None\n    ):\n        # x: (N, L, D)\n        for layer in self.layers:\n            x = layer(x, memory, padding_mask, memory_mask, tgt_mask)\n        return x\n</code></pre>"},{"location":"coding/machine-learning/encoder-decoder/#transformer","title":"transformer\u200b\u7684\u200b\u65f6\u7a7a\u200b\u590d\u6742\u5ea6","text":"<p>\u200b\u7ed9\u5b9a\u200b\u8f93\u5165\u200b\u5e8f\u5217\u200b\u7684\u200b\u957f\u5ea6\u200b\\(L\\)\uff0c\u200b\u8f93\u5165\u200b\u7ef4\u5ea6\u200b\\(D\\)\uff0c\u200b\u7f16\u7801\u5668\u200b\u5c42\u6570\u200b\\(N\\)\uff0c\u200b\u524d\u9988\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u7684\u200b\u9690\u85cf\u200b\u5c42\u200b\u7ef4\u5ea6\u200b\\(D_{ff}\\)\uff0c\u200b\u5219\u200btransformer\u200b\u7684\u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b</p> <ul> <li>\u200b\u6ce8\u610f\u529b\u200b\u5c42\u200b\uff1a\u200b\u6bcf\u5c42\u200b\u5305\u542b\u200b\u56db\u4e2a\u200b\\(D \\rightarrow D\\)\u200b\u7684\u200b\u5168\u200b\u8fde\u63a5\u200b\u5c42\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5168\u200b\u8fde\u63a5\u200b\u5c42\u200b\u5305\u542b\u200b\\(D \\times D + D\\)\u200b\u4e2a\u200b\u53c2\u6570\u200b\uff08\u200b\u6743\u91cd\u200b+\u200b\u504f\u7f6e\u200b\uff09\uff0c\u200b\u5171\u200b\\(4ND(D + 1)\\)\u200b\u4e2a\u200b\u53c2\u6570\u200b\uff1b</li> <li>\u200b\u524d\u9988\u200b\u795e\u7ecf\u7f51\u7edc\u200b\uff1a\u200b\u5171\u200b\\(N\\)\u200b\u5c42\u200b\uff0c\u200b\u6bcf\u5c42\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\\(D \\rightarrow D_{ff}\\)\u200b\u7684\u200b\u5168\u200b\u8fde\u63a5\u200b\u5c42\u200b\u548c\u200b\u4e00\u4e2a\u200b\\(D_{ff} \\rightarrow D\\)\u200b\u7684\u200b\u5168\u200b\u8fde\u63a5\u200b\u5c42\u200b\uff0c\u200b\u5171\u200b\\(2NDD_{ff} + ND_{ff} + ND\\)\u200b\u4e2a\u200b\u53c2\u6570\u200b\uff1b</li> <li>\u200b\u5c42\u200b\u5f52\u4e00\u5316\u200b\uff1a\u200b\u6bcf\u5c42\u200b\u7f16\u7801\u5668\u200b\u5305\u542b\u200b\u4e24\u4e2a\u200b\u5f52\u4e00\u5316\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5f52\u4e00\u5316\u200b\u5305\u542b\u200b\u4e24\u4e2a\u200b\\(D\\)\u200b\u7ef4\u200b\u7684\u200b\u7f29\u653e\u200b\u53c2\u6570\u200b\u548c\u200b\u504f\u7f6e\u200b\u53c2\u6570\u200b\uff0c\u200b\u5171\u200b\\(4ND\\)\u200b\u4e2a\u200b\u53c2\u6570\u200b\u3002</li> </ul> <p>\u200b\u56e0\u6b64\u200b\uff0ctransformer\u200b\u7684\u200b\u603b\u53c2\u200b\u6570\u91cf\u200b\u4e3a\u200b\\(4ND(D + 1) + 2NDD_{ff} + ND_{ff} + ND + 2ND\\)\u3002\u200b\u5728\u200bVaswani\u200b\u7b49\u200b\u4eba\u200b\u7684\u200b\u5b9e\u73b0\u200b\u4e2d\u200b\uff0c\\(D_{ff} = 4D\\)\uff0c\u200b\u5219\u200btransformer\u200b\u7684\u200b\u53c2\u200b\u6570\u91cf\u200b\u4e3a\u200b\\(12ND^2 + 13ND\\)\u3002\u200b\u89e3\u7801\u5668\u200b\u6bd4\u200b\u7f16\u7801\u5668\u200b\u591a\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u4ea4\u53c9\u200b\u6ce8\u610f\u529b\u200b\u5c42\u200b\uff08\\(4ND(D + 1)\\)\uff09\u200b\u548c\u200b1\u200b\u4e2a\u200b\u5f52\u4e00\u5316\u200b\u5c42\u200b\uff08\\(2ND\\)\uff09\uff0c\u200b\u56e0\u6b64\u200b\u89e3\u7801\u5668\u200b\u7684\u200b\u53c2\u200b\u6570\u91cf\u200b\u4e3a\u200b\\(16ND^2 + 19ND\\)\u3002</p> <p>\u200b\u77e9\u9635\u200b\u8fd0\u7b97\u200b\\(\\bbR^{m\\times n}\\times \\bbR^{n\\times p} \\rightarrow \\bbR^{m\\times p}\\)\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(O(mnp)\\)\uff0c\u200b\u9010\u6b65\u200b\u5206\u6790\u200btransformer\u200b\u7684\u200b\u8ba1\u7b97\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u5ffd\u7565\u200b\u52a0\u6cd5\u200b\u548c\u200b\u5f52\u4e00\u5316\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1a</p> <ol> <li>\u200b\u7ebf\u6027\u53d8\u6362\u200b\uff1a\\(\\bbR^{L\\times D}\\times \\bbR^{D\\times D} \\rightarrow \\bbR^{L\\times D}\\)\uff0c\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(O(LD^2)\\)\uff1b</li> <li>\u200b\u591a\u5934\u200b\u6ce8\u610f\u529b\u200b\uff1a\\(\\bbR^{L\\times D}\\times \\bbR^{D\\times L}\\rightarrow \\bbR^{L\\times L}\\)\uff0c\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(O(L^2D)\\)\uff1b</li> <li>\u200b\u524d\u9988\u200b\u795e\u7ecf\u7f51\u7edc\u200b\uff1a\\(\\bbR^{L\\times D}\\times \\bbR^{D\\times D_{ff}}\\rightarrow \\bbR^{L\\times D_{ff}}\\)\uff0c\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(O(LDD_{ff})\\)\u3002\u200b\u6309\u7167\u200b\\(D_{ff} = 4D\\)\uff0c\u200b\u5219\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(O(4LD^2) = O(LD^2)\\)\u3002</li> </ol> <p>\\(D\\)\u200b\u4e3a\u200b\u5e38\u6570\u200b\uff0c\u200b\u6a21\u578b\u200b\u5171\u200b\u53e0\u52a0\u200b\\(N\\)\u200b\u5c42\u200b\u4e32\u884c\u200b\u8ba1\u7b97\u200b\uff0c\u200b\u56e0\u6b64\u200btransformer\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b\\(O(NL^2D)\\)\u3002</p>"},{"location":"coding/machine-learning/gan/","title":"\u751f\u6210\u200b\u5bf9\u6297\u200b\u7f51\u7edc","text":"In\u00a0[1]: Copied! <pre>import torch\nimport torchvision\nfrom torch.utils.data import DataLoader\n\n# SVG output\n%config InlineBackend.figure_format = 'svg'\n\n# Fix for certificate error\n# https://stackoverflow.com/questions/71263622\nimport ssl\nssl._create_default_https_context = ssl._create_unverified_context\n</pre> import torch import torchvision from torch.utils.data import DataLoader  # SVG output %config InlineBackend.figure_format = 'svg'  # Fix for certificate error # https://stackoverflow.com/questions/71263622 import ssl ssl._create_default_https_context = ssl._create_unverified_context <p>\u200b\u5bfc\u5165\u200bMNIST\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u4f7f\u7528\u200b\u751f\u6210\u200b\u5bf9\u6297\u200b\u7f51\u7edc\u200b\u751f\u6210\u200b\u624b\u5199\u200b\u6570\u5b57\u200b\u56fe\u7247\u200b\u3002</p> In\u00a0[2]: Copied! <pre>train_dataset = torchvision.datasets.MNIST(\n    train=True, root='data',\n    transform=torchvision.transforms.ToTensor(), download=True\n)\ntrain_loader = DataLoader(train_dataset, batch_size=512, shuffle=True)\n</pre> train_dataset = torchvision.datasets.MNIST(     train=True, root='data',     transform=torchvision.transforms.ToTensor(), download=True ) train_loader = DataLoader(train_dataset, batch_size=512, shuffle=True) <p>\u200b\u751f\u6210\u5668\u200b\u7684\u200b\u7f51\u7edc\u7ed3\u6784\u200b\u4f7f\u7528\u200bMLP+ConvTranspose2d\uff0c\u200b\u8bbe\u7f6e\u200b\u9690\u200b\u53d8\u91cf\u200b\u7684\u200b\u7ef4\u5ea6\u200b\u4e3a\u200b128\u3002\u200b\u4f7f\u7528\u200b\u53cd\u200b\u5377\u79ef\u200b\u64cd\u4f5c\u200b\u6765\u200b\u751f\u6210\u200b\u56fe\u50cf\u200b\u3002\u200b\u4e3a\u4e86\u200b\u907f\u514d\u200b\u751f\u6210\u5668\u200b\u5d29\u6e83\u200b\uff0c\u200b\u5728\u200b\u5b9e\u73b0\u200b\u4e2d\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\u4ee5\u4e0b\u200b\u7ec6\u8282\u200b\uff1a</p> <ol> <li>\u200b\u6a21\u578b\u200b\u7684\u200b\u8f93\u51fa\u200b\u9700\u8981\u200b\u7528\u200bsigmoid\u3001tanh\u200b\u7b49\u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b\u5c06\u200b\u8f93\u51fa\u200b\u9650\u5236\u200b\u5728\u200b\u5408\u9002\u200b\u7684\u200b\u8303\u56f4\u200b\u5185\u200b\u3002\u200b\u6b64\u5904\u200b\u4f7f\u7528\u200btanh\u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b\u5c06\u200b\u8f93\u51fa\u200b\u9650\u5236\u200b\u5728\u200b$[-1, 1]$\u200b\u8303\u56f4\u200b\u5185\u200b\u3002</li> <li>\u200b\u907f\u514d\u200b\u5f15\u5165\u200b\u7a00\u758f\u200b\u68af\u5ea6\u200b\uff0c\u200b\u5982\u200bReLU\u200b\u548c\u200bMaxPool\u3002\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200bLeakyReLU\u200b\u7b49\u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b\u3002</li> <li>\u200b\u4f7f\u7528\u200bDropout\u200b\u7b49\u200b\u6b63\u5219\u200b\u5316\u200b\u65b9\u6cd5\u200b\u6765\u200b\u907f\u514d\u200b\u8fc7\u200b\u62df\u5408\u200b\u3002</li> <li>\u200b\u5982\u679c\u200b\u9488\u5bf9\u200b\u56fe\u50cf\u200b\u751f\u6210\u200b\u4efb\u52a1\u200b\uff0c\u200b\u66f4\u5927\u200b\u7684\u200b\u5377\u79ef\u200b\u6838\u200b\u53ef\u4ee5\u200b\u5bfc\u81f4\u200b\u56fe\u50cf\u200b\u7684\u200b\u5e73\u6ed1\u200b\u6027\u200b\u66f4\u597d\u200b\u3002</li> </ol> In\u00a0[3]: Copied! <pre>class Reshape(torch.nn.Module):\n    def __init__(self, *shape):\n        super(Reshape, self).__init__()\n        self.shape = shape\n\n    def forward(self, x):\n        return x.view(x.shape[0], *self.shape)\n\nclass Generator(torch.nn.Module):\n    def __init__(self):\n        super(Generator, self).__init__()\n        self.fcn = torch.nn.Sequential(\n            torch.nn.Linear(in_features=128, out_features=128 * 7 * 7),\n            torch.nn.LeakyReLU(0.2),\n            Reshape(128, 7, 7),\n        )\n\n        self.deconv = torch.nn.Sequential(\n            torch.nn.ConvTranspose2d(\n                in_channels=128,\n                out_channels=128,\n                kernel_size=(4, 4),\n                stride=(2, 2),\n                padding=(1, 1),\n            ),\n            torch.nn.LeakyReLU(0.2),\n            torch.nn.ConvTranspose2d(\n                in_channels=128,\n                out_channels=128,\n                kernel_size=(4, 4),\n                stride=(2, 2),\n                padding=(1, 1),\n            ),\n            torch.nn.LeakyReLU(0.2),\n            torch.nn.Conv2d(\n                in_channels=128, out_channels=1, kernel_size=(3, 3), padding=(1, 1)\n            ),\n            torch.nn.Tanh(),\n        )\n        self.layers = torch.nn.Sequential(self.fcn, self.deconv)\n\n    def forward(self, x):\n        for layer in self.layers:\n            x = layer(x)\n        return x\n</pre> class Reshape(torch.nn.Module):     def __init__(self, *shape):         super(Reshape, self).__init__()         self.shape = shape      def forward(self, x):         return x.view(x.shape[0], *self.shape)  class Generator(torch.nn.Module):     def __init__(self):         super(Generator, self).__init__()         self.fcn = torch.nn.Sequential(             torch.nn.Linear(in_features=128, out_features=128 * 7 * 7),             torch.nn.LeakyReLU(0.2),             Reshape(128, 7, 7),         )          self.deconv = torch.nn.Sequential(             torch.nn.ConvTranspose2d(                 in_channels=128,                 out_channels=128,                 kernel_size=(4, 4),                 stride=(2, 2),                 padding=(1, 1),             ),             torch.nn.LeakyReLU(0.2),             torch.nn.ConvTranspose2d(                 in_channels=128,                 out_channels=128,                 kernel_size=(4, 4),                 stride=(2, 2),                 padding=(1, 1),             ),             torch.nn.LeakyReLU(0.2),             torch.nn.Conv2d(                 in_channels=128, out_channels=1, kernel_size=(3, 3), padding=(1, 1)             ),             torch.nn.Tanh(),         )         self.layers = torch.nn.Sequential(self.fcn, self.deconv)      def forward(self, x):         for layer in self.layers:             x = layer(x)         return x <p>\u200b\u5224\u522b\u200b\u5668\u200b\u4f7f\u7528\u200bConv2d\u200b\u7ed3\u6784\u200b\uff0c\u200b\u8f93\u51fa\u200b\u7ef4\u5ea6\u200b\u4e3a\u200b1\u3002\u200b\u5728\u200b\u5b9e\u73b0\u200b\u4e2d\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\u4ee5\u4e0b\u200b\u7ec6\u8282\u200b\uff1a</p> <ol> <li>pytorch\u200b\u63d0\u4f9b\u200b\u7684\u200bMNIST\u200b\u6570\u636e\u200b\u96c6\u200b\u7684\u200b\u7279\u5f81\u200b\u8303\u56f4\u200b\u5728\u200b$[0, 1]$\u200b\u533a\u95f4\u200b\u5185\u200b\uff0c\u200b\u9700\u8981\u200b\u8f6c\u5316\u200b\u5230\u200b$[-1, 1]$\u200b\u7684\u200b\u8303\u56f4\u200b\u3002</li> </ol> In\u00a0[4]: Copied! <pre>class Discriminator(torch.nn.Module):\n    def __init__(self):\n        super(Discriminator, self).__init__()\n        self.conv = torch.nn.Sequential(\n            Reshape(1, 28, 28),\n            torch.nn.Conv2d(\n                in_channels=1,\n                out_channels=64,\n                kernel_size=(4, 4),\n                stride=(2, 2),\n                padding=(1, 1),\n            ),\n            torch.nn.LeakyReLU(0.2),\n            torch.nn.Conv2d(\n                in_channels=64,\n                out_channels=64,\n                kernel_size=(4, 4),\n                stride=(2, 2),\n                padding=(1, 1),\n            ),\n            torch.nn.LeakyReLU(0.2),\n        )\n        self.classifier = torch.nn.Sequential(\n            Reshape(3136),\n            torch.nn.Linear(in_features=3136, out_features=1), torch.nn.Sigmoid()\n        )\n        self.layers = torch.nn.Sequential(self.conv, self.classifier)\n\n    def forward(self, x):\n        for layer in self.layers:\n            x = layer(x)\n        return x.squeeze()\n</pre> class Discriminator(torch.nn.Module):     def __init__(self):         super(Discriminator, self).__init__()         self.conv = torch.nn.Sequential(             Reshape(1, 28, 28),             torch.nn.Conv2d(                 in_channels=1,                 out_channels=64,                 kernel_size=(4, 4),                 stride=(2, 2),                 padding=(1, 1),             ),             torch.nn.LeakyReLU(0.2),             torch.nn.Conv2d(                 in_channels=64,                 out_channels=64,                 kernel_size=(4, 4),                 stride=(2, 2),                 padding=(1, 1),             ),             torch.nn.LeakyReLU(0.2),         )         self.classifier = torch.nn.Sequential(             Reshape(3136),             torch.nn.Linear(in_features=3136, out_features=1), torch.nn.Sigmoid()         )         self.layers = torch.nn.Sequential(self.conv, self.classifier)      def forward(self, x):         for layer in self.layers:             x = layer(x)         return x.squeeze() <p>\u200b\u5c06\u200b\u4e24\u8005\u200b\u7ec4\u5408\u200b\u5f97\u5230\u200b\u751f\u6210\u200b\u5bf9\u6297\u200b\u7f51\u7edc\u200b\u7684\u200b\u7ed3\u6784\u200b\u3002\u200b\u4ece\u200b$\\text{JS}$\u200b\u8ddd\u79bb\u200b\u7684\u200b\u5b9a\u4e49\u200b\u53ef\u4ee5\u200b\u5bfc\u51fa\u200b\u7528\u4e8e\u200b\u4f18\u5316\u200b\u7684\u200b\u4ea4\u53c9\u200b\u71b5\u200b\u635f\u5931\u200b\u3002\u200b\u5728\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u4e2d\u200b\uff0c\u200b\u6709\u200b\u4ee5\u4e0b\u200b\u7ec6\u8282\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\uff1a</p> <ol> <li>\u200b\u8bad\u7ec3\u200b\u5224\u522b\u200b\u5668\u65f6\u200b\u5c06\u200b\u771f\u5b9e\u200b\u6837\u672c\u200b\u7684\u200b\u6807\u7b7e\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b1\uff0c\u200b\u751f\u6210\u200b\u6837\u672c\u200b\u7684\u200b\u6807\u7b7e\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b0\u3002\u200b\u76f8\u53cd\u200b\u5730\u200b\uff0c\u200b\u8bad\u7ec3\u200b\u751f\u6210\u5668\u200b\u65f6\u200b\u5c06\u200b\u751f\u6210\u200b\u6837\u672c\u200b\u7684\u200b\u6807\u7b7e\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b1\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u53cd\u5411\u200b\u4f18\u5316\u200b\u5224\u522b\u200b\u5668\u200b\u7684\u200b\u635f\u5931\u200b\u3002</li> <li>\u200b\u968f\u673a\u566a\u58f0\u200b\u6700\u597d\u200b\u4f7f\u7528\u200b\u6b63\u6001\u5206\u5e03\u200b\u800c\u200b\u907f\u514d\u200b\u4f7f\u7528\u200b\u5747\u5300\u5206\u5e03\u200b\u3002</li> <li>\u200b\u4e00\u4e2a\u200bmini-batch\u200b\u4e2d\u200b\u5fc5\u987b\u200b\u53ea\u6709\u200b\u771f\u5b9e\u200b\u6837\u672c\u200b\u6216\u200b\u751f\u6210\u200b\u6837\u672c\u200b\uff0c\u200b\u4e0d\u80fd\u6df7\u5408\u200b\u4f7f\u7528\u200b\u3002</li> </ol> In\u00a0[5]: Copied! <pre>from typing import Optional\n\nclass GAN(torch.nn.Module):\n    def __init__(self):\n        super(GAN, self).__init__()\n        self.generator = Generator()\n        self.discriminator = Discriminator()\n        self.loss = torch.nn.BCELoss()\n        self.device = torch.device('cpu')\n\n    def to(self, *args, **kwargs):\n        if args:\n            self.device = args[0]\n        elif 'device' in kwargs:\n            self.device = kwargs['device']\n        super().to(*args, **kwargs)\n\n    def forward(\n        self, x: Optional[torch.Tensor] = None, y: Optional[torch.Tensor] = None\n    ):\n        assert x is not None or y is not None, 'Either x or y must be provided'\n        if x is not None:\n            x = x.to(self.device)\n            x = x.view(x.size(0), -1)\n            x = x * 2 - 1\n        else:\n            assert y is not None\n            z = torch.randn(y.size(0), 128, device=self.device)\n            x = self.generator(z)\n\n        if y is not None:\n            y = y.to(self.device)\n        else:\n            assert x is not None\n            y = torch.ones(x.shape[0], device=self.device)\n\n        prob = self.discriminator(x)\n\n        return self.loss(prob, y)\n\nmodel = GAN()\n</pre> from typing import Optional  class GAN(torch.nn.Module):     def __init__(self):         super(GAN, self).__init__()         self.generator = Generator()         self.discriminator = Discriminator()         self.loss = torch.nn.BCELoss()         self.device = torch.device('cpu')      def to(self, *args, **kwargs):         if args:             self.device = args[0]         elif 'device' in kwargs:             self.device = kwargs['device']         super().to(*args, **kwargs)      def forward(         self, x: Optional[torch.Tensor] = None, y: Optional[torch.Tensor] = None     ):         assert x is not None or y is not None, 'Either x or y must be provided'         if x is not None:             x = x.to(self.device)             x = x.view(x.size(0), -1)             x = x * 2 - 1         else:             assert y is not None             z = torch.randn(y.size(0), 128, device=self.device)             x = self.generator(z)          if y is not None:             y = y.to(self.device)         else:             assert x is not None             y = torch.ones(x.shape[0], device=self.device)          prob = self.discriminator(x)          return self.loss(prob, y)  model = GAN() <p>\u200b\u53ef\u4ee5\u200b\u7ed9\u200b\u751f\u6210\u5668\u200b\u8f93\u5165\u200b\u4e00\u4e2a\u200b\u968f\u673a\u566a\u58f0\u200b\uff0c\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b\u751f\u6210\u5668\u200b\u751f\u6210\u200b\u56fe\u7247\u200b\u3002\u200b\u5728\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u751f\u6210\u5668\u200b\u7684\u200b\u8f93\u51fa\u200b\u4f1a\u200b\u9010\u6e10\u200b\u903c\u8fd1\u200b\u771f\u5b9e\u200b\u56fe\u7247\u200b\u7684\u200b\u5206\u5e03\u200b\u3002</p> In\u00a0[6]: Copied! <pre>from matplotlib import pyplot as plt\nfrom matplotlib.axes import Axes\n\ndef plot_generator(z: torch.Tensor, model: GAN, ax: Optional[Axes] = None):\n    z = z.to(model.device)\n    with torch.no_grad():\n        x = model.generator(z).view(28, 28).cpu().numpy() * 0.5 + 0.5\n\n    if ax is None:\n        plt.imshow(x, cmap='gray')\n        plt.axis('off')\n    else:\n        ax.imshow(x, cmap='gray')\n        ax.axis('off')\n\nx_noise = torch.randn(1, 128)\nplot_generator(x_noise, model)\nplt.show()\n</pre> from matplotlib import pyplot as plt from matplotlib.axes import Axes  def plot_generator(z: torch.Tensor, model: GAN, ax: Optional[Axes] = None):     z = z.to(model.device)     with torch.no_grad():         x = model.generator(z).view(28, 28).cpu().numpy() * 0.5 + 0.5      if ax is None:         plt.imshow(x, cmap='gray')         plt.axis('off')     else:         ax.imshow(x, cmap='gray')         ax.axis('off')  x_noise = torch.randn(1, 128) plot_generator(x_noise, model) plt.show() <p>\u200b\u5206\u522b\u200b\u4e3a\u200b\u751f\u6210\u5668\u200b\u548c\u200b\u5224\u522b\u200b\u5668\u200b\u8bbe\u7f6e\u200b\u4f18\u5316\u200b\u5668\u200b\uff0c\u200b\u7528\u4e8e\u200b\u66f4\u65b0\u200b\u5404\u81ea\u200b\u5bf9\u5e94\u200b\u7684\u200b\u53c2\u6570\u200b\u3002Adam\u200b\u4f18\u5316\u200b\u5668\u200b\u5bf9\u4e8e\u200b\u751f\u6210\u200b\u5bf9\u6297\u200b\u7f51\u7edc\u200b\u7684\u200b\u8bad\u7ec3\u200b\u6548\u679c\u200b\u8f83\u200b\u597d\u200b\u3002</p> <ol> <li>\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\uff0c\u200b\u751f\u6210\u5668\u200b\u548c\u200b\u5224\u522b\u200b\u5668\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u7684\u200b\u8303\u56f4\u200b\u5e94\u5f53\u200b\u76f8\u8fd1\u200b\u3002\u200b\u5982\u679c\u200b\u4e00\u65b9\u200b\u6027\u80fd\u200b\u8fc7\u200b\u5f3a\u200b\uff0c\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u53e6\u4e00\u65b9\u200b\u65e0\u6cd5\u200b\u5b66\u4e60\u200b\u3002</li> <li>\u200b\u751f\u6210\u5668\u200b\u548c\u200b\u5224\u522b\u200b\u5668\u200b\u53ef\u4ee5\u200b\u8bbe\u7f6e\u200b\u4e0d\u540c\u200b\u7684\u200b\u5b66\u4e60\u200b\u7387\u200b\uff0c\u200b\u6216\u662f\u200b\u8bbe\u7f6e\u200b\u4e0d\u540c\u200b\u7684\u200b\u4f18\u5316\u200b\u6b65\u6570\u200b\u3002\u200b\u4e0d\u540c\u200b\u7684\u200b\u4f18\u5316\u200b\u6b65\u6570\u200b\u5bf9\u6a21\u578b\u200b\u6700\u7ec8\u200b\u7684\u200b\u6027\u80fd\u200b\u5f71\u54cd\u200b\u4e0d\u200b\u5927\u200b\u3002</li> </ol> <p>\u200b\u6837\u672c\u200b\u6807\u7b7e\u200b\u6709\u200b\u5982\u4e0b\u200b\u8bbe\u7f6e\u200b\u6280\u5de7\u200b\uff1a</p> <ol> <li>\u200b\u4f7f\u7528\u200b\u5e73\u6ed1\u200b\u6807\u7b7e\u200b\uff0c\u200b\u5373\u5c06\u200b\u771f\u5b9e\u200b\u6837\u672c\u200b\u7684\u200b\u6807\u7b7e\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b$[0.9, 1.0]$\uff0c\u200b\u751f\u6210\u200b\u6837\u672c\u200b\u7684\u200b\u6807\u7b7e\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b$[0.0, 0.1]$\u3002</li> <li>\u200b\u968f\u673a\u200b\u53cd\u8f6c\u200b\u6807\u7b7e\u200b\uff0c\u200b\u5373\u200b\u8bad\u7ec3\u200b\u5224\u522b\u200b\u5668\u65f6\u200b\u6309\u7167\u200b\u4e00\u4e2a\u200b\u8f83\u200b\u4f4e\u200b\u7684\u200b\u6982\u7387\u200b\u5c06\u200b\u771f\u5b9e\u200b\u6837\u672c\u200b\u7684\u200b\u6807\u7b7e\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b0\uff0c\u200b\u751f\u6210\u200b\u6837\u672c\u200b\u7684\u200b\u6807\u7b7e\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b1\u3002</li> </ol> In\u00a0[7]: Copied! <pre>optimizer_g = torch.optim.Adam(model.generator.parameters(), lr=0.0005, weight_decay=1e-4)\noptimizer_d = torch.optim.Adam(model.discriminator.parameters(), lr=0.0005, weight_decay=1e-4)\nN = 100 # Number of epochs\ndevice = 'cuda:0' if torch.cuda.is_available() else 'cpu'\ndiscriminator_real_loss = []\ndiscriminator_fake_loss = []\ngenerator_loss = []\n</pre> optimizer_g = torch.optim.Adam(model.generator.parameters(), lr=0.0005, weight_decay=1e-4) optimizer_d = torch.optim.Adam(model.discriminator.parameters(), lr=0.0005, weight_decay=1e-4) N = 100 # Number of epochs device = 'cuda:0' if torch.cuda.is_available() else 'cpu' discriminator_real_loss = [] discriminator_fake_loss = [] generator_loss = [] <p>\u200b\u8bad\u7ec3\u200b\u6a21\u578b\u200b\uff0c\u200b\u6bcf\u200b\u7ecf\u8fc7\u200b\u82e5\u5e72\u4e2a\u200bepoch\u200b\u8f93\u51fa\u200b\u4e00\u6b21\u200b\u751f\u6210\u200b\u7684\u200b\u56fe\u7247\u200b</p> In\u00a0[8]: Copied! <pre>fig, ax = plt.subplots(5, 5, figsize=(8, 8))\naxes = iter(ax.flatten())\nx_noise = torch.randn(1, 128)\n\nfor epoch in range(N):\n    current_real_losses = []\n    current_fake_losses = []\n    current_generator_losses = []\n\n    model.train()\n    model.to(device)\n    for i, (x, _) in enumerate(train_loader, start=1):\n        optimizer_d.zero_grad()\n        optimizer_g.zero_grad()\n\n        y = torch.ones(x.size(0), device=device) * 0.95 # Label smoothing\n\n        # Train discriminator\n        loss_real = model(x, y)\n        loss_real.backward()\n        optimizer_d.step()\n        optimizer_d.zero_grad()\n\n        loss_fake = model(None, 1 - y)\n        loss_fake.backward()\n        optimizer_d.step()\n\n        current_real_losses.append(loss_real.item())\n        current_fake_losses.append(loss_fake.item())\n\n        # Train generator\n        loss_fake = model(None, y)\n        loss_fake.backward()\n        optimizer_g.step()\n\n        current_generator_losses.append(loss_fake.item())\n\n    d_loss = (sum(current_real_losses) + sum(current_fake_losses)) / \\\n        (len(current_real_losses) + len(current_fake_losses))\n    g_loss = sum(current_generator_losses) / len(current_generator_losses)\n\n    discriminator_real_loss.extend(current_real_losses)\n    discriminator_fake_loss.extend(current_fake_losses)\n    generator_loss.extend(current_generator_losses)\n\n    model.eval()\n    if (epoch + 1) % 4 == 0:\n        ax = next(axes)\n        plot_generator(x_noise, model, ax)\n        ax.set_title(f'Epoch {epoch + 1}', fontsize=9)\n        ax.text(\n            0.5, 0.99, f'D Loss: {d_loss:.2f} | G Loss: {g_loss:.2f}',\n            color='white', fontsize=5.5, va='top', ha='center',\n            transform=ax.transAxes\n        )\n\nfig.show()\n</pre> fig, ax = plt.subplots(5, 5, figsize=(8, 8)) axes = iter(ax.flatten()) x_noise = torch.randn(1, 128)  for epoch in range(N):     current_real_losses = []     current_fake_losses = []     current_generator_losses = []      model.train()     model.to(device)     for i, (x, _) in enumerate(train_loader, start=1):         optimizer_d.zero_grad()         optimizer_g.zero_grad()          y = torch.ones(x.size(0), device=device) * 0.95 # Label smoothing          # Train discriminator         loss_real = model(x, y)         loss_real.backward()         optimizer_d.step()         optimizer_d.zero_grad()          loss_fake = model(None, 1 - y)         loss_fake.backward()         optimizer_d.step()          current_real_losses.append(loss_real.item())         current_fake_losses.append(loss_fake.item())          # Train generator         loss_fake = model(None, y)         loss_fake.backward()         optimizer_g.step()          current_generator_losses.append(loss_fake.item())      d_loss = (sum(current_real_losses) + sum(current_fake_losses)) / \\         (len(current_real_losses) + len(current_fake_losses))     g_loss = sum(current_generator_losses) / len(current_generator_losses)      discriminator_real_loss.extend(current_real_losses)     discriminator_fake_loss.extend(current_fake_losses)     generator_loss.extend(current_generator_losses)      model.eval()     if (epoch + 1) % 4 == 0:         ax = next(axes)         plot_generator(x_noise, model, ax)         ax.set_title(f'Epoch {epoch + 1}', fontsize=9)         ax.text(             0.5, 0.99, f'D Loss: {d_loss:.2f} | G Loss: {g_loss:.2f}',             color='white', fontsize=5.5, va='top', ha='center',             transform=ax.transAxes         )  fig.show() In\u00a0[9]: Copied! <pre>model.eval()\nz = torch.randn(25, 128)\n\nfig, ax = plt.subplots(5, 5, figsize=(8, 8))\nfor i in range(25):\n    plot_generator(z[i].reshape(1, -1), model, ax[*divmod(i, 5)])\n</pre> model.eval() z = torch.randn(25, 128)  fig, ax = plt.subplots(5, 5, figsize=(8, 8)) for i in range(25):     plot_generator(z[i].reshape(1, -1), model, ax[*divmod(i, 5)]) In\u00a0[10]: Copied! <pre>def ema(x, beta):\n    y = x[0]\n    for _ in x:\n        y = beta * y + (1 - beta) * _\n        yield y\n\nfig, ax = plt.subplots(1, 1, figsize=(8, 4))\n\nax.plot(generator_loss, color='lightblue', alpha=0.5)\nax.plot([*ema(generator_loss, 0.99)], label='Generator', color='blue', linewidth=1)\nax.plot(discriminator_fake_loss, color='pink', alpha=0.5)\nax.plot([*ema(discriminator_fake_loss, 0.99)], label='Discriminator (fake)', color='red', linewidth=1)\nax.plot(discriminator_real_loss, color='lightgreen', alpha=0.5)\nax.plot([*ema(discriminator_real_loss, 0.99)], label='Discriminator (real)', color='green', linewidth=1)\nax.set_ylim(0, 4)\nax.legend(loc='upper right')\n\nfig.show()\n</pre> def ema(x, beta):     y = x[0]     for _ in x:         y = beta * y + (1 - beta) * _         yield y  fig, ax = plt.subplots(1, 1, figsize=(8, 4))  ax.plot(generator_loss, color='lightblue', alpha=0.5) ax.plot([*ema(generator_loss, 0.99)], label='Generator', color='blue', linewidth=1) ax.plot(discriminator_fake_loss, color='pink', alpha=0.5) ax.plot([*ema(discriminator_fake_loss, 0.99)], label='Discriminator (fake)', color='red', linewidth=1) ax.plot(discriminator_real_loss, color='lightgreen', alpha=0.5) ax.plot([*ema(discriminator_real_loss, 0.99)], label='Discriminator (real)', color='green', linewidth=1) ax.set_ylim(0, 4) ax.legend(loc='upper right')  fig.show() <p>Paper reference:</p> <pre>@inproceedings{goodfellow2014generative,\n\tauthor = {Goodfellow, Ian and Pouget-Abadie, Jean and Mirza, Mehdi and Xu, Bing and Warde-Farley, David and Ozair, Sherjil and Courville, Aaron and Bengio, Yoshua},\n\tbooktitle = {Advances in Neural Information Processing Systems},\n\teditor = {Z. Ghahramani and M. Welling and C. Cortes and N. Lawrence and K.Q. Weinberger},\n\tpublisher = {Curran Associates, Inc.},\n\ttitle = {Generative Adversarial Nets},\n\turl = {https://proceedings.neurips.cc/paper_files/paper/2014/file/5ca3e9b122f61f8f06494c97b1afccf3-Paper.pdf},\n\tvolume = {27},\n\tyear = {2014}\n}\n</pre>"},{"location":"coding/machine-learning/gan/","title":"\u751f\u6210\u200b\u5bf9\u6297\u200b\u7f51\u7edc\u200b\u00b6","text":"<p>\u200b\u751f\u6210\u200b\u5bf9\u6297\u200b\u7f51\u7edc\u200b\uff08Generative Adversarial Networks, GAN\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u751f\u6210\u200b\u6a21\u578b\u200b\uff0c\u200b\u5b83\u200b\u7531\u200b\u4e24\u4e2a\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u7ec4\u6210\u200b\uff1a\u200b\u751f\u6210\u5668\u200b\uff08Generator\uff09\u200b\u548c\u200b\u5224\u522b\u200b\u5668\u200b\uff08Discriminator\uff09\u3002\u200b\u751f\u6210\u200b\u7f51\u7edc\u200b\u7684\u200b\u76ee\u6807\u200b\u662f\u4ece\u200b\u6837\u672c\u7a7a\u95f4\u200b$\\mathcal X$\u200b\u4e2d\u200b\u751f\u6210\u200b\u5c3d\u53ef\u80fd\u200b\u903c\u771f\u200b\u7684\u200b\u6837\u672c\u200b$\\mathbb P_g$\uff0c\u200b\u800c\u200b\u5224\u522b\u200b\u7f51\u7edc\u200b\u7684\u200b\u76ee\u6807\u200b\u662f\u200b\u5c3d\u53ef\u80fd\u200b\u51c6\u786e\u200b\u5730\u533a\u200b\u5206\u200b\u771f\u5b9e\u200b\u6837\u672c\u200b\u7684\u200b\u5206\u5e03\u200b$\\mathbb P$\u200b\u548c\u200b\u751f\u6210\u200b\u6837\u672c\u200b\u7684\u200b\u5206\u5e03\u200b$\\mathbb P_g$\u3002\u200b\u4e24\u4e2a\u200b\u7f51\u7edc\u200b\u7684\u200b\u8bad\u7ec3\u200b\u76ee\u6807\u200b\u76f8\u4e92\u200b\u5bf9\u6297\u200b\uff0c\u200b\u5728\u200b\u5bf9\u6297\u200b\u8bad\u7ec3\u200b\u4e2d\u200b\uff0c\u200b\u751f\u6210\u5668\u200b\u53ef\u4ee5\u200b\u5b66\u4e60\u200b\u5230\u200b\u5982\u4f55\u200b\u4ece\u200b\u968f\u673a\u566a\u58f0\u200b\u4e2d\u200b\u91cd\u5efa\u200b\u6837\u672c\u200b\u3002</p> <p>\u200b\u5728\u200b\u751f\u6210\u5668\u200b\u7684\u200b\u5b9e\u73b0\u200b\u4e2d\u200b\uff0c\u200b\u901a\u5e38\u200b\u91c7\u53d6\u200b\u9690\u200b\u53d8\u91cf\u200b\u6a21\u578b\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5373\u200b\u4ece\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200b\u5206\u5e03\u200b\u4e2d\u200b\u91c7\u6837\u200b\u9690\u200b\u53d8\u91cf\u200b$z$\uff0c\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b\u751f\u6210\u5668\u200b$g$\u200b\u751f\u6210\u200b\u6837\u672c\u200b$x$\uff0c\u200b\u5373\u200b$x = g(z; \\theta_g)$\u3002</p> <p>\u200b\u8bbe\u200b$P, Q$\u200b\u4e3a\u200b\u4e24\u4e2a\u200b\u6982\u7387\u5206\u5e03\u200b\uff08\u200b\u7684\u200b\u6982\u7387\u5bc6\u5ea6\u200b\uff09\uff0c\u200b\u5b83\u4eec\u200b\u7684\u200b\u5dee\u5f02\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200bKullback\u2013Leibler\u200b\u6563\u5ea6\u200b\u6765\u200b\u8861\u91cf\u200b\uff1a</p> <p>$$ \\text{KL}(P\\Vert Q) = \\int P(x) \\log \\frac{P(x)}{Q(x)} \\mathrm dx $$</p> <p>KL\u200b\u6563\u5ea6\u200b\u4e0d\u662f\u200b\u5bf9\u79f0\u200b\u7684\u200b\uff0c\u200b\u901a\u5e38\u200b\u4f7f\u7528\u200bJensen-Shannon\u200b\u6563\u5ea6\u200b\u6765\u200b\u8861\u91cf\u200b$P, Q$\u200b\u4e24\u4e2a\u200b\u5206\u5e03\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8ddd\u79bb\u200b\uff1a</p> <p>$$ \\begin{aligned} \\text{JS}(P\\Vert Q) &amp;= \\text{KL}\\left(P\\middle\\Vert \\frac{P+Q}{2}\\right) + \\text{KL}\\left(Q\\middle\\Vert \\frac{P+Q}{2}\\right) \\\\ &amp;= \\int P(x) \\log \\frac{2P(x)}{P(x) + Q(x)} \\mathrm dx + \\int Q(x) \\log \\frac{2Q(x)}{P(x) + Q(x)} \\mathrm dx \\\\ &amp;= \\mathbb E_{x\\sim P} \\log \\frac{2P(x)}{P(x) + Q(x)} + \\mathbb E_{x\\sim Q} \\log \\frac{2Q(x)}{P(x) + Q(x)} \\\\ &amp;= \\mathbb E_{x\\sim P} \\log \\frac{2P(x)}{P(x) + Q(x)} + \\mathbb E_{x\\sim Q} \\log \\left(2 - \\frac{2P(x)}{P(x) + Q(x)}\\right) \\end{aligned} $$</p> <p>\u200b\u5224\u522b\u200b\u5668\u200b$D$\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e8c\u200b\u5206\u7c7b\u5668\u200b$d(x; \\theta_d): \\mathcal X \\rightarrow [0, 1]$\uff0c\u200b\u8f93\u51fa\u200b$x$\u200b\u6765\u81ea\u200b\u4e8e\u200b\u771f\u5b9e\u200b\u6837\u672c\u200b\u7684\u200b\u6982\u7387\u200b$P(x\\sim \\mathbb P \\mid x)$\u3002</p> <p>$$ \\begin{aligned} d(x) &amp;= P(x\\sim \\mathbb P \\mid x) \\\\ &amp;= \\frac{P(x\\sim \\mathbb P, x)}{P(x)} \\\\ &amp;= \\frac{P(x\\sim \\mathbb P, x)}{P(x\\sim \\mathbb P, x) + P(x\\sim \\mathbb P_g, x)} \\\\ &amp;= \\frac{\\mathbb P(x)}{\\mathbb P(x) + \\mathbb P_g(x)} \\end{aligned} $$</p> <p>\u200b\u4e0e\u200b$\\text{JS}$\u200b\u6563\u5ea6\u200b\u5177\u6709\u200b\u76f8\u540c\u200b\u7684\u200b\u5f62\u5f0f\u200b\uff1a</p> <p>$$ \\begin{aligned} \\text{JS}(\\mathbb P\\Vert \\mathbb P_g) &amp;= \\mathbb E_{x\\sim \\mathbb P} \\log 2d(x; \\theta_d) + \\mathbb E_{x\\sim \\mathbb P_g} \\log 2(1 - d(x; \\theta_d)) \\\\ &amp;= \\log 4 + \\mathbb E_{x\\sim \\mathbb P} \\log d(x; \\theta_d) + \\mathbb E_{x\\sim \\mathbb P_g} \\log (1 - d(x; \\theta_d)) \\end{aligned} $$</p> <p>\u200b\u5224\u522b\u200b\u5668\u200b\u7684\u200b\u76ee\u6807\u200b\u662f\u200b\u5c3d\u53ef\u80fd\u200b\u533a\u5206\u200b\u4e24\u4e2a\u200b\u5206\u5e03\u200b\uff0c\u200b\u5373\u200b\u6700\u5927\u5316\u200b$\\text{JS}(\\mathbb P\\Vert \\mathbb P_g)$\uff0c\u200b\u5373\u200b</p> <p>$$ L(\\theta_d, \\theta_g) = -y \\log d(x; \\theta_d) - (1 - y) \\log (1 - d(x; \\theta_d)) $$</p> <p>\u200b\u5f53\u200b$x$\u200b\u6765\u81ea\u200b\u4e8e\u200b\u771f\u5b9e\u200b\u6837\u672c\u200b\u65f6\u200b\uff0c$y=1$\uff1b\u200b\u5f53\u200b$x$\u200b\u6765\u81ea\u200b\u4e8e\u200b\u751f\u6210\u200b\u6837\u672c\u200b\u65f6\u200b\uff0c$y=0$\u3002\u200b\u76f8\u5bf9\u200b\u5730\u200b\uff0c\u200b\u751f\u6210\u5668\u200b\u7684\u200b\u5206\u5e03\u200b$\\mathbb P_g$\u200b\u6765\u81ea\u200b\u4e8e\u200b\u5bf9\u200b\u9690\u200b\u53d8\u91cf\u200b$z$\u200b\u7684\u200b\u53d8\u6362\u200b$x = g(z; \\theta_g)$\uff0c\u200b\u5176\u200b\u4f18\u5316\u200b\u76ee\u6807\u200b\u662f\u200b\u6700\u5c0f\u5316\u200b$\\text{JS}(\\mathbb P\\Vert \\mathbb P_g)$\u3002\u200b\u603b\u4f53\u200b\u7684\u200b\u4f18\u5316\u200b\u76ee\u6807\u200b\u53ef\u4ee5\u200b\u5199\u4f5c\u200b\uff1a</p> <p>$$ \\max_{\\theta_g} \\min_{\\theta_d} L(\\theta_d, \\theta_g) \\triangleq  - \\log d(x; \\theta_d) - \\log (1 - d(g(z; \\theta_g); \\theta_d)) $$</p> <p>\u200b\u5728\u200b\u73b0\u5b9e\u200b\u4f18\u5316\u200b\u4e2d\u200b\uff0c\u200b\u751f\u6210\u5668\u200b\u5f80\u5f80\u200b\u4e0d\u662f\u200b\u4f18\u5316\u200b$L_g(\\theta_g) = \\log (1 - d(g(z; \\theta_g); \\theta_d))$\uff0c\u200b\u800c\u662f\u200b\u4f18\u5316\u200b</p> <p>$$ L_g(\\theta_g) = -\\log d(g(z; \\theta_g); \\theta_d) $$</p> <p>\u200b\u5728\u200b\u6bcf\u200b\u4e00\u6b65\u200b\u8fed\u4ee3\u200b\u4e2d\u200b\uff0c\u200b\u5148\u200b\u901a\u8fc7\u200b\u591a\u200b\u6b65\u200b\u8fed\u4ee3\u200b\u4f18\u5316\u200b\u5224\u522b\u200b\u5668\u200b\uff0c\u200b\u7136\u540e\u200b\u518d\u200b\u4f18\u5316\u200b\u751f\u6210\u5668\u200b\u3002\u200b\u5728\u200b\u4f18\u5316\u200b\u6a21\u578b\u200b\u7684\u200b\u4e00\u4e2a\u200b\u90e8\u5206\u200b\u65f6\u200b\uff0c\u200b\u9700\u8981\u200b\u56fa\u5b9a\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u90e8\u5206\u200b\u7684\u200b\u53c2\u6570\u200b\u3002</p>"},{"location":"coding/machine-learning/gaussian-process/","title":"\u9ad8\u65af\u200b\u8fc7\u7a0b","text":"In\u00a0[1]: Copied! <pre>from scipy.stats import norm\nfrom matplotlib import pyplot as plt\nimport numpy as np\n\n%config InlineBackend.figure_format = 'svg'\n</pre> from scipy.stats import norm from matplotlib import pyplot as plt import numpy as np  %config InlineBackend.figure_format = 'svg' <p>\u200b\u9ad8\u65af\u200b\u8fc7\u7a0b\u200b\uff08Gaussian Process\uff0cGP\uff09\u200b\u662f\u200b\u5c06\u200b\u591a\u200b\u53d8\u91cf\u200b\u9ad8\u65af\u5206\u5e03\u200b\u63a8\u5e7f\u200b\u5230\u200b\u65e0\u9650\u200b\u7ef4\u5ea6\u200b$\\mathcal X\\subseteq \\mathbb R^n$\u200b\u7684\u200b\u6982\u7387\u5206\u5e03\u200b\u3002\u200b\u5177\u4f53\u200b\u5730\u200b\uff0c\u200b\u5bf9\u4e8e\u200b$X = \\{x_1, \\ldots, x_n\\}\\subseteq \\mathcal X$\uff0c\u200b\u968f\u673a\u53d8\u91cf\u200b$f(x_1), \\ldots, f(x_n)$\u200b\u670d\u4ece\u200b\u591a\u5143\u200b\u9ad8\u65af\u5206\u5e03\u200b$\\mathcal N(\\mu(X), \\Sigma(X))$\u3002\u200b\u5176\u4e2d\u200b\uff0c$\\mu(X)$\u200b\u4e3a\u200b\u5747\u503c\u200b\u51fd\u6570\u200b\uff0c$\\Sigma(X)$\u200b\u4e3a\u200b\u534f\u65b9\u5dee\u200b\u51fd\u6570\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u9ad8\u65af\u5206\u5e03\u200b\u7814\u7a76\u200b\u7684\u200b\u662f\u200b\u51fd\u6570\u200b\u7684\u200b\u6982\u7387\u5206\u5e03\u200b\u3002</p> <p>\u200b\u591a\u5143\u200b\u9ad8\u65af\u5206\u5e03\u200b\u7684\u200b\u6761\u4ef6\u200b\u5206\u5e03\u200b\u4f9d\u7136\u200b\u662f\u200b\u9ad8\u65af\u5206\u5e03\u200b\u3002\u200b\u8bbe\u200b\u968f\u673a\u53d8\u91cf\u200b$X = (X_1, X_2)$\u200b\u670d\u4ece\u200b\u591a\u5143\u200b\u9ad8\u65af\u5206\u5e03\u200b$\\mathcal N(\\mu, \\Sigma)$\uff0c\u200b\u5176\u4e2d\u200b$\\mu = (\\mu_1, \\mu_2)$\uff0c$\\Sigma = \\begin{bmatrix} \\Sigma_{11} &amp; \\Sigma_{12} \\\\ \\Sigma_{21} &amp; \\Sigma_{22} \\end{bmatrix}$\uff0c\u200b\u5219\u200b\u7ed9\u5b9a\u200b$X_1 = x_1$\u200b\u540e\u200b\uff0c$X_2$\u200b\u7684\u200b\u6761\u4ef6\u200b\u5206\u5e03\u200b\u4e3a\u200b\uff1a</p> <p>$$ (X_2\\mid X_1 = x_1) \\sim \\mathcal N(\\mu_2 + \\Sigma_{21}\\Sigma_{11}^{-1}(x_1 - \\mu_1), \\Sigma_{22} - \\Sigma_{21}\\Sigma_{11}^{-1}\\Sigma_{12}) $$</p> <p>\u200b\u8bbe\u200b\u4e00\u7ec4\u200b\u89c2\u6d4b\u200b\u6570\u636e\u200b\u6570\u636e\u200b$\\boldsymbol X = x_1, \\ldots, x_n$\u200b\u53ca\u5176\u200b\u5bf9\u5e94\u200b\u7684\u200b\u51fd\u6570\u200b\u503c\u200b$\\boldsymbol Y = y_1, \\ldots, y_n$\u3002\u200b\u5bf9\u4e8e\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u6570\u636e\u200b\u70b9\u200b$x$\uff0c\u200b\u8981\u200b\u9884\u6d4b\u200b\u5176\u200b\u5bf9\u5e94\u200b\u7684\u200b\u51fd\u6570\u200b\u503c\u200b$y = f(x)$\u200b\u7684\u200b\u5206\u5e03\u200b\u3002\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u80fd\u200b\u8ba1\u7b97\u200b\u51fa\u200b\u89c2\u6d4b\u200b\u6570\u636e\u200b$\\boldsymbol Y$\u200b\u548c\u200b\u9884\u6d4b\u200b\u53d8\u91cf\u200b$y$\u200b\u4e4b\u95f4\u200b\u7684\u200b\u534f\u65b9\u5dee\u200b\uff0c\u200b\u4fbf\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u9ad8\u65af\u5206\u5e03\u200b\u7684\u200b\u6761\u4ef6\u200b\u5206\u5e03\u200b\u8ba1\u7b97\u200b\u5f97\u5230\u200b$f(x)$\u200b\u7684\u200b\u5747\u503c\u200b\u548c\u200b\u65b9\u5dee\u200b\u3002</p> <p>\u200b\u6b64\u5904\u200b\u4ee4\u200b$n = 1$\uff0c\u200b\u5373\u200b$X$\u200b\u53d6\u503c\u200b\u8303\u56f4\u200b\u4e3a\u200b\u6574\u4e2a\u200b\u5b9e\u6570\u200b\u57df\u200b\u3002</p> In\u00a0[2]: Copied! <pre>def y_posterior(x, x_obs, y_obs, kernel_func):\n    # x: (num_features)\n    # x_obs: (num_observations, num_features)\n    # y_obs: (num_observations)\n\n    sigma_21 = kernel_func(x, x_obs)  # dim: (num_observations)\n    sigma_22 = kernel_func(x, x)  # dim: scalar\n    # dim: (num_observations, num_observations)\n    sigma_11 = kernel_func(x_obs, x_obs)\n\n    inv_11 = np.linalg.inv(sigma_11 + 1e-8 * np.eye(sigma_11.shape[0]))\n    mu = np.einsum('i,ij,j-&gt;', sigma_21, inv_11, y_obs)\n    sigma = sigma_22 - np.einsum('j,jk,k-&gt;', sigma_21, inv_11, sigma_21)\n    return mu, sigma\n\ndef generate_samples(num_samples=5, target_function=None, sigma=1):\n    X = np.random.uniform(-5, 5, num_samples).reshape(-1, 1)\n    Y = np.random.normal(0, sigma, num_samples)\n    if target_function is not None:\n        Y += target_function(X)\n    return X, Y\n\ndef plot_posterior(kernel, num_samples=5, X_obs=None, Y_obs=None, ax=None, grid_size=200):\n    if X_obs is None != Y_obs is None:\n        raise ValueError('X_obs must be provided if Y_obs is provided.')\n    if (X_obs is None or Y_obs is None) and num_samples is None:\n        raise ValueError('num_samples must be provided if X_obs is provided.')\n    if X_obs is None:\n        assert Y_obs is None\n        X_obs, Y_obs = generate_samples(num_samples)\n    assert X_obs is not None and Y_obs is not None\n    if X_obs.shape[0] != Y_obs.shape[0]:\n        raise ValueError('The number of observations must be the same.')\n\n    X_min, X_max = np.min(X_obs), np.max(X_obs)\n    alpha_95 = norm.ppf(0.975)\n\n    if ax is None:\n        fig, ax = plt.subplots()\n    else:\n        fig = None\n\n    X = np.linspace(X_min, X_max, grid_size)\n    y = [y_posterior(x, X_obs, Y_obs, kernel) for x in X.reshape(-1, 1)]\n    ax.plot(X, [y[0] for y in y], linewidth=1, label='Function')\n    ax.scatter(X_obs, Y_obs, s=20, label='Observations')\n    ax.fill_between(X,\n        [y[0] - np.sqrt(y[1]) * alpha_95 for y in y],\n        [y[0] + np.sqrt(y[1]) * alpha_95 for y in y],\n        alpha=0.5, label='95% CI'\n    )\n\n    ax.set_xlabel('x')\n    ax.set_xlabel('y')\n    ax.legend()\n    if fig is not None:\n        fig.show()\n</pre> def y_posterior(x, x_obs, y_obs, kernel_func):     # x: (num_features)     # x_obs: (num_observations, num_features)     # y_obs: (num_observations)      sigma_21 = kernel_func(x, x_obs)  # dim: (num_observations)     sigma_22 = kernel_func(x, x)  # dim: scalar     # dim: (num_observations, num_observations)     sigma_11 = kernel_func(x_obs, x_obs)      inv_11 = np.linalg.inv(sigma_11 + 1e-8 * np.eye(sigma_11.shape[0]))     mu = np.einsum('i,ij,j-&gt;', sigma_21, inv_11, y_obs)     sigma = sigma_22 - np.einsum('j,jk,k-&gt;', sigma_21, inv_11, sigma_21)     return mu, sigma  def generate_samples(num_samples=5, target_function=None, sigma=1):     X = np.random.uniform(-5, 5, num_samples).reshape(-1, 1)     Y = np.random.normal(0, sigma, num_samples)     if target_function is not None:         Y += target_function(X)     return X, Y  def plot_posterior(kernel, num_samples=5, X_obs=None, Y_obs=None, ax=None, grid_size=200):     if X_obs is None != Y_obs is None:         raise ValueError('X_obs must be provided if Y_obs is provided.')     if (X_obs is None or Y_obs is None) and num_samples is None:         raise ValueError('num_samples must be provided if X_obs is provided.')     if X_obs is None:         assert Y_obs is None         X_obs, Y_obs = generate_samples(num_samples)     assert X_obs is not None and Y_obs is not None     if X_obs.shape[0] != Y_obs.shape[0]:         raise ValueError('The number of observations must be the same.')      X_min, X_max = np.min(X_obs), np.max(X_obs)     alpha_95 = norm.ppf(0.975)      if ax is None:         fig, ax = plt.subplots()     else:         fig = None      X = np.linspace(X_min, X_max, grid_size)     y = [y_posterior(x, X_obs, Y_obs, kernel) for x in X.reshape(-1, 1)]     ax.plot(X, [y[0] for y in y], linewidth=1, label='Function')     ax.scatter(X_obs, Y_obs, s=20, label='Observations')     ax.fill_between(X,         [y[0] - np.sqrt(y[1]) * alpha_95 for y in y],         [y[0] + np.sqrt(y[1]) * alpha_95 for y in y],         alpha=0.5, label='95% CI'     )      ax.set_xlabel('x')     ax.set_xlabel('y')     ax.legend()     if fig is not None:         fig.show() <p>\u200b\u9ad8\u65af\u200b\u8fc7\u7a0b\u200b\u5047\u8bbe\u200b\u66f4\u200b\u76f8\u4f3c\u200b\u7684\u200b$x$\u200b\u6709\u200b\u66f4\u200b\u76f8\u4f3c\u200b\u7684\u200b$y$\uff0c\u200b\u5373\u200b$\\text{Cov}(f(x), f(x')) = d_{x, x'}$\u3002\u200b\u7528\u4e8e\u200b\u63cf\u8ff0\u200b$x$\u200b\u4e4b\u95f4\u200b\u76f8\u4f3c\u200b\u5ea6\u200b\u7684\u200b\u51fd\u6570\u200b\u79f0\u4e3a\u200b\u6838\u200b\u51fd\u6570\u200b\uff1a$d_{x, x'} = k(x, x')$\u3002\u200b\u6838\u200b\u51fd\u6570\u200b\u7684\u200b\u6570\u503c\u200b\u8d8a\u5927\u200b\uff0c\u200b\u8bf4\u660e\u200b$x$\u200b\u548c\u200b$x'$\u200b\u8d8a\u200b\u76f8\u4f3c\u200b\uff0c\u200b\u5426\u5219\u200b\u8d8a\u200b\u4e0d\u200b\u76f8\u4f3c\u200b\u3002</p> In\u00a0[3]: Copied! <pre>import functools\n\ndef kernel_wrapper(*args, **kwargs):\n    if args:\n        _kernel = args[0]\n        if kwargs:\n            _kernel = functools.partial(_kernel, **kwargs)\n\n        @functools.wraps(_kernel)\n        def new_kernel(a, b):\n            if a.shape[-1] != b.shape[-1]:\n                raise ValueError('The last dimension of a and b must be the same.')\n\n            num_a = 1 if a.ndim == 1 else a.shape[0]\n            num_b = 1 if b.ndim == 1 else b.shape[0]\n            num_hidden = a.shape[-1]\n            target_shape = (num_a, num_b, num_hidden)\n\n            x_a = np.broadcast_to(a.reshape((num_a, 1, num_hidden)), target_shape)\n            x_b = np.broadcast_to(b.reshape((1, num_b, num_hidden)), target_shape)\n\n            result = _kernel(x_a, x_b)\n            result_shape = [\n                *([] if a.ndim == 1 else [num_a]),\n                *([] if b.ndim == 1 else [num_b])\n            ]\n            result = result.reshape(result_shape)\n            return result\n\n        return new_kernel\n    else:\n        return functools.partial(kernel_wrapper, **kwargs)\n\n# Use the following method to define a kernel function\n# @kernel_wrapper - for kernels with no hyperparameters\n# @kernel_wrapper(hyperparameter=value) - for kernels with hyperparameters\n</pre> import functools  def kernel_wrapper(*args, **kwargs):     if args:         _kernel = args[0]         if kwargs:             _kernel = functools.partial(_kernel, **kwargs)          @functools.wraps(_kernel)         def new_kernel(a, b):             if a.shape[-1] != b.shape[-1]:                 raise ValueError('The last dimension of a and b must be the same.')              num_a = 1 if a.ndim == 1 else a.shape[0]             num_b = 1 if b.ndim == 1 else b.shape[0]             num_hidden = a.shape[-1]             target_shape = (num_a, num_b, num_hidden)              x_a = np.broadcast_to(a.reshape((num_a, 1, num_hidden)), target_shape)             x_b = np.broadcast_to(b.reshape((1, num_b, num_hidden)), target_shape)              result = _kernel(x_a, x_b)             result_shape = [                 *([] if a.ndim == 1 else [num_a]),                 *([] if b.ndim == 1 else [num_b])             ]             result = result.reshape(result_shape)             return result          return new_kernel     else:         return functools.partial(kernel_wrapper, **kwargs)  # Use the following method to define a kernel function # @kernel_wrapper - for kernels with no hyperparameters # @kernel_wrapper(hyperparameter=value) - for kernels with hyperparameters <p>\u200b\u9ad8\u65af\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u5e38\u7528\u200b\u7684\u200b\u6838\u200b\u51fd\u6570\u200b\u6709\u200b\uff1a</p> <ul> <li>\u200b\u7ebf\u6027\u200b\u6838\u200b\u51fd\u6570\u200b\uff1a$k(x, x'; v) = vx^Tx'$\uff0c\u200b\u5176\u4e2d\u200b$v$\u200b\u4e3a\u200b\u8d85\u200b\u53c2\u6570\u200b\u3002</li> </ul> In\u00a0[4]: Copied! <pre>def linear_kernel(a, b, nu=1):\n    # Input: a, b: (num_a, num_b, num_hidden)\n    return np.einsum('ijk,ijk-&gt;ij', a, b) * nu\n\nplot_posterior(kernel_wrapper(nu=1)(linear_kernel), grid_size=10)\n</pre> def linear_kernel(a, b, nu=1):     # Input: a, b: (num_a, num_b, num_hidden)     return np.einsum('ijk,ijk-&gt;ij', a, b) * nu  plot_posterior(kernel_wrapper(nu=1)(linear_kernel), grid_size=10) <pre>/var/folders/wg/gb8y92_d43j60wvfw6bs_cz00000gn/T/ipykernel_96329/2131638459.py:48: RuntimeWarning: invalid value encountered in sqrt\n  [y[0] - np.sqrt(y[1]) * alpha_95 for y in y],\n/var/folders/wg/gb8y92_d43j60wvfw6bs_cz00000gn/T/ipykernel_96329/2131638459.py:49: RuntimeWarning: invalid value encountered in sqrt\n  [y[0] + np.sqrt(y[1]) * alpha_95 for y in y],\n/var/folders/wg/gb8y92_d43j60wvfw6bs_cz00000gn/T/ipykernel_96329/2131638459.py:57: UserWarning: FigureCanvasAgg is non-interactive, and thus cannot be shown\n  fig.show()\n</pre> <ul> <li>\u200b\u5e73\u65b9\u200b\u6307\u6570\u200b\u6838\u200b\u51fd\u6570\u200b\uff1a$k(x, x'; \\sigma, l) = \\sigma^2\\exp\\left(-\\frac{\\|x - x'\\|^2}{2l^2}\\right)$\uff0c$\\sigma$\u200b\u4e3a\u200b\u5e45\u5ea6\u200b\u53c2\u6570\u200b\uff0c\u200b\u63a7\u5236\u200b\u51fd\u6570\u200b\u503c\u200b\u7684\u200b\u968f\u673a\u200b\u6ce2\u52a8\u200b\u8303\u56f4\u200b\uff1b$l$\u200b\u4e3a\u200b\u957f\u5ea6\u200b\u53c2\u6570\u200b\uff0c\u200b\u63a7\u5236\u200b\u51fd\u6570\u200b\u503c\u200b\u7684\u200b\u968f\u673a\u200b\u6ce2\u52a8\u200b\u9891\u7387\u200b\u3002</li> </ul> In\u00a0[5]: Copied! <pre>def rbf_kernel(a, b, sigma, l):\n    # Input: a, b: (num_a, num_b, num_hidden)\n    return sigma ** 2 * np.exp(\n        -0.5 * np.linalg.norm(a - b, axis=-1) ** 2 / l ** 2\n    )\n\nplot_posterior(kernel_wrapper(sigma=1, l=1)(rbf_kernel), grid_size=80)\n</pre> def rbf_kernel(a, b, sigma, l):     # Input: a, b: (num_a, num_b, num_hidden)     return sigma ** 2 * np.exp(         -0.5 * np.linalg.norm(a - b, axis=-1) ** 2 / l ** 2     )  plot_posterior(kernel_wrapper(sigma=1, l=1)(rbf_kernel), grid_size=80) <pre>/var/folders/wg/gb8y92_d43j60wvfw6bs_cz00000gn/T/ipykernel_96329/2131638459.py:57: UserWarning: FigureCanvasAgg is non-interactive, and thus cannot be shown\n  fig.show()\n</pre> <ul> <li>Matern\u200b\u6838\u200b\u51fd\u6570\u200b\uff1a$k(x, x'; \\sigma, l, \\nu) = \\frac{2^{1-\\nu}}{\\Gamma(\\nu)}\\left(\\frac{\\sqrt{2\\nu}\\|x - x'\\|}{l}\\right)^\\nu K_\\nu\\left(\\frac{\\sqrt{2\\nu}\\|x - x'\\|}{l}\\right)$\uff0c\u200b\u5176\u4e2d\u200b$\\nu$\u200b\u4e3a\u200b\u8d85\u200b\u53c2\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u63a7\u5236\u200b\u51fd\u6570\u200b\u503c\u200b\u7684\u200b\u5149\u6ed1\u5ea6\u200b\uff1b$K_\\nu$\u200b\u4e3a\u200b\u4fee\u6b63\u200bBessel\u200b\u51fd\u6570\u200b\u3002</li> </ul> In\u00a0[6]: Copied! <pre>from scipy.special import kn, gamma\n\ndef matern_kernel(a, b, l, nu):\n    # Input: a, b: (num_a, num_b, num_hidden)\n    x = (np.sqrt(2 * nu) * np.linalg.norm(a - b, axis=-1) / l)\n    y = 2 ** (1 - nu) / gamma(nu) * x ** nu * kn(nu, x)\n    # Replace inf with 1\n    y = np.where(x &lt; 1e-6, 1, y)\n    return y\n\nplot_posterior(kernel_wrapper(l=1, nu=2)(matern_kernel), 4, grid_size=80)\n</pre> from scipy.special import kn, gamma  def matern_kernel(a, b, l, nu):     # Input: a, b: (num_a, num_b, num_hidden)     x = (np.sqrt(2 * nu) * np.linalg.norm(a - b, axis=-1) / l)     y = 2 ** (1 - nu) / gamma(nu) * x ** nu * kn(nu, x)     # Replace inf with 1     y = np.where(x &lt; 1e-6, 1, y)     return y  plot_posterior(kernel_wrapper(l=1, nu=2)(matern_kernel), 4, grid_size=80) <pre>/var/folders/wg/gb8y92_d43j60wvfw6bs_cz00000gn/T/ipykernel_96329/497016935.py:6: RuntimeWarning: invalid value encountered in multiply\n  y = 2 ** (1 - nu) / gamma(nu) * x ** nu * kn(nu, x)\n/var/folders/wg/gb8y92_d43j60wvfw6bs_cz00000gn/T/ipykernel_96329/2131638459.py:57: UserWarning: FigureCanvasAgg is non-interactive, and thus cannot be shown\n  fig.show()\n</pre> <ul> <li>\u200b\u5468\u671f\u200b\u6838\u200b\u51fd\u6570\u200b\uff1a$k(x, x'; \\sigma, l, p) = \\sigma^2\\exp\\left(-\\frac{2\\sin^2(\\pi\\|x - x'\\|/p)}{l^2}\\right)$\uff0c\u200b\u5176\u4e2d\u200b$p$\u200b\u4e3a\u200b\u5468\u671f\u200b\u53c2\u6570\u200b\uff0c$l$\u200b\u4e3a\u200b\u957f\u5ea6\u200b\u53c2\u6570\u200b\uff0c$\\sigma$\u200b\u4e3a\u200b\u5e45\u5ea6\u200b\u53c2\u6570\u200b\u3002</li> </ul> In\u00a0[7]: Copied! <pre>def periodic_kernel(a, b, sigma, l, p):\n    # Input: a, b: (num_a, num_b, num_hidden)\n    return sigma ** 2 * np.exp(\n        -2 * np.sin(np.pi * np.linalg.norm(a - b, axis=-1) / p) ** 2 / l ** 2\n    )\n\nplot_posterior(kernel_wrapper(sigma=1, l=1, p=2)(periodic_kernel), 4, grid_size=150)\n</pre> def periodic_kernel(a, b, sigma, l, p):     # Input: a, b: (num_a, num_b, num_hidden)     return sigma ** 2 * np.exp(         -2 * np.sin(np.pi * np.linalg.norm(a - b, axis=-1) / p) ** 2 / l ** 2     )  plot_posterior(kernel_wrapper(sigma=1, l=1, p=2)(periodic_kernel), 4, grid_size=150) <pre>/var/folders/wg/gb8y92_d43j60wvfw6bs_cz00000gn/T/ipykernel_96329/2131638459.py:57: UserWarning: FigureCanvasAgg is non-interactive, and thus cannot be shown\n  fig.show()\n</pre> <ul> <li><p>\u200b\u566a\u58f0\u200b\u6838\u200b\u51fd\u6570\u200b\uff1a$k(x, x'; \\sigma, l) = \\sigma^2\\delta_{x, x'}$\uff0c\u200b\u5176\u4e2d\u200b$\\delta_{x, x'}$\u200b\u4e3a\u200bKronecker delta\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u6355\u83b7\u200b\u89c2\u6d4b\u200b\u6570\u636e\u200b\u7684\u200b\u566a\u58f0\u200b\u3002</p> <p>$$   \\delta(x, x') = \\begin{cases}   1, &amp; x = x' \\\\   0, &amp; x \\neq x'   \\end{cases}   $$</p> </li> </ul> In\u00a0[8]: Copied! <pre>def noise_kernel(a, b, sigma):\n    return sigma ** 2 * np.all((a == b), axis=-1)\n\nplot_posterior(kernel_wrapper(sigma=1)(noise_kernel), 5)\n</pre> def noise_kernel(a, b, sigma):     return sigma ** 2 * np.all((a == b), axis=-1)  plot_posterior(kernel_wrapper(sigma=1)(noise_kernel), 5) <pre>/var/folders/wg/gb8y92_d43j60wvfw6bs_cz00000gn/T/ipykernel_96329/2131638459.py:57: UserWarning: FigureCanvasAgg is non-interactive, and thus cannot be shown\n  fig.show()\n</pre> <p>\u200b\u5728\u200b\u5b9e\u9645\u200b\u5e94\u7528\u200b\u4e2d\u200b\uff0c\u200b\u9700\u8981\u200b\u6839\u636e\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u5df2\u77e5\u200b\u7684\u200b\u7279\u6027\u200b\uff0c\u200b\u8bbe\u8ba1\u200b\u5408\u9002\u200b\u7684\u200b\u6838\u200b\u51fd\u6570\u200b\uff1a\u200b\u5982\u679c\u200b\u51fd\u6570\u200b\u4e2d\u200b\u5305\u542b\u200b\u5468\u671f\u6027\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u5468\u671f\u200b\u6838\u200b\u51fd\u6570\u200b\uff1b\u200b\u5982\u679c\u200b\u51fd\u6570\u200b\u503c\u200b\u5728\u200b\u76f8\u4f3c\u200b\u7684\u200b$x$\u200b\u4e4b\u95f4\u200b\u53d8\u5316\u200b\u8f83\u200b\u5c0f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u5e73\u65b9\u200b\u6307\u6570\u200b\u6838\u200b\u51fd\u6570\u200b\u3002</p> <p>\u200b\u5982\u200b\u5bf9\u4e8e\u200b\u51fd\u6570\u200b</p> <p>$$ f(x) = \\sin(\\pi x) + 0.3 x^2 + \\varepsilon $$</p> <p>\u200b\u9700\u8981\u200b\u540c\u65f6\u200b\u5f15\u5165\u200b\u5468\u671f\u200b\u6838\u200b\u51fd\u6570\u200b\u548c\u200b\u5e73\u65b9\u200b\u6307\u6570\u200b\u6838\u200b\u51fd\u6570\u200b\uff0c\u200b\u624d\u80fd\u200b\u8f83\u200b\u597d\u200b\u5730\u200b\u9884\u6d4b\u200b\u51fd\u6570\u200b\u503c\u200b\u3002</p> In\u00a0[9]: Copied! <pre>def target_function(X):\n    x = X.reshape(-1)\n    return np.sin(x * 2 * 3.14 / 2) + x ** 2 * 0.3\n\n\ndef plot_function(func, ax, X_min=-5, X_max=5, grid_size=200, **kwargs):\n    X = np.linspace(X_min, X_max, grid_size)\n    Y = func(X.reshape(-1, 1))\n    ax.plot(X, Y, **kwargs)\n\nfig, ax = plt.subplots(figsize=(4, 4))\nplot_function(target_function, ax, grid_size=100)\nax.set_xlabel('x')\nax.set_ylabel('y')\nax.set_title('Target Function')\nfig.show()\n</pre> def target_function(X):     x = X.reshape(-1)     return np.sin(x * 2 * 3.14 / 2) + x ** 2 * 0.3   def plot_function(func, ax, X_min=-5, X_max=5, grid_size=200, **kwargs):     X = np.linspace(X_min, X_max, grid_size)     Y = func(X.reshape(-1, 1))     ax.plot(X, Y, **kwargs)  fig, ax = plt.subplots(figsize=(4, 4)) plot_function(target_function, ax, grid_size=100) ax.set_xlabel('x') ax.set_ylabel('y') ax.set_title('Target Function') fig.show() <pre>/var/folders/wg/gb8y92_d43j60wvfw6bs_cz00000gn/T/ipykernel_96329/4237481582.py:16: UserWarning: FigureCanvasAgg is non-interactive, and thus cannot be shown\n  fig.show()\n</pre> In\u00a0[10]: Copied! <pre>periodic = kernel_wrapper(sigma=1, l=1, p=2)(periodic_kernel)\nrbf = kernel_wrapper(sigma=1, l=1)(rbf_kernel)\nnoise = kernel_wrapper(sigma=0.1)(noise_kernel)\n\ndef added(a, b):\n    return periodic(a, b) + rbf(a, b) + noise(a, b)\n\nkernels = {\n    'Periodic': periodic,\n    'RBF': rbf,\n    'Hybrid': added\n}\n\nX_obs, Y_obs = generate_samples(10, target_function, sigma=0.5)\nX_min, X_max = np.min(X_obs), np.max(X_obs)\n\nfig, axes = plt.subplots(1, 3, figsize=(10, 3))\nfor ax, (name, kernel) in zip(axes, kernels.items()):\n    plot_posterior(kernel, X_obs=X_obs, Y_obs=Y_obs, ax=ax, grid_size=150)\n    plot_function(target_function, ax, X_min, X_max, color='red', label='Target Function', grid_size=100)\n    ax.set_title(f'{name} Kernel')\n    ax.get_legend().remove()\nfig.show()\n</pre> periodic = kernel_wrapper(sigma=1, l=1, p=2)(periodic_kernel) rbf = kernel_wrapper(sigma=1, l=1)(rbf_kernel) noise = kernel_wrapper(sigma=0.1)(noise_kernel)  def added(a, b):     return periodic(a, b) + rbf(a, b) + noise(a, b)  kernels = {     'Periodic': periodic,     'RBF': rbf,     'Hybrid': added }  X_obs, Y_obs = generate_samples(10, target_function, sigma=0.5) X_min, X_max = np.min(X_obs), np.max(X_obs)  fig, axes = plt.subplots(1, 3, figsize=(10, 3)) for ax, (name, kernel) in zip(axes, kernels.items()):     plot_posterior(kernel, X_obs=X_obs, Y_obs=Y_obs, ax=ax, grid_size=150)     plot_function(target_function, ax, X_min, X_max, color='red', label='Target Function', grid_size=100)     ax.set_title(f'{name} Kernel')     ax.get_legend().remove() fig.show() <pre>/var/folders/wg/gb8y92_d43j60wvfw6bs_cz00000gn/T/ipykernel_96329/2131638459.py:48: RuntimeWarning: invalid value encountered in sqrt\n  [y[0] - np.sqrt(y[1]) * alpha_95 for y in y],\n/var/folders/wg/gb8y92_d43j60wvfw6bs_cz00000gn/T/ipykernel_96329/2131638459.py:49: RuntimeWarning: invalid value encountered in sqrt\n  [y[0] + np.sqrt(y[1]) * alpha_95 for y in y],\n/var/folders/wg/gb8y92_d43j60wvfw6bs_cz00000gn/T/ipykernel_96329/1232705018.py:23: UserWarning: FigureCanvasAgg is non-interactive, and thus cannot be shown\n  fig.show()\n</pre> <p>\u200b\u9ad8\u65af\u200b\u8fc7\u7a0b\u200b\u4e0d\u9002\u200b\u7528\u4e8e\u200b\u4ee5\u4e0b\u200b\u573a\u666f\u200b\uff1a</p> <ul> <li>\u200b\u6570\u636e\u91cf\u200b\u8f83\u5927\u200b\u65f6\u200b\uff0c\u200b\u7531\u4e8e\u200b\u8ba1\u7b97\u200b$m$\u200b\u7ef4\u200b\u77e9\u9635\u200b\u9006\u200b\u7684\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b$O(m^3)$\uff0c\u200b\u8ba1\u7b97\u200b\u590d\u6742\u5ea6\u200b\u8f83\u200b\u9ad8\u200b\u3002</li> <li>\u200b\u6570\u636e\u200b\u7ef4\u5ea6\u200b\u8f83\u200b\u9ad8\u65f6\u200b\uff0c\u200b\u7ef4\u5ea6\u200b\u707e\u96be\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u6838\u200b\u51fd\u6570\u200b\u5bb9\u6613\u200b\u9000\u5316\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u6355\u83b7\u200b\u6570\u636e\u200b\u4e4b\u95f4\u200b\u7684\u200b\u76f8\u4f3c\u6027\u200b\u3002</li> <li>\u200b\u9ad8\u65af\u200b\u8fc7\u7a0b\u200b\u7684\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u662f\u200b\u8fde\u7eed\u200b\u7684\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u76f4\u63a5\u200b\u5904\u7406\u200b\u8fde\u7eed\u200b\u6570\u636e\u200b\u3002</li> </ul>"},{"location":"coding/machine-learning/gaussian-process/","title":"\u9ad8\u65af\u200b\u8fc7\u7a0b\u200b\u00b6","text":""},{"location":"coding/machine-learning/linear-models/","title":"\u7ebf\u6027\u200b\u6a21\u578b","text":"In\u00a0[\u00a0]: Copied! <pre>import numpy as np\nimport pandas as pd\n\ndf = pd.read_csv('data/melon3.0a.csv')\nX_rcol, y_rcol = df.columns[1:-2], df.columns[-2] # columns used for regression\nX_ccol, y_ccol = df.columns[1:-1], df.columns[-1] # columns used for classification\nvalue_map = {\n    '\u200b\u8272\u6cfd\u200b': {'\u200b\u6d45\u767d\u200b': 0, '\u200b\u9752\u7eff\u200b': 1, '\u200b\u4e4c\u9ed1\u200b': 2},\n    '\u200b\u6839\u8482\u200b': {'\u200b\u8737\u7f29\u200b': 0, '\u200b\u7a0d\u200b\u8737\u200b': 1, '\u200b\u786c\u633a\u200b': 2},\n    '\u200b\u6572\u58f0\u200b': {'\u200b\u6c89\u95f7\u200b': 0, '\u200b\u6d4a\u54cd\u200b': 1, '\u200b\u6e05\u8106\u200b': 2},\n    '\u200b\u7eb9\u7406\u200b': {'\u200b\u6a21\u7cca\u200b': 0, '\u200b\u7a0d\u7cca\u200b': 1, '\u200b\u6e05\u6670\u200b': 2},\n    '\u200b\u8110\u90e8\u200b': {'\u200b\u51f9\u9677\u200b': 0, '\u200b\u7a0d\u200b\u51f9\u200b': 1, '\u200b\u5e73\u5766\u200b': 2},\n    '\u200b\u89e6\u611f\u200b': {'\u200b\u786c\u6ed1\u200b': 0, '\u200b\u8f6f\u200b\u7c98\u200b': 1},\n    '\u200b\u597d\u74dc\u200b': {'\u200b\u662f\u200b': 1, '\u200b\u5426\u200b': 0},\n}\nfor col in value_map:\n    df[col] = df[col].map(value_map[col])\n\nX = np.concatenate([df[X_rcol].values, np.ones((df.shape[0], 1))], axis=1)\ny = df[y_rcol].values.reshape(-1, 1)\n\ndef linear_regression(X, y):\n    return np.linalg.inv(X.T @ X) @ X.T @ y\n\nlinear_regression(X, y).T\n</pre> import numpy as np import pandas as pd  df = pd.read_csv('data/melon3.0a.csv') X_rcol, y_rcol = df.columns[1:-2], df.columns[-2] # columns used for regression X_ccol, y_ccol = df.columns[1:-1], df.columns[-1] # columns used for classification value_map = {     '\u200b\u8272\u6cfd\u200b': {'\u200b\u6d45\u767d\u200b': 0, '\u200b\u9752\u7eff\u200b': 1, '\u200b\u4e4c\u9ed1\u200b': 2},     '\u200b\u6839\u8482\u200b': {'\u200b\u8737\u7f29\u200b': 0, '\u200b\u7a0d\u200b\u8737\u200b': 1, '\u200b\u786c\u633a\u200b': 2},     '\u200b\u6572\u58f0\u200b': {'\u200b\u6c89\u95f7\u200b': 0, '\u200b\u6d4a\u54cd\u200b': 1, '\u200b\u6e05\u8106\u200b': 2},     '\u200b\u7eb9\u7406\u200b': {'\u200b\u6a21\u7cca\u200b': 0, '\u200b\u7a0d\u7cca\u200b': 1, '\u200b\u6e05\u6670\u200b': 2},     '\u200b\u8110\u90e8\u200b': {'\u200b\u51f9\u9677\u200b': 0, '\u200b\u7a0d\u200b\u51f9\u200b': 1, '\u200b\u5e73\u5766\u200b': 2},     '\u200b\u89e6\u611f\u200b': {'\u200b\u786c\u6ed1\u200b': 0, '\u200b\u8f6f\u200b\u7c98\u200b': 1},     '\u200b\u597d\u74dc\u200b': {'\u200b\u662f\u200b': 1, '\u200b\u5426\u200b': 0}, } for col in value_map:     df[col] = df[col].map(value_map[col])  X = np.concatenate([df[X_rcol].values, np.ones((df.shape[0], 1))], axis=1) y = df[y_rcol].values.reshape(-1, 1)  def linear_regression(X, y):     return np.linalg.inv(X.T @ X) @ X.T @ y  linear_regression(X, y).T <p>\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u4e3a\u5747\u65b9\u200b\u8bef\u5dee\u200b</p> In\u00a0[\u00a0]: Copied! <pre>def mse_loss(X, y, w):\n    return np.mean((X @ w - y) ** 2)\n\nmse_loss(X, y, linear_regression(X, y))\n</pre> def mse_loss(X, y, w):     return np.mean((X @ w - y) ** 2)  mse_loss(X, y, linear_regression(X, y)) <p>\u200b\u5f53\u200b\u6837\u672c\u200b\u77e9\u9635\u200b\u975e\u6ee1\u200b\u79e9\u65f6\u200b\uff0c\u200b\u5b58\u5728\u200b\u591a\u4e2a\u200b\u6ee1\u8db3\u200b\u8bad\u7ec3\u200b\u96c6\u200b\u7684\u200b\u6a21\u578b\u200b\uff0c\u200b\u6b64\u65f6\u200b\u53ef\u4ee5\u200b\u5728\u200b\u4f18\u5316\u200b\u76ee\u6807\u200b\u4e2d\u200b\u52a0\u5165\u200b\u6b63\u5219\u200b\u5316\u9879\u200b\uff0c\u200b\u5982\u200bL2-norm\u200b\u5373\u200b\u52a0\u5165\u200b\u6743\u91cd\u200b\u7684\u200b\u5e73\u65b9\u200b\u4e4b\u200b\u548c\u200b\u3002\u200b\u7136\u540e\u200b\u4f7f\u7528\u200b\u68af\u5ea6\u200b\u4e0b\u964d\u200b\u7b49\u200b\u6570\u503c\u200b\u65b9\u5f0f\u200b\u8fdb\u884c\u200b\u8ba1\u7b97\u200b\u3002</p> In\u00a0[\u00a0]: Copied! <pre>class SGD():\n    def __init__(self, d, lr=0.01, epochs=1000):\n        self.d = d\n        self.lr = lr\n        self.epochs = epochs\n\n    def __call__(self, X, y):\n        w = np.random.normal(0, 1, size=(X.shape[1], 1))\n        for _ in range(self.epochs):\n            w -= self.lr * self.d(X, y, w)\n        return w\n\noptim_l2 = SGD(lambda X, y, w: X.T @ (X @ w - y) + 0.1 * w)\n\nw = optim_l2(X, y)\nprint(w.T, mse_loss(X, y, w))\n</pre> class SGD():     def __init__(self, d, lr=0.01, epochs=1000):         self.d = d         self.lr = lr         self.epochs = epochs      def __call__(self, X, y):         w = np.random.normal(0, 1, size=(X.shape[1], 1))         for _ in range(self.epochs):             w -= self.lr * self.d(X, y, w)         return w  optim_l2 = SGD(lambda X, y, w: X.T @ (X @ w - y) + 0.1 * w)  w = optim_l2(X, y) print(w.T, mse_loss(X, y, w)) <p>\u200b\u5bf9\u7387\u200b\u56de\u5f52\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u7ebf\u6027\u200b\u6a21\u578b\u200b\u5e94\u7528\u200b\u5230\u200b\u4e8c\u200b\u5206\u7c7b\u200b\u95ee\u9898\u200b\u4e0a\u200b\u3002\u200b\u5bf9\u7387\u200b\u56de\u5f52\u200b\u9700\u8981\u200b\u7528\u5230\u200blogit\u200b\u51fd\u6570\u200b\u5c06\u200b\u8fde\u7eed\u200b\u7684\u200b\u56de\u5f52\u200b\u503c\u200b\u6620\u5c04\u200b\u5230\u200b $(0, 1)$ \u200b\u4e0a\u200b</p> <p>$$ f(x) = \\frac{1}{1 + e^{-x}} $$</p> In\u00a0[\u00a0]: Copied! <pre>X = df[X_ccol].values\ny = df[y_ccol].values.reshape(-1, 1)\n\ndef sigmoid(x):\n    return 1 / (1 + np.exp(-x))\n\ndef precision(X, y, w):\n    return np.mean((sigmoid(X @ w) &gt; 0.5) == y)\n</pre> X = df[X_ccol].values y = df[y_ccol].values.reshape(-1, 1)  def sigmoid(x):     return 1 / (1 + np.exp(-x))  def precision(X, y, w):     return np.mean((sigmoid(X @ w) &gt; 0.5) == y) <p>\u200b\u4f7f\u7528\u200b\u6781\u5927\u200b\u4f3c\u7136\u6cd5\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u5bf9\u7387\u200b\u56de\u5f52\u200b\u7684\u200b\u4f18\u5316\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b</p> <p>$$ l(\\boldsymbol w) = \\sum_{i=1}^m \\left(-\\boldsymbol y_i\\boldsymbol \\beta^\\top \\boldsymbol x_i + \\ln \\left(1 + e^{\\boldsymbol \\beta^\\top \\boldsymbol x_i}\\right) \\right) $$</p> In\u00a0[\u00a0]: Copied! <pre>optim_logit = SGD(lambda X, y, w: X.T @ (sigmoid(X @ w) - y))\n\nw = optim_logit(X, y)\nprint(w.T, precision(X, y, w))\n</pre> optim_logit = SGD(lambda X, y, w: X.T @ (sigmoid(X @ w) - y))  w = optim_logit(X, y) print(w.T, precision(X, y, w)) In\u00a0[\u00a0]: Copied! <pre>def cov(X, a, b):\n    return np.mean((X[:, a] - np.mean(X[:, a])) * (X[:, b] - np.mean(X[:, b])))\n\ndef cov_matrix(X):\n    return np.array([\n        [\n            cov(X, i, j)\n            for i in range(X.shape[1])\n        ]\n        for j in range(X.shape[1])\n    ])\n\nsw = cov_matrix(X[y[:, 0] == 0]) + cov_matrix(X[y[:, 0] == 1])\nmu0, mu1 = np.mean(X[y[:, 0] == 0], axis=0), np.mean(X[y[:, 0] == 1], axis=0)\nw = np.linalg.inv(sw) @ (mu0 - mu1).reshape(-1, 1)\nc0, c1 = w.T @ mu0, w.T @ mu1\n\ndef precision(X, y, w):\n    return np.mean((X @ w &lt; (c0 + c1) / 2) == y)\n\nprecision(X, y, w)\n</pre> def cov(X, a, b):     return np.mean((X[:, a] - np.mean(X[:, a])) * (X[:, b] - np.mean(X[:, b])))  def cov_matrix(X):     return np.array([         [             cov(X, i, j)             for i in range(X.shape[1])         ]         for j in range(X.shape[1])     ])  sw = cov_matrix(X[y[:, 0] == 0]) + cov_matrix(X[y[:, 0] == 1]) mu0, mu1 = np.mean(X[y[:, 0] == 0], axis=0), np.mean(X[y[:, 0] == 1], axis=0) w = np.linalg.inv(sw) @ (mu0 - mu1).reshape(-1, 1) c0, c1 = w.T @ mu0, w.T @ mu1  def precision(X, y, w):     return np.mean((X @ w &lt; (c0 + c1) / 2) == y)  precision(X, y, w)"},{"location":"coding/machine-learning/linear-models/","title":"\u7ebf\u6027\u200b\u6a21\u578b\u200b\u00b6","text":"<p>\u200b\u4ee5\u4e0b\u200b\u4f7f\u7528\u200bPython\u200b\u5b9e\u73b0\u200b\u57fa\u4e8e\u200b\u7ebf\u6027\u5173\u7cfb\u200b\u7684\u200b\u5404\u79cd\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u6a21\u578b\u200b</p>"},{"location":"coding/machine-learning/linear-models/","title":"\u591a\u5143\u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\u00b6","text":"<p>\u200b\u591a\u5143\u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\u7684\u200b\u4e00\u822c\u200b\u5f62\u5f0f\u200b\u5982\u4e0b\u200b\uff1a</p> <p>$$ \\hat{\\boldsymbol y} = f(\\boldsymbol x) = \\boldsymbol w^\\top \\boldsymbol x + b $$</p> <p>\u200b\u5f53\u200b\u6837\u672c\u200b\u77e9\u9635\u200b$\\boldsymbol X$\u200b\u6ee1\u200b\u79e9\u65f6\u200b\uff0c\u200b\u6700\u4f18\u200b\u89e3\u4e3a\u200b</p> <p>$$ \\newcommand{\\bmX}{\\boldsymbol X} \\hat{\\boldsymbol w}^* = (\\bmX^\\top\\bmX)^{-1}\\bmX^\\top \\boldsymbol y $$</p>"},{"location":"coding/machine-learning/linear-models/#lda","title":"LDA\u00b6","text":"<p>LDA\u200b\u662f\u200b\u7ebf\u6027\u200b\u5224\u522b\u5206\u6790\u200b\u7684\u200b\u7b80\u79f0\u200b\uff0c\u200b\u5c5e\u4e8e\u200b\u5206\u7c7b\u200b\u7b97\u6cd5\u200b\u3002\u200b\u8be5\u200b\u7b97\u6cd5\u200b\u7684\u200b\u6838\u5fc3\u200b\u601d\u8def\u200b\u4e3a\u200b\u5c06\u200b\u6837\u672c\u200b\u70b9\u200b\u6295\u5f71\u200b\u5230\u200b $n$ \u200b\u7ef4\u7a7a\u95f4\u200b\u7684\u200b\u5e73\u9762\u200b\u4e0a\u200b\uff0c\u200b\u901a\u8fc7\u200b\u9009\u62e9\u200b\u5e73\u9762\u200b\uff0c\u200b\u6700\u5c0f\u5316\u200b\u540c\u4e00\u200b\u7c7b\u522b\u200b\u5185\u200b\u6837\u672c\u200b\u70b9\u200b\u6295\u5f71\u200b\u7684\u200b\u8ddd\u79bb\u200b\uff0c\u200b\u540c\u65f6\u200b\u6700\u5927\u5316\u200b\u4e0d\u540c\u200b\u7c7b\u522b\u200b\u6837\u672c\u200b\u70b9\u200b\u6295\u5f71\u200b\u7684\u200b\u8ddd\u79bb\u200b\u3002</p>"},{"location":"coding/machine-learning/llama-2/","title":"Llama-2","text":"<p>\u200b\u5728\u200b\u672c\u8282\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200bLlama-2\u200b\u6a21\u578b\u200b\u3002</p> In\u00a0[1]: Copied! <pre>import functools\n\nimport torch\nimport transformers\n</pre> import functools  import torch import transformers <p>Llama\u200b\u4f7f\u7528\u200bRoPE\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u200b\u3002\u200b\u6ce8\u610f\u200b\u6b64\u5904\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u200b\u548c\u200bRoFormer\u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u7684\u200b\u4e0d\u540c\u200b\uff0cRoFormer\u200b\u5c06\u200b\u76f8\u90bb\u200b\u7684\u200b\u4e24\u4e2a\u200b\u5143\u7d20\u200b\u5206\u4e3a\u200b\u4e00\u7ec4\u200b\u8fdb\u884c\u200b\u65cb\u8f6c\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u800c\u200bLlamaRope\u200b\u662f\u200b\u5c06\u200b\u5411\u91cf\u200b\u5206\u4e3a\u200b\u524d\u540e\u200b\u4e24\u6bb5\u200b\uff0c\u200b\u524d\u540e\u200b\u4e24\u6bb5\u200b\u76f8\u540c\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u5143\u7d20\u200b\u5206\u4e3a\u200b\u4e00\u7ec4\u200b\u8fdb\u884c\u200b\u65cb\u8f6c\u200b\u64cd\u4f5c\u200b\u3002</p> In\u00a0[2]: Copied! <pre>class RoPE(torch.nn.Module):\n    def __init__(self, d_model: int, theta: int | float = 10000):\n        super(RoPE, self).__init__()\n        self.d_model = d_model\n        self.theta = theta ** -(torch.arange(0, d_model, 2) / d_model)\n\n    @functools.lru_cache(maxsize=None)\n    def _forward_l(self, L: int) -&gt; torch.Tensor:\n        # Use lru_cache to avoid redundant computation for the same L\n\n        D = self.d_model\n        pos = torch.einsum(\n            'l,d-&gt;ld',\n            torch.arange(L), self.theta\n        )  # [L, D / 2]\n\n        # 0 paired with d // 2, 1 paired with d // 2 + 1, ...\n        cos = torch.cos(pos).repeat([1, 2])\n        sin = torch.sin(pos)\n\n        # Here we do not use efficient method, but construct a rotary matrix\n        result = torch.zeros(L, D, D)\n        result = torch.diagonal_scatter(result, cos, dim1=1, dim2=2)\n        result = torch.diagonal_scatter(result, sin, dim1=1, dim2=2, offset=-D // 2)\n        result = torch.diagonal_scatter(result, -sin, dim1=1, dim2=2, offset=D // 2)\n        return result\n\n    def forward(self, x: torch.Tensor) -&gt; torch.Tensor:\n        # x: [N, L, H, D]\n        _, L, _, D = x.size()\n        rot_matrix = self._forward_l(L).to(x.device)  # [L, D, D]\n        return torch.einsum('lde,nlhe-&gt;nlhd', rot_matrix, x)\n</pre> class RoPE(torch.nn.Module):     def __init__(self, d_model: int, theta: int | float = 10000):         super(RoPE, self).__init__()         self.d_model = d_model         self.theta = theta ** -(torch.arange(0, d_model, 2) / d_model)      @functools.lru_cache(maxsize=None)     def _forward_l(self, L: int) -&gt; torch.Tensor:         # Use lru_cache to avoid redundant computation for the same L          D = self.d_model         pos = torch.einsum(             'l,d-&gt;ld',             torch.arange(L), self.theta         )  # [L, D / 2]          # 0 paired with d // 2, 1 paired with d // 2 + 1, ...         cos = torch.cos(pos).repeat([1, 2])         sin = torch.sin(pos)          # Here we do not use efficient method, but construct a rotary matrix         result = torch.zeros(L, D, D)         result = torch.diagonal_scatter(result, cos, dim1=1, dim2=2)         result = torch.diagonal_scatter(result, sin, dim1=1, dim2=2, offset=-D // 2)         result = torch.diagonal_scatter(result, -sin, dim1=1, dim2=2, offset=D // 2)         return result      def forward(self, x: torch.Tensor) -&gt; torch.Tensor:         # x: [N, L, H, D]         _, L, _, D = x.size()         rot_matrix = self._forward_l(L).to(x.device)  # [L, D, D]         return torch.einsum('lde,nlhe-&gt;nlhd', rot_matrix, x) <p>RoPE\u200b\u662f\u200b\u5728\u200b\u591a\u5934\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u5206\u5934\u200b\u540e\u200b\u624d\u200b\u8fdb\u884c\u200b\u8ba1\u7b97\u200b\u3002\u200b\u5e76\u4e14\u200b\uff0cLlama\u200b\u7684\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u4e2d\u200b\u4e0d\u200b\u5305\u542b\u200b\u504f\u7f6e\u200b\u3002</p> In\u00a0[3]: Copied! <pre>class MultiHeadAttention(torch.nn.Module):\n    def __init__(self, d_model: int, num_heads: int, rope: RoPE):\n        super(MultiHeadAttention, self).__init__()\n        self.d_model = d_model\n        self.num_heads = num_heads\n        if d_model % num_heads != 0:\n            raise ValueError(\"d_model must be divisible by num_heads\")\n\n        self.d_k = d_model // num_heads\n        self.sqrt_d_k = self.d_k ** 0.5\n        self.rope = rope\n\n        self.W_Q = torch.nn.Linear(d_model, d_model, bias=False)\n        self.W_K = torch.nn.Linear(d_model, d_model, bias=False)\n        self.W_V = torch.nn.Linear(d_model, d_model, bias=False)\n        self.W_O = torch.nn.Linear(d_model, d_model, bias=False)\n\n    def forward(\n        self, x_q: torch.Tensor, x_k: torch.Tensor, x_v: torch.Tensor,\n        padding_mask: torch.Tensor | None = None,\n        attention_mask: torch.Tensor | None = None\n    ) -&gt; torch.Tensor:\n        # x_q: (N, L_Q, D), x_k: (N, L_KV, D), x_v: (N, L_KV, D)\n        # padding_mask: (N, L_KV), attention_mask: (L_Q, L_KV)\n        N, L_Q, D = x_q.size()\n        _, L_KV, _ = x_k.size()\n        Q = self.rope(self.W_Q(x_q).reshape(N, L_Q, self.num_heads, self.d_k))\n        K = self.rope(self.W_K(x_k).reshape(N, L_KV, self.num_heads, self.d_k))\n        V = self.W_V(x_v).reshape(N, L_KV, self.num_heads, self.d_k)\n\n        score = torch.einsum('nihd,njhd-&gt;nijh', Q, K) / self.sqrt_d_k\n        # score: (N, L_Q, L_KV, num_heads)\n        # Apply attention mask\n        if attention_mask is not None:\n            score = score.masked_fill(\n                attention_mask.reshape(1, L_Q, L_KV, 1) == 0, float('-inf')\n            )\n        # Apply padding mask\n        if padding_mask is not None:\n            score = score.masked_fill(\n                padding_mask.reshape(N, 1, L_KV, 1) == 0, float('-inf')\n            )\n        score = torch.nn.functional.softmax(score, dim=2)\n        value = torch.einsum(\n            'nijh,njhd-&gt;nihd', score, V\n        ).reshape(N, L_Q, self.d_model)\n        return self.W_O(value)\n\n\nclass MultiHeadSelfAttention(MultiHeadAttention):\n    def __init__(self, d_model: int, num_heads: int, rope=RoPE):\n        super(MultiHeadSelfAttention, self).__init__(d_model, num_heads, rope)\n\n    def forward(\n        self, x: torch.Tensor,\n        padding_mask: torch.Tensor | None = None,\n        attention_mask: torch.Tensor | None = None\n    ) -&gt; torch.Tensor:\n        return super().forward(x, x, x, padding_mask, attention_mask)\n</pre> class MultiHeadAttention(torch.nn.Module):     def __init__(self, d_model: int, num_heads: int, rope: RoPE):         super(MultiHeadAttention, self).__init__()         self.d_model = d_model         self.num_heads = num_heads         if d_model % num_heads != 0:             raise ValueError(\"d_model must be divisible by num_heads\")          self.d_k = d_model // num_heads         self.sqrt_d_k = self.d_k ** 0.5         self.rope = rope          self.W_Q = torch.nn.Linear(d_model, d_model, bias=False)         self.W_K = torch.nn.Linear(d_model, d_model, bias=False)         self.W_V = torch.nn.Linear(d_model, d_model, bias=False)         self.W_O = torch.nn.Linear(d_model, d_model, bias=False)      def forward(         self, x_q: torch.Tensor, x_k: torch.Tensor, x_v: torch.Tensor,         padding_mask: torch.Tensor | None = None,         attention_mask: torch.Tensor | None = None     ) -&gt; torch.Tensor:         # x_q: (N, L_Q, D), x_k: (N, L_KV, D), x_v: (N, L_KV, D)         # padding_mask: (N, L_KV), attention_mask: (L_Q, L_KV)         N, L_Q, D = x_q.size()         _, L_KV, _ = x_k.size()         Q = self.rope(self.W_Q(x_q).reshape(N, L_Q, self.num_heads, self.d_k))         K = self.rope(self.W_K(x_k).reshape(N, L_KV, self.num_heads, self.d_k))         V = self.W_V(x_v).reshape(N, L_KV, self.num_heads, self.d_k)          score = torch.einsum('nihd,njhd-&gt;nijh', Q, K) / self.sqrt_d_k         # score: (N, L_Q, L_KV, num_heads)         # Apply attention mask         if attention_mask is not None:             score = score.masked_fill(                 attention_mask.reshape(1, L_Q, L_KV, 1) == 0, float('-inf')             )         # Apply padding mask         if padding_mask is not None:             score = score.masked_fill(                 padding_mask.reshape(N, 1, L_KV, 1) == 0, float('-inf')             )         score = torch.nn.functional.softmax(score, dim=2)         value = torch.einsum(             'nijh,njhd-&gt;nihd', score, V         ).reshape(N, L_Q, self.d_model)         return self.W_O(value)   class MultiHeadSelfAttention(MultiHeadAttention):     def __init__(self, d_model: int, num_heads: int, rope=RoPE):         super(MultiHeadSelfAttention, self).__init__(d_model, num_heads, rope)      def forward(         self, x: torch.Tensor,         padding_mask: torch.Tensor | None = None,         attention_mask: torch.Tensor | None = None     ) -&gt; torch.Tensor:         return super().forward(x, x, x, padding_mask, attention_mask) <p>\u200b\u5728\u200b\u524d\u9988\u200b\u7f51\u7edc\u200b\u90e8\u5206\u200b\uff0cLlama\u200b\u4f7f\u7528\u200bSwiglu\u200b\u4f5c\u4e3a\u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b\u3002\u200b\u6b64\u200b\u90e8\u5206\u200b\u540c\u6837\u200b\u4e0d\u200b\u4f7f\u7528\u200b\u504f\u7f6e\u200b</p> In\u00a0[4]: Copied! <pre>class FFN(torch.nn.Module):\n    def __init__(self, input_dim: int, hidden_dim: int):\n        super(FFN, self).__init__()\n        self.fc1 = torch.nn.Linear(input_dim, hidden_dim, bias=False)\n        self.fc2 = torch.nn.Linear(hidden_dim, input_dim, bias=False)\n        self.gate = torch.nn.Linear(input_dim, hidden_dim, bias=False)\n        self.act = torch.nn.SiLU()\n\n    def forward(self, x):\n        return self.fc2(self.act(self.gate(x)) * self.fc1(x))\n</pre> class FFN(torch.nn.Module):     def __init__(self, input_dim: int, hidden_dim: int):         super(FFN, self).__init__()         self.fc1 = torch.nn.Linear(input_dim, hidden_dim, bias=False)         self.fc2 = torch.nn.Linear(hidden_dim, input_dim, bias=False)         self.gate = torch.nn.Linear(input_dim, hidden_dim, bias=False)         self.act = torch.nn.SiLU()      def forward(self, x):         return self.fc2(self.act(self.gate(x)) * self.fc1(x)) <p>Llama\u200b\u4f7f\u7528\u200bRMSNorm\u200b\u4f5c\u4e3a\u200bLayerNorm\u3002</p> In\u00a0[5]: Copied! <pre>class RMSNorm(torch.nn.Module):\n    def __init__(self, dim: int, eps: float = 1e-8):\n        super(RMSNorm, self).__init__()\n        self.weight = torch.nn.Parameter(torch.ones(dim))\n        self.eps = eps\n\n    def forward(self, x: torch.Tensor):\n        return x / torch.sqrt(torch.mean(x ** 2, dim=-1, keepdim=True) + self.eps) * self.weight\n</pre> class RMSNorm(torch.nn.Module):     def __init__(self, dim: int, eps: float = 1e-8):         super(RMSNorm, self).__init__()         self.weight = torch.nn.Parameter(torch.ones(dim))         self.eps = eps      def forward(self, x: torch.Tensor):         return x / torch.sqrt(torch.mean(x ** 2, dim=-1, keepdim=True) + self.eps) * self.weight <p>Llama\u200b\u4f7f\u7528\u200bPre-norm\uff0c\u200b\u5373\u5148\u200b\u8fdb\u884c\u200bnorm\uff0c\u200b\u518d\u200b\u8fdb\u884c\u200battention/FFN\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u6700\u540e\u200b\u76f8\u52a0\u200b\u3002\u200b\u636e\u6b64\u200b\u53ef\u4ee5\u200b\u6784\u5efa\u200b\u51fa\u200bLlamaDecoder\u200b\u7684\u200b\u57fa\u672c\u200b\u7ed3\u6784\u200b\u3002</p> In\u00a0[6]: Copied! <pre>class LlamaDecoder(torch.nn.Module):\n    def __init__(\n        self, d_model: int, num_heads: int, rope: RoPE, hidden_dim: int, layernorm_eps: float\n    ):\n        super().__init__()\n        self.norm1 = RMSNorm(d_model, layernorm_eps)\n        self.attention = MultiHeadSelfAttention(d_model, num_heads, rope)\n        self.norm2 = RMSNorm(d_model, layernorm_eps)\n        self.ffn = FFN(d_model, hidden_dim)\n\n    def forward(self, x: torch.Tensor, padding_mask: torch.Tensor | None = None, attention_mask: torch.Tensor | None = None):\n        hidden = x\n        hidden += self.attention(self.norm1(hidden), padding_mask, attention_mask)\n        hidden += self.ffn(self.norm2(hidden))\n        return hidden\n</pre> class LlamaDecoder(torch.nn.Module):     def __init__(         self, d_model: int, num_heads: int, rope: RoPE, hidden_dim: int, layernorm_eps: float     ):         super().__init__()         self.norm1 = RMSNorm(d_model, layernorm_eps)         self.attention = MultiHeadSelfAttention(d_model, num_heads, rope)         self.norm2 = RMSNorm(d_model, layernorm_eps)         self.ffn = FFN(d_model, hidden_dim)      def forward(self, x: torch.Tensor, padding_mask: torch.Tensor | None = None, attention_mask: torch.Tensor | None = None):         hidden = x         hidden += self.attention(self.norm1(hidden), padding_mask, attention_mask)         hidden += self.ffn(self.norm2(hidden))         return hidden In\u00a0[7]: Copied! <pre>class LlamaModel(torch.nn.Module):\n    def __init__(\n        self, config: transformers.LlamaConfig\n    ):\n        super().__init__()\n        self.embedding = torch.nn.Embedding(config.vocab_size, config.hidden_size)\n        self.rope = RoPE(\n            config.hidden_size // config.num_attention_heads,\n            config.rope_theta\n        )\n        self.layers = torch.nn.ModuleList([\n            LlamaDecoder(\n                config.hidden_size,\n                config.num_attention_heads,\n                self.rope,\n                config.intermediate_size,\n                config.rms_norm_eps\n            )\n            for _ in range(config.num_hidden_layers)\n        ])\n        self.norm = RMSNorm(config.hidden_size)\n        self.lm_head = torch.nn.Linear(config.hidden_size, config.vocab_size, bias=False)\n\n    def forward(\n        self, input_ids: torch.Tensor,\n        padding_mask: torch.Tensor | None = None\n    ) -&gt; torch.Tensor:\n        hidden = self.embedding(input_ids)\n        attention_mask = 1 - torch.triu(\n            torch.ones(hidden.size(1), hidden.size(1)), diagonal=1\n        ).to(hidden.device)\n        for layer in self.layers:\n            hidden = layer(hidden, padding_mask, attention_mask)\n        hidden = self.norm(hidden)\n        hidden = self.lm_head(hidden)\n        return hidden\n</pre> class LlamaModel(torch.nn.Module):     def __init__(         self, config: transformers.LlamaConfig     ):         super().__init__()         self.embedding = torch.nn.Embedding(config.vocab_size, config.hidden_size)         self.rope = RoPE(             config.hidden_size // config.num_attention_heads,             config.rope_theta         )         self.layers = torch.nn.ModuleList([             LlamaDecoder(                 config.hidden_size,                 config.num_attention_heads,                 self.rope,                 config.intermediate_size,                 config.rms_norm_eps             )             for _ in range(config.num_hidden_layers)         ])         self.norm = RMSNorm(config.hidden_size)         self.lm_head = torch.nn.Linear(config.hidden_size, config.vocab_size, bias=False)      def forward(         self, input_ids: torch.Tensor,         padding_mask: torch.Tensor | None = None     ) -&gt; torch.Tensor:         hidden = self.embedding(input_ids)         attention_mask = 1 - torch.triu(             torch.ones(hidden.size(1), hidden.size(1)), diagonal=1         ).to(hidden.device)         for layer in self.layers:             hidden = layer(hidden, padding_mask, attention_mask)         hidden = self.norm(hidden)         hidden = self.lm_head(hidden)         return hidden In\u00a0[8]: Copied! <pre>llama_config = transformers.AutoConfig.from_pretrained('meta-llama/Llama-2-7b-hf')\nllama = LlamaModel(llama_config)\n</pre> llama_config = transformers.AutoConfig.from_pretrained('meta-llama/Llama-2-7b-hf') llama = LlamaModel(llama_config) <pre>/usr/local/lib/python3.10/dist-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.\n  warnings.warn(\n</pre> <p>\u200b\u52a0\u8f7d\u200bHuggingface\u200b\u63d0\u4f9b\u200b\u7684\u200bLlama\u200b\u6a21\u578b\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5c06\u200b\u9884\u200b\u8bad\u7ec3\u200b\u7684\u200bLlama\u200b\u53c2\u6570\u200b\u590d\u5236\u5230\u200b\u5b9e\u73b0\u200b\u7684\u200b\u6a21\u578b\u200b\u4e2d\u200b\u3002</p> In\u00a0[9]: Copied! <pre>hf_llama = transformers.LlamaForCausalLM.from_pretrained('meta-llama/Llama-2-7b-hf')\n\ndef load_params(custom_model: LlamaModel, hf_model: transformers.LlamaForCausalLM):\n    layer_pairs = [\n        (custom_model.embedding, hf_model.model.embed_tokens),\n        (custom_model.lm_head, hf_model.lm_head),\n        (custom_model.norm, hf_model.model.norm)\n    ]\n    for custom_layer, hf_layer in zip(custom_model.layers, hf_model.model.layers):\n        layer_pairs.extend([\n            (custom_layer.norm1, hf_layer.input_layernorm),\n            (custom_layer.norm2, hf_layer.post_attention_layernorm),\n            (custom_layer.attention.W_Q, hf_layer.self_attn.q_proj),\n            (custom_layer.attention.W_K, hf_layer.self_attn.k_proj),\n            (custom_layer.attention.W_V, hf_layer.self_attn.v_proj),\n            (custom_layer.attention.W_O, hf_layer.self_attn.o_proj),\n            (custom_layer.ffn.gate, hf_layer.mlp.gate_proj),\n            (custom_layer.ffn.fc1, hf_layer.mlp.up_proj),\n            (custom_layer.ffn.fc2, hf_layer.mlp.down_proj)\n        ])\n    for custom_layer, hf_layer in layer_pairs:\n        custom_layer.weight.data = hf_layer.weight.data.clone().detach()\n    return custom_model\n\nllama = load_params(llama, hf_llama)\n</pre> hf_llama = transformers.LlamaForCausalLM.from_pretrained('meta-llama/Llama-2-7b-hf')  def load_params(custom_model: LlamaModel, hf_model: transformers.LlamaForCausalLM):     layer_pairs = [         (custom_model.embedding, hf_model.model.embed_tokens),         (custom_model.lm_head, hf_model.lm_head),         (custom_model.norm, hf_model.model.norm)     ]     for custom_layer, hf_layer in zip(custom_model.layers, hf_model.model.layers):         layer_pairs.extend([             (custom_layer.norm1, hf_layer.input_layernorm),             (custom_layer.norm2, hf_layer.post_attention_layernorm),             (custom_layer.attention.W_Q, hf_layer.self_attn.q_proj),             (custom_layer.attention.W_K, hf_layer.self_attn.k_proj),             (custom_layer.attention.W_V, hf_layer.self_attn.v_proj),             (custom_layer.attention.W_O, hf_layer.self_attn.o_proj),             (custom_layer.ffn.gate, hf_layer.mlp.gate_proj),             (custom_layer.ffn.fc1, hf_layer.mlp.up_proj),             (custom_layer.ffn.fc2, hf_layer.mlp.down_proj)         ])     for custom_layer, hf_layer in layer_pairs:         custom_layer.weight.data = hf_layer.weight.data.clone().detach()     return custom_model  llama = load_params(llama, hf_llama) <pre>Loading checkpoint shards:   0%|          | 0/2 [00:00&lt;?, ?it/s]</pre> <p>\u200b\u52a0\u8f7d\u200btokenizer\u200b\u5e76\u200b\u751f\u6210\u200b\u8f93\u5165\u200b\u6570\u636e\u200b\uff0c\u200b\u6ce8\u610f\u200bLlama-2\u200b\u6ca1\u6709\u200bpadding token\uff0c\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u8bbe\u7f6e\u200b\u3002</p> In\u00a0[10]: Copied! <pre>llama_tokenizer = transformers.LlamaTokenizer.from_pretrained('meta-llama/Llama-2-7b-hf')\nllama_tokenizer.pad_token = llama_tokenizer.eos_token\ntokenized_sentence = llama_tokenizer([\n    'User: Hello Llama! How are you?\\nAssistant:',\n    'User: Hello World!\\nAssistant:'\n], return_tensors='pt', padding=True)\ninput_ids = tokenized_sentence['input_ids']\npadding_mask = tokenized_sentence['attention_mask']\n</pre> llama_tokenizer = transformers.LlamaTokenizer.from_pretrained('meta-llama/Llama-2-7b-hf') llama_tokenizer.pad_token = llama_tokenizer.eos_token tokenized_sentence = llama_tokenizer([     'User: Hello Llama! How are you?\\nAssistant:',     'User: Hello World!\\nAssistant:' ], return_tensors='pt', padding=True) input_ids = tokenized_sentence['input_ids'] padding_mask = tokenized_sentence['attention_mask'] <p>\u200b\u6839\u636e\u200b\u8f93\u5165\u200b\u6570\u636e\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u6bcf\u5c42\u200b\u6a21\u578b\u200b\u7684\u200b\u8f93\u51fa\u200b\u3002</p> In\u00a0[11]: Copied! <pre>llama_layers_output = hf_llama(input_ids, attention_mask=padding_mask, output_hidden_states=True)\n</pre> llama_layers_output = hf_llama(input_ids, attention_mask=padding_mask, output_hidden_states=True) <p>\u200b\u4ee5\u4e0b\u200b\u5bf9\u200b\u8f93\u51fa\u200b\u7ed3\u679c\u200b\u8fdb\u884c\u200b\u9a8c\u8bc1\u200b\u3002\u200b\u9996\u5148\u200b\u9a8c\u8bc1\u200bembedding\u200b\u5c42\u200b\u7684\u200b\u8f93\u51fa\u200b\u3002</p> In\u00a0[12]: Copied! <pre>llama_layers_output.hidden_states[0]\nhidden = llama.embedding(input_ids)\nattention_mask = 1 - torch.triu(\n    torch.ones(hidden.size(1), hidden.size(1)), diagonal=1\n).to(device=hidden.device)\n\n# Hidden state 1 equivalent to embedding output\ntorch.allclose(\n    llama_layers_output.hidden_states[0],\n    hidden\n)\n</pre> llama_layers_output.hidden_states[0] hidden = llama.embedding(input_ids) attention_mask = 1 - torch.triu(     torch.ones(hidden.size(1), hidden.size(1)), diagonal=1 ).to(device=hidden.device)  # Hidden state 1 equivalent to embedding output torch.allclose(     llama_layers_output.hidden_states[0],     hidden ) Out[12]: <pre>True</pre> <p>\u200b\u9a8c\u8bc1\u200b\u6bcf\u200b\u4e00\u5c42\u200bdecoder\u200b\u7684\u200b\u8f93\u51fa\u200b\uff0c\u200b\u6700\u540e\u200b\u4e00\u5c42\u200bdecoder\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u51fa\u73b0\u200b\u4e0d\u540c\u200b\u3002</p> In\u00a0[13]: Copied! <pre># Verify layer outputs\nlayer_results = []\nfor i in range(llama_config.num_hidden_layers - 1):\n    hidden = llama.layers[i](hidden, padding_mask, attention_mask)\n    layer_results.append(torch.allclose(\n        llama_layers_output.hidden_states[i + 1], hidden, atol=1e-4\n    ))\nall(layer_results), all(layer_results[:-1])\n</pre> # Verify layer outputs layer_results = [] for i in range(llama_config.num_hidden_layers - 1):     hidden = llama.layers[i](hidden, padding_mask, attention_mask)     layer_results.append(torch.allclose(         llama_layers_output.hidden_states[i + 1], hidden, atol=1e-4     )) all(layer_results), all(layer_results[:-1]) Out[13]: <pre>(False, True)</pre> <p>\u200b\u9a8c\u8bc1\u200bLM-head\u200b\u7684\u200b\u8f93\u51fa\u200b\u3002</p> In\u00a0[14]: Copied! <pre># Verify output logits\nlogits = llama(input_ids, padding_mask)\nhf_logits = llama_layers_output.logits\ntorch.allclose(logits, hf_logits, atol=1e-4)\n</pre> # Verify output logits logits = llama(input_ids, padding_mask) hf_logits = llama_layers_output.logits torch.allclose(logits, hf_logits, atol=1e-4) Out[14]: <pre>True</pre> <p>\u200b\u5c1d\u8bd5\u200b\u5bf9\u200b\u8f93\u51fa\u200b\u7684\u200b\u5355\u8bcd\u200b\u8fdb\u884c\u200b\u89e3\u7801\u200b\u3002</p> In\u00a0[15]: Copied! <pre># Decode the output tokens\nmax_prob_tokens = logits[0, -1].topk(5).indices.tolist()\nfor _ in max_prob_tokens:\n    print(llama_tokenizer.decode(_))\n</pre> # Decode the output tokens max_prob_tokens = logits[0, -1].topk(5).indices.tolist() for _ in max_prob_tokens:     print(llama_tokenizer.decode(_)) <pre>I\nHello\nFine\nHi\nOh\n</pre> In\u00a0[16]: Copied! <pre>del hf_llama\ndel llama_layers_output\ndel hf_logits\nimport gc\ngc.collect()\n</pre> del hf_llama del llama_layers_output del hf_logits import gc gc.collect() Out[16]: <pre>21</pre> In\u00a0[17]: Copied! <pre>def complete_ids(model: LlamaModel, input_ids: torch.Tensor):\n    assert input_ids.size(0) == 1\n\n    next_token = model(input_ids, torch.ones_like(input_ids))[0, -1, :].topk(1).indices[0].item()\n    return next_token\n\ndef complete_string(model: LlamaModel, tokenizer: transformers.LlamaTokenizer, prompt: str, max_length: int):\n    model.eval()\n    gc.collect()\n    tokenized_sentence = tokenizer([prompt], return_tensors='pt')['input_ids'].tolist()\n    next_token = None\n    print(tokenizer.decode(tokenized_sentence[0]))\n    num_tokens = 0\n\n    while next_token != tokenizer.eos_token_id and num_tokens &lt;= max_length:\n        num_tokens += 1\n        next_token = complete_ids(model, torch.tensor(tokenized_sentence))\n        tokenized_sentence[0].append(next_token)\n        print(tokenizer.decode(tokenized_sentence[0]))\n\n        gc.collect()\n\n    return num_tokens\n</pre> def complete_ids(model: LlamaModel, input_ids: torch.Tensor):     assert input_ids.size(0) == 1      next_token = model(input_ids, torch.ones_like(input_ids))[0, -1, :].topk(1).indices[0].item()     return next_token  def complete_string(model: LlamaModel, tokenizer: transformers.LlamaTokenizer, prompt: str, max_length: int):     model.eval()     gc.collect()     tokenized_sentence = tokenizer([prompt], return_tensors='pt')['input_ids'].tolist()     next_token = None     print(tokenizer.decode(tokenized_sentence[0]))     num_tokens = 0      while next_token != tokenizer.eos_token_id and num_tokens &lt;= max_length:         num_tokens += 1         next_token = complete_ids(model, torch.tensor(tokenized_sentence))         tokenized_sentence[0].append(next_token)         print(tokenizer.decode(tokenized_sentence[0]))          gc.collect()      return num_tokens In\u00a0[18]: Copied! <pre>import time\nquery = 'User: Given two numbers, 13.11 and 13.8, which is larger?\\nAssistant:'\n\nstart_time = time.time()\nnum_tokens = complete_string(llama, llama_tokenizer, query, 10)\nend_time = time.time()\n\ntime_span = end_time - start_time\nprint(f'Predicted {num_tokens} in {time_span:.2f} seconds, {num_tokens / time_span:.2f} tokens/s')\n</pre> import time query = 'User: Given two numbers, 13.11 and 13.8, which is larger?\\nAssistant:'  start_time = time.time() num_tokens = complete_string(llama, llama_tokenizer, query, 10) end_time = time.time()  time_span = end_time - start_time print(f'Predicted {num_tokens} in {time_span:.2f} seconds, {num_tokens / time_span:.2f} tokens/s') <pre>&lt;s&gt; User: Given two numbers, 13.11 and 13.8, which is larger?\nAssistant:\n&lt;s&gt; User: Given two numbers, 13.11 and 13.8, which is larger?\nAssistant: The\n&lt;s&gt; User: Given two numbers, 13.11 and 13.8, which is larger?\nAssistant: The larger\n&lt;s&gt; User: Given two numbers, 13.11 and 13.8, which is larger?\nAssistant: The larger number\n&lt;s&gt; User: Given two numbers, 13.11 and 13.8, which is larger?\nAssistant: The larger number is\n&lt;s&gt; User: Given two numbers, 13.11 and 13.8, which is larger?\nAssistant: The larger number is \n&lt;s&gt; User: Given two numbers, 13.11 and 13.8, which is larger?\nAssistant: The larger number is 1\n&lt;s&gt; User: Given two numbers, 13.11 and 13.8, which is larger?\nAssistant: The larger number is 13\n&lt;s&gt; User: Given two numbers, 13.11 and 13.8, which is larger?\nAssistant: The larger number is 13.\n&lt;s&gt; User: Given two numbers, 13.11 and 13.8, which is larger?\nAssistant: The larger number is 13.8\n&lt;s&gt; User: Given two numbers, 13.11 and 13.8, which is larger?\nAssistant: The larger number is 13.8.\n&lt;s&gt; User: Given two numbers, 13.11 and 13.8, which is larger?\nAssistant: The larger number is 13.8.\n\nPredicted 11 in 37.42 seconds, 0.29 tokens/s\n</pre>"},{"location":"coding/machine-learning/llama-2/","title":"\u6a21\u578b\u200b\u5b9e\u73b0\u200b\u00b6","text":""},{"location":"coding/machine-learning/llama-2/","title":"\u4f4d\u7f6e\u200b\u7f16\u7801\u200b\u00b6","text":""},{"location":"coding/machine-learning/llama-2/","title":"\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u00b6","text":""},{"location":"coding/machine-learning/llama-2/#ffn","title":"FFN\u00b6","text":""},{"location":"coding/machine-learning/llama-2/#layernorm","title":"LayerNorm\u00b6","text":""},{"location":"coding/machine-learning/llama-2/#decoder-layer","title":"Decoder Layer\u00b6","text":""},{"location":"coding/machine-learning/llama-2/#llama","title":"Llama\u200b\u6a21\u578b\u200b\u6784\u5efa\u200b\u00b6","text":""},{"location":"coding/machine-learning/llama-2/","title":"\u6a21\u578b\u200b\u9a8c\u8bc1\u200b\u00b6","text":"<p>\u200b\u9996\u5148\u200b\uff0c\u200b\u4ece\u200b<code>Llama-2-7b-hf</code>\u200b\u4e2d\u200b\u52a0\u8f7d\u200b\u6a21\u578b\u200b\u914d\u7f6e\u200b\uff0c\u200b\u5e76\u200b\u6839\u636e\u200b\u914d\u7f6e\u200b\u521d\u59cb\u5316\u200b\u6a21\u578b\u200b</p>"},{"location":"coding/machine-learning/llama-2/","title":"\u6a21\u578b\u200b\u63a8\u7406\u200b\u00b6","text":"<p>\u200b\u5728\u200b\u63a8\u7406\u200b\u9636\u6bb5\u200b\uff0c\u200b\u6a21\u578b\u200b\u6839\u636e\u200b\u8f93\u5165\u200b\u5e8f\u5217\u200b\uff0c\u200b\u4e0d\u65ad\u200b\u9884\u6d4b\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u7684\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u5355\u8bcd\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5c06\u200b\u5176\u200b\u52a0\u5165\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u3002\u200b\u91cd\u590d\u200b\u8fd9\u4e2a\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u76f4\u5230\u200b\u51fa\u73b0\u200b\u7ed3\u675f\u200btoken\u3002</p>"},{"location":"coding/machine-learning/llm-inference/","title":"\u5927\u200b\u6a21\u578b\u200b\u63a8\u7406","text":"<p>\u200b\u5728\u200b\u63a8\u7406\u200b\u9636\u6bb5\u200b\uff0c\u200b\u5927\u200b\u6a21\u578b\u200b\u6839\u636e\u200b\u8f93\u5165\u200b\u7684\u200b\u6587\u672c\u200b\u5e8f\u5217\u200b\uff0c\u200b\u4e0d\u65ad\u200b\u9884\u6d4b\u200b\u8f93\u5165\u200b\u6587\u672c\u200b\u7684\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u8bcd\u200b\uff0c\u200b\u76f4\u5230\u200b\u9884\u6d4b\u51fa\u200b\u7ed3\u675f\u200b\u7b26\u53f7\u200b\u4e3a\u6b62\u200b\u3002\u200b\u4e0d\u8fc7\u200b\uff0c\u200b\u5728\u200b\u9884\u200b\u8bad\u7ec3\u200b\u9636\u6bb5\u200b\u4e2d\u200b\uff0c\u200b\u4e0d\u200b\u5305\u542b\u200b\u5bf9\u200bbos\uff08begin of sentence\uff09\u200b\u548c\u200beos\uff08end of sentence\uff09\u200b\u7684\u200b\u9884\u6d4b\u200b\u3002\u200b\u6240\u4ee5\u200b\uff0c\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b\u57fa\u5ea7\u200b\u6a21\u578b\u200b\uff0c\u200b\u6a21\u578b\u200b\u4f1a\u200b\u4e0d\u65ad\u200b\u8f93\u51fa\u200btoken\u3002</p>"},{"location":"coding/machine-learning/llm-inference/#kv-cache","title":"KV-cache","text":"<p>\u200b\u628a\u200b\u8f93\u5165\u200b\u5e8f\u5217\u200b\u91cd\u65b0\u200b\u8f93\u51fa\u200bLLM\uff0c\u200b\u9884\u6d4b\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u5355\u8bcd\u200b\u63a8\u7406\u200b\u6d41\u7a0b\u200b\u7684\u200b\u8ba1\u7b97\u200b\u6548\u7387\u200b\u975e\u5e38\u4f4e\u200b\uff0c\u200b\u539f\u56e0\u200b\u5728\u4e8e\u200b\u6bcf\u200b\u4e00\u6b21\u200b\u9884\u6d4b\u200b\u90fd\u200b\u9700\u8981\u200b\u5bf9\u200b\u6574\u4e2a\u200b\u5e8f\u5217\u200b\u8ba1\u7b97\u200b\u6ce8\u610f\u529b\u200b\u5f97\u5206\u200b\u3002\u200b\u7136\u800c\u200b\uff0c\u200b\u7531\u4e8e\u200b\u6bcf\u200b\u4e00\u4e2a\u200btoken\u200b\u7684\u200b\u8868\u793a\u200b\u53ea\u200b\u4f9d\u8d56\u4e8e\u200b\u524d\u9762\u200b\u7684\u200btoken\uff0c\u200b\u5728\u200b\u63a8\u7406\u200b\u9636\u6bb5\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e0d\u5fc5\u200b\u91cd\u7b97\u200b\u524d\u8fb9\u200b\u7684\u200btoken\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u5b58\u50a8\u200b\u524d\u8fb9\u200b\u7684\u200btoken\u200b\u7684\u200bKV\u200b\u8868\u793a\u200b\u5373\u53ef\u200b\u3002\u200b\u53ea\u200b\u9700\u7528\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200btoken\u200b\u7684\u200bQ\u200b\u8ba1\u7b97\u200b\u6ce8\u610f\u529b\u200b\u5373\u53ef\u200b\u5f97\u5230\u200b\u5bf9\u4e0b\u200b\u4e00\u4e2a\u200btoken\u200b\u7684\u200b\u9884\u6d4b\u200b\u3002\u200b\u8fd9\u79cd\u200b\u6280\u672f\u200b\u5373\u200b\u79f0\u4e3a\u200bKV\u200b\u7f13\u5b58\u200b\u3002\u200b\u5305\u542b\u200bKV\u200b\u7f13\u5b58\u200b\u7684\u200b\u63a8\u7406\u200b\u8fc7\u7a0b\u200b\u5206\u4e3a\u200b\u4e24\u4e2a\u200b\u9636\u6bb5\u200b\uff0c\u200b\u5373\u200b\u7f13\u5b58\u200b\u586b\u5145\u200b\uff08prefill\uff09\u200b\u9636\u6bb5\u200b\u548c\u200b\u89e3\u7801\u200b\uff08decode\uff09\u200b\u9636\u6bb5\u200b\u3002</p> <p>\u200b\u4e3a\u4f55\u200b\u53ea\u200b\u9700\u8981\u200bKV-cache\u200b\u800c\u200b\u4e0d\u200b\u9700\u8981\u200bQ-cache</p> <p>\u200b\u5047\u8bbe\u200b\u8f93\u5165\u200b\u5e8f\u5217\u200b\u7ecf\u8fc7\u200b\\(QKV\\)\u200b\u8ba1\u7b97\u200b\u540e\u200b\u7684\u200b\u5e8f\u5217\u200b\u4e3a\u200b\\(S^Q, S^K, S^V\\)\uff0c\u200b\u5e76\u4e14\u200b\u53ef\u4ee5\u200b\u62c6\u200b\u5206\u4e3a\u200b\u5217\u200b\u5411\u91cf\u200b\u8868\u793a\u200b\uff1a</p> \\[ \\begin{aligned} S^Q &amp;= \\begin{bmatrix} Q_1 &amp; Q_2 &amp; \\cdots &amp; Q_n \\end{bmatrix} \\\\ S^K &amp;= \\begin{bmatrix} K_1 &amp; K_2 &amp; \\cdots &amp; K_n \\end{bmatrix} \\\\ S^V &amp;= \\begin{bmatrix} V_1 &amp; V_2 &amp; \\cdots &amp; V_n \\end{bmatrix} \\end{aligned} \\] <p>\u200b\u6ce8\u610f\u529b\u200b\u5f97\u5206\u200b\u77e9\u9635\u200b\u4e3a\u200b</p> \\[ \\begin{bmatrix} Q_1K_1 &amp; Q_1K_2 &amp; \\cdots &amp; Q_1K_n \\\\ Q_2K_1 &amp; Q_2K_2 &amp; \\cdots &amp; Q_2K_n \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ Q_nK_1 &amp; Q_nK_2 &amp; \\cdots &amp; Q_nK_n \\end{bmatrix} \\] <p>\u200b\u7531\u4e8e\u200bdecoder\u200b\u7684\u200bcausal mask\u200b\u9650\u5236\u200b\uff0c\u200b\u6700\u7ec8\u200b\u8ba1\u7b97\u200b\u7684\u200b\u8868\u793a\u200b\u4e3a\u200b</p> \\[ \\begin{aligned} O_1 &amp;= \\sum_{i=1}^1 \\text{softmax}(Q_1K_i)V_i \\\\ O_2 &amp;= \\sum_{i=1}^2 \\text{softmax}(Q_2K_i)V_i \\\\ \\end{aligned} \\] <p>\u200b\u4e5f\u200b\u5373\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u8868\u793a\u200b\uff0c\u200b\u53ea\u200b\u4f9d\u8d56\u200b\u8be5\u200b\u4f4d\u7f6e\u200b\u7684\u200bQ\uff0c\u200b\u548c\u200b\u8be5\u200b\u4f4d\u7f6e\u200b\u53ca\u200b\u4e4b\u524d\u200b\u7684\u200bK\u200b\u548c\u200bV\u3002\u200b\u56e0\u6b64\u200b\u9884\u6d4b\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u5355\u8bcd\u200b\u65f6\u200b\uff0c\u200b\u4e0d\u200b\u9700\u8981\u200b\u91cd\u65b0\u200b\u8ba1\u7b97\u200bKV\uff0c\u200b\u5c06\u200bKV\u200b\u5b58\u50a8\u200b\u4e0b\u6765\u200b\u5373\u53ef\u200b\u3002</p> <p>\u200b\u5c06\u200b\u8f93\u5165\u200b\u5e8f\u5217\u200b\u8f93\u5165\u200bLLM\u200b\u65f6\u200b\uff0c\u200b\u9996\u5148\u200b\u8fdb\u884c\u200b\u7f13\u5b58\u200b\u586b\u5145\u200b\uff0c\u200b\u4fdd\u5b58\u200b\u4e0b\u200b\u6240\u6709\u200b\u5c42\u200b\u7684\u200bKV-cache\uff0c\u200b\u7136\u540e\u200b\u8fdb\u884c\u200b\u89e3\u7801\u200b\uff0c\u200b\u4e0d\u65ad\u200b\u9884\u6d4b\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u5355\u8bcd\u200b\uff0c\u200b\u5e76\u200b\u8bb0\u5f55\u200b\u9884\u6d4b\u200b\u5355\u8bcd\u200b\u7684\u200bKV\u200b\u8868\u793a\u200b\u3002\u200b\u5bf9\u4e8e\u200bdecoder\u200b\u7684\u200b\u6bcf\u200b\u4e00\u5c42\u200b\uff0c\u200b\u90fd\u200b\u9700\u8981\u200b\u4fdd\u5b58\u200b\u4e00\u4e2a\u200bKV-cache\uff0c\u200b\u6bcf\u200b\u4e00\u5c42\u200bcache\u200b\u7684\u200b\u5927\u5c0f\u200b\u4e3a\u200b\\(2\\times N\\times L\\times D\\)\u3002\u200b\u5bf9\u4e8e\u200b\u957f\u200b\u5e8f\u5217\u200b\uff0cKV-cache\u200b\u7684\u200b\u5927\u5c0f\u200b\u4f1a\u200b\u975e\u5e38\u200b\u5927\u200b\u3002</p>"},{"location":"coding/machine-learning/loss/","title":"\u635f\u5931\u200b\u51fd\u6570","text":"<p>\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u662f\u200b\u7528\u6765\u200b\u8bc4\u4ef7\u200b\u6a21\u578b\u200b\u9884\u6d4b\u503c\u200b\u4e0e\u200b\u771f\u5b9e\u200b\u503c\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5dee\u5f02\u200b\u7684\u200b\u51fd\u6570\u200b\u3002\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b\u4f18\u5316\u200b\u7b97\u6cd5\u200b\u6765\u200b\u8c03\u6574\u200b\u6a21\u578b\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u7684\u200b\u503c\u200b\u6700\u5c0f\u200b\u3002</p>"},{"location":"coding/machine-learning/loss/#_2","title":"\u5747\u65b9\u200b\u8bef\u5dee","text":"<p>\u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b\uff08Mean Squared Error, MSE\uff09\u200b\u662f\u200b\u56de\u5f52\u200b\u4efb\u52a1\u200b\u4e2d\u200b\u6700\u200b\u5e38\u7528\u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u3002\u200b\u5b83\u200b\u8ba1\u7b97\u200b\u7684\u200b\u662f\u200b\u9884\u6d4b\u503c\u200b\u4e0e\u200b\u771f\u5b9e\u200b\u503c\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5e73\u65b9\u5dee\u200b\u7684\u200b\u5747\u503c\u200b\u3002</p> \\[ \\begin{aligned} L(y, t) &amp;= \\frac{1}{2} \\sum_{i=1}^{n} (y_i - t_i)^2 \\\\ \\frac{\\partial L}{\\partial y_i} &amp;= y_i - t_i \\end{aligned} \\] <p>\u200b\u5176\u4e2d\u200b\uff0c\\(y\\) \u200b\u662f\u200b\u6a21\u578b\u200b\u7684\u200b\u9884\u6d4b\u503c\u200b\uff0c\\(t\\) \u200b\u662f\u200b\u771f\u5b9e\u200b\u503c\u200b\uff0c\\(n\\) \u200b\u662f\u200b\u6837\u672c\u200b\u6570\u91cf\u200b\u3002</p> <pre><code>def mse(y: torch.Tensor, t: torch.Tensor) -&gt; torch.Tensor:\n    return 0.5 * torch.sum((y - t) ** 2)\n\nclass MSELoss(torch.nn.Module):\n    def __init__(self):\n        super(MSELoss, self).__init__()\n\n    def forward(self, y: torch.Tensor, t: torch.Tensor) -&gt; torch.Tensor:\n        return mse(y, t)\n</code></pre>"},{"location":"coding/machine-learning/loss/#_3","title":"\u4ea4\u53c9\u200b\u71b5","text":"<p>\u200b\u4ea4\u53c9\u200b\u71b5\u200b\uff08Cross Entropy\uff09\u200b\u662f\u200b\u591a\u200b\u5206\u7c7b\u200b\u4efb\u52a1\u200b\u4e2d\u200b\u6700\u200b\u5e38\u7528\u200b\u7684\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u3002\u200b\u5b83\u200b\u8ba1\u7b97\u200b\u7684\u200b\u662f\u200b\u6a21\u578b\u200b\u8f93\u51fa\u200b\u503c\u200b\u4e0e\u200b\u771f\u5b9e\u200b\u503c\u200b\u4e4b\u95f4\u200b\u7684\u200b\u4ea4\u53c9\u200b\u71b5\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200bKL\u200b\u6563\u5ea6\u200b\u63a8\u5bfc\u200b\u5f97\u5230\u200b\u3002</p> \\[ \\begin{aligned} KL(p||q) &amp;= -\\sum_{i=1}^{n} p_i (\\log q_i - \\log p_i) \\\\ &amp;= -\\sum_{i=1}^{n} p_i \\log q_i + \\sum_{i=1}^{n} p_i \\log p_i \\\\ &amp;= H(p, q) - H(p) \\end{aligned} \\] <p>\u200b\u5176\u4e2d\u200b\uff0c\\(p\\) \u200b\u662f\u200b\u771f\u5b9e\u200b\u6982\u7387\u5206\u5e03\u200b\uff0c\\(q\\) \u200b\u662f\u200b\u6a21\u578b\u200b\u8f93\u51fa\u200b\u6982\u7387\u5206\u5e03\u200b\uff0c\\(H(p)\\)\u200b\u8868\u793a\u200b\u771f\u5b9e\u200b\u5206\u5e03\u200b\\(p\\)\u200b\u7684\u200b\u71b5\u200b\uff0c\u200b\u4e3a\u200b\u5e38\u6570\u200b\u3002\u200b\u5f53\u200b\u8f93\u51fa\u200b\u5206\u5e03\u200b\\(q\\)\u200b\u4e0e\u200b\u771f\u5b9e\u200b\u5206\u5e03\u200b\\(p\\)\u200b\u76f8\u8fd1\u200b\u65f6\u200b\uff0cKL\u200b\u6563\u5ea6\u503c\u200b\u8d8a\u200b\u5c0f\u200b\uff0c\u200b\u4ea4\u53c9\u200b\u71b5\u200b\\(-\\sum_{i=1}^{n} p_i \\log q_i\\)\u200b\u503c\u200b\u4e5f\u200b\u8d8a\u200b\u5c0f\u200b\u3002</p> <p>\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\u7684\u200b\u662f\u200b\uff0c\u200b\u5728\u200bPyTorch\u200b\u4e2d\u200b\uff0c<code>torch.nn.CrossEntropyLoss</code>\u200b\u51fd\u6570\u200b\u7684\u200b\u8f93\u5165\u200b\u662f\u200b\u6a21\u578b\u200b\u7684\u200b\u8f93\u51fa\u200b\u503c\u200b\u548c\u200b\u771f\u5b9e\u200b\u6807\u7b7e\u200b\uff0c\u200b\u4e0d\u200b\u9700\u8981\u200b\u5bf9\u200b\u8f93\u51fa\u200b\u503c\u200b\u8fdb\u884c\u200bsoftmax\u200b\u64cd\u4f5c\u200b\u3002</p> <pre><code>def cross_entropy(score: torch.Tensor, label: torch.Tensor) -&gt; torch.Tensor:\n    # label: [N], score: [N, C]\n    score = torch.softmax(score, dim=-1)\n    label_logits = score[torch.arange(score.size(0)), label]\n    return -torch.sum(torch.log(label_logits))\n\nclass CrossEntropyLoss(torch.nn.Module):\n    def __init__(self):\n        super(CrossEntropyLoss, self).__init__()\n\n    def forward(self, score: torch.Tensor, label: torch.Tensor) -&gt; torch.Tensor:\n        return cross_entropy(score, label)\n</code></pre>"},{"location":"coding/machine-learning/mlp/","title":"\u591a\u5c42\u200b\u611f\u77e5\u673a","text":"<p>\u200b\u591a\u5c42\u200b\u611f\u77e5\u673a\u200b\uff08Multilayer Perceptron, MLP\uff09\u200b\u662f\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u7684\u200b\u57fa\u7840\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200b\u6700\u200b\u7b80\u5355\u200b\u7684\u200b\u6df1\u5ea6\u200b\u5b66\u4e60\u200b\u6a21\u578b\u200b\u4e4b\u4e00\u200b\uff0c\u200b\u7531\u200b\u7ebf\u6027\u53d8\u6362\u200b\u548c\u200b\u975e\u7ebf\u6027\u200b\u7684\u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b\u7ec4\u6210\u200b\u3002\u200b\u591a\u5c42\u200b\u611f\u77e5\u673a\u200b\u7684\u200b\u7f51\u7edc\u7ed3\u6784\u200b\u662f\u200b\u7531\u200b\u8f93\u5165\u200b\u5c42\u200b\u3001\u200b\u591a\u4e2a\u200b\u9690\u85cf\u200b\u5c42\u200b\u548c\u200b\u8f93\u51fa\u200b\u5c42\u200b\u7ec4\u6210\u200b\uff0c\u200b\u5176\u4e2d\u200b\u9690\u85cf\u200b\u5c42\u200b\u7684\u200b\u795e\u7ecf\u5143\u200b\u6570\u91cf\u200b\u548c\u200b\u5c42\u6570\u200b\u53ef\u4ee5\u200b\u81ea\u7531\u200b\u8bbe\u5b9a\u200b\u3002</p>"},{"location":"coding/machine-learning/mlp/#_2","title":"\u7ebf\u6027\u53d8\u6362","text":"<p>\u200b\u7ebf\u6027\u53d8\u6362\u200b\u662f\u200b\u591a\u5c42\u200b\u611f\u77e5\u673a\u200b\u7684\u200b\u57fa\u7840\u200b\uff0c\u200b\u5b83\u200b\u662f\u200b\u7531\u200b\u8f93\u5165\u200b\u5c42\u5230\u200b\u9690\u85cf\u200b\u5c42\u200b\u548c\u200b\u8f93\u51fa\u200b\u5c42\u200b\u7684\u200b\u5168\u200b\u8fde\u63a5\u200b\u5c42\u200b\u7ec4\u6210\u200b\u3002\u200b\u7ebf\u6027\u53d8\u6362\u200b\u7684\u200b\u6570\u5b66\u200b\u8868\u8fbe\u5f0f\u200b\u4e3a\u200b\uff1a</p> \\[ y = Wx + b \\] <p>\u200b\u5176\u4e2d\u200b \\(W\\) \u200b\u662f\u200b\u6743\u91cd\u200b\u77e9\u9635\u200b\uff0c\\(x\\) \u200b\u662f\u200b\u8f93\u5165\u200b\u5411\u91cf\u200b\uff0c\\(b\\) \u200b\u662f\u200b\u504f\u7f6e\u200b\u5411\u91cf\u200b\uff0c\\(y\\) \u200b\u662f\u200b\u8f93\u51fa\u200b\u5411\u91cf\u200b\u3002</p> <pre><code>class Linear(torch.nn.Module):\n    def __init__(self, in_dim: int, out_dim: int):\n        super(Linear, self).__init__()\n        self.in_dim = in_dim\n        self.out_dim = out_dim\n        self.weight = torch.nn.Parameter(torch.randn(out_dim, in_dim))\n        self.bias = torch.nn.Parameter(torch.randn(out_dim))\n\n    def forward(self, x: torch.Tensor) -&gt; torch.Tensor:\n        return torch.einsum(\"ij,j-&gt;i\", self.weight, x) + self.bias\n</code></pre> <p>\u200b\u53cd\u5411\u200b\u4f20\u64ad\u200b\u4e2d\u200b\uff0c\u200b\u68af\u5ea6\u200b\u8ba1\u7b97\u516c\u5f0f\u200b\u4e3a\u200b\uff1a</p> \\[ \\begin{aligned} \\frac{\\partial y}{\\partial W} &amp;= x \\\\ \\frac{\\partial y}{\\partial b} &amp;= 1 \\end{aligned} \\]"},{"location":"coding/machine-learning/multi-armed-bandit/","title":"\u591a\u81c2\u200b\u8001\u864e\u673a","text":"In\u00a0[1]: Copied! <pre>import itertools\nimport random\nfrom typing import List, Optional\n\nfrom scipy.stats import norm\n\n\nclass MultiArmedBandit():\n    def __init__(self, means, stds: Optional[List[float]] = None):\n        self.means = means\n        if stds is not None:\n            if len(stds) != len(means):\n                raise ValueError(\n                    'The length of means and stds should be the same.')\n            self.stds = stds\n        else:\n            self.stds = [1.0] * len(means)\n        self.k = len(means)\n        self.dists = [\n            norm(loc=mean, scale=std) for mean, std in zip(means, self.stds)\n        ]\n\n    def __len__(self) -&gt; int:\n        return self.k\n\n    @property\n    def optimal_reward(self) -&gt; float:\n        return max(self.means)\n\n    def pull(self, action: int) -&gt; float:\n        return self.dists[action].rvs()\n\nrewards = [*range(0, 10, 2)]\nstds = [*range(1, 6)]\nargs = itertools.product(rewards, stds)\nbandit = MultiArmedBandit(*zip(*args))\nprint(bandit.pull(0))\n</pre> import itertools import random from typing import List, Optional  from scipy.stats import norm   class MultiArmedBandit():     def __init__(self, means, stds: Optional[List[float]] = None):         self.means = means         if stds is not None:             if len(stds) != len(means):                 raise ValueError(                     'The length of means and stds should be the same.')             self.stds = stds         else:             self.stds = [1.0] * len(means)         self.k = len(means)         self.dists = [             norm(loc=mean, scale=std) for mean, std in zip(means, self.stds)         ]      def __len__(self) -&gt; int:         return self.k      @property     def optimal_reward(self) -&gt; float:         return max(self.means)      def pull(self, action: int) -&gt; float:         return self.dists[action].rvs()  rewards = [*range(0, 10, 2)] stds = [*range(1, 6)] args = itertools.product(rewards, stds) bandit = MultiArmedBandit(*zip(*args)) print(bandit.pull(0)) <pre>-1.435877863923347\n</pre> In\u00a0[2]: Copied! <pre>import abc\nfrom typing import Tuple\n\nclass AbstractAgent(abc.ABC):\n    def __init__(self, T: int, k: int):\n        self.T = T\n        self.k = k\n\n        self.history: List[Tuple[int, float]] = []\n\n    @abc.abstractmethod\n    def strategy(self) -&gt; int:\n        pass\n\n    def run(self, bandit: MultiArmedBandit) -&gt; float:\n        rewards = []\n        for t in range(self.T):\n            action = self.strategy()\n            if action &gt;= self.k:\n                raise ValueError('Invalid action.')\n\n            reward = bandit.pull(action)\n            self.history.append((action, reward))\n            rewards.append(reward)\n        return self.T * bandit.optimal_reward - sum(rewards)\n</pre> import abc from typing import Tuple  class AbstractAgent(abc.ABC):     def __init__(self, T: int, k: int):         self.T = T         self.k = k          self.history: List[Tuple[int, float]] = []      @abc.abstractmethod     def strategy(self) -&gt; int:         pass      def run(self, bandit: MultiArmedBandit) -&gt; float:         rewards = []         for t in range(self.T):             action = self.strategy()             if action &gt;= self.k:                 raise ValueError('Invalid action.')              reward = bandit.pull(action)             self.history.append((action, reward))             rewards.append(reward)         return self.T * bandit.optimal_reward - sum(rewards) In\u00a0[3]: Copied! <pre>import numpy as np\n\ndef show_result(x: List[float], name: str) -&gt; str:\n    x_array = np.array(x)\n    return f'{name} - Mean: {x_array.mean():.2f} Std: {x_array.std():.2f}'\n</pre> import numpy as np  def show_result(x: List[float], name: str) -&gt; str:     x_array = np.array(x)     return f'{name} - Mean: {x_array.mean():.2f} Std: {x_array.std():.2f}' In\u00a0[4]: Copied! <pre>class RandomAgent(AbstractAgent):\n    def strategy(self) -&gt; int:\n        return random.randint(0, self.k - 1)\n\nrandom_agents = [RandomAgent(T=100, k=len(bandit)) for _ in range(1000)]\nregrets = [agent.run(bandit) for agent in random_agents]\nshow_result(regrets, 'Random Agent')\n</pre> class RandomAgent(AbstractAgent):     def strategy(self) -&gt; int:         return random.randint(0, self.k - 1)  random_agents = [RandomAgent(T=100, k=len(bandit)) for _ in range(1000)] regrets = [agent.run(bandit) for agent in random_agents] show_result(regrets, 'Random Agent') Out[4]: <pre>'Random Agent - Mean: 399.66 Std: 44.19'</pre> In\u00a0[5]: Copied! <pre>from typing import Dict\n\nclass EpsilonGreedyAgent(AbstractAgent):\n    def __init__(self, T: int, k: int, epsilon: float):\n        super().__init__(T, k)\n        self.epsilon = epsilon\n\n    def _random(self) -&gt; int:\n        return random.randint(0, self.k - 1)\n\n    def _greedy(self) -&gt; int:\n        history_dict: Dict[int, List[float]] = {}\n        for action, reward in self.history:\n            if action not in history_dict:\n                history_dict[action] = []\n            history_dict[action].append(reward)\n        return max(\n            history_dict,\n            key=lambda x: sum(history_dict[x]) / len(history_dict[x])\n        )\n\n    def strategy(self) -&gt; int:\n        if random.random() &lt; self.epsilon or not self.history:\n            return self._random()\n        return self._greedy()\n\n\nepsilon_greedy = [\n    EpsilonGreedyAgent(T=100, k=len(bandit), epsilon=0.2) for _ in range(1000)\n]\nregrets = [agent.run(bandit) for agent in epsilon_greedy]\nshow_result(regrets, 'Epsilon-Greedy Agent')\n</pre> from typing import Dict  class EpsilonGreedyAgent(AbstractAgent):     def __init__(self, T: int, k: int, epsilon: float):         super().__init__(T, k)         self.epsilon = epsilon      def _random(self) -&gt; int:         return random.randint(0, self.k - 1)      def _greedy(self) -&gt; int:         history_dict: Dict[int, List[float]] = {}         for action, reward in self.history:             if action not in history_dict:                 history_dict[action] = []             history_dict[action].append(reward)         return max(             history_dict,             key=lambda x: sum(history_dict[x]) / len(history_dict[x])         )      def strategy(self) -&gt; int:         if random.random() &lt; self.epsilon or not self.history:             return self._random()         return self._greedy()   epsilon_greedy = [     EpsilonGreedyAgent(T=100, k=len(bandit), epsilon=0.2) for _ in range(1000) ] regrets = [agent.run(bandit) for agent in epsilon_greedy] show_result(regrets, 'Epsilon-Greedy Agent') Out[5]: <pre>'Epsilon-Greedy Agent - Mean: 155.49 Std: 79.32'</pre> In\u00a0[6]: Copied! <pre>import math\n\nclass UCBAgent(AbstractAgent):\n    def __init__(self, T: int, k: int, c: float):\n        super().__init__(T, k)\n        self.c = c\n\n    def ucb(self, action: int) -&gt; float:\n        n = len([a for a, _ in self.history if a == action])\n        if n == 0:\n            return float('inf')\n        mean = sum(r for a, r in self.history if a == action) / n\n        std = math.sqrt(math.log(len(self.history)) / n)\n        return mean + self.c * std\n\n    def strategy(self) -&gt; int:\n        # If there are still unselected actions, select one of them.\n        if len(self.history) &lt; self.k:\n            return len(self.history)\n\n        return max(range(self.k), key=self.ucb)\n\nucb_agents = [UCBAgent(T=100, k=len(bandit), c=0.3) for _ in range(1000)]\nregrets = [agent.run(bandit) for agent in ucb_agents]\nshow_result(regrets, 'UCB Agent')\n</pre> import math  class UCBAgent(AbstractAgent):     def __init__(self, T: int, k: int, c: float):         super().__init__(T, k)         self.c = c      def ucb(self, action: int) -&gt; float:         n = len([a for a, _ in self.history if a == action])         if n == 0:             return float('inf')         mean = sum(r for a, r in self.history if a == action) / n         std = math.sqrt(math.log(len(self.history)) / n)         return mean + self.c * std      def strategy(self) -&gt; int:         # If there are still unselected actions, select one of them.         if len(self.history) &lt; self.k:             return len(self.history)          return max(range(self.k), key=self.ucb)  ucb_agents = [UCBAgent(T=100, k=len(bandit), c=0.3) for _ in range(1000)] regrets = [agent.run(bandit) for agent in ucb_agents] show_result(regrets, 'UCB Agent') Out[6]: <pre>'UCB Agent - Mean: 116.76 Std: 29.87'</pre> In\u00a0[7]: Copied! <pre>from scipy.stats import invgamma\n\nclass ThompsonSamplingAgent(AbstractAgent):\n    def __init__(self, T: int, k: int):\n        super().__init__(T, k)\n\n        # We know that the reward is gaussian, so we can use normal-inverse-gamma\n        self.mu = [0.0] * k\n        self.lambd = [1.0] * k\n        self.alpha = [1.0] * k\n        self.beta = [1.0] * k\n\n    def update(self, action: int, reward: float) -&gt; None:\n        self.mu[action] = (\n            self.lambd[action] * self.mu[action] + reward\n        ) / (self.lambd[action] + 1)\n        self.lambd[action] += 1\n        self.alpha[action] += 0.5\n        self.beta[action] += (\n            self.lambd[action] * (reward - self.mu[action]) ** 2\n        ) / (self.lambd[action] + 1) / 2\n\n    def strategy(self) -&gt; int:\n        if self.history:\n            self.update(*self.history[-1])\n\n        samples = [\n            norm.rvs(\n                loc=mu, scale=invgamma.rvs(a, scale=b) / math.sqrt(lambd)\n            )\n            for mu, lambd, a, b in zip(self.mu, self.lambd, self.alpha, self.beta)\n        ]\n        return max(range(self.k), key=lambda x: samples[x])\n\nthompson_sampling_agents = [\n    ThompsonSamplingAgent(T=100, k=len(bandit)) for _ in range(1000)\n]\nregrets = [agent.run(bandit) for agent in thompson_sampling_agents]\nshow_result(regrets, 'Thompson Sampling Agent')\n</pre> from scipy.stats import invgamma  class ThompsonSamplingAgent(AbstractAgent):     def __init__(self, T: int, k: int):         super().__init__(T, k)          # We know that the reward is gaussian, so we can use normal-inverse-gamma         self.mu = [0.0] * k         self.lambd = [1.0] * k         self.alpha = [1.0] * k         self.beta = [1.0] * k      def update(self, action: int, reward: float) -&gt; None:         self.mu[action] = (             self.lambd[action] * self.mu[action] + reward         ) / (self.lambd[action] + 1)         self.lambd[action] += 1         self.alpha[action] += 0.5         self.beta[action] += (             self.lambd[action] * (reward - self.mu[action]) ** 2         ) / (self.lambd[action] + 1) / 2      def strategy(self) -&gt; int:         if self.history:             self.update(*self.history[-1])          samples = [             norm.rvs(                 loc=mu, scale=invgamma.rvs(a, scale=b) / math.sqrt(lambd)             )             for mu, lambd, a, b in zip(self.mu, self.lambd, self.alpha, self.beta)         ]         return max(range(self.k), key=lambda x: samples[x])  thompson_sampling_agents = [     ThompsonSamplingAgent(T=100, k=len(bandit)) for _ in range(1000) ] regrets = [agent.run(bandit) for agent in thompson_sampling_agents] show_result(regrets, 'Thompson Sampling Agent') Out[7]: <pre>'Thompson Sampling Agent - Mean: 231.88 Std: 49.94'</pre>"},{"location":"coding/machine-learning/multi-armed-bandit/","title":"\u591a\u81c2\u200b\u8001\u864e\u673a\u200b\u00b6","text":"<p>\u200b\u591a\u81c2\u200b\u8001\u864e\u673a\u200b\uff08Multi-armed bandit\uff09\u200b\u95ee\u9898\u200b\u6765\u81ea\u200b\u4e8e\u200b\u73b0\u5b9e\u200b\u4e2d\u200b\u7684\u200b\u8001\u864e\u673a\u200b\u95ee\u9898\u200b\u3002\u200b\u6bcf\u53f0\u200b\u8001\u864e\u673a\u200b\u90fd\u200b\u6709\u200b\u4e00\u4e2a\u200b\u62c9\u6746\u200b\uff0c\u200b\u62c9\u52a8\u200b\u62c9\u6746\u200b\u540e\u200b\uff0c\u200b\u8001\u864e\u200b\u673a\u4f1a\u200b\u968f\u673a\u200b\u7ed9\u51fa\u200b\u4e00\u4e2a\u200b\u5956\u52b1\u200b\u3002\u200b\u73a9\u5bb6\u200b\u7684\u200b\u4efb\u52a1\u200b\u662f\u200b\u5728\u200b\u6709\u9650\u200b\u7684\u200b\u5c1d\u8bd5\u200b\u6b21\u6570\u200b\u5185\u200b\u5c3d\u53ef\u80fd\u200b\u83b7\u5f97\u200b\u66f4\u200b\u591a\u200b\u7684\u200b\u5956\u52b1\u200b\u3002</p> <p>\u200b\u591a\u81c2\u200b\u8001\u864e\u673a\u200b\u95ee\u9898\u200b\u7684\u200b\u6570\u5b66\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\uff1a\u200b\u5df2\u77e5\u200b\u4e00\u7ec4\u200b$K\\in \\mathbb N^{+}$\u200b\u4e2a\u200b\u5b9a\u4e49\u200b\u5728\u200b$\\mathbb R$\u200b\u4e0a\u200b\u7684\u200b\u6982\u7387\u5206\u5e03\u200b$\\mathcal B = \\{D_1, \\ldots, D_K\\}$\uff0c\u200b\u5176\u4e2d\u200b$D_k$\u200b\u8868\u793a\u200b\u7b2c\u200b$k$\u200b\u4e2a\u200b\u8001\u864e\u673a\u200b\u7ed9\u51fa\u200b\u5956\u52b1\u200b\u7684\u200b\u6982\u7387\u5206\u5e03\u200b\uff0c$D_k$\u200b\u7684\u200b\u5747\u503c\u200b\u4e3a\u200b$\\mu_k$\u3002\u200b\u5728\u200b\u7b2c\u200b$t$\u200b\u8f6e\u4e2d\u200b\uff0c\u200b\u667a\u80fd\u200b\u4f53\u4ece\u200b$\\mathcal B$\u200b\u4e2d\u200b\u968f\u673a\u200b\u9009\u51fa\u200b\u4e00\u4e2a\u200b\u5206\u5e03\u200b$D^{(t)}\\in\\mathcal B$\uff0c\u200b\u5e76\u200b\u4ece\u4e2d\u200b\u91c7\u6837\u200b\u4e00\u4e2a\u200b\u5956\u52b1\u200b$X^{(t)}\\sim D^{(t)}$\u3002\u200b\u667a\u80fd\u200b\u4f53\u200b\u7684\u200b\u76ee\u6807\u200b\u662f\u200b\u5728\u200b\u6709\u9650\u200b\u7684\u200b\u8f6e\u6b21\u200b\u5185\u200b\u6700\u5927\u5316\u200b\u7d2f\u79ef\u200b\u5956\u52b1\u200b$\\sum_{t=1}^T X^{(t)}$\u3002\u200b\u540e\u6094\u200b\u503c\u200b$\\rho$\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\u6700\u4f18\u200b\u7b56\u7565\u200b\u7684\u200b$T$\u200b\u8f6e\u200b\u7d2f\u8ba1\u200b\u5956\u52b1\u200b\u7684\u200b\u671f\u671b\u503c\u200b\u4e0e\u200b\u667a\u80fd\u200b\u4f53\u200b\u7684\u200b$T$\u200b\u8f6e\u200b\u7d2f\u8ba1\u200b\u5956\u52b1\u200b\u4e4b\u5dee\u200b\uff0c\u200b\u5373\u200b</p> <p>$$ \\rho = T\\max\\{\\mu_k\\} - \\mathbb E\\left[\\sum_{t=1}^T X^{(t)}\\right] $$</p> <p>\u200b\u7528\u200bPython\u200b\u53ef\u4ee5\u200b\u7b80\u5355\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u4e0e\u200b\u667a\u80fd\u200b\u4f53\u200b\u4ea4\u4e92\u200b\u7684\u200b\u591a\u81c2\u200b\u8001\u864e\u673a\u200b\u73af\u5883\u200b\uff1a</p>"},{"location":"coding/machine-learning/multi-armed-bandit/","title":"\u7b97\u6cd5\u200b\u00b6","text":"<p>\u200b\u591a\u81c2\u200b\u8001\u864e\u673a\u200b\u7b97\u6cd5\u200b\u7684\u200b\u6838\u5fc3\u200b\u662f\u200b\u5728\u200b\u63a2\u7d22\u200b\uff08Exploration\uff09\u200b\u548c\u200b\u5229\u7528\u200b\uff08Exploitation\uff09\u200b\u4e4b\u95f4\u200b\u5bfb\u627e\u200b\u5e73\u8861\u200b\u3002\u200b\u63a2\u7d22\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u627e\u5230\u200b\uff08\u200b\u76f8\u8f83\u200b\u4e8e\u200b\u5f53\u524d\u200b\u5df2\u77e5\u200b\u7684\u200b\uff09\u200b\u66f4\u597d\u200b\u7684\u200b\u5956\u52b1\u200b\uff0c\u200b\u800c\u200b\u5229\u7528\u200b\u5219\u200b\u662f\u200b\u76f4\u63a5\u200b\u9009\u62e9\u200b\u5f53\u524d\u200b\u5df2\u77e5\u200b\u7684\u200b\u6700\u597d\u200b\u7684\u200b\u5956\u52b1\u200b\u3002</p>"},{"location":"coding/machine-learning/multi-armed-bandit/","title":"\u5b8c\u5168\u200b\u968f\u673a\u200b\u7b56\u7565\u200b\u00b6","text":"<p>\u200b\u5728\u200b\u5b8c\u5168\u200b\u968f\u673a\u200b\u7b56\u7565\u200b\u4e0b\u200b\uff0c\u200b\u667a\u80fd\u200b\u4f53\u200b\u968f\u673a\u200b\u9009\u62e9\u200b\u4e00\u4e2a\u200b\u81c2\u200b\uff0c\u200b\u83b7\u53d6\u200b\u5956\u52b1\u200b\uff0c\u200b\u540e\u6094\u200b\u503c\u200b\u7684\u200b\u671f\u671b\u200b\u4e3a\u200b$\\mathbb E\\rho = \\sum_{k=1}^K (\\mu^* - \\mu_k)$\u3002</p>"},{"location":"coding/machine-learning/multi-armed-bandit/#epsilon-","title":"$\\epsilon$-\u200b\u8d2a\u5fc3\u200b\u7b97\u6cd5\u200b\u00b6","text":"<p>$\\epsilon$-\u200b\u8d2a\u5fc3\u200b\u7b97\u6cd5\u200b\u662f\u200b\u6700\u200b\u7b80\u5355\u200b\u7684\u200b\u591a\u81c2\u200b\u8001\u864e\u673a\u200b\u7b97\u6cd5\u200b\u4e4b\u4e00\u200b\u3002\u200b\u5728\u200b\u6bcf\u200b\u4e00\u8f6e\u200b\u4e2d\u200b\uff0c\u200b\u4ee5\u200b$\\epsilon$\u200b\u7684\u200b\u6982\u7387\u200b\u968f\u673a\u200b\u9009\u62e9\u200b\u4e00\u4e2a\u200b\u8001\u864e\u673a\u200b\uff0c\u200b\u4ee5\u200b$1-\\epsilon$\u200b\u7684\u200b\u6982\u7387\u200b\u9009\u62e9\u200b\u5f53\u524d\u200b\u5df2\u77e5\u200b\u7684\u200b\u6700\u597d\u200b\u7684\u200b\u8001\u864e\u673a\u200b\u3002</p>"},{"location":"coding/machine-learning/multi-armed-bandit/","title":"\u7f6e\u4fe1\u200b\u4e0a\u200b\u754c\u200b\u7b97\u6cd5\u200b\u00b6","text":"<p>\u200b\u7f6e\u4fe1\u200b\u4e0a\u200b\u754c\u200b\u7b97\u6cd5\u200b\uff08Upper Confidence Bound, UCB\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u57fa\u4e8e\u200b\u7f6e\u4fe1\u533a\u95f4\u200b\u7684\u200b\u591a\u81c2\u200b\u8001\u864e\u673a\u200b\u7b97\u6cd5\u200b\u3002\u200b\u5728\u200b\u6bcf\u200b\u4e00\u8f6e\u200b\u4e2d\u200b\uff0c\u200b\u667a\u80fd\u200b\u4f53\u200b\u9009\u62e9\u200b\u4e00\u4e2a\u200b\u8001\u864e\u673a\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u8be5\u200b\u8001\u864e\u673a\u200b\u7684\u200b\u7f6e\u4fe1\u533a\u95f4\u200b\u4e0a\u200b\u754c\u200b\u6700\u5927\u200b\u3002\u200b\u7f6e\u4fe1\u533a\u95f4\u200b\u4e0a\u754c\u200b\u7684\u200b\u8ba1\u7b97\u516c\u5f0f\u200b\u4e3a\u200b</p> <p>$$ \\bar X_k + c\\cdot \\sqrt{\\frac{\\log t}{N_k}} $$</p> <p>\u200b\u5176\u4e2d\u200b$\\bar X_k$\u200b\u4e3a\u200b\u7b2c\u200b$k$\u200b\u4e2a\u200b\u8001\u864e\u673a\u200b\u7684\u200b\u5e73\u5747\u200b\u5956\u52b1\u200b\uff0c$N_k$\u200b\u4e3a\u200b\u7b2c\u200b$k$\u200b\u4e2a\u200b\u8001\u864e\u673a\u200b\u88ab\u200b\u9009\u62e9\u200b\u7684\u200b\u6b21\u6570\u200b\uff0c$c$\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u5e38\u6570\u200b\uff0c$t$\u200b\u4e3a\u200b\u5f53\u524d\u200b\u8f6e\u6b21\u200b\u3002\u200b\u5176\u200b\u601d\u60f3\u200b\u5728\u4e8e\u200b\uff0c\u200b\u667a\u80fd\u200b\u4f53\u4f1a\u200b\u9996\u5148\u200b\u904d\u5386\u200b\u6240\u6709\u200b\u81c2\u200b\uff0c\u200b\u4e4b\u540e\u200b\u4f18\u5148\u9009\u62e9\u200b\u90a3\u4e9b\u200b\u88ab\u200b\u9009\u62e9\u200b\u6b21\u6570\u200b\u8f83\u5c11\u200b\u7684\u200b\u8001\u864e\u673a\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u66f4\u597d\u200b\u5730\u200b\u4f30\u8ba1\u200b\u5176\u200b\u5956\u52b1\u200b\u3002</p>"},{"location":"coding/machine-learning/multi-armed-bandit/#thompson","title":"Thompson\u200b\u91c7\u6837\u200b\u00b6","text":"<p>Thompson\u200b\u91c7\u6837\u200b\u662f\u200b\u4e00\u79cd\u200b\u57fa\u4e8e\u200b\u8d1d\u53f6\u65af\u200b\u63a8\u65ad\u200b\u7684\u200b\u591a\u81c2\u200b\u8001\u864e\u673a\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u9700\u8981\u200b\u5df2\u77e5\u200b\u6bcf\u4e2a\u200b\u8001\u864e\u673a\u200b\u7684\u200b\u5956\u52b1\u200b\u670d\u4ece\u200b\u67d0\u79cd\u200b\u5206\u5e03\u200b\u3002\u200b\u5728\u200b\u6bcf\u200b\u4e00\u8f6e\u200b\u4e2d\u200b\uff0c\u200b\u667a\u80fd\u200b\u4f53\u4ece\u200b\u6bcf\u4e2a\u200b\u8001\u864e\u673a\u200b\u7684\u200b\u5956\u52b1\u200b\u5206\u5e03\u200b\u4e2d\u200b\u91c7\u6837\u200b\u4e00\u4e2a\u200b\u5956\u52b1\u200b\uff0c\u200b\u9009\u62e9\u200b\u5956\u52b1\u200b\u6700\u5927\u200b\u7684\u200b\u8001\u864e\u673a\u200b\u3002\u200b\u6839\u636e\u200b\u73af\u5883\u200b\u7684\u200b\u53cd\u9988\u200b\uff0c\u200b\u66f4\u65b0\u200b\u6bcf\u4e2a\u200b\u8001\u864e\u673a\u200b\u7684\u200b\u540e\u9a8c\u200b\u5956\u52b1\u200b\u5206\u5e03\u200b\u3002</p>"},{"location":"coding/machine-learning/normalization/","title":"\u5f52\u4e00\u5316","text":"<p>\u200b\u5f52\u4e00\u5316\u200b\u662f\u200b\u6307\u200b\u5c06\u200b\u6570\u636e\u200b\u6309\u7167\u200b\u6bd4\u4f8b\u200b\u7f29\u653e\u200b\uff0c\u200b\u6539\u53d8\u200b\u5176\u200b\u5206\u5e03\u200b\u3002\u200b\u6309\u7167\u200b\u5f52\u4e00\u5316\u200b\u7684\u200b\u7ef4\u5ea6\u200b\u4e0d\u540c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5206\u4e3a\u200b\u4ee5\u4e0b\u200b\u51e0\u79cd\u200b\uff1a</p> <ul> <li>\u200b\u6837\u672c\u200b\u5f52\u4e00\u5316\u200b\uff08Batch Normalization\uff09\uff1a\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u7279\u5f81\u200b\u8fdb\u884c\u200b\u5f52\u4e00\u5316\u200b\uff0c\u200b\u901a\u5e38\u200b\u7528\u4e8e\u200b\u56fe\u50cf\u200b\u6570\u636e\u200b\\(B \\times C \\times H \\times W\\)\uff0c\u200b\u5728\u200b\u540c\u4e00\u200b\\(C\\)\u200b\u7ef4\u5ea6\u200b\u4e0a\u200b\u8ba1\u7b97\u200b\u5747\u503c\u200b\u548c\u200b\u65b9\u5dee\u200b\u3002</li> <li>\u200b\u5c42\u200b\u5f52\u4e00\u5316\u200b\uff08Layer Normalization\uff09\uff1a\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u6837\u672c\u200b\u8fdb\u884c\u200b\u5f52\u4e00\u5316\u200b\uff0c\u200b\u901a\u5e38\u200b\u7528\u4e8e\u200b\u5e8f\u5217\u200b\u6570\u636e\u200b\\(B\\times L \\times D\\)\uff0c\u200b\u5728\u200b\u540c\u4e00\u200b\\(B\\)\u200b\u7ef4\u5ea6\u200b\u4e0a\u200b\u8ba1\u7b97\u200b\u5747\u503c\u200b\u548c\u200b\u65b9\u5dee\u200b\u3002</li> <li>\u200b\u5b9e\u4f8b\u200b\u5f52\u4e00\u5316\u200b\uff08Instance Normalization\uff09\uff1a\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u6837\u672c\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u7279\u5f81\u200b\u7ef4\u5ea6\u200b\u8fdb\u884c\u200b\u5f52\u4e00\u5316\u200b\uff0c\u200b\u5728\u200b\u540c\u4e00\u200b\\(B\\times C\\)\u200b\u7ef4\u5ea6\u200b\u4e0a\u200b\u8ba1\u7b97\u200b\u5747\u503c\u200b\u548c\u200b\u65b9\u5dee\u200b\u3002</li> <li>\u200b\u5206\u7ec4\u200b\u5f52\u4e00\u5316\u200b\uff08Group Normalization\uff09\uff1a\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u6837\u672c\u200b\u4e2d\u200b\u7684\u200b\u7279\u5f81\u200b\u5206\u6210\u200b\u82e5\u5e72\u7ec4\u200b\u540e\u200b\uff0c\u200b\u5728\u200b\u540c\u200b\u4e00\u7ec4\u200b\u5185\u200b\u8fdb\u884c\u200b\u5f52\u4e00\u5316\u200b\u3002</li> </ul> <p>\u200b\u5f52\u4e00\u5316\u200b\u7684\u200b\u65b9\u5f0f\u200b\u4e3a\u200b</p> \\[ x' = \\frac{x - \\mu}{\\sigma} \\times \\gamma + \\beta \\] <p>\u200b\u5176\u4e2d\u200b\\(\\mu, \\sigma\\)\u200b\u5206\u522b\u200b\u4e3a\u200b\u6837\u672c\u5747\u503c\u200b\u548c\u200b\u6807\u51c6\u5dee\u200b\uff0c\\(\\gamma, \\beta\\)\u200b\u4e3a\u200b\u53ef\u200b\u5b66\u4e60\u200b\u7684\u200b\u91cd\u200b\u7f29\u653e\u200b\u53c2\u6570\u200b\u3002\u200b\u7ed9\u5b9a\u200b\u7279\u5f81\u200b\u7ef4\u5ea6\u200b\\(d\\)\uff0c\u200b\u5f52\u4e00\u5316\u200b\u5c42\u200b\u7684\u200b\u53c2\u200b\u6570\u91cf\u200b\u4e3a\u200b\\(2d\\)\u3002</p>"},{"location":"coding/machine-learning/normalization/#rmsnorm","title":"RMSNorm","text":"<p>Zhang\u200b\u7b49\u200b\u4eba\u200b\u5728\u200bLN\u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u200b\u63d0\u51fa\u200b\u4e86\u200bRMSNorm\uff0c\u200b\u76f8\u6bd4\u200b\u4e8e\u200bLN\uff0cRMSNorm\u200b\u4e0d\u200b\u9700\u8981\u200b\u8ba1\u7b97\u200b\u5747\u503c\u200b\u548c\u200b\u65b9\u5dee\u200b\uff0c\u200b\u800c\u662f\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u5747\u200b\u65b9\u6839\u200b\u4f5c\u4e3a\u200b\u5f52\u4e00\u5316\u200b\u7684\u200b\u6807\u51c6\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5728\u200b\u91cd\u200b\u7f29\u653e\u200b\u9636\u6bb5\u200b\u5220\u53bb\u200b\u4e86\u200b\u504f\u7f6e\u200b\\(\\beta\\)\u3002</p> \\[ x' = \\frac{x}{\\sqrt{\\frac{1}{N} \\sum_{i=1}^{N} x_i^2}} \\times \\gamma \\] <pre><code>class RMSNorm(torch.nn.Module):\n    def __init__(self, dim: int, eps=1e-8):\n        super(RMSNorm, self).__init__()\n        self.gamma = torch.nn.Parameter(torch.ones(dim))\n        self.eps = eps\n\n    def forward(self, x: torch.Tensor):\n        return x / torch.sqrt(torch.mean(x ** 2, dim=-1, keepdim=True) + self.eps) * self.gamma\n</code></pre>"},{"location":"coding/machine-learning/positional-embedding/","title":"\u4f4d\u7f6e\u200b\u7f16\u7801","text":"<p>Attention\u200b\u673a\u5236\u200b\u867d\u7136\u200b\u80fd\u200b\u6355\u6349\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u4e0d\u540c\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b\uff0c\u200b\u4f46\u662f\u200b\u65e0\u6cd5\u200b\u533a\u5206\u200b\u4e0d\u540c\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u5143\u7d20\u200b\u3002\u200b\u4e3a\u4e86\u200b\u89e3\u51b3\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\uff0cTransformer\u200b\u6a21\u578b\u200b\u5f15\u5165\u200b\u4e86\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u200b\uff08Positional Encoding\uff09\u3002</p>"},{"location":"coding/machine-learning/positional-embedding/#_2","title":"\u7edd\u5bf9\u200b\u4f4d\u7f6e\u200b\u7f16\u7801","text":"<p>\u200b\u7edd\u5bf9\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u200b\u662f\u200bTransformer\u200b\u6a21\u578b\u200b\u4e2d\u200b\u6700\u65e9\u200b\u5f15\u5165\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u65b9\u5f0f\u200b\uff0c\u200b\u5176\u200b\u6838\u5fc3\u601d\u60f3\u200b\u662f\u200b\u4e3a\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u4f4d\u7f6e\u200b\u5206\u914d\u200b\u4e00\u4e2a\u200b\u552f\u4e00\u200b\u7684\u200b\u5411\u91cf\u200b\uff0c\u200b\u5c06\u200b\u8fd9\u4e2a\u200b\u5411\u91cf\u200b\u548c\u200b\u8f93\u5165\u200b\u5e8f\u5217\u200b\u76f8\u52a0\u200b\u5f97\u5230\u200b\u6700\u7ec8\u200b\u5e8f\u5217\u200b\u7684\u200b\u8868\u793a\u200b\u3002\u200b\u5982\u200bBERT\u200b\u6a21\u578b\u200b\uff0c\u200b\u9650\u5236\u200b\u4e86\u200b\u5e8f\u5217\u200b\u7684\u200b\u6700\u5927\u200b\u957f\u5ea6\u200b\u4e3a\u200b512\uff0c\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u56fa\u5b9a\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u200b\uff0c\u200b\u5c06\u200b\u6bcf\u4e2a\u200b\u4f4d\u7f6e\u200b\u6620\u5c04\u200b\u5230\u200b\u4e00\u4e2a\u200b\u53ef\u200b\u5b66\u4e60\u200b\u7684\u200b\u5411\u91cf\u200b\u3002</p> <pre><code>class AbsolutePE(torch.nn.Module):\n    def __init__(self, max_len: int, d_model: int):\n        super(AbsolutePE, self).__init__()\n        self.pe = torch.nn.Embedding(max_len, d_model)\n\n    def forward(self, x: torch.Tensor) -&gt; torch.Tensor:\n        # x: [N, L]\n        pos = torch.arange(x.size(1), device=x.device).unsqueeze(0)\n        return self.pe(pos) # [1, L, D], can be broadcasted to [N, L, D]\n</code></pre> <p>\u200b\u6b64\u7c7b\u200b\u65b9\u6cd5\u200b\u7684\u200b\u7f3a\u70b9\u200b\u662f\u200b\u65e0\u6cd5\u200b\u5904\u7406\u200b\u8d85\u8fc7\u200b\u6700\u5927\u200b\u957f\u5ea6\u200b\u7684\u200b\u5e8f\u5217\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5ffd\u89c6\u200b\u4e86\u200b\u5143\u7d20\u200b\u4e4b\u95f4\u200b\u7684\u200b\u76f8\u5bf9\u200b\u4f4d\u7f6e\u200b\u5173\u7cfb\u200b\u3002</p>"},{"location":"coding/machine-learning/positional-embedding/#_3","title":"\u6b63\u5f26\u200b\u4f4d\u7f6e\u200b\u7f16\u7801","text":"<p>Vaswani\u200b\u7b49\u200b\u4eba\u200b\u63d0\u51fa\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u6b63\u5f26\u200b\u51fd\u6570\u200b\u548c\u200b\u4e00\u4e2a\u200b\u4f59\u5f26\u200b\u51fd\u6570\u200b\uff0c\u200b\u5176\u200b\u6570\u5b66\u200b\u8868\u8fbe\u200b\u4e3a\u200b\uff1a</p> \\[ \\begin{aligned} PE_{(pos, 2i)} &amp;= \\sin(pos / 10000^{2i / d_{\\text{model}}}) \\\\ PE_{(pos, 2i + 1)} &amp;= \\cos(pos / 10000^{2i / d_{\\text{model}}}) \\\\ \\end{aligned} \\] <p>\u200b\u5176\u4e2d\u200b\uff0c\\(pos\\)\u200b\u8868\u793a\u200b\u4f4d\u7f6e\u200b\uff0c\\(i\\)\u200b\u8868\u793a\u200b\u7ef4\u5ea6\u200b\uff0c\\(d_{\\text{model}}\\)\u200b\u8868\u793a\u200b\u6a21\u578b\u200b\u7684\u200b\u7ef4\u5ea6\u200b\uff0c\u200b\u8f93\u51fa\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u200b\u76f4\u63a5\u200b\u4e0e\u200b\u8f93\u5165\u200b\u5e8f\u5217\u200b\u76f8\u52a0\u200b\u5f97\u5230\u200b\u6700\u7ec8\u200b\u8868\u793a\u200b\u3002\u200b\u6b63\u5f26\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u200b\u4e0d\u200b\u9700\u8981\u200b\u989d\u5916\u200b\u8fdb\u884c\u200b\u5b66\u4e60\u200b\u3002Vaswani\u200b\u7684\u200b\u5b9e\u9a8c\u200b\u8868\u660e\u200b\uff0c\u200b\u56fa\u5b9a\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u200b\u548c\u200b\u53ef\u200b\u5b66\u4e60\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u200b\u5728\u200b\u6027\u80fd\u200b\u4e0a\u200b\u6ca1\u6709\u200b\u663e\u8457\u200b\u5dee\u5f02\u200b\u3002</p> <pre><code>class SinusoidPE(torch.nn.Module):\n    def __init__(self, d_model: int):\n        super(SinusoidPE, self).__init__()\n        self.d_model = d_model\n\n    def _denominator(self, device: torch.device) -&gt; torch.Tensor:\n        return 10000 ** (torch.arange(0, self.d_model, device=device) / self.d_model)\n\n    def forward(self, x: torch.Tensor) -&gt; torch.Tensor:\n        # x: [N, L]\n        pos = torch.arange(x.size(1), device=x.device).unsqueeze(0) # [1, L]\n        pos = pos.unsqueeze(-1) / self._denominator(x.device) # [1, L, D]\n        pos[:, :, 0::2] = torch.sin(pos[:, :, 0::2])\n        pos[:, :, 1::2] = torch.cos(pos[:, :, 1::2])\n        return pos # [1, L, D], can be broadcasted to [N, L, D]\n</code></pre>"},{"location":"coding/machine-learning/positional-embedding/#_4","title":"\u65cb\u8f6c\u200b\u4f4d\u7f6e\u200b\u7f16\u7801","text":"<p>Su\u200b\u7b49\u200b\u4eba\u200b\u63d0\u51fa\u200b\u7684\u200b\u65cb\u8f6c\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u200b\uff08Rotary Positional Embedding\uff0cRoPE\uff09\u3002\u200b\u7f16\u7801\u200b\u7684\u200b\u6838\u5fc3\u601d\u60f3\u200b\u662f\u200b\u901a\u8fc7\u200b\u65cb\u8f6c\u200b\u77e9\u9635\u200b\u5c06\u200b\u4f4d\u7f6e\u200b\u4fe1\u606f\u200b\u5d4c\u5165\u200b\u5230\u200b\u7279\u5f81\u200b\u7a7a\u95f4\u200b\u4e2d\u200b\uff0c\u200b\u4ece\u800c\u200b\u4f7f\u200b\u6a21\u578b\u200b\u80fd\u591f\u200b\u5b66\u4e60\u200b\u5230\u200b\u4f4d\u7f6e\u200b\u4fe1\u606f\u200b\u3002</p> \\[ f_{q, k} \\bsx_m = \\bsR_{\\Theta, m}^d W_{q, k} \\bsx_m \\] <p>\u200b\u5176\u4e2d\u200b\uff0c\\(\\bsR_{\\Theta, m}\\)\u200b\u4e3a\u200b\u65cb\u8f6c\u200b\u77e9\u9635\u200b\uff0c\u200b\u5c06\u200b\u5411\u91cf\u200b\u6bcf\u200b\u4e24\u4e2a\u200b\u5206\u91cf\u200b\u8fdb\u884c\u200b\u65cb\u8f6c\u200b\u3002</p> \\[ \\begin{aligned} \\bsR^k_{\\Theta, m} &amp;= \\begin{bmatrix} \\cos(m\\theta_k) &amp; -\\sin(m\\theta_k) \\\\ \\sin(m\\theta_k) &amp; \\cos(m\\theta_k) \\end{bmatrix} \\\\ \\bsR_{\\Theta, m} &amp;= \\begin{bmatrix} \\bsR^1_{\\Theta, m} &amp; 0 &amp; \\cdots &amp; 0 \\\\ 0 &amp; \\bsR^2_{\\Theta, m} &amp; \\cdots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ 0 &amp; 0 &amp; \\cdots &amp; \\bsR^{d / 2}_{\\Theta, m} \\end{bmatrix}_{d\\times d} \\end{aligned} \\] <p>\u200b\u6ce8\u610f\u200b\uff0c\\(m\\)\u200b\u4e3a\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u53d6\u503c\u200b\u8303\u56f4\u200b\u4e3a\u200b\\(1, \\ldots, L\\)\uff0c\\(k\\)\u200b\u4e3a\u200b\u7ef4\u5ea6\u200b\u4e0b\u6807\u200b\uff0c\u200b\u53d6\u503c\u200b\u8303\u56f4\u200b\u4e3a\u200b\\(1, \\ldots, d / 2\\)\u3002\u200b\u6700\u7ec8\u200b\u7684\u200b\u65cb\u8f6c\u200b\u64cd\u4f5c\u200b\u5c06\u200b\u6bcf\u4e2a\u200b\u4f4d\u7f6e\u200b\\(m\\)\u200b\u7684\u200b\u5411\u91cf\u200b\\(\\bsx_m\\)\u200b\u5e94\u7528\u200b\u65cb\u8f6c\u200b\u77e9\u9635\u200b\\(\\bsR_{\\Theta, m}\\)\uff0c\u200b\u5f97\u5230\u200b\u65b0\u200b\u7684\u200b\u5411\u91cf\u200b\u3002</p> <pre><code>import functools\n\nclass RoPE(torch.nn.Module):\n    def __init__(self, d_model: int, theta: int | float = 10000):\n        super(RoPE, self).__init__()\n        self.d_model = d_model\n        self.theta = theta ** -(torch.arange(0, d_model, 2) / d_model)\n\n    @functools.lru_cache(maxsize=None)\n    def _forward_l(self, L: int) -&gt; torch.Tensor:\n        # Use lru_cache to avoid redundant computation for the same L\n\n        D = self.d_model\n        pos = torch.einsum(\n            'l,d-&gt;ld',\n            torch.arange(L), self.theta\n        )  # [L, D / 2]\n\n        # Major diagonal is cos, cos, ..., cos; D elements\n        cos = torch.cos(pos).repeat_interleave(2)\n        # Minor diagonal is sin, 0, sin, 0, ..., sin; D - 1 elements\n        sin = torch.stack([\n            torch.sin(pos), torch.zeros_like(pos), dim=-1\n        ]).reshape(L, D)[:, :-1]\n\n        result = torch.zeros(L, D, D)\n        result = torch.diagonal_scatter(result, cos, dim1=1, dim2=2)\n        result = torch.diagonal_scatter(result, sin, dim1=1, dim2=2, offset=-1)\n        result = torch.diagonal_scatter(result, -sin, dim1=1, dim2=2, offset=1)\n        return result\n\n    def forward(self, x: torch.Tensor) -&gt; torch.Tensor:\n        # x: [N, L, H, D]\n        _, L, _, D = x.size()\n        rot_matrix = self._forward_l(L).to(x.device)  # [L, D, D]\n        return torch.einsum('lde,nlhe-&gt;nlhd', rot_matrix, x)\n</code></pre> <p>\u200b\u548c\u200b\u5176\u4ed6\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u65b9\u5f0f\u200b\u4e0d\u540c\u200b\uff0cRoPE\u200b\u5728\u200bQKV\u200b\u53d8\u6362\u200b\u540e\u200b\u8fdb\u884c\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u200b\uff0c\u200b\u56e0\u6b64\u200b\u9700\u8981\u200b\u5bf9\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u7684\u200b\u5b9e\u73b0\u200b\u8fdb\u884c\u200b\u4fee\u6539\u200b\u3002</p> <pre><code>class MultiHeadAttention(torch.nn.Module):\n    def __init__(self, d_model: int, num_heads: int, rope: RoPE | None = None):\n        ...\n\n        self.rope = rope\n\n        ...\n\n    def forward(\n        self, x_q: torch.Tensor, x_k: torch.Tensor, x_v: torch.Tensor,\n        padding_mask: torch.Tensor | None = None,\n        attention_mask: torch.Tensor | None = None\n    ) -&gt; torch.Tensor:\n        ...\n\n        if self.rope is not None:\n            Q = self.rope(self.W_Q(x_q).reshape(N, L_Q, self.num_heads, self.d_k))\n            K = self.rope(self.W_K(x_k).reshape(N, L_KV, self.num_heads, self.d_k))\n        else:\n            Q = self.W_Q(x_q).reshape(N, L_Q, self.num_heads, self.d_k)\n            K = self.W_K(x_k).reshape(N, L_KV, self.num_heads, self.d_k)\n        V = self.W_V(x_v).reshape(N, L_KV, self.num_heads, self.d_k)\n\n        ...\n</code></pre> <p>\u200b\u4e3a\u4e86\u200b\u8ba1\u7b97\u200b\u65b9\u4fbf\u200b\uff0cLlama\u200b\u7b49\u200b\u90e8\u5206\u200b\u6a21\u578b\u200b\u7684\u200bRoPE\u200b\u5c06\u200b\u8f93\u5165\u200b\u5411\u91cf\u200b\u5206\u4e3a\u200b\u524d\u540e\u200b\u4e24\u6bb5\u200b\uff0c\u200b\u524d\u540e\u200b\u4e24\u6bb5\u200b\u76f8\u540c\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u5143\u7d20\u200b\u5206\u4e3a\u200b\u4e00\u7ec4\u200b\u8fdb\u884c\u200b\u65cb\u8f6c\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u5c06\u200b\u6574\u4e2a\u200b\u5411\u91cf\u200b\u6309\u7167\u200b\u76f8\u90bb\u200b\u7684\u200b\u4e24\u4e2a\u200b\u5143\u7d20\u200b\u5206\u4e3a\u200b\u4e00\u7ec4\u200b\u8fdb\u884c\u200b\u65cb\u8f6c\u200b\u3002</p>"},{"location":"coding/machine-learning/transformer-variants/","title":"Transformer\u200b\u53d8\u79cd","text":"<p>Transformer\u200b\u53d8\u79cd\u200b\u4e3b\u8981\u200b\u5305\u542b\u200b\u5982\u4e0b\u200b\u51e0\u79cd\u200b\uff1a</p> <ul> <li>\u200b\u6539\u53d8\u200btransformer\u200b\u7684\u200b\u6ce8\u610f\u529b\u200b\u8ba1\u7b97\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u5982\u200bLinformer\u3001Reformer\u200b\u7b49\u200b\uff1b</li> <li>\u200b\u6539\u53d8\u200btransformer\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u65b9\u5f0f\u200b\uff1b</li> <li>\u200b\u6539\u53d8\u200btransformer\u200b\u7684\u200b\u5f52\u4e00\u5316\u200b\u5c42\u200b\uff1b</li> <li>\u200b\u6539\u53d8\u200btransformer\u200b\u7684\u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b\uff1b</li> <li>\u200b\u90e8\u5206\u200b\u8bed\u8a00\u200b\u6a21\u578b\u200b\uff08\u200b\u5982\u200bLlama\uff09\u200b\u4f7f\u7528\u200b\u7684\u200b\u7ebf\u6027\u200b\u5c42\u4e0d\u5e26\u200b\u504f\u7f6e\u200b\uff1b</li> <li>\u200b\u6539\u53d8\u200btransformer\u200b\u5f52\u4e00\u5316\u200b\u5c42\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u662f\u200b\u5148\u200b\u5f52\u4e00\u5316\u200b\u518d\u200b\u52a0\u200b\u6b8b\u5dee\u200b\uff08Pre-Norm\uff09\uff0c\u200b\u8fd8\u662f\u200b\u5148\u52a0\u200b\u6b8b\u5dee\u200b\u518d\u200b\u5f52\u4e00\u5316\u200b\uff08Post-Norm\uff09\u3002</li> </ul>"},{"location":"coding/machine-learning/transformer-variants/#bert","title":"BERT","text":"<p>BERT\u200b\u7684\u200b\u7ed3\u6784\u200b\u7279\u70b9\u200b\u4e3a\u200b\uff1a</p> <ul> <li>encoder-only\uff0c\u200b\u5373\u200b\u4f7f\u7528\u200bBidirectional self-attention\uff1b</li> <li>\u200b\u4f7f\u7528\u200b\u7edd\u5bf9\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u200b\uff1b</li> </ul>"},{"location":"coding/machine-learning/transformer-variants/#llama","title":"Llama","text":"<p>Llama\u200b\u7684\u200b\u7ed3\u6784\u200b\u7279\u70b9\u200b\u4e3a\u200b\uff1a</p> <ul> <li>decoder-only\uff0c\u200b\u5373\u200b\u4f7f\u7528\u200bCausal self-attention\uff1b</li> <li>\u200b\u5168\u90e8\u200b\u4f7f\u7528\u200b\u4e0d\u5e26\u200b\u504f\u7f6e\u200b\u7684\u200b\u7ebf\u6027\u200b\u5c42\u200b\uff1b</li> <li>\u200b\u5728\u200bFFN\u200b\u4e2d\u200b\u4f7f\u7528\u200bSiLU\u200b\u914d\u5408\u200b\u95e8\u63a7\u200b\uff1b</li> <li>\u200b\u4f7f\u7528\u200bRoPE\u200b\u4f4d\u7f6e\u200b\u7f16\u7801\u200b\uff1b</li> <li>\u200b\u4f7f\u7528\u200bRMSNorm\u200b\u5f52\u4e00\u5316\u200b\u5c42\u200b\u3002\u200b\u5f52\u4e00\u5316\u200b\u65b9\u5f0f\u200b\u4e3a\u200bpre-norm\uff0c\u200b\u5373\u5148\u200b\u8fdb\u884c\u200b\u5f52\u4e00\u5316\u200b\uff0c\u200b\u518d\u200b\u8fdb\u884c\u200b\u6ce8\u610f\u529b\u200b\u6216\u8005\u200b\u5168\u200b\u8fde\u63a5\u200b\u8ba1\u7b97\u200b\uff0c\u200b\u7136\u540e\u200b\u52a0\u200b\u6b8b\u5dee\u200b\u3002</li> </ul>"},{"location":"coding/machine-learning/transformer/","title":"transformer","text":"In\u00a0[1]: Copied! <pre>import torch\n</pre> import torch <p>\u200b\u9996\u5148\u200b\u5b9e\u73b0\u200b\u591a\u5934\u200b\u6ce8\u610f\u529b\u200b\u673a\u5236\u200b\u3002</p> In\u00a0[2]: Copied! <pre>class MultiHeadAttention(torch.nn.Module):\n    def __init__(self, d_model: int, num_heads: int):\n        super(MultiHeadAttention, self).__init__()\n        self.d_model = d_model\n        self.num_heads = num_heads\n        if d_model % num_heads != 0:\n            raise ValueError(\"d_model must be divisible by num_heads\")\n\n        self.d_k = d_model // num_heads\n        self.sqrt_d_k = self.d_k ** 0.5\n\n        self.W_Q = torch.nn.Linear(d_model, d_model)\n        self.W_K = torch.nn.Linear(d_model, d_model)\n        self.W_V = torch.nn.Linear(d_model, d_model)\n        self.W_O = torch.nn.Linear(d_model, d_model)\n\n    def forward(\n        self, x_q: torch.Tensor, x_k: torch.Tensor, x_v: torch.Tensor,\n        mask: torch.Tensor | None = None\n    ) -&gt; torch.Tensor:\n        N, L_Q, D = x_q.size()\n        _, L_KV, _ = x_k.size()\n        Q = self.W_Q(x_q).reshape(N, L_Q, self.num_heads, self.d_k)\n        K = self.W_K(x_k).reshape(N, L_KV, self.num_heads, self.d_k)\n        V = self.W_V(x_v).reshape(N, L_KV, self.num_heads, self.d_k)\n\n        score = torch.einsum(\"nihd,njhd-&gt;nijh\", Q, K) / self.sqrt_d_k\n        if mask is not None:\n            # mask: (L, L)\n            score = score.masked_fill(\n                mask.reshape(1, L_Q, L_KV, 1) == 0, float('-inf')\n            )\n        score = torch.nn.functional.softmax(score, dim=2)\n        value = torch.einsum(\"nijh,njhd-&gt;nihd\", score, V).reshape(N, L_Q, self.d_model)\n        return self.W_O(value)\n\n\nclass MultiHeadSelfAttention(MultiHeadAttention):\n    def __init__(self, d_model: int, num_heads: int):\n        super(MultiHeadSelfAttention, self).__init__(d_model, num_heads)\n\n    def forward(self, x: torch.Tensor, mask: torch.Tensor | None = None) -&gt; torch.Tensor:\n        return super().forward(x, x, x, mask)\n\n\nclass MultiHeadCrossAttention(MultiHeadAttention):\n    def __init__(self, d_model: int, num_heads: int):\n        super(MultiHeadCrossAttention, self).__init__(d_model, num_heads)\n\n    def forward(\n        self, x_q: torch.Tensor, x_kv: torch.Tensor,\n        mask: torch.Tensor | None = None\n    ) -&gt; torch.Tensor:\n        return super().forward(x_q, x_kv, x_kv, mask)\n</pre> class MultiHeadAttention(torch.nn.Module):     def __init__(self, d_model: int, num_heads: int):         super(MultiHeadAttention, self).__init__()         self.d_model = d_model         self.num_heads = num_heads         if d_model % num_heads != 0:             raise ValueError(\"d_model must be divisible by num_heads\")          self.d_k = d_model // num_heads         self.sqrt_d_k = self.d_k ** 0.5          self.W_Q = torch.nn.Linear(d_model, d_model)         self.W_K = torch.nn.Linear(d_model, d_model)         self.W_V = torch.nn.Linear(d_model, d_model)         self.W_O = torch.nn.Linear(d_model, d_model)      def forward(         self, x_q: torch.Tensor, x_k: torch.Tensor, x_v: torch.Tensor,         mask: torch.Tensor | None = None     ) -&gt; torch.Tensor:         N, L_Q, D = x_q.size()         _, L_KV, _ = x_k.size()         Q = self.W_Q(x_q).reshape(N, L_Q, self.num_heads, self.d_k)         K = self.W_K(x_k).reshape(N, L_KV, self.num_heads, self.d_k)         V = self.W_V(x_v).reshape(N, L_KV, self.num_heads, self.d_k)          score = torch.einsum(\"nihd,njhd-&gt;nijh\", Q, K) / self.sqrt_d_k         if mask is not None:             # mask: (L, L)             score = score.masked_fill(                 mask.reshape(1, L_Q, L_KV, 1) == 0, float('-inf')             )         score = torch.nn.functional.softmax(score, dim=2)         value = torch.einsum(\"nijh,njhd-&gt;nihd\", score, V).reshape(N, L_Q, self.d_model)         return self.W_O(value)   class MultiHeadSelfAttention(MultiHeadAttention):     def __init__(self, d_model: int, num_heads: int):         super(MultiHeadSelfAttention, self).__init__(d_model, num_heads)      def forward(self, x: torch.Tensor, mask: torch.Tensor | None = None) -&gt; torch.Tensor:         return super().forward(x, x, x, mask)   class MultiHeadCrossAttention(MultiHeadAttention):     def __init__(self, d_model: int, num_heads: int):         super(MultiHeadCrossAttention, self).__init__(d_model, num_heads)      def forward(         self, x_q: torch.Tensor, x_kv: torch.Tensor,         mask: torch.Tensor | None = None     ) -&gt; torch.Tensor:         return super().forward(x_q, x_kv, x_kv, mask) <p>\u200b\u524d\u9988\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u7531\u200b\u4e24\u4e2a\u200b\u5168\u200b\u8fde\u63a5\u200b\u5c42\u200b\u548c\u200bReLU\u200b\u6fc0\u6d3b\u200b\u51fd\u6570\u200b\u7ec4\u6210\u200b</p> In\u00a0[3]: Copied! <pre>class FFN(torch.nn.Module):\n    def __init__(self, input_dim: int, hidden_dim: int):\n        super(FFN, self).__init__()\n        self.fc1 = torch.nn.Linear(input_dim, hidden_dim)\n        self.fc2 = torch.nn.Linear(hidden_dim, input_dim)\n        self.relu = torch.nn.ReLU()\n\n    def forward(self, x):\n        return self.fc2(self.relu(self.fc1(x)))\n</pre> class FFN(torch.nn.Module):     def __init__(self, input_dim: int, hidden_dim: int):         super(FFN, self).__init__()         self.fc1 = torch.nn.Linear(input_dim, hidden_dim)         self.fc2 = torch.nn.Linear(hidden_dim, input_dim)         self.relu = torch.nn.ReLU()      def forward(self, x):         return self.fc2(self.relu(self.fc1(x))) <p>\u200b\u7f16\u7801\u5668\u200b\u5c42\u200b\u7531\u200b\u81ea\u200b\u6ce8\u610f\u529b\u200bc\u200b\u5c42\u200b\u548c\u200b\u524d\u9988\u200b\u795e\u7ecf\u200b\u7f51\u7edc\u5c42\u200b\u7ec4\u6210\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u7f16\u7801\u5668\u200b\u7531\u200b\u591a\u4e2a\u200b\u8fd9\u6837\u200b\u7684\u200b\u5c42\u200b\u4e32\u8054\u200b\u7ec4\u6210\u200b</p> In\u00a0[4]: Copied! <pre>class EncoderLayer(torch.nn.Module):\n    def __init__(\n        self, input_dim: int, num_heads: int,\n        ffn_dim: int | None = None, dropout: float = 0.1,\n        layer_norm_eps: float = 1e-6\n    ):\n        super(EncoderLayer, self).__init__()\n\n        if ffn_dim is None:\n            ffn_dim = input_dim * 4\n\n        self.attention = MultiHeadSelfAttention(input_dim, num_heads)\n        self.norm1 = torch.nn.LayerNorm(input_dim, layer_norm_eps)\n        self.dropout1 = torch.nn.Dropout(dropout)\n\n        self.ffn = FFN(input_dim, ffn_dim)\n        self.norm2 = torch.nn.LayerNorm(input_dim, layer_norm_eps)\n        self.dropout2 = torch.nn.Dropout(dropout)\n\n    def forward(self, x, mask):\n        x = x + self.dropout1(self.attention(x, mask))\n        x = self.norm1(x)\n\n        x = x + self.dropout2(self.ffn(x))\n        x = self.norm2(x)\n\n        return x\n\n\nclass Encoder(torch.nn.Module):\n    def __init__(\n        self, num_layers: int, input_dim: int, num_heads: int,\n        ffn_dim: int | None = None, dropout: float = 0.1,\n        layer_norm_eps: float = 1e-6\n    ):\n        super(Encoder, self).__init__()\n\n        self.layers = torch.nn.ModuleList([\n            EncoderLayer(input_dim, num_heads, ffn_dim, dropout, layer_norm_eps)\n            for _ in range(num_layers)\n        ])\n\n    def forward(self, x, mask):\n        # x: (N, L, D)\n        for layer in self.layers:\n            x = layer(x, mask)\n        return x\n</pre> class EncoderLayer(torch.nn.Module):     def __init__(         self, input_dim: int, num_heads: int,         ffn_dim: int | None = None, dropout: float = 0.1,         layer_norm_eps: float = 1e-6     ):         super(EncoderLayer, self).__init__()          if ffn_dim is None:             ffn_dim = input_dim * 4          self.attention = MultiHeadSelfAttention(input_dim, num_heads)         self.norm1 = torch.nn.LayerNorm(input_dim, layer_norm_eps)         self.dropout1 = torch.nn.Dropout(dropout)          self.ffn = FFN(input_dim, ffn_dim)         self.norm2 = torch.nn.LayerNorm(input_dim, layer_norm_eps)         self.dropout2 = torch.nn.Dropout(dropout)      def forward(self, x, mask):         x = x + self.dropout1(self.attention(x, mask))         x = self.norm1(x)          x = x + self.dropout2(self.ffn(x))         x = self.norm2(x)          return x   class Encoder(torch.nn.Module):     def __init__(         self, num_layers: int, input_dim: int, num_heads: int,         ffn_dim: int | None = None, dropout: float = 0.1,         layer_norm_eps: float = 1e-6     ):         super(Encoder, self).__init__()          self.layers = torch.nn.ModuleList([             EncoderLayer(input_dim, num_heads, ffn_dim, dropout, layer_norm_eps)             for _ in range(num_layers)         ])      def forward(self, x, mask):         # x: (N, L, D)         for layer in self.layers:             x = layer(x, mask)         return x <p>\u200b\u89e3\u7801\u5668\u200b\u5c42\u200b\u7531\u200b\u81ea\u200b\u6ce8\u610f\u529b\u200b\u5c42\u200b\uff0c\u200b\u4ea4\u53c9\u200b\u6ce8\u610f\u529b\u200b\u5c42\u200b\u548c\u200b\u524d\u9988\u200b\u795e\u7ecf\u200b\u7f51\u7edc\u5c42\u200b\u7ec4\u6210\u200b\u3002</p> In\u00a0[5]: Copied! <pre>class DecoderLayer(torch.nn.Module):\n    def __init__(\n        self, input_dim: int, num_heads: int,\n        ffn_dim: int | None = None, dropout: float = 0.1\n    ):\n        super(DecoderLayer, self).__init__()\n\n        if ffn_dim is None:\n            ffn_dim = input_dim * 4\n\n        self.self_attention = MultiHeadSelfAttention(input_dim, num_heads)\n        self.norm1 = torch.nn.LayerNorm(input_dim)\n        self.dropout1 = torch.nn.Dropout(dropout)\n\n        self.cross_attention = MultiHeadCrossAttention(input_dim, num_heads)\n        self.norm2 = torch.nn.LayerNorm(input_dim)\n        self.dropout2 = torch.nn.Dropout(dropout)\n\n        self.ffn = FFN(input_dim, ffn_dim)\n        self.norm3 = torch.nn.LayerNorm(input_dim)\n        self.dropout3 = torch.nn.Dropout(dropout)\n\n    def forward(\n        self, x: torch.Tensor, memory: torch.Tensor, tgt_mask: torch.Tensor | None = None\n    ):\n\n        x = x + self.dropout1(self.self_attention(x, tgt_mask))\n        x = self.norm1(x)\n\n        x = x + self.dropout2(self.cross_attention(x, memory))\n        x = self.norm2(x)\n\n        x = x + self.dropout3(self.ffn(x))\n        x = self.norm3(x)\n\n        return x\n\n\nclass Decoder(torch.nn.Module):\n    def __init__(\n        self, num_layers: int, input_dim: int, num_heads: int,\n        ffn_dim: int | None = None, dropout: float = 0.1\n    ):\n        super(Decoder, self).__init__()\n\n        self.layers = torch.nn.ModuleList([\n            DecoderLayer(input_dim, num_heads, ffn_dim, dropout)\n            for _ in range(num_layers)\n        ])\n\n    def forward(self, x, memory, tgt_mask):\n        # x: (N, L, D)\n        for layer in self.layers:\n            x = layer(x, memory, tgt_mask)\n        return x\n</pre> class DecoderLayer(torch.nn.Module):     def __init__(         self, input_dim: int, num_heads: int,         ffn_dim: int | None = None, dropout: float = 0.1     ):         super(DecoderLayer, self).__init__()          if ffn_dim is None:             ffn_dim = input_dim * 4          self.self_attention = MultiHeadSelfAttention(input_dim, num_heads)         self.norm1 = torch.nn.LayerNorm(input_dim)         self.dropout1 = torch.nn.Dropout(dropout)          self.cross_attention = MultiHeadCrossAttention(input_dim, num_heads)         self.norm2 = torch.nn.LayerNorm(input_dim)         self.dropout2 = torch.nn.Dropout(dropout)          self.ffn = FFN(input_dim, ffn_dim)         self.norm3 = torch.nn.LayerNorm(input_dim)         self.dropout3 = torch.nn.Dropout(dropout)      def forward(         self, x: torch.Tensor, memory: torch.Tensor, tgt_mask: torch.Tensor | None = None     ):          x = x + self.dropout1(self.self_attention(x, tgt_mask))         x = self.norm1(x)          x = x + self.dropout2(self.cross_attention(x, memory))         x = self.norm2(x)          x = x + self.dropout3(self.ffn(x))         x = self.norm3(x)          return x   class Decoder(torch.nn.Module):     def __init__(         self, num_layers: int, input_dim: int, num_heads: int,         ffn_dim: int | None = None, dropout: float = 0.1     ):         super(Decoder, self).__init__()          self.layers = torch.nn.ModuleList([             DecoderLayer(input_dim, num_heads, ffn_dim, dropout)             for _ in range(num_layers)         ])      def forward(self, x, memory, tgt_mask):         # x: (N, L, D)         for layer in self.layers:             x = layer(x, memory, tgt_mask)         return x <p>Transformer\u200b\u6a21\u578b\u200b\u7531\u200b\u7f16\u7801\u5668\u200b\u548c\u200b\u89e3\u7801\u5668\u200b\u7ec4\u6210\u200b\uff0c\u200b\u7f16\u7801\u5668\u200b\u5904\u7406\u200b\u6e90\u200b\u5e8f\u5217\u200b\uff0c\u200b\u5c06\u200b\u7f16\u7801\u200b\u540e\u200b\u7684\u200b\u5e8f\u5217\u200b\u8f93\u5165\u200b\u5230\u200b\u89e3\u7801\u5668\u200b\u4e2d\u200b\uff0c\u200b\u89e3\u7801\u5668\u200b\u751f\u6210\u200b\u76ee\u6807\u200b\u5e8f\u5217\u200b\u3002</p> In\u00a0[6]: Copied! <pre>class CustomTransformer(torch.nn.Module):\n    def __init__(\n        self, num_layers: int, num_decoder_layers: int, input_dim: int, num_heads: int,\n        ffn_dim: int | None = None, dropout: float = 0.1, layer_norm_eps: float = 1e-6\n    ):\n        super(CustomTransformer, self).__init__()\n        self.encoder = Encoder(num_layers, input_dim, num_heads, ffn_dim, dropout, layer_norm_eps)\n        self.decoder = Decoder(num_decoder_layers, input_dim, num_heads, ffn_dim, dropout)\n\n    def forward(self, src, tgt, src_mask: torch.Tensor | None = None, tgt_mask: torch.Tensor | None = None):\n        memory = self.encoder(src, src_mask)\n        return self.decoder(tgt, memory, tgt_mask)\n</pre> class CustomTransformer(torch.nn.Module):     def __init__(         self, num_layers: int, num_decoder_layers: int, input_dim: int, num_heads: int,         ffn_dim: int | None = None, dropout: float = 0.1, layer_norm_eps: float = 1e-6     ):         super(CustomTransformer, self).__init__()         self.encoder = Encoder(num_layers, input_dim, num_heads, ffn_dim, dropout, layer_norm_eps)         self.decoder = Decoder(num_decoder_layers, input_dim, num_heads, ffn_dim, dropout)      def forward(self, src, tgt, src_mask: torch.Tensor | None = None, tgt_mask: torch.Tensor | None = None):         memory = self.encoder(src, src_mask)         return self.decoder(tgt, memory, tgt_mask) <p>\u200b\u5c06\u200bPyTorch\u200b\u5185\u90e8\u200b\u5b9e\u73b0\u200b\u7684\u200bTransformer\u200b\u6743\u91cd\u200b\u590d\u5236\u5230\u200b\u5b9e\u73b0\u200b\u7684\u200bTransformer\u200b\u4e2d\u200b\u3002</p> In\u00a0[7]: Copied! <pre>def _attn_load_from_torch(\n    custom_attn: MultiHeadAttention, torch_attn: torch.nn.MultiheadAttention\n):\n    embed_dim = custom_attn.d_model\n\n    def split_qkv(weight, embed_dim):\n        return weight[:embed_dim], weight[embed_dim: 2 * embed_dim], weight[2 * embed_dim:3 * embed_dim]\n    custom_attn.W_Q.weight.data, \\\n        custom_attn.W_K.weight.data, \\\n        custom_attn.W_V.weight.data = split_qkv(\n            torch_attn.in_proj_weight.data, embed_dim\n    )\n\n    custom_attn.W_Q.bias.data, \\\n        custom_attn.W_K.bias.data, \\\n        custom_attn.W_V.bias.data = split_qkv(\n            torch_attn.in_proj_bias.data, embed_dim\n    )\n\n    custom_attn.W_O.weight.data = torch_attn.out_proj.weight.data\n    custom_attn.W_O.bias.data = torch_attn.out_proj.bias.data\n\n    return custom_attn\n\n\ndef load_from_torch(\n    custom_transformer: CustomTransformer, torch_transformer: torch.nn.Transformer\n):\n    for custom_layer, torch_layer in zip(\n        [*custom_transformer.encoder.layers, *custom_transformer.decoder.layers],\n        [*torch_transformer.encoder.layers, *torch_transformer.decoder.layers],\n    ):\n\n        if hasattr(custom_layer, 'cross_attention'):\n            # Decoder\n            custom_layer.self_attention = _attn_load_from_torch(\n                custom_layer.self_attention, torch_layer.self_attn\n            )\n            custom_layer.cross_attention = _attn_load_from_torch(\n                custom_layer.cross_attention, torch_layer.multihead_attn\n            )\n        else:\n            # Encoder\n            custom_layer.attention = _attn_load_from_torch(\n                custom_layer.attention, torch_layer.self_attn\n            )\n\n        layer_pairs = [\n            (custom_layer.norm1, torch_layer.norm1),\n            (custom_layer.ffn.fc1, torch_layer.linear1),\n            (custom_layer.ffn.fc2, torch_layer.linear2),\n            (custom_layer.norm2, torch_layer.norm2)\n        ]\n        for custom, torch in layer_pairs:\n            custom.weight.data = torch.weight.data\n            custom.bias.data = torch.bias.data\n    return custom_transformer\n</pre> def _attn_load_from_torch(     custom_attn: MultiHeadAttention, torch_attn: torch.nn.MultiheadAttention ):     embed_dim = custom_attn.d_model      def split_qkv(weight, embed_dim):         return weight[:embed_dim], weight[embed_dim: 2 * embed_dim], weight[2 * embed_dim:3 * embed_dim]     custom_attn.W_Q.weight.data, \\         custom_attn.W_K.weight.data, \\         custom_attn.W_V.weight.data = split_qkv(             torch_attn.in_proj_weight.data, embed_dim     )      custom_attn.W_Q.bias.data, \\         custom_attn.W_K.bias.data, \\         custom_attn.W_V.bias.data = split_qkv(             torch_attn.in_proj_bias.data, embed_dim     )      custom_attn.W_O.weight.data = torch_attn.out_proj.weight.data     custom_attn.W_O.bias.data = torch_attn.out_proj.bias.data      return custom_attn   def load_from_torch(     custom_transformer: CustomTransformer, torch_transformer: torch.nn.Transformer ):     for custom_layer, torch_layer in zip(         [*custom_transformer.encoder.layers, *custom_transformer.decoder.layers],         [*torch_transformer.encoder.layers, *torch_transformer.decoder.layers],     ):          if hasattr(custom_layer, 'cross_attention'):             # Decoder             custom_layer.self_attention = _attn_load_from_torch(                 custom_layer.self_attention, torch_layer.self_attn             )             custom_layer.cross_attention = _attn_load_from_torch(                 custom_layer.cross_attention, torch_layer.multihead_attn             )         else:             # Encoder             custom_layer.attention = _attn_load_from_torch(                 custom_layer.attention, torch_layer.self_attn             )          layer_pairs = [             (custom_layer.norm1, torch_layer.norm1),             (custom_layer.ffn.fc1, torch_layer.linear1),             (custom_layer.ffn.fc2, torch_layer.linear2),             (custom_layer.norm2, torch_layer.norm2)         ]         for custom, torch in layer_pairs:             custom.weight.data = torch.weight.data             custom.bias.data = torch.bias.data     return custom_transformer <p>\u200b\u901a\u8fc7\u200b\u4ee3\u7801\u200b\u9a8c\u8bc1\u200b\u5b9e\u73b0\u200b\u7684\u200bTransformer\u200b\u6a21\u578b\u200b\u7684\u200b\u6b63\u786e\u6027\u200b\u3002</p> In\u00a0[8]: Copied! <pre>transformer_config = {\n    'num_layers': 6,\n    'num_decoder_layers': 6,\n    'input_dim': 512,\n    'num_heads': 8,\n    'ffn_dim': 2048,\n    'dropout': 0.1,\n    'layer_norm_eps': 1e-6\n}\n\ncustom_transformer = CustomTransformer(**transformer_config)\ntorch_transformer = torch.nn.Transformer(\n    d_model=transformer_config['input_dim'],\n    nhead=transformer_config['num_heads'],\n    num_encoder_layers=transformer_config['num_layers'],\n    num_decoder_layers=transformer_config['num_decoder_layers'],\n    dim_feedforward=transformer_config['ffn_dim'],\n    dropout=transformer_config['dropout'],\n    batch_first=True\n)\ncustom_transformer = load_from_torch(custom_transformer, torch_transformer)\ncustom_transformer.eval()\ntorch_transformer.eval()\n\nsrc = torch.randn(32, 10, transformer_config['input_dim'])\ntgt = torch.randn(32, 20, transformer_config['input_dim'])\ntgt_mask = 1 - torch.triu(torch.ones(20, 20), diagonal=1)\n\ncustom_output = custom_transformer(src, tgt, tgt_mask=tgt_mask)\ntorch_output = torch_transformer(src, tgt, tgt_mask=tgt_mask, tgt_is_causal=True)\ncustom_output[0, 0, :5], torch_output[0, 0, :5]\n</pre> transformer_config = {     'num_layers': 6,     'num_decoder_layers': 6,     'input_dim': 512,     'num_heads': 8,     'ffn_dim': 2048,     'dropout': 0.1,     'layer_norm_eps': 1e-6 }  custom_transformer = CustomTransformer(**transformer_config) torch_transformer = torch.nn.Transformer(     d_model=transformer_config['input_dim'],     nhead=transformer_config['num_heads'],     num_encoder_layers=transformer_config['num_layers'],     num_decoder_layers=transformer_config['num_decoder_layers'],     dim_feedforward=transformer_config['ffn_dim'],     dropout=transformer_config['dropout'],     batch_first=True ) custom_transformer = load_from_torch(custom_transformer, torch_transformer) custom_transformer.eval() torch_transformer.eval()  src = torch.randn(32, 10, transformer_config['input_dim']) tgt = torch.randn(32, 20, transformer_config['input_dim']) tgt_mask = 1 - torch.triu(torch.ones(20, 20), diagonal=1)  custom_output = custom_transformer(src, tgt, tgt_mask=tgt_mask) torch_output = torch_transformer(src, tgt, tgt_mask=tgt_mask, tgt_is_causal=True) custom_output[0, 0, :5], torch_output[0, 0, :5] Out[8]: <pre>(tensor([ 0.6672,  0.4102, -0.2145,  1.8782,  0.4108], grad_fn=&lt;SliceBackward0&gt;),\n tensor([ 0.6672,  0.4102, -0.2145,  1.8781,  0.4108], grad_fn=&lt;SliceBackward0&gt;))</pre> In\u00a0[9]: Copied! <pre>torch.allclose(custom_output, torch_output, atol=1e-4)\n</pre> torch.allclose(custom_output, torch_output, atol=1e-4) Out[9]: <pre>True</pre>"},{"location":"coding/machine-learning/upper-confidence-bound/","title":"\u7f6e\u4fe1\u200b\u4e0a\u200b\u754c\u200b\u7b97\u6cd5","text":"<p>\u200b\u7f6e\u4fe1\u200b\u4e0a\u200b\u754c\u200b\uff08Upper Confidence Bound, UCB\uff09\u200b\u7b97\u6cd5\u200b\u7684\u200b\u6838\u5fc3\u601d\u60f3\u200b\u662f\u200b\u5c06\u200b\u5c1d\u8bd5\u200b\u6b21\u6570\u200b\u7eb3\u5165\u200b\u8003\u8651\u200b\uff0c\u200b\u5c1d\u8bd5\u200b\u6b21\u6570\u200b\u8f83\u5c11\u200b\u7684\u200b\u52a8\u4f5c\u200b\u6709\u200b\u66f4\u200b\u5927\u200b\u7684\u200b\u4e0d\u786e\u5b9a\u6027\u200b\uff0c\u200b\u7b97\u6cd5\u200b\u4f1a\u200b\u5c3d\u53ef\u80fd\u200b\u4e50\u89c2\u200b\u5730\u200b\u8003\u8651\u200b\u8fd9\u4e9b\u200b\u6ca1\u6709\u200b\u5c1d\u8bd5\u200b\u8fc7\u200b\u7684\u200b\u52a8\u4f5c\u200b\uff0c\u200b\u5e76\u200b\u4f18\u5148\u200b\u63a2\u7d22\u200b\u8fd9\u4e9b\u200b\u52a8\u4f5c\u200b\u3002\u200b\u5728\u200b\u6bcf\u4e2a\u200b\u52a8\u4f5c\u200b\u63a2\u7d22\u200b\u6bd4\u8f83\u200b\u6df1\u5165\u200b\u540e\u200b\uff0c\u200b\u518d\u200b\u8f6c\u5411\u200b\u5229\u7528\u200b\u5956\u52b1\u200b\u8f83\u200b\u9ad8\u200b\u7684\u200b\u52a8\u4f5c\u200b\u3002</p> <p>\u200b\u5f15\u7406\u200b</p> <p>\u200b\u8bbe\u200b\u968f\u673a\u53d8\u91cf\u200b\\(X_1, \\ldots, X_n\\)\u200b\u72ec\u7acb\u200b\u540c\u200b\u5206\u5e03\u200b\uff0c\u200b\u5747\u503c\u200b\u4e3a\u200b\\(0\\)\uff0c\u200b\u5bf9\u200b\u5747\u503c\u200b\u7684\u200b\u4f30\u8ba1\u200b\u4e3a\u200b</p> \\[ \\hat \\mu = \\frac{1}{n}\\sum_{i=1}^n X_i \\] <p>\u200b\u5219\u200b\u5bf9\u200b\u4efb\u610f\u200b\\(\\delta &gt; 0\\)\uff0c\u200b\u6709\u200b</p> \\[ P(\\hat\\mu &gt; \\delta) \\leq \\exp(-n\\delta^2 / 2) \\] <p>\u200b\u8be5\u200b\u5f15\u7406\u200b\u79f0\u4e3a\u200bHoeffding\u200b\u4e0d\u7b49\u5f0f\u200b\u3002</p> <p>\u200b\u4ee4\u200b\\(\\varepsilon = \\exp(-2n\\delta^2)\\)\uff0c\u200b\u5373\u200b\\(\\delta = \\sqrt{\\frac{-2\\log\\varepsilon}{n}}\\)</p> \\[ P\\left(\\hat\\mu &gt; \\sqrt{\\frac{-2\\log\\varepsilon}{n}}\\right) \\leq \\varepsilon \\] <p>\u200b\u5bf9\u4e8e\u200b\u6bcf\u4e2a\u200b\u52a8\u4f5c\u200b\\(k\\)\uff0c\u200b\u6211\u4eec\u200b\u5c1d\u8bd5\u200b\u4e86\u200b\\(n_k\\)\u200b\u6b21\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u5c1d\u8bd5\u200b\u7684\u200b\u5956\u52b1\u200b\u4e3a\u200b\\(X_1, \\ldots, X_{n_k}\\)\uff0c\u200b\u89c2\u6d4b\u200b\u5230\u200b\u7684\u200b\u5e73\u5747\u200b\u5956\u52b1\u200b\u4e3a\u200b\\(\\hat\\mu_k\\)\uff0c\u200b\u5b9a\u4e49\u200b\\(\\tilde X_i = X_i - \\hat\\mu_k\\)\uff0c\u200b\u5219\u200b\\(\\tilde X_1, \\ldots, \\tilde X_{n_k}\\)\u200b\u72ec\u7acb\u200b\u540c\u200b\u5206\u5e03\u200b\uff0c\u200b\u5747\u503c\u200b\u4e3a\u200b\\(0\\)\u3002</p> <p>\u200b\u4ee4\u200b\u5bf9\u200b\\(\\tilde X_1, \\ldots, \\tilde X_{n_k}\\)\u200b\u4f30\u8ba1\u200b\u7684\u200b\u5747\u503c\u200b\u4e3a\u200b\\(\\hat\\mu_0\\)\uff0c\u200b\u6211\u4eec\u200b\u6709\u200b\\(1 - \\varepsilon\\)\u200b\u7684\u200b\u6982\u7387\u200b\u4fdd\u8bc1\u200b\\(\\hat\\mu_0\\)\u200b\u4e0d\u200b\u8d85\u8fc7\u200b\\(\\sqrt{\\frac{-2\\log\\varepsilon}{n_k}}\\)\u3002</p> \\[ P\\left(\\hat\\mu_0 &gt; \\sqrt{\\frac{-2\\log\\varepsilon}{n_k}}\\right) \\leq \\varepsilon \\] <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u53d6\u200b\\(\\hat\\mu_k + \\sqrt{\\frac{-2\\log\\varepsilon}{n_k}}\\)\u200b\u4f5c\u4e3a\u200b\u52a8\u4f5c\u200b\\(k\\)\u200b\u7684\u200b\u7f6e\u4fe1\u200b\u4e0a\u200b\u754c\u200b\u3002\u200b\u901a\u8fc7\u200b\u8c03\u6574\u200b\\(\\varepsilon\\)\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u63a7\u5236\u200b\u7f6e\u4fe1\u200b\u4e0a\u754c\u200b\u7684\u200b\u5bbd\u5ea6\u200b\u4ee5\u200b\u5728\u200b\u63a2\u7d22\u200b\u548c\u200b\u5229\u7528\u200b\u4e4b\u524d\u200b\u53d6\u5f97\u200b\u5e73\u8861\u200b\u3002</p> <p>\u200b\u901a\u5e38\u200b\u91c7\u53d6\u200b\u7684\u200b\u7b56\u7565\u200b\u662f\u200b\u53d6\u200b\\(\\varepsilon = 1/t\\)\uff0c\\(t\\)\u200b\u4e3a\u200b\u603b\u200b\u8f6e\u6b21\u200b\uff0c\u200b\u4ee5\u200b\u4fdd\u8bc1\u200b\u968f\u7740\u200b\u5c1d\u8bd5\u200b\u6b21\u6570\u200b\u7684\u200b\u589e\u52a0\u200b\uff0c\u200b\u7f6e\u4fe1\u200b\u4e0a\u754c\u200b\u7684\u200b\u5bbd\u5ea6\u200b\u9010\u6e10\u200b\u51cf\u5c0f\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u7b97\u6cd5\u200b\u9010\u6b65\u200b\u8f6c\u5411\u200b\u5229\u7528\u200b\uff0c\u200b\u6b64\u65f6\u200b\u6709\u200b</p> \\[ \\hat\\mu_k + \\sqrt{\\frac{2\\log t}{n_k}} \\] <p>\u200b\u6b64\u5916\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u5176\u4ed6\u200b\u7684\u200b\u4e0a\u754c\u200b\u5bbd\u5ea6\u200b\uff0c\u200b\u5982\u200b</p> \\[ \\varepsilon = \\frac{1}{1 + t\\log^2 t} \\] <p>\u200b\u5728\u5b9e\u8df5\u4e2d\u200b\uff0c\u200b\u901a\u5e38\u200b\u8fd8\u4f1a\u200b\u5f15\u5165\u200b\u4e00\u4e2a\u200b\u53c2\u6570\u200b\\(c\\)\u200b\u63a7\u5236\u200b\u5bbd\u5ea6\u200b\uff0c\u200b\u5373\u200b</p> \\[ \\hat \\mu_k + c\\cdot\\sqrt{\\frac{\\log t}{n_k}} \\]"},{"location":"coding/machine-learning/vae/","title":"Variational Autoencoder","text":"In\u00a0[1]: Copied! <pre>import torch\nimport torchvision\nfrom torch.utils.data import DataLoader\n\n# SVG output\n%config InlineBackend.figure_format = 'svg'\n\n# Fix for certificate error\n# https://stackoverflow.com/questions/71263622\nimport ssl\nssl._create_default_https_context = ssl._create_unverified_context\n</pre> import torch import torchvision from torch.utils.data import DataLoader  # SVG output %config InlineBackend.figure_format = 'svg'  # Fix for certificate error # https://stackoverflow.com/questions/71263622 import ssl ssl._create_default_https_context = ssl._create_unverified_context <p>\u200b\u5bfc\u5165\u200bMNIST\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u4f7f\u7528\u200bVAE\u200b\u751f\u6210\u200b\u624b\u5199\u200b\u6570\u5b57\u200b\u56fe\u7247\u200b\u3002</p> In\u00a0[2]: Copied! <pre>train_dataset = torchvision.datasets.MNIST(\n    train=True, root='data',\n    transform=torchvision.transforms.ToTensor(), download=True\n)\ntest_dataset = torchvision.datasets.MNIST(\n    train=True, root='data',\n    transform=torchvision.transforms.ToTensor(), download=True\n)\ntrain_loader = DataLoader(train_dataset, batch_size=128, shuffle=True, num_workers=8)\ntest_loader = DataLoader(test_dataset, batch_size=512, shuffle=False, num_workers=8)\n</pre> train_dataset = torchvision.datasets.MNIST(     train=True, root='data',     transform=torchvision.transforms.ToTensor(), download=True ) test_dataset = torchvision.datasets.MNIST(     train=True, root='data',     transform=torchvision.transforms.ToTensor(), download=True ) train_loader = DataLoader(train_dataset, batch_size=128, shuffle=True, num_workers=8) test_loader = DataLoader(test_dataset, batch_size=512, shuffle=False, num_workers=8) <p>VAE\u200b\u4e2d\u200b\u7684\u200b\u89e3\u7801\u5668\u200b\u626e\u6f14\u200b\u548c\u200bGAN\u200b\u4e2d\u200b\u751f\u6210\u5668\u200b\u76f8\u8fd1\u200b\u7684\u200b\u89d2\u8272\u200b\uff0c\u200b\u63a5\u53d7\u200b$d$\u200b\u7ef4\u200b\u7684\u200b\u9690\u200b\u5411\u91cf\u200b$z$\u200b\u5e76\u200b\u8f93\u51fa\u200b$x$\u200b\u7684\u200b\u6982\u7387\u5206\u5e03\u200b\u3002\u200b\u6ce8\u610f\u200b\u8f93\u51fa\u200b\u4e2d\u200b\u5305\u542b\u200b\u4e24\u4e2a\u200b\u901a\u9053\u200b\uff0c\u200b\u7b2c\u4e00\u4e2a\u200b\u901a\u9053\u200b\u4e3a\u200b\u5747\u503c\u200b\uff0c\u200b\u7b2c\u4e8c\u4e2a\u200b\u901a\u9053\u200b\u4e3a\u200b\u5bf9\u6570\u200b\u6807\u51c6\u5dee\u200b\u3002</p> In\u00a0[3]: Copied! <pre>class Reshape(torch.nn.Module):\n    def __init__(self, *shape):\n        super(Reshape, self).__init__()\n        self.shape = shape\n\n    def forward(self, x):\n        return x.view(x.shape[0], *self.shape)\n\nclass Decoder(torch.nn.Module):\n    def __init__(self, hidden_size: int):\n        super(Decoder, self).__init__()\n        self.fcn = torch.nn.Sequential(\n            torch.nn.Linear(in_features=hidden_size, out_features=32 * 7 * 7),\n            torch.nn.LeakyReLU(0.2),\n            Reshape(32, 7, 7),\n        )\n\n        self.deconv = torch.nn.Sequential(\n            torch.nn.ConvTranspose2d(\n                in_channels=32,\n                out_channels=128,\n                kernel_size=(4, 4),\n                stride=(2, 2),\n                padding=(1, 1),\n            ),\n            torch.nn.LeakyReLU(0.2),\n            torch.nn.ConvTranspose2d(\n                in_channels=128,\n                out_channels=128,\n                kernel_size=(4, 4),\n                stride=(2, 2),\n                padding=(1, 1),\n            ),\n            torch.nn.LeakyReLU(0.2),\n            torch.nn.Conv2d(\n                in_channels=128, out_channels=2, kernel_size=(3, 3), padding=(1, 1)\n            ),\n            torch.nn.Tanh(),\n        )\n        self.layers = torch.nn.Sequential(self.fcn, self.deconv)\n\n    def forward(self, x):\n        for layer in self.layers:\n            x = layer(x)\n        return x\n</pre> class Reshape(torch.nn.Module):     def __init__(self, *shape):         super(Reshape, self).__init__()         self.shape = shape      def forward(self, x):         return x.view(x.shape[0], *self.shape)  class Decoder(torch.nn.Module):     def __init__(self, hidden_size: int):         super(Decoder, self).__init__()         self.fcn = torch.nn.Sequential(             torch.nn.Linear(in_features=hidden_size, out_features=32 * 7 * 7),             torch.nn.LeakyReLU(0.2),             Reshape(32, 7, 7),         )          self.deconv = torch.nn.Sequential(             torch.nn.ConvTranspose2d(                 in_channels=32,                 out_channels=128,                 kernel_size=(4, 4),                 stride=(2, 2),                 padding=(1, 1),             ),             torch.nn.LeakyReLU(0.2),             torch.nn.ConvTranspose2d(                 in_channels=128,                 out_channels=128,                 kernel_size=(4, 4),                 stride=(2, 2),                 padding=(1, 1),             ),             torch.nn.LeakyReLU(0.2),             torch.nn.Conv2d(                 in_channels=128, out_channels=2, kernel_size=(3, 3), padding=(1, 1)             ),             torch.nn.Tanh(),         )         self.layers = torch.nn.Sequential(self.fcn, self.deconv)      def forward(self, x):         for layer in self.layers:             x = layer(x)         return x <p>\u200b\u7f16\u7801\u5668\u200b\u4e0e\u200b\u89e3\u7801\u5668\u200b\u76f8\u53cd\u200b\uff0c\u200b\u7f16\u7801\u5668\u200b\u8f93\u51fa\u200b\u4e24\u4e2a\u200b\u7ef4\u5ea6\u200b\u4e3a\u200b$d$\u200b\u7684\u200b\u5411\u91cf\u200b\u6765\u200b\u8868\u793a\u200b$z$\u200b\u7684\u200b\u5206\u5e03\u200b\u3002</p> In\u00a0[4]: Copied! <pre>class Encoder(torch.nn.Module):\n    def __init__(self, hidden_size: int):\n        super(Encoder, self).__init__()\n        self.conv = torch.nn.Sequential(\n            Reshape(1, 28, 28),\n            torch.nn.Conv2d(\n                in_channels=1,\n                out_channels=64,\n                kernel_size=(4, 4),\n                stride=(2, 2),\n                padding=(1, 1),\n            ),\n            torch.nn.LeakyReLU(0.2),\n            torch.nn.Conv2d(\n                in_channels=64,\n                out_channels=64,\n                kernel_size=(4, 4),\n                stride=(2, 2),\n                padding=(1, 1),\n            ),\n            torch.nn.LeakyReLU(0.2),\n        )\n        self.classifier = torch.nn.Sequential(\n            Reshape(3136),\n            torch.nn.Linear(in_features=3136, out_features=hidden_size * 2),\n            Reshape(2, hidden_size)\n        )\n        self.layers = torch.nn.Sequential(self.conv, self.classifier)\n\n    def forward(self, x):\n        for layer in self.layers:\n            x = layer(x)\n        return x\n</pre> class Encoder(torch.nn.Module):     def __init__(self, hidden_size: int):         super(Encoder, self).__init__()         self.conv = torch.nn.Sequential(             Reshape(1, 28, 28),             torch.nn.Conv2d(                 in_channels=1,                 out_channels=64,                 kernel_size=(4, 4),                 stride=(2, 2),                 padding=(1, 1),             ),             torch.nn.LeakyReLU(0.2),             torch.nn.Conv2d(                 in_channels=64,                 out_channels=64,                 kernel_size=(4, 4),                 stride=(2, 2),                 padding=(1, 1),             ),             torch.nn.LeakyReLU(0.2),         )         self.classifier = torch.nn.Sequential(             Reshape(3136),             torch.nn.Linear(in_features=3136, out_features=hidden_size * 2),             Reshape(2, hidden_size)         )         self.layers = torch.nn.Sequential(self.conv, self.classifier)      def forward(self, x):         for layer in self.layers:             x = layer(x)         return x <p>\u200b\u5c06\u200b\u4e24\u8005\u200b\u7ec4\u5408\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200bVAE\u200b\u7f51\u7edc\u200b\u7684\u200b\u7ed3\u6784\u200b\u3002\u200b\u5728\u200bVAE\u200b\u4e2d\u200b\uff0c\u200b\u9700\u8981\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u7528\u4e8e\u200b\u8ba1\u7b97\u200b\u8f93\u5165\u200b\u5728\u200b\u7ed9\u5b9a\u200b\u9ad8\u65af\u5206\u5e03\u200b\u4e2d\u200b\u7684\u200b\u5bf9\u6570\u200bPDF\u3002</p> In\u00a0[5]: Copied! <pre>class VAE(torch.nn.Module):\n    def __init__(self, hidden_size: int):\n        super(VAE, self).__init__()\n        self.hidden_size = hidden_size\n        self.encoder = Encoder(hidden_size)\n        self.decoder = Decoder(hidden_size)\n        self.device = torch.device('cpu')\n\n        self.log_2pi = torch.log(torch.tensor(2 * torch.pi, dtype=torch.float32))\n\n    def to(self, *args, **kwargs):\n        if args:\n            self.device = args[0]\n        elif 'device' in kwargs:\n            self.device = kwargs['device']\n        super().to(*args, **kwargs)\n\n    def log_norm_pdf(self, x: torch.Tensor, mean: torch.Tensor, logvar: torch.Tensor):\n        # x: [batch_size, hidden_size] or [hidden_size]\n        # loc: [hidden_size]\n        # shape: [hidden_size]\n        if x.dim() == 1:\n            x = x.unsqueeze(0)\n        batch_size = x.size(0)\n        x = x.reshape(batch_size, -1)\n        mean = mean.reshape(batch_size, -1)\n        logvar = logvar.reshape(batch_size, -1)\n        n_vars = x.size(1)\n\n        exp = -0.5 * ((x - mean) ** 2 / torch.exp(logvar)).sum(dim=1)\n        return -0.5 * (logvar.sum(dim=1) + n_vars * self.log_2pi) + exp\n\n    def forward(\n        self, x: torch.Tensor\n    ):\n        x = x.to(self.device)\n        latent_dist = self.encoder(x)\n        z_mu, z_logsigma = latent_dist[:, 0], latent_dist[:, 1]\n        randn = torch.randn(x.size(0), self.hidden_size, device=self.device)\n        z = z_mu + torch.exp(z_logsigma) * randn\n\n        x_dist = self.decoder(z)\n        x_mu, x_logsigma = x_dist[:, 0], x_dist[:, 1]\n        log_likelihood = self.log_norm_pdf(x, x_mu, x_logsigma * 2)\n        kl_div = self.log_norm_pdf(z, z_mu, z_logsigma) - \\\n            self.log_norm_pdf(z, torch.zeros_like(z_mu), torch.zeros_like(z_logsigma))\n        return kl_div.mean(), log_likelihood.mean()\n\nmodel = VAE(hidden_size=8)\n</pre> class VAE(torch.nn.Module):     def __init__(self, hidden_size: int):         super(VAE, self).__init__()         self.hidden_size = hidden_size         self.encoder = Encoder(hidden_size)         self.decoder = Decoder(hidden_size)         self.device = torch.device('cpu')          self.log_2pi = torch.log(torch.tensor(2 * torch.pi, dtype=torch.float32))      def to(self, *args, **kwargs):         if args:             self.device = args[0]         elif 'device' in kwargs:             self.device = kwargs['device']         super().to(*args, **kwargs)      def log_norm_pdf(self, x: torch.Tensor, mean: torch.Tensor, logvar: torch.Tensor):         # x: [batch_size, hidden_size] or [hidden_size]         # loc: [hidden_size]         # shape: [hidden_size]         if x.dim() == 1:             x = x.unsqueeze(0)         batch_size = x.size(0)         x = x.reshape(batch_size, -1)         mean = mean.reshape(batch_size, -1)         logvar = logvar.reshape(batch_size, -1)         n_vars = x.size(1)          exp = -0.5 * ((x - mean) ** 2 / torch.exp(logvar)).sum(dim=1)         return -0.5 * (logvar.sum(dim=1) + n_vars * self.log_2pi) + exp      def forward(         self, x: torch.Tensor     ):         x = x.to(self.device)         latent_dist = self.encoder(x)         z_mu, z_logsigma = latent_dist[:, 0], latent_dist[:, 1]         randn = torch.randn(x.size(0), self.hidden_size, device=self.device)         z = z_mu + torch.exp(z_logsigma) * randn          x_dist = self.decoder(z)         x_mu, x_logsigma = x_dist[:, 0], x_dist[:, 1]         log_likelihood = self.log_norm_pdf(x, x_mu, x_logsigma * 2)         kl_div = self.log_norm_pdf(z, z_mu, z_logsigma) - \\             self.log_norm_pdf(z, torch.zeros_like(z_mu), torch.zeros_like(z_logsigma))         return kl_div.mean(), log_likelihood.mean()  model = VAE(hidden_size=8) <p>\u200b\u4ece\u200b\u6d4b\u8bd5\u200b\u96c6\u4e2d\u200b\u9009\u51fa\u200b10\u200b\u4e2a\u200b\u6570\u5b57\u200b\u7684\u200b\u56fe\u7247\u200b</p> In\u00a0[6]: Copied! <pre>from matplotlib.axes import Axes\nfrom matplotlib import pyplot as plt\nfrom typing import Optional\n\ntest_input = {}\nfor (x, y) in test_loader:\n    if len(test_input) == 10:\n        break\n    size = y.size(0)\n    for _ in range(size):\n        if y[_].item() in test_input:\n            continue\n        test_input[y[_].item()] = x[_].detach()\n\ndef plot_image(x: torch.Tensor, ax: Optional[Axes] = None):\n    img = x.view(28, 28).cpu().numpy()\n\n    if ax is None:\n        plt.imshow(img, cmap='gray')\n        plt.axis('off')\n    else:\n        ax.imshow(img, cmap='gray')\n        ax.axis('off')\n\n\nfig, ax = plt.subplots(2, 5, figsize=(8, 3))\naxes = ax.flatten()\nfor i, ax in enumerate(axes):\n    ax.set_title(f'Class {i}', fontsize=9)\n    plot_image(test_input[i], ax)\nplt.show()\n</pre> from matplotlib.axes import Axes from matplotlib import pyplot as plt from typing import Optional  test_input = {} for (x, y) in test_loader:     if len(test_input) == 10:         break     size = y.size(0)     for _ in range(size):         if y[_].item() in test_input:             continue         test_input[y[_].item()] = x[_].detach()  def plot_image(x: torch.Tensor, ax: Optional[Axes] = None):     img = x.view(28, 28).cpu().numpy()      if ax is None:         plt.imshow(img, cmap='gray')         plt.axis('off')     else:         ax.imshow(img, cmap='gray')         ax.axis('off')   fig, ax = plt.subplots(2, 5, figsize=(8, 3)) axes = ax.flatten() for i, ax in enumerate(axes):     ax.set_title(f'Class {i}', fontsize=9)     plot_image(test_input[i], ax) plt.show() In\u00a0[7]: Copied! <pre>from matplotlib import pyplot as plt\nfrom matplotlib.axes import Axes\nfrom typing import Optional\n\ndef plot_decoder(model: VAE, z: Optional[torch.Tensor] = None, ax: Optional[Axes] = None):\n    if z is None:\n        z = torch.randn(1, model.hidden_size, device=model.device)\n    else:\n        z = z.to(model.device)\n    with torch.no_grad():\n        x = model.decoder(z)[:, 0].view(28, 28).cpu() * 0.5 + 0.5\n\n    plot_image(x, ax)\n\nplot_decoder(model)\nplt.show()\n</pre> from matplotlib import pyplot as plt from matplotlib.axes import Axes from typing import Optional  def plot_decoder(model: VAE, z: Optional[torch.Tensor] = None, ax: Optional[Axes] = None):     if z is None:         z = torch.randn(1, model.hidden_size, device=model.device)     else:         z = z.to(model.device)     with torch.no_grad():         x = model.decoder(z)[:, 0].view(28, 28).cpu() * 0.5 + 0.5      plot_image(x, ax)  plot_decoder(model) plt.show() <p>\u200b\u8bbe\u7f6e\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u8d85\u200b\u53c2\u6570\u200b\u3002</p> In\u00a0[8]: Copied! <pre>N = 20\nK_plot = 2\noptimizer = torch.optim.Adam(model.parameters(), lr=1e-3)\ndevice = 'cuda:5' if torch.cuda.is_available() else 'cpu'  # CUDA\nmodel.to(device)\n\n# Record training metrics\nz_noise = torch.randn(10, model.hidden_size)\nstep = 0\ntrain_metrics = []\n</pre> N = 20 K_plot = 2 optimizer = torch.optim.Adam(model.parameters(), lr=1e-3) device = 'cuda:5' if torch.cuda.is_available() else 'cpu'  # CUDA model.to(device)  # Record training metrics z_noise = torch.randn(10, model.hidden_size) step = 0 train_metrics = [] <p>\u200b\u5f00\u59cb\u200b\u8bad\u7ec3\u200b\uff0c\u200b\u6bcf\u9694\u200b2\u200b\u4e2a\u200bepoch\u200b\u7ed8\u5236\u200b\u795e\u7ecf\u7f51\u7edc\u200b\u5bf9\u200b\u56fe\u7247\u200b\u7684\u200b\u91cd\u5efa\u200b\u6548\u679c\u200b\u3002</p> In\u00a0[9]: Copied! <pre>from typing import Dict, Iterator, List\n\nfig, ax_grid = plt.subplots(10, N // K_plot + 1, figsize=(8, 6))\naxes = iter(ax_grid.T)\n\ndef plot_column(axes: Iterator[List[Axes]], samples: Dict[int, torch.Tensor]):\n    ax_column = next(axes)\n    for i, x_sample in samples.items():\n        plot_image(x_sample, ax_column[i])\n\nplot_column(axes, test_input)\n\nfor epoch in range(N):\n    step_metric = {}\n    for x, _ in train_loader:\n        model.train()\n        step += 1\n        optimizer.zero_grad()\n        kl, log_likelihood = model(x)\n        step_metric['kl'] = kl.item()\n        step_metric['nll'] = -log_likelihood.item()\n        loss = kl - log_likelihood\n        loss.backward()\n        optimizer.step()\n\n        train_metrics.append(step_metric)\n        step_metric = {}\n\n    if (epoch + 1) % K_plot == 0:\n        model.eval()\n        decoder_output = {}\n        for i, x_sample in test_input.items():\n            x_sample = x_sample.to(model.device)\n            z_mu = model.encoder(x_sample)[:, 0]\n            x_mu = model.decoder(z_mu)[0, 0]\n            decoder_output[i] = x_mu.detach()\n        plot_column(axes, decoder_output)\n\nfig.show()\n</pre> from typing import Dict, Iterator, List  fig, ax_grid = plt.subplots(10, N // K_plot + 1, figsize=(8, 6)) axes = iter(ax_grid.T)  def plot_column(axes: Iterator[List[Axes]], samples: Dict[int, torch.Tensor]):     ax_column = next(axes)     for i, x_sample in samples.items():         plot_image(x_sample, ax_column[i])  plot_column(axes, test_input)  for epoch in range(N):     step_metric = {}     for x, _ in train_loader:         model.train()         step += 1         optimizer.zero_grad()         kl, log_likelihood = model(x)         step_metric['kl'] = kl.item()         step_metric['nll'] = -log_likelihood.item()         loss = kl - log_likelihood         loss.backward()         optimizer.step()          train_metrics.append(step_metric)         step_metric = {}      if (epoch + 1) % K_plot == 0:         model.eval()         decoder_output = {}         for i, x_sample in test_input.items():             x_sample = x_sample.to(model.device)             z_mu = model.encoder(x_sample)[:, 0]             x_mu = model.decoder(z_mu)[0, 0]             decoder_output[i] = x_mu.detach()         plot_column(axes, decoder_output)  fig.show() In\u00a0[10]: Copied! <pre>from typing import Any, Dict, Iterable, List, Tuple\nimport random\n\ndef extract_metrics(data: List[Dict[str, Any]], field: str) -&gt; Tuple[List[int], List[Any]]:\n    x, y = [], []\n    for step, record in enumerate(data, start=1):\n        if field in record:\n            x.append(step)\n            y.append(record[field])\n    return x, y\n\ndef ema(x, beta):\n    y = x[0]\n    for _ in x:\n        y = beta * y + (1 - beta) * _\n        yield y\n\ndef sample(x: Iterable[Any], y: Iterable[Any], ratio: float):\n    result_x, result_y = [], []\n    for x_sample, y_sample in zip(x, y):\n        if random.random() &lt; ratio:\n            result_x.append(x_sample)\n            result_y.append(y_sample)\n    return result_x, result_y\n</pre> from typing import Any, Dict, Iterable, List, Tuple import random  def extract_metrics(data: List[Dict[str, Any]], field: str) -&gt; Tuple[List[int], List[Any]]:     x, y = [], []     for step, record in enumerate(data, start=1):         if field in record:             x.append(step)             y.append(record[field])     return x, y  def ema(x, beta):     y = x[0]     for _ in x:         y = beta * y + (1 - beta) * _         yield y  def sample(x: Iterable[Any], y: Iterable[Any], ratio: float):     result_x, result_y = [], []     for x_sample, y_sample in zip(x, y):         if random.random() &lt; ratio:             result_x.append(x_sample)             result_y.append(y_sample)     return result_x, result_y <p>\u200b\u7ed8\u5236\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u7684\u200bKL\u200b\u6563\u5ea6\u200b\u548c\u200b\u91cd\u5efa\u200b\u635f\u5931\u200b\u53d8\u5316\u200b\u3002\u200b\u6ce8\u610f\u200b\u5f53\u9690\u200b\u5411\u91cf\u200b\u7ef4\u5ea6\u200b\u8f83\u200b\u9ad8\u65f6\u200b\uff0c\u200b\u91c7\u6837\u200b\u7a7a\u95f4\u200b\u5f88\u5927\u200b\uff0c\u200b\u4f7f\u5f97\u200bKL\u200b\u6563\u5ea6\u200b\u5f80\u5f80\u200b\u4f1a\u200b\u7ef4\u6301\u200b\u5728\u200b\u4e00\u4e2a\u200b\u8f83\u200b\u9ad8\u200b\u7684\u200b\u6c34\u5e73\u200b\u4e0a\u200b\u3002\u200b\u4f46\u200b\u66f4\u200b\u9ad8\u200b\u7ef4\u5ea6\u200b\u7684\u200b\u9690\u200b\u5411\u91cf\u200b\u540c\u65f6\u200b\u5177\u5907\u200b\u66f4\u597d\u200b\u7684\u200b\u8868\u8fbe\u80fd\u529b\u200b\uff0c\u200b\u91cd\u5efa\u200b\u7684\u200b\u56fe\u7247\u200b\u66f4\u52a0\u200b\u6e05\u6670\u200b\u3002</p> In\u00a0[11]: Copied! <pre>fig, ax1 = plt.subplots(figsize=(8, 6))\n\nx_kl, y_kl = extract_metrics(train_metrics, 'kl')\nx_log_ll, y_log_ll = extract_metrics(train_metrics, 'nll')\n\nax1.plot(x_kl, y_kl, color='lightgreen', alpha=0.5)\nax1.plot(x_log_ll, y_log_ll, color='pink', alpha=0.5)\nax1.plot(x_kl, [*ema(y_kl, 0.99)], label='KL Divergence', color='green', linewidth=1)\nax1.plot(x_log_ll, [*ema(y_log_ll, 0.99)], label='NLL', color='red', linewidth=1)\n\nax1.legend()\nax1.set_ylim(-50, 30)\n\nfig.show()\n</pre> fig, ax1 = plt.subplots(figsize=(8, 6))  x_kl, y_kl = extract_metrics(train_metrics, 'kl') x_log_ll, y_log_ll = extract_metrics(train_metrics, 'nll')  ax1.plot(x_kl, y_kl, color='lightgreen', alpha=0.5) ax1.plot(x_log_ll, y_log_ll, color='pink', alpha=0.5) ax1.plot(x_kl, [*ema(y_kl, 0.99)], label='KL Divergence', color='green', linewidth=1) ax1.plot(x_log_ll, [*ema(y_log_ll, 0.99)], label='NLL', color='red', linewidth=1)  ax1.legend() ax1.set_ylim(-50, 30)  fig.show() <p>\u200b\u8fc7\u5927\u200b\u7684\u200bKL\u200b\u6563\u5ea6\u200b\u5f80\u5f80\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u5c06\u200b\u968f\u673a\u566a\u58f0\u200b\u8f93\u5165\u200b\u89e3\u7801\u5668\u200b\uff0c\u200b\u89e3\u7801\u200b\u7684\u200b\u7ed3\u679c\u200b\u548c\u200b\u771f\u5b9e\u200b\u7684\u200b\u624b\u5199\u200b\u5b57\u7b26\u200b\u5dee\u5f02\u200b\u5f88\u5927\u200b\u3002</p> In\u00a0[12]: Copied! <pre>fix, ax = plt.subplots(8, 8, figsize=(8, 8))\nfor i, _ in enumerate(ax.flatten()):\n    plot_decoder(model, ax=_)\n</pre> fix, ax = plt.subplots(8, 8, figsize=(8, 8)) for i, _ in enumerate(ax.flatten()):     plot_decoder(model, ax=_) <p>\u200b\u53ef\u4ee5\u200b\u5bf9\u9690\u200b\u5411\u91cf\u200b\u8fdb\u884c\u200b\u63d2\u503c\u200b\uff0c\u200b\u89c2\u5bdf\u200b\u63d2\u503c\u200b\u540e\u200b\u7684\u200b\u6570\u503c\u200b\u53d8\u5316\u200b\u3002</p> In\u00a0[13]: Copied! <pre>fix, ax = plt.subplots(10, 10, figsize=(8, 8))\nz = {\n    i: model.encoder(sample.unsqueeze(0).to(model.device))[:, 0]\n    for i, sample in test_input.items()\n}\nfor i in range(10):\n    for j in range(10):\n        left = z[i]\n        right = z[(i + 1) % 10]\n        interpolated = (1 - j / 9) * left + (j / 9) * right\n        plot_decoder(model, interpolated, ax[i, j])\n</pre> fix, ax = plt.subplots(10, 10, figsize=(8, 8)) z = {     i: model.encoder(sample.unsqueeze(0).to(model.device))[:, 0]     for i, sample in test_input.items() } for i in range(10):     for j in range(10):         left = z[i]         right = z[(i + 1) % 10]         interpolated = (1 - j / 9) * left + (j / 9) * right         plot_decoder(model, interpolated, ax[i, j])"},{"location":"coding/machine-learning/vae/#variational-autoencoder","title":"Variational Autoencoder\u00b6","text":"<p>\u200b\u53d8\u5206\u200b\u81ea\u200b\u7f16\u7801\u5668\u200b\uff08Variational Autoencoder\uff0cVAE\uff09\u200b\u7684\u200b\u7ed3\u6784\u200b\u548c\u200bAE\u200b\u76f8\u4f3c\u200b\uff0c\u200b\u90fd\u200b\u662f\u200b\u4f7f\u7528\u200b\u7f16\u7801\u5668\u200b\u5bf9\u200b\u8f93\u5165\u200b\u8fdb\u884c\u200b\u538b\u7f29\u200b\uff0c\u200b\u518d\u200b\u901a\u8fc7\u200b\u89e3\u7801\u5668\u200b\u91cd\u5efa\u200b\u3002\u200b\u4e0e\u200bAE\u200b\u4e0d\u540c\u200b\u7684\u200b\u662f\u200b\uff0cVAE\u200b\u662f\u200b\u4e00\u4e2a\u200b\u751f\u6210\u200b\u6a21\u578b\u200b\u800c\u200b\u4e0d\u662f\u200b\u7f16\u7801\u200b\u6a21\u578b\u200b\uff0c\u200b\u5b83\u200b\u53cd\u800c\u200b\u548c\u200bGAN\u200b\u4e2d\u200b\u7684\u200b\u751f\u6210\u5668\u200b\u662f\u200b\u4e00\u4e2a\u200b\u539f\u7406\u200b\u3002\u200b\u5047\u8bbe\u200b\u6570\u636e\u200b\u7684\u200b\u751f\u6210\u200b\u662f\u200b\u901a\u8fc7\u200b\u4e00\u4e2a\u200b\u968f\u673a\u200b\u5206\u5e03\u200b\u7684\u200b\u9690\u200b\u53d8\u91cf\u200b$z$\u200b\u63a7\u5236\u200b\u3002\u200b\u5373\u200b\u9996\u5148\u200b\u4ece\u200b\u4e00\u4e2a\u200b\u5bb9\u6613\u200b\u91c7\u6837\u200b\u7684\u200b\u5206\u5e03\u200b$P_\\theta(z)$\u200b\u4e2d\u200b\u91c7\u6837\u200b\u51fa\u200b$z$\uff0c\u200b\u518d\u200b\u8bad\u7ec3\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b$f(z)$\uff0c\u200b\u8f93\u51fa\u200b\u6761\u4ef6\u200b\u5206\u5e03\u200b$P_\\theta(x | z)$\uff0c\u200b\u4ece\u200b\u5176\u4e2d\u200b\u91c7\u6837\u200b\u5f97\u5230\u200b$x$\u3002\u200b\u636e\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5b66\u4e60\u200b\u5230\u200b\u8f93\u5165\u200b\u6570\u636e\u200b$x$\u200b\u7684\u200b\u6982\u7387\u5206\u5e03\u200b$P_\\theta (x)$\uff0c\u200b\u6839\u636e\u200b\u8f93\u5165\u200b\u6837\u672c\u200b\u6700\u5927\u5316\u200b\u5bf9\u6570\u200b\u4f3c\u7136\u200b$\\log P_\\theta(x)$\u3002</p> <p>\u200b\u7136\u800c\u200b\uff0c\u200b\u8981\u200b\u5f97\u5230\u200b$P_\\theta(x)$\uff0c\u200b\u5219\u200b\u5fc5\u987b\u200b\u5bf9\u9690\u200b\u53d8\u91cf\u200b$z$\u200b\u79ef\u5206\u200b\uff0c\u200b\u6216\u662f\u200b\u8ba1\u7b97\u200b$P_\\theta(x\\mid z)$\u200b\u5728\u200b$P(z)$\u200b\u4e0a\u200b\u7684\u200b\u671f\u671b\u200b</p> <p>$$ P_\\theta(x) = \\int_z P_\\theta(x\\mid z)P(z) \\mathrm dz = \\mathbb E_{z\\sim P(z)} P_\\theta(x\\mid z) $$</p> <p>\u200b\u5728\u200b\u4e00\u4e9b\u200b\u7b80\u5355\u200b\u7684\u200b\u573a\u666f\u200b\u4e0b\u200b\uff0c\u200b\u5982\u200b$z$\u200b\u4e3a\u200b\u79bb\u6563\u200b\u6570\u503c\u200b\uff0c$P(x\\mid z)$\u200b\u4e3a\u200b\u9ad8\u65af\u5206\u5e03\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u63a8\u5bfc\u200b\u51fa\u200b$P(x)$\u200b\u4e3a\u200b\u6df7\u5408\u200b\u9ad8\u65af\u5206\u5e03\u200b\u3002\u200b\u7136\u800c\u200b\uff0c\u200b\u5728\u200b\u66f4\u52a0\u200b\u4e00\u822c\u200b\u7684\u200b\u6761\u4ef6\u200b\u4e0b\u200b\uff0c$P(x \\mid z)$\u200b\u901a\u5e38\u200b\u662f\u200b\u590d\u6742\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u6211\u4eec\u200b\u96be\u4ee5\u200b\u901a\u8fc7\u200b\u79ef\u5206\u200b\u7684\u200b\u65b9\u5f0f\u200b\u8ba1\u7b97\u200b$P(x)$\u3002\u200b\u53e6\u5916\u200b\uff0c$z$\u200b\u4e5f\u200b\u5f80\u5f80\u200b\u662f\u200b\u9ad8\u7ef4\u200b\u53d8\u91cf\u200b\uff0c\u200b\u7ef4\u5ea6\u200b\u8bc5\u5492\u200b\u7684\u200b\u95ee\u9898\u200b\u4e5f\u200b\u4f7f\u5f97\u200b\u76f4\u63a5\u200b\u4ece\u200b\u5148\u9a8c\u200b\u5206\u5e03\u200b$P(z)$\u200b\u4e2d\u200b\u91c7\u6837\u200b\u7684\u200b\u65b9\u5f0f\u200b\u4f30\u8ba1\u200b$P(x) = \\mathbb E_{z\\sim P(z)} P_\\theta(x\\mid z)$\u200b\u7684\u200b\u6548\u7387\u200b\u5f88\u200b\u4f4e\u200b\uff0c\u200b\u6a21\u578b\u200b\u96be\u4ee5\u200b\u6536\u655b\u200b\u3002\u200b\u5728\u200bGAN\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u901a\u8fc7\u200b\u4e00\u4e2a\u200b\u5224\u522b\u200b\u5668\u200b\u5bf9\u200b\u751f\u6210\u5668\u200b$P(x \\mid z)$\u200b\u7684\u200b\u4f18\u5316\u200b\u65b9\u5411\u200b\u7ed9\u51fa\u200b\u6307\u5bfc\u200b\u3002\u200b\u76f8\u5bf9\u200b\u5730\u200b\uff0cVAE\u200b\u63d0\u51fa\u200b\u6839\u636e\u200b\u89c2\u6d4b\u200b\u6570\u636e\u200b$x$\u200b\u4f30\u8ba1\u200b\u5f97\u5230\u200b\u7684\u200b\u9690\u200b\u53d8\u91cf\u200b$z$\u200b\u7684\u200b\u5206\u5e03\u200b\uff0c\u200b\u5373\u200b \u200b\u53d8\u5206\u200b\u5206\u5e03\u200b $q_{\\phi}(z\\mid x)$ \u200b\u4ee5\u200b\u63d0\u9ad8\u200b\u91c7\u6837\u200b\u6548\u7387\u200b\uff0c$\\phi$\u200b\u4e3a\u200b\u53d8\u5206\u200b\u53c2\u6570\u200b\u3002\u200b\u5f15\u5165\u200b\u53d8\u5206\u200b\u5206\u5e03\u200b\u540e\u200b\uff1a</p> <p>$$ \\begin{aligned} \\log P_\\theta(x) &amp;= \\mathbb E_{z\\sim q_\\phi(z\\mid x)}\\log P_\\theta(x) \\\\ &amp;= \\mathbb E_{z\\sim q_\\phi(z\\mid x)} \\log\\frac{P_\\theta(x, z)}{P_{\\theta}(z\\mid x)} \\\\ &amp;= \\mathbb E_{z\\sim q_\\phi(z\\mid x)} \\log\\frac{P_\\theta(x, z)}{q_{\\phi}(z\\mid x)} + \\log\\frac{q_\\phi (z\\mid x)}{P_{\\theta}(z\\mid x)} \\\\ &amp;= \\mathbb E_{z\\sim q_\\phi(z\\mid x)} [\\log P_\\theta(x, z) -\\log q_{\\phi}(z\\mid x)] + \\text{KL}(q_\\phi (z\\mid x)\\Vert P_{\\theta}(z\\mid x)) \\end{aligned} $$</p> <p>\u200b\u6211\u4eec\u200b\u7684\u200b\u4f18\u5316\u200b\u76ee\u6807\u200b\u662f\u200b\u6700\u5927\u5316\u200b$\\log P_\\theta(x)$\u3002\u200b\u7531\u4e8e\u200b$\\text{KL}(q_\\phi (z\\mid x)\\Vert P_{\\theta}(z\\mid x))\\geq 0$\uff0c\u200b\u6709\u200b$\\log P_\\theta(x)\\geq \\mathbb E_{z\\sim q_\\phi(z\\mid x)} [\\log P_\\theta(x, z) -\\log q_{\\phi}(z\\mid x)]$\u3002\u200b\u56e0\u6b64\u200b\uff1a</p> <ol> <li>$\\mathbb E_{z\\sim q_\\phi(z\\mid x)} [\\log P_\\theta(x, z) -\\log q_{\\phi}(z\\mid x)]$\u200b\u662f\u200b\u5bf9\u6570\u200b\u4f3c\u7136\u200b\u7684\u200b\u4e00\u4e2a\u200b\u4e0b\u754c\u200b</li> <li>\u200b\u5f53\u200b$q_\\phi (z\\mid x)$\u200b\u66f4\u200b\u63a5\u8fd1\u200b$z$\u200b\u7684\u200b\u771f\u5b9e\u200b\u540e\u9a8c\u200b\u5206\u5e03\u200b$P_{\\theta}(z\\mid x)$\u200b\u65f6\u200b\uff0cKL\u200b\u6563\u5ea6\u200b\u8d8b\u8fd1\u200b\u4e8e\u200b0\u3002\u200b\u968f\u7740\u200b\u4f18\u5316\u200b\u8fc7\u7a0b\u200b\u7684\u200b\u8fdb\u884c\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u4e0b\u754c\u200b\u9010\u6e10\u200b\u8d8a\u7d27\u200b\uff0c$P(x \\mid z)q_{\\phi}(z\\mid x)$\u200b\u66f4\u200b\u63a5\u8fd1\u200b\u771f\u5b9e\u200b\u7684\u200b\u8054\u5408\u200b\u5206\u5e03\u200b$P(x, z)$\u3002</li> </ol> <p>\u200b\u5c06\u200b\u8be5\u200b\u4e0b\u754c\u200b\u79f0\u4e3a\u200bEvidence Lower Bound\uff0cELBO\uff0c\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u8868\u793a\u200b\u4e3a\u200b\uff1a</p> <p>$$ \\begin{aligned} \\text{ELBO} &amp;= \\mathbb E_{z\\sim q_\\phi(z\\mid x)} [\\log P_\\theta(x, z) -\\log q_{\\phi}(z\\mid x)] \\\\ &amp;= \\mathbb E_{z\\sim q_\\phi(z\\mid x)} \\left[\\log P_\\theta(x\\mid z) -\\log \\frac{q_{\\phi}(z\\mid x)}{P_\\theta(z)}\\right] \\\\ &amp;= \\underbrace{\\mathbb E_{z\\sim q_\\phi(z\\mid x)} [\\log P_\\theta(x\\mid z)]}_{\\text{optimize reconstruction error}} - \\underbrace{\\text{KL}(q_\\phi (z\\mid x)\\Vert P_{\\theta}(z))}_{\\text{optimize variational distribution}} \\end{aligned} $$</p> <p>\u200b\u901a\u5e38\u200b\u5047\u8bbe\u200b\uff0c$z$\u200b\u7684\u200b\u5148\u9a8c\u200b\u5206\u5e03\u200b\u4e3a\u200b\u6807\u51c6\u200b\u6b63\u6001\u5206\u5e03\u200b$\\mathcal N(0, I)$\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6700\u5927\u5316\u200bELBO\u200b\u7684\u200b\u8bad\u7ec3\u200b\u76ee\u6807\u200b\u4e2d\u200b\u5305\u542b\u200b\u4f7f\u200b\u53d8\u5206\u200b\u5206\u5e03\u200b$q_{\\phi}(z\\mid x)$\u200b\u7684\u200b\u8f93\u51fa\u200b\u9010\u6e10\u200b\u63a5\u8fd1\u200b\u6807\u51c6\u200b\u6b63\u6001\u5206\u5e03\u200b\u7684\u200b\u76ee\u6807\u200b\u3002\u200b\u4e00\u822c\u200b\u4ee4\u200bVAE\u200b\u7684\u200b\u7f16\u7801\u5668\u200b\u5f97\u5230\u200b$z$\u200b\u7684\u200b\u53d8\u5206\u200b\u5206\u5e03\u200b\uff0c\u200b\u662f\u200b\u5404\u200b\u53d8\u91cf\u200b\u76f8\u4e92\u200b\u72ec\u7acb\u200b\u7684\u200b\u9ad8\u65af\u5206\u5e03\u200b\u3002\u200b\u7531\u4e8e\u200b\u5148\u9a8c\u200b\u5206\u5e03\u200b\u548c\u200b\u53d8\u5206\u200b\u5206\u5e03\u200b\u90fd\u200b\u662f\u200b\u6b63\u6001\u5206\u5e03\u200b\uff0c\u200b\u5f53\u200b\u4e24\u4e2a\u200b\u5206\u5e03\u200b\u5747\u200b\u4e3a\u200b\u6b63\u6001\u5206\u5e03\u200b\u65f6\u200b\uff0c\u200b\u5b83\u4eec\u200b\u7684\u200bKL\u200b\u6563\u5ea6\u200b\u6709\u200b\u89e3\u6790\u200b\u89e3\u200b\uff0c\u200b\u7531\u4e8e\u200b\u5404\u4e2a\u200b\u5206\u91cf\u200b\u76f8\u4e92\u200b\u72ec\u7acb\u200b\uff0c\u200b\u8003\u8651\u200b\u4e00\u5143\u200b\u5206\u5e03\u200b\u7684\u200b\u60c5\u51b5\u200b\uff1a</p> <p>$$ \\begin{aligned} &amp; \\text{KL}(\\mathcal N(\\mu, \\sigma^2)\\Vert \\mathcal N(0, 1)) \\\\ =&amp; \\int_{-\\infty}^\\infty \\frac{1}{\\sqrt{2\\pi\\sigma^2}} e^{-\\frac{(x - \\mu)^2}{2\\sigma^2}} \\log\\frac{\\frac{1}{\\sqrt{2\\pi\\sigma^2}} e^{-\\frac{(x - \\mu)^2}{2\\sigma^2}}}{\\frac{1}{\\sqrt{2\\pi}} e^{-\\frac{x^2}{2}}}\\mathrm dx \\\\ =&amp; \\int_{-\\infty}^\\infty \\frac{1}{\\sqrt{2\\pi\\sigma^2}} e^{-\\frac{(x - \\mu)^2}{2\\sigma^2}}\\left[\\log\\frac{1}{\\sqrt{2\\pi\\sigma^2}} - \\frac{(x - \\mu)^2}{2\\sigma^2} - \\log\\frac{1}{\\sqrt{2\\pi}} + \\frac 12 x^2\\right] \\mathrm dx\\\\ =&amp; \\int_{-\\infty}^\\infty \\frac{1}{\\sqrt{2\\pi\\sigma^2}} e^{-\\frac{(x - \\mu)^2}{2\\sigma^2}}\\left[-\\log\\sigma - \\frac{(x - \\mu)^2}{2\\sigma^2} + \\frac{1}{2} x^2\\right] \\mathrm dx \\\\ =&amp; -\\log\\sigma - \\frac{\\mathbb E\\left[(x - \\mu)^2\\right]}{2\\sigma^2} + \\frac 12\\mathbb E\\left(x^2\\right) \\\\ =&amp; \\frac{1}{2}\\left(\\mu^2 + \\sigma^2 - 1 -\\log\\sigma^2\\right) \\\\ \\end{aligned} $$</p> <p>\u200b\u89e3\u7801\u5668\u200b\u5f97\u5230\u200b$x\\mid z$\u200b\u7684\u200b\u6982\u7387\u5206\u5e03\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200b\u5404\u200b\u53d8\u91cf\u200b\u76f8\u4e92\u200b\u72ec\u7acb\u200b\u7684\u200b\u9ad8\u65af\u5206\u5e03\u200b\uff0c\u200b\u8fd9\u6837\u200b$P(x) = P(z) P(x \\mid z)$\u200b\u4e5f\u200b\u662f\u200b\u9ad8\u65af\u5206\u5e03\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u9ad8\u65af\u5206\u5e03\u200b\u800c\u8a00\u200b\uff0c\u200b\u6a21\u578b\u200b\u53ea\u200b\u9700\u8981\u200b\u8f93\u51fa\u200b\u8be5\u200b\u5206\u5e03\u200b\u7684\u200b\u5747\u503c\u200b$\\mu$\u200b\u548c\u200b\u5bf9\u6570\u200b\u65b9\u5dee\u200b$\\log\\sigma^2$\u200b\u5373\u53ef\u200b\uff0c\u200b\u6216\u662f\u200b\u56fa\u5b9a\u200b\u65b9\u5dee\u200b$\\sigma^2$\uff0c\u200b\u6a21\u578b\u200b\u53ea\u200b\u8f93\u51fa\u200b\u5747\u503c\u200b\u3002\u200b\u5c06\u200b\u8f93\u5165\u200b\u7684\u200b\u6837\u672c\u200b\u4ee3\u5165\u200b\u5206\u5e03\u200b\u4e2d\u200b\uff0c\u200b\u5373\u53ef\u200b\u8ba1\u7b97\u200b\u91cd\u5efa\u200b\u635f\u5931\u200b\u9879\u200b$\\mathbb E_{z\\sim q_\\phi(z\\mid x)} [\\log P_\\theta(x\\mid z)]$\u200b\u4e2d\u200b\u7684\u200b\u5bf9\u6570\u200b\u4f3c\u7136\u200b\u3002$z$\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4ece\u200b\u53d8\u5206\u200b\u5206\u5e03\u200b\u4e2d\u200b\u91c7\u6837\u200b\u7684\u200b\u65b9\u5f0f\u200b\u83b7\u5f97\u200b\uff0c\u200b\u6839\u636e\u200b$z$\u200b\u548c\u200b$x$\u200b\u8ba1\u7b97\u200b\u5f97\u5230\u200bELBO\u3002\u200b\u4f46\u200b\u91c7\u6837\u200b\u8fc7\u7a0b\u200b\u4e0d\u53ef\u200b\u5fae\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u8fdb\u884c\u200b\u68af\u5ea6\u200b\u7684\u200b\u53cd\u5411\u200b\u4f20\u64ad\u200b\u3002\u200b\u4e3a\u4e86\u200b\u4fdd\u8bc1\u200b\u68af\u5ea6\u200b\u80fd\u591f\u200b\u53cd\u5411\u200b\u4f20\u64ad\u200b\u5230\u200b\u53d8\u5206\u200b\u5206\u5e03\u200b\u4e2d\u200b\uff0c\u200b\u5e38\u7528\u200b\u7684\u200b\u65b9\u6cd5\u200b\u662f\u200b\u91cd\u200b\u53c2\u6570\u200b\u5316\u200b\uff08reparameterization\uff09\u3002\u200b\u5373\u200b\u4ece\u200b\u4e00\u4e2a\u200b\u6807\u51c6\u200b\u6b63\u6001\u5206\u5e03\u200b\u4e2d\u200b\u91c7\u6837\u200b\u4e00\u4e2a\u200b\u566a\u58f0\u200b$\\varepsilon$\uff0c\u200b\u7528\u200b$\\mu + \\sigma^2 I\\cdot \\varepsilon$\u200b\u4f5c\u4e3a\u200b$z$\u200b\u7684\u200b\u91c7\u6837\u200b\u3002</p>"},{"location":"coding/machine-learning/wgan/","title":"Wasserstein GAN","text":"<p>\u200b\u5bf9\u4e8e\u200b\u6b63\u6001\u5206\u5e03\u200b\uff0cWasserstein\u200b\u8ddd\u79bb\u200b\u6709\u200b\u89e3\u6790\u200b\u89e3\u200b\u3002\u200b\u8bbe\u200b$P = \\mathcal{N}(\\mu_1, \\Sigma_1)$\u200b\u548c\u200b$Q = \\mathcal{N}(\\mu_2, \\Sigma_2)$\uff0c\u200b\u5219\u200b2\u200b\u9636\u200b\u8303\u6570\u200b\u5b9a\u4e49\u200b\u7684\u200bWasserstein\u200b\u8ddd\u79bb\u200b\u4e3a\u200b\uff1a</p> <p>$$ W_2(P, Q) = \\Vert \\mu_1 - \\mu_2 \\Vert + \\sqrt{\\text{tr}\\left(\\Sigma_1 + \\Sigma_2 - 2\\left(\\Sigma_2^{1/2}\\Sigma_1\\Sigma_2^{1/2}\\right)^{1/2}\\right)} $$</p> <p>\u200b\u5f53\u200b$n = 1$\u200b\u65f6\u200b\uff0cWasserstein\u200b\u8ddd\u79bb\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4e24\u4e2a\u200b\u5206\u5e03\u200b\u7684\u200bCDF\u200b\u8ba1\u7b97\u200b\u3002\u200b\u8bbe\u200b$F(x)$\u200b\u548c\u200b$G(x)$\u200b\u5206\u522b\u200b\u4e3a\u200b$P$\u200b\u548c\u200b$Q$\u200b\u7684\u200bCDF\u3002</p> <p>$$ W_p(P, Q) = \\left(\\int_0^1 \\left| F^{-1}(t) - G^{-1}(t) \\right|^p \\mathrm dt\\right)^{1/p} $$</p> <p>$p$\u200b\u4e3a\u200b\u8303\u6570\u200b\u7684\u200b\u9636\u6570\u200b\u3002$p = 1$\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8fdb\u4e00\u6b65\u200b\u7b80\u5316\u200b\u4e3a\u200b</p> <p>$$ W_1(P, Q) = \\int_{-\\infty}^{\\infty} \\left| F(x) - G(x) \\right| \\mathrm dx $$</p> <p>\u200b\u4ece\u800c\u200b\u53ef\u4ee5\u200b\u7528\u200b\u6570\u503c\u200b\u65b9\u6cd5\u200b\u8ba1\u7b97\u200bWasserstein\u200b\u8ddd\u79bb\u200b\u3002Wasserstein GAN\u200b\u4f7f\u7528\u200b1\u200b\u9636\u200bWasserstein\u200b\u8ddd\u79bb\u200b\u4f5c\u4e3a\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b$p = 1, n &gt; 1$\u200b\u7684\u200b\u5176\u4ed6\u200b\u60c5\u51b5\u200b\uff0cWasserstein\u200b\u8ddd\u79bb\u200b\u7684\u200b\u8ba1\u7b97\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7ebf\u6027\u89c4\u5212\u200b\u95ee\u9898\u200b\u3002\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200bKantorovich-Rubinstein\u200b\u5bf9\u5076\u200b\u6027\u8d28\u200b\u5c06\u200bWasserstein\u200b\u8ddd\u79bb\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u5176\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u3002</p> <p>$$ W_1(P, Q) = \\frac 1K\\sup_{\\Vert f \\Vert_L \\leq K} \\left(\\mathbb{E}_{x \\sim P} d(x) - \\mathbb{E}_{x \\sim Q} d(x)\\right) $$</p> <p>\u200b\u5176\u4e2d\u200b$\\Vert d \\Vert_L \\leq K$\u200b\u8868\u793a\u200b$f$\u200b\u662f\u200bLipschitz\u200b\u8fde\u7eed\u200b\uff0c\u200b\u4e14\u200bLipschitz\u200b\u5e38\u6570\u200b\u4e0d\u200b\u8d85\u8fc7\u200bK\u200b\u7684\u200b\u51fd\u6570\u200b\u3002\u200b\u751f\u6210\u5668\u200b\u7684\u200b\u76ee\u6807\u200b\u662f\u200b\u8c03\u6574\u200b\u751f\u6210\u200b\u5206\u5e03\u200b$P$\u200b\u4f7f\u5f97\u200b$W_1(P, Q)$\u200b\u6700\u5c0f\u200b\u3002\u200b\u5224\u522b\u200b\u5668\u200b\uff08Critic\uff09\u200b\u7684\u200b\u76ee\u6807\u200b\u662f\u200b\u5c3d\u53ef\u80fd\u200b\u51c6\u786e\u200b\u5730\u200b\u8861\u91cf\u200b\u751f\u6210\u5668\u200b\u5206\u5e03\u200b\u548c\u200b\u771f\u5b9e\u200b\u5206\u5e03\u200b\u4e4b\u95f4\u200b\u7684\u200bWasserstein\u200b\u8ddd\u79bb\u200b\uff0c\u200b\u4e5f\u200b\u5373\u200b\u627e\u5230\u200b\u4e00\u4e2a\u200bLipschitz\u200b\u8fde\u7eed\u200b\u7684\u200b\u51fd\u6570\u200b$f$\uff0c\u200b\u4f7f\u5f97\u200b$W_1(P, Q)$\u200b\u6700\u5927\u200b\u3002</p> <p>Wasserstein GAN\u200b\u9700\u8981\u200b\u5bf9\u200b\u5224\u522b\u200b\u5668\u200b\u7684\u200b\u53c2\u6570\u200b\u8fdb\u884c\u200b\u7ea6\u675f\u200b\u3002\u200b\u6709\u200b\u5982\u4e0b\u200b\u65b9\u6cd5\u200b\uff1a</p> <ol> <li>\u200b\u6743\u91cd\u200b\u526a\u88c1\u200b\uff1a\u200b\u5bf9\u200b\u5224\u522b\u200b\u5668\u200b\u7684\u200b\u6743\u91cd\u200b\u88c1\u526a\u200b\u5230\u200b\u4e00\u4e2a\u200b\u8303\u56f4\u200b$[-c, c]$\u3002\u200b\u4f46\u200b\u8fc7\u200b\u5c0f\u200b\u7684\u200b$c$\u200b\u4f1a\u200b\u9650\u5236\u200b\u6a21\u578b\u200b\u7684\u200b\u8868\u8fbe\u80fd\u529b\u200b\u548c\u200b\u6536\u655b\u6027\u200b\uff0c\u200b\u8fc7\u5927\u200b\u7684\u200b$c$\u200b\u5219\u200b\u4f1a\u200b\u4f7f\u200b\u6a21\u578b\u200b\u5931\u53bb\u200bLipschitz\u200b\u7ea6\u675f\u200b\u3002</li> <li>\u200b\u68af\u5ea6\u200b\u60e9\u7f5a\u200b\uff08WGAN-GP\uff09\uff1a\u200b\u5bf9\u200b\u5224\u522b\u200b\u5668\u200b\u7684\u200b\u68af\u5ea6\u200b\u8fdb\u884c\u200b\u60e9\u7f5a\u200b\u3002</li> </ol> <p>Wasserstein\u200b\u8ddd\u79bb\u200b\u7684\u200b\u6027\u8d28\u200b\u4fdd\u8bc1\u200b\u4e86\u200b\u5373\u4f7f\u200b\u5f53\u200b\u5224\u522b\u200b\u5668\u200b\u6027\u80fd\u200b\u975e\u5e38\u200b\u5f3a\u65f6\u200b\uff0c\u200b\u751f\u6210\u5668\u200b\u4e5f\u200b\u80fd\u591f\u200b\u5b66\u4e60\u200b\u5230\u200b\u771f\u5b9e\u200b\u5206\u5e03\u200b\u7684\u200b\u4fe1\u606f\u200b\u3002</p> In\u00a0[1]: Copied! <pre>import torch\nimport torchvision\nfrom torch.utils.data import DataLoader\n\n# SVG output\n%config InlineBackend.figure_format = 'svg'\n\n# Fix for certificate error\n# https://stackoverflow.com/questions/71263622\nimport ssl\nssl._create_default_https_context = ssl._create_unverified_context\n</pre> import torch import torchvision from torch.utils.data import DataLoader  # SVG output %config InlineBackend.figure_format = 'svg'  # Fix for certificate error # https://stackoverflow.com/questions/71263622 import ssl ssl._create_default_https_context = ssl._create_unverified_context <p>\u200b\u5bfc\u5165\u200bMNIST\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u4f7f\u7528\u200b\u751f\u6210\u200b\u5bf9\u6297\u200b\u7f51\u7edc\u200b\u751f\u6210\u200b\u624b\u5199\u200b\u6570\u5b57\u200b\u56fe\u7247\u200b\u3002</p> In\u00a0[2]: Copied! <pre>train_dataset = torchvision.datasets.MNIST(\n    train=True, root='data',\n    transform=torchvision.transforms.ToTensor(), download=True\n)\ntrain_loader = DataLoader(train_dataset, batch_size=64, shuffle=True, num_workers=4)\n</pre> train_dataset = torchvision.datasets.MNIST(     train=True, root='data',     transform=torchvision.transforms.ToTensor(), download=True ) train_loader = DataLoader(train_dataset, batch_size=64, shuffle=True, num_workers=4) <p>\u200b\u751f\u6210\u5668\u200b\u3001\u200b\u5224\u522b\u200b\u5668\u200b\u7684\u200b\u7ed3\u6784\u200b\u548c\u200bGAN\u200b\u4e2d\u200b\u7684\u200b\u76f8\u540c\u200b\u3002\u200b\u4f46\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\uff1a</p> <ol> <li>\u200b\u5224\u522b\u200b\u5668\u4e2d\u200b\u4e0d\u80fd\u200b\u4f7f\u7528\u200bBatch Normalization\u3002</li> <li>\u200b\u5224\u522b\u200b\u5668\u200b\u7684\u200b\u8f93\u51fa\u200b\u4e0d\u200b\u9700\u8981\u200b\u52a0\u200bsigmoid\uff08\u200b\u56e0\u4e3a\u200b\u4e0d\u662f\u200b\u6982\u7387\u200b\uff09</li> </ol> In\u00a0[3]: Copied! <pre>class Reshape(torch.nn.Module):\n    def __init__(self, *shape):\n        super(Reshape, self).__init__()\n        self.shape = shape\n\n    def forward(self, x):\n        return x.view(x.shape[0], *self.shape)\n\n\nclass Generator(torch.nn.Module):\n    def __init__(self):\n        super(Generator, self).__init__()\n        self.fcn = torch.nn.Sequential(\n            torch.nn.Linear(in_features=128, out_features=128 * 7 * 7),\n            torch.nn.LeakyReLU(0.2),\n            Reshape(128, 7, 7),\n        )\n        self.deconv = torch.nn.Sequential(\n            torch.nn.ConvTranspose2d(\n                in_channels=128,\n                out_channels=128,\n                kernel_size=(4, 4),\n                stride=(2, 2),\n                padding=(1, 1),\n            ),\n            torch.nn.LeakyReLU(0.2),\n            torch.nn.ConvTranspose2d(\n                in_channels=128,\n                out_channels=128,\n                kernel_size=(4, 4),\n                stride=(2, 2),\n                padding=(1, 1),\n            ),\n            torch.nn.LeakyReLU(0.2),\n            torch.nn.Conv2d(\n                in_channels=128, out_channels=1, kernel_size=(3, 3), padding=(1, 1)\n            ),\n            torch.nn.Tanh(),\n        )\n        self.layers = torch.nn.Sequential(self.fcn, self.deconv)\n\n    def forward(self, x):\n        for layer in self.layers:\n            x = layer(x)\n        return x\n\nclass Critic(torch.nn.Module):\n    def __init__(self):\n        super(Critic, self).__init__()\n        self.conv = torch.nn.Sequential(\n            Reshape(1, 28, 28),\n            torch.nn.Conv2d(\n                in_channels=1,\n                out_channels=64,\n                kernel_size=(4, 4),\n                stride=(2, 2),\n                padding=(1, 1),\n            ),\n            torch.nn.LeakyReLU(0.2),\n            torch.nn.Conv2d(\n                in_channels=64,\n                out_channels=64,\n                kernel_size=(4, 4),\n                stride=(2, 2),\n                padding=(1, 1),\n            ),\n            torch.nn.LeakyReLU(0.2),\n        )\n        self.classifier = torch.nn.Sequential(\n            Reshape(3136),\n            torch.nn.Linear(in_features=3136, out_features=1)\n        )\n        self.layers = torch.nn.Sequential(self.conv, self.classifier)\n\n    def forward(self, x):\n        for layer in self.layers:\n            x = layer(x)\n        return x.squeeze()\n</pre> class Reshape(torch.nn.Module):     def __init__(self, *shape):         super(Reshape, self).__init__()         self.shape = shape      def forward(self, x):         return x.view(x.shape[0], *self.shape)   class Generator(torch.nn.Module):     def __init__(self):         super(Generator, self).__init__()         self.fcn = torch.nn.Sequential(             torch.nn.Linear(in_features=128, out_features=128 * 7 * 7),             torch.nn.LeakyReLU(0.2),             Reshape(128, 7, 7),         )         self.deconv = torch.nn.Sequential(             torch.nn.ConvTranspose2d(                 in_channels=128,                 out_channels=128,                 kernel_size=(4, 4),                 stride=(2, 2),                 padding=(1, 1),             ),             torch.nn.LeakyReLU(0.2),             torch.nn.ConvTranspose2d(                 in_channels=128,                 out_channels=128,                 kernel_size=(4, 4),                 stride=(2, 2),                 padding=(1, 1),             ),             torch.nn.LeakyReLU(0.2),             torch.nn.Conv2d(                 in_channels=128, out_channels=1, kernel_size=(3, 3), padding=(1, 1)             ),             torch.nn.Tanh(),         )         self.layers = torch.nn.Sequential(self.fcn, self.deconv)      def forward(self, x):         for layer in self.layers:             x = layer(x)         return x  class Critic(torch.nn.Module):     def __init__(self):         super(Critic, self).__init__()         self.conv = torch.nn.Sequential(             Reshape(1, 28, 28),             torch.nn.Conv2d(                 in_channels=1,                 out_channels=64,                 kernel_size=(4, 4),                 stride=(2, 2),                 padding=(1, 1),             ),             torch.nn.LeakyReLU(0.2),             torch.nn.Conv2d(                 in_channels=64,                 out_channels=64,                 kernel_size=(4, 4),                 stride=(2, 2),                 padding=(1, 1),             ),             torch.nn.LeakyReLU(0.2),         )         self.classifier = torch.nn.Sequential(             Reshape(3136),             torch.nn.Linear(in_features=3136, out_features=1)         )         self.layers = torch.nn.Sequential(self.conv, self.classifier)      def forward(self, x):         for layer in self.layers:             x = layer(x)         return x.squeeze() <p>\u200b\u5c06\u200b\u4e24\u8005\u200b\u7ec4\u5408\u200b\u5728\u200b\u4e00\u8d77\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200bWasserstein GAN\u3002\u200b\u6b64\u5904\u200b\u901a\u8fc7\u200b\u68af\u5ea6\u200b\u60e9\u7f5a\u200b\u7684\u200b\u65b9\u5f0f\u200b\u6765\u200b\u4fdd\u8bc1\u200b\u5224\u522b\u200b\u5668\u662f\u200bLipschitz\u200b\u8fde\u7eed\u200b\u7684\u200b\u3002\u200b\u68af\u5ea6\u200b\u60e9\u7f5a\u200b\u7684\u200b\u8ba1\u7b97\u200b\u65b9\u5f0f\u200b\u4e3a\u200b\uff1a</p> <ol> <li>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u771f\u200b\u6837\u672c\u200b$x_{\\text{real}}$\u200b\u548c\u200b\u4e00\u4e2a\u200b\u5047\u200b\u6837\u672c\u200b$x_{\\text{fake}}$</li> <li>\u200b\u5c06\u200b\u4e24\u4e2a\u200b\u6837\u672c\u200b\u6309\u7167\u200b\u4e00\u4e2a\u200b\u968f\u673a\u200b\u6bd4\u4f8b\u200b$u \\sim \\mathcal U(0, 1)$\u200b\u6df7\u5408\u200b\uff0c\u200b\u5f97\u5230\u200b$x_{\\text{interpolated}} = u\\cdot x_{\\text{real}} + (1 - u)\\cdot x_{\\text{fake}}$</li> <li>\u200b\u8ba1\u7b97\u200b\u5224\u522b\u200b\u5668\u200b\u5728\u200b$x_{\\text{interpolated}}$\u200b\u5904\u200b\u7684\u200b\u68af\u5ea6\u200b$\\nabla$</li> <li>\u200b\u5c06\u200b$(\\Vert\\nabla\\Vert_2 - 1)^2$\u200b\u4f5c\u4e3a\u200b\u60e9\u7f5a\u200b\u9879\u200b\u52a0\u5165\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u4e2d\u200b\uff0c\u200b\u901a\u5e38\u200b\u91c7\u53d6\u200b\u7684\u200b\u60e9\u7f5a\u200b\u6743\u91cd\u200b\u4e3a\u200b10\u3002</li> </ol> In\u00a0[4]: Copied! <pre>from typing import Optional\n\nclass WGAN(torch.nn.Module):\n    def __init__(self):\n        super(WGAN, self).__init__()\n        self.generator = Generator()\n        self.critic = Critic()\n        self.device = torch.device('cpu')\n\n        for param in self.generator.parameters():\n            torch.nn.init.normal_(param, mean=0, std=0.02)\n\n    def to(self, *args, **kwargs):\n        if args:\n            self.device = args[0]\n        elif 'device' in kwargs:\n            self.device = kwargs['device']\n        super().to(*args, **kwargs)\n\n    def forward(self, x: Optional[torch.Tensor] = None, size: Optional[int] = None):\n        if x is None and size is None:\n            raise ValueError(\"Either x or size must be provided\")\n        if x is None:\n            assert size is not None\n            z = torch.randn(size, 128, device=self.device)\n            x = self.generator(z)\n        else:\n            size = x.size(0)\n            x = x.to(self.device)\n            x = x * 2 - 1\n\n        y = self.critic(x)\n        return x, y\n\n    def penalty(self, x_real: torch.Tensor, x_fake: torch.Tensor):\n        assert x_real.shape == x_fake.shape\n        size = x_real.size(0)\n        x_real = x_real.to(self.device)\n        x_fake = x_fake.to(self.device)\n        alpha = torch.rand(size, 1, 1, device=self.device)\n\n        x_real = x_real.reshape(size, 28, 28)\n        x_fake = x_fake.reshape(size, 28, 28)\n\n        x_mid = (x_real * alpha + x_fake * (1 - alpha)).detach()\n        x_mid.requires_grad_(True)\n        y = self.critic(x_mid)\n\n        gradients = torch.autograd.grad(\n            outputs=y,\n            inputs=x_mid,\n            grad_outputs=torch.ones_like(y, device=self.device),\n            create_graph=True,\n            retain_graph=True,\n            only_inputs=True\n        )[0]\n        gradient_norm = gradients.view(size, -1).norm(2, dim=1)\n\n        return (gradient_norm - 1) ** 2\n\nmodel = WGAN()\n</pre> from typing import Optional  class WGAN(torch.nn.Module):     def __init__(self):         super(WGAN, self).__init__()         self.generator = Generator()         self.critic = Critic()         self.device = torch.device('cpu')          for param in self.generator.parameters():             torch.nn.init.normal_(param, mean=0, std=0.02)      def to(self, *args, **kwargs):         if args:             self.device = args[0]         elif 'device' in kwargs:             self.device = kwargs['device']         super().to(*args, **kwargs)      def forward(self, x: Optional[torch.Tensor] = None, size: Optional[int] = None):         if x is None and size is None:             raise ValueError(\"Either x or size must be provided\")         if x is None:             assert size is not None             z = torch.randn(size, 128, device=self.device)             x = self.generator(z)         else:             size = x.size(0)             x = x.to(self.device)             x = x * 2 - 1          y = self.critic(x)         return x, y      def penalty(self, x_real: torch.Tensor, x_fake: torch.Tensor):         assert x_real.shape == x_fake.shape         size = x_real.size(0)         x_real = x_real.to(self.device)         x_fake = x_fake.to(self.device)         alpha = torch.rand(size, 1, 1, device=self.device)          x_real = x_real.reshape(size, 28, 28)         x_fake = x_fake.reshape(size, 28, 28)          x_mid = (x_real * alpha + x_fake * (1 - alpha)).detach()         x_mid.requires_grad_(True)         y = self.critic(x_mid)          gradients = torch.autograd.grad(             outputs=y,             inputs=x_mid,             grad_outputs=torch.ones_like(y, device=self.device),             create_graph=True,             retain_graph=True,             only_inputs=True         )[0]         gradient_norm = gradients.view(size, -1).norm(2, dim=1)          return (gradient_norm - 1) ** 2  model = WGAN() <p>\u200b\u7ed9\u200b\u751f\u6210\u5668\u200b\u8f93\u5165\u200b\u4e00\u4e2a\u200b\u968f\u673a\u566a\u58f0\u200b\uff0c\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b\u751f\u6210\u5668\u200b\u751f\u6210\u200b\u56fe\u7247\u200b\u3002</p> In\u00a0[5]: Copied! <pre>from matplotlib import pyplot as plt\nfrom matplotlib.axes import Axes\n\ndef plot_generator(z: torch.Tensor, model: WGAN, ax: Optional[Axes] = None):\n    z = z.to(model.device)\n    with torch.no_grad():\n        x = model.generator(z).view(28, 28).cpu().numpy() * 0.5 + 0.5\n\n    if ax is None:\n        plt.imshow(x, cmap='gray')\n        plt.axis('off')\n    else:\n        ax.imshow(x, cmap='gray')\n        ax.axis('off')\n\nx_noise = torch.randn(1, 128)\nplot_generator(x_noise, model)\nplt.show()\n</pre> from matplotlib import pyplot as plt from matplotlib.axes import Axes  def plot_generator(z: torch.Tensor, model: WGAN, ax: Optional[Axes] = None):     z = z.to(model.device)     with torch.no_grad():         x = model.generator(z).view(28, 28).cpu().numpy() * 0.5 + 0.5      if ax is None:         plt.imshow(x, cmap='gray')         plt.axis('off')     else:         ax.imshow(x, cmap='gray')         ax.axis('off')  x_noise = torch.randn(1, 128) plot_generator(x_noise, model) plt.show() <p>WGAN-GP\u200b\u539f\u200b\u8bba\u6587\u200b\u4f7f\u7528\u200bAdam\u200b\u4f18\u5316\u200b\u5668\u200b\uff0c\u200b\u5b66\u4e60\u200b\u7387\u4e3a\u200b$5\\times 10^{-4}$\uff0c\u200b\u6bcf\u200b\u8fed\u4ee3\u200b5\u200b\u6b21\u200b\u66f4\u65b0\u200b\u4e00\u6b21\u200b\u751f\u6210\u5668\u200b\u3002</p> In\u00a0[6]: Copied! <pre># Optimizer\noptimizer_g = torch.optim.Adam(model.generator.parameters(), lr=5e-4)\noptimizer_d = torch.optim.Adam(model.critic.parameters(), lr=5e-4)\n\n# Hyper parameters\nN = 100 # Number of epochs\nalpha = 10 # Gradient penalty\nK = 5 # Number of critic updates per generator update\ndevice = 'cuda:5' if torch.cuda.is_available() else 'cpu' # CUDA\nmodel.to(device)\n\n# Use random noise to inspect training process\nx_noise = torch.randn(1, 128)\n\n# Record training metrics\nstep = 0\ntrain_metrics = []\n</pre> # Optimizer optimizer_g = torch.optim.Adam(model.generator.parameters(), lr=5e-4) optimizer_d = torch.optim.Adam(model.critic.parameters(), lr=5e-4)  # Hyper parameters N = 100 # Number of epochs alpha = 10 # Gradient penalty K = 5 # Number of critic updates per generator update device = 'cuda:5' if torch.cuda.is_available() else 'cpu' # CUDA model.to(device)  # Use random noise to inspect training process x_noise = torch.randn(1, 128)  # Record training metrics step = 0 train_metrics = [] <p>\u200b\u6b64\u5904\u200b\u5728\u200b\u8bad\u7ec3\u200b\u5224\u522b\u200b\u5668\u65f6\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u771f\u5b9e\u200b\u6837\u672c\u200b\u3001\u200b\u865a\u62df\u200b\u6837\u672c\u200b\u548c\u200b\u68af\u5ea6\u200b\u60e9\u7f5a\u200b\u4e09\u4e2a\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u90e8\u5206\u200b\u5206\u522b\u200b\u8fdb\u884c\u200b\u4f18\u5316\u200b\uff0c\u200b\u5c06\u200b\u7ed3\u679c\u200b\u8bb0\u5f55\u200b\u5230\u200b<code>train_metrics</code>\u200b\u4e2d\u200b\u3002</p> In\u00a0[7]: Copied! <pre>fig, ax = plt.subplots(5, 5, figsize=(8, 8))\naxes = iter(ax.flatten())\n\nfor epoch in range(N):\n    for i, (x, _) in enumerate(train_loader, start=0):\n        model.train()\n        step_metric = {}\n        step += 1\n        size = x.size(0)\n\n        # Train critic\n        # Fake sample\n        optimizer_g.zero_grad()\n        optimizer_d.zero_grad()\n        x_fake, y_fake = model(size=size)\n        fake = y_fake.mean()\n        fake.backward()\n        step_metric['fake_score'] = fake.item()\n        optimizer_d.step()\n\n        # Real sample\n        optimizer_g.zero_grad()\n        optimizer_d.zero_grad()\n        _, y_real = model(x)\n        real = -y_real.mean()\n        step_metric['real_score'] = -(real.item())\n        real.backward()\n        optimizer_d.step()\n\n        # Gradient penalty\n        optimizer_g.zero_grad()\n        optimizer_d.zero_grad()\n        penalty = model.penalty(x, x_fake).mean()\n        step_metric['penalty'] = penalty.item()\n        penalty = penalty * alpha\n        penalty.backward()\n        optimizer_d.step()\n\n        # Train generator\n        if step % K == 0:\n            # Train generator\n            optimizer_g.zero_grad()\n            optimizer_d.zero_grad()\n            x, y = model(size=size)\n            loss_fake = -y.mean()\n            loss_fake.backward()\n            optimizer_g.step()\n\n            step_metric['generator_score'] = -(loss_fake.item())\n\n        train_metrics.append(step_metric)\n\n    if (epoch + 1) % 4 == 0:\n        model.eval()\n        ax = next(axes)\n        ax.set_title(f'Epoch {epoch + 1}', fontsize=9)\n        plot_generator(x_noise, model, ax)\n\nfig.show()\n</pre> fig, ax = plt.subplots(5, 5, figsize=(8, 8)) axes = iter(ax.flatten())  for epoch in range(N):     for i, (x, _) in enumerate(train_loader, start=0):         model.train()         step_metric = {}         step += 1         size = x.size(0)          # Train critic         # Fake sample         optimizer_g.zero_grad()         optimizer_d.zero_grad()         x_fake, y_fake = model(size=size)         fake = y_fake.mean()         fake.backward()         step_metric['fake_score'] = fake.item()         optimizer_d.step()          # Real sample         optimizer_g.zero_grad()         optimizer_d.zero_grad()         _, y_real = model(x)         real = -y_real.mean()         step_metric['real_score'] = -(real.item())         real.backward()         optimizer_d.step()          # Gradient penalty         optimizer_g.zero_grad()         optimizer_d.zero_grad()         penalty = model.penalty(x, x_fake).mean()         step_metric['penalty'] = penalty.item()         penalty = penalty * alpha         penalty.backward()         optimizer_d.step()          # Train generator         if step % K == 0:             # Train generator             optimizer_g.zero_grad()             optimizer_d.zero_grad()             x, y = model(size=size)             loss_fake = -y.mean()             loss_fake.backward()             optimizer_g.step()              step_metric['generator_score'] = -(loss_fake.item())          train_metrics.append(step_metric)      if (epoch + 1) % 4 == 0:         model.eval()         ax = next(axes)         ax.set_title(f'Epoch {epoch + 1}', fontsize=9)         plot_generator(x_noise, model, ax)  fig.show() In\u00a0[8]: Copied! <pre>from typing import Any, Dict, Iterable, List, Tuple\nimport random\n\ndef extract_metrics(data: List[Dict[str, Any]], field: str) -&gt; Tuple[List[int], List[Any]]:\n    x, y = [], []\n    for step, record in enumerate(data, start=1):\n        if field in record:\n            x.append(step)\n            y.append(record[field])\n    return x, y\n\ndef ema(x, beta):\n    y = x[0]\n    for _ in x:\n        y = beta * y + (1 - beta) * _\n        yield y\n\ndef sample(x: Iterable[Any], y: Iterable[Any], ratio: float):\n    result_x, result_y = [], []\n    for x_sample, y_sample in zip(x, y):\n        if random.random() &lt; ratio:\n            result_x.append(x_sample)\n            result_y.append(y_sample)\n    return result_x, result_y\n</pre> from typing import Any, Dict, Iterable, List, Tuple import random  def extract_metrics(data: List[Dict[str, Any]], field: str) -&gt; Tuple[List[int], List[Any]]:     x, y = [], []     for step, record in enumerate(data, start=1):         if field in record:             x.append(step)             y.append(record[field])     return x, y  def ema(x, beta):     y = x[0]     for _ in x:         y = beta * y + (1 - beta) * _         yield y  def sample(x: Iterable[Any], y: Iterable[Any], ratio: float):     result_x, result_y = [], []     for x_sample, y_sample in zip(x, y):         if random.random() &lt; ratio:             result_x.append(x_sample)             result_y.append(y_sample)     return result_x, result_y <p>\u200b\u7ed8\u56fe\u200b\u5c55\u793a\u200b\u5224\u522b\u200b\u5668\u200b\u6a21\u578b\u200b\u5728\u200b\u771f\u5b9e\u200b\u6837\u672c\u200b\u548c\u200b\u865a\u62df\u200b\u6837\u672c\u200b\u4e0a\u200b\u7684\u200b\u8f93\u51fa\u200b\u3002\u200b\u4e24\u8005\u200b\u7684\u200b\u5dee\u503c\u200b\u5373\u200b\u4e3a\u200bWasserstein distance\u3002\u200b\u901a\u8fc7\u200b\u68af\u5ea6\u200b\u60e9\u7f5a\u200b\u9879\u200b\u53ef\u4ee5\u200b\u770b\u51fa\u200b\uff0c\u200b\u5224\u522b\u200b\u5668\u200b\u5f88\u5feb\u200b\u5373\u53ef\u200b\u6536\u655b\u200b\u5230\u200b\u6ee1\u8db3\u200b1-Lipschitz\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002</p> In\u00a0[9]: Copied! <pre>fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(8, 6), sharex=True)\n\nx_real_score, y_real_score = extract_metrics(train_metrics, 'real_score')\nx_fake_score, y_fake_score = extract_metrics(train_metrics, 'fake_score')\nx_penalty, y_penalty = extract_metrics(train_metrics, 'penalty')\ny_penalty = [alpha * _ for _ in y_penalty]\n\n# Wasserstein distance\nx_diff, y_diff = zip(*[\n    (x_real, real - fake)\n    for x_real, real, x_fake, fake\n        in zip(x_real_score, y_real_score, x_fake_score, y_fake_score)\n    if x_real == x_fake\n])\n\nax1.plot(*sample(x_real_score, y_real_score, 0.01), color='lightgreen', alpha=0.5)\nax1.plot(*sample(x_fake_score, y_fake_score, 0.01), color='pink', alpha=0.5)\nax2.plot(*sample(x_diff, y_diff, 0.01), color='lightblue', alpha=0.5)\nax2.plot(*sample(x_penalty, y_penalty, 0.01), color='pink', alpha=0.5)\n\nax1.plot(*sample(x_real_score, ema(y_real_score, 0.99), 0.01), label='Real score', color='green', linewidth=1)\nax1.plot(*sample(x_fake_score, ema(y_fake_score, 0.99), 0.01), label='Fake score', color='red', linewidth=1)\nax2.plot(*sample(x_diff, ema(y_diff, 0.99), 0.01), label='Wasserstein distance', color='blue', linewidth=1)\nax2.plot(*sample(x_diff, ema(y_penalty, 0.99), 0.01), label=f'{alpha}x Gradient penalty', color='red', linewidth=1)\n\nax2.set_ylim(0, 3)\nax1.legend(loc='upper right')\nax2.legend(loc='upper right')\n\nfig.show()\n</pre> fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(8, 6), sharex=True)  x_real_score, y_real_score = extract_metrics(train_metrics, 'real_score') x_fake_score, y_fake_score = extract_metrics(train_metrics, 'fake_score') x_penalty, y_penalty = extract_metrics(train_metrics, 'penalty') y_penalty = [alpha * _ for _ in y_penalty]  # Wasserstein distance x_diff, y_diff = zip(*[     (x_real, real - fake)     for x_real, real, x_fake, fake         in zip(x_real_score, y_real_score, x_fake_score, y_fake_score)     if x_real == x_fake ])  ax1.plot(*sample(x_real_score, y_real_score, 0.01), color='lightgreen', alpha=0.5) ax1.plot(*sample(x_fake_score, y_fake_score, 0.01), color='pink', alpha=0.5) ax2.plot(*sample(x_diff, y_diff, 0.01), color='lightblue', alpha=0.5) ax2.plot(*sample(x_penalty, y_penalty, 0.01), color='pink', alpha=0.5)  ax1.plot(*sample(x_real_score, ema(y_real_score, 0.99), 0.01), label='Real score', color='green', linewidth=1) ax1.plot(*sample(x_fake_score, ema(y_fake_score, 0.99), 0.01), label='Fake score', color='red', linewidth=1) ax2.plot(*sample(x_diff, ema(y_diff, 0.99), 0.01), label='Wasserstein distance', color='blue', linewidth=1) ax2.plot(*sample(x_diff, ema(y_penalty, 0.99), 0.01), label=f'{alpha}x Gradient penalty', color='red', linewidth=1)  ax2.set_ylim(0, 3) ax1.legend(loc='upper right') ax2.legend(loc='upper right')  fig.show() In\u00a0[10]: Copied! <pre>model.eval()\nz = torch.randn(25, 128)\n\nfig, ax = plt.subplots(5, 5, figsize=(8, 8))\nfor i in range(25):\n    plot_generator(z[i].reshape(1, -1), model, ax[*divmod(i, 5)])\n</pre> model.eval() z = torch.randn(25, 128)  fig, ax = plt.subplots(5, 5, figsize=(8, 8)) for i in range(25):     plot_generator(z[i].reshape(1, -1), model, ax[*divmod(i, 5)]) <p>Paper reference:</p> <ul> <li>Wasserstein GAN<pre>@article{arjovsky2017wasserstein,\n    abstract = {We introduce a new algorithm named WGAN, an alternative to traditional GAN training. In this new model, we show that we can improve the stability of learning, get rid of problems like mode collapse, and provide meaningful learning curves useful for debugging and hyperparameter searches. Furthermore, we show that the corresponding optimization problem is sound, and provide extensive theoretical work highlighting the deep connections to other distances between distributions.},\n    author = {Martin Arjovsky and Soumith Chintala and L{\\'e}on Bottou},\n    eprint = {1701.07875},\n    month = {01},\n    title = {Wasserstein GAN},\n    url = {https://arxiv.org/pdf/1701.07875.pdf},\n    year = {2017}\n}\n</pre> </li> <li>Improved Training of Wasserstein GANs (WGAN-GP)<pre>@article{gulrajani2017improved,\n    abstract = {Generative Adversarial Networks (GANs) are powerful generative models, but suffer from training instability. The recently proposed Wasserstein GAN (WGAN) makes progress toward stable training of GANs, but sometimes can still generate only low-quality samples or fail to converge. We find that these problems are often due to the use of weight clipping in WGAN to enforce a Lipschitz constraint on the critic, which can lead to undesired behavior. We propose an alternative to clipping weights: penalize the norm of gradient of the critic with respect to its input. Our proposed method performs better than standard WGAN and enables stable training of a wide variety of GAN architectures with almost no hyperparameter tuning, including 101-layer ResNets and language models over discrete data. We also achieve high quality generations on CIFAR-10 and LSUN bedrooms.},\n    author = {Ishaan Gulrajani and Faruk Ahmed and Martin Arjovsky and Vincent Dumoulin and Aaron Courville},\n    eprint = {1704.00028},\n    month = {04},\n    title = {Improved Training of Wasserstein GANs},\n    url = {https://arxiv.org/pdf/1704.00028.pdf},\n    year = {2017}\n}\n</pre> </li> </ul>"},{"location":"coding/machine-learning/wgan/#wasserstein-gan","title":"Wasserstein GAN\u00b6","text":"<p>Wasserstein GAN\u200b\u662f\u200bGAN\u200b\u7684\u200b\u53d8\u79cd\u200b\u3002JS\u200b\u6563\u5ea6\u200b\u7684\u200b\u95ee\u9898\u200b\u5728\u4e8e\u200b\u5f53\u200b\u5206\u5e03\u200b$P$\u200b\u548c\u200b$Q$\u200b\u6ca1\u6709\u200b\u91cd\u53e0\u200b\u6216\u200b\u91cd\u53e0\u200b\u5f88\u200b\u5c0f\u65f6\u200b\uff0c\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\u9000\u5316\u200b\u7684\u200b\u73b0\u8c61\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0cWasserstein GAN\u200b\u63d0\u51fa\u200b\u4e86\u200b\u4f7f\u7528\u200bWasserstein\u200b\u8ddd\u79bb\u200b\u6765\u200b\u8861\u91cf\u200b\u751f\u6210\u200b\u5206\u5e03\u200b\u548c\u200b\u771f\u5b9e\u200b\u5206\u5e03\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5dee\u5f02\u200b\u3002</p> <p>Wasserstein\u200b\u8ddd\u79bb\u200b\u8861\u91cf\u200b\u4ece\u200b\u4e00\u4e2a\u200b\u5206\u5e03\u200b\u7684\u200b\u5206\u5e03\u200b\u51fd\u6570\u200b\u53d8\u6362\u200b\u5230\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5206\u5e03\u200b\u7684\u200b\u5206\u5e03\u200b\u51fd\u6570\u200b\u7684\u200b\u6700\u5c0f\u200b\u6210\u672c\u200b\u3002\u200b\u8bbe\u200b$P$\u200b\u548c\u200b$Q$\u200b\u662f\u200b\u5b9a\u4e49\u200b\u5728\u200b$\\mathbb{R}^n$\u200b\u4e0a\u200b\u7684\u200b\u4e24\u4e2a\u200b\u5206\u5e03\u200b\uff0c$P$\u200b\u548c\u200b$Q$\u200b\u7684\u200b\u5206\u5e03\u200b\u51fd\u6570\u200b\u5206\u522b\u200b\u4e3a\u200b$P(x)$\u200b\u548c\u200b$Q(x)$\uff0c\u200b\u5219\u200bWasserstein\u200b\u8ddd\u79bb\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\uff1a</p> <p>$$ W_p(P, Q) = \\inf_{\\gamma \\in \\Pi(P, Q)} \\mathbb{E}_{(x, y) \\sim \\gamma} \\Vert x - y\\Vert_p $$</p> <p>\u200b\u5176\u4e2d\u200b$\\Vert\\cdot\\Vert_p$\u200b\u4e3a\u200b$p$-\u200b\u8303\u6570\u200b\uff0c$\\Pi(P, Q)$\u200b\u4e3a\u200b$\\mathbb{R}^n \\times \\mathbb{R}^n$\u200b\u4e0a\u200b\u7684\u200b\u5206\u5e03\u200b\uff0c\u200b\u5e76\u4e14\u200b\u6ee1\u8db3\u200b$\\Pi(P, Q)$\u200b\u7684\u200b\u8fb9\u7f18\u200b\u5206\u5e03\u200b\u5206\u522b\u200b\u4e3a\u200b$P$\u200b\u548c\u200b$Q$\u3002</p>"},{"location":"coding/python/","title":"Python","text":"<ul> <li>\u200b\u5173\u95ed\u200bPython\u200b\u7ebf\u7a0b\u200b</li> <li>Python\u200b\u4e2d\u200b\u7684\u200b\u9b54\u672f\u200b\u65b9\u6cd5\u200b</li> <li>\u200b\u5e8f\u5217\u200b\u7c7b\u578b\u200b</li> <li>\u200b\u6620\u5c04\u200b\u7c7b\u578b\u200b</li> <li>\u200b\u5b57\u8282\u200b\u7c7b\u578b\u200b</li> <li>\u200b\u51fd\u6570\u200b</li> </ul>"},{"location":"coding/python/bytes/","title":"Python\u200b\u4e2d\u200b\u7684\u200b\u5b57\u8282\u200b\u7c7b\u578b","text":"<p>Python\u200b\u4e2d\u200b\u7684\u200b\u5b57\u8282\u200b\u7c7b\u578b\u200b\u5305\u62ec\u200b\u5b57\u8282\u200b\u6d41\u200b\u4e0e\u200b\u5b57\u7b26\u4e32\u200b\u3002</p> <p>\u200b\u5b57\u7b26\u4e32\u200b\u662f\u200b\u7531\u200b\u5b57\u7b26\u200b\u7ec4\u6210\u200b\u7684\u200b\u5e8f\u5217\u200b\u3002\u200b\u5b57\u7b26\u200b\u662f\u200b\u7ec4\u6210\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u57fa\u672c\u200b\u5355\u4f4d\u200b\uff0c\u200b\u5bf9\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5207\u7247\u200b\u7b49\u200b\u64cd\u4f5c\u200b\u4ee5\u200b\u5b57\u7b26\u200b\u4e3a\u200b\u5355\u4f4d\u200b\u8fdb\u884c\u200b\u3002\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u200b\u7531\u200b\u4e24\u4e2a\u200b\u90e8\u5206\u200b\u8fdb\u884c\u200b\u5b9a\u4e49\u200b\uff1a</p> <ul> <li>\u200b\u7801\u4f4d\u200b\uff0c\u200b\u5373\u200b\u5b57\u7b26\u200b\u7684\u200b\u5b57\u8282\u200b\u6570\u503c\u200b\u3002</li> <li>\u200b\u7f16\u7801\u65b9\u5f0f\u200b\uff0c\u200b\u5373\u200b\u5b57\u8282\u200b\u6570\u503c\u200b\u4e0e\u200b\u5b57\u7b26\u200b\u7684\u200b\u5bf9\u5e94\u200b\u5173\u7cfb\u200b\u3002</li> </ul> <p>\u200b\u901a\u8fc7\u200b\u7f16\u7801\u200b\u4e0e\u200b\u89e3\u7801\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u5b57\u7b26\u4e32\u200b\u4e0e\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8f6c\u6362\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; \"abc\".encode() \nb'abc'\n&gt;&gt;&gt; b\"abc\".decode()\n'abc'\n&gt;&gt;&gt;\n</code></pre> <p>Python\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e24\u79cd\u200b\u5b57\u8282\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5373\u200b<code>bytes</code>\u200b\u4e0e\u200b<code>bytearray</code>\uff0c\u200b\u4e24\u8005\u200b\u90fd\u200b\u662f\u200b\u7531\u200b\u65e0\u200b\u7b26\u53f7\u200b\u5b57\u8282\u200b\uff08\u200b\u53d6\u503c\u200b\u8303\u56f4\u200b\u4e3a\u200b0~255\uff09\u200b\u4e3a\u200b\u5355\u4f4d\u200b\u7ec4\u6210\u200b\u7684\u200b\u5e8f\u5217\u200b\u3002<code>bytes</code>\u200b\u662f\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u5e8f\u5217\u200b\u3002</p> <pre><code>&gt;&gt;&gt; b\"\\xff\\xff\"[0]\n255\n&gt;&gt;&gt; bytes(3)[0]=1   \nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: 'bytes' object does not support item assignment\n&gt;&gt;&gt;\n</code></pre> <p>New in version 3.5</p> <p><code>bytes</code>\u200b\u5bf9\u8c61\u200b\u4e0e\u200b<code>bytearray</code>\u200b\u5bf9\u8c61\u200b\u6dfb\u52a0\u200b\u4e86\u200b<code>hex</code>\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u8fd4\u56de\u200b\u5b57\u8282\u200b\u7684\u200b\u5341\u516d\u8fdb\u5236\u200b\u8868\u793a\u200b\u5f62\u5f0f\u200b\u3002\u200b\u8be5\u200b\u51fd\u6570\u200b\u4e0e\u200b<code>bytes</code>\u200b\u5bf9\u8c61\u200b\u7684\u200b<code>fromhex</code>\u200b\u65b9\u6cd5\u200b\u76f8\u53cd\u200b\u3002</p> <pre><code>&gt;&gt;&gt; import random\n&gt;&gt;&gt; seq = random.randbytes(8) # New in Python 3.9\n&gt;&gt;&gt; seq.hex() # doctest: +SKIP\n'f04be4376519e9ce'\n&gt;&gt;&gt;\n</code></pre> <p>Changed in version 3.8</p> <p><code>hex</code>\u200b\u65b9\u6cd5\u200b\u65b0\u589e\u200b\u4e86\u200b\u53ef\u9009\u200b\u7684\u200b<code>sep</code>\u200b\u53c2\u6570\u200b\u4e0e\u200b<code>bytes_per_sep</code>\u200b\u53c2\u6570\u200b\u3002</p> <ul> <li><code>sep</code>\u200b\u53c2\u6570\u200b\u6307\u5b9a\u200b\u533a\u6bb5\u200b\u95f4\u200b\u7684\u200b\u8fde\u63a5\u200b\u5b57\u7b26\u4e32\u200b\uff1b</li> <li><code>bytes_per_sep</code>\u200b\u53c2\u6570\u200b\u7528\u4e8e\u200b\u5212\u5206\u200b\u8fde\u7eed\u200b\u7684\u200b\u5b57\u8282\u200b\u6bb5\u200b\uff0c\u200b\u5b57\u8282\u200b\u6bb5\u200b\u4ece\u200b\u53f3\u200b\u5f80\u200b\u5de6\u200b\u8fdb\u884c\u200b\u5212\u5206\u200b\u3002</li> </ul> <pre><code># Following the previous example\n&gt;&gt;&gt; seq.hex('-') # doctest: +SKIP\n'f0-4b-e4-37-65-19-e9-ce'\n&gt;&gt;&gt; seq.hex('-', 2) # doctest: +SKIP\n'f04b-e437-6519-e9ce'\n&gt;&gt;&gt; seq.hex('-', 3) # doctest: +SKIP\n'f04b-e43765-19e9ce'\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u7684\u200b\u5b57\u8282\u200b\u6709\u200b\u4e09\u79cd\u200b\u8868\u793a\u200b\u65b9\u5f0f\u200b\uff1a</p> <ul> <li>ASCII\u200b\u4e2d\u200b\u89c4\u5b9a\u200b\u7684\u200b\u53ef\u200b\u6253\u5370\u200b\u5b57\u7b26\u200b\uff0c\u200b\u4f7f\u7528\u200b\u8be5\u200b\u5b57\u7b26\u200b\u672c\u8eab\u200b</li> <li>\u200b\u5236\u8868\u7b26\u200b\u3001\u200b\u6362\u884c\u7b26\u200b\u3001\u200b\u56de\u8f66\u7b26\u200b\u4e0e\u200b\u53cd\u200b\u659c\u6760\u200b\u4f7f\u7528\u200b\u5bf9\u5e94\u200b\u7684\u200b\u8f6c\u4e49\u5e8f\u5217\u200b\u8868\u793a\u200b\uff0c\u200b\u5373\u200b<code>\\t, \\n, \\r, \\\\</code></li> <li>\u200b\u6240\u6709\u200b\u5b57\u8282\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u5341\u516d\u8fdb\u5236\u200b\u8f6c\u4e49\u5e8f\u5217\u200b\u8868\u793a\u200b\uff0c\u200b\u5982\u200b<code>\\x00</code></li> </ul> <pre><code>&gt;&gt;&gt; b\"\\t\" == b\"\\x09\"\nTrue\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u5b57\u7b26\u4e32\u200b\u4e0e\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\u7684\u200b\u533a\u522b\u200b\u5728\u4e8e\u200b\uff1a\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u7d22\u5f15\u200b\u4e0e\u200b\u5207\u7247\u200b\u64cd\u4f5c\u200b\u8fd4\u56de\u200b\u7684\u200b\u5bf9\u8c61\u200b\u90fd\u200b\u662f\u200b\u5b57\u7b26\u4e32\u200b\u7c7b\u578b\u200b\uff1b\u200b\u800c\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\u7684\u200b\u7d22\u5f15\u200b\u64cd\u4f5c\u200b\u8fd4\u56de\u200b<code>int</code>\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5207\u7247\u200b\u64cd\u4f5c\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\u3002</p>"},{"location":"coding/python/bytes/#_1","title":"\u6784\u9020","text":"<p>\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u6784\u9020\u200b\u975e\u5e38\u7b80\u5355\u200b\uff0c\u200b\u6b64\u5904\u200b\u4e0d\u200b\u505a\u200b\u8ba8\u8bba\u200b\u3002\u200b\u5728\u200b\u5b57\u7b26\u4e32\u200b\u524d\u52a0\u200b<code>r</code>\u200b\u53ef\u4ee5\u200b\u53d6\u6d88\u200b\u5b57\u7b26\u4e32\u200b\u5185\u90e8\u200b\u7684\u200b\u8f6c\u4e49\u200b\uff0c\u200b\u5982\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; print(r\"ab\\n\") \nab\\n\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u5728\u200b\u5b57\u7b26\u4e32\u200b\u524d\u52a0\u200b<code>b</code>\u200b\u53ef\u4ee5\u200b\u6784\u9020\u200b\u4e00\u4e2a\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\u3002\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u53ea\u80fd\u200b\u5305\u542b\u200bASCII\u200b\u53ef\u200b\u6253\u5370\u200b\u5b57\u7b26\u200b\u3002</p> <p>\u200b\u9664\u6b64\u4e4b\u5916\u200b\uff0c\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\u8fd8\u6709\u200b\u5982\u4e0b\u200b\u6784\u9020\u200b\u65b9\u5f0f\u200b\uff1a</p> <ul> <li>\u200b\u6307\u5b9a\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u548c\u200b\u5bf9\u5e94\u200b\u7684\u200b\u7f16\u7801\u65b9\u5f0f\u200b\uff0c\u200b\u5c06\u200b\u8be5\u200b\u5b57\u7b26\u4e32\u200b\u7f16\u7801\u200b\u4e3a\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b</li> <li>\u200b\u4e00\u4e2a\u200b\u4ec5\u200b\u5305\u542b\u200b<code>0~255</code>\u200b\u5185\u200b\u6570\u503c\u200b\u7684\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u5bf9\u8c61\u200b</li> <li>\u200b\u4e00\u4e2a\u200b\u5b9e\u73b0\u200b\u7f13\u51b2\u200b\u534f\u8bae\u200b\u7684\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5c06\u200b\u8be5\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u7684\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\u590d\u5236\u5230\u200b\u65b0\u200b\u7684\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\u4e2d\u200b\uff08\u200b\u53ef\u80fd\u200b\u6d89\u53ca\u200b\u7c7b\u578b\u8f6c\u6362\u200b\uff09</li> <li>\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\uff0c\u200b\u521b\u5efa\u200b\u5bf9\u5e94\u200b\u957f\u5ea6\u200b\u7684\u200b\u7a7a\u200b\u5b57\u8282\u200b\u5bf9\u8c61\u200b</li> </ul> <p>\u200b\u5982\u200b\uff0c\u200b\u4ece\u200b<code>array.array</code>\u200b\u5bf9\u8c61\u200b\u521b\u5efa\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; import array  \n&gt;&gt;&gt; import random\n&gt;&gt;&gt; a = array.array(\"H\", [51417, 45016, 65120, 9976])\n&gt;&gt;&gt; b = bytes(a)\n&gt;&gt;&gt; b\nb'\\xd9\\xc8\\xd8\\xaf`\\xfe\\xf8&amp;'\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/bytes/#_2","title":"\u7ed3\u6784\u200b\u4f53","text":"<p><code>struct</code>\u200b\u6a21\u5757\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5c06\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u5b57\u6bb5\u200b\u7684\u200b\u5143\u7ec4\u200b\uff0c\u200b\u7c7b\u4f3c\u200b\u4e8e\u200bC\u200b\u8bed\u8a00\u200b\u7ed3\u6784\u200b\u4f53\u200b\u7684\u200b\u529f\u80fd\u200b\u3002</p>"},{"location":"coding/python/bytes/#_3","title":"\u7ed3\u6784\u200b\u5b9a\u4e49","text":"<p>\u200b\u7ed3\u6784\u200b\u5b9a\u4e49\u200b\u5305\u542b\u200b\u4e24\u4e2a\u200b\u90e8\u5206\u200b\uff0c\u200b\u5373\u200b\u5b57\u8282\u200b\u987a\u5e8f\u200b\u4e0e\u200b\u5b57\u200b\u6bb5\u200b\u3002<code>struct</code>\u200b\u6a21\u5757\u200b\u5141\u8bb8\u200b\u591a\u79cd\u200b\u5b57\u8282\u200b\u987a\u5e8f\u200b</p> \u200b\u5b57\u7b26\u200b \u200b\u5b57\u8282\u200b\u987a\u5e8f\u200b \u200b\u5927\u5c0f\u200b \u200b\u5bf9\u9f50\u200b\u65b9\u5f0f\u200b <code>@</code> native native native <code>=</code> native standard none <code>&lt;</code> little-endian standard none <code>&gt;</code> big-endian standard none <code>!</code> network (= big-endian) standard none <p>\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u5b57\u8282\u200b\u987a\u5e8f\u200b\u4e3a\u200b<code>@</code>\u3002</p> <p><code>struct</code>\u200b\u6a21\u5757\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u5b9a\u4e49\u200b\u5982\u4e0b\u200b\uff0c\u200b\u6240\u6709\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u5728\u200bC\u200b\u8bed\u8a00\u200b\u4e2d\u200b\u90fd\u200b\u6709\u200b\u5bf9\u5e94\u200b\u7684\u200b\u7c7b\u578b\u200b\uff1a</p> \u200b\u5b57\u7b26\u200b C \u200b\u7c7b\u578b\u200b Python \u200b\u7c7b\u578b\u200b \u200b\u5b57\u200b\u5bbd\u200b <code>x</code> \uff08\u200b\u586b\u5145\u200b\u5b57\u8282\u200b\uff09 N/A <code>c</code> <code>char</code> \u200b\u957f\u5ea6\u200b\u4e3a\u200b1\u200b\u7684\u200b\u5b57\u8282\u200b 1 <code>b</code> <code>signed char</code> <code>int</code> 1 <code>B</code> <code>unsigned char</code> <code>int</code> 1 <code>?</code> <code>_Bool</code> <code>bool</code> 1 <code>h</code> <code>short</code> <code>int</code> 2 <code>H</code> <code>unsigned short</code> <code>int</code> 2 <code>i</code> <code>int</code> <code>int</code> 4 <code>I</code> <code>unsigned int</code> <code>int</code> 4 <code>l</code> <code>long</code> <code>int</code> 4 <code>L</code> <code>unsigned long</code> <code>int</code> 4 <code>q</code> <code>long long</code> <code>int</code> 8 <code>Q</code> <code>unsigned long long</code> <code>int</code> 8 <code>n</code> <code>ssize_t</code> <code>int</code> \uff08\u200b\u4ec5\u200b\u9002\u7528\u200b\u4e8e\u200b\u9ed8\u8ba4\u200b\u6216\u200b<code>@</code>\u200b\u5b57\u8282\u200b\u987a\u5e8f\u200b\uff09 <code>N</code> <code>size_t</code> <code>int</code> \uff08\u200b\u4ec5\u200b\u9002\u7528\u200b\u4e8e\u200b\u9ed8\u8ba4\u200b\u6216\u200b<code>@</code>\u200b\u5b57\u8282\u200b\u987a\u5e8f\u200b\uff09 <code>e</code> \uff08\u200b\u534a\u200b\u7cbe\u5ea6\u200b\uff09 <code>float</code> 2 <code>f</code> <code>float</code> <code>float</code> 4 <code>d</code> <code>double</code> <code>float</code> 8 <code>s</code> <code>char[]</code> <code>bytes</code> \u200b\u4e0e\u200b\u5b57\u7b26\u4e32\u200b\u957f\u5ea6\u200b\u6709\u5173\u200b <code>p</code> <code>char[]</code> <code>bytes</code> \u200b\u4e0e\u200b\u5b57\u7b26\u4e32\u200b\u957f\u5ea6\u200b\u6709\u5173\u200b <code>P</code> <code>void *</code> <code>int</code> <p>\u200b\u5f53\u200b\u8bd5\u56fe\u200b\u5c06\u200b\u975e\u200b\u6574\u6570\u200b\u5bf9\u8c61\u200b\u6253\u5305\u200b\u4e3a\u200b\u6574\u6570\u200b\u7c7b\u578b\u200b\u65f6\u200b\uff0c\u200b\u4f1a\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\u7684\u200b<code>__index__</code>\u200b\u65b9\u6cd5\u200b\u3002</p> <p>\u200b\u4e00\u4e2a\u200b\u7ed3\u6784\u200b\u4f53\u200b\u7684\u200b\u5b9a\u4e49\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u6309\u7167\u200b\u5982\u4e0b\u200b\u7ed3\u6784\u200b\u7ec4\u7ec7\u200b\uff1a</p> <ol> <li>\u200b\u7b2c\u4e00\u4e2a\u200b\u5b57\u7b26\u200b\u8868\u793a\u200b\u5b57\u8282\u200b\u987a\u5e8f\u200b</li> <li>\u200b\u6b64\u540e\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u8868\u793a\u200b\u7ed3\u6784\u200b\u4f53\u4e2d\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u7c7b\u578b\u200b</li> <li>\u200b\u9664\u200b<code>s</code>\u200b\u548c\u200b<code>p</code>\u200b\u4ee5\u5916\u200b\uff0c\u200b\u5b57\u6bcd\u200b\u524d\u200b\u7684\u200b\u6570\u5b57\u200b\u8868\u660e\u200b\u8be5\u5b57\u6bb5\u200b\u91cd\u590d\u200b\u51fa\u73b0\u200b\u7684\u200b\u6b21\u6570\u200b</li> <li><code>s</code>\u3001<code>p</code>\u200b\u524d\u200b\u7684\u200b\u6570\u5b57\u200b\u8868\u660e\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u957f\u5ea6\u200b</li> </ol> <p>\u200b\u7ed3\u6784\u200b\u4f53\u200b\u5b57\u7b26\u4e32\u200b\u53ef\u4ee5\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b<code>struct.Struct</code>\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u4e24\u8005\u200b\u5b9e\u73b0\u200b\u76f8\u540c\u200b\u7684\u200b\u529f\u80fd\u200b\u3002</p>"},{"location":"coding/python/bytes/#_4","title":"\u7ed3\u6784\u200b\u64cd\u4f5c","text":"<p>\u200b\u5bf9\u4e8e\u200b\u4e00\u4e2a\u200b\u5b9a\u4e49\u200b\u7684\u200b\u7ed3\u6784\u200b\u4f53\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u6570\u636e\u200b\u6309\u7167\u200b\u7ed3\u6784\u200b\u4f53\u200b\u8fdb\u884c\u200b\u6253\u5305\u200b\uff0c\u200b\u6216\u200b\u5c06\u200b\u7ed3\u6784\u200b\u4f53\u4e2d\u200b\u7684\u200b\u6570\u636e\u200b\u89e3\u5305\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u663e\u793a\u200b\u7ed3\u6784\u200b\u4f53\u200b\u7684\u200b\u5927\u5c0f\u200b\u3002</p> <pre><code>&gt;&gt;&gt; import struct   \n&gt;&gt;&gt; struct.pack('&lt;hhf', 1, 2, 3)\nb'\\x01\\x00\\x02\\x00\\x00\\x00@@'\n&gt;&gt;&gt; struct.unpack('&lt;hhf', b'\\x01\\x00\\x02\\x00\\x00\\x00@@')\n(1, 2, 3.0)\n&gt;&gt;&gt;\n</code></pre> <p>New in version 3.4</p> <p><code>struct</code>\u200b\u5bf9\u8c61\u200b\u65b0\u589e\u200b\u4e86\u200b<code>iter_unpack</code>\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u4e0d\u540c\u4e8e\u200b<code>unpack</code>\u200b\u51fd\u6570\u200b\uff0c<code>iter_unpack</code>\u200b\u51fd\u6570\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u8fed\u4ee3\u200b\u5668\u200b\u3002</p> <p><code>struct</code>\u200b\u6a21\u5757\u200b\u4e0d\u4f1a\u200b\u5bf9\u200b\u5b57\u8282\u200b\u987a\u5e8f\u200b\u8fdb\u884c\u200b\u68c0\u6d4b\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5bf9\u4e8e\u200b\u540c\u4e00\u4e2a\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\uff0c\u200b\u4e0d\u540c\u200b\u7684\u200b\u7ed3\u6784\u200b\u4f53\u200b\u5b9a\u4e49\u200b\u5728\u200b\u89e3\u5305\u200b\u540e\u4f1a\u200b\u6709\u200b\u4e0d\u540c\u200b\u7684\u200b\u7ed3\u679c\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; struct.unpack('&gt;hhf', b'\\x01\\x00\\x02\\x00\\x00\\x00@@') \n(256, 512, 2.304855714121459e-41)\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u6bcf\u4e2a\u200b\u5b57\u6bb5\u200b\u90fd\u200b\u6709\u200b\u8303\u56f4\u200b\u9650\u5236\u200b\uff0c\u200b\u5f53\u200b\u4f20\u5165\u200b\u7684\u200b\u53c2\u6570\u200b\u8d85\u8fc7\u200b\u5b57\u6bb5\u200b\u6240\u200b\u5141\u8bb8\u200b\u7684\u200b\u8303\u56f4\u200b\uff0c\u200b\u5219\u200b\u4f1a\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; struct.pack('&lt;hhf', 32768, -32769, 3)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nstruct.error: short format requires (-32768) &lt;= number &lt;= 32767\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u5f53\u200b\u89e3\u5305\u200b\u7684\u200b\u5b57\u8282\u200b\u957f\u5ea6\u200b\u4e0e\u200b\u7ed3\u6784\u200b\u4f53\u200b\u7684\u200b\u957f\u5ea6\u200b\u4e0d\u200b\u5bf9\u5e94\u200b\u65f6\u200b\uff0c\u200b\u4e5f\u200b\u4f1a\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; struct.unpack('&gt;hhf', b'\\x01\\x00\\x02\\x00\\x00\\x00@')  \nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nstruct.error: unpack requires a buffer of 8 bytes\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u5bf9\u4e8e\u200b\u4efb\u4f55\u200b\u7ed3\u6784\u200b\u4f53\u200b\uff0c<code>struct</code>\u200b\u6a21\u5757\u200b\u63d0\u4f9b\u200b\u4e86\u200b<code>calcsize</code>\u200b\u65b9\u6cd5\u200b\u7528\u4e8e\u200b\u68c0\u67e5\u200b\u7ed3\u6784\u200b\u4f53\u200b\u957f\u5ea6\u200b\u3002</p>"},{"location":"coding/python/bytes/#_5","title":"\u5185\u5b58\u200b\u89c6\u56fe","text":"<p>\u200b\u5185\u5b58\u200b\u89c6\u56fe\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5728\u200b\u4e0d\u540c\u200b\u5bf9\u8c61\u200b\u95f4\u200b\u5171\u4eab\u5185\u5b58\u200b\u7684\u200b\u65b9\u5f0f\u200b\u3002</p> <p>\u200b\u6709\u5173\u200b\u5185\u5b58\u200b\u89c6\u56fe\u200b\u7684\u200b\u5185\u5bb9\u200b\uff0c\u200b\u8bf7\u200b\u53c2\u89c1\u200b\u5e8f\u5217\u200b\u7c7b\u578b\u200b\u7684\u200b\u5185\u5b58\u200b\u89c6\u56fe\u200b\u90e8\u5206\u200b\u3002</p>"},{"location":"coding/python/bytes/#_6","title":"\u5b57\u7b26\u4e32","text":"<p>\u200b\u6b64\u5904\u200b\u7740\u91cd\u200b\u8ba8\u8bba\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u76f8\u5173\u200b\u95ee\u9898\u200b</p>"},{"location":"coding/python/bytes/#_7","title":"\u7f16\u7801\u200b\u4e0e\u200b\u89e3\u7801","text":"<p>\u200b\u5982\u524d\u6240\u8ff0\u200b\uff0c<code>str.encode</code>\u200b\u65b9\u6cd5\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4ece\u200b\u5b57\u7b26\u4e32\u200b\u5230\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\u7684\u200b\u8f6c\u6362\u200b\u65b9\u5f0f\u200b\uff0c<code>encoding</code>\u200b\u53c2\u6570\u200b\u6307\u660e\u200b\u4e86\u200b\u6240\u200b\u4f7f\u7528\u200b\u7684\u200b\u7f16\u7801\u5668\u200b\u3002</p> <pre><code>&gt;&gt;&gt; \"\u200b\u6d4b\u8bd5\u200b\".encode(\"utf-8\") \nb'\\xe6\\xb5\\x8b\\xe8\\xaf\\x95'\n&gt;&gt;&gt; \"\u200b\u6d4b\u8bd5\u200b\".encode(\"utf-16\")\nb'\\xff\\xfeKm\\xd5\\x8b'\n&gt;&gt;&gt; \"\u200b\u6d4b\u8bd5\u200b\".encode(\"gb2312\")  \nb'\\xb2\\xe2\\xca\\xd4'\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u5f53\u200b\u7f16\u7801\u200b\u8fc7\u7a0b\u200b\u51fa\u73b0\u200b\u9519\u8bef\u200b\uff0c\u200b\u5982\u200b\u7f16\u7801\u5668\u200b\u65e0\u6cd5\u200b\u8bc6\u522b\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u7684\u200b\u5b57\u7b26\u200b\u65f6\u200b\uff0c\u200b\u4f1a\u200b\u629b\u51fa\u200b<code>UnicodeEncodeError</code>\u200b\u5f02\u5e38\u200b\u3002</p> <pre><code>&gt;&gt;&gt; \"\u200b\u6d4b\u8bd5\u200b\".encode(\"latin-1\")\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nUnicodeEncodeError: 'latin-1' codec can't encode characters in position 0-1: ordinal not in range(256)\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u51fa\u73b0\u200b\u9519\u8bef\u200b\u65f6\u200b\uff0c\u200b\u6709\u200b\u4ee5\u4e0b\u200b\u89e3\u51b3\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b<code>errors</code>\u200b\u53c2\u6570\u200b\u6307\u5b9a\u200b\uff1a</p> <ul> <li><code>ignore</code>\uff1a\u200b\u8df3\u8fc7\u200b\u65e0\u6cd5\u200b\u7f16\u7801\u200b\u7684\u200b\u5b57\u7b26\u200b</li> <li><code>replace</code>\uff1a\u200b\u5c06\u200b\u65e0\u6cd5\u200b\u7f16\u7801\u200b\u7684\u200b\u5b57\u7b26\u200b\u66ff\u6362\u200b\u4e3a\u200b<code>?</code></li> <li><code>xmlcharrefreplace</code>\uff1a\u200b\u5c06\u200b\u65e0\u6cd5\u200b\u7f16\u7801\u200b\u7684\u200b\u5b57\u7b26\u200b\u66ff\u6362\u200b\u4e3a\u200b<code>xml</code>\u200b\u5b9e\u4f53\u200b\uff08\u200b\u5373\u200bXML\u200b\u4e2d\u200b\u6240\u200b\u4f7f\u7528\u200b\u7684\u200b\u5b57\u7b26\u200b\u8f6c\u6362\u200b\u65b9\u5f0f\u200b\uff09</li> </ul> <pre><code>&gt;&gt;&gt; \"\u200b\u6d4b\u8bd5\u200b\".encode(\"latin-1\", errors=\"ignore\")\nb''\n&gt;&gt;&gt; \"\u200b\u6d4b\u8bd5\u200b\".encode(\"latin-1\", errors=\"replace\")\nb'??'\n&gt;&gt;&gt; \"\u200b\u6d4b\u8bd5\u200b\".encode(\"latin-1\", errors=\"xmlcharrefreplace\")\nb'&amp;#27979;&amp;#35797;'\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u5bf9\u5e94\u200b\u5730\u200b\uff0c\u200b\u89e3\u7801\u5668\u200b\u65e0\u6cd5\u200b\u8bc6\u522b\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\u7684\u200b\u5b57\u8282\u200b\u65f6\u4f1a\u200b\u4ea7\u751f\u200b<code>UnicodeDecodeError</code>\u200b\u5f02\u5e38\u200b\u3002\u200b\u4f46\u200b\u4e0d\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b\u4e0d\u200b\u4ee3\u8868\u200b\u89e3\u7801\u200b\u6210\u529f\u200b\uff0c\u200b\u89e3\u7801\u200b\u5f97\u5230\u200b\u7684\u200b\u6570\u636e\u200b\u53ef\u80fd\u200b\u662f\u200b\u65e0\u7528\u200b\u6570\u636e\u200b\u3002<code>errors</code>\u200b\u53c2\u6570\u200b\u6307\u5b9a\u200b\u4e86\u200b\u89e3\u7801\u5668\u200b\u5728\u200b\u51fa\u9519\u200b\u65f6\u200b\u7684\u200b\u884c\u4e3a\u200b\uff0c<code>replace</code>\u200b\u5c06\u200b\u65e0\u6cd5\u200b\u7f16\u7801\u200b\u7684\u200b\u5b57\u7b26\u200b\u66ff\u6362\u200b\u4e3a\u200b<code>\ufffd</code>\u3002</p> <p><code>chardet</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u57fa\u4e8e\u200bPython\u200b\u7684\u200b\u5b57\u7b26\u200b\u7f16\u7801\u200b\u68c0\u6d4b\u5de5\u5177\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4e8c\u8fdb\u5236\u200b\u5e8f\u5217\u200b\u5bf9\u200b\u539f\u59cb\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u7f16\u7801\u65b9\u5f0f\u200b\u8fdb\u884c\u200b\u63a8\u65ad\u200b\u3002\u200b\u4e0d\u8fc7\u200b\u63a8\u65ad\u200b\u4ec5\u200b\u9002\u7528\u200b\u4e8e\u200b\u8f83\u200b\u957f\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u4efb\u4f55\u200b\u5b57\u7b26\u4e32\u200b\u4f1a\u200b\u6709\u200b\u591a\u4e2a\u200b\u7f16\u7801\u65b9\u5f0f\u200b\u9002\u7528\u200b\u4e8e\u200b\u540c\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u6240\u4ee5\u200b\u65e0\u6cd5\u200b\u5b8c\u5168\u200b\u786e\u5b9a\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u7f16\u7801\u65b9\u5f0f\u200b\u3002</p>"},{"location":"coding/python/bytes/#bom","title":"BOM","text":"<p>BOM\u200b\u662f\u200b\u5b57\u8282\u200b\u5e8f\u200b\u6807\u8bb0\u200b\uff0c\u200b\u5bf9\u5e94\u200b\u7684\u200bUnicode\u200b\u5b57\u7b26\u200b\u4e3a\u200b<code>U+FEFF</code>\uff08\u200b\u4e0d\u200b\u5b58\u5728\u200b<code>U+FFFE</code>\u200b\u5b57\u7b26\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8be5\u200b\u5b57\u7b26\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u63a8\u65ad\u200b\u5b57\u8282\u200b\u987a\u5e8f\u200b\uff09</p> <p>\u200b\u5728\u200bUTF-16\u200b\u7f16\u7801\u200b\u7684\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\u5f00\u5934\u200b\u4f1a\u200b\u5199\u5165\u200bBOM\uff0c\u200b\u5982\u679c\u200b\u5f00\u5934\u200b\u662f\u200b<code>b'\\xff\\xfe'</code>\u200b\u4e24\u4e2a\u200b\u5b57\u8282\u200b\uff0c\u200b\u6307\u660e\u200b\u7f16\u7801\u200b\u65f6\u200b\u4f7f\u7528\u200blittle endian\u200b\u5b57\u8282\u200b\u7f16\u7801\u200b\u987a\u5e8f\u200b\u3002\u200b\u5982\u679c\u200b\u662f\u200b<code>b'\\xfe\\xff'</code>\u200b\u4e24\u4e2a\u200b\u5b57\u8282\u200b\uff0c\u200b\u8bf4\u660e\u200b\u7f16\u7801\u200b\u65f6\u200b\u4f7f\u7528\u200b\u7684\u200b\u662f\u200bbig endian\u200b\u5b57\u8282\u200b\u987a\u5e8f\u200b\u3002\u200b\u5982\u679c\u200b\u6307\u660e\u200bUTF-16\u200b\u6240\u200b\u4f7f\u7528\u200b\u7684\u200b\u5b57\u8282\u200b\u987a\u5e8f\u200b\uff0c\u200b\u5982\u200bUTF-16LE\u200b\u6216\u200bUTF-16BE\uff0c\u200b\u5219\u200b\u4e0d\u4f1a\u200b\u751f\u6210\u200bBOM\u3002</p> <p>BOM\u200b\u4ec5\u200b\u7528\u4e8e\u200b\u63a8\u65ad\u200b\u5b57\u8282\u200b\u987a\u5e8f\u200b\u800c\u200b\u4e0d\u4f1a\u200b\u51fa\u73b0\u200b\u5728\u200b\u6700\u7ec8\u200b\u89e3\u7801\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u3002</p>"},{"location":"coding/python/bytes/#_8","title":"\u6587\u672c\u6587\u4ef6","text":"<p>\u200b\u4f7f\u7528\u200b<code>open</code>\u200b\u51fd\u6570\u200b\u4ee5\u200b\u6587\u672c\u200b\u6a21\u5f0f\u200b\u6253\u5f00\u200b\u4e00\u4e2a\u200b\u6587\u4ef6\u200b\u65f6\u200b\uff0c\u200b\u6700\u597d\u200b\u6307\u5b9a\u200b\u6587\u4ef6\u200b\u7684\u200b\u7f16\u7801\u65b9\u5f0f\u200b\u3002</p> <p>\u200b\u4e0d\u8981\u200b\u4f7f\u7528\u200b\u4e8c\u8fdb\u5236\u200b\u65b9\u5f0f\u200b\u6253\u5f00\u200b\u6587\u672c\u6587\u4ef6\u200b\u3002</p>"},{"location":"coding/python/bytes/#unicode","title":"Unicode\u200b\u89c4\u8303\u5316","text":"<p>\u200b\u8003\u8651\u200b\u5982\u4e0b\u200b\u4e24\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; a = 'caf\u00e9'\n&gt;&gt;&gt; b = 'cafe\\u0301'             \n&gt;&gt;&gt; print(a, b)\ncaf\u00e9 cafe\u0301\n&gt;&gt;&gt; a == b\nFalse\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u76f8\u540c\u200b\u7684\u200b\u6253\u5370\u200b\u7ed3\u679c\u200b\uff0c\u200b\u5374\u200b\u5bf9\u5e94\u200b\u4e0d\u540c\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u539f\u56e0\u200b\u5728\u4e8e\u200b\u5b57\u7b26\u4e32\u200b<code>b</code>\u200b\u4f7f\u7528\u200b\u4e86\u200b<code>U+0301</code>\u200b\u5b57\u7b26\u200b\u4f5c\u4e3a\u200b\u91cd\u97f3\u200b\u6807\u8bb0\u200b\uff08\u200b\u7ec4\u5408\u200b\u5b57\u7b26\u200b\uff09\uff0c\u200b\u591a\u200b\u4f7f\u7528\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5b57\u8282\u200b\u3002\u200b\u5bf9\u4e8e\u200bPython\u200b\u800c\u8a00\u200b\uff0c\u200b\u8fd9\u200b\u4e00\u6bb5\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\u5e76\u4e0d\u76f8\u540c\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8ba4\u4e3a\u200b<code>a != b</code>\u3002</p> <pre><code>&gt;&gt;&gt; a.encode(\"utf-8\")     \nb'caf\\xc3\\xa9'\n&gt;&gt;&gt; b.encode(\"utf-8\") \nb'cafe\\xcc\\x81'\n&gt;&gt;&gt;\n</code></pre> <p><code>unicodedata</code>\u200b\u6a21\u5757\u200b\u4e2d\u200b\u7684\u200b<code>normalize</code>\u200b\u51fd\u6570\u200b\u63d0\u4f9b\u200b\u4e86\u200bUnicode\u200b\u89c4\u8303\u5316\u200b\u7684\u200b\u529f\u80fd\u200b\uff0c\u200b\u8be5\u200b\u51fd\u6570\u200b\u63a5\u6536\u200b\u5982\u4e0b\u200b\u53c2\u6570\u200b\u7528\u4e8e\u200b\u786e\u5b9a\u200b\u8f6c\u6362\u200b\u6807\u51c6\u200b\uff1a</p> <ul> <li><code>'NFC'</code>\uff1a\u200b\u4f7f\u7528\u200b\u6700\u5c11\u200b\u7801\u4f4d\u200b\u6784\u6210\u200b\u7b49\u4ef7\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b</li> <li><code>'NFD'</code>\uff1a\u200b\u5c06\u200b\u7ec4\u5408\u200b\u5b57\u7b26\u200b\u5206\u89e3\u200b\u4e3a\u57fa\u200b\u5b57\u7b26\u200b\u4e0e\u200b\u5355\u72ec\u200b\u7684\u200b\u7ec4\u5408\u200b\u5b57\u7b26\u200b\uff08\u200b\u5982\u200b<code>U+0301</code>\uff09\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u53bb\u9664\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u7684\u200b\u53d8\u97f3\u200b\u7b26\u53f7\u200b</li> <li><code>NFKC</code>\u3001<code>NFKD</code>\u200b\u4f1a\u200b\u989d\u5916\u200b\u5c06\u200b\u517c\u5bb9\u200b\u5b57\u7b26\u200b\u5206\u89e3\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u6216\u200b\u591a\u4e2a\u200b\u517c\u5bb9\u200b\u5206\u89e3\u200b\uff0c\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u6570\u636e\u200b\u635f\u5931\u200b\uff0c\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</li> </ul> <pre><code>&gt;&gt;&gt; from unicodedata import normalize\n&gt;&gt;&gt; normalize('NFKC', '\u337f') \n'\u200b\u682a\u5f0f\u4f1a\u793e\u200b'\n&gt;&gt;&gt;\n</code></pre> <p><code>NKFC</code>\u3001<code>NFKD</code>\u200b\u89c4\u8303\u5316\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u539f\u610f\u200b\u53d8\u5316\u200b\uff0c\u200b\u4f46\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u641c\u7d22\u5f15\u64ce\u200b\u3002</p> <p><code>str.casefold</code>\u200b\u51fd\u6570\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u53e6\u200b\u4e00\u79cd\u200b\u89c4\u8303\u5316\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u5373\u5c06\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u5927\u5199\u5b57\u6bcd\u200b\u8f6c\u4e3a\u200b\u5c0f\u5199\u200b\u3002\u200b\u4e0e\u200b<code>str.lower</code>\u200b\u4e0d\u540c\u200b\uff0c\u200b\u90e8\u5206\u200b\u5b57\u7b26\u200b\u4f1a\u200b\u88ab\u200b\u66ff\u6362\u6210\u200b\u65b0\u200b\u7684\u200b\u5b57\u7b26\u200b\u3002</p>"},{"location":"coding/python/bytes/#_9","title":"\u5b57\u7b26\u4e32\u200b\u6392\u5e8f","text":"<p>\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u6392\u5e8f\u200b\u4e0e\u200b\u5176\u4ed6\u200b\u6570\u636e\u200b\u7684\u200b\u6392\u5e8f\u200b\u65b9\u5f0f\u200b\u76f8\u540c\u200b\uff0c\u200b\u90fd\u200b\u662f\u200b\u6309\u7167\u200b\u7801\u4f4d\u200b\u5347\u5e8f\u200b\u6392\u5e8f\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u975e\u200b<code>ASCII</code>\u200b\u5b57\u7b26\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u4e00\u4e9b\u200b\u95ee\u9898\u200b\uff0c\u200b\u5982\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; sorted(['caf\u00e9', 'cafu'])       \n['cafu', 'caf\u00e9']\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u6a21\u5757\u200b<code>locale</code>\u200b\u63d0\u4f9b\u200b\u4e86\u200b<code>strxfrm</code>\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u6309\u7167\u200b\u533a\u57df\u200b\u8bbe\u7f6e\u200b\u5bf9\u200b\u5b57\u7b26\u4e32\u200b\u8fdb\u884c\u200b\u6392\u5e8f\u200b\u3002\u200b\u5982\u679c\u200b\u64cd\u4f5c\u7cfb\u7edf\u200b\u652f\u6301\u200b\uff0c\u200b\u533a\u57df\u200b\u8bbe\u7f6e\u200b\u53ef\u4ee5\u200b\u5728\u200b<code>setlocale</code>\u200b\u51fd\u6570\u200b\u4e2d\u200b\u5168\u5c40\u200b\u6307\u5b9a\u200b\u3002</p> <pre><code>&gt;&gt;&gt; import locale\n&gt;&gt;&gt; locale.setlocale(locale.LC_COLLATE, \"en_US.UTF-8\")\n'en_US.UTF-8'\n&gt;&gt;&gt; sorted(['caf\u00e9', 'cafu'], key=locale.strxfrm)\n['caf\u00e9', 'cafu']\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/bytes/#api","title":"API","text":"<p>\u200b\u90e8\u5206\u200b\u6d89\u53ca\u200b\u5230\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u4e00\u4e9b\u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u8f93\u5165\u200b\u5b57\u7b26\u4e32\u200b\u6216\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\u3002</p>"},{"location":"coding/python/bytes/#re","title":"re\u200b\u6a21\u5757","text":"<p>\u200b\u4e0d\u540c\u4e8e\u200b\u4f7f\u7528\u200b\u5b57\u7b26\u4e32\u200b\u6784\u9020\u200b\u7684\u200b\u6b63\u5219\u8868\u8fbe\u5f0f\u200b\uff0c\u200b\u4f7f\u7528\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\u6784\u9020\u200b\u7684\u200b\u6b63\u5219\u8868\u8fbe\u5f0f\u200b\uff0c<code>\\d</code>\u200b\u4e0e\u200b<code>\\w</code>\u200b\u53ea\u80fd\u200b\u5339\u914d\u200bASCII\u200b\u5b57\u7b26\u200b\u3002</p>"},{"location":"coding/python/bytes/#os","title":"os\u200b\u6a21\u5757","text":"<p><code>os</code>\u200b\u6a21\u5757\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u5b57\u7b26\u4e32\u200b\u53c2\u6570\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\u66ff\u6362\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u51fd\u6570\u200b\u4f1a\u200b\u4f7f\u7528\u200b<code>sys.getfilesystemencoding()</code>\u200b\u51fd\u6570\u200b\u53d6\u5f97\u200b\u5408\u9002\u200b\u7684\u200b\u7f16\u7801\u5668\u200b\u3002\u200b\u6b64\u5916\u200b\uff0c<code>os</code>\u200b\u6a21\u5757\u200b\u63d0\u4f9b\u200b<code>fsencode</code>\u200b\u4e0e\u200b<code>fsdecode</code>\u200b\u51fd\u6570\u200b\u7528\u4e8e\u200b\u624b\u52a8\u200b\u8fdb\u884c\u200b\u7f16\u7801\u200b\u4e0e\u200b\u89e3\u7801\u200b\u64cd\u4f5c\u200b\u3002</p>"},{"location":"coding/python/decorator/","title":"\u88c5\u9970\u200b\u5668","text":"<p>\u200b\u88c5\u9970\u200b\u5668\u662f\u200b\u4e00\u4e2a\u200b\u53ef\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u5e76\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u5982\u4e0b\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u88c5\u9970\u200b\u5668\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; def decorator(x):\n...     print(x)\n...     return x\n...\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u88c5\u9970\u200b\u5668\u200b\u5728\u200b\u51fd\u6570\u200b\u5b9a\u4e49\u200b\u524d\u200b\u4f7f\u7528\u200b\uff0c<code>@</code>\u200b\u6807\u8bb0\u200b\u4e00\u4e2a\u200b\u88c5\u9970\u200b\u5668\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; @decorator    \n... def target(x):\n...     return x + 1\n... \n&lt;function target at ...&gt;\n&gt;&gt;&gt;\n</code></pre> <p><code>@decorator</code>\u200b\u7b49\u4ef7\u200b\u4e8e\u200b\u5982\u4e0b\u200b\u4ee3\u7801\u200b\uff0c\u200b\u51fd\u6570\u200b\u88ab\u200b\u88c5\u9970\u200b\u5668\u200b\u8fd4\u56de\u200b\u7684\u200b\u51fd\u6570\u200b\u66ff\u6362\u200b</p> <pre><code>&gt;&gt;&gt; def target(x):\n...     return x + 1\n... \n&gt;&gt;&gt; target = decorator(target)\n&lt;function target at ...&gt;\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u88c5\u9970\u200b\u5668\u200b\u5728\u200b\u88ab\u200b\u4fee\u9970\u200b\u7684\u200b\u51fd\u6570\u200b\u5b9a\u4e49\u200b\u540e\u200b\u7acb\u5373\u200b\u8fd0\u884c\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u5f53\u200b\u5bfc\u5165\u200b\u6a21\u5757\u200b\u65f6\u200b\uff0c\u200b\u88c5\u9970\u200b\u5668\u200b\u51fd\u6570\u200b\u4f1a\u200b\u7acb\u5373\u200b\u6267\u884c\u200b\uff0c\u200b\u800c\u200b\u88ab\u200b\u88c5\u9970\u200b\u7684\u200b\u51fd\u6570\u200b\u53ea\u4f1a\u200b\u8c03\u7528\u200b\u6267\u884c\u200b\u3002</p> <pre><code>&gt;&gt;&gt; src = \"\"\"def decorator(_):\n...     print(_)\n...     return _\n... print(\"Before A\")\n... @decorator\n... def a():\n...     return 1\n... print(\"Before B\")\n... @decorator  \n... def b():\n...     return 1\n... print(\"After B\")\n... \"\"\"\n&gt;&gt;&gt; exec(src)\nBefore A\n&lt;function a at ...&gt;\nBefore B\n&lt;function b at ...&gt;\nAfter B\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/decorator/#_2","title":"\u53d8\u91cf\u200b\u7684\u200b\u4f5c\u7528\u57df","text":"<p>Python\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u5224\u65ad\u200b\u51fd\u6570\u200b\u4ee3\u7801\u200b\u4e2d\u200b\u7684\u200b\u53d8\u91cf\u200b\u662f\u5426\u200b\u4e3a\u200b\u5c40\u90e8\u53d8\u91cf\u200b\u3002\u200b\u6240\u6709\u200b\u5728\u200b\u51fd\u6570\u200b\u4ee3\u7801\u200b\u5185\u200b\u51fa\u73b0\u200b\u7684\u200b\u53d8\u91cf\u200b\u88ab\u200b\u89c6\u4e3a\u200b\u5c40\u90e8\u53d8\u91cf\u200b\u3002</p> <pre><code>&gt;&gt;&gt; b = 2\n&gt;&gt;&gt; def A():\n...     print(b)\n... \n&gt;&gt;&gt; def B():\n...     print(b)\n...     b = 2\n... \n&gt;&gt;&gt; A()\n2\n&gt;&gt;&gt; B()\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"&lt;stdin&gt;\", line 2, in B\nUnboundLocalError: local variable 'b' referenced before assignment\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u5982\u679c\u200b\u9700\u8981\u200b\u5728\u200b\u51fd\u6570\u200b\u5185\u90e8\u200b\u8bbf\u95ee\u200b\u5168\u5c40\u53d8\u91cf\u200b\uff0c\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b<code>global</code>\u200b\u5173\u952e\u5b57\u200b\u58f0\u660e\u200b\u3002</p> <pre><code>&gt;&gt;&gt; def C():\n...     global b\n...     print(b)\n...     b = 3\n... \n&gt;&gt;&gt; b\n2\n&gt;&gt;&gt; C()\n2\n&gt;&gt;&gt; b\n3\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u68c0\u67e5\u200b\u7f16\u8bd1\u200b\u540e\u200b\u7684\u200b\u5b57\u8282\u200b\u7801\u200b\uff0c\u200b\u53d1\u73b0\u200b<code>global</code>\u200b\u5173\u952e\u5b57\u200b\u58f0\u660e\u200b\u53d8\u91cf\u200b\u7531\u200b<code>LOAD_FAST</code>\u200b\u4e0e\u200b<code>STORE_FAST</code>\u200b\u6539\u4e3a\u200b\u4e86\u200b<code>LOAD_GLOBAL</code>\u200b\u4e0e\u200b<code>STORE_GLOBAL</code>\uff1a</p>"},{"location":"coding/python/decorator/#_3","title":"\u95ed\u5305","text":"<p>\u200b\u95ed\u5305\u200b\u662f\u200b\u6269\u5c55\u200b\u4e86\u200b\u51fd\u6570\u200b\u4f5c\u7528\u57df\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8bbf\u95ee\u200b\u51fd\u6570\u200b\u5b9a\u4e49\u200b\u4e4b\u5916\u200b\u7684\u200b\u5c40\u90e8\u53d8\u91cf\u200b\u3002\u200b\u4ee5\u4e0b\u200b\u901a\u8fc7\u200b\u4e0d\u540c\u200b\u65b9\u5f0f\u200b\u5b9e\u73b0\u200b\u6ed1\u52a8\u200b\u5e73\u5747\u503c\u200b\u7684\u200b\u8ba1\u7b97\u200b\uff1a</p> <ul> <li>\u200b\u4f7f\u7528\u200b\u7c7b\u200b</li> </ul> <pre><code>&gt;&gt;&gt; class avg1():\n...     def __init__(self):\n...             self.values = []\n...     def __call__(self, value):\n...             self.values.append(value)\n...             return sum(self.values) / len(self.values)\n... \n&gt;&gt;&gt; avg = avg1()\n&gt;&gt;&gt; avg(10)\n10.0\n&gt;&gt;&gt; avg(11)\n10.5\n&gt;&gt;&gt;\n</code></pre> <ul> <li>\u200b\u4f7f\u7528\u200b\u9ad8\u9636\u200b\u51fd\u6570\u200b</li> </ul> <pre><code>&gt;&gt;&gt; def avg2():\n...     values = []\n...     def avg(value): \n...             values.append(value)\n...             return sum(values) / len(values)\n...     return avg\n&gt;&gt;&gt; \n&gt;&gt;&gt; avg = avg2()\n&gt;&gt;&gt; avg(10)\n10.0\n&gt;&gt;&gt; avg(11)\n10.5\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u5728\u200b<code>avg2</code>\u200b\u51fd\u6570\u200b\u7ed3\u675f\u200b\u540e\u200b\uff0c\u200b\u5c40\u90e8\u53d8\u91cf\u200b<code>values</code>\u200b\u539f\u6709\u200b\u7684\u200b\u4f5c\u7528\u57df\u200b\u6d88\u5931\u200b\uff0c\u200b\u6210\u4e3a\u200b\u81ea\u7531\u200b\u53d8\u91cf\u200b\u3002\u200b\u81ea\u7531\u200b\u53d8\u91cf\u200b\u6307\u200b\u6ca1\u6709\u200b\u5728\u200b\u672c\u5730\u200b\u4f5c\u7528\u57df\u200b\u4e2d\u200b\u7ed1\u5b9a\u200b\u7684\u200b\u53d8\u91cf\u200b\u3002<code>values</code>\u200b\u53d8\u91cf\u200b\u7684\u200b\u5f15\u7528\u200b\u5b58\u50a8\u200b\u5728\u200b<code>avg</code>\u200b\u51fd\u6570\u200b\u7684\u200b<code>__closure__</code>\u200b\u5c5e\u6027\u200b\u4e2d\u200b\u3002\u200b\u5373\u4f7f\u200b<code>avg2</code>\u200b\u51fd\u6570\u200b\u5df2\u7ecf\u200b\u7ed3\u675f\u200b\u6267\u884c\u200b\uff0c<code>avg</code>\u200b\u51fd\u6570\u200b\u4ecd\u7136\u200b\u80fd\u200b\u8bbf\u95ee\u200b<code>values</code>\u200b\u53d8\u91cf\u200b\u3002</p>"},{"location":"coding/python/functions/","title":"Python\u200b\u4e2d\u200b\u7684\u200b\u51fd\u6570","text":"<p>\u201c\u200b\u4e00\u7b49\u200b\u5bf9\u8c61\u200b\u201d\u200b\u6307\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6761\u4ef6\u200b\u7684\u200b\u5bf9\u8c61\u200b\uff1a</p> <ul> <li>\u200b\u5728\u200b\u7a0b\u5e8f\u6267\u884c\u200b\u65f6\u200b\u521b\u5efa\u200b</li> <li>\u200b\u80fd\u591f\u200b\u8d4b\u503c\u200b\u7ed9\u200b\u53d8\u91cf\u200b\u6216\u200b\u6570\u636e\u7ed3\u6784\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b</li> <li>\u200b\u80fd\u200b\u4f5c\u4e3a\u200b\u51fd\u6570\u53c2\u6570\u200b\u4e0e\u200b\u8fd4\u56de\u503c\u200b</li> </ul> <p>Python\u200b\u4e2d\u200b\u7684\u200b\u51fd\u6570\u200b\u662f\u200b\u4e00\u7b49\u200b\u5bf9\u8c61\u200b</p>"},{"location":"coding/python/functions/#_1","title":"\u51fd\u6570\u200b\u4e0e\u200b\u9ad8\u9636\u200b\u51fd\u6570","text":"<p>\u200b\u51fd\u6570\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u901a\u5e38\u200b\u4f7f\u7528\u200b<code>def</code>\u200b\u5173\u952e\u5b57\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; def constant():  \n...     return 1\n... \n&gt;&gt;&gt; type(constant)\n&lt;class 'function'&gt;\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u5b9a\u4e49\u200b\u5728\u200b\u5176\u4ed6\u200b\u51fd\u6570\u200b\u5185\u90e8\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; def outer():\n...     def inner():\n...             return \"ok\"\n...     return inner\n... \n&gt;&gt;&gt; func = outer()\n&gt;&gt;&gt; func()\n'ok'\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u9ad8\u9636\u200b\u51fd\u6570\u200b\u662f\u200b\u63a5\u53d7\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u6216\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u5982\u200b<code>map</code>\u3001<code>filter</code>\u200b\u7b49\u200b\u3002</p> <p>\u200b\u9664\u200b\u4f7f\u7528\u200b<code>def</code>\u200b\u5173\u952e\u5b57\u200b\u5b9a\u4e49\u200b\u51fd\u6570\u200b\u4ee5\u5916\u200b\uff0c<code>lambda</code>\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u53e6\u200b\u4e00\u79cd\u200b\u521b\u5efa\u200b\u7b80\u5355\u200b\u51fd\u6570\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u8fd9\u79cd\u200b\u65b9\u6cd5\u200b\u5e38\u7528\u200b\u4e8e\u200b\u5411\u200b\u9ad8\u9636\u200b\u51fd\u6570\u200b\u4f20\u9012\u200b\u53c2\u6570\u200b\u3002<code>lambda</code>\u200b\u8868\u8fbe\u5f0f\u200b\u53ea\u80fd\u200b\u52a0\u5165\u200b\u8868\u8fbe\u5f0f\u200b\u800c\u200b\u65e0\u6cd5\u200b\u6dfb\u52a0\u200b\u63a7\u5236\u200b\u903b\u8f91\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; a = lambda : \"ok\"  \n&gt;&gt;&gt; a()\n'ok'\n&gt;&gt;&gt;\n</code></pre> <p><code>lambda</code>\u200b\u8868\u8fbe\u5f0f\u200b\u53ef\u4ee5\u200b\u521b\u5efa\u200b\u4e0d\u540c\u200b\u53c2\u6570\u200b\u6570\u91cf\u200b\u7684\u200b\u51fd\u6570\u200b\uff1a</p> <ul> <li>\u200b\u6ca1\u6709\u200b\u53c2\u6570\u200b\uff0c\u200b\u5982\u200b<code>lambda : \"ok\"</code></li> <li>\u200b\u7ed9\u5b9a\u200b\u6570\u91cf\u200b\u53c2\u6570\u200b\uff0c\u200b\u5982\u200b<code>lambda x, y : x + y</code></li> <li>\u200b\u4efb\u610f\u200b\u53c2\u6570\u200b\uff0c\u200b\u5982\u200b<code>lambda *_ : sum(_)</code>\uff08\u200b\u65e0\u540d\u200b\u53c2\u6570\u200b\uff09\u200b\u6216\u200b<code>lambda **_ : sum(_)</code>\uff08\u200b\u5177\u540d\u200b\u53c2\u6570\u200b\uff09</li> </ul> <p>\u200b\u82e5\u200b<code>lambda</code>\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u53f3\u4fa7\u200b\u662f\u200b\u9017\u53f7\u200b\u5206\u9694\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\uff0c\u200b\u751f\u6210\u200b\u7684\u200b\u662f\u200b<code>lambda</code>\u200b\u5bf9\u8c61\u200b\u7ec4\u6210\u200b\u7684\u200b\u5143\u7ec4\u200b\u3002</p> <p>\u200b\u4f7f\u7528\u200b<code>dir()</code>\u200b\u67e5\u770b\u200b\u51fd\u6570\u200b\u7684\u200b\u5185\u7f6e\u200b\u5c5e\u6027\u200b\u3002\u200b\u76f8\u6bd4\u200b\u4e8e\u200b\u4e00\u822c\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u51fd\u6570\u200b\u6709\u200b\u4ee5\u4e0b\u200b\u7684\u200b\u989d\u5916\u200b\u5c5e\u6027\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; class Obj():\n...     pass\n... \n&gt;&gt;&gt; def func():\n...     pass\n... \n&gt;&gt;&gt; sorted(list(set(dir(func)) - set(dir(Obj())))) # doctest: +SKIP\n['__annotations__', '__call__', '__closure__', '__code__', '__defaults__', '__get__', '__globals__', '__kwdefaults__', '__name__', '__qualname__']\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/functions/#_2","title":"\u5e7f\u4e49\u200b\u51fd\u6570","text":"<p>\u200b\u4efb\u4f55\u200b\u5b9e\u73b0\u200b\u4e86\u200b<code>__call__</code>\u200b\u65b9\u6cd5\u200b\u7684\u200b\u5bf9\u8c61\u200b\u90fd\u200b\u662f\u200b\u53ef\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\u51fd\u6570\u8c03\u7528\u200b\u7684\u200b\u65b9\u5f0f\u200b\u8fdb\u884c\u200b\u8c03\u7528\u200b\u3002\u200b\u4ee5\u4e0b\u200b\u7c7b\u578b\u200b\u4e3a\u200b\u53ef\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\uff1a</p> <ul> <li>\u200b\u51fd\u6570\u200b\u6216\u200b<code>lambda</code>\u200b\u8868\u8fbe\u5f0f\u200b</li> <li>\u200b\u5185\u7f6e\u200b\u51fd\u6570\u200b\u6216\u200b\u7c7b\u578b\u200b\u65b9\u6cd5\u200b</li> <li>\u200b\u7c7b\u578b\u200b\u65b9\u6cd5\u200b</li> <li>\u200b\u7c7b\u200b\uff08\u200b\u76f8\u5f53\u4e8e\u200b\u4e00\u4e2a\u200b\u8fd4\u56de\u200b\u7c7b\u200b\u5bf9\u8c61\u200b\u7684\u200b\u51fd\u6570\u200b\uff09</li> <li>\u200b\u5b9e\u73b0\u200b\u4e86\u200b<code>__call__</code>\u200b\u7684\u200b\u5bf9\u8c61\u200b</li> <li>\u200b\u751f\u6210\u5668\u200b\u51fd\u6570\u200b</li> </ul> <p>\u200b\u5185\u7f6e\u200b\u51fd\u6570\u200b<code>callable()</code>\u200b\u7528\u4e8e\u200b\u68c0\u6d4b\u200b\u4e00\u4e2a\u200b\u5bf9\u8c61\u200b\u662f\u5426\u662f\u200b\u53ef\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\u3002</p>"},{"location":"coding/python/functions/#_3","title":"\u51fd\u6570\u200b\u7684\u200b\u53c2\u6570","text":"<p>Python\u200b\u4e2d\u200b\uff0c\u200b\u51fd\u6570\u200b\u7684\u200b\u53c2\u6570\u200b\u53ef\u4ee5\u200b\u6309\u7167\u200b\u5982\u4e0b\u200b\u65b9\u5f0f\u200b\u4f20\u9012\u200b\uff1a</p> <ul> <li>\u200b\u9017\u53f7\u200b\u5206\u9694\u200b\uff0c\u200b\u6309\u200b\u51fd\u6570\u200b\u58f0\u660e\u200b\u987a\u5e8f\u200b\u4f20\u5165\u200b\u53c2\u6570\u200b</li> <li>\u200b\u5173\u952e\u5b57\u200b\u53c2\u6570\u200b\uff0c\u200b\u5373\u200b\u53c2\u6570\u200b\u540d\u200b=\u200b\u53c2\u6570\u503c\u200b</li> <li>\u200b\u6709\u200b\u9ed8\u8ba4\u503c\u200b\u7684\u200b\u53c2\u6570\u200b\u53ef\u4ee5\u200b\u7701\u7565\u200b</li> <li><code>*</code>\u200b\u89e3\u5305\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u5bf9\u8c61\u200b\uff08\u200b\u6309\u200b\u53c2\u6570\u200b\u4f4d\u7f6e\u200b\u4f20\u9012\u200b\uff09\u200b\u6216\u200b<code>**</code>\u200b\u89e3\u5305\u200b\u6620\u5c04\u200b\u5bf9\u8c61\u200b\uff08\u200b\u6309\u200b\u5173\u952e\u5b57\u200b\u4f20\u9012\u200b\uff09</li> </ul> <p>\u200b\u5bf9\u5e94\u200b\u5730\u200b\uff0c\u200b\u51fd\u6570\u200b\u5bf9\u200b\u53c2\u6570\u200b\u6709\u200b\u5982\u4e0b\u200b\u5904\u7406\u200b\u65b9\u5f0f\u200b\uff1a</p> <ul> <li>\u200b\u6309\u7167\u200b\u53c2\u6570\u200b\u4f4d\u7f6e\u200b\u4e0e\u200b\u53c2\u6570\u200b\u540d\u200b\u83b7\u53d6\u200b\u53c2\u6570\u200b</li> <li>\u200b\u5176\u4ed6\u200b\u7684\u200b\u65e0\u8bb0\u540d\u200b\u53c2\u6570\u200b\u88ab\u200b<code>*</code>\u200b\u53c2\u6570\u200b\u83b7\u53d6\u200b\uff0c\u200b\u5355\u4e2a\u200b<code>*</code>\u200b\u6216\u200b<code>*</code>\u200b\u53c2\u6570\u200b\u540e\u200b\u7684\u200b\u666e\u901a\u200b\u53c2\u6570\u200b\u53ea\u80fd\u200b\u6309\u7167\u200b\u5173\u952e\u5b57\u200b\u53c2\u6570\u200b\u7684\u200b\u65b9\u5f0f\u200b\u4f20\u9012\u200b</li> <li>\u200b\u5176\u4ed6\u200b\u7684\u200b\u8bb0\u540d\u200b\u53c2\u6570\u200b\u88ab\u200b<code>**</code>\u200b\u53c2\u6570\u200b\u83b7\u53d6\u200b</li> </ul> <p>\u200b\u51fd\u6570\u200b\u58f0\u660e\u200b\u4e2d\u200b\u51fa\u73b0\u200b\u7684\u200b\u5355\u4e2a\u200b<code>*</code>\u200b\u4e0d\u4f1a\u200b\u88ab\u200b\u89c6\u4e3a\u200b\u53c2\u6570\u200b\uff0c\u200b\u53ea\u200b\u7528\u4e8e\u200b\u9650\u5b9a\u200b\u6b64\u540e\u200b\u6240\u6709\u200b\u53c2\u6570\u200b\u7684\u200b\u4f20\u5165\u200b\u65b9\u5f0f\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; def a(*, a, b):\n...     return a + b\n... \n&gt;&gt;&gt; a(1, 2) \nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: a() takes 0 positional arguments but 2 were given\n&gt;&gt;&gt; a(a=1, b=2)\n3\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u51fd\u6570\u200b\u4f20\u53c2\u6709\u200b\u4e24\u79cd\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u5373\u503c\u200b\u4f20\u9012\u200b\u4e0e\u200b\u5f15\u7528\u200b\u4f20\u9012\u200b\u3002\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u53ef\u53d8\u200b\u5bf9\u8c61\u200b\u6309\u200b\u5f15\u7528\u200b\u4f20\u9012\u200b\uff0c\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u5bf9\u8c61\u200b\u6309\u503c\u200b\u4f20\u9012\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; def argPass(x):\n...     x += x      \n...           \n&gt;&gt;&gt; a = \"test\"      \n&gt;&gt;&gt; b = [\"test\"]\n&gt;&gt;&gt; argPass(a)\n&gt;&gt;&gt; argPass(b)\n&gt;&gt;&gt; a\n'test'\n&gt;&gt;&gt; b\n['test', 'test']\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/functions/#_4","title":"\u51fd\u6570\u200b\u5185\u7701","text":"<p>\u200b\u51fd\u6570\u200b\u5bf9\u8c61\u200b\u7279\u6709\u200b\u7684\u200b\u5c5e\u6027\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u6709\u5173\u200b\u51fd\u6570\u200b\u7684\u200b\u4fe1\u606f\u200b\uff1a</p> \u200b\u5c5e\u6027\u200b\u540d\u200b \u200b\u5c5e\u6027\u200b\u7c7b\u578b\u200b \u200b\u5c5e\u6027\u200b\u8bf4\u660e\u200b <code>__annotations__</code> <code>dict</code> \u200b\u51fd\u6570\u53c2\u6570\u200b\u548c\u200b\u51fd\u6570\u200b\u8fd4\u56de\u503c\u200b\u7684\u200b\u7c7b\u578b\u200b\u6ce8\u89e3\u200b\uff0c\u200b\u952e\u4e3a\u200b\u53c2\u6570\u200b\u540d\u200b\uff0c\u200b\u503c\u4e3a\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b <code>__call__</code> <code>method-wrapper</code> \u200b\u5b9e\u73b0\u200b\u53ef\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\u7684\u200b\u8c03\u7528\u200b\u65b9\u6cd5\u200b <code>__closure__</code> <code>tuple</code> \u200b\u51fd\u6570\u200b\u95ed\u5305\u200b\uff0c\u200b\u53c2\u89c1\u200b\u76f8\u5173\u200b\u7ae0\u8282\u200b <code>__code__</code> <code>code</code> \u200b\u7f16\u8bd1\u6210\u200b\u4e8c\u8fdb\u5236\u200b\u683c\u5f0f\u200b\u7684\u200b\u51fd\u6570\u200b\u5143\u200b\u6570\u636e\u200b\u548c\u200b\u5b9a\u4e49\u200b\u4f53\u200b <code>__defaults__</code> <code>tuple</code> \u200b\u5f62\u53c2\u200b\u7684\u200b\u9ed8\u8ba4\u503c\u200b\u5217\u8868\u200b <code>__get__</code> <code>method-wrapper</code> \u200b\u5b9e\u73b0\u200b\u53ea\u8bfb\u200b\u63cf\u8ff0\u7b26\u200b\u534f\u8bae\u200b <code>__globals__</code> <code>dict</code> \u200b\u51fd\u6570\u200b\u6240\u5728\u200b\u6a21\u5757\u200b\u4e2d\u200b\u7684\u200b\u5168\u5c40\u53d8\u91cf\u200b <code>__kwdefaults__</code> <code>dict</code> \u200b\u9650\u5b9a\u200b\u5173\u952e\u5b57\u200b\u5f62\u5f0f\u200b\u8bbf\u95ee\u200b\u7684\u200b\u5f62\u53c2\u200b\u9ed8\u8ba4\u503c\u200b <code>__name__</code> <code>str</code> \u200b\u51fd\u6570\u200b\u540d\u79f0\u200b <code>__qualname__</code> <code>str</code> \u200b\u51fd\u6570\u200b\u7684\u200b\u9650\u5b9a\u200b\u540d\u79f0\u200b <pre><code>&gt;&gt;&gt; def dummy(a, b: int, c = 10, *args, d, e=50, **kwargs):\n...     return (a, b, c, args, d, e, kwargs) \n... \n&gt;&gt;&gt; dummy.__annotations__\n{'b': &lt;class 'int'&gt;}\n&gt;&gt;&gt; dummy.__defaults__\n(10,)\n&gt;&gt;&gt; dummy.__kwdefaults__\n{'e': 50}\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u51fd\u6570\u200b\u7684\u200b\u53c2\u6570\u200b\u5217\u8868\u200b\u4e0e\u200b\u6570\u91cf\u200b\u5b58\u50a8\u200b\u5728\u200b<code>__code__</code>\u200b\u5c5e\u6027\u200b\u4e2d\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; dummy.__code__.co_varnames\n('a', 'b', 'c', 'd', 'e', 'args', 'kwargs')\n&gt;&gt;&gt; dummy.__code__.co_argcount\n3\n&gt;&gt;&gt;\n</code></pre> <p><code>inspect</code>\u200b\u6a21\u5757\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u68c0\u67e5\u200b\u51fd\u6570\u53c2\u6570\u200b\u4fe1\u606f\u200b\u7684\u200b\u5de5\u5177\u200b\u3002</p> <pre><code>&gt;&gt;&gt; import inspect\n&gt;&gt;&gt; inspect.signature(dummy)\n&lt;Signature (a, b: int, c=10, *args, d, e=50, **kwargs)&gt;\n&gt;&gt;&gt; sig = inspect.signature(dummy) \n&gt;&gt;&gt; sig.parameters\nmappingproxy(OrderedDict([('a', &lt;Parameter \"a\"&gt;), ('b', &lt;Parameter \"b: int\"&gt;), ('c', &lt;Parameter \"c=10\"&gt;), ('args', &lt;Parameter \"*args\"&gt;), ('d', &lt;Parameter \"d\"&gt;), ('e', &lt;Parameter \"e=50\"&gt;), ('kwargs', &lt;Parameter \"**kwargs\"&gt;)]))\n&gt;&gt;&gt;\n</code></pre> <p><code>parameters</code>\u200b\u5b58\u50a8\u200b\u4e86\u200b\u53c2\u6570\u200b\u540d\u200b\u4e0e\u200b\u53c2\u6570\u4fe1\u606f\u200b\u7684\u200b\u6620\u5c04\u200b\u5173\u7cfb\u200b\u3002\u200b\u6bcf\u4e2a\u200b<code>Parameter</code>\u200b\u5bf9\u8c61\u200b\u6709\u200b<code>name</code>\u3001<code>default</code>\u200b\u548c\u200b<code>kind</code>\u200b\u5c5e\u6027\u200b\u3002<code>dummy</code>\u200b\u51fd\u6570\u200b\u5404\u4e2a\u200b\u53c2\u6570\u200b\u7684\u200b\u5c5e\u6027\u200b\u4fe1\u606f\u200b\u5982\u4e0b\u200b\uff0c<code>inspect._empty</code>\u200b\u8868\u793a\u200b\u53c2\u6570\u200b\u6ca1\u6709\u200b\u9ed8\u8ba4\u503c\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; par = sig.parameters \n&gt;&gt;&gt; for parName in par:\n...     print(par[parName].name, par[parName].default, par[parName].kind)\n... \na &lt;class 'inspect._empty'&gt; POSITIONAL_OR_KEYWORD\nb &lt;class 'inspect._empty'&gt; POSITIONAL_OR_KEYWORD\nc 10 POSITIONAL_OR_KEYWORD\nargs &lt;class 'inspect._empty'&gt; VAR_POSITIONAL\nd &lt;class 'inspect._empty'&gt; KEYWORD_ONLY\ne 50 KEYWORD_ONLY\nkwargs &lt;class 'inspect._empty'&gt; VAR_KEYWORD\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u4ece\u200b\u8f93\u51fa\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u770b\u51fa\u200b\uff0c<code>dummy</code>\u200b\u5171\u6709\u200b\u56db\u79cd\u200b\u7c7b\u578b\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u5373\u200b\uff1a</p> <ul> <li><code>POSITIONAL_OR_KEYWORD</code>\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5b9a\u4f4d\u200b\u53c2\u6570\u200b\u6216\u200b\u5173\u952e\u5b57\u200b\u53c2\u6570\u200b\u4f20\u5165\u200b</li> <li><code>VAR_POSITIONAL</code>\uff0c\u200b\u591a\u4f59\u200b\u7684\u200b\u5b9a\u4f4d\u200b\u53c2\u6570\u200b\u7ec4\u6210\u200b\u7684\u200b\u5143\u7ec4\u200b</li> <li><code>KEYWORD_ONLY</code>\uff0c\u200b\u53ea\u80fd\u200b\u901a\u8fc7\u200b\u5173\u952e\u5b57\u200b\u53c2\u6570\u200b\u4f20\u5165\u200b</li> <li><code>VAR_KEYWORD</code>\uff0c\u200b\u591a\u4f59\u200b\u7684\u200b\u5173\u952e\u5b57\u200b\u53c2\u6570\u200b\u7ec4\u6210\u200b\u7684\u200b\u5b57\u5178\u200b</li> </ul> <p>\u200b\u53e6\u200b\u4e00\u79cd\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b\u662f\u200b\u53ea\u80fd\u200b\u901a\u8fc7\u200b\u5b9a\u4f4d\u200b\u53c2\u6570\u200b\u4f20\u5165\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u5373\u200b<code>POSITIONAL_ONLY</code>\uff0cPython\u200b\u8bed\u6cd5\u200b\u4e0d\u200b\u652f\u6301\u200b\u58f0\u660e\u200b\u8fd9\u79cd\u200b\u7c7b\u578b\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u5728\u200bC\u200b\u8bed\u8a00\u200bAPI\u200b\u4e2d\u200b\u53ef\u80fd\u200b\u51fa\u73b0\u200b\u3002</p> <p>Changed in version 3.8</p> <p>\u200b\u5728\u200b\u51fd\u6570\u200b\u5b9a\u4e49\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>/</code>\u200b\u5206\u9694\u200b\u53c2\u6570\u200b\u5217\u8868\u200b\uff0c\u200b\u51fa\u73b0\u200b\u5728\u200b<code>/</code>\u200b\u4e4b\u524d\u200b\u7684\u200b\u53c2\u6570\u200b\u5fc5\u987b\u200b\u901a\u8fc7\u200b\u5b9a\u4f4d\u200b\u53c2\u6570\u200b\u4f20\u5165\u200b\u3002</p> <pre><code>&gt;&gt;&gt; def test(a, /, b, *args, c, **kwargs):\n...     pass\n...\n&gt;&gt;&gt; import inspect\n&gt;&gt;&gt; sig = inspect.signature(test)\n&gt;&gt;&gt; for val in sig.parameters.values():\n...     print(val.name, val.kind)\n...\na POSITIONAL_ONLY\nb POSITIONAL_OR_KEYWORD\nargs VAR_POSITIONAL\nc KEYWORD_ONLY\nkwargs VAR_KEYWORD\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/functions/#_5","title":"\u53c2\u6570\u200b\u7684\u200b\u7c7b\u578b\u200b\u9650\u5236","text":"<p>Python\u200b\u4e2d\u200b\u5bf9\u200b\u51fd\u6570\u53c2\u6570\u200b\u7684\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b\u4ee5\u200b\u51fd\u6570\u200b\u6ce8\u89e3\u200b\u7684\u200b\u5f62\u5f0f\u200b\u5b9e\u73b0\u200b\u3002\u200b\u51fd\u6570\u200b\u6ce8\u89e3\u200b\u89c4\u5b9a\u200b\u4e86\u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u63a5\u53d7\u200b\u7684\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b\u3002</p> <p>\u200b\u51fd\u6570\u200b\u6ce8\u89e3\u200b\u53ef\u4ee5\u200b\u4e3a\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u3002<code>:</code>\u200b\u7528\u4e8e\u200b\u5bf9\u200b\u53c2\u6570\u200b\u7684\u200b\u6ce8\u89e3\u200b\uff0c<code>-&gt;</code>\u200b\u8868\u793a\u200b\u5bf9\u200b\u8fd4\u56de\u503c\u200b\u7684\u200b\u6ce8\u89e3\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; def another_dummy(x: int) -&gt; int:       \n...     return -x\n... \n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\uff0c\u200b\u6ce8\u89e3\u200b\u5e76\u200b\u4e0d\u4f1a\u200b\u5bfc\u81f4\u200bPython\u200b\u5bf9\u200b\u4f20\u5165\u200b\u53c2\u6570\u200b\u7684\u200b\u7c7b\u578b\u200b\u8fdb\u884c\u200b\u68c0\u67e5\u200b\u3002</p> <pre><code>&gt;&gt;&gt; another_dummy(0.5)         \n-0.5\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u6240\u6709\u200b\u7684\u200b\u6ce8\u89e3\u200b\u5b58\u50a8\u200b\u5728\u200b\u51fd\u6570\u200b\u7684\u200b<code>__annotations__</code>\u200b\u5c5e\u6027\u200b\u4e2d\u200b\u3002</p> <pre><code>&gt;&gt;&gt; another_dummy.__annotations__\n{'x': &lt;class 'int'&gt;, 'return': &lt;class 'int'&gt;}\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/functions/#_6","title":"\u51fd\u6570\u200b\u5f0f\u200b\u7f16\u7a0b","text":""},{"location":"coding/python/functions/#operator","title":"operator\u200b\u6a21\u5757","text":"<p><code>operator</code>\u200b\u6a21\u5757\u200b\u63d0\u4f9b\u200b\u4e86\u200bPython\u200b\u4e2d\u200b\u90e8\u5206\u200b\u8fd0\u7b97\u7b26\u200b\u6216\u200b\u64cd\u4f5c\u200b\u7684\u200b\u51fd\u6570\u200b\u5f0f\u200b\u5b9e\u73b0\u200b\u3002</p> <pre><code>&gt;&gt;&gt; import operator\n&gt;&gt;&gt; operator.add(5, 3)\n8\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u6b64\u5916\u200b\uff0c<code>__getitem__</code>\u3001<code>__getattribute__</code>\u200b\u65b9\u6cd5\u200b\u5728\u200b<code>operator</code>\u200b\u6a21\u5757\u200b\u4e2d\u200b\u4e5f\u200b\u6709\u200b\u5bf9\u5e94\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u4e3a\u200b<code>itemgetter</code>\u3001<code>attrgetter</code>\u3002<code>methodcaller</code>\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\u5185\u200b\u7684\u200b\u67d0\u4e2a\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u4e0e\u200b<code>operator</code>\u200b\u6a21\u5757\u200b\u4e2d\u200b\u7684\u200b\u5176\u4ed6\u200b\u51fd\u6570\u200b\u4e0d\u540c\u200b\uff0c\u200b\u8c03\u7528\u200b\u8be5\u200b\u51fd\u6570\u200b\u4f1a\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u53ef\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\u3002</p> <pre><code>&gt;&gt;&gt; sort = operator.methodcaller('sort')\n&gt;&gt;&gt; sort_rev = operator.methodcaller('sort', reverse=True)\n&gt;&gt;&gt; a = [1, 3, 2]\n&gt;&gt;&gt; sort(a)\n&gt;&gt;&gt; a\n[1, 2, 3]\n&gt;&gt;&gt; sort_rev(a)\n&gt;&gt;&gt; a\n[3, 2, 1]\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/functions/#functools","title":"functools\u200b\u6a21\u5757","text":"<p>functools\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e0e\u200b\u51fd\u6570\u200b\u5f0f\u200b\u7f16\u7a0b\u200b\u76f8\u5173\u200b\u7684\u200b\u4e00\u7cfb\u5217\u200b\u51fd\u6570\u200b\u5de5\u5177\u200b\u3002</p> <p><code>partial</code>\u200b\u7528\u4e8e\u200b\u9501\u5b9a\u200b\u51fd\u6570\u200b\u7684\u200b\u4e00\u90e8\u5206\u200b\u53c2\u6570\u200b\u3002\u200b\u5176\u4f59\u200b\u53c2\u6570\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8c03\u7528\u200b\u65f6\u200b\u6307\u5b9a\u200b\uff08\u200b\u5b9a\u4f4d\u200b\u53c2\u6570\u200b\u53ea\u80fd\u200b\u6309\u200b\u987a\u5e8f\u200b\u6307\u5b9a\u200b\uff0c\u200b\u5173\u952e\u5b57\u200b\u53c2\u6570\u200b\u53ef\u4ee5\u200b\u4efb\u610f\u200b\u6307\u5b9a\u200b\uff09\uff1a</p> <pre><code>&gt;&gt;&gt; from functools import partial\n&gt;&gt;&gt; part = partial(divmod, 3) \n&gt;&gt;&gt; part(2)\n(1, 1)\n&gt;&gt;&gt;\n</code></pre> <p><code>reduce</code>\u200b\u5c06\u200b\u63a5\u53d7\u200b\u4e24\u4e2a\u200b\u53c2\u6570\u200b\u7684\u200b\u51fd\u6570\u200b\u5e94\u7528\u200b\u5230\u200b\u4e00\u4e2a\u200b\u5e8f\u5217\u200b\u4e0a\u200b\uff0c\u200b\u5f97\u5230\u200b\u4e00\u4e2a\u200b\u7ed3\u679c\u200b\u3002\u200b\u501f\u52a9\u200b<code>operator</code>\u200b\u6a21\u5757\u200b\u4e2d\u200b\u63d0\u4f9b\u200b\u7684\u200b\u8fd0\u7b97\u7b26\u200b\uff0c<code>reduce</code>\u200b\u6a21\u5757\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u9636\u4e58\u200b\u7b49\u200b\u9700\u8981\u200b\u5faa\u73af\u200b\u624d\u80fd\u200b\u5b9e\u73b0\u200b\u7684\u200b\u8fd0\u7b97\u200b\u64cd\u4f5c\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; from functools import reduce\n&gt;&gt;&gt; def fact(x: int):\n...     return reduce(operator.mul, range(1, x + 1))\n... \n&gt;&gt;&gt; fact(5)\n120\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/killable-thread/","title":"Python\u200b\u5173\u95ed\u200b\u7ebf\u7a0b","text":"<p>\u200b\u4f7f\u7528\u200b<code>PyThreadState_SetAsyncExc</code>\u200b\u51fd\u6570\u200b\u5728\u5b50\u200b\u7ebf\u7a0b\u200b\u4e2d\u200b\u5f15\u53d1\u200b\u5f02\u5e38\u200b\uff0c\u200b\u4ece\u800c\u200b\u4f7f\u200b\u7ebf\u7a0b\u200b\u63d0\u524d\u7ed3\u675f\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>import threading \nimport ctypes \nimport time \n\nclass thread_with_exception(threading.Thread): \n    def __init__(self, name): \n        threading.Thread.__init__(self) \n        self.name = name \n\n    def run(self): \n\n        # target function of the thread class \n        try: \n            while True: \n                print('running ' + self.name) \n        finally: \n            print('ended') \n\n    def get_id(self): \n\n        # returns id of the respective thread \n        if hasattr(self, '_thread_id'): \n            return self._thread_id \n        for id, thread in threading._active.items(): \n            if thread is self: \n                return id\n\n    def raise_exception(self): \n        thread_id = self.get_id() \n        res = ctypes.pythonapi.PyThreadState_SetAsyncExc(thread_id, \n              ctypes.py_object(SystemExit)) \n        if res &gt; 1: \n            ctypes.pythonapi.PyThreadState_SetAsyncExc(thread_id, 0) \n            print('Exception raise failure') \n\nt1 = thread_with_exception('Thread 1') \nt1.start() \ntime.sleep(2) \nt1.raise_exception() \nt1.join() \n</code></pre> <p>\u200b\u628a\u200b<code>run()</code>\u200b\u4e2d\u200b\u6267\u884c\u200b\u7684\u200b\u64cd\u4f5c\u200b\u4ee5\u200b\u53c2\u6570\u200b\u7684\u200b\u5f62\u5f0f\u200b\u4f20\u9012\u200b\uff1a</p> <pre><code>class KillableThread(threading.Thread):\n    \"\"\"\n    A thread class extending threading.Thread, provides a kill() method to stop the thread and a getResult() method to get the return value of the thread.\n    \"\"\"\n\n    def __init__(self, func: Callable, *args, **kwargs):\n        super().__init__()\n        self.func: Callable = func\n        self.funcArg: dict = kwargs\n        self.funcTup: Tuple = args\n        self.result: Any = None\n        self.exception: Any = None\n\n    def run(self):\n        \"\"\"\n        Executes the function here\n        \"\"\"\n        try:\n            self.result = self.func(*self.funcTup, **self.funcArg)\n        except BaseException as e:\n            self.exception = e\n\n    def get_id(self):\n        \"\"\"\n        Get the id of the thread\n        \"\"\"\n        if hasattr(self, '_thread_id'):\n            return self._thread_id\n        for id, thread in threading._active.items():\n            if thread is self:\n                return id\n\n    def kill(self):\n        \"\"\"\n        Stops the thread\n        \"\"\"\n        thread_id = self.get_id()\n        res = ctypes.pythonapi.PyThreadState_SetAsyncExc(thread_id,\n                                                         ctypes.py_object(SystemExit))\n        if res &gt; 1:\n            ctypes.pythonapi.PyThreadState_SetAsyncExc(thread_id, 0)\n            print('Exception raise failure')\n\n    def getResult(self):\n        if self.exception is None:\n            return self.result\n        else:\n            raise self.exception\n</code></pre> <p>\u200b\u6765\u6e90\u200b\uff1ahttps://www.geeksforgeeks.org/python-different-ways-to-kill-a-thread</p>"},{"location":"coding/python/magic-functions/","title":"\u9b54\u672f\u200b\u65b9\u6cd5","text":"<p>\u200b\u672c\u6587\u200b\u4e3b\u8981\u200b\u6db5\u76d6\u200bPython\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u7684\u200b\u9b54\u672f\u200b\u65b9\u6cd5\u200b\u3002\u200b\u9b54\u672f\u200b\u65b9\u6cd5\u200b\u662f\u200b\u7c7b\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u7684\u200b\u4e00\u79cd\u200b\u7279\u6b8a\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u65b9\u6cd5\u200b\u62e5\u6709\u200b\u56fa\u5b9a\u200b\u7684\u200b\u53c2\u6570\u200b\u5217\u8868\u200b\u548c\u200b\u7279\u6b8a\u200b\u7684\u200b\u8c03\u7528\u200b\u65f6\u673a\u200b\u3002</p> <p>\u200b\u9b54\u672f\u200b\u65b9\u6cd5\u200b\u4ee5\u53cc\u200b\u4e0b\u5212\u7ebf\u200b<code>__</code>\u200b\u5f00\u5934\u200b\uff0c\u200b\u4ee5\u53cc\u200b\u4e0b\u5212\u7ebf\u200b\u7ed3\u5c3e\u200b\u3002</p> <p>Python\u200b\u4e2d\u200b\u7684\u200b\u8fd0\u7b97\u7b26\u200b\u91cd\u8f7d\u200b\u901a\u8fc7\u200b\u9b54\u672f\u200b\u65b9\u6cd5\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u9b54\u672f\u200b\u65b9\u6cd5\u200b\u5206\u4e3a\u200b\u4e0e\u200b\u8fd0\u7b97\u7b26\u200b\u65e0\u5173\u200b\u7684\u200b\u7279\u6b8a\u200b\u65b9\u6cd5\u200b\u53ca\u200b\u4e0e\u200b\u8fd0\u7b97\u7b26\u200b\u6709\u5173\u200b\u7684\u200b\u7279\u6b8a\u200b\u65b9\u6cd5\u200b</p>"},{"location":"coding/python/magic-functions/#_2","title":"\u4e0e\u200b\u8fd0\u7b97\u7b26\u200b\u65e0\u5173\u200b\u7684\u200b\u9b54\u672f\u200b\u65b9\u6cd5","text":"<p>\u200b\u6d89\u53ca\u200b\u5230\u200b\u5b57\u7b26\u4e32\u200b\u4e0e\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\u7684\u200b\u9b54\u672f\u200b\u65b9\u6cd5\u200b\uff1a</p> \u200b\u65b9\u6cd5\u200b\u540d\u200b \u200b\u53c2\u6570\u200b\u5217\u8868\u200b \u200b\u8c03\u7528\u200b\u65f6\u673a\u200b \u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b \u200b\u5907\u6ce8\u200b <code>__repr__</code> <code>self</code> \u200b\u5f53\u200b\u8c03\u7528\u200b<code>repr()</code>\u200b\u51fd\u6570\u200b\u65f6\u200b <code>str</code> \u200b\u8fd4\u56de\u503c\u200b\u5e94\u4e3a\u200b\u91cd\u5efa\u200b\u8be5\u200b\u5bf9\u8c61\u200b\u7684\u200bPython\u200b\u8868\u8fbe\u5f0f\u200b\uff08\u200b\u5982\u679c\u200b\u53ef\u80fd\u200b\uff09\uff0c\u200b\u6216\u200b\u5305\u542b\u200b\u5176\u4ed6\u200b\u4fe1\u606f\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b<code>&lt;...&gt;</code> <code>__str__</code> <code>self</code> \u200b\u5f53\u200b\u8c03\u7528\u200b<code>str()</code>\u200b\u51fd\u6570\u200b\u65f6\u200b <code>str</code> \u200b\u8c03\u7528\u200b<code>print()</code>\u200b\u7b49\u200b\u5176\u4ed6\u200b\u51fd\u6570\u200b\u65f6\u4f1a\u200b\u9690\u5f0f\u200b\u8c03\u7528\u200b<code>__str__()</code>\uff0c\u200b\u5f53\u200b\u4e0d\u200b\u5b58\u5728\u200b<code>__str__()</code>\u200b\u65f6\u4f1a\u200b\u81ea\u52a8\u200b\u8c03\u7528\u200b<code>__repr__()</code> <code>__format__</code> <code>self, format_spec</code> \u200b\u5f53\u200b\u8c03\u7528\u200b<code>format()</code>\u200b\u51fd\u6570\u200b\u65f6\u200b <code>str</code> <code>object.__format__(x, '')</code>\u200b\u7b49\u4ef7\u200b\u4e8e\u200b<code>str(x)</code> <code>__bytes__</code> <code>self</code> \u200b\u5f53\u200b\u8c03\u7528\u200b<code>bytes()</code>\u200b\u51fd\u6570\u200b\u65f6\u200b <code>bytes</code> \u200b\u8fd4\u56de\u503c\u200b\u662f\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5b57\u8282\u200b\u8868\u793a\u200b <p>\u200b\u6d89\u53ca\u200b\u5230\u200b\u6570\u503c\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u7684\u200b\u9b54\u672f\u200b\u65b9\u6cd5\u200b\uff1a</p> \u200b\u65b9\u6cd5\u200b\u540d\u200b \u200b\u53c2\u6570\u200b\u5217\u8868\u200b \u200b\u8c03\u7528\u200b\u65f6\u673a\u200b \u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b \u200b\u5907\u6ce8\u200b <code>__bool__</code> <code>self</code> \u200b\u8c03\u7528\u200b<code>bool()</code>\u200b\u51fd\u6570\u200b\u65f6\u200b <code>bool</code> \u200b\u5f53\u200b<code>__bool__</code>\u200b\u51fd\u6570\u200b\u6ca1\u6709\u200b\u5b9a\u4e49\u200b\u65f6\u200b\uff0c\u200b\u4f1a\u200b\u9690\u5f0f\u200b\u8c03\u7528\u200b<code>__len__</code>\uff0c\u200b\u5982\u679c\u200b<code>__len__</code>\u200b\u4e5f\u200b\u6ca1\u6709\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b<code>True</code> <code>__complex__</code> <code>self</code> \u200b\u8c03\u7528\u200b<code>commplex()</code>\u200b\u51fd\u6570\u200b\u65f6\u200b <code>complex</code> <code>__int__</code> <code>self</code> \u200b\u8c03\u7528\u200b<code>int()</code>\u200b\u51fd\u6570\u200b\u65f6\u200b <code>int</code> <code>__float__</code> <code>self</code> \u200b\u8c03\u7528\u200b<code>float()</code>\u200b\u51fd\u6570\u200b\u65f6\u200b <code>float</code> <code>__hash__</code> <code>self</code> \u200b\u8c03\u7528\u200b<code>hash()</code> \u200b\u51fd\u6570\u200b\u65f6\u200b <code>hash()</code>\u200b\u51fd\u6570\u200b\u5c06\u200b<code>__hash__()</code>\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u622a\u65ad\u200b\u5230\u200b<code>Py_ssize_t</code>\u200b\u7684\u200b\u8303\u56f4\u200b\u5185\u200b\uff0c64\u200b\u4f4d\u200b\u7cfb\u7edf\u200b\u4e0b\u200b<code>Py_ssize_t</code>\u200b\u4e3a\u200b8\u200b\u5b57\u8282\u200b\uff1b<code>set</code>\u200b\u7b49\u200b\u7c7b\u578b\u200b\u7684\u200b\u64cd\u4f5c\u200b\u4e5f\u200b\u4f1a\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\u7684\u200b<code>__hash__</code>\u200b\u51fd\u6570\u200b <code>__index__</code> <code>self</code> \u200b\u8c03\u7528\u200b<code>operator.index()</code>\u200b\u6216\u200bPython\u200b\u9700\u8981\u200b\u6574\u6570\u200b\u503c\u65f6\u200b <code>int</code> \u200b\u5f53\u200b<code>__int__</code>\u3001<code>__float__</code>\u3001<code>__complex__</code>\u200b\u6ca1\u6709\u200b\u5b9e\u73b0\u200b\u65f6\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u51fd\u6570\u200b\u9690\u5f0f\u200b\u5730\u200b\u8c03\u7528\u200b<code>__index__</code> <p>\u200b\u96c6\u5408\u200b\u76f8\u5173\u200b\u64cd\u4f5c\u200b</p> \u200b\u65b9\u6cd5\u200b\u540d\u200b \u200b\u53c2\u6570\u200b\u5217\u8868\u200b \u200b\u8c03\u7528\u200b\u65f6\u673a\u200b \u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b \u200b\u5907\u6ce8\u200b <code>__len__</code> <code>self</code> \u200b\u8c03\u7528\u200b<code>len()</code>\u200b\u51fd\u6570\u200b\u65f6\u200b <code>int</code> \u200b\u8fd4\u56de\u503c\u200b\u5fc5\u987b\u200b\u4e3a\u200b\u975e\u8d1f\u200b\u6574\u6570\u200b\uff0c\u200b\u5728\u200bCPython\u200b\u4e2d\u200b\u8fd4\u56de\u503c\u200b\u4e0d\u80fd\u200b\u8d85\u8fc7\u200b<code>sys.maxsize</code>\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u5426\u5219\u200b<code>len()</code>\u200b\u7b49\u200b\u51fd\u6570\u200b\u4f1a\u200b\u629b\u51fa\u200b<code>OverflowError</code>\u200b\u7b49\u200b\u5f02\u5e38\u200b <code>__getitemm__</code> <code>self, key</code> \u200b\u4f7f\u7528\u200b<code>[]</code>\u200b\u8fd0\u7b97\u7b26\u200b\u65f6\u200b\uff08\u200b\u53f3\u503c\u200b\uff09 <code>key</code>\u200b\u53ef\u4ee5\u200b\u4e3a\u200b\u5408\u6cd5\u200b\u7684\u200b\u6570\u7ec4\u200b\u4e0b\u6807\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u662f\u200b\u53cd\u5411\u200b\u7684\u200b\u4e0b\u6807\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u662f\u200b\u5e8f\u5217\u200b\u7684\u200b\u5207\u7247\u200b\uff0c\u200b\u8be5\u200b\u51fd\u6570\u200b\u5e94\u200b\u5728\u200b<code>key</code>\u200b\u7c7b\u578b\u200b\u4e0d\u200b\u5bf9\u5e94\u200b\u65f6\u200b\u629b\u51fa\u200b<code>TypeError</code>\uff0c<code>key</code>\u200b\u8d85\u51fa\u8303\u56f4\u200b\u65f6\u200b\u629b\u51fa\u200b<code>IndexError</code>\u200b\u6216\u200b<code>KeyError</code>\uff08\u200b\u5bf9\u4e8e\u200b\u6620\u5c04\u200b\u7c7b\u578b\u200b\uff09 <code>__setitem__</code> <code>self, key, value</code> \u200b\u4f7f\u7528\u200b<code>[]</code>\u200b\u8fd0\u7b97\u7b26\u200b\u65f6\u200b\uff08\u200b\u5de6\u503c\u200b\uff09 <code>None</code> <code>key</code>\u200b\u53c2\u6570\u200b\u7684\u200b\u53d6\u503c\u200b\u53ca\u200b\u5f02\u5e38\u200b\u5904\u7406\u200b\u4e0e\u200b<code>__getitem__</code>\u200b\u51fd\u6570\u200b\u76f8\u540c\u200b <code>__delitem__</code> <code>self, key</code> \u200b\u4f7f\u7528\u200b<code>del</code>\u200b\u5220\u9664\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u65f6\u200b <code>None</code> \u200b\u5bf9\u4e8e\u200b\u4e0d\u53ef\u200b\u5220\u9664\u200b\u7684\u200b\u5e8f\u5217\u200b\u6216\u200b\u6620\u5c04\u200b\uff0c\u200b\u65e0\u9700\u200b\u5b9e\u73b0\u200b\u8be5\u200b\u51fd\u6570\u200b\uff0c\u200b\u5176\u4ed6\u200b\u540c\u200b<code>__getitem__</code> <code>__contains__</code> <code>self, item</code> \u200b\u4f7f\u7528\u200b<code>in</code>\u200b\u4f5c\u4e3a\u200b\u8fd0\u7b97\u7b26\u200b\u65f6\u200b <code>bool</code> \u200b\u5bf9\u4e8e\u200b\u6620\u5c04\u200b\u7c7b\u578b\u200b\uff0c<code>__contains__</code>\u200b\u63a5\u6536\u200b\u7684\u200b<code>item</code>\u200b\u53c2\u6570\u200b\u5bf9\u5e94\u200b\u6620\u5c04\u200b\u7684\u200b<code>key</code>\u200b\u90e8\u5206\u200b\u800c\u200b\u4e0d\u662f\u200b<code>value</code>\u200b\u90e8\u5206\u200b\u3002\u200b\u82e5\u200b\u6ca1\u6709\u200b\u5b9a\u4e49\u200b\u8be5\u200b\u51fd\u6570\u200b\uff0cPython\u200b\u9996\u5148\u200b\u901a\u8fc7\u200b<code>__iter__</code>\u200b\u8fdb\u884c\u200b\u67e5\u627e\u200b\uff0c\u200b\u5176\u6b21\u200b\u4f7f\u7528\u200b<code>__getitem__</code>\u200b\u8fdb\u884c\u200b\u67e5\u627e\u200b <p>\u200b\u8fed\u4ee3\u200b\u5668\u200b\u4e0e\u200b\u679a\u4e3e\u200b\u7c7b\u578b\u200b</p> \u200b\u65b9\u6cd5\u200b\u540d\u200b \u200b\u53c2\u6570\u200b\u5217\u8868\u200b \u200b\u8c03\u7528\u200b\u65f6\u673a\u200b \u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b \u200b\u5907\u6ce8\u200b <code>__iter__</code> <code>self</code> \u200b\u8c03\u7528\u200b<code>iter()</code>\u200b\u51fd\u6570\u200b\u6216\u200b\u4f7f\u7528\u200b\u5faa\u73af\u200b\u65f6\u200b \u200b\u8fd4\u56de\u503c\u200b\u5e94\u4e3a\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u5bf9\u8c61\u200b\uff0c<code>__iter__</code>\u200b\u51fd\u6570\u200b\u8fd4\u56de\u200b\u81ea\u8eab\u200b <code>__reversed__</code> <code>self</code> \u200b\u8c03\u7528\u200b<code>reversed()</code>\u200b\u51fd\u6570\u200b\u65f6\u200b \u200b\u8fd4\u56de\u503c\u200b\u5e94\u4e3a\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u4e14\u200b\u662f\u200b\u539f\u200b\u5e8f\u5217\u200b\u7684\u200b\u9006\u5e8f\u200b <code>__next__</code> <code>self</code> \u200b\u8c03\u7528\u200b<code>next()</code>\u200b\u51fd\u6570\u200b\u65f6\u200b \u200b\u8fd4\u56de\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u7684\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\uff0c\u200b\u5f53\u200b\u5230\u8fbe\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u65f6\u200b\u629b\u51fa\u200b<code>StopIteration</code> <p>\u200b\u51fd\u6570\u8c03\u7528\u200b</p> \u200b\u65b9\u6cd5\u200b\u540d\u200b \u200b\u53c2\u6570\u200b\u5217\u8868\u200b \u200b\u8c03\u7528\u200b\u65f6\u673a\u200b \u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b \u200b\u5907\u6ce8\u200b <code>__call__</code> <code>self, *args, **kwargs</code> \u200b\u5f53\u200b\u5bf9\u8c61\u200b\u4ee5\u200b\u51fd\u6570\u200b\u7684\u200b\u65b9\u5f0f\u200b\u88ab\u200b\u8c03\u7528\u200b\u65f6\u200b \u200b\u5b9a\u4e49\u200b\u4e86\u200b<code>__call__</code>\u200b\u65b9\u6cd5\u200b\u7684\u200b\u5bf9\u8c61\u200b\u5c5e\u4e8e\u200b<code>typing.Callable</code>\u200b\u7c7b\u578b\u200b <p>\u200b\u4e0a\u4e0b\u6587\u200b\u7ba1\u7406\u200b\uff08<code>with</code>\uff09\u200b\u5173\u952e\u8bcd\u200b\uff1a</p> \u200b\u65b9\u6cd5\u200b\u540d\u200b \u200b\u53c2\u6570\u200b\u5217\u8868\u200b \u200b\u8c03\u7528\u200b\u65f6\u673a\u200b \u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b \u200b\u5907\u6ce8\u200b <code>__enter__</code> <code>self</code> \u200b\u4f7f\u7528\u200b<code>with</code>\u200b\u5173\u952e\u8bcd\u200b\u58f0\u660e\u200b\u4e0a\u4e0b\u6587\u200b\u65f6\u200b <code>Any</code> \u200b\u8fd4\u56de\u503c\u200b\u5206\u914d\u200b\u7ed9\u200b<code>as</code>\u200b\u5173\u952e\u8bcd\u200b\u6307\u660e\u200b\u7684\u200b\u5bf9\u8c61\u200b <code>__exit__</code> <code>self, exc_type, exc_value, traceback</code> \u200b\u79bb\u5f00\u200b<code>with</code>\u200b\u5757\u200b\u65f6\u200b <code>Any</code> \u200b\u82e5\u200b<code>with</code>\u200b\u5757\u200b\u6267\u884c\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u6ca1\u6709\u200b\u51fa\u73b0\u5f02\u5e38\u200b\uff0c\u200b\u5219\u200b<code>exc_type, exc_value, traceback</code>\u200b\u53c2\u6570\u5747\u200b\u4e3a\u200b<code>None</code>\uff0c\u200b\u5426\u5219\u200b<code>exit</code>\u200b\u5757\u200b\u53ef\u4ee5\u200b\u5bf9\u200b\u5f02\u5e38\u200b\u8fdb\u884c\u200b\u5904\u7406\u200b <p>\u200b\u5bf9\u8c61\u200b\u7ba1\u7406\u200b</p> \u200b\u65b9\u6cd5\u200b\u540d\u200b \u200b\u53c2\u6570\u200b\u5217\u8868\u200b \u200b\u8c03\u7528\u200b\u65f6\u673a\u200b \u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b \u200b\u5907\u6ce8\u200b <code>__new__</code> <code>cls[, ...]</code> \u200b\u521b\u5efa\u200b\u7c7b\u200b\u5b9e\u4f8b\u200b\u65f6\u200b <code>Any</code> <code>__new__</code>\u200b\u4e3a\u200b\u9759\u6001\u65b9\u6cd5\u200b\u4e14\u200b\u5148\u4e8e\u200b<code>__init__</code>\u200b\u6267\u884c\u200b\uff0c<code>__new__</code>\u200b\u7684\u200b\u5176\u4f59\u200b\u53c2\u6570\u200b\u4f1a\u200b\u4f20\u9012\u200b\u7ed9\u200b<code>__init__</code>\u3002\u200b\u82e5\u200b<code>__new__</code>\u200b\u8fd4\u56de\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e0e\u200b\u521b\u5efa\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e0d\u200b\u5bf9\u5e94\u200b\uff0c\u200b\u5219\u200b\u4e0d\u4f1a\u200b\u6267\u884c\u200b<code>__init__</code> <code>__init__</code> <code>self, ...</code> \u200b\u521d\u59cb\u5316\u200b\u7c7b\u200b\u5b9e\u4f8b\u200b\u65f6\u200b <code>None</code> \u200b\u82e5\u200b\u57fa\u7c7b\u200b\u5b9a\u4e49\u200b\u4e86\u200b<code>__init__</code>\uff0c\u200b\u5219\u200b\u5728\u200b\u5b50\u7c7b\u200b\u7684\u200b<code>__init__</code>\u200b\u4e2d\u200b\u5fc5\u987b\u200b\u6709\u200b<code>super().__init()</code>\u200b\u7684\u200b\u663e\u5f0f\u200b\u8c03\u7528\u200b <code>__del__</code> <code>self</code> \u200b\u5bf9\u8c61\u200b\u9500\u6bc1\u200b\u65f6\u200b <code>None</code> \u200b\u5f53\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5f15\u7528\u200b\u8ba1\u6570\u200b\u51cf\u200b\u4e3a\u200b0\u200b\u65f6\u200b\uff0c\u200b\u5bf9\u8c61\u200b\u624d\u200b\u53ef\u80fd\u200b\u88ab\u200b\u5220\u9664\u200b <p>\u200b\u5c5e\u6027\u200b\u7ba1\u7406\u200b</p> \u200b\u65b9\u6cd5\u200b\u540d\u200b \u200b\u53c2\u6570\u200b\u5217\u8868\u200b \u200b\u8c03\u7528\u200b\u65f6\u673a\u200b \u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b \u200b\u5907\u6ce8\u200b <code>__getattribute__</code> <code>self, name</code> \u200b\u4f7f\u7528\u200b<code>self.name</code>\u200b\u8bbf\u95ee\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5c5e\u6027\u200b\u65f6\u200b <code>Any</code> \u200b\u4e3a\u200b\u907f\u514d\u200b\u65e0\u9650\u200b\u9012\u5f52\u200b\uff0c\u200b\u5b50\u7c7b\u200b\u7684\u200b<code>__getattribute__</code>\u200b\u65b9\u6cd5\u200b\u7684\u200b\u5b9e\u73b0\u200b\u4e2d\u200b\u5fc5\u987b\u200b\u5305\u542b\u200b\u7236\u7c7b\u200b\u7684\u200b<code>__getattribute__</code>\u200b\u65b9\u6cd5\u200b\u8c03\u7528\u200b <code>__getattr__</code> <code>self, name</code> \u200b\u4f7f\u7528\u200b<code>self.name</code>\u200b\u8bbf\u95ee\u200b\u5bf9\u8c61\u200b\u7684\u200b\u4e0d\u200b\u5b58\u5728\u200b\u5c5e\u6027\u200b\u6216\u200b<code>__getattribute__</code>\u200b\u51fd\u6570\u200b\u629b\u51fa\u200b<code>AttributeError</code>\u200b\u5f02\u5e38\u200b <code>Any</code> \u200b\u5f53\u200b<code>__getattribute__</code>\u200b\u6b63\u5e38\u200b\u6267\u884c\u200b\u65f6\u200b<code>__getattr__</code>\u200b\u4e0d\u4f1a\u200b\u6267\u884c\u200b <code>__setattr__</code> <code>self, name, value</code> \u200b\u4f7f\u7528\u200b<code>self.name</code>\u200b\u8bbe\u7f6e\u200b\u5c5e\u6027\u200b\u7684\u200b\u503c\u65f6\u200b <code>None</code> \u200b\u5f53\u200b\u8bd5\u56fe\u200b\u901a\u8fc7\u200b<code>__setattr__</code>\u200b\u5411\u200b\u5bf9\u8c61\u200b\u8bbe\u7f6e\u200b\u5c5e\u6027\u200b\u503c\u65f6\u200b\u5fc5\u987b\u200b\u901a\u8fc7\u200b\u7c7b\u578b\u200b\u7684\u200b<code>__setattr__</code>\u200b\u65b9\u6cd5\u200b\u8fdb\u884c\u200b\u8bbe\u7f6e\u200b <code>__delattr__</code> <code>self, name</code> \u200b\u6267\u884c\u200b<code>del self.name</code>\u200b\u65f6\u200b <code>None</code> \u200b\u4ec5\u5f53\u200b<code>del self.name</code>\u200b\u8bed\u53e5\u200b\u6709\u200b\u610f\u4e49\u200b\u65f6\u200b\uff0c\u200b\u624d\u200b\u9700\u8981\u200b\u5b9e\u73b0\u200b\u8be5\u200b\u65b9\u6cd5\u200b <code>__dir__</code> <code>self</code> \u200b\u6267\u884c\u200b<code>dir()</code>\u200b\u51fd\u6570\u200b\u65f6\u200b <code>Sequence</code> <code>dir()</code>\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u8fdb\u884c\u200b\u6392\u5e8f\u200b\u5904\u7406"},{"location":"coding/python/magic-functions/#_3","title":"\u4e0e\u200b\u8fd0\u7b97\u7b26\u200b\u6709\u5173\u200b\u7684\u200b\u9b54\u672f\u200b\u65b9\u6cd5","text":"<p>\u200b\u4e00\u5143\u200b\u8fd0\u7b97\u7b26\u200b</p> \u200b\u63cf\u8ff0\u200b \u200b\u65b9\u6cd5\u200b\u540d\u200b \u200b\u8fd0\u7b97\u7b26\u200b \u200b\u53d6\u8d1f\u200b <code>__neg__</code> <code>-</code> \u200b\u53d6\u6b63\u200b <code>__pos__</code> <code>+</code> \u200b\u7edd\u5bf9\u503c\u200b <code>__abs__</code> <code>abs()</code> <p>\u200b\u6bd4\u8f83\u200b\u8fd0\u7b97\u7b26\u200b</p> \u200b\u63cf\u8ff0\u200b \u200b\u65b9\u6cd5\u200b\u540d\u200b \u200b\u8fd0\u7b97\u7b26\u200b \u200b\u5c0f\u4e8e\u200b <code>__lt__</code> <code>&lt;</code> \u200b\u5c0f\u4e8e\u200b\u7b49\u4e8e\u200b <code>__le__</code> <code>&lt;=</code> \u200b\u7b49\u4e8e\u200b <code>__eq__</code> <code>==</code> \u200b\u4e0d\u200b\u7b49\u4e8e\u200b <code>__ne__</code> <code>!=</code> \u200b\u5927\u4e8e\u200b <code>__gt__</code> <code>&gt;</code> \u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b <code>__ge__</code> <code>&gt;=</code> <p>\u200b\u7b97\u672f\u200b\u8fd0\u7b97\u7b26\u200b</p> \u200b\u63cf\u8ff0\u200b \u200b\u65b9\u6cd5\u200b\u540d\u200b \u200b\u8fd0\u7b97\u7b26\u200b \u200b\u76f8\u52a0\u200b <code>__add__</code> <code>+</code> \u200b\u76f8\u51cf\u200b <code>__sub__</code> <code>-</code> \u200b\u76f8\u4e58\u200b <code>__mul__</code> <code>*</code> \u200b\u5b9e\u6570\u200b\u9664\u200b <code>__truediv__</code> <code>/</code> \u200b\u6574\u6570\u200b\u9664\u200b <code>__floordiv__</code> <code>//</code> \u200b\u53d6\u4f59\u200b <code>__mod__</code> <code>%</code> \u200b\u6574\u6570\u200b\u9664\u200b+\u200b\u53d6\u4f59\u200b <code>__divmod__</code> <code>divmod()</code> \u200b\u4e58\u65b9\u200b <code>__pow__</code> <code>**</code> \u200b\u53d6\u6574\u200b <code>__round__</code> <code>round()</code> <p>\u200b\u53cd\u5411\u200b\u7b97\u672f\u200b\u8fd0\u7b97\u7b26\u200b\u5728\u200b\u65b9\u6cd5\u200b\u540d\u200b\u524d\u9762\u200b\u52a0\u200b<code>r</code>\uff0c\u200b\u5982\u200b<code>__radd__</code>\u3002\u200b\u589e\u91cf\u200b\u8d4b\u503c\u200b\u7b97\u672f\u200b\u8fd0\u7b97\u7b26\u200b\u5728\u200b\u65b9\u6cd5\u200b\u540d\u200b\u524d\u9762\u200b\u52a0\u200b<code>i</code>\uff0c\u200b\u5982\u200b<code>__iadd__</code>\u3002</p> <p>\u200b\u4f4d\u200b\u8fd0\u7b97\u7b26\u200b</p> \u200b\u63cf\u8ff0\u200b \u200b\u65b9\u6cd5\u200b\u540d\u200b \u200b\u8fd0\u7b97\u7b26\u200b \u200b\u6309\u4f4d\u200b\u53d6\u53cd\u200b <code>__invert__</code> <code>~</code> \u200b\u5de6\u79fb\u200b <code>__lshift__</code> <code>&lt;&lt;</code> \u200b\u53f3\u79fb\u200b <code>__rshift__</code> <code>&gt;&gt;</code> \u200b\u6309\u4f4d\u200b\u4e0e\u200b <code>__and__</code> <code>&amp;</code> \u200b\u6309\u4f4d\u200b\u6216\u200b <code>__or__</code> <code>|</code> \u200b\u6309\u4f4d\u200b\u5f02\u6216\u200b <code>__xor__</code> <code>^</code> <p>\u200b\u53cd\u5411\u200b\u7b97\u672f\u200b\u8fd0\u7b97\u7b26\u200b\u5728\u200b\u65b9\u6cd5\u200b\u540d\u200b\u524d\u9762\u200b\u52a0\u200b<code>r</code>\uff0c\u200b\u589e\u91cf\u200b\u8d4b\u503c\u200b\u7b97\u672f\u200b\u8fd0\u7b97\u7b26\u200b\u5728\u200b\u65b9\u6cd5\u200b\u540d\u200b\u524d\u9762\u200b\u52a0\u200b<code>i</code>\u3002</p>"},{"location":"coding/python/mapping/","title":"Python\u200b\u4e2d\u200b\u7684\u200b\u6620\u5c04\u200b\u7c7b\u578b","text":"<p>Python\u200b\u4e2d\u200b\u6700\u200b\u5e38\u89c1\u200b\u7684\u200b\u6620\u5c04\u200b\u7c7b\u578b\u200b\u662f\u200b\u5b57\u5178\u200b\u3002\u200b\u672c\u6587\u200b\u5c06\u200b\u4ece\u200b\u5b57\u5178\u200b\u5165\u624b\u200b\u5bf9\u200bPython\u200b\u4e2d\u200b\u7684\u200b\u6620\u5c04\u200b\u7c7b\u578b\u200b\u8fdb\u884c\u200b\u63a2\u8ba8\u200b\u3002</p>"},{"location":"coding/python/mapping/#_1","title":"\u5b57\u5178","text":"<p>\u200b\u5b57\u5178\u200b\u7c7b\u578b\u200b<code>dict</code>\u200b\u5bf9\u5e94\u200b\u7684\u200b\u62bd\u8c61\u200b\u57fa\u7c7b\u200b\u4e3a\u200b<code>MutableMapping</code>\u3002\u200b\u800c\u200b<code>MutableMapping</code>\u200b\u662f\u200b<code>Mapping</code>\u200b\u7684\u200b\u5b50\u7c7b\u200b\u3002</p> <p><code>dict</code>\u200b\u4e2d\u200b\u7684\u200b\u6570\u636e\u7ec4\u7ec7\u200b\u4e3a\u952e\u200b-\u200b\u503c\u200b\u5bf9\u200b\u7684\u200b\u5f62\u5f0f\u200b\uff0c\u200b\u5b57\u5178\u200b\u5bf9\u503c\u200b\u7684\u200b\u7c7b\u578b\u200b\u6ca1\u6709\u200b\u8981\u6c42\u200b\uff0c\u200b\u4f46\u200b\u8981\u6c42\u200b\u952e\u200b\u7684\u200b\u7c7b\u578b\u200b\u5fc5\u987b\u200b\u53ef\u6563\u5217\u200b\uff08hashable\uff09\u3002\u200b\u7531\u6b64\u53ef\u89c1\u200b\uff0c\u200b\u5b57\u5178\u200b\u7ed3\u6784\u200b\u7684\u200b\u5e95\u5c42\u200b\u5b9e\u73b0\u200b\u7c7b\u4f3c\u200b\u6563\u200b\u5217\u8868\u200b\uff0c\u200b\u4ee5\u200b\u52a0\u5feb\u200b\u5b57\u5178\u200b\u5185\u200b\u5143\u7d20\u200b\u7684\u200b\u8bbf\u95ee\u901f\u5ea6\u200b\u3002\u200b\u5b57\u5178\u200b\u7684\u200b\u6267\u884c\u200b\u6548\u7387\u200b\u8fdc\u9ad8\u4e8e\u200b\u5217\u8868\u200b\u3002</p> <p>Python 3.6\u200b\u53ca\u200b\u4ee5\u540e\u200b\uff0c<code>dict</code>\u200b\u7c7b\u578b\u200b\u5728\u200b\u5b9e\u73b0\u200b\u4e0a\u200b\u662f\u200b\u6709\u5e8f\u200b\u7684\u200b\uff0c\u200b\u952e\u200b\u7684\u200b\u987a\u5e8f\u200b\u53d6\u51b3\u4e8e\u200b\u6dfb\u52a0\u200b\u987a\u5e8f\u200b\uff0c\u200b\u4f46\u200b\u6807\u51c6\u200b\u5e76\u200b\u6ca1\u6709\u200b\u89c4\u5b9a\u200b<code>dict</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u6709\u5e8f\u6027\u200b\u3002\u200b\u56e0\u6b64\u200b\u4e24\u4e2a\u200b\u952e\u200b\u987a\u5e8f\u200b\u4e0d\u540c\u200b\u7684\u200b\u5b57\u5178\u200b\u88ab\u200b\u89c6\u4e3a\u200b\u76f8\u540c\u200b\u3002</p> <pre><code>&gt;&gt;&gt; a = {1: 2, 2: 1}\n&gt;&gt;&gt; b = {2: 1, 1: 2}\n&gt;&gt;&gt; a == b\nTrue\n&gt;&gt;&gt;\n</code></pre> <p>New in version 3.9</p> <p>Python 3.9\u200b\u4e2d\u200b\uff0c\u200b\u5b57\u5178\u200b\u5bf9\u8c61\u200b\u652f\u6301\u200b<code>|</code>\u200b\u8fd0\u7b97\u7b26\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5c06\u200b\u4e24\u4e2a\u200b\u5b57\u5178\u200b\u5408\u5e76\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u3002\u200b\u5f53\u200b\u4e24\u4e2a\u200b\u5b57\u5178\u200b\u4e2d\u200b\u51fa\u73b0\u200b\u91cd\u590d\u200b\u503c\u65f6\u200b\u53f3\u4fa7\u200b\u5b57\u5178\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\u4f18\u5148\u200b\u3002</p> <pre><code>&gt;&gt;&gt; import sys \n&gt;&gt;&gt; ver = sys.version_info\n&gt;&gt;&gt; if ver.major == 3 and ver.minor &gt; 8:\n...     a = {1: 2}\n...     b = {3: 4}\n...     print(a | b == {1: 2, 3: 4})\n... else:\n...     print(True)\nTrue\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/mapping/#_2","title":"\u8fed\u4ee3","text":"<p><code>dict</code>\u200b\u5bf9\u8c61\u200b\u662f\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5f53\u5bf9\u200b<code>dict</code>\u200b\u5bf9\u8c61\u200b\u8fdb\u884c\u200b\u8fed\u4ee3\u200b\u65f6\u200b\uff0c\u200b\u5b9e\u9645\u4e0a\u200b\u662f\u200b\u8fed\u4ee3\u200b<code>dict</code>\u200b\u7684\u200b\u952e\u200b\u3002</p> <pre><code>&gt;&gt;&gt; for key in {1: 2, 3: 4}:\n...     print(key)\n...\n1\n3\n&gt;&gt;&gt;\n</code></pre> <ul> <li><code>dict.keys()</code>\u200b\u65b9\u6cd5\u200b\u8fd4\u56de\u200b\u7531\u200b\u5b57\u5178\u200b\u4e2d\u200b\u7684\u200b\u952e\u200b\u7ec4\u6210\u200b\u7684\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u5bf9\u8c61\u200b\uff1b</li> <li><code>dict.values()</code>\u200b\u65b9\u6cd5\u200b\u8fd4\u56de\u200b\u7531\u200b\u5b57\u5178\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\u7ec4\u6210\u200b\u7684\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u5bf9\u8c61\u200b\uff1b</li> <li><code>dict.items()</code>\u200b\u65b9\u6cd5\u200b\u8fd4\u56de\u200b\u7531\u952e\u200b-\u200b\u503c\u200b\u5143\u7ec4\u200b\u7ec4\u6210\u200b\u7684\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u5bf9\u8c61\u200b\u3002</li> </ul> <p>\u200b\u6ce8\u610f\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u8c03\u7528\u200b<code>values</code>\u200b\u65b9\u6cd5\u200b\u65f6\u200b\uff0c\u200b\u90fd\u200b\u4f1a\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u8fed\u4ee3\u200b\u5668\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u5373\u4f7f\u200b\u662f\u200b\u5bf9\u200b\u540c\u4e00\u4e2a\u200b\u5b57\u5178\u200b\u8c03\u7528\u200b\u591a\u6b21\u200b<code>values</code>\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5176\u200b\u8fd4\u56de\u503c\u200b\u4e5f\u200b\u4e0d\u60f3\u200b\u7b49\u200b\u3002</p> <p>Changed in version 3.8</p> <p>\u200b\u5185\u7f6e\u200b\u51fd\u6570\u200b<code>reversed</code>\u200b\u652f\u6301\u200b\u4f20\u9012\u200b\u5b57\u5178\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\uff0c\u200b\u8fd4\u56de\u200b\u5b57\u5178\u200b\u4e2d\u200b\u7684\u200b\u952e\u200b\u9006\u5e8f\u200b\u7ec4\u6210\u200b\u7684\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u5bf9\u8c61\u200b\u3002</p> <p>\u200b\u6620\u5c04\u200b\u7c7b\u578b\u200b\u901a\u5e38\u200b\u662f\u200b\u53ef\u200b\u4fee\u6539\u200b\u7684\u200b\uff0c\u200b\u4f7f\u7528\u200b<code>types.MappingProxyType</code>\u200b\u4f1a\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u539f\u200b\u6620\u5c04\u200b\u7684\u200b\u89c6\u56fe\u200b\u3002\u200b\u5bf9\u539f\u200b\u6620\u5c04\u200b\u7684\u200b\u4efb\u4f55\u200b\u4fee\u6539\u200b\u90fd\u200b\u4f1a\u200b\u53cd\u6620\u200b\u5728\u200b\u89c6\u56fe\u200b\u4e2d\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u80fd\u200b\u5bf9\u200b\u89c6\u56fe\u200b\u8fdb\u884c\u200b\u4efb\u4f55\u200b\u76f4\u63a5\u200b\u7684\u200b\u4fee\u6539\u200b\u3002\u200b\u6b64\u200b\u65b9\u6cd5\u200b\u95f4\u63a5\u200b\u5730\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u4e0d\u53ef\u200b\u4fee\u6539\u200b\u7684\u200b\u6620\u5c04\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>&gt;&gt;&gt; from types import MappingProxyType\n&gt;&gt;&gt; a = {1: 2, 3: 4}\n&gt;&gt;&gt; b = MappingProxyType(a)\n&gt;&gt;&gt; b\nmappingproxy({1: 2, 3: 4})\n&gt;&gt;&gt; a.update({1: 5})\n&gt;&gt;&gt; b\nmappingproxy({1: 5, 3: 4})\n&gt;&gt;&gt; b[1] = 2\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: 'mappingproxy' object does not support item assignment\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/mapping/#_3","title":"\u53ef\u6563\u5217\u200b\u7c7b\u578b","text":"<p>\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6761\u4ef6\u200b\u7684\u200b\u5bf9\u8c61\u200b\u79f0\u4e3a\u200b\u53ef\u6563\u5217\u200b\u5bf9\u8c61\u200b\uff1a</p> <ol> <li>\u200b\u5982\u679c\u200b\u8be5\u200b\u5bf9\u8c61\u200b\u53ef\u6563\u5217\u200b\uff0c\u200b\u5219\u200b\u5728\u200b\u5176\u200b\u751f\u547d\u5468\u671f\u200b\u4e2d\u200b\uff0c\u200b\u8be5\u6563\u200b\u5217\u503c\u200b\u4e0d\u53d8\u200b</li> <li>\u200b\u5bf9\u8c61\u200b\u5b9e\u73b0\u200b\u4e86\u200b<code>__hash__()</code>\u200b\u4e0e\u200b<code>__eq__()</code>\u200b\u65b9\u6cd5\u200b\uff08\u200b\u6ca1\u6709\u200b\u5b9e\u73b0\u200b<code>__eq__()</code>\u200b\u65b9\u6cd5\u200b\u7684\u200b\u5bf9\u8c61\u200b\u4e0d\u200b\u5e94\u200b\u5b9e\u73b0\u200b<code>__hash__()</code>\u200b\u65b9\u6cd5\u200b\uff09</li> <li>\u200b\u5982\u679c\u200b\u5b83\u200b\u548c\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5bf9\u8c61\u200b\u76f8\u7b49\u200b\uff0c\u200b\u5219\u200b\u4e24\u8005\u200b\u6709\u200b\u76f8\u540c\u200b\u7684\u200b\u6563\u5217\u503c\u200b</li> </ol> <p>\u200b\u5982\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; a = \"abc\"\n&gt;&gt;&gt; b = \"\".join([\"a\", \"b\", \"c\"])\n&gt;&gt;&gt; a is b\nFalse\n&gt;&gt;&gt; hash(a) == hash(b)\nTrue\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u6ce8\u200b\uff1a\u200b\u82e5\u200b\u4e00\u4e2a\u200b\u81ea\u5b9a\u4e49\u200b\u7c7b\u578b\u5b9a\u4e49\u200b\u4e86\u200b<code>__eq__</code>\uff0c\u200b\u4e14\u200b\u6ca1\u6709\u200b\u5b9a\u4e49\u200b<code>__hash__</code>\uff0c<code>__hash__</code>\u200b\u4f1a\u200b\u88ab\u200b\u8bbe\u4e3a\u200b<code>None</code>\u3002\u200b\u53ef\u6563\u5217\u200b\u7684\u200b\u81ea\u5b9a\u4e49\u200b\u5bf9\u8c61\u200b\u5fc5\u987b\u200b\u6709\u200b<code>__hash__</code>\u200b\u65b9\u6cd5\u200b\u3002</p> <p>\u200b\u4ee5\u4e0b\u5185\u5bb9\u200b\u6765\u81ea\u200b\u4e8e\u200bPython\u200b\u6587\u6863\u200b </p> <p>\u200b\u6839\u636e\u200b\u5982\u200b\u4e0a\u200b\u89c4\u5219\u200b\u53ef\u4ee5\u200b\u5224\u65ad\u200b\u4e00\u4e9b\u200b\u5185\u7f6e\u200b\u6570\u636e\u7ed3\u6784\u200b\u662f\u5426\u200b\u4e3a\u200b\u53ef\u200b\u6563\u5217\u200b\u5bf9\u8c61\u200b</p> <ul> <li>\u200b\u53ef\u53d8\u200b\u5e8f\u5217\u200b\u5728\u200b\u751f\u547d\u5468\u671f\u200b\u4e2d\u200b\u5e8f\u5217\u200b\u7684\u200b\u5185\u5bb9\u200b\u53ef\u80fd\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u56e0\u6b64\u200b\u53ef\u53d8\u200b\u5e8f\u5217\u200b\uff08\u200b\u5982\u200b<code>list</code>\u3001<code>set</code>\u200b\u7b49\u200b\uff09\u200b\u4e0d\u662f\u200b\u53ef\u6563\u5217\u200b\u5bf9\u8c61\u200b\u3002</li> <li>\u200b\u539f\u5b50\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u6570\u636e\u7c7b\u578b\u200b\u6ee1\u8db3\u200b\u5982\u200b\u4e0a\u200b\u6240\u6709\u200b\u6761\u4ef6\u200b\uff0c\u200b\u662f\u200b\u53ef\u200b\u6563\u5217\u200b\u5bf9\u8c61\u200b</li> <li>\u200b\u5bb9\u5668\u200b<code>frozenset</code>\u200b\u8981\u6c42\u200b\u5176\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u5747\u200b\u4e3a\u200b\u53ef\u200b\u6563\u5217\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5176\u4e2d\u200b\u5185\u5bb9\u200b\u5728\u200b\u6574\u4e2a\u200b\u751f\u547d\u5468\u671f\u200b\u4e2d\u200b\u4e0d\u4f1a\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u56e0\u6b64\u200b\u662f\u200b\u53ef\u200b\u6563\u5217\u200b\u5bf9\u8c61\u200b</li> <li>\u200b\u5bb9\u5668\u200b<code>tuple</code>\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u5bb9\u7eb3\u200b\u4e0d\u53ef\u200b\u6563\u5217\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u56e0\u6b64\u200b<code>tuple</code>\u200b\u4e0d\u662f\u200b\u53ef\u6563\u5217\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u200b\u542b\u200b\u53ef\u200b\u6563\u5217\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5143\u7ec4\u200b\u662f\u200b\u53ef\u200b\u6563\u5217\u200b\u5bf9\u8c61\u200b\u3002</li> </ul> <pre><code>&gt;&gt;&gt; t1 = hash((1, 2))\n&gt;&gt;&gt; t2 = hash((1, [2]))\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: unhashable type: 'list'\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u4f7f\u7528\u200b<code>hash</code>\u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u53d6\u5f97\u200b\u53ef\u6563\u5217\u200b\u5bf9\u8c61\u200b\u7684\u200b\u6563\u5217\u503c\u200b\u3002\u200b\u4e3a\u4e86\u200b\u907f\u514d\u200bDOS\u200b\u653b\u51fb\u200b\uff0c\u200b\u5728\u200b\u8ba1\u7b97\u200b\u6563\u5217\u503c\u200b\u65f6\u4f1a\u200b\u52a0\u4e0a\u200b\u4e00\u4e2a\u200b\u968f\u673a\u200b\u7684\u200b\u566a\u58f0\u200b\u3002\u200b\u566a\u58f0\u200b\u7684\u200b\u503c\u200b\u4ec5\u200b\u5728\u200b\u540c\u4e00\u200bPython\u200b\u5b9e\u4f8b\u200b\u4e2d\u200b\u76f8\u540c\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\uff0c\u200b\u82e5\u200b\u5b83\u200b\u7684\u200b\u503c\u200b\u5c0f\u4e8e\u200b\u6563\u5217\u503c\u200b\u6240\u200b\u5141\u8bb8\u200b\u7684\u200b\u6700\u5927\u503c\u200b\uff08\u200b\u5373\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u653e\u8fdb\u200b\u6563\u5217\u503c\u200b\u6240\u200b\u9650\u5b9a\u200b\u7684\u200b\u7a7a\u95f4\u200b\u5185\u200b\uff09\uff0c\u200b\u5219\u200b\u6563\u5217\u200b\u7684\u200b\u503c\u200b\u5c31\u662f\u200b\u8be5\u200b\u6574\u6570\u200b\u7684\u200b\u503c\u200b\u3002</p> <p>\u200b\u6563\u200b\u5217\u8868\u200b\u7684\u200b\u4f7f\u7528\u200b\u662f\u200b\u201c\u200b\u7a7a\u95f4\u200b\u6362\u200b\u65f6\u95f4\u200b\u201d\u200b\u7b56\u7565\u200b\u7684\u200b\u5178\u578b\u200b\u4f53\u73b0\u200b\u3002\u200b\u4e3a\u4e86\u200b\u5c3d\u53ef\u80fd\u51cf\u5c11\u200b\u51b2\u7a81\u200b\uff0c\u200b\u6563\u200b\u5217\u8868\u200b\u5fc5\u987b\u200b\u6709\u200b\u8f83\u200b\u4f4e\u200b\u7684\u200b\u88c5\u586b\u200b\u56e0\u5b50\u200b\uff0c\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u6563\u200b\u5217\u8868\u200b\u4f1a\u200b\u5360\u7528\u200b\u66f4\u200b\u591a\u200b\u7684\u200b\u5185\u5b58\u7a7a\u95f4\u200b\u3002</p>"},{"location":"coding/python/mapping/#_4","title":"\u6784\u9020","text":"<p>\u200b\u5b57\u5178\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u591a\u79cd\u200b\u6784\u9020\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u5982\u4e0b\u200b\u6784\u9020\u200b\u5b57\u5178\u200b<code>{'a': 1, 'b': 2}</code></p> <ol> <li>\u200b\u82b1\u200b\u62ec\u53f7\u200b\u6784\u9020\u200b\uff0c\u200b\u5982\u200b<code>{'a': 1, 'b': 2}</code></li> <li>\u200b\u901a\u8fc7\u200b\u7c7b\u200b\u6784\u9020\u51fd\u6570\u200b\uff0c\u200b\u5982\u200b<code>dict(a=1, b=2)</code></li> <li>\u200b\u901a\u8fc7\u200b\u5143\u7ec4\u200b/\u200b\u5217\u8868\u200b\uff08\u200b\u53ea\u200b\u9700\u200b\u662f\u200b\u957f\u5ea6\u200b\u4e3a\u200b2\u200b\u7684\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u5bf9\u8c61\u200b\uff09\u200b\u6784\u9020\u200b\uff0c\u200b\u5982\u200b<code>dict([('a', 1), ['b', 2]])</code></li> <li>\u200b\u901a\u8fc7\u200b<code>zip</code>\u200b\u6253\u5305\u200b\u6784\u9020\u200b\uff0c\u200b\u5982\u200b<code>dict(zip(['a', 'b'], [1, 2]))</code></li> <li>\u200b\u901a\u8fc7\u200b\u5b57\u5178\u200b\u63a8\u5bfc\u200b\u6784\u9020\u200b\uff0c\u200b\u5982\u200b<code>{chr(97 + _): _ + 1 for _ in range(2)}</code></li> </ol>"},{"location":"coding/python/mapping/#_5","title":"\u53d8\u79cd","text":"<p><code>collections</code>\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5b57\u5178\u200b\u7684\u200b\u4e24\u4e2a\u200b\u53d8\u79cd\u200b\uff0c\u200b\u5373\u200b<code>defaultdict</code>\u200b\u4e0e\u200b<code>OrderDict</code></p>"},{"location":"coding/python/mapping/#defaultdict","title":"defaultdict","text":"<p>\u200b\u5f53\u200b\u5728\u200b\u4e00\u4e2a\u200b\u5b57\u5178\u200b<code>d</code>\u200b\u4e2d\u200b\u627e\u200b\u4e0d\u5230\u200b\u952e\u200b<code>k</code>\u200b\u65f6\u200b\uff0cPython\u200b\u4f1a\u200b\u4ea7\u751f\u200b<code>KeyError</code>\u200b\u5f02\u5e38\u200b\u3002\u200b\u4f7f\u7528\u200b<code>d.get(k, default)</code>\u200b\u53ef\u4ee5\u200b\u4e3a\u200b\u627e\u200b\u4e0d\u5230\u200b\u7684\u200b\u952e\u200b\u8bbe\u7f6e\u200b\u9ed8\u8ba4\u200b\u8fd4\u56de\u503c\u200b\u3002\u200b\u4f46\u200b<code>dict.get</code>\u200b\u51fd\u6570\u200b\u4e0d\u4f1a\u200b\u5bf9\u200b\u5b57\u5178\u200b\u8fdb\u884c\u200b\u66f4\u65b0\u200b\uff0c\u200b\u63d2\u5165\u200b\u627e\u200b\u4e0d\u5230\u200b\u7684\u200b\u952e\u200b\u3002</p> <p><code>dict.setdefault</code>\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u53e6\u200b\u4e00\u79cd\u200b\u4ece\u200b\u5b57\u5178\u200b\u4e2d\u200b\u83b7\u53d6\u200b\u503c\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002<code>setdefault</code>\u200b\u63a5\u6536\u200b\u4e24\u4e2a\u200b\u53c2\u6570\u200b\uff0c\u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u4e3a\u200b<code>key</code>\uff0c\u200b\u7b2c\u4e8c\u4e2a\u200b\u53c2\u6570\u200b\u4e3a\u200b\u53ef\u9009\u200b\u7684\u200b\u9ed8\u8ba4\u503c\u200b<code>default</code>\u3002\u200b\u5f53\u200b\u5b57\u5178\u200b\u4e2d\u200b\u627e\u5230\u200b<code>key</code>\u200b\u6240\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5143\u7d20\u200b\u65f6\u200b\uff0c<code>setdefault</code>\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b\u8be5\u503c\u200b\uff0c\u200b\u5426\u5219\u200b<code>setdefault</code>\u200b\u4f1a\u200b\u5728\u200b\u5b57\u5178\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u952e\u503c\u200b\u5bf9\u200b<code>key: default</code>\uff0c\u200b\u7136\u540e\u200b\u8fd4\u56de\u200b<code>default</code>\u3002</p> <pre><code>&gt;&gt;&gt; a = {}\n&gt;&gt;&gt; a.setdefault(0, True)\nTrue\n&gt;&gt;&gt; a[0] = False\n&gt;&gt;&gt; a.setdefault(0, False) \nFalse\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u4f7f\u7528\u200b<code>setdefault</code>\u200b\u4ece\u200b\u5b57\u5178\u200b\u4e2d\u200b\u83b7\u53d6\u200b\u503c\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u51cf\u5c11\u200b\u5b57\u5178\u200b\u7684\u200b\u67e5\u8be2\u200b\u6b21\u6570\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u5b57\u5178\u200b\u6267\u884c\u200b\u7684\u200b\u6548\u7387\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; a = {}\n&gt;&gt;&gt; try:\n...     a[0].append(True)\n... except KeyError:\n...     a[0] = []\n...     a[0].append(True)\n...        \n&gt;&gt;&gt; a\n{0: [True]}\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u5982\u200b\u4e0a\u200b\u4f7f\u7528\u200b<code>try-except</code>\u200b\u7ed3\u6784\u200b\u5904\u7406\u200b\u5b57\u5178\u200b\u4e2d\u200b\u627e\u200b\u4e0d\u5230\u200b\u503c\u200b\u7684\u200b\u7ed3\u679c\u200b\uff0c\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b<code>setdefault</code>\u200b\u51fd\u6570\u200b\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u6709\u6548\u200b\u51cf\u5c11\u200b\u4ee3\u7801\u200b\u957f\u5ea6\u200b\uff0c\u200b\u589e\u52a0\u200b\u4ee3\u7801\u200b\u53ef\u8bfb\u6027\u200b\u3002</p> <pre><code>&gt;&gt;&gt; a = {}\n&gt;&gt;&gt; a.setdefault(0, []).append(True)\n&gt;&gt;&gt; a\n{0: [True]}\n&gt;&gt;&gt;\n</code></pre> <p><code>defaultdict</code>\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u5904\u7406\u200b\u5b57\u5178\u200b\u4e2d\u200b\u7f3a\u5931\u200b\u7684\u200b\u952e\u200b\u3002\u200b\u51c6\u786e\u200b\u5730\u8bf4\u200b\uff0c<code>defaultdict</code>\u200b\u5728\u200b\u521b\u5efa\u200b\u65f6\u200b\u9700\u8981\u200b\u63d0\u4f9b\u200b\u4e00\u4e2a\u200b\u53ef\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\uff0c\u200b\u5b57\u5178\u200b\u4e2d\u200b\u627e\u200b\u4e0d\u5230\u200b\u952e\u65f6\u200b\uff0c<code>defaultdict</code>\u200b\u4f1a\u200b\u901a\u8fc7\u200b\u8c03\u7528\u200b\u8fd9\u4e2a\u200b\u53ef\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\u6765\u200b\u5f97\u5230\u200b\u8be5\u952e\u200b\u5bf9\u5e94\u200b\u7684\u200b\u9ed8\u8ba4\u503c\u200b\u3002</p> <pre><code>&gt;&gt;&gt; from collections import defaultdict\n&gt;&gt;&gt; a = defaultdict(list)\n&gt;&gt;&gt; a\ndefaultdict(&lt;class 'list'&gt;, {})\n&gt;&gt;&gt; a[False] = {}\n&gt;&gt;&gt; a[False]\n{}\n&gt;&gt;&gt; a[True]\n[]\n&gt;&gt;&gt; a\ndefaultdict(&lt;class 'list'&gt;, {False: {}, True: []})\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u5982\u679c\u200b\u521b\u5efa\u200b<code>defaultdict</code>\u200b\u65f6\u200b\u6ca1\u6709\u200b\u6307\u5b9a\u200b\u53c2\u6570\u200b\uff0c\u200b\u8bbf\u95ee\u200b\u4e0d\u200b\u5b58\u5728\u200b\u7684\u200b\u952e\u200b\u65f6\u200b\u4ecd\u4f1a\u200b\u629b\u51fa\u200b<code>KeyError</code>\u3002</p> <p>\u200b\u4e8b\u5b9e\u4e0a\u200b\uff0c<code>__getitem__</code>\u200b\u901a\u8fc7\u200b\u7279\u6b8a\u200b\u65b9\u6cd5\u200b<code>__missing__</code>\u200b\u5904\u7406\u200b\u5b57\u5178\u200b\u4e2d\u200b\u7f3a\u5931\u200b\u7684\u200b\u952e\u200b\u3002\u200b\u624b\u52a8\u200b\u8c03\u7528\u200b<code>__missing__</code>\u200b\u65b9\u6cd5\u200b\u80fd\u200b\u5b9e\u73b0\u200b\u76f8\u540c\u200b\u7684\u200b\u6548\u679c\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; from collections import defaultdict \n&gt;&gt;&gt; a = defaultdict(list)\n&gt;&gt;&gt; a \ndefaultdict(&lt;class 'list'&gt;, {})\n&gt;&gt;&gt; a.__missing__(0)  \n[]\n&gt;&gt;&gt; a\ndefaultdict(&lt;class 'list'&gt;, {0: []})\n&gt;&gt;&gt;\n</code></pre> <p><code>__missing__</code>\u200b\u65b9\u6cd5\u200b\u7684\u200b\u53c2\u6570\u200b\u4e3a\u200b<code>self, key</code>\uff0c\u200b\u5176\u4e2d\u200b<code>key</code>\u200b\u4e3a\u200b\u7f3a\u5931\u200b\u7684\u200b\u952e\u200b\u3002\u200b\u5373\u4f7f\u200b<code>__missing__</code>\u200b\u6b63\u5e38\u200b\u6267\u884c\u200b\uff0c\u200b\u8fd4\u56de\u503c\u200b\u4e5f\u200b\u4e0d\u4f1a\u200b\u88ab\u200b\u6dfb\u52a0\u200b\u5230\u200b\u5b57\u5178\u200b\u4e2d\u200b\u3002</p> <pre><code>&gt;&gt;&gt; class NumDict(dict):\n...     def __init__(self, *args, **kwargs):\n...             super().__init__(*args, **kwargs)\n...     def __missing__(self, key):\n...             if isinstance(key, int):\n...                     return 0\n...             else:\n...                     raise KeyError(key)\n...\n&gt;&gt;&gt; a = NumDict([(1, 2), (\"a\", \"b\")])\n&gt;&gt;&gt; a\n{1: 2, 'a': 'b'}\n&gt;&gt;&gt; a[0]\n0\n&gt;&gt;&gt; a['b']\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"&lt;stdin&gt;\", line 8, in __missing__\nKeyError: 'b'\n&gt;&gt;&gt; a\n{1: 2, 'a': 'b'}\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/mapping/#ordereddict","title":"OrderedDict","text":"<p><code>OrderedDict</code>\u200b\u662f\u200b\u4e25\u683c\u200b\uff08\u200b\u5728\u200b\u4efb\u4f55\u200b\u7248\u672c\u200b\u4e2d\u200b\uff09\u200b\u4fdd\u6301\u200b\u987a\u5e8f\u200b\u7684\u200b\u5b57\u5178\u200b\u3002\u200b\u5728\u200b\u8fed\u4ee3\u200b\u8fc7\u7a0b\u200b\u4e2d\u952e\u200b\u7684\u200b\u987a\u5e8f\u200b\u4fdd\u6301\u4e00\u81f4\u200b\u3002</p> <p><code>OrderedDict</code>\u200b\u65b0\u589e\u200b\u4e86\u200b<code>popitem</code>\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u79fb\u9664\u200b\u5e76\u200b\u8fd4\u56de\u200b\u5b57\u5178\u200b\u4e2d\u200b\u6700\u540e\u200b\u6dfb\u52a0\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u3002\u200b\u5982\u679c\u200b\u624b\u52a8\u200b\u6307\u5b9a\u200b<code>last</code>\u200b\u53c2\u6570\u200b\u4e3a\u200b<code>False</code>\uff0c\u200b\u5219\u200b\u79fb\u9664\u200b\u5e76\u200b\u8fd4\u56de\u200b\u5b57\u5178\u200b\u4e2d\u200b\u7b2c\u4e00\u4e2a\u200b\u6dfb\u52a0\u200b\u7684\u200b\u5143\u7d20\u200b\u3002\u200b\u540c\u65f6\u200b\uff0c<code>move_to_end</code>\u200b\u662f\u200b\u4e0e\u200b\u4e4b\u200b\u914d\u5408\u200b\u7684\u200b\u79fb\u52a8\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5b57\u5178\u200b\u4e2d\u200b\u7684\u200b\u952e\u503c\u200b\u5bf9\u200b\uff08\u200b\u7531\u200b<code>key</code>\u200b\u53c2\u6570\u200b\u6307\u5b9a\u200b\uff09\u200b\u79fb\u52a8\u200b\u5230\u200b\u5b57\u5178\u200b\u4e00\u7aef\u200b\uff08\u200b\u7531\u200b<code>last</code>\u200b\u53c2\u6570\u200b\u6307\u5b9a\u200b\uff09\u3002</p>"},{"location":"coding/python/mapping/#chainmap","title":"ChainMap","text":"<p><code>ChainMap</code>\u200b\u53ef\u4ee5\u200b\u89c6\u4e3a\u200b\u4e00\u79cd\u200b\u5bb9\u7eb3\u200b\u6620\u5c04\u200b\u7684\u200b\u5e8f\u5217\u200b\u3002\u200b\u76f8\u6bd4\u200b\u4e8e\u200b\u4f7f\u7528\u200b<code>dict.update()</code>\u200b\u6216\u200b<code>|</code>\u200b\u8fd0\u7b97\u7b26\u200b\u9010\u4e2a\u200b\u5408\u5e76\u200b\u6620\u5c04\u200b\uff0c<code>ChainMap</code>\u200b\u6709\u200b\u66f4\u200b\u9ad8\u200b\u7684\u200b\u6548\u7387\u200b\u3002</p> <p><code>ChainMap</code>\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u89c6\u4e3a\u200b\u6620\u5c04\u200b\uff0c\u200b\u5f53\u200b\u5728\u200b<code>ChainMap</code>\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u67e5\u8be2\u200b\u65f6\u200b\uff0c<code>ChainMap</code>\u200b\u4f1a\u200b\u9010\u4e2a\u200b\u67e5\u8be2\u200b\u5176\u4e2d\u200b\u7684\u200b\u6620\u5c04\u200b\u3002\u200b\u5f53\u200b\u540c\u4e00\u4e2a\u200b\u952e\u200b\u51fa\u73b0\u200b\u5728\u200b\u4e0d\u540c\u200b\u7684\u200b\u6620\u5c04\u200b\u4e2d\u200b\u65f6\u200b\uff0c<code>ChainMap</code>\u200b\u8fd4\u56de\u200b\u67e5\u8be2\u200b\u5230\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u7ed3\u679c\u200b\u3002</p> <pre><code>&gt;&gt;&gt; from collections import ChainMap\n&gt;&gt;&gt; a = ChainMap({'a': 1, 'b': 2}, {'a': 3, 'b': 4})\n&gt;&gt;&gt; a['b']\n2\n&gt;&gt;&gt; a['a']\n1\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u5b58\u50a8\u200b\u7684\u200b\u6620\u5c04\u200b\u5728\u200b<code>ChainMap.maps</code>\u200b\u5c5e\u6027\u200b\u4e2d\u200b\uff0c\u200b\u5bf9\u200b\u8be5\u200b\u5c5e\u6027\u200b\u7684\u200b\u4fee\u6539\u200b\u4f1a\u200b\u540c\u65f6\u200b\u53cd\u6620\u200b\u5728\u200b<code>ChainMap</code>\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u3002<code>parents</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u901a\u8fc7\u200b\u5c5e\u6027\u200b\u65b9\u5f0f\u200b\u8bbf\u95ee\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u8fd4\u56de\u200b\u53bb\u9664\u200b\u539f\u200b<code>ChainMap</code>\u200b\u4e2d\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u6620\u5c04\u200b\u540e\u200b\u7684\u200b\u65b0\u200b<code>ChainMap</code>\uff0c\u200b\u539f\u200b<code>ChainMap</code>\u200b\u4fdd\u6301\u200b\u4e0d\u53d8\u200b\u3002</p> <p><code>new_child</code>\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5411\u200b<code>ChainMap</code>\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u6620\u5c04\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002\u200b\u65b0\u200b\u7684\u200b\u6620\u5c04\u200b\u88ab\u200b\u6dfb\u52a0\u200b\u5230\u200b<code>ChainMap</code>\u200b\u7684\u200b\u5f00\u5934\u200b\uff0c\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u63d0\u4f9b\u200b\u6620\u5c04\u200b\uff0c\u200b\u5219\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u7a7a\u200b\u5b57\u5178\u200b\u3002</p> <p><code>ChainMap</code>\u200b\u5e76\u200b\u6ca1\u6709\u200b\u5408\u5e76\u200b\u539f\u6709\u200b\u7684\u200b\u6620\u5c04\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8fed\u4ee3\u200b<code>ChainMap</code>\u200b\u5bf9\u8c61\u200b\u6216\u200b\u5bf9\u200b<code>ChainMap</code>\u200b\u5bf9\u8c61\u200b\u8c03\u7528\u200b<code>dict()</code>\u200b\u65f6\u200b\u53ea\u4f1a\u200b\u5e94\u7528\u200b\u5230\u200b\u5176\u4e2d\u200b\u5305\u542b\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u6620\u5c04\u200b\u3002</p> <pre><code>&gt;&gt;&gt; dict(a)\n{'a': 1, 'b': 2}\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/mapping/#counter","title":"Counter","text":"<p><code>Counter</code>\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5bf9\u200b\u4e00\u7cfb\u5217\u200b\u503c\u200b\u7684\u200b\u7edf\u8ba1\u200b\u65b9\u6cd5\u200b\u3002\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u5bf9\u8c61\u200b\u521d\u59cb\u5316\u200b<code>Counter</code>\u200b\u7c7b\u578b\u200b\uff0c<code>Counter</code>\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u7edf\u8ba1\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u6bcf\u4e2a\u200b\u503c\u200b\u7684\u200b\u51fa\u73b0\u200b\u987a\u5e8f\u200b\u3002</p> <p><code>Counter</code>\u200b\u4e0d\u4f1a\u200b\u5bf9\u200b\u8f93\u5165\u200b\u7684\u200b\u503c\u200b\u8fdb\u884c\u200b\u68c0\u67e5\u200b\uff0c\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b\u5b57\u5178\u200b\u521d\u59cb\u5316\u200b\u5e76\u200b\u63d0\u4f9b\u200b\u975e\u200b\u6574\u6570\u200b\u7c7b\u578b\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u5728\u200b\u8c03\u7528\u200b<code>Counter.most_common()</code>\u200b\u65b9\u6cd5\u200b\u6216\u200b\u8fed\u4ee3\u200b<code>Counter.elements()</code>\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u65f6\u4f1a\u200b\u629b\u51fa\u200b<code>TypeError</code>\u200b\u5f02\u5e38\u200b\u3002 <pre><code>&gt;&gt;&gt; from collections import Counter\n&gt;&gt;&gt; a = Counter({'0': '0'})\n&gt;&gt;&gt; for i in a.elements():\n...     pass\n...\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: 'str' object cannot be interpreted as an integer\n</code></pre></p> <p>\u200b\u8fd9\u200b\u4e00\u70b9\u200b\u5728\u200bPython\u200b\u6587\u6863\u200b\u4e2d\u6709\u200b\u76f8\u5e94\u200b\u8bf4\u660e\u200b\uff1a</p> <p></p> <pre><code>&gt;&gt;&gt; from collections import Counter \n&gt;&gt;&gt; a = Counter([1, 1, 1, 2, 2, 3])          \n&gt;&gt;&gt; a\nCounter({1: 3, 2: 2, 3: 1})\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u66f4\u65b0\u200b<code>Counter</code>\u200b\u5bf9\u8c61\u200b\u65f6\u200b\uff0c\u200b\u8ba1\u6570\u5668\u200b\u4f1a\u200b\u76f8\u5e94\u200b\u5730\u200b\u66f4\u65b0\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; a.update([3, 3, 3, 2, 2, 1])\n&gt;&gt;&gt; a\nCounter({1: 4, 2: 4, 3: 4})\n&gt;&gt;&gt;\n</code></pre> <p><code>Counter.elements()</code>\u200b\u65b9\u6cd5\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u8fed\u4ee3\u200b\u5668\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u6309\u7167\u200b\u5176\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u91cd\u590d\u200b\u3002<code>Counter.most_common</code>\u200b\u65b9\u6cd5\u200b\u8fd4\u56de\u200b\u8ba1\u6570\u5668\u200b\u4e2d\u200b\u51fa\u73b0\u200b\u6b21\u6570\u200b\u6700\u591a\u200b\u7684\u200b\u5143\u7d20\u200b\u3002</p> <p><code>Counter</code>\u200b\u7c7b\u578b\u200b\u63d0\u4f9b\u200b\u4e86\u200b<code>+</code>\u3001<code>-</code>\u3001<code>&amp;</code>\u200b\u548c\u200b<code>|</code>\u200b\u8fd0\u7b97\u7b26\u200b\uff0c\u200b\u5206\u522b\u200b\u5bf9\u5e94\u200b\u8ba1\u6570\u5668\u200b\u7684\u200b\u76f8\u52a0\u200b\u3001\u200b\u76f8\u51cf\u200b\u3001\u200b\u4ea4\u200b\u548c\u200b\u5e76\u200b\u64cd\u4f5c\u200b\u3002\u200b\u5f53\u200b<code>+</code>\u3001<code>-</code>\u200b\u88ab\u200b\u7528\u4f5c\u200b\u4e00\u5143\u200b\u8fd0\u7b97\u7b26\u200b\u65f6\u200b\uff0c\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u64cd\u4f5c\u6570\u200b\u9ed8\u8ba4\u200b\u4e3a\u7a7a\u200b\u8ba1\u6570\u5668\u200b\u3002</p>"},{"location":"coding/python/mapping/#_6","title":"\u6269\u5c55","text":"<p><code>collections.UserDict</code>\u200b\u7c7b\u200b\u662f\u200b\u5bf9\u200b<code>dict</code>\u200b\u7684\u200bPython\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u81ea\u5b9a\u4e49\u200b\u6620\u5c04\u200b\u7c7b\u578b\u200b\u7684\u200b\u5b9e\u73b0\u200b\u3002</p> <p><code>UserDict</code>\u200b\u4e0d\u662f\u200b<code>dict</code>\u200b\u7684\u200b\u5b50\u7c7b\u200b\uff0c\u200b\u4f46\u200b<code>UserDict</code>\u200b\u4e2d\u6709\u200b\u4e00\u4e2a\u200b<code>dict</code>\u200b\u7c7b\u578b\u200b\u7684\u200b<code>data</code>\u200b\u5c5e\u6027\u200b\uff0c\u200b\u662f\u200b<code>UserDict</code>\u200b\u5b58\u50a8\u200b\u6570\u636e\u200b\u7684\u200b\u6700\u7ec8\u200b\u4f4d\u7f6e\u200b\u3002\u200b\u76f8\u6bd4\u200b\u4e8e\u200b\u76f4\u63a5\u200b\u5bf9\u200b<code>dict</code>\u200b\u7c7b\u578b\u200b\u8fdb\u884c\u200b\u6269\u5c55\u200b\uff0c<code>data</code>\u200b\u5c5e\u6027\u200b\u4fdd\u8bc1\u200b\u4e86\u200b<code>__getitem__</code>\u200b\u65b9\u6cd5\u200b\u4e0d\u4f1a\u200b\u4ea7\u751f\u200b\u5faa\u73af\u200b\u9012\u5f52\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002</p> <p><code>UserDict</code>\u200b\u7c7b\u200b\u7ee7\u627f\u200b\u81ea\u200b<code>_collections_abc.MutableMapping</code>\u200b\u4e0e\u200b<code>_collections_abc.Mapping</code>\u200b\u7c7b\u200b\u3002<code>MutableMapping</code>\u200b\u63d0\u4f9b\u200b\u4e86\u200b<code>update()</code>\u200b\u65b9\u6cd5\u200b\u3002\u200b\u65b9\u6cd5\u200b\u7684\u200b\u5185\u90e8\u200b\u5b9e\u73b0\u200b\u8868\u660e\u200b\uff0c<code>update()</code>\u200b\u5728\u200b\u5185\u90e8\u200b\u901a\u8fc7\u200b<code>__setitem__</code>\u200b\u5b9e\u73b0\u200b\u3002<code>Mapping</code>\u200b\u63d0\u4f9b\u200b\u4e86\u200b<code>get()</code>\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u8be5\u200b\u65b9\u6cd5\u200b\u5728\u200b\u5185\u90e8\u200b\u901a\u8fc7\u200b<code>__getitem__</code>\u200b\u5b9e\u73b0\u200b\u3002</p> <pre><code>&gt;&gt;&gt; from collections import UserDict\n&gt;&gt;&gt; class myDict(UserDict):\n...     def __init__(self, *args, **kwargs):\n...             super().__init__(*args, **kwargs)  \n...     def __setitem__(self, index, value):\n...             print(\"Modification: \", index, \":\", value)\n...             super().__setitem__(index, value)\n... \n&gt;&gt;&gt; a = myDict()\n&gt;&gt;&gt; a.update(a=5, b=4)\nModification:  a : 5\nModification:  b : 4\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/mapping/#_7","title":"\u96c6\u5408","text":"<p>\u200b\u96c6\u5408\u200b<code>set</code>\u200b\u662f\u200b\u4e00\u79cd\u200b\u5e8f\u5217\u200b\u7c7b\u578b\u200b\uff0c\u200b\u96c6\u5408\u200b\u4e2d\u200b\u7684\u200b\u5404\u4e2a\u200b\u5143\u7d20\u200b\u6700\u200b\u591a\u200b\u53ea\u80fd\u200b\u51fa\u73b0\u200b\u4e00\u6b21\u200b\u3002\u200b\u4efb\u4f55\u200b\u975e\u200b\u7a7a\u96c6\u5408\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u5b57\u9762\u200b\u8868\u793a\u6cd5\u200b<code>{}</code>\u200b\u8fdb\u884c\u200b\u8868\u793a\u200b\uff0c\u200b\u7a7a\u96c6\u200b\u53ea\u80fd\u200b\u7528\u200b<code>set()</code>\u200b\u8868\u793a\u200b\u3002\u200b\u96c6\u5408\u200b\u540c\u6837\u200b\u9002\u7528\u200b\u4e8e\u200b\u4e0e\u200b\u5217\u8868\u200b\u63a8\u5bfc\u200b\u76f8\u4f3c\u200b\u7684\u200b\u63a8\u5bfc\u200b\u65b9\u5f0f\u200b\u3002</p> <p>\u200b\u96c6\u5408\u200b\u6709\u200b\u5bf9\u5e94\u200b\u7684\u200b\u53ea\u8bfb\u200b\u53d8\u79cd\u200b<code>frozenset</code>\u3002<code>set</code>\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5b57\u9762\u200b\u8868\u793a\u6cd5\u200b\u8fdb\u884c\u200b\u6784\u9020\u200b\uff0c\u200b\u6216\u200b\u4f7f\u7528\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u5bf9\u8c61\u200b\u8fdb\u884c\u200b\u6784\u9020\u200b\u3002<code>frozenset</code>\u200b\u53ea\u80fd\u200b\u4f7f\u7528\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u5bf9\u8c61\u200b\u6784\u9020\u200b\u3002</p> <p>\u200b\u53ef\u4ee5\u200b\u5229\u7528\u200b<code>set</code>\u200b\u4e2d\u200b\u5143\u7d20\u200b\u7684\u200b\u552f\u4e00\u6027\u200b\u53bb\u9664\u200b\u5217\u8868\u200b\u4e2d\u200b\u7684\u200b\u91cd\u590d\u200b\u503c\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; src_list = [1, 1, 2, 3, 4, 2, 3]\n&gt;&gt;&gt; list(set(src_list))\n[1, 2, 3, 4]\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u53e6\u200b\u4e00\u79cd\u200b\u65b9\u6cd5\u200b\u662f\u200b\u901a\u8fc7\u200b<code>collections.Counter</code>\u200b\u53bb\u200b\u91cd\u200b\u3002</p> <pre><code>&gt;&gt;&gt; from collections import Counter\n&gt;&gt;&gt; src_list = [1, 1, 2, 3, 4, 2, 3]\n&gt;&gt;&gt; list(Counter(src_list).keys())\n[1, 2, 3, 4]\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u548c\u200b\u5b57\u5178\u200b\u7684\u200b\u952e\u200b\u4e00\u6837\u200b\uff0c\u200b\u96c6\u5408\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u5fc5\u987b\u200b\u662f\u200b\u53ef\u200b\u6563\u5217\u200b\u7684\u200b\u3002<code>set</code>\u200b\u7c7b\u578b\u200b\u672c\u8eab\u200b\u4e0d\u53ef\u200b\u6563\u5217\u200b\uff0c<code>frozenset</code>\u200b\u7c7b\u578b\u200b\u53ef\u6563\u5217\u200b\u3002</p>"},{"location":"coding/python/mapping/#_8","title":"\u8fd0\u7b97","text":"<p>\u200b\u96c6\u5408\u200b\u6709\u200b\u5982\u4e0b\u200b\u8fd0\u7b97\u200b\uff0c\u200b\u7531\u4e8e\u200b\u96c6\u5408\u200b\u7684\u200b\u5e95\u5c42\u200b\u6570\u636e\u7ed3\u6784\u200b\u662f\u200b\u6563\u200b\u5217\u8868\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u8fd0\u7b97\u200b\u65b9\u6cd5\u200b\u6709\u200b\u8f83\u200b\u9ad8\u200b\u7684\u200b\u8ba1\u7b97\u200b\u6548\u7387\u200b\u3002</p> <ul> <li>\u200b\u4ea4\u96c6\u200b\u3001\u200b\u5e76\u96c6\u200b\u3001\u200b\u5dee\u96c6\u200b\u3001\u200b\u5bf9\u79f0\u200b\u5dee\u200b\uff0c\u200b\u5373\u200b<code>&amp;</code>\u3001<code>|</code>\u3001<code>-</code>\u200b\u4e0e\u200b<code>^</code>\uff1b</li> <li>\u200b\u5b50\u96c6\u200b\u3001\u200b\u771f\u200b\u5b50\u96c6\u200b\u3001\u200b\u8d85\u96c6\u200b\u3001\u200b\u771f\u8d85\u96c6\u200b\uff0c\u200b\u5373\u200b<code>&lt;=</code>\u3001<code>&lt;</code>\u3001<code>&gt;=</code>\u200b\u4e0e\u200b<code>&gt;</code>\uff1b</li> <li>\u200b\u5c5e\u4e8e\u200b\uff0c\u200b\u5373\u200b<code>in</code></li> </ul> <p>\u200b\u4ee5\u200b<code>in</code>\u200b\u64cd\u4f5c\u200b\u4e3a\u4f8b\u200b\uff0c<code>set</code>\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u67e5\u8be2\u200b\u6563\u200b\u5217\u8868\u200b\u83b7\u53d6\u200b\u7ed3\u679c\u200b\uff0c\u200b\u4f46\u200b<code>list</code>\u200b\u5fc5\u987b\u200b\u626b\u63cf\u200b\u4e00\u904d\u200b\u5217\u8868\u200b\u624d\u80fd\u200b\u83b7\u53d6\u200b\u7ed3\u679c\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u542b\u6709\u200b\u8bb8\u591a\u200b\u5143\u7d20\u200b\u7684\u200b\u5e8f\u5217\u200b\uff0c\u200b\u4e24\u8005\u200b\u5728\u200b\u6267\u884c\u200b\u901f\u5ea6\u200b\u4e0a\u200b\u6709\u200b\u660e\u663e\u200b\u7684\u200b\u5dee\u522b\u200b\u3002</p> <p><code>set</code>\u200b\u8fd8\u200b\u652f\u6301\u200b<code>add</code>\u3001<code>clear</code>\u3001<code>copy</code>\u3001<code>pop</code>\u3001<code>remove</code>\u200b\u7b49\u200b\u65b9\u6cd5\u200b\u3002</p>"},{"location":"coding/python/sequence/","title":"Python\u200b\u4e2d\u200b\u7684\u200b\u5e8f\u5217\u200b\u7c7b\u578b","text":"<p>\u200b\u5e8f\u5217\u200b\u6307\u200b\u53ef\u4ee5\u200b\u5b58\u50a8\u200b\u591a\u4e2a\u200b\u6570\u636e\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\u3002</p> <p>\u200b\u6309\u7167\u200b\u5b58\u50a8\u200b\u7684\u200b\u6570\u636e\u7c7b\u578b\u200b\u53ef\u4ee5\u200b\u5206\u4e3a\u200b\uff1a</p> <ul> <li>\u200b\u5bb9\u5668\u200b\u53ef\u4ee5\u200b\u5b58\u50a8\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u8fd9\u90e8\u5206\u200b\u7c7b\u578b\u200b\u6709\u200b<code>list</code>\u3001<code>tuple</code>\u3001<code>collections.deque</code></li> <li>\u200b\u6241\u5e73\u200b\u5e8f\u5217\u200b\u53ea\u80fd\u200b\u5b58\u50a8\u200b\u67d0\u79cd\u200b\u7c7b\u578b\u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u8fd9\u90e8\u5206\u200b\u7c7b\u578b\u200b\u6709\u200b<code>str</code>\u3001<code>bytes</code>\u3001<code>bytearray</code>\u3001<code>memoryview</code>\u3001<code>array.array</code></li> </ul> <p>\u200b\u6309\u7167\u200b\u5e8f\u5217\u200b\u662f\u5426\u200b\u53ef\u4ee5\u200b\u4fee\u6539\u200b\u53ef\u4ee5\u200b\u5206\u4e3a\u200b</p> <ul> <li>\u200b\u53ef\u53d8\u200b\u5e8f\u5217\u200b\uff1a<code>list</code>\u3001<code>bytearray</code>\u3001<code>array.array</code>\u3001<code>collections.deque</code>\u3001<code>memoryview</code></li> <li>\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u5e8f\u5217\u200b\uff1a<code>tuple</code>\u3001<code>str</code>\u3001<code>bytes</code></li> </ul>"},{"location":"coding/python/sequence/#_1","title":"\u5217\u8868","text":"<p>\u200b\u5217\u8868\u200b\u662f\u200b\u53ef\u4ee5\u200b\u4fee\u6539\u200b\u7684\u200b\u5e8f\u5217\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5b58\u50a8\u200b\u591a\u79cd\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\u3002\u200b\u5982\u4e0b\u200b\u7740\u91cd\u200b\u8ba8\u8bba\u200b\u5217\u8868\u200b\u63a8\u5bfc\u200b\u7684\u200b\u4e66\u5199\u200b\u5f62\u5f0f\u200b\u3002</p> <p>\u200b\u5217\u8868\u200b\u63a8\u5bfc\u200b\u53ef\u200b\u7528\u4e8e\u200b\u4ece\u200b\u4e00\u4e2a\u200b\u5217\u8868\u200b\u751f\u6210\u200b\u65b0\u200b\u7684\u200b\u5217\u8868\u200b\uff0c\u200b\u76f8\u6bd4\u200b\u4e8e\u200bfor\u200b\u5faa\u73af\u200b\u52a0\u200b<code>append()</code>\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5217\u8868\u200b\u63a8\u5bfc\u200b\u7684\u200b\u5199\u6cd5\u200b\u6709\u200b\u66f4\u597d\u200b\u7684\u200b\u53ef\u8bfb\u6027\u200b\u3002</p> <p>\u200b\u5217\u8868\u200b\u63a8\u5bfc\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>a = [1, 2, 3]\nb = [_ ** 2 for _ in a]\n</code></pre> <p>Python 3.x\u200b\u4e2d\u200b\u7684\u200b\u5217\u8868\u200b\u63a8\u5bfc\u200b\u4e0d\u4f1a\u200b\u4ea7\u751f\u200b\u53d8\u91cf\u200b\u6cc4\u9732\u200b\u7684\u200b\u95ee\u9898\u200b\uff0c\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>x = 'ABC'\ny = [x for x in x]\nprint(x)\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\u4e3a\u200b<code>ABC</code>\uff0c\u200b\u8bf4\u660e\u200b\u5217\u8868\u200b\u63a8\u5bfc\u200b\u53d8\u91cf\u200b<code>x</code>\u200b\u7684\u200b\u503c\u200b\u6ca1\u6709\u200b\u4f20\u9012\u200b\u5230\u200b\u5916\u90e8\u200b\u3002</p> <p>\u200b\u5217\u8868\u200b\u63a8\u5bfc\u200b\u7b49\u4ef7\u200b\u4e8e\u200b<code>map</code>\u200b\u4e0e\u200b<code>filter</code>\u200b\u7684\u200b\u7ed3\u5408\u200b\u3002<code>map</code>\u200b\u51fd\u6570\u200b\u63a5\u6536\u200b\u4e24\u4e2a\u200b\u53c2\u6570\u200b\u3002\u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u4e3a\u200b\u51fd\u6570\u200b\uff0c\u200b\u7b2c\u4e8c\u4e2a\u200b\u53c2\u6570\u200b\u4e3a\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u5bf9\u8c61\u200b\u3002<code>map</code>\u200b\u51fd\u6570\u200b\u8fed\u4ee3\u200b\u5730\u200b\u5c06\u200b\u51fd\u6570\u200b\u4f5c\u7528\u200b\u4e8e\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u4ece\u800c\u200b\u5f97\u5230\u200b\u7ed3\u679c\u200b\u3002</p> <p>\u200b\u5217\u8868\u200b\u63a8\u5bfc\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u8ba1\u7b97\u200b\u5217\u8868\u200b\u7684\u200b\u7b1b\u5361\u5c14\u200b\u79ef\u200b\uff0c\u200b\u5982\u200b\u4e0b\u5217\u200b\u4ee3\u7801\u200b\uff1a</p> <pre><code>[(x, y) for x in range(10) for y in range(11, 20)]\n</code></pre> <p>\u200b\u5faa\u73af\u200b\u7684\u200b\u987a\u5e8f\u200b\u4e0e\u200b<code>for</code>\u200b\u5faa\u73af\u200b\u4e00\u81f4\u200b\uff0c\u200b\u5148\u200b\u6267\u884c\u200b\u5916\u5c42\u200b\u7684\u200b\u5faa\u73af\u200b\uff0c\u200b\u518d\u200b\u6267\u884c\u200b\u5185\u5c42\u200b\u7684\u200b\u5faa\u73af\u200b\u3002</p> <p>\u200b\u5c06\u200b\u5217\u8868\u200b\u63a8\u5bfc\u200b\u7684\u200b\u65b9\u62ec\u53f7\u200b\u5706\u62ec\u53f7\u200b\uff0c\u200b\u5373\u200b\u4e3a\u200b\u751f\u6210\u5668\u200b\u8868\u8fbe\u5f0f\u200b\u3002\u200b\u5982\u679c\u200b\u751f\u6210\u5668\u200b\u8868\u8fbe\u5f0f\u200b\u662f\u200b\u51fd\u6570\u8c03\u7528\u200b\u7684\u200b\u552f\u4e00\u200b\u53c2\u6570\u200b\uff0c\u200b\u5706\u62ec\u53f7\u200b\u53ef\u4ee5\u200b\u7701\u7565\u200b\u3002</p>"},{"location":"coding/python/sequence/#_2","title":"\u5143\u7ec4","text":"<p>\u200b\u5143\u7ec4\u200b\u662f\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u7684\u200b\u5e8f\u5217\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u4e3a\u200b\u5b57\u200b\u6bb5\u200b\u7684\u200b\u96c6\u5408\u200b\uff0c\u200b\u5bf9\u5e94\u200b\u6570\u636e\u8868\u200b\u4e2d\u200b\u7684\u200b\u67d0\u200b\u4e00\u884c\u200b\u3002\u200b\u5982\u4e0b\u200b\u7740\u91cd\u200b\u8ba8\u8bba\u200b\u5143\u7ec4\u200b\u89e3\u5305\u200b\u7684\u200b\u5185\u5bb9\u200b\u3002</p> <p>\u200b\u5e73\u884c\u200b\u8d4b\u503c\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u4e00\u4e2a\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u590d\u5236\u5230\u200b\u4e00\u7ec4\u200b\u53d8\u91cf\u200b\u4e2d\u200b\u3002\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u5bf9\u8c61\u200b\u4e0d\u200b\u8981\u6c42\u200b\u662f\u200b\u5143\u7ec4\u200b\u3002\u200b\u5982\u200b\uff1a</p> <pre><code>a, b = (1, 2)\nc, d = [3, 4]\ne, f = {1: 2, 3: 4} # \u200b\u6309\u7167\u200bkey\u200b\u7684\u200b\u53d6\u503c\u200b\u8fdb\u884c\u200b\u5206\u914d\u200b\n</code></pre> <p><code>*</code>\u200b\u8fd0\u7b97\u7b26\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u89e3\u5305\u200b\u5143\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\u4f5c\u4e3a\u200b\u51fd\u6570\u53c2\u6570\u200b\uff0c\u200b\u5982\u200b\uff1a</p> <pre><code>print(*(1, 2))\n</code></pre> <p><code>*</code>\u200b\u8fd0\u7b97\u7b26\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u4ece\u200b\u51fd\u6570\u200b\u4e2d\u200b\u83b7\u53d6\u200b\u53ef\u53d8\u200b\u6570\u91cf\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u5e38\u89c1\u200b\u7528\u6cd5\u200b\u4e3a\u200b<code>*args</code>\u200b\u4e0e\u200b<code>**kwargs</code>\u3002</p> <p><code>*</code>\u200b\u8fd0\u7b97\u7b26\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u5e73\u884c\u200b\u8d4b\u503c\u200b\u4e2d\u200b\uff0c\u200b\u4f46\u200b\u5e73\u884c\u200b\u8d4b\u503c\u200b\u4e2d\u200b\u7684\u200b\u4e00\u7ec4\u200b\u53d8\u91cf\u200b\u53ea\u80fd\u200b\u51fa\u73b0\u200b\u4e00\u4e2a\u200b<code>*</code>\u200b\u8fd0\u7b97\u7b26\u200b\u3002\u200b\u5e26\u200b<code>*</code>\u200b\u7684\u200b\u53d8\u91cf\u200b\u89e3\u5305\u200b\u540e\u200b\u6210\u4e3a\u200b\u5217\u8868\u200b\u3002</p> <pre><code>a, b, c, *d = range(5) # d = [3, 4]\na, b, *c, d = range(5) # c = [2, 3]\n</code></pre> <p>\u200b\u5f53\u5f85\u200b\u89e3\u5305\u200b\u7684\u200b\u5143\u7ec4\u200b\u672c\u8eab\u200b\u662f\u200b\u5143\u7ec4\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u62ec\u53f7\u200b\u89e3\u5305\u200b\uff0c\u200b\u5982\u200b\uff1a</p> <pre><code>a, (b, c), d = (1, (2, 3), 4)\n</code></pre> <p>\u200b\u5143\u7ec4\u200b\u4e0d\u200b\u652f\u6301\u200b\u5217\u8868\u200b\u7684\u200b<code>append</code>\u3001<code>clear</code>\u3001<code>copy</code>\u3001<code>extend</code>\u3001<code>insert</code>\u3001<code>pop</code>\u3001<code>remove</code>\u3001<code>reverse</code>\u200b\u7b49\u200b\u65b9\u6cd5\u200b\u3002</p>"},{"location":"coding/python/sequence/#_3","title":"\u5177\u540d\u200b\u5143\u7ec4","text":"<p><code>collections.namedtuple</code>\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u5177\u540d\u200b\u5143\u7ec4\u200b\u7c7b\u578b\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5176\u200b\u53c2\u6570\u200b\u5217\u8868\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>collections.namedtuple(typename, field_names, *, rename=False, defaults=None, module=None)\n</code></pre> <ul> <li><code>typename</code>\u200b\u6307\u200b\u7c7b\u578b\u200b\u7684\u200b\u540d\u79f0\u200b\uff0c\u200b\u8be5\u200b\u53d8\u91cf\u200b\u88ab\u200b\u5199\u5165\u200b<code>__repr__</code>\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u3002\u200b\u8be5\u200b\u53c2\u6570\u200b\u7684\u200b\u53d6\u503c\u200b\u4e0e\u200b\u4ee3\u7801\u200b\u4e2d\u200b\u7c7b\u578b\u200b\u88ab\u200b\u5b9e\u9645\u200b\u5206\u914d\u200b\u7684\u200b\u540d\u79f0\u200b\u65e0\u5173\u200b\u3002</li> <li><code>field_names</code>\u200b\u662f\u200b\u5143\u7ec4\u200b\u4e2d\u5b57\u200b\u6bb5\u200b\u7684\u200b\u540d\u79f0\u200b</li> <li>\u200b\u5f53\u200b<code>rename</code>\u200b\u4e3a\u200b<code>True</code>\u200b\u91cd\u590d\u200b\u6216\u200b\u4e0e\u200b\u5173\u952e\u5b57\u200b\u51b2\u7a81\u200b\u7684\u200b\u5b57\u6bb5\u540d\u200b\u79f0\u4f1a\u200b\u88ab\u200b\u81ea\u52a8\u200b\u5904\u7406\u200b\uff0c\u200b\u5426\u5219\u200b\u4f1a\u200b\u629b\u51fa\u200b<code>ValueError</code></li> <li><code>defaults</code>\u200b\u4e3a\u200b\u5b57\u200b\u6bb5\u200b\u7684\u200b\u9ed8\u8ba4\u503c\u200b\uff0c\u200b\u8be5\u200b\u5217\u8868\u200b\u4e0e\u200b\u5b57\u6bb5\u540d\u200b\u79f0\u200b\u5217\u8868\u200b\u6309\u53f3\u200b\u5bf9\u9f50\u200b\u8fdb\u884c\u200b\u5339\u914d\u200b\u3002</li> <li>\u200b\u82e5\u200b\u63d0\u4f9b\u200b\u4e86\u200b<code>module</code>\u200b\u53c2\u6570\u200b\uff0c\u200b\u8be5\u503c\u200b\u4f1a\u200b\u88ab\u200b\u5199\u5165\u200b<code>__module__</code>\u200b\u5c5e\u6027\u200b\u4e2d\u200b\u3002</li> </ul> <p><code>namedtuple</code>\u200b\u8fd4\u56de\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u521b\u5efa\u5bf9\u8c61\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>&gt;&gt;&gt; from collections import namedtuple\n&gt;&gt;&gt; Point = namedtuple('Point', [\"x\", \"y\"], defaults=[1, 2]) \n&gt;&gt;&gt; Point()\nPoint(x=1, y=2)\n&gt;&gt;&gt; Point(2)\nPoint(x=2, y=2)\n&gt;&gt;&gt; Point(2, 3)\nPoint(x=2, y=3)\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/sequence/#_4","title":"\u5207\u7247","text":"<p>\u200b\u5207\u7247\u200b\u662f\u200b\u5728\u200b\u5e8f\u5217\u200b\u4e0a\u200b\u6267\u884c\u200b\u7684\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u5207\u7247\u200b\u64cd\u4f5c\u200b\u5f97\u5230\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u5e8f\u5217\u200b\u3002\u200b\u5207\u7247\u200b\u4ee5\u200b<code>s[a:b:c]</code>\u200b\u7684\u200b\u5f62\u5f0f\u200b\u6307\u5b9a\u200b\uff0c<code>a</code>\u200b\u4e3a\u200b\u8d77\u59cb\u200b\u4e0b\u6807\u200b\u3001<code>b</code>\u200b\u4e3a\u200b\u7ec8\u6b62\u200b\u4e0b\u6807\u200b\uff08\u200b\u4e0d\u200b\u5305\u542b\u200b\uff09\u3001<code>c</code>\u200b\u4e3a\u200b\u6b65\u957f\u200b\uff08\u200b\u53ef\u4ee5\u200b\u4e3a\u200b\u8d1f\u200b\uff09\u3002</p> <ul> <li><code>s[::-1]</code>\u200b\u7b49\u4ef7\u200b\u4e8e\u200b\u53cd\u8f6c\u200b<code>s</code>\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b</li> <li>\u200b\u5207\u7247\u200b\u5e76\u200b\u6ca1\u6709\u200b\u521b\u5efa\u200b\u65b0\u200b\u7684\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5bf9\u200b\u5207\u7247\u200b\u7684\u200b\u4fee\u6539\u200b\u4f1a\u200b\u53cd\u6620\u200b\u5230\u200b\u539f\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u3002\u200b\u4f46\u200b\u5bf9\u200b\u5207\u7247\u200b\u7684\u200b\u4fee\u6539\u200b\u5fc5\u987b\u200b\u6ee1\u8db3\u200b\u5143\u7d20\u200b\u6570\u91cf\u200b\u76f8\u540c\u200b\u7684\u200b\u6761\u4ef6\u200b\uff0c\u200b\u5426\u5219\u200b\u4f1a\u200b\u629b\u51fa\u200b<code>ValueError</code>\u3002</li> </ul> <p>\u200b\u53e6\u200b\u4e00\u79cd\u200b\u5207\u7247\u200b\u7684\u200b\u65b9\u5f0f\u200b\u4e3a\u200b<code>s[slice(a, b, c)]</code>\uff0c\u200b\u7701\u7565\u200b\u7684\u200b\u53c2\u6570\u200b\u4f7f\u7528\u200b<code>None</code>\u200b\u8868\u793a\u200b\u3002\u200b\u56e0\u6b64\u200b<code>s[::-1]</code>\u200b\u7b49\u4ef7\u200b\u4e8e\u200b<code>s[slice(None, None, -1)]</code>\u3002\u200b\u4e8b\u5b9e\u4e0a\u200b\uff0cPython\u200b\u5728\u200b\u5904\u7406\u200b\u5f62\u200b\u5982\u200b<code>s[a:b:c]</code>\u200b\u7684\u200b\u5207\u7247\u200b\u65f6\u4f1a\u200b\u8c03\u7528\u200b<code>s.__getitem__(slice(start, stop, step))</code></p> <p>\u200b\u5728\u200bNumPy\u200b\u6570\u7ec4\u200b\u7684\u200b\u5207\u7247\u200b\u4e2d\u200b\u6709\u65f6\u200b\u4f1a\u200b\u51fa\u73b0\u200b\u7701\u7565\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u6b64\u65f6\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>...</code>\u3002<code>...</code>\u200b\u7b26\u53f7\u200b\u4f1a\u200b\u88ab\u200bPython\u200b\u89e3\u91ca\u200b\u4e3a\u200b<code>EllipsisType</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u5e38\u91cf\u200b\u3002</p>"},{"location":"coding/python/sequence/#_5","title":"\u5e8f\u5217\u200b\u8fd0\u7b97","text":"<p>\u200b\u5e8f\u5217\u200b\u901a\u5e38\u200b\u652f\u6301\u200b<code>+</code>\u200b\u8fd0\u7b97\u200b\u4e0e\u200b<code>*</code>\u200b\u8fd0\u7b97\u200b\u3002\u200b\u4e0e\u200b\u5207\u7247\u200b\u4e0d\u540c\u200b\uff0c\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u8fd0\u7b97\u200b\u76f4\u63a5\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u5e8f\u5217\u200b\u3002</p> <pre><code>&gt;&gt;&gt; a = [1]\n&gt;&gt;&gt; b = [2] \n&gt;&gt;&gt; c = a + b\n&gt;&gt;&gt; c is a\nFalse\n&gt;&gt;&gt;\n</code></pre> <p><code>+</code>\u200b\u8fd0\u7b97\u200b\u5c40\u9650\u4e8e\u200b\u76f8\u540c\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5bf9\u4e8e\u200b<code>list</code>\u200b\u7b49\u200b\u53ef\u53d8\u200b\u7c7b\u578b\u200b\uff0c<code>a + b</code>\u200b\u7b49\u4ef7\u200b\u4e8e\u200b<code>a.extend(b)</code>\u3002\u200b\u4f46\u200b<code>a.extend(b)</code>\u200b\u65b9\u6cd5\u200b\u5bf9\u200b<code>b</code>\u200b\u7684\u200b\u7c7b\u578b\u200b\u65e0\u200b\u8981\u6c42\u200b\uff0c\u200b\u4ec5\u200b\u9700\u8981\u200b<code>b</code>\u200b\u53ef\u200b\u8fed\u4ee3\u200b\u3002</p> <p><code>*</code>\u200b\u8fd0\u7b97\u7b26\u200b\u7684\u200b\u7b2c\u4e8c\u4e2a\u200b\u64cd\u4f5c\u6570\u200b<code>y</code>\u200b\u5fc5\u987b\u200b\u4e3a\u200b\u6574\u6570\u200b\uff0c\u200b\u8868\u793a\u200b\u5c06\u200b\u5e8f\u5217\u200b\u91cd\u590d\u200b<code>y</code>\u200b\u6b21\u200b\u3002\u200b\u82e5\u200b<code>y&lt;=0</code>\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b\u7a7a\u200b\u5217\u8868\u200b</p> <p>\u200b\u6ce8\u610f\u200b\uff0c<code>*</code>\u200b\u8fd0\u7b97\u7b26\u200b\u5f97\u5230\u200b\u7684\u200b\u5217\u8868\u200b\u4e2d\u200b\uff0c\u200b\u5217\u8868\u200b\u591a\u6b21\u91cd\u590d\u200b\u7684\u200b\u90e8\u5206\u200b\u4ee5\u200b\u5f15\u7528\u200b\u7684\u200b\u5f62\u5f0f\u200b\u5b58\u50a8\u200b\uff0c\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; b = [[]] * 3\n&gt;&gt;&gt; b[0].append(1)\n&gt;&gt;&gt; b\n[[1], [1], [1]]\n&gt;&gt;&gt;\n</code></pre> <p><code>append</code>\u200b\u5904\u7406\u200b\u53ef\u53d8\u200b\u5bf9\u8c61\u200b\u7684\u200b\u65b9\u5f0f\u200b\u540c\u6837\u200b\u662f\u200b\u590d\u5236\u200b\u5f15\u7528\u200b\u800c\u200b\u4e0d\u662f\u200b\u590d\u5236\u200b\u503c\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4e5f\u200b\u4f1a\u200b\u9020\u6210\u200b\u76f8\u540c\u200b\u7684\u200b\u95ee\u9898\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; a = []\n&gt;&gt;&gt; b = []\n&gt;&gt;&gt; for i in range(3):\n...     a.append(b)\n... \n&gt;&gt;&gt; a[0].append(1)\n&gt;&gt;&gt; a\n[[1], [1], [1]]\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u56e0\u6b64\u200b\u8981\u200b\u907f\u514d\u200b\u4f7f\u7528\u200b<code>*</code>\u200b\u8fd0\u7b97\u7b26\u200b\u5904\u7406\u200b\u5305\u542b\u200b\u53ef\u53d8\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5217\u8868\u200b\u3002\u200b\u5efa\u8bae\u200b\u4f7f\u7528\u200b\u5217\u8868\u200b\u63a8\u5bfc\u200b\u521b\u5efa\u200b\u5d4c\u5957\u200b\u5217\u8868\u200b\u3002</p> <p>\u200b\u4e0e\u200b\u5e8f\u5217\u200b\u7684\u200b\u8fd0\u7b97\u200b\u4e0d\u540c\u200b\uff0c\uff08\u200b\u53ef\u53d8\u200b\uff09\u200b\u5e8f\u5217\u200b\u7684\u200b\u589e\u91cf\u200b\u8fd0\u7b97\u200b<code>+=</code>\u3001<code>*=</code>\u200b\u662f\u200b\u5728\u200b\u539f\u200b\u5e8f\u5217\u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u7684\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u521b\u5efa\u200b\u65b0\u200b\u7684\u200b\u5e8f\u5217\u200b\u5bf9\u8c61\u200b\u3002\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u5e8f\u5217\u200b\u4e0d\u200b\u652f\u6301\u200b\u589e\u91cf\u200b\u8fd0\u7b97\u200b\u3002</p> <p>\u200b\u8003\u8651\u200b\u5982\u4e0b\u200b\u4ee3\u7801\u200b\uff1a</p> <pre><code>&gt;&gt;&gt; a = [1, 2, 3]\n&gt;&gt;&gt; a[2] += 5\n&gt;&gt;&gt; a\n[1, 2, 8]\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u53ef\u53d8\u200b\u5e8f\u5217\u200b\u901a\u8fc7\u200b<code>__setitem__</code>\u200b\u65b9\u6cd5\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u5207\u7247\u200b\u7684\u200b\u4fee\u6539\u200b\u3002\u200b\u82e5\u200b<code>a</code>\u200b\u4e3a\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u5e8f\u5217\u200b\uff0c\u200b\u6267\u884c\u200b\u7ed3\u679c\u200b\u5e94\u200b\u4e3a\u4f55\u200b\uff1f</p> <p>\u200b\u5bf9\u4e8e\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u5e8f\u5217\u200b\uff0c\u200b\u5176\u200b\u672c\u8eab\u200b\u4e0d\u200b\u652f\u6301\u200b\u5bf9\u200b\u5143\u7d20\u200b\u8fdb\u884c\u200b\u7684\u200b\u4fee\u6539\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5e8f\u5217\u200b\u672c\u8eab\u200b\u7684\u200b\u503c\u200b\u4e0d\u4f1a\u200b\u6539\u53d8\u200b\u3002</p> <pre><code>&gt;&gt;&gt; a = (1, 2, 3)\n&gt;&gt;&gt; a[2] += 5\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: 'tuple' object does not support item assignment\n&gt;&gt;&gt; a\n(1, 2, 3)\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u4f46\u200b\u5982\u679c\u200b\u8981\u200b\u4fee\u6539\u200b\u7684\u200b\u5143\u7d20\u200b\u672c\u8eab\u200b\u662f\u200b\u5f15\u7528\u200b\uff0c\u200b\u5982\u200b\u4e00\u4e2a\u200b\u53ef\u53d8\u200b\u5e8f\u5217\u200b\uff0c\u200b\u6b64\u65f6\u200b\u5bf9\u200b\u53ef\u53d8\u200b\u5e8f\u5217\u200b\u7684\u200b\u4fee\u6539\u200b\u4e0d\u4f1a\u200b\u5f71\u54cd\u200b\u5230\u200b\u5f15\u7528\u200b\u672c\u8eab\u200b\uff0c\u200b\u56e0\u6b64\u200b<code>+=</code>\u200b\u8fd0\u7b97\u200b\u4ecd\u4f1a\u200b\u6b63\u5e38\u200b\u4f5c\u7528\u200b\u3002\u200b\u589e\u91cf\u200b\u64cd\u4f5c\u200b\u4e0d\u662f\u200b\u539f\u5b50\u200b\u64cd\u4f5c\u200b\u3002</p> <pre><code>&gt;&gt;&gt; t = (1, 2, [30, 40])\n&gt;&gt;&gt; t[2] += [50, 60]\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: 'tuple' object does not support item assignment\n&gt;&gt;&gt; t\n(1, 2, [30, 40, 50, 60])\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b<code>append</code>\u200b\u6216\u200b<code>extend</code>\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u907f\u514d\u200b\u5f02\u5e38\u200b\u7684\u200b\u4ea7\u751f\u200b\u3002\u200b\u53ef\u53d8\u200b\u5e8f\u5217\u200b\u88ab\u200b \u200b\u6b63\u5e38\u200b\u4fee\u6539\u200b \u3002\u200b\u4e3a\u200b\u4fdd\u8bc1\u6570\u636e\u200b\u4e0d\u200b\u88ab\u200b\u9519\u8bef\u200b\u5730\u200b\u4fee\u6539\u200b\uff0c\u200b\u5e94\u200b\u907f\u514d\u200b\u5728\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u5bb9\u7eb3\u200b\u53ef\u53d8\u200b\u5bf9\u8c61\u200b\u3002</p>"},{"location":"coding/python/sequence/#_6","title":"\u6392\u5e8f","text":"<p><code>list.sort</code>\u200b\u65b9\u6cd5\u200b\u4f5c\u7528\u200b\u4e0e\u200b\u5217\u8868\u200b\u672c\u8eab\u200b\u800c\u200b\u4e0d\u200b\u8fd4\u56de\u200b\uff08\u200b\u8fd4\u56de\u503c\u200b\u4e3a\u200b<code>None</code>\uff09\u3002\u200b\u8981\u200b\u4ea7\u751f\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u5df2\u200b\u6392\u5e8f\u200b\u5217\u8868\u200b\u800c\u200b\u4e0d\u200b\u5f71\u54cd\u200b\u539f\u200b\u5217\u8868\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>sorted()</code>\u200b\u5185\u7f6e\u200b\u51fd\u6570\u200b\u3002</p> <pre><code>&gt;&gt;&gt; a = [6, 3, 2, 1]\n&gt;&gt;&gt; b = sorted(a)\n&gt;&gt;&gt; b is a\nFalse\n&gt;&gt;&gt;\n</code></pre> <p><code>sorted</code>\u200b\u4e0e\u200b<code>list.sort</code>\u200b\u652f\u6301\u200b\u6309\u7167\u200b\u5176\u4ed6\u200b\u89c4\u5219\u200b\u5bf9\u200b\u5e8f\u5217\u200b\u8fdb\u884c\u200b\u6392\u5e8f\u200b\uff0c\u200b\u5373\u200b<code>key</code>\u200b\u53c2\u6570\u200b\u3002<code>key</code>\u200b\u53c2\u6570\u200b\u4e3a\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u5982\u200b<code>key=len</code>\u200b\u5373\u200b\u4e3a\u200b\u5bf9\u200b\u5b57\u7b26\u4e32\u200b\u957f\u5ea6\u200b\u5347\u5e8f\u200b\u6392\u5e8f\u200b\uff0c<code>key=lower</code>\u200b\u5373\u200b\u4e3a\u200b\u5ffd\u7565\u200b\u5b57\u7b26\u4e32\u200b\u5927\u5c0f\u5199\u200b\u8fdb\u884c\u200b\u5347\u5e8f\u200b\u6392\u5e8f\u200b\u3002</p> <p>Python\u200b\u7684\u200b<code>bisect</code>\u200b\u6a21\u5757\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5bf9\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u7684\u200b\u652f\u6301\u200b\u3002<code>bisect.bisect</code>\u200b\u4e3a\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\u51fd\u6570\u200b\uff0c\u200b\u8fd4\u56de\u200b\u5728\u200b\u76ee\u6807\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u5927\u4e8e\u200b\u5f85\u67e5\u200b\u5143\u7d20\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u503c\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u3002<code>bisect.insort</code>\u200b\u4e3a\u200b\u63d2\u5165\u200b\u51fd\u6570\u200b\uff0c\u200b\u5728\u200b<code>bisect</code>\u200b\u51fd\u6570\u200b\u67e5\u8be2\u200b\u4f4d\u7f6e\u200b\u63d2\u5165\u200b\u5143\u7d20\u200b\u3002</p> <p><code>bisect</code>\u200b\u4e0e\u200b<code>insort</code>\u200b\u51fd\u6570\u200b\u6709\u200b\u53d8\u79cd\u200b<code>bisect_left</code>\u200b\u4e0e\u200b<code>insort_left</code>\u3002<code>bisect_left</code>\u200b\u8fd4\u56de\u200b\u5728\u200b\u76ee\u6807\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u4e0d\u200b\u5927\u4e8e\u200b\u5f85\u67e5\u200b\u5143\u7d20\u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u503c\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u3002</p>"},{"location":"coding/python/sequence/#_7","title":"\u5176\u4ed6\u200b\u5e8f\u5217\u200b\u7c7b\u578b","text":""},{"location":"coding/python/sequence/#_8","title":"\u6570\u7ec4","text":"<p><code>array</code>\u200b\u6a21\u5757\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u6570\u7ec4\u200b\u7ed3\u6784\u200b\u7684\u200b\u652f\u6301\u200b\u3002\u200b\u6570\u7ec4\u200b\u662f\u200b\u53ea\u80fd\u200b\u5b58\u50a8\u200b\u4e00\u79cd\u200b\u7c7b\u578b\u200b\u5143\u7d20\u200b\u7684\u200b\u53ef\u53d8\u200b\u5e8f\u5217\u200b\uff0c\u200b\u652f\u6301\u200b<code>list</code>\u200b\u7684\u200b\u591a\u6570\u200b\u65b9\u6cd5\u200b\u3002\u200b\u540c\u65f6\u200b\u6570\u7ec4\u200b\u63d0\u4f9b\u200b\u4e86\u200b<code>fromfile, tofile</code>\u200b\u4e0e\u200b<code>frombytes, tobytes</code>\uff0c\u200b\u4ece\u800c\u200b\u652f\u6301\u200b\u76f4\u63a5\u200b\u8bfb\u5199\u200b\u6587\u4ef6\u200b\u6216\u200b\u6bd4\u7279\u6d41\u200b\u3002</p> <p>\u200b\u5728\u200b\u521b\u5efa\u200b\u6570\u7ec4\u200b\u65f6\u200b\u9700\u8981\u200b\u6307\u5b9a\u200b\u7c7b\u578b\u200b\u7801\u200b\uff0c\u200b\u5373\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u5b58\u50a8\u200b\u7684\u200b\u6570\u636e\u7c7b\u578b\u200b\u3002\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u7801\u200b\u5bf9\u5e94\u200b\u7684\u200b\u7c7b\u578b\u200b\u53ea\u200b\u5360\u7528\u200b\u6709\u9650\u200b\u7684\u200b\u5185\u5b58\u7a7a\u95f4\u200b\u3002\u200b\u5728\u200b\u5b58\u50a8\u200b\u5927\u91cf\u200b\u6570\u636e\u200b\u65f6\u200b\u4f18\u4e8e\u200b\u5217\u8868\u200b\u7b49\u200b\u5176\u4ed6\u200b\u53ef\u53d8\u200b\u5e8f\u5217\u200b\u3002</p> \u200b\u7c7b\u578b\u200b\u7801\u200b C \u200b\u7c7b\u578b\u200b Python \u200b\u7c7b\u578b\u200b \u200b\u5b57\u200b\u5bbd\u200b <code>'b'</code> <code>signed char</code> <code>int</code> 1 <code>'B'</code> <code>unsigned char</code> <code>int</code> 1 <code>'u'</code> <code>wchar_t</code> Unicode character 2 <code>'h'</code> <code>signed short</code> <code>int</code> 2 <code>'H'</code> <code>unsigned short</code> <code>int</code> 2 <code>'i'</code> <code>signed int</code> <code>int</code> 2 <code>'I'</code> <code>unsigned int</code> <code>int</code> 2 <code>'l'</code> <code>signed long</code> <code>int</code> 4 <code>'L'</code> <code>unsigned long</code> <code>int</code> 4 <code>'q'</code> <code>signed long long</code> <code>int</code> 8 <code>'Q'</code> <code>unsigned long long</code> <code>int</code> 8 <code>'f'</code> <code>float</code> <code>float</code> 4 <code>'d'</code> <code>double</code> <code>float</code> 8 <p>\u200b\u6570\u7ec4\u200b\u4e0d\u200b\u652f\u6301\u200b\u5217\u8868\u200b\u7684\u200b\u5982\u4e0b\u200b\u65b9\u6cd5\u200b\uff1a</p> <ul> <li><code>clear</code></li> <li><code>copy</code></li> <li><code>sort</code></li> </ul> <p>\u200b\u4f46\u200b\u6570\u7ec4\u200b\u652f\u6301\u200b\u4ece\u200b\u5217\u8868\u200b\u6dfb\u52a0\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5373\u200b<code>fromlist</code>\u200b\u65b9\u6cd5\u200b\u3002\u200b\u5f53\u200b\u5217\u8868\u200b\u4e2d\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u5728\u200b\u6dfb\u52a0\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u51fa\u9519\u200b\uff0c\u200b\u5219\u200b\u6240\u6709\u200b\u7684\u200b\u6dfb\u52a0\u200b\u90fd\u200b\u4f1a\u200b\u88ab\u200b\u56de\u6eda\u200b\u3002</p> <pre><code>&gt;&gt;&gt; import array\n&gt;&gt;&gt; a = array.array('f')\n&gt;&gt;&gt; b = [1.0, 2.0, 'a']\n&gt;&gt;&gt; a\narray('f')\n&gt;&gt;&gt; a.fromlist(b)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: must be real number, not str\n&gt;&gt;&gt; a\narray('f')\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u6570\u7ec4\u200b\u662f\u200bbytes-like object\uff0c\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u5185\u5b58\u200b\u89c6\u56fe\u200b\u4e2d\u200b\u3002</p>"},{"location":"coding/python/sequence/#_9","title":"\u5185\u5b58\u200b\u89c6\u56fe","text":"<p><code>memoryview</code>\u200b\u5141\u8bb8\u200b\u4f7f\u7528\u200b\u4e0d\u540c\u200b\u7684\u200b\u65b9\u5f0f\u200b\u8bfb\u5199\u200b\u540c\u4e00\u200b\u5757\u5185\u5b58\u200b\u7684\u200b\u6570\u636e\u200b\u3002</p> <p>\u200b\u5982\u4e0b\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u6620\u5c04\u200b\u5230\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\u7684\u200b<code>memoryview</code>\uff0c\u200b\u5728\u200b\u4e0d\u200b\u6267\u884c\u200b\u64cd\u4f5c\u200b\u65f6\u200b\uff0c<code>memory</code>\u200b\u7684\u200b\u6570\u636e\u200b\u5185\u5bb9\u200b\u4e0e\u200b\u539f\u200b\u5e8f\u5217\u200b\u7684\u200b\u6570\u636e\u200b\u5185\u5bb9\u200b\u76f8\u540c\u200b\u3002</p> <pre><code>&gt;&gt;&gt; a = [1, 2, 3, 4]\n&gt;&gt;&gt; b = memoryview(array.array('i', a))\n&gt;&gt;&gt; b[0]\n1\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u4f7f\u7528\u200b<code>memoryview.cast</code>\u200b\u65b9\u6cd5\u200b\u53ef\u4ee5\u200b\u5c06\u200b<code>memoryview</code>\u200b\u6620\u5c04\u200b\u7684\u200b\u5185\u5b58\u200b\u533a\u57df\u200b\u4ee5\u200b\u4e0d\u540c\u200b\u7684\u200b\u65b9\u5f0f\u200b\u8fdb\u884c\u200b\u89e3\u91ca\u200b\u3002</p> <pre><code>&gt;&gt;&gt; c = b.cast('B')\n&gt;&gt;&gt; list(c)\n[1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0]\n&gt;&gt;&gt;\n</code></pre> <p><code>memoryview</code>\u200b\u7684\u200b\u53ef\u53d8\u6027\u200b\u53d6\u51b3\u4e8e\u200b\u5176\u6240\u200b\u6620\u5c04\u200b\u5185\u5b58\u200b\u533a\u57df\u200b\u7684\u200b\u6027\u8d28\u200b\uff0c\u200b\u82e5\u200b\u4f7f\u7528\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u5e8f\u5217\u200b\u521b\u5efa\u200b<code>memoryview</code>\uff0c\u200b\u5219\u200b<code>memoryview</code>\u200b\u4e3a\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u5e8f\u5217\u200b\u3002</p> <pre><code>&gt;&gt;&gt; d = memoryview(b\"abc\") \n&gt;&gt;&gt; d[0] = \"d\"\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: cannot modify read-only memory\n&gt;&gt;&gt;\n</code></pre> <p>\u200b\u4f5c\u4e3a\u200b\u53ef\u53d8\u200b\u5e8f\u5217\u200b\u7684\u200b<code>memoryview</code>\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u4fee\u6539\u200b\uff0c\u200b\u518d\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u539f\u6765\u200b\u7684\u200b\u89e3\u91ca\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u5373\u53ef\u200b\u5b9e\u73b0\u200b\u5bf9\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u67d0\u4e2a\u200b\u7279\u5b9a\u200b\u5b57\u8282\u200b\u7684\u200b\u4fee\u6539\u200b\u3002</p> <pre><code>&gt;&gt;&gt; c[1] = 1 \n&gt;&gt;&gt; b = c.cast(\"i\")\n&gt;&gt;&gt; list(b)\n[257, 2, 3, 4]\n&gt;&gt;&gt;\n</code></pre> <p><code>memoryview</code>\u200b\u7684\u200b\u5207\u7247\u200b\u662f\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b<code>memoryview</code>\u200b\u5bf9\u8c61\u200b\uff08\u200b\u57fa\u4e8e\u200b\u539f\u200b\u5b57\u8282\u200b\u5e8f\u5217\u200b\uff09</p>"},{"location":"coding/python/sequence/#_10","title":"\u961f\u5217","text":"<p>\u200b\u5217\u8868\u200b\u7684\u200b<code>append</code>\u200b\u4e0e\u200b<code>pop</code>\u200b\u65b9\u6cd5\u200b\u7ec4\u5408\u200b\u4f7f\u7528\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u5bf9\u6808\u200b\u6216\u200b\u961f\u5217\u200b\u7684\u200b\u6a21\u62df\u200b\u3002<code>collection.deque</code>\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u961f\u5217\u200b\u7684\u200b\u66f4\u200b\u9ad8\u6548\u200b\u7684\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u5e76\u4e14\u200b\u6ee1\u8db3\u200b\u7ebf\u7a0b\u200b\u5b89\u5168\u200b\u7684\u200b\u6761\u4ef6\u200b\u3002</p> <p>\u200b\u5728\u200b\u521b\u5efa\u200b\u961f\u5217\u200b\u65f6\u200b\uff0c\u200b\u53ef\u200b\u9009\u200b\u63d0\u4f9b\u200b\u961f\u5217\u200b\u7684\u200b\u6700\u5927\u200b\u957f\u5ea6\u200b<code>maxlen</code>\u3002\u200b\u8be5\u200b\u53c2\u6570\u200b\u53ea\u80fd\u200b\u5728\u200b\u6784\u9020\u51fd\u6570\u200b\u4e2d\u200b\u6307\u5b9a\u200b\uff0c\u200b\u5728\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u53ea\u8bfb\u200b\u3002</p> <p>\u200b\u961f\u5217\u200b\u63d0\u4f9b\u200b\u5982\u4e0b\u200b\u65b9\u6cd5\u200b\uff1a</p> <ul> <li><code>rotate</code>\uff0c\u200b\u5f53\u200b\u53c2\u6570\u200b<code>n &gt; 0</code>\u200b\u65f6\u200b\u5c06\u200b\u961f\u5217\u200b\u53f3\u4fa7\u200b\u7684\u200b<code>n</code>\u200b\u4e2a\u200b\u5143\u7d20\u200b\u79fb\u52a8\u200b\u5230\u200b\u961f\u5217\u200b\u5de6\u4fa7\u200b\uff0c\u200b\u53cd\u4e4b\u200b\u5c06\u200b\u961f\u5217\u200b\u5de6\u4fa7\u200b\u7684\u200b<code>n</code>\u200b\u4e2a\u200b\u5143\u7d20\u200b\u79fb\u52a8\u200b\u5230\u200b\u961f\u5217\u200b\u53f3\u4fa7\u200b</li> <li><code>appendleft</code>\uff0c\u200b\u5728\u200b\u961f\u5217\u200b\u7684\u200b\u5de6\u4fa7\u200b\u6dfb\u52a0\u200b\u5143\u7d20\u200b\uff08\u200b\u5f53\u200b\u8d85\u51fa\u200b\u961f\u5217\u200b\u957f\u5ea6\u200b\u65f6\u200b\uff0c\u200b\u4f1a\u200b\u4ece\u200b\u961f\u5217\u200b\u53e6\u4e00\u4fa7\u200b\u5220\u9664\u200b\uff09</li> <li><code>extendleft</code>\uff0c\u200b\u5728\u200b\u961f\u5217\u200b\u7684\u200b\u5de6\u4fa7\u200b\u6dfb\u52a0\u200b\u4e00\u7ec4\u200b\u5143\u7d20\u200b\uff08\u200b\u5f53\u200b\u8d85\u51fa\u200b\u961f\u5217\u200b\u957f\u5ea6\u200b\u65f6\u200b\uff0c\u200b\u4f1a\u200b\u4ece\u200b\u961f\u5217\u200b\u53e6\u4e00\u4fa7\u200b\u5220\u9664\u200b\uff09</li> <li>\u200b\u961f\u5217\u200b\u652f\u6301\u200b\u5217\u8868\u200b\u7684\u200b\u5927\u591a\u6570\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u9664\u200b<code>copy</code>\u3001<code>sort</code>\u3001<code>insert</code>\u3001<code>index</code>\u200b\u7b49\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u961f\u5217\u200b\u4ec5\u200b\u652f\u6301\u200b<code>+=</code>\u200b\u8fd0\u7b97\u7b26\u200b\u7684\u200b\u4f5c\u7528\u200b\u3002</li> </ul>"},{"location":"coding/rust/","title":"Rust","text":"<p>\u200b\u8bb0\u5f55\u200bRust\u200b\u7684\u200b\u5b66\u4e60\u200b\u3002</p> <ul> <li>Introduction</li> <li>Variables</li> <li>Control Flows</li> <li>Complex Objects</li> <li>Lifetimes</li> <li>Error Handling</li> <li>Supplements</li> </ul>"},{"location":"coding/rust/0/","title":"Introduction","text":"<p>Rust\u200b\u7b80\u4ecb\u200b</p> <p>Rust\u200b\u6709\u200b\u5982\u4e0b\u200b\u4e8c\u8fdb\u5236\u200b\u6587\u4ef6\u200b</p> <ul> <li><code>rustc</code>\uff1aRust\u200b\u7f16\u8bd1\u5668\u200b</li> <li><code>cargo</code>\uff1aRust\u200b\u5305\u200b\u7ba1\u7406\u5668\u200b\u548c\u200b\u6784\u5efa\u200b\u5de5\u5177\u200b</li> <li><code>rustup</code>\uff1aRust\u200b\u7248\u672c\u200b\u7ba1\u7406\u5668\u200b</li> <li><code>rustdoc</code>\uff1aRust\u200b\u6587\u6863\u200b</li> <li><code>rls</code>\uff1aRust language server</li> <li><code>rustfmt</code>\uff1aRust\u200b\u4ee3\u7801\u200b\u683c\u5f0f\u5316\u200b\u5de5\u5177\u200b</li> </ul>"},{"location":"coding/rust/0/#hello-world","title":"Hello, world!","text":"<p>  Download source code</p> <pre><code>fn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre> <p><code>println!</code>\u200b\u4e2d\u200b\u7684\u200b<code>!</code>\u200b\u8868\u793a\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u5b8f\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u3002\u200b\u5b8f\u662f\u200b\u4e00\u79cd\u200b\u5728\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u6267\u884c\u200b\u7684\u200b\u4ee3\u7801\u200b\u3002<code>println</code>\u200b\u6709\u200bPython\u200b\u4e2d\u200b<code>str.format</code>\u200b\u7c7b\u4f3c\u200b\u7684\u200b\u529f\u80fd\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6267\u884c\u200b\u5b57\u7b26\u4e32\u200b\u683c\u5f0f\u5316\u200b\u3002<code>print!</code>\u200b\u4e0e\u200b<code>println!</code>\u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u4f46\u662f\u200b\u4e0d\u4f1a\u200b\u5728\u200b\u7ed3\u5c3e\u200b\u6dfb\u52a0\u200b\u6362\u884c\u7b26\u200b\u3002</p> <pre><code>println!(\"{} days\", 31);\nprintln!(\"{0}, this is {1}. {1}, this is {0}\", \"Alice\", \"Bob\");\nprintln!(\"{greeting}, {name}!\", greeting=\"Hello\", name=\"world\");\n</code></pre>"},{"location":"coding/rust/0/#cargo","title":"Cargo","text":"<p>Cargo\u200b\u662f\u200bRust\u200b\u7684\u200b\u5305\u200b\u7ba1\u7406\u5668\u200b\u548c\u200b\u6784\u5efa\u200b\u5de5\u5177\u200b\u3002Cargo\u200b\u7684\u200b\u5de5\u4f5c\u200b\u65b9\u5f0f\u200b\u4e0e\u200bPython\u200b\u7684\u200b<code>pip</code>\u200b\u548c\u200b<code>setuptools</code>\u200b\u7c7b\u4f3c\u200b\u3002</p> <pre><code>cargo new # \u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200bRust\u200b\u9879\u76ee\u200b\ncargo init # \uff08\u200b\u5728\u200b\u5df2\u7ecf\u200b\u5b58\u5728\u200b\u7684\u200b\u76ee\u5f55\u200b\u4e2d\u200b\uff09\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200bRust\u200b\u9879\u76ee\u200b\ncargo build # \u200b\u7f16\u8bd1\u200b\u9879\u76ee\u200b\ncargo run # \u200b\u7f16\u8bd1\u200b\u5e76\u200b\u8fd0\u884c\u200b\u9879\u76ee\u200b\ncargo update # \u200b\u66f4\u65b0\u200bCargo.lock\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u4f9d\u8d56\u200b\ncargo doc # \u200b\u751f\u6210\u200b\u9879\u76ee\u200b\u6587\u6863\u200b\ncargo test # \u200b\u8fd0\u884c\u200b\u9879\u76ee\u200b\u6d4b\u8bd5\u200b\n\ncargo install ...\ncargo uninstall ...\n</code></pre> <p>Rust\u200b\u7684\u200b\u4ed3\u5e93\u200b\u662f\u200b<code>crates.io</code>\uff0c\u200b\u7c7b\u4f3c\u200b\u4e8e\u200bPython\u200b\u7684\u200b<code>PyPI</code>\u3002</p>"},{"location":"coding/rust/0/#_1","title":"\u5305\u4e0e\u200b\u6a21\u5757","text":"<p>Rust\u200b\u4e2d\u200b\u7684\u200b\u5305\u200b\u79f0\u4e3a\u200bcrate\u3002crate\u200b\u7684\u200b\u6839\u76ee\u5f55\u200b\u4e0b\u200b\u6709\u200b\u4e00\u4e2a\u200b<code>Cargo.toml</code>\u200b\u6587\u4ef6\u200b\uff0c\u200b\u5176\u4e2d\u200b\u5305\u542b\u200bcrate\u200b\u7684\u200b\u5143\u200b\u6570\u636e\u200b\u548c\u200b\u4f9d\u8d56\u200b\u3002Rust\u200b\u9879\u76ee\u200b\u7684\u200b\u6587\u4ef6\u200b\u7ed3\u6784\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>project\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 tests\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 benches\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 examples\n\u2502   \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 bin     // \u200b\u5176\u4ed6\u200b\u7684\u200b\u4e8c\u8fdb\u5236\u200b\u7a0b\u5e8f\u200b\n    \u251c\u2500\u2500 main.rs // \u200b\u9ed8\u8ba4\u200b\u7684\u200b\u4e8c\u8fdb\u5236\u200b\u7a0b\u5e8f\u200b\n    \u2514\u2500\u2500 lib.rs  // \u200b\u5e93\u5305\u200b\uff08\u200b\u53ea\u80fd\u200b\u6709\u200b\u4e00\u4e2a\u200b\uff09\n</code></pre> <p>Rust\u200b\u4e2d\u200b\u7684\u200b\u6a21\u5757\u200b\u7528\u200b<code>mod</code>\u200b\u5173\u952e\u5b57\u200b\u58f0\u660e\u200b\uff0c\u200b\u6a21\u5757\u200b\u53ef\u4ee5\u200b\u5d4c\u5957\u200b\u3002\u200b\u7528\u200b<code>use</code>\u200b\u5f15\u7528\u200b\u6a21\u5757\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>crate</code>\u200b\u5f00\u59cb\u200b\u7684\u200b\u7edd\u5bf9\u200b\u5f15\u7528\u200b\u8def\u5f84\u200b\u548c\u200b<code>self</code>\uff08\u200b\u672c\u200b\u6a21\u5757\u200b\uff09\u200b\u6216\u200b<code>super</code>\uff08\u200b\u7236\u200b\u6a21\u5757\u200b\uff09\u200b\u5f00\u59cb\u200b\u7684\u200b\u76f8\u5bf9\u200b\u5f15\u7528\u200b\u8def\u5f84\u200b\uff0c\u200b\u6216\u8005\u200b\u7528\u200b<code>*</code>\u200b\u5f15\u5165\u200b\u6a21\u5757\u200b\u7684\u200b\u6240\u6709\u200b\u5185\u5bb9\u200b\u3002\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u6a21\u5757\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u9879\u200b\u90fd\u200b\u662f\u200b\u79c1\u6709\u200b\u7684\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u88ab\u200b\u5916\u754c\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u9664\u975e\u200b\u7528\u200b<code>pub</code>\u200b\u5173\u952e\u5b57\u200b\u58f0\u660e\u200b\u4e3a\u200b\u516c\u6709\u200b\u3002\u200b\u516c\u6709\u200b\u6a21\u5757\u200b\u5185\u200b\u6240\u6709\u200b\u7684\u200b\u9879\u200b\u5fc5\u987b\u200b\u90fd\u200b\u7528\u200b<code>pub</code>\u200b\u58f0\u660e\u200b\u4e3a\u200b\u516c\u6709\u200b\u3002<code>pub</code>\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>(in &lt;module path&gt;)</code>\u200b\u8bed\u6cd5\u200b\u58f0\u660e\u200b\u5bf9\u8c61\u200b\u4ec5\u200b\u5728\u200b<code>&lt;module path&gt;</code>\u200b\u4e2d\u200b\u53ef\u89c1\u200b\u3002</p> <p>\u200b\u6bcf\u4e2a\u200b<code>.rs</code>\u200b\u6587\u4ef6\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u89c6\u4e3a\u200b\u4e00\u4e2a\u200b\u4ee5\u200b\u6587\u4ef6\u540d\u200b\u547d\u540d\u200b\u7684\u200b\u6a21\u5757\u200b\u3002\u200b\u5982\u679c\u200b\u8981\u200b\u628a\u200b\u6587\u4ef6\u5939\u200b\u4f5c\u4e3a\u200b\u6a21\u5757\u200b\uff0c\u200b\u5219\u200b\u5fc5\u987b\u200b\u5728\u200b\u6587\u4ef6\u5939\u200b\u4e2d\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b<code>mod.rs</code>\u200b\u6587\u4ef6\u200b\u6216\u200b\u4e0e\u200b\u6587\u4ef6\u5939\u200b\u540c\u540d\u200b\u7684\u200b<code>.rs</code>\u200b\u6587\u4ef6\u200b\uff0c\u200b\u5176\u4e2d\u200b\u58f0\u660e\u200b\u5bf9\u5916\u5f00\u653e\u200b\u7684\u200b\u9879\u200b\u3002</p> <p>\u200b\u5f53\u200b\u591a\u4e2a\u200b\u6a21\u5757\u200b\u4e2d\u200b\u5b58\u5728\u200b\u76f8\u540c\u200b\u540d\u79f0\u200b\u7684\u200b\u9879\u65f6\u200b\uff0c\u200b\u9700\u8981\u200b\u7528\u200b<code>\u200b\u6a21\u5757\u200b\u540d\u200b::\u200b\u9879\u540d\u200b</code>\u200b\u6765\u200b\u6307\u5b9a\u200b\u5177\u4f53\u200b\u7684\u200b\u9879\u200b\uff0c\u200b\u6216\u8005\u200b\u7528\u200b<code>as</code>\u200b\u58f0\u660e\u200b\u522b\u540d\u200b\u3002</p>"},{"location":"coding/rust/0/#_2","title":"\u6ce8\u91ca\u200b\u4e0e\u200b\u6587\u6863","text":"<p>Rust\u200b\u4e2d\u200b\u7684\u200b\u6ce8\u91ca\u200b\u4e0e\u200bC/C++\u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u7528\u200b<code>//</code>\u200b\u8868\u793a\u200b\u5355\u884c\u200b\u6ce8\u91ca\u200b\uff0c\u200b\u7528\u200b<code>/* */</code>\u200b\u8868\u793a\u200b\u591a\u884c\u200b\u6ce8\u91ca\u200b\u3002\u200b\u5176\u4e2d\u200b\uff0c\u200b\u5e38\u7528\u200b\u7684\u200b\u6ce8\u91ca\u200b\u65b9\u6cd5\u200b\u4e3a\u200b\uff1a</p> <ol> <li>\u200b\u5305\u200b\u6ce8\u91ca\u200b<code>//! ...</code>\u200b\u4e0e\u200b<code>/*! ... */</code>\uff1a()\u200b\u7528\u4e8e\u200b\u6574\u4e2a\u200b\u5305\u200b\u7684\u200b\u6ce8\u91ca\u200b\uff08Inner comments\uff09</li> <li>\u200b\u6587\u6863\u200b\u6ce8\u91ca\u200b<code>/// ...</code>\u200b\u4e0e\u200b<code>/** ... */</code>\uff1a\u200b\u7528\u4e8e\u200b\u6a21\u5757\u200b\u3001\u200b\u51fd\u6570\u200b\u3001\u200b\u7ed3\u6784\u200b\u4f53\u200b\u3001\u200b\u679a\u4e3e\u200b\u3001\u200b\u65b9\u6cd5\u200b\u548c\u200btrait\u200b\u7684\u200b\u6ce8\u91ca\u200b\uff08Outer comments\uff09</li> <li>\u200b\u901a\u5e38\u200b\u4e0d\u7528\u200b<code>/* */</code>\u200b\u6ce8\u91ca\u200b</li> </ol> <p>\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7528\u200bdoc attribute\u200b\u6765\u200b\u6ce8\u91ca\u200b\uff0c\u200b\u5176\u200b\u8bed\u6cd5\u200b\u4e3a\u200b<code>#![doc=...]</code>\u200b\u548c\u200b<code>#[doc=...]</code>\uff0c\u200b\u5206\u522b\u200b\u5bf9\u5e94\u200bOuter comments\u200b\u548c\u200bInner comments\u3002</p> <p>Rust\u200b\u652f\u6301\u200b\u5728\u200b\u6587\u6863\u200b\u4e2d\u200b\u8fdb\u884c\u200b\u6d4b\u8bd5\u200b\uff0c\u200b\u88ab\u200b\u6d4b\u8bd5\u200b\u7684\u200b\u51fd\u6570\u200b\u5fc5\u987b\u200b\u662f\u200b\u516c\u6709\u200b\u7684\u200b\u3002\u200b\u4ee5\u200b<code>#</code>\u200b\u5f00\u59cb\u200b\u7684\u200b\u884c\u200b\u8868\u793a\u200b\u8be5\u884c\u200b\u4e0d\u4f1a\u200b\u5728\u200b\u6587\u6863\u200b\u4e2d\u200b\u663e\u793a\u200b\uff0c\u200b\u53ea\u4f1a\u200b\u7528\u4e8e\u200b\u6d4b\u8bd5\u200b\u3002</p> <pre><code>// Assume the name of crate is `playground`\n\n/// ```rust\n/// assert_eq!(playground::add(1, 2), 3);\n/// ```\npub fn add(a: i32, b: i32) -&gt; i32 {\n    a + b\n}\n/// ```rust, should_panic\n/// // This function calls [`panic!`] macro.\n/// playground::panic_fn();\n/// ```\npub fn panic_fn() {\n    panic!();\n}\n</code></pre>"},{"location":"coding/rust/1/","title":"Variables","text":""},{"location":"coding/rust/1/#_1","title":"\u58f0\u660e","text":"<p>Rust\u200b\u4e2d\u200b\u7528\u4e8e\u200b\u58f0\u660e\u200b\u53d8\u91cf\u200b\u7684\u200b\u5173\u952e\u5b57\u200b\u662f\u200b<code>let</code>\uff0c\u200b\u5b83\u200b\u7684\u200b\u8bed\u6cd5\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>let [mut] &lt;variable&gt;[: &lt;type&gt;] [= &lt;value&gt;];\n</code></pre> <p>\u200b\u5176\u4e2d\u200b\uff0c\u200b\u7c7b\u578b\u200b\u548c\u200b\u521d\u59cb\u5316\u200b\u7684\u200b\u503c\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u7701\u7565\u200b\u3002\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b\u4ece\u200b\u58f0\u660e\u200b\u5f00\u59cb\u200b\u6ca1\u6709\u200b\u88ab\u200b\u8d4b\u503c\u200b\uff0c\u200b\u5c31\u200b\u4e0d\u80fd\u200b\u4f7f\u7528\u200b\u8fd9\u4e2a\u200b\u53d8\u91cf\u200b\u3002\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u6307\u5b9a\u200b\u7c7b\u578b\u200b\u4f46\u200b\u6307\u5b9a\u200b\u4e86\u200b\u521d\u59cb\u5316\u200b\u503c\u200b\uff0c\u200b\u7cfb\u7edf\u200b\u5219\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u63a8\u65ad\u200b\u53d8\u91cf\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002Rust\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>{}</code>\u200b\u6765\u200b\u7528\u200b\u4e00\u7cfb\u5217\u200b\u8bed\u53e5\u200b\u6765\u200b\u521d\u59cb\u5316\u200b\u53d8\u91cf\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>()</code>\u200b\u6765\u200b\u4e00\u6b21\u6027\u200b\u58f0\u660e\u200b\u591a\u4e2a\u200b\u53d8\u91cf\u200b\u3002\u200b\u6ca1\u6709\u200b\u7528\u200b<code>mut</code>\u200b\u58f0\u660e\u200b\u7684\u200b\u53d8\u91cf\u200b\u662f\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u7684\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u88ab\u200b\u4fee\u6539\u200b\u3002</p> <p>Rust\u200b\u4e2d\u200b\u7528\u4e8e\u200b\u58f0\u660e\u200b\u5e38\u91cf\u200b\u7684\u200b\u5173\u952e\u5b57\u200b\u662f\u200b<code>const</code>\uff0c\u200b\u7528\u4e8e\u200b\u58f0\u660e\u200b\u9759\u6001\u200b\u53d8\u91cf\u200b\u7684\u200b\u5173\u952e\u5b57\u200b\u662f\u200b<code>static</code>\u3002\u200b\u8bed\u6cd5\u200b\u4e0e\u200b<code>let</code>\u200b\u76f8\u4f3c\u200b\uff0c\u200b\u4f46\u200b\u9700\u8981\u200b\u540c\u65f6\u200b\u6307\u5b9a\u200b\u7c7b\u578b\u200b\u548c\u200b\u521d\u59cb\u5316\u200b\u503c\u200b\u3002\u200b\u901a\u5e38\u200b<code>const</code>\u200b\u548c\u200b<code>static</code>\u200b\u8bed\u53e5\u200b\u90fd\u200b\u662f\u200b\u5728\u200b\u5168\u5c40\u200b\u4f5c\u7528\u57df\u200b\uff08\u200b\u5373\u200b\u51fd\u6570\u200b\u5916\u200b\uff09\u200b\u4e2d\u200b\u58f0\u660e\u200b\u7684\u200b\u3002</p> <p><code>let</code>\u200b\u53ef\u4ee5\u200b\u7528\u6765\u200b\u91cd\u65b0\u200b\u58f0\u660e\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b\uff0c\u200b\u9690\u85cf\u200b\u4e4b\u524d\u200b\u7684\u200b\u53d8\u91cf\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>mut</code>\u200b\u6765\u200b\u6539\u53d8\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b\u7684\u200b\u53ef\u53d8\u6027\u200b\u3002</p> <p>  Download source code</p> <pre><code>fn main() {\n    let x: f64 = -20.48; // float\n    let x: i64 = x.floor() as i64; // int\n    println!(\"{}\", x); // -21\n\n    let s: &amp;str = \"hello\"; // &amp;str\n    let s: String = s.to_uppercase(); // String\n    println!(\"{}\", s) // HELLO\n}\n</code></pre>"},{"location":"coding/rust/1/#_2","title":"\u53d8\u91cf\u200b\u7c7b\u578b","text":"<p>Rust\u200b\u7684\u200b\u53d8\u91cf\u200b\u7c7b\u578b\u200b\u6709\u200b</p> <ul> <li>\u200b\u4e00\u822c\u200b\u7c7b\u578b\u200b<ul> <li>\u200b\u5e03\u5c14\u200b\uff1a<code>bool</code>\uff0c\u200b\u53d6\u503c\u200b\u4e3a\u200b<code>true</code>\u200b\u6216\u200b<code>false</code>\uff0c\u200b\u5360\u7528\u200b1\u200b\u4e2a\u200b\u5b57\u8282\u200b\u3002</li> <li>\u200b\u5b57\u7b26\u200b\uff1a<code>char</code>\uff0c\u200b\u4f7f\u7528\u200b\u5355\u5f15\u53f7\u200b\uff0c\u200b\u5360\u7528\u200b4\u200b\u4e2a\u200b\u5b57\u8282\u200b\u3002</li> <li>\u200b\u6574\u6570\u200b\uff1a<code>i8</code>\uff5e<code>i128</code>\u200b\u548c\u200b<code>isize</code>\uff0c\u200b\u53d6\u503c\u200b\u8303\u56f4\u200b\u4e3a\u200b\\([-2^{n-1}, 2^{n-1} - 1]\\)\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>min_value()</code>\u200b\u548c\u200b<code>max_value()</code>\u200b\u51fd\u6570\u200b\u6765\u200b\u83b7\u53d6\u200b\u7c7b\u578b\u200b\u7684\u200b\u53d6\u503c\u200b\u8303\u56f4\u200b\u3002<code>isize</code>\u200b\u7684\u200b\u53d6\u503c\u200b\u8303\u56f4\u200b\u548c\u200b\u7cfb\u7edf\u200b\u6307\u9488\u200b\u957f\u5ea6\u200b\u76f8\u540c\u200b\u3002\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u6574\u6570\u200b\u7c7b\u578b\u200b\u662f\u200b<code>i32</code>\u3002</li> <li>\u200b\u65e0\u200b\u7b26\u53f7\u200b\u6574\u6570\u200b\uff1a<code>u8</code>\uff5e<code>u128</code>\u200b\u548c\u200b<code>usize</code>\uff0c\u200b\u53d6\u503c\u200b\u8303\u56f4\u200b\u4e3a\u200b\\([0, 2^n - 1]\\)\u3002</li> <li>\u200b\u6d6e\u70b9\u6570\u200b\uff1a<code>f32</code>\u200b\u548c\u200b<code>f64</code>\uff0c\u200b\u5206\u522b\u200b\u4e3a\u200b\u5355\u7cbe\u5ea6\u200b\u548c\u200b\u53cc\u200b\u7cbe\u5ea6\u200b\u6d6e\u70b9\u6570\u200b\u3002\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u6d6e\u70b9\u6570\u200b\u7c7b\u578b\u200b\u662f\u200b<code>f64</code>\u3002</li> <li>\u200b\u5b57\u7b26\u4e32\u200b\u5b57\u9762\u200b\u91cf\u200b\uff1a<code>str</code>\uff0c\u200b\u4f7f\u7528\u200b\u53cc\u5f15\u53f7\u200b\uff0c\u200b\u662f\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u7c7b\u578b\u200b\u3002\u200b\u5b57\u7b26\u4e32\u200b\u5b57\u9762\u200b\u91cf\u200b\uff08\u200b\u53d8\u91cf\u200b\uff09\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>&amp;str</code>\uff0c\u200b\u662f\u200b\u5f15\u7528\u200b\u7c7b\u578b\u200b\u3002</li> <li>\u200b\u5b57\u7b26\u4e32\u200b\uff1a<code>String</code>\uff0c\u200b\u662f\u200b\u53ef\u53d8\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u200b\u652f\u6301\u200b\u7d22\u5f15\u200b\u3002\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5f15\u7528\u200b\u6216\u200b\u5207\u7247\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>&amp;str</code>\u3002</li> <li>\u200b\u5355\u5143\u200b\u7c7b\u578b\u200b\uff1a<code>()</code>\uff0c\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u503c\u200b<code>()</code>\uff0c\u200b\u6ca1\u6709\u200b<code>return</code>\u200b\u8bed\u53e5\u200b\u7684\u200b\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>()</code>\uff0c\u200b\u4e0d\u200b\u5360\u7528\u200b\u5185\u5b58\u200b\u3002</li> </ul> </li> <li>\u200b\u5bb9\u5668\u200b\u53ca\u200b\u76f8\u5173\u200b\u7c7b\u578b\u200b<ul> <li>\u200b\u4f7f\u7528\u200b<code>println!</code>\u200b\u6253\u5370\u200b\u5bb9\u5668\u200b\u65f6\u200b\uff0c\u200b\u9700\u8981\u200b\u7528\u200b<code>{:?}</code>\u200b\u6216\u200b<code>{:#?}</code>\uff0c\u200b\u524d\u8005\u200b\u4e3a\u200b\u4e00\u884c\u200b\u8f93\u51fa\u200b\uff0c\u200b\u540e\u8005\u200b\u5728\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u540e\u9762\u200b\u6dfb\u52a0\u200b\u6362\u884c\u7b26\u200b\u3002</li> <li>\u200b\u5b9a\u200b\u957f\u200b\u6570\u7ec4\u200b\uff1a<code>[T; N]</code>\uff0c\u200b\u5176\u4e2d\u200b<code>T</code>\u200b\u4e3a\u200b\u6570\u7ec4\u200b\u5143\u7d20\u200b\u7c7b\u578b\u200b\u6216\u200b\u91cd\u590d\u200b\u7684\u200b\u6570\u7ec4\u200b\uff0c<code>N</code>\u200b\u4e3a\u200b\u6570\u7ec4\u200b\u957f\u5ea6\u200b\uff0c\u200b\u5fc5\u987b\u200b\u662f\u200b\u5e38\u91cf\u200b\u3002\u200b\u53ea\u6709\u200b\u7528\u200b<code>mut</code>\u200b\u58f0\u660e\u200b\u7684\u200b\u6570\u7ec4\u200b\u624d\u80fd\u200b\u4fee\u6539\u200b\u5176\u4e2d\u200b\u5143\u7d20\u200b\u3002<ul> <li>\u200b\u6ce8\u610f\u200b\u4e0d\u200b\u652f\u6301\u200b<code>Copy</code> trait\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e0d\u80fd\u200b\u7528\u200b<code>[T; N]</code>\u200b\u8bed\u6cd5\u200b\uff0c\u200b\u5fc5\u987b\u200b\u9010\u4e2a\u200b\u8d4b\u503c\u200b\u3002</li> <li>\u200b\u4e0d\u540c\u200b\u957f\u5ea6\u200b\u7684\u200b\u6570\u7ec4\u200b\u662f\u200b\u4e0d\u540c\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u76f8\u4e92\u200b\u8d4b\u503c\u200b\u3002</li> </ul> </li> <li>\u200b\u5b9a\u200b\u957f\u200b\u5143\u7ec4\u200b\uff1a<code>(T1, T2, ..., Tn)</code>\uff0c\u200b\u5176\u4e2d\u200b<code>T1</code>\uff5e<code>Tn</code>\u200b\u4e3a\u200b\u5143\u7ec4\u200b\u4e2d\u200b\u5143\u7d20\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002\u200b\u53ea\u6709\u200b\u7528\u200b<code>mut</code>\u200b\u58f0\u660e\u200b\u7684\u200b\u5143\u7ec4\u200b\u624d\u80fd\u200b\u4fee\u6539\u200b\u5176\u4e2d\u200b\u5143\u7d20\u200b\uff08\u200b\u7c7b\u578b\u200b\u5fc5\u987b\u200b\u5339\u914d\u200b\uff09\u3002\u200b\u7c7b\u4f3c\u200b\u4e8e\u200bPython\uff0c\u200b\u5728\u200b\u53d8\u91cf\u200b\u58f0\u660e\u200b\u9636\u6bb5\u200b\u6216\u200b\u8d4b\u503c\u200b\u9636\u6bb5\u200b\uff0c\u200b\u4ec5\u200b\u5305\u542b\u200b\uff08\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u8d4b\u503c\u200b\u7684\u200b\uff09\u200b\u53d8\u91cf\u200b\u5143\u7ec4\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u8d4b\u503c\u200b\u8fd0\u7b97\u200b\u7684\u200b\u5de6\u7aef\u200b\u9879\u200b\uff0c\u200b\u6b64\u65f6\u200b\u4f1a\u200b\u5206\u522b\u200b\u4e3a\u200b\u6bcf\u4e2a\u200b\u53d8\u91cf\u200b\u5206\u914d\u200b\u5bf9\u5e94\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u7701\u7565\u200b\u7684\u200b\u53d8\u91cf\u200b\u7528\u200b<code>_</code>\u200b\u8868\u793a\u200b\u3002\u200b\u5143\u7ec4\u200b\u652f\u6301\u200b\u5d4c\u5957\u200b\u3002\u200b\u5355\u200b\u5143\u7d20\u200b\u5143\u7ec4\u200b\u7684\u200b\u8bed\u6cd5\u200b\u4e3a\u200b<code>(&lt;value&gt;,)</code>\u3002</li> <li>\u200b\u6570\u7ec4\u200b\u5207\u7247\u200b\uff1a<code>&amp;&lt;parent&gt;[&lt;start&gt;..&lt;end&gt;]</code>\uff0c\u200b\u6ce8\u610f\u200b\u5207\u7247\u200b\u662f\u200b\u5bf9\u200b<code>&lt;parent&gt;</code>\u200b\u7684\u200b\u5f15\u7528\u200b\uff0c\u200b\u662f\u200b\u5f15\u7528\u200b\u7c7b\u578b\u200b\u3002\u200b\u5143\u7ec4\u200b\u4e0d\u200b\u652f\u6301\u200b\u5207\u7247\u200b\uff0c\u200b\u53ea\u80fd\u200b\u7528\u200b<code>.0</code>\u3001<code>.1</code>\u200b\u7b49\u200b\u6765\u200b\u8bbf\u95ee\u200b\u5143\u7d20\u200b\uff0c\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>[T]</code>\u3002</li> </ul> </li> <li>\u200b\u8fed\u4ee3\u200b\u5668\u200b\uff0c\u200b\u901a\u5e38\u200b\u7531\u200b\u5bb9\u5668\u200b\u5bf9\u8c61\u200b\u7684\u200b<code>iter()</code>\u200b\u65b9\u6cd5\u200b\u751f\u6210\u200b\u3002</li> <li>\u200b\u51fd\u6570\u200b\uff1a\u200b\u9700\u8981\u200b\u7528\u200b<code>fn(arg1: type1, ...) -&gt; return_type</code>\u200b\u8868\u793a\u200b\uff0c\u200b\u51fd\u6570\u200b\u4ee5\u200b\u5f15\u7528\u200b\u7684\u200b\u65b9\u5f0f\u200b\u4f20\u9012\u200b\u3002</li> </ul>"},{"location":"coding/rust/1/#_3","title":"\u6574\u6570\u200b\u7c7b\u578b","text":"<p>Rust\u200b\u4e2d\u200b\u7684\u200b\u6574\u6570\u200b\u5b57\u9762\u200b\u91cf\u200b\u6709\u200b\u5982\u4e0b\u200b\u5199\u6cd5\u200b\uff1a</p> <ul> <li>\u200b\u5341\u8fdb\u5236\u200b\uff1a<code>123_456</code></li> <li>\u200b\u5341\u516d\u8fdb\u5236\u200b\uff1a<code>0x123</code>\uff0c<code>0x</code>\u200b\u5f00\u5934\u200b\uff0c\u200b\u6570\u5b57\u200b\u4e3a\u200b<code>0-9</code>\u200b\u548c\u200b<code>a-f</code></li> <li>\u200b\u516b\u8fdb\u5236\u200b\uff1a<code>0o123</code>\uff0c<code>0o</code>\u200b\u5f00\u5934\u200b\uff0c\u200b\u6570\u5b57\u200b\u4e3a\u200b<code>0-7</code></li> <li>\u200b\u4e8c\u8fdb\u5236\u200b\uff1a<code>0b101</code>\uff0c<code>0b</code>\u200b\u5f00\u5934\u200b\uff0c\u200b\u6570\u5b57\u200b\u4e3a\u200b<code>0</code>\u200b\u548c\u200b<code>1</code></li> <li>\u200b\u5b57\u8282\u200b\uff1a<code>b'A'</code></li> <li>\u200b\u4e0b\u5212\u7ebf\u200b<code>_</code>\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\u5343\u4f4d\u200b\u5206\u9694\u7b26\u200b\uff0c\u200b\u5b58\u5728\u200b\u4e0e\u5426\u200b\u4e0d\u200b\u5f71\u54cd\u200b\u6570\u5b57\u200b\u7684\u200b\u503c\u200b</li> </ul> <p>\u200b\u6574\u6570\u200b\u6ea2\u51fa\u200b</p> <p>\u200b\u5728\u200bDebug\u200b\u6a21\u5f0f\u200b\u4e0b\u200b\uff0cRust\u200b\u4f1a\u200b\u68c0\u67e5\u200b\u6574\u6570\u200b\u6ea2\u51fa\u200b\uff0c\u200b\u5982\u679c\u200b\u53d1\u751f\u200b\u6ea2\u51fa\u200b\uff0c\u200b\u7a0b\u5e8f\u200b\u4f1a\u200bpanic\u3002\u200b\u5728\u200bRelease\u200b\u6a21\u5f0f\u200b\u4e0b\u200b\uff0cRust\u200b\u4e0d\u4f1a\u200b\u68c0\u67e5\u200b\u6574\u6570\u200b\u6ea2\u51fa\u200b\uff0c\u200b\u6ea2\u51fa\u200b\u540e\u200b\u4f1a\u200b\u6309\u7167\u200b\u4e8c\u8fdb\u5236\u200b\u8865\u7801\u200b\u8fdb\u884c\u200b\u5faa\u73af\u200b\u3002</p> <p>\u200b\u6574\u6570\u200b\u7c7b\u578b\u200b\u6709\u200b\u5982\u4e0b\u200b\u65b9\u6cd5\u200b\uff1a</p> <ul> <li>\u200b\u4e0b\u6587\u200b\u4e2d\u200b\u7684\u200b<code>*</code>\u200b\u6307\u200b<code>add</code>\u3001<code>sub</code>\u3001<code>mul</code>\u3001<code>div</code>\u200b\u7b49\u200b\u8fd0\u7b97\u200b</li> <li><code>wrapping_*</code>\uff1a\u200b\u5982\u679c\u200b\u8fd0\u7b97\u200b\u6ea2\u51fa\u200b\uff0c\u200b\u5219\u200b\u53d6\u200b\u6ea2\u51fa\u200b\u540e\u200b\u7684\u200b\u503c\u200b\u3002</li> <li><code>checked_*</code>\uff1a\u200b\u5982\u679c\u200b\u8fd0\u7b97\u200b\u6ea2\u51fa\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b<code>None</code>\u3002</li> <li><code>saturating_*</code>\uff1a\u200b\u5982\u679c\u200b\u8fd0\u7b97\u200b\u6ea2\u51fa\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b\u76ee\u6807\u200b\u7c7b\u578b\u200b\u7684\u200b\u6700\u5927\u503c\u200b\u6216\u200b\u6700\u5c0f\u503c\u200b\u3002</li> <li> <p><code>overflowing_*</code>\uff1a\u200b\u8fd4\u56de\u200b\u8fd0\u7b97\u200b\u7ed3\u679c\u200b\u548c\u200b\u662f\u5426\u200b\u6ea2\u51fa\u200b\u7684\u200b\u6807\u8bb0\u200b</p> <pre><code>let a: i32 = 1;\nlet b: i32 = 2;\nlet (c, overflow) = a.overflowing_add(b);\nprintln!(\"{} {}\", c, overflow); // 3 false\n</code></pre> </li> </ul>"},{"location":"coding/rust/1/#_4","title":"\u6d6e\u70b9\u6570\u200b\u7c7b\u578b","text":"<ol> <li>\u200b\u6d6e\u70b9\u6570\u200b\u6ca1\u6709\u200b\u5b9e\u73b0\u200b<code>Eq</code> trait\uff0c\u200b\u56e0\u6b64\u200b\u4e0d\u80fd\u200b\u76f4\u63a5\u200b\u7528\u200b<code>==</code>\u200b\u548c\u200b<code>!=</code>\u200b\u6765\u200b\u6bd4\u8f83\u200b\uff0c\u200b\u4e5f\u200b\u4e0d\u80fd\u200b\u4f5c\u4e3a\u200b\u5b57\u5178\u200b\u7684\u200b\u952e\u200b\u3002</li> <li>\u200b\u6570\u5b66\u200b\u4e0a\u200b\u65e0\u200b\u5b9a\u4e49\u200b\u7684\u200b\u8fd0\u7b97\u200b\uff0c\u200b\u5982\u200b<code>0.0 / 0.0</code>\uff0cRust\u200b\u4f1a\u200b\u8fd4\u56de\u200b<code>NaN</code>\uff08Not a Number\uff09\u3002\u200b\u4e0e\u200b<code>NaN</code>\u200b\u7684\u200b\u8fd0\u7b97\u200b\u7ed3\u679c\u200b\u603b\u662f\u200b<code>NaN</code>\uff0c\u200b\u5e76\u4e14\u200b<code>NaN</code>\u200b\u4e0d\u80fd\u200b\u53c2\u4e0e\u200b\u6bd4\u8f83\u200b\u8fd0\u7b97\u200b\u3002</li> <li>\u200b\u7531\u4e8e\u200b<code>NaN</code>\u200b\u7684\u200b\u5b58\u5728\u200b\uff0c\u200b\u6d6e\u70b9\u6570\u200b\u6ca1\u6709\u200b\u5b9e\u73b0\u200b<code>Ord</code> trait\uff0c\u200b\u56e0\u6b64\u200b\u4e0d\u80fd\u200b\u76f4\u63a5\u200b\u7528\u4e8e\u200b<code>sort()</code>\u200b\u7b49\u200b\u9700\u8981\u200b<code>Ord</code> trait\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u9700\u8981\u200b\u7528\u200b<code>partial_cmp().unwrap()</code>\u200b\u6765\u200b\u8fdb\u884c\u200b\u6bd4\u8f83\u200b\u3002</li> <li>\u200b\u7531\u4e8e\u200b\u6d6e\u70b9\u6570\u200b\u7684\u200b\u7cbe\u5ea6\u200b\u95ee\u9898\u200b\uff0c\u200b\u6d6e\u70b9\u6570\u200b\u7684\u200b\u6bd4\u8f83\u200b\u5e94\u8be5\u200b\u7528\u200b<code>abs()</code>\u200b\u548c\u200b<code>&lt;</code>\u3001<code>&gt;</code>\u200b\u6765\u200b\u8fdb\u884c\u200b\u3002</li> </ol> <p>\u200b\u6d6e\u70b9\u6570\u200b\u7c7b\u578b\u200b\u6709\u200b\u5982\u4e0b\u200b\u65b9\u6cd5\u200b\uff1a</p> <ul> <li><code>is_nan()</code>\uff1a\u200b\u5224\u65ad\u200b\u662f\u5426\u200b\u4e3a\u200b<code>NaN</code>\u3002</li> </ul>"},{"location":"coding/rust/1/#_5","title":"\u5b57\u7b26\u4e32\u200b\u5b57\u9762\u200b\u91cf\u200b\u7c7b\u578b","text":"<p>\u200b\u5b57\u7b26\u4e32\u200b\u5b57\u9762\u200b\u91cf\u200b\u7c7b\u578b\u200b\u6709\u200b\u5982\u4e0b\u200b\u65b9\u6cd5\u200b\uff1a</p> <ul> <li> <p><code>len()</code>\uff1a\u200b\u8fd4\u56de\u200b\u5b57\u7b26\u4e32\u200b\u957f\u5ea6\u200b\u3002</p> <pre><code>let s = \"hello\";\nprintln!(\"{}\", s.len()); // 5\n</code></pre> </li> <li> <p><code>lines()</code>\uff1a\u200b\u6309\u200b\u6362\u884c\u7b26\u200b<code>\\n</code>\u200b\u5206\u5272\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u8fd4\u56de\u200b\u8fed\u4ee3\u200b\u5668\u200b\u3002</p> <pre><code>let s = \"hello\\nworld\";\nfor line in s.lines() {\n    println!(\"{}\", line);\n}\n</code></pre> </li> <li> <p><code>split()</code>\uff1a\u200b\u6309\u200b\u7ed9\u5b9a\u200b\u5b57\u7b26\u200b\u5206\u5272\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u8fd4\u56de\u200b\u8fed\u4ee3\u200b\u5668\u200b\u3002</p> <pre><code>let s = \"hello world\";\nfor word in s.split(\" \") {\n    println!(\"{}\", word);\n}\n</code></pre> </li> <li> <p><code>trim()</code>\uff1a\u200b\u53bb\u9664\u200b\u5b57\u7b26\u4e32\u200b\u9996\u5c3e\u200b\u7684\u200b\u7a7a\u767d\u200b\u5b57\u7b26\u200b\u3002</p> <pre><code>let s = \" hello world \";\nprintln!(\"{}\", s.trim()); // \"hello world\"\n</code></pre> </li> <li> <p><code>parse()</code>\uff1a\u200b\u5c06\u200b\u5b57\u7b26\u4e32\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u5176\u4ed6\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5982\u200b<code>parse::&lt;i32&gt;()</code>\u200b\u5c06\u200b\u5b57\u7b26\u4e32\u200b\u8f6c\u6362\u200b\u4e3a\u200b<code>i32</code>\u200b\u7c7b\u578b\u200b\u3002\u200b\u5f53\u200b\u8f6c\u4e3a\u200b\u6570\u5b57\u200b\u65f6\u200b\uff0c\u200b\u6570\u5b57\u200b\u4e0d\u80fd\u200b\u8d85\u8fc7\u200b\u7c7b\u578b\u200b\u7684\u200b\u53d6\u503c\u200b\u8303\u56f4\u200b\uff0c\u200b\u5426\u5219\u200b\u4f1a\u200b\u62a5\u9519\u200b\u3002</p> <pre><code>let s = \"123\";\nlet n: i32 = s.parse().unwrap(); // \u200b\u8fd4\u56de\u503c\u200b\u662f\u200b`Result`\u200b\u7c7b\u578b\u200b\n</code></pre> <p>\u200b\u81ea\u5b9a\u4e49\u200b\u7c7b\u578b\u200b\u5982\u679c\u200b\u9700\u8981\u200b\u901a\u8fc7\u200b<code>parse()</code>\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u9700\u8981\u200b\u5b9e\u73b0\u200b<code>std::str::FromStr</code> trait\uff0c\u200b\u53c2\u89c1\u200bImpl &amp; Trait</p> </li> <li> <p><code>to_string()</code>\uff1a\u200b\u5c06\u200b\u5b57\u7b26\u4e32\u200b\u5b57\u9762\u200b\u91cf\u200b\u8f6c\u6362\u200b\u4e3a\u200b<code>String</code>\u200b\u7c7b\u578b\u200b\u3002</p> </li> <li><code>chars()</code>\uff1a\u200b\u8fd4\u56de\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5b57\u7b26\u200b\u8fed\u4ee3\u200b\u5668\u200b\u3002</li> <li><code>bytes()</code>\uff1a\u200b\u8fd4\u56de\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5b57\u8282\u200b\u8fed\u4ee3\u200b\u5668\u200b\u3002</li> </ul>"},{"location":"coding/rust/1/#_6","title":"\u5b57\u7b26\u4e32\u200b\u7c7b\u578b","text":"<p>\u200b\u5b57\u7b26\u4e32\u200b\u7c7b\u578b\u200b\u6709\u200b\u5982\u4e0b\u200b\u65b9\u6cd5\u200b\uff1a</p> <ul> <li><code>push()</code>\u3001<code>push_str()</code>\uff1a\u200b\u5206\u522b\u200b\u7528\u4e8e\u200b\u5728\u200b\u5b57\u7b26\u4e32\u200b\u672b\u5c3e\u200b\u6dfb\u52a0\u200b\u5b57\u7b26\u200b\u548c\u200b\u5b57\u7b26\u4e32\u200b\u5b57\u9762\u200b\u91cf\u200b\u3002</li> <li><code>insert()</code>\u3001<code>insert_str()</code>\uff1a\u200b\u5206\u522b\u200b\u7528\u4e8e\u200b\u5728\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u7684\u200b\u6307\u5b9a\u200b\u4f4d\u7f6e\u200b\u63d2\u5165\u200b\u5b57\u7b26\u200b\u548c\u200b\u5b57\u7b26\u4e32\u200b\u5b57\u9762\u200b\u91cf\u200b\u3002</li> <li><code>replace(A, B)</code>\u3001<code>replacen(A, B, n)</code>\uff1a\u200b\u5206\u522b\u200b\u7528\u4e8e\u200b\u5c06\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u7684\u200b<code>A</code>\u200b\u66ff\u6362\u200b\u4e3a\u200b<code>B</code>\uff0c<code>replacen</code>\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u6307\u5b9a\u200b\u66ff\u6362\u200b\u6b21\u6570\u200b<code>n</code>\uff0c\u200b\u8fd4\u56de\u200b\u66ff\u6362\u200b\u540e\u200b\u7684\u200b\u65b0\u200b\u5b57\u7b26\u4e32\u200b\u3002</li> <li><code>replace_range(range, A)</code>\uff1a\u200b\u7528\u4e8e\u200b\u5c06\u200b\u539f\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u6307\u5b9a\u200b\u8303\u56f4\u200b\u66ff\u6362\u200b\u4e3a\u200b\u65b0\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b<code>A</code>\uff0c\u200b\u8fd4\u56de\u200b\u66ff\u6362\u200b\u540e\u200b\u7684\u200b\u539f\u200b\u5b57\u7b26\u4e32\u200b\u3002</li> <li><code>pop()</code>\uff1a\u200b\u5220\u9664\u200b\u5e76\u200b\u8fd4\u56de\u200b\u5b57\u7b26\u4e32\u200b\u672b\u5c3e\u200b\u7684\u200b\u5b57\u7b26\u200b\uff0c\u200b\u5982\u679c\u200b\u5b57\u7b26\u4e32\u200b\u4e3a\u200b\u7a7a\u5219\u200b\u8fd4\u56de\u200b<code>None</code>\u3002</li> <li><code>remove()</code>\uff1a\u200b\u5220\u9664\u200b\u5e76\u200b\u8fd4\u56de\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u6307\u5b9a\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u5b57\u7b26\u200b\u3002\u200b\u7ed9\u5b9a\u200b\u7684\u200b\u7d22\u5f15\u200b\u5fc5\u987b\u200b\u662f\u200b\u6709\u6548\u200b\u7684\u200b\u5b57\u7b26\u200b\u8fb9\u754c\u200b\u3002</li> <li><code>truncate()</code>\uff1a\u200b\u5220\u9664\u200b\u4ece\u200b\u6307\u5b9a\u200b\u4f4d\u7f6e\u200b\u5f00\u59cb\u200b\u5230\u200b\u5b57\u7b26\u4e32\u200b\u7ed3\u5c3e\u200b\u7684\u200b\u5168\u90e8\u200b\u5b57\u7b26\u200b\u3002</li> <li><code>clear()</code>\uff1a\u200b\u6e05\u7a7a\u200b\u5b57\u7b26\u4e32\u200b\u3002</li> <li><code>+</code>\u200b\u8fd0\u7b97\u7b26\u200b\uff1a\u200b\u7528\u4e8e\u200b\u8fde\u63a5\u200b\u4e24\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u53f3\u7aef\u200b\u9879\u4e3a\u200b<code>&amp;str</code>\u200b\u7c7b\u578b\u200b\u3002</li> </ul>"},{"location":"coding/rust/1/#_7","title":"\u6570\u7ec4\u200b\u7c7b\u578b","text":"<p>\u200b\u6570\u7ec4\u200b\u8d8a\u754c\u200b</p> <p>Rust\u200b\u4f1a\u200b\u68c0\u67e5\u200b\u6570\u7ec4\u200b\u8bbf\u95ee\u200b\u8d8a\u754c\u200b\u95ee\u9898\u200b\u3002</p> <p>\u200b\u6570\u7ec4\u200b\u7c7b\u578b\u200b\u6709\u200b\u5982\u4e0b\u200b\u65b9\u6cd5\u200b\uff1a</p> <ul> <li> <p><code>std::array::from_fn()</code>\uff1a\u200b\u6839\u636e\u200b\u51fd\u6570\u200b\u8fd4\u56de\u503c\u200b\u751f\u6210\u200b\u6570\u7ec4\u200b\u3002</p> <pre><code>let a: [String; 8] = std::array::from_fn(|_i| String::from(\"This is Rust\"));\n</code></pre> </li> </ul>"},{"location":"coding/rust/1/#_8","title":"\u8fed\u4ee3\u200b\u5668\u200b\u7c7b\u578b","text":"<p>\u200b\u8fed\u4ee3\u200b\u5668\u200b\u7c7b\u578b\u200b\u6709\u200b\u5982\u4e0b\u200b\u65b9\u6cd5\u200b\uff1a</p> <ul> <li> <p><code>map(fn)</code>\uff1a\u200b\u5bf9\u200b\u8fed\u4ee3\u200b\u5668\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u5e94\u7528\u200b\u51fd\u6570\u200b<code>fn</code>\uff0c\u200b\u8fd4\u56de\u200b\u65b0\u200b\u7684\u200b\u8fed\u4ee3\u200b\u5668\u200b\u3002</p> <pre><code>let v = vec![1, 2, 3];\nfor i in v.iter().map(|x| x * 2) {\n    print!(\"{}\", i); // 246\n}\n</code></pre> </li> <li> <p><code>collect()</code>\uff1a\u200b\u5c06\u200b\u8fed\u4ee3\u200b\u5668\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u5bb9\u5668\u200b\uff08\u200b\u5b9a\u200b\u957f\u200b\u6570\u7ec4\u200b\uff09\u3002</p> <pre><code>let v = vec![1, 2, 3];\nlet v2: Vec&lt;i32&gt; = v.iter().map(|x| x * 2).collect();\n</code></pre> </li> </ul>"},{"location":"coding/rust/1/#_9","title":"\u8fd0\u7b97\u7b26","text":"<p>Rust\u200b\u7684\u200b\u8fd0\u7b97\u7b26\u200b\u4e0e\u200bC/C++\u200b\u7c7b\u4f3c\u200b</p> <ul> <li>\u200b\u56db\u5219\u8fd0\u7b97\u200b\u7b26\u200b\uff1a<code>+ - * / %</code></li> <li>\u200b\u6bd4\u8f83\u200b\u8fd0\u7b97\u7b26\u200b\uff1a<code>== != &gt; &lt; &gt;= &lt;=</code></li> <li>\u200b\u903b\u8f91\u200b\u8fd0\u7b97\u7b26\u200b\uff1a<code>&amp;&amp; || !</code></li> <li>\u200b\u4f4d\u200b\u8fd0\u7b97\u7b26\u200b\uff1a<code>&amp; | ^ &lt;&lt; &gt;&gt; !</code>\uff08<code>!</code>\u200b\u4e3a\u200b\u6309\u4f4d\u200b\u53d6\u53cd\u200b\uff09</li> <li>\u200b\u539f\u4f4d\u200b\u8d4b\u503c\u200b\u8fd0\u7b97\u7b26\u200b\uff1a<code>+= -= *= /= %= &amp;= |= ^= &lt;&lt;= &gt;&gt;=</code>\u200b\u7b49\u200b</li> <li>\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u8fd0\u7b97\u7b26\u200b\uff1a<code>as</code>\uff0c\u200b\u5982\u200b<code>let b = (a as f64) / 2.0;</code></li> <li>\u200b\u5f15\u7528\u200b\u4e0e\u200b\u89e3\u200b\u5f15\u7528\u200b\u8fd0\u7b97\u7b26\u200b\uff1a<code>&amp; &amp;mut *</code>\uff0c\u200b\u5176\u4e2d\u200b<code>&amp;</code>\u200b\u7528\u4e8e\u200b\u83b7\u53d6\u200b\u53d8\u91cf\u200b\u7684\u200b\u5f15\u7528\u200b\uff08borrow\uff09\uff0c<code>&amp;mut</code>\u200b\u7528\u4e8e\u200b\u83b7\u53d6\u200b\u53d8\u91cf\u200b\u7684\u200b\u53ef\u53d8\u200b\u5f15\u7528\u200b\uff0c<code>*</code>\u200b\u7528\u4e8e\u200b\u89e3\u200b\u5f15\u7528\u200b\u3002</li> </ul>"},{"location":"coding/rust/2/","title":"Control Flows","text":"<p>\u200b\u672c\u200b\u8282\u200b\u4ecb\u7ecd\u200bRust\u200b\u4e2d\u200b\u7684\u200b\u51fd\u6570\u200b\u548c\u200b\u63a7\u5236\u6d41\u200b\u8bed\u53e5\u200b\u3002</p>"},{"location":"coding/rust/2/#_1","title":"\u51fd\u6570\u200b\u4e0e\u200b\u51fd\u6570\u6307\u9488","text":"<p>Rust\u200b\u4e2d\u200b\uff0c\u200b\u7528\u200b\u5173\u952e\u5b57\u200b<code>fn</code>\u200b\u58f0\u660e\u200b\u51fd\u6570\u200b\uff0c\u200b\u51fd\u6570\u200b\u7684\u200b\u683c\u5f0f\u200b\u4e3a\u200b\uff1a</p> <pre><code>fn &lt;function name&gt;([&lt;parameter name&gt;: &lt;parameter type&gt;, ...]) -&gt; [&lt;return type&gt;] {\n    &lt;function body&gt;\n}\n</code></pre> <p>\u200b\u5176\u4e2d\u200b\uff0c\u200b\u51fd\u6570\u200b\u5fc5\u987b\u200b\u6307\u660e\u200b\u6240\u6709\u200b\u53c2\u6570\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u6307\u660e\u200b\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5219\u200b\u9ed8\u8ba4\u200b\u4e3a\u200b<code>()</code>\uff0c\u200b\u5373\u7a7a\u200b\u5143\u7ec4\u200b\u3002\u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b<code>return</code>\u200b\u5173\u952e\u5b57\u200b\u8fd4\u56de\u503c\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u6700\u540e\u200b\u4e00\u884c\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\u8fd4\u56de\u503c\u200b\u3002\u200b\u4efb\u4f55\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u5982\u679c\u200b\u901a\u8fc7\u200b\u8868\u8fbe\u5f0f\u200b\u8fd4\u56de\u503c\u200b\uff0c\u200b\u5219\u200b\u4e0d\u80fd\u200b\u52a0\u5206\u200b\u53f7\u200b<code>;</code>\u3002</p> <p>  Download source code</p> <pre><code>fn add(a: i32, b: i32) -&gt; i32 {\n    a + b // Return by expression\n}\nfn sub(a: i32, b: i32) -&gt; i32 {\n    return a - b; // Return by return keyword\n}\n\nfn main() {\n    let (a, b) = (2, 1);\n    println!(\"{} + {} = {}\", a, b, add(a, b));\n    println!(\"{} - {} = {}\", a, b, sub(a, b));\n}\n</code></pre> <p>\u200b\u51fd\u6570\u6307\u9488\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>fn(&lt;parameter type&gt;, ...) -&gt; &lt;return type&gt;</code>\uff0c\u200b\u5c06\u200b\u51fd\u6570\u200b\u8d4b\u503c\u200b\u7ed9\u200b\u51fd\u6570\u6307\u9488\u200b\u65f6\u200b\uff0c\u200b\u53c2\u6570\u200b\u5217\u8868\u200b\u548c\u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b\u5fc5\u987b\u200b\u5168\u90e8\u200b\u5339\u914d\u200b\u3002</p> <p>\u200b\u5728\u200b\u51fd\u6570\u200b\u5185\u90e8\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u58f0\u660e\u200b\u51fd\u6570\u200b\uff0c\u200b\u79f0\u4e3a\u200blambda\u200b\u51fd\u6570\u200b\uff0c\u200b\u58f0\u660e\u200b\u65b9\u5f0f\u200b\u4e3a\u200b</p> <pre><code>let &lt;function name&gt; = |[&lt;parameter name&gt;: &lt;parameter type&gt;, ...]| -&gt; [&lt;return type&gt;] {\n    &lt;function body&gt;\n}\n</code></pre> <p>\u200b\u5176\u4e2d\u200b\uff1a</p> <ol> <li> <p>\u200b\u53c2\u6570\u200b\u5217\u8868\u200b\u53ef\u4ee5\u200b\u7701\u7565\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>let add = |a, b| { return a + b; };\n</code></pre> </li> <li> <p>\u200b\u5982\u679c\u200b\u51fd\u6570\u200b\u4f53\u200b\u53ea\u6709\u200b\u4e00\u884c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7701\u7565\u200b<code>{}</code>\uff0c\u200b\u6b64\u65f6\u200b\u4e0d\u80fd\u200b\u52a0\u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>let add = |a, b| a + b;\n</code></pre> </li> <li> <p>\u200b\u53ef\u4ee5\u200b\u5728\u200b\u58f0\u660e\u200b\u7684\u200b\u65f6\u5019\u200b\u76f4\u63a5\u200b\u8c03\u7528\u200b\uff0c\u200b\u6b64\u65f6\u200b\u4e0d\u80fd\u200b\u7701\u7565\u200b<code>{}</code>\u200b\u548c\u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>let result = |a, b| -&gt; i32 { a + b }(1, 2); // result = 3\n</code></pre> </li> </ol> <p>  Download source code</p> <pre><code>fn main() {\n    let (a, b) = (2, 1);\n    let add = |a, b| a + b;\n    println!(\"{} + {} = {}\", a, b, add(a, b));\n    println!(\"{} - {} = {}\", a, b, |a, b| -&gt; i32 { return a - b; }(a, b));\n}\n</code></pre>"},{"location":"coding/rust/2/#if","title":"<code>if</code>\u200b\u8bed\u53e5","text":"<p>Rust\u200b\u4e2d\u200b<code>if</code>\u200b\u8bed\u53e5\u200b\u7684\u200b\u683c\u5f0f\u200b\u4e0e\u200bC/C++\u200b\u76f8\u4f3c\u200b\uff0c\u200b\u4f46\u662f\u200b\u6761\u4ef6\u200b\u8868\u8fbe\u5f0f\u200b\u4e0d\u200b\u9700\u8981\u200b\u52a0\u200b\u62ec\u53f7\u200b\u3002</p> <pre><code>if &lt;condition&gt; {\n    &lt;expression&gt;\n} [ else if &lt;condition&gt; {\n    &lt;expression&gt;\n} ] [ else {\n    &lt;expression&gt;\n} ]\n</code></pre> <p><code>if</code>\u200b\u8bed\u53e5\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7528\u200b\u5728\u200b\u8868\u8fbe\u5f0f\u200b\u4e2d\u200b\uff0c\u200b\u6b64\u65f6\u200b\u6bcf\u4e2a\u200b\u5206\u652f\u200b\u5757\u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u884c\u200b\u4f5c\u4e3a\u200b\u8be5\u200b\u5206\u652f\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u3002\u200b\u6b64\u65f6\u200b\u6bcf\u4e2a\u200b\u5206\u652f\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b\u5fc5\u987b\u200b\u76f8\u540c\u200b\u3002</p> <p>  Download source code</p> <pre><code>fn main() {\n    let (a, b) = (5, 3);\n    println!(\"max({}, {}) = {}\", a, b, if a &gt; b { a } else { b });\n    if a &lt; b {\n        println!(\"min({}, {}) = {}\", a, b, a);\n    } else {\n        println!(\"min({}, {}) = {}\", a, b, b);\n    }\n}\n</code></pre>"},{"location":"coding/rust/2/#match","title":"<code>match</code>\u200b\u8bed\u53e5","text":"<p><code>match</code>\u200b\u8bed\u53e5\u200b\u7528\u4e8e\u200b\u5bf9\u200b\u53d8\u91cf\u200b\u7684\u200b\u503c\u200b\u8fdb\u884c\u200b\u6a21\u5f0f\u5339\u914d\u200b\uff0c\u200b\u683c\u5f0f\u200b\u4e3a\u200b\uff1a</p> <pre><code>match &lt;variable&gt; {\n    &lt;pattern&gt; =&gt; &lt;expression&gt;,\n    ...\n    _ =&gt; &lt;expression&gt;\n}\n</code></pre> <p>\u200b\u5176\u4e2d\u200b\uff0c<code>&lt;pattern&gt;</code>\u200b\u53ef\u4ee5\u200b\u662f\u200b</p> <ol> <li>\u200b\u5355\u4e2a\u200b\u6570\u503c\u200b\uff0c\u200b\u5982\u200b<code>5 =&gt; \"five\"</code></li> <li>\u200b\u8303\u56f4\u200b\uff0c\u200b\u5982\u200b<code>1 ..= 5 =&gt; \"one to five\"</code></li> <li><code>|</code>\u200b\u5206\u9694\u200b\u7684\u200b\u591a\u4e2a\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u5982\u200b<code>1 | 2 | 3 =&gt; \"one to three\"</code></li> <li>\u200b\u6a21\u677f\u200b\u5b9e\u4f8b\u200b\uff0c\u200b\u5982\u200b<code>Some(x) =&gt; Some(x + 1)</code></li> <li><code>_</code>\uff0c\u200b\u8868\u793a\u200b\u5339\u914d\u200b\u6240\u6709\u200b\u60c5\u51b5\u200b\u3002</li> <li>\u200b\u5982\u679c\u200b\u88ab\u200b\u5339\u914d\u200b\u7684\u200b\u53d8\u91cf\u200b\u662f\u200b\u5143\u7ec4\u200b\uff0c\u200b\u5219\u200b\u5143\u7ec4\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u5143\u7d20\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u662f\u200b\u4e0a\u8ff0\u200b\u6a21\u5f0f\u200b\u3002</li> <li>\u200b\u6761\u4ef6\u200b\u8bed\u53e5\u200b\uff0c\u200b\u5982\u200b<code>x if x &gt; 5 =&gt; \"greater than five\"</code>\uff0c\u200b\u6b64\u65f6\u200b\u5143\u7ec4\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6574\u4f53\u200b\u53c2\u4e0e\u200b\u6761\u4ef6\u200b\u8bed\u53e5\u200b\uff0c\u200b\u5982\u200b<code>(x, y) if x &gt; 5 &amp;&amp; y &gt; 5 =&gt; \"both greater than five\"</code></li> </ol> <p><code>&lt;expression&gt;</code>\u200b\u53ef\u4ee5\u200b\u662f\u200b\u8fd4\u56de\u503c\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u662f\u200b\u4ee3\u7801\u200b\u5757\u200b\uff0c\u200b\u6b64\u65f6\u200b\u4ee3\u7801\u200b\u5757\u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u884c\u200b\u4f5c\u4e3a\u200b\u8fd4\u56de\u503c\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b<code>match</code>\u200b\u7684\u200b\u5206\u652f\u200b\u5fc5\u987b\u200b\u5305\u62ec\u200b\u6240\u6709\u200b\u53ef\u80fd\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u5426\u5219\u200b\u4f1a\u200b\u62a5\u9519\u200b\u3002</p> <p>  Download source code</p> <pre><code>fn main() {\n    let marks_paper_a: u8 = 25;\n    let marks_paper_b: u8 = 30;\n\n    let output = match (marks_paper_a, marks_paper_b) {\n        (50, 50) =&gt; \"Full marks for both papers\",\n        (50, _) =&gt; \"Full marks for paper A\",\n        (_, 50) =&gt; \"Full marks for paper B\",\n        (x, y) if x &gt; 25 &amp;&amp; y &gt; 25 =&gt; \"Good\",\n        (_, _) =&gt; \"Work hard\"\n    };\n\n    println!(\"{}\", output); // Work hard\n}\n</code></pre>"},{"location":"coding/rust/2/#if-let","title":"<code>if let</code>\u200b\u8bed\u53e5","text":"<p>\u200b\u548c\u200b<code>match</code>\u200b\u7c7b\u4f3c\u200b\uff0c<code>if let</code>\u200b\u8bed\u53e5\u200b\u7528\u4e8e\u200b\u5339\u914d\u200b\u5355\u4e2a\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u683c\u5f0f\u200b\u4e3a\u200b\uff1a</p> <pre><code>if let &lt;pattern&gt; = &lt;variable&gt; {\n    &lt;expression&gt;\n}\n</code></pre> <p><code>let &lt;pattern&gt; = &lt;variable&gt;</code>\u200b\u53ef\u4ee5\u200b\u770b\u6210\u200b\u4e00\u4e2a\u200b\u6761\u4ef6\u200b\uff08\u200b\u4f46\u200b\u5b9e\u9645\u200b\u5e76\u200b\u4e0d\u662f\u200b\uff09\uff0c\u200b\u5982\u679c\u200b\u80fd\u200b\u5339\u914d\u200b\u5219\u200b\u5c06\u200b<code>&lt;variable&gt;</code>\u200b\u7684\u200b\u503c\u200b\u6309\u7167\u200b<code>&lt;pattern&gt;</code>\u200b\u8fdb\u884c\u200b\u7ed1\u5b9a\u200b\uff0c\u200b\u5e76\u200b\u8fd4\u56de\u200b<code>true</code>\uff0c\u200b\u56e0\u6b64\u200b\u4e5f\u200b\u4f1a\u200b\u6709\u200b<code>while let</code>\u200b\u7b49\u200b\u5176\u4ed6\u200b\u8bed\u53e5\u200b\u3002</p>"},{"location":"coding/rust/2/#loop","title":"<code>loop</code>\u200b\u8bed\u53e5","text":"<p><code>loop</code>\u200b\u8bed\u53e5\u200b\u7528\u4e8e\u200b\u65e0\u9650\u200b\u5faa\u73af\u200b\u3002</p> <ol> <li>\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>continue</code>\u200b\u8df3\u8f6c\u200b\u5230\u200b\u4e0b\u200b\u4e00\u6b21\u200b\u5faa\u73af\u200b\uff0c\u200b\u6216\u200b<code>break</code>\u200b\u8df3\u51fa\u200b\u5faa\u73af\u200b\u3002</li> <li><code>loop</code>\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>break &lt;expression&gt;</code>\u200b\u8fd4\u56de\u503c\u200b\uff0c\u200b\u6b64\u65f6\u200b\u6240\u6709\u200b<code>break</code>\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b\u5fc5\u987b\u200b\u76f8\u540c\u200b\u3002</li> <li>\u200b\u6bcf\u4e2a\u200b\u5faa\u73af\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>'&lt;label&gt;: loop</code>\u200b\u6807\u8bb0\u200b\uff0c\u200b\u5728\u200b<code>break</code>\u200b\u548c\u200b<code>continue</code>\u200b\u65f6\u200b\u53ef\u4ee5\u200b\u6307\u5b9a\u200b\u8df3\u51fa\u200b/\u200b\u8df3\u8fc7\u200b\u7684\u200b\u5faa\u73af\u200b\u3002</li> </ol> <p>  Download source code</p> <pre><code>fn main() {\n    let mut b1 = 1;\n\n    let (c1, c2) = 'outer_loop: loop {\n      let mut b2 = 1;\n\n      'inner_loop: loop {\n        println!(\"Current Value : [{}][{}]\", b1, b2);\n\n        if b1 == 2 &amp;&amp; b2 == 2 {\n            break 'outer_loop (b1, b2); // Leave outer_loop with return value\n        } else if b2 == 5 {\n            break; // Leave inner_loop by default\n        }\n\n        b2 += 1;\n      }\n\n      b1 += 1;\n    };\n    println!(\"b1 = {}, b2 = {}\", c1, c2);\n}\n</code></pre>"},{"location":"coding/rust/2/#while","title":"<code>while</code>\u200b\u8bed\u53e5","text":"<p><code>while</code>\u200b\u8bed\u53e5\u200b\u7528\u4e8e\u200b\u662f\u200b\u6709\u200b\u6761\u4ef6\u200b\u7684\u200b\u5faa\u73af\u200b\uff0c<code>while</code>\u200b\u8bed\u53e5\u200b\u4e0d\u80fd\u200b\u8fd4\u56de\u503c\u200b\uff0c\u200b\u5176\u4ed6\u200b\u4e0e\u200b<code>loop</code>\u200b\u8bed\u53e5\u200b\u76f8\u540c\u200b\u3002</p> <pre><code>while &lt;condition&gt; {\n    &lt;expression&gt;\n}\n</code></pre>"},{"location":"coding/rust/2/#for","title":"<code>for</code>\u200b\u8bed\u53e5","text":"<p><code>for</code>\u200b\u8bed\u53e5\u200b\u7528\u4e8e\u200b\u904d\u5386\u200b\u8fed\u4ee3\u200b\u5668\u200b\uff0c\u200b\u683c\u5f0f\u200b\u4e3a\u200b\uff1a</p> <pre><code>for &lt;variable&gt; in &lt;iterator&gt; {\n    &lt;expression&gt;\n}\n</code></pre> <p>\u200b\u5176\u4e2d\u200b\uff0c<code>&lt;iterator&gt;</code>\u200b\u53ef\u4ee5\u200b\u662f\u200b</p> <ol> <li><code>start .. end</code>\uff0c\u200b\u8868\u793a\u200b\u4ece\u200b<code>start</code>\u200b\u5230\u200b<code>end - 1</code>\u200b\u7684\u200b\u6574\u6570\u200b\u8303\u56f4\u200b\u3002</li> <li><code>start ..= end</code>\uff0c\u200b\u8868\u793a\u200b\u4ece\u200b<code>start</code>\u200b\u5230\u200b<code>end</code>\u200b\u7684\u200b\u6574\u6570\u200b\u8303\u56f4\u200b\u3002</li> <li>\u200b\u7531\u200b\u65b9\u6cd5\u200b<code>&lt;iterable&gt;.iter()</code>\u200b\u8fd4\u56de\u200b\u7684\u200b\u8fed\u4ee3\u200b\u5668\u200b\uff0c\u200b\u5982\u200b<code>[1, 2, 3].iter()</code>\u3002</li> </ol> <p><code>for</code>\u200b\u5faa\u73af\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u6dfb\u52a0\u200b\u6807\u7b7e\u200b\u3002</p> <p>  Download source code</p> <pre><code>fn main() {\n    let group : [&amp;str; 4] = [\"Mark\", \"Larry\", \"Bill\", \"Steve\"];\n\n    for n in 0..group.len() { // group.len() = 4 -&gt; 0..4 \ud83d\udc4e check group.len()on each iteration\n    println!(\"Current Person : {}\", group[n]);\n    }\n\n    for person in group.iter() { // \ud83d\udc4d group.iter() turn the array into a simple iterator\n    println!(\"Current Person : {}\", person);\n    }\n}\n</code></pre> <p>\u200b\u4e25\u683c\u200b\u610f\u4e49\u200b\u4e0a\u200b<code>for</code>\u200b\u8bed\u53e5\u200b\u4e0d\u80fd\u200b\u76f4\u63a5\u200b\u904d\u5386\u200b\u5bb9\u5668\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u9700\u8981\u200b\u7528\u200b<code>iter()</code>\u200b\u65b9\u6cd5\u200b\u8fd4\u56de\u200b\u8fed\u4ee3\u200b\u5668\u200b\u3002\u200b\u4f46\u200b<code>for</code>\u200b\u4f1a\u200b\u5c1d\u8bd5\u200b\u9690\u5f0f\u200b\u8c03\u7528\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4e0b\u9762\u200b\u7684\u200b\u4ee3\u7801\u200b\u4e5f\u200b\u80fd\u200b\u6b63\u5e38\u200b\u6267\u884c\u200b\u3002</p> <pre><code>fn main() {\n    let a = [1, 2, 3];\n    for i in a {\n        println!(\"{}\", i);\n    }\n}\n</code></pre>"},{"location":"coding/rust/3/","title":"Complex objects","text":"<p>\u200b\u672c\u200b\u8282\u200b\u4ecb\u7ecd\u200bRust\u200b\u4e2d\u200b\u5e38\u7528\u200b\u7684\u200b\u590d\u6742\u200b\u7c7b\u578b\u200b</p>"},{"location":"coding/rust/3/#_1","title":"\u5bb9\u5668\u200b\u7c7b\u578b","text":""},{"location":"coding/rust/3/#vec","title":"<code>Vec</code>","text":"<p>Rust\u200b\u4e2d\u200b\u7684\u200b\u5411\u91cf\u200b\u7c7b\u578b\u200b\u662f\u200b\u957f\u5ea6\u200b\u53ef\u53d8\u200b\u7684\u200b\u6570\u7ec4\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b<code>Vec::new()</code>\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u7a7a\u200b\u7684\u200b\u5411\u91cf\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b<code>vec![]</code>\u200b\u5b8f\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u5e26\u6709\u200b\u521d\u59cb\u503c\u200b\u7684\u200b\u5411\u91cf\u200b\u3002<code>Vec</code>\u200b\u662f\u200b\u6cdb\u578b\u200b\uff0c\u200b\u4f7f\u7528\u200b<code>Vec&lt;type&gt;</code>\u200b\u53ef\u4ee5\u200b\u6307\u5b9a\u200b\u5411\u91cf\u200b\u4e2d\u200b\u5143\u7d20\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002\u200b\u4e00\u4e2a\u200b\u5411\u91cf\u200b\u4e2d\u200b\u5b58\u50a8\u200b\u5143\u7d20\u200b\u7684\u200b\u7c7b\u578b\u200b\u5168\u90e8\u200b\u76f8\u540c\u200b\u3002\u200b\u5411\u91cf\u200b\u53ca\u5176\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6574\u4f53\u200b\uff0c\u200b\u5bf9\u200b\u5176\u4e2d\u200b\u5143\u7d20\u200b\u7684\u200b\u53ef\u53d8\u200b\u5f15\u7528\u200b\u4e5f\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u5411\u91cf\u200b\u672c\u8eab\u200b\u65e0\u6cd5\u200b\u518d\u200b\u8fdb\u884c\u200b\u5f15\u7528\u200b\u3002</p> <pre><code>let v1 = Vec::new(); // Empty vector\nlet v2: Vec&lt;i32&gt; = Vec::new(); // Empty vector with type annotation\nlet v3 = vec![1, 2, 3]; // Vector with initial values\nlet v4 = vec![0; 10]; // Repeat values using colon\nlet v5 = vec![1i32, 2, 3]; // Vector with type specified to the first element\nlet v6 = Vec::with_capacity(10); // Vector with pre-allocated capacity 10\n</code></pre> <p>\u200b\u7528\u200b<code>let mut</code>\u200b\u58f0\u660e\u200b\u7684\u200b\u5411\u91cf\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u4fee\u6539\u200b\u3002<code>Vec</code>\u200b\u7c7b\u578b\u200b\u6709\u200b\u5982\u4e0b\u200b\u65b9\u6cd5\u200b\uff1a</p> <ul> <li><code>push()</code>\uff1a\u200b\u5411\u200b\u5411\u91cf\u200b\u7684\u200b\u5c3e\u90e8\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b</li> <li><code>pop()</code>\uff1a\u200b\u4ece\u200b\u5411\u91cf\u200b\u7684\u200b\u5c3e\u90e8\u200b\u5f39\u200b\u51fa\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b</li> <li><code>extend()</code>\uff1a\u200b\u5411\u200b\u5411\u91cf\u200b\u7684\u200b\u5c3e\u90e8\u200b\u6dfb\u52a0\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5411\u91cf\u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b</li> <li><code>reserve()</code>\uff1a\u200b\u8c03\u6574\u200b\u5411\u91cf\u200b\u7684\u200b\u5bb9\u91cf\u200b</li> <li><code>len()</code>\uff1a\u200b\u8fd4\u56de\u200b\u5411\u91cf\u200b\u7684\u200b\u957f\u5ea6\u200b</li> <li><code>capacity()</code>\uff1a\u200b\u8fd4\u56de\u200b\u5411\u91cf\u200b\u7684\u200b\u5bb9\u91cf\u200b\uff08\u200b\u5f53\u200b\u8d85\u51fa\u200b\u5bb9\u91cf\u200b\u65f6\u200b\uff0c\u200b\u4f1a\u200b\u91cd\u65b0\u5206\u914d\u200b\u5185\u5b58\u7a7a\u95f4\u200b\uff09</li> <li><code>get()</code>\uff1a\u200b\u8fd4\u56de\u200b\u5411\u91cf\u200b\u4e2d\u200b\u6307\u5b9a\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u5143\u7d20\u200b\u7684\u200b\u5f15\u7528\u200b\uff0c\u200b\u5982\u679c\u200b\u7d22\u5f15\u200b\u8d8a\u754c\u200b\u5219\u200b\u8fd4\u56de\u200b<code>None</code></li> <li><code>shrink_to_fit()</code>\uff1a\u200b\u5c06\u200b\u5411\u91cf\u200b\u7684\u200b\u5bb9\u91cf\u200b\u8c03\u6574\u200b\u4e3a\u200b\u5411\u91cf\u200b\u7684\u200b\u957f\u5ea6\u200b\uff0c\u200b\u91ca\u653e\u200b\u591a\u4f59\u200b\u7684\u200b\u5185\u5b58\u7a7a\u95f4\u200b</li> <li><code>sort()</code>\u3001<code>sort_unstable()</code>\uff1a\u200b\u5bf9\u200b\u5411\u91cf\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u8fdb\u884c\u200b\u6392\u5e8f\u200b</li> <li><code>sort_by()</code>\u3001<code>sort_unstable_by()</code>\uff1a\u200b\u5bf9\u200b\u5411\u91cf\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u8fdb\u884c\u200b\u6392\u5e8f\u200b\uff0c\u200b\u4f7f\u7528\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b\u6bd4\u8f83\u200b\u51fd\u6570\u200b</li> <li><code>[]</code>\u200b\u8fd0\u7b97\u7b26\u200b\uff1a\u200b\u8fd4\u56de\u200b\u5411\u91cf\u200b\u4e2d\u200b\u6307\u5b9a\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u5143\u7d20\u200b\uff08\u200b\u53f3\u7aef\u200b\u9879\u200b\uff09\uff0c\u200b\u6216\u8005\u200b\u4fee\u6539\u200b\u5411\u91cf\u200b\u4e2d\u200b\u6307\u5b9a\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u5143\u7d20\u200b\uff08\u200b\u5de6\u7aef\u200b\u9879\u200b\uff09\u3002</li> </ul> <p>\u200b\u5411\u91cf\u200b\u53ca\u5176\u200b\u5f15\u7528\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u7528\u200b\u5728\u200b<code>for</code>\u200b\u5faa\u73af\u200b\u4e2d\u200b\u3002</p>"},{"location":"coding/rust/3/#_2","title":"\u7ed3\u6784\u200b\u4f53","text":"<p>\u200b\u6709\u200b\u4e09\u79cd\u200b\u65b9\u6cd5\u200b\u5728\u200bRust\u200b\u4e2d\u200b\u58f0\u660e\u200b\u7ed3\u6784\u200b\u4f53\u200b\uff1a</p> <ol> <li>C\u200b\u8bed\u8a00\u200b\u98ce\u683c\u200b</li> <li>\u200b\u547d\u540d\u200b\u5143\u7ec4\u200b</li> <li>unit struct</li> </ol> <pre><code>struct CStyle {\n    x: i32,\n    y: i32,\n} // C-style struct with two fields\nstruct NamedTuple(i32, i32); // Named tuple struct with two fields\nstruct TypePattern(i32); // Type pattern struct with one field, can be used in `match` statement\nstruct UnitStruct; // Unit struct without fields\n</code></pre> <p>\u200b\u7528\u200b<code>pub</code>\u200b\u5173\u952e\u5b57\u200b\u6807\u8bb0\u200b\u7ed3\u6784\u200b\u4f53\u540e\u200b\uff0c\u200b\u5176\u4e2d\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u4e0d\u80fd\u200b\u88ab\u200b\u5916\u754c\u200b\u8bbf\u95ee\u200b\u3002</p>"},{"location":"coding/rust/3/#_3","title":"\u679a\u4e3e\u200b\u7c7b\u578b","text":"<p>Rust\u200b\u4e2d\u200b\u7684\u200b\u679a\u4e3e\u200b\u7c7b\u578b\u200b\u5173\u952e\u5b57\u200b\u4e3a\u200b<code>enum</code>\uff0c\u200b\u53ef\u4ee5\u200b\u5305\u542b\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u503c\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u6709\u200b\u4e0d\u540c\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002\u200b\u679a\u4e3e\u200b\u7c7b\u578b\u200b\u7684\u200b\u503c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b<code>match</code>\u200b\u8bed\u53e5\u200b\u8fdb\u884c\u200b\u5339\u914d\u200b\u3002</p> <pre><code>enum Week {\n    Monday,\n    Tuesday,\n    Wednesday,\n    Thursday,\n    Friday,\n    Saturday,\n    Sunday,\n} // Enum type with 7 variants\n</code></pre> <p>Rust\u200b\u4e2d\u200b\u7684\u200b\u679a\u4e3e\u200b\u5143\u7d20\u200b\u53ef\u4ee5\u200b\u662f\u200b\u4e0d\u540c\u200b\u7684\u200bpattern\uff0c\u200b\u53ef\u4ee5\u200b\u662f\u200b\u7ed3\u6784\u200b\u4f53\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u662f\u200b\u5143\u7ec4\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u662f\u200bunit struct\u3002</p> <pre><code>enum IpAddr {\n    V4(u8, u8, u8, u8), // Tuple\n    V6{ addr: String }, // Struct\n    LocalHost, // Unit\n}\n</code></pre> <p>\u200b\u8fd9\u4e9b\u200bpattern\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b<code>match</code>\u200b\u8bed\u53e5\u200b\u4e2d\u200b\u8fdb\u884c\u200b\u6a21\u5f0f\u5339\u914d\u200b\uff1a</p> <p>  Download source code</p> <pre><code>enum IpAddr {\n    V4(u8, u8, u8, u8), // Tuple\n    V6{ addr: String }, // Struct\n    LocalHost, // Unit\n}\n\nfn main() {\n    let v4 = IpAddr::V4(4, 4, 4, 4);\n    let v4_invalid = IpAddr::V4(0, 0, 0, 0);\n    let v6 = IpAddr::V6{ addr: String::from(\"::1\") };\n    let local = IpAddr::LocalHost;\n    print_ip(v4);\n    print_ip(v4_invalid);\n    print_ip(v6);\n    print_ip(local);\n}\n\nfn print_ip(ip: IpAddr) {\n    match ip {\n        IpAddr::V4(a, b, c, d) if a != 0 || b != 0 || c != 0 || d != 0\n            =&gt; println!(\"{}.{}.{}.{}\", a, b, c, d),\n        IpAddr::V4(a, b, c, d)\n            =&gt; println!(\"{}.{}.{}.{} is not an valid IPv4 address\", a, b, c, d),\n        IpAddr::V6{ addr } =&gt; println!(\"{}\", addr),\n        IpAddr::LocalHost =&gt; println!(\"localhost\"),\n    }\n}\n</code></pre> <p>\u200b\u7528\u200b<code>pub</code>\u200b\u5173\u952e\u5b57\u200b\u6807\u8bb0\u200b\u679a\u4e3e\u200b\u7c7b\u578b\u200b\u540e\u200b\uff0c\u200b\u5176\u4e2d\u200b\u7684\u200b\u5404\u4e2a\u200b\u5b57\u6bb5\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u5916\u754c\u200b\u8bbf\u95ee\u200b\u3002</p>"},{"location":"coding/rust/3/#_4","title":"\u6cdb\u578b","text":"<p>\u200b\u6cdb\u578b\u200b\u662f\u200b\u4e00\u79cd\u200b\u7c7b\u578b\u200b\u6a21\u677f\u200b\uff0c\u200b\u5f53\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b/\u200b\u679a\u4e3e\u200b/\u200b\u7ed3\u6784\u200b\u4f53\u200b\u9700\u8981\u200b\u5904\u7406\u200b\u591a\u79cd\u7c7b\u578b\u200b\u7684\u200b\u53c2\u6570\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u6cdb\u578b\u200b\u3002\u200b\u6cdb\u578b\u200b\u7684\u200b\u7c7b\u578b\u200b\u53c2\u6570\u200b\u53ef\u4ee5\u200b\u5728\u200b\u51fd\u6570\u200b\u540d\u200b\u540e\u9762\u200b\u7528\u200b\u5c16\u62ec\u53f7\u200b\u6307\u5b9a\u200b\uff0c\u200b\u4e4b\u540e\u200b\u53c2\u6570\u200b\u5217\u8868\u200b\u4e2d\u200b\u7528\u200b\u5192\u53f7\u200b\u6307\u5b9a\u200b\u6cdb\u578b\u200b\u7c7b\u578b\u200b\u3002</p> <p>  Download source code</p> <pre><code>fn max&lt;T&gt; (a: T, b: T) -&gt; T\n    where T: std::cmp::PartialOrd\n{\n    if a &gt; b { a } else { b }\n}\n\nfn main() {\n    println!(\"{}\", max(1, 2)); // i32\n    println!(\"{}\", max(1.0, 2.0)); // f64\n    println!(\"{}\", max(\"a\", \"b\")); // &amp;str\n}\n</code></pre> <p>Rust\u200b\u6807\u51c6\u200b\u5e93\u4e2d\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u5e38\u7528\u200b\u7684\u200b\u6cdb\u578b\u200b\u7c7b\u578b\u200b\uff1a</p> <pre><code>enum Option&lt;T&gt; {\n    Some(T),\n    None,\n}\n\nenum Result&lt;T, E&gt; {\n    Ok(T),\n    Err(E),\n}\n</code></pre> <ul> <li><code>Option&lt;T&gt;</code>\u200b\u8868\u793a\u200b\u4e00\u4e2a\u200b\u53ef\u80fd\u200b\u5b58\u5728\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u662f\u200b<code>Some(T)</code>\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u662f\u200b<code>None</code>\u3002\u200b\u7c7b\u4f3c\u200b\u4e8e\u200bPython\u200b\u4e2d\u200b\u7684\u200b<code>Optional</code>\u3002</li> <li><code>Result&lt;T, E&gt;</code>\u200b\u8868\u793a\u200b\u4e00\u4e2a\u200b\u53ef\u80fd\u200b\u51fa\u9519\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\uff0c\u200b\u5982\u679c\u200b\u6210\u529f\u200b\u5219\u200b\u662f\u200b<code>Ok(T)</code>\uff0c\u200b\u5982\u679c\u200b\u5931\u8d25\u200b\u5219\u200b\u662f\u200b<code>Err(E)</code>\u3002</li> <li>\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b<code>match</code>\u200b\u8bed\u53e5\u200b\u4e2d\u200b\u8fdb\u884c\u200b\u6a21\u5f0f\u5339\u914d\u200b\u3002</li> </ul>"},{"location":"coding/rust/3/#impl-trait","title":"Impl &amp; Trait","text":"<p>\u200b\u5728\u200bRust\u200b\u4e2d\u200b\uff0c<code>impl</code>\u200b\u5173\u952e\u5b57\u200b\u7528\u4e8e\u200b\u4e3a\u200b\u7ed3\u6784\u200b\u4f53\u200b\u5b9e\u73b0\u200b\u65b9\u6cd5\u200b\uff0c<code>trait</code>\u200b\u5173\u952e\u5b57\u200b\u7528\u4e8e\u200b\u58f0\u660e\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u4e0e\u200b\u7ed3\u6784\u200b\u4f53\u200b\u7ec4\u5408\u200b\u540e\u200b\u76f8\u5f53\u4e8e\u200bC++\u200b\u4e2d\u200b\u7684\u200b\u7c7b\u200b\u3002<code>impl</code>\u200b\u53ef\u4ee5\u200b\u8131\u79bb\u200b<code>trait</code>\u200b\u5355\u72ec\u200b\u4f7f\u7528\u200b\u3002</p> <ol> <li>\u200b\u5f53\u200b\u6ca1\u6709\u200b<code>trait</code>\u200b\u65f6\u200b\uff0c<code>impl</code>\u200b\u7684\u200b\u8bed\u6cd5\u200b\u4e3a\u200b<code>impl &lt;struct name&gt; { &lt;methods&gt;}</code>\uff0c\u200b\u5176\u4e2d\u200b<code>&lt;struct name&gt;</code>\u200b\u53ef\u4ee5\u200b\u662f\u200b\u7ed3\u6784\u200b\u4f53\u540d\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u662f\u200b\u6cdb\u578b\u200b\u53c2\u6570\u200b\u3002</li> <li>\u200b\u5f53\u6709\u200b<code>trait</code>\u200b\u65f6\u200b\uff0c<code>impl</code>\u200b\u7684\u200b\u8bed\u6cd5\u200b\u4e3a\u200b<code>impl &lt;trait name&gt; for &lt;struct name&gt; { &lt;methods&gt;}</code>\uff0c\u200b\u5176\u4e2d\u200b<code>&lt;trait name&gt;</code>\u200b\u662f\u200b\u5bf9\u5e94\u200b\u7684\u200b<code>trait</code>\u200b\u540d\u200b\uff0c<code>&lt;struct name&gt;</code>\u200b\u662f\u200b\u9700\u8981\u200b\u5b9e\u73b0\u200b\u8be5\u200b<code>trait</code>\u200b\u7684\u200b\u7ed3\u6784\u200b\u4f53\u540d\u200b\u3002</li> <li>\u200b\u7279\u6b8a\u200b\u5bf9\u8c61\u200b<code>self</code>\u200b\u8868\u793a\u200b\u5f53\u524d\u200b\u7ed3\u6784\u200b\u4f53\u200b\u7684\u200b\u5b9e\u4f8b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4ee5\u200b\u5f15\u7528\u200b\uff08<code>&amp;self</code>\u3001<code>&amp;mut self</code>\uff09\u200b\u6216\u200b\u81ea\u8eab\u200b\u5f62\u6001\u200b\uff08<code>self</code>\uff09\u200b\u51fa\u73b0\u200b\u3002\u200b\u5982\u679c\u200b\u4e0d\u200b\u4f7f\u7528\u200b<code>self</code>\uff0c\u200b\u5219\u200b\u4e3a\u200b\u9759\u6001\u65b9\u6cd5\u200b/\u200b\u7c7b\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u7c7b\u4f3c\u200b\u4e8e\u200bPython\u200b\u4e2d\u200b\u7684\u200b<code>@staticmethod</code>\u200b\u6216\u200b<code>@classmethod</code>\u3002\u200b\u6b64\u65f6\u200b\u9700\u8981\u200b\u7528\u200b<code>&lt;struct&gt;::&lt;method&gt;</code>\u200b\u8c03\u7528\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b<code>&lt;object&gt;.&lt;method&gt;</code>\u3002</li> <li>\u200b\u7279\u6b8a\u200b\u7c7b\u578b\u200b<code>Self</code>\u200b\u8868\u793a\u200b\u5f53\u524d\u200b\u7ed3\u6784\u200b\u4f53\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b\u7684\u200b\u58f0\u660e\u200b\u3002</li> </ol> <p>\u200b\u5b64\u513f\u200b\u89c4\u5219\u200b</p> <p>\u200b\u5982\u679c\u200b\u9700\u8981\u200b\u5bf9\u200b\u7c7b\u578b\u200b<code>A</code>\u200b\u5b9e\u73b0\u200b\u7279\u5f81\u200b<code>T</code>\uff0c\u200b\u5219\u200b<code>T</code>\u200b\u6216\u200b<code>A</code>\u200b\u5176\u4e2d\u200b\u4e4b\u4e00\u200b\u5fc5\u987b\u200b\u5728\u200b\u5f53\u524d\u200b\u4f5c\u7528\u57df\u200b\u5185\u200b\u5b9a\u4e49\u200b\u3002</p> <pre><code>struct Player {\n    first_name: String,\n    last_name: String,\n}\n\ntrait GetFullName {\n    fn full_name(&amp;self) -&gt; String;\n}\n\nimpl GetFullName for Player {\n    fn full_name(&amp;self) -&gt; String {\n        format!(\"{} {}\", self.first_name, self.last_name)\n    }\n}\n\nfn main() {\n    let player_1 = Player {\n        first_name: \"Rafael\".to_string(),\n        last_name: \"Nadal\".to_string(),\n    };\n\n    println!(\"Player 01: {}\", player_1.full_name());\n}\n</code></pre> <p><code>trait</code>\u200b\u53ef\u4ee5\u200b\u548c\u200b\u6cdb\u578b\u200b\u7ed3\u5408\u200b\u4f7f\u7528\u200b\uff0c<code>impl</code>\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5bf9\u200b\u5185\u7f6e\u200b\u7684\u200b\u7c7b\u578b\u200b\u4f7f\u7528\u200b\uff0c\u200b\u5982\u200b\uff1a</p> <p>  Download source code</p> <pre><code>trait From&lt;T&gt; {\n    fn from_u8(x: T) -&gt; Self;\n}\nimpl From&lt;u8&gt; for u8 {\n    fn from_u8(x: u8) -&gt; Self {\n        x\n    }\n}\nimpl From&lt;u8&gt; for u16 {\n    fn from_u8(x: u8) -&gt; Self {\n        x as u16\n    }\n}\nimpl From&lt;u8&gt; for i8 {\n    fn from_u8(x: u8) -&gt; Self {\n        x as i8\n    }\n}\nimpl From&lt;u8&gt; for i16 {\n    fn from_u8(x: u8) -&gt; Self {\n        x as i16\n    }\n}\n\nfn main() {\n    println!(\"{}\", i16::from_u8(1 as u8));\n}\n</code></pre> <p><code>trait</code>\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u7ee7\u627f\u200b\u548c\u200b\u591a\u200b\u7ee7\u627f\u200b\u3002</p> <pre><code>trait Person {\n    fn full_name(&amp;self) -&gt; String;\n}\n\ntrait Employee : Person { // Employee inherits from Person\n    fn job_title(&amp;self) -&gt; String;\n}\n\ntrait ExpatEmployee : Employee + Expat { // ExpatEmployee inherits from Employee and Expat\n    fn additional_tax(&amp;self) -&gt; f64;\n}\n</code></pre> <p>\u200b\u5728\u200b<code>trait</code>\u200b\u7684\u200b\u58f0\u660e\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u7528\u200b\u51fd\u6570\u200b\u4f53\u200b\uff0c\u200b\u6b64\u65f6\u200b\u8868\u793a\u200b\u65b9\u6cd5\u200b\u7684\u200b\u9ed8\u8ba4\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u5728\u200b<code>impl</code>\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u91cd\u8f7d\u200b\u8fd9\u4e2a\u200b\u65b9\u6cd5\u200b\u3002</p> <pre><code>struct Blog {};\nstruct Tweet {};\n\npub trait Summary {\n    fn summarize(&amp;self) -&gt; String {\n        String::from(\"(Read more...)\")\n    }\n}\n\nimpl Summary for Blog {} // Use default implementation\nimpl Summary for Tweet {\n    fn summarize(&amp;self) -&gt; String { // Override default implementation\n        String::from(\"Tweet\")\n    }\n}\n</code></pre>"},{"location":"coding/rust/3/#_5","title":"\u7279\u5f81\u200b\u7ea6\u675f","text":"<p>\u200b\u7279\u5f81\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u7ea6\u675f\u200b\u51fd\u6570\u200b\u6216\u6cdb\u200b\u578b\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002\u200b\u5982\u200b</p> <ol> <li>\u200b\u51fd\u6570\u53c2\u6570\u200b\u7684\u200b\u9650\u5b9a\u200b\uff0c\u200b\u5982\u200b<code>fn foo(bar: impl Copy)</code>\u200b\u8868\u793a\u200b<code>bar</code>\u200b\u53c2\u6570\u200b\u5fc5\u987b\u200b\u5b9e\u73b0\u200b\u540d\u4e3a\u200b<code>Copy</code>\u200b\u7684\u200b<code>trait</code>\u3002</li> <li>\u200b\u6cdb\u578b\u200b\u53c2\u6570\u200b\u7684\u200b\u9650\u5b9a\u200b\uff0c\u200b\u5982\u200b<code>&lt;T: Copy&gt;</code>\u200b\u8868\u793a\u200b<code>T</code>\u200b\u5fc5\u987b\u200b\u5b9e\u73b0\u200b\u540d\u4e3a\u200b<code>Copy</code>\u200b\u7684\u200b<code>trait</code>\uff0c\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u66f4\u200b\u590d\u6742\u200b\u7684\u200b\u7c7b\u578b\u200b\u63a7\u5236\u200b\u3002</li> </ol> <p>\u200b\u4f7f\u7528\u200b<code>+</code>\u200b\u8fde\u63a5\u200b\u591a\u4e2a\u200b\u7279\u5f81\u200b\uff0c\u200b\u8868\u793a\u200b\u53c2\u6570\u200b\u5fc5\u987b\u200b\u540c\u65f6\u200b\u5b9e\u73b0\u200b\u591a\u4e2a\u200b\u7279\u5f81\u200b\u3002</p> <pre><code>fn foo&lt;T: Copy + Display&gt;(bar: T) {\n    println!(\"{}\", bar); // `bar` must implement `Display` and `Copy`\n}\n</code></pre> <p>\u200b\u4f7f\u7528\u200b<code>where</code>\u200b\u5173\u952e\u5b57\u200b\u53ef\u4ee5\u200b\u4f7f\u200b\u7279\u5f81\u200b\u7ea6\u675f\u200b\u66f4\u52a0\u200b\u6e05\u6670\u200b\u3002</p> <pre><code>fn foo&lt;T, U&gt;(bar: T, baz: U) -&gt; U\n    where   T: Copy + Display,\n            U: Add&lt;Output = U&gt;\n{\n    println!(\"{}\", bar); // `bar` must implement `Display` and `Copy`\n    baz + 1 // `baz` must implement `Add`\n}\n</code></pre> <p>\u200b\u7279\u5f81\u200b\u7ea6\u675f\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u7528\u200b\u5728\u200b<code>impl</code>\u200b\u8bed\u53e5\u200b\u4e2d\u200b\u7528\u4e8e\u200b\u9009\u62e9\u6027\u200b\u5730\u200b\u5b9e\u73b0\u200b\u7279\u5f81\u200b</p> <pre><code>trait Increment {\n    fn increment(&amp;self) -&gt; Self;\n}\n\nimpl&lt;T&gt; Increment for T\n    where T: Add&lt;Output = T&gt; + Copy\n{\n    fn increment(&amp;self) -&gt; Self {\n        *self + 1\n    }\n}\n</code></pre> <p>\u200b\u8868\u793a\u200b<code>Increment</code>\u200b\u7279\u5f81\u200b\u53ea\u80fd\u200b\u7528\u4e8e\u200b\u540c\u65f6\u200b\u5b9e\u73b0\u200b\u4e86\u200b<code>Add&lt;Output = T&gt;</code>\u200b\u548c\u200b<code>Copy</code>\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002</p> <p>\u200b\u7279\u5f81\u200b\u7ea6\u675f\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u51fd\u6570\u200b\u8fd4\u56de\u503c\u200b\u7684\u200b\u9650\u5b9a\u200b\uff0c\u200b\u53ea\u80fd\u200b\u6709\u200b\u4e00\u4e2a\u200b\u7279\u5f81\u200b\uff0c\u200b\u8868\u793a\u200b\u51fd\u6570\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u7279\u5b9a\u200b\u7279\u5f81\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002\u200b\u4f46\u200b\u51fd\u6570\u200b\u4f53\u200b\u5185\u90e8\u200b\u4e0d\u80fd\u200b\u8fd4\u56de\u200b\u591a\u4e2a\u200b\u4e0d\u540c\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>fn foo(x: bool) -&gt; impl Display {\n    if x {\n        1\n    } else {\n        \"hello\" // Error, since 1 and \"hello\" have different types\n    }\n}\n</code></pre>"},{"location":"coding/rust/4/","title":"Lifetimes","text":"<p>\u200b\u5728\u200bRust\u200b\u4e2d\u200b\uff0c\u200b\u5bf9\u8c61\u200b\u751f\u547d\u5468\u671f\u200b\u548c\u200b\u6240\u6709\u6743\u200b\u662f\u200b\u7d27\u5bc6\u200b\u76f8\u5173\u200b\u7684\u200b\u3002\u200b\u6240\u6709\u6743\u200b\u89c4\u5219\u200b\u662f\u200bRust\u200b\u7684\u200b\u6838\u5fc3\u200b\u7279\u6027\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200bRust\u200b\u4e0e\u200b\u5176\u4ed6\u200b\u8bed\u8a00\u200b\u6700\u5927\u200b\u7684\u200b\u4e0d\u540c\u4e4b\u5904\u200b\u3002</p>"},{"location":"coding/rust/4/#ownership","title":"\u6240\u6709\u6743\u200b\uff08Ownership\uff09","text":"<p>\u200b\u6bcf\u200b\u4e00\u5757\u200b\u5185\u5b58\u200b\u6570\u636e\u200b\u90fd\u200b\u548c\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u540d\u200b\u7ed1\u5b9a\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u53d8\u91cf\u540d\u200b\u5c31\u662f\u200b\u8fd9\u5757\u200b\u5185\u5b58\u200b\u6570\u636e\u200b\u7684\u200b\u6240\u6709\u8005\u200b\u3002\u200b\u5f53\u200b\u6240\u6709\u8005\u200b\u8d85\u51fa\u200b\u4f5c\u7528\u57df\u200b\u65f6\u200b\uff0c\u200b\u8fd9\u5757\u200b\u5185\u5b58\u200b\u6570\u636e\u200b\u5c31\u200b\u4f1a\u200b\u88ab\u200b\u91ca\u653e\u200b\u3002\u200b\u5728\u200b\u672c\u8282\u200b\u4e2d\u200b\uff0c\u201c\u200b\u53d8\u91cf\u200b\u201d\u200b\u548c\u200b\u201c\u200b\u7ed1\u5b9a\u200b\u201d\u200b\u90fd\u200b\u662f\u200b\u6307\u200b\u901a\u8fc7\u200b<code>let</code>\u200b\u5173\u952e\u5b57\u200b\u58f0\u660e\u200b\u7684\u200b\u53d8\u91cf\u200b\u3002</p> <p>\u200b\u5f53\u200b\u4f7f\u7528\u200b<code>=</code>\u200b\u5c06\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b\u8d4b\u503c\u200b\u7ed9\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b\uff0c\u200b\u6216\u662f\u200b\u5c06\u200b\u53d8\u91cf\u200b\u4f5c\u4e3a\u200b\u51fd\u6570\u200b\u53c2\u6570\u4f20\u9012\u200b\u65f6\u200b\uff0c\u200b\u6240\u6709\u6743\u200b\u4f1a\u200b\u53d1\u751f\u200b\u8f6c\u79fb\u200b\uff0c\u200b\u6b64\u65f6\u200b\u6709\u200b\u4e24\u79cd\u200b\u53ef\u80fd\u200b\uff1a</p> <ul> <li>\u200b\u503c\u200b\u62f7\u8d1d\u200b\uff1a\u200b\u539f\u6765\u200b\u7684\u200b\u5185\u5b58\u200b\u6570\u636e\u200b\u4f1a\u200b\u88ab\u200b\u590d\u5236\u200b\u4e00\u4efd\u200b\u7ed9\u200b\u65b0\u200b\u7684\u200b\u53d8\u91cf\u200b\uff0c\u200b\u4e24\u4e2a\u200b\u53d8\u91cf\u540d\u200b\u7ed1\u5b9a\u200b\u7684\u200b\u5185\u5b58\u200b\u6570\u636e\u200b\u4e0d\u540c\u200b\u3002</li> <li>\u200b\u503c\u200b\u79fb\u52a8\u200b\uff1a\u200b\u539f\u6765\u200b\u7684\u200b\u5185\u5b58\u200b\u6570\u636e\u200b\u4f1a\u200b\u88ab\u200b\u91cd\u65b0\u200b\u7ed1\u5b9a\u200b\u7ed9\u200b\u65b0\u200b\u7684\u200b\u53d8\u91cf\u200b\uff0c\u200b\u6b64\u65f6\u200b\u4e0d\u80fd\u200b\u518d\u200b\u901a\u8fc7\u200b\u539f\u6765\u200b\u7684\u200b\u53d8\u91cf\u540d\u200b\u8bbf\u95ee\u200b\u5185\u5b58\u200b\u6570\u636e\u200b\u3002</li> </ul> <p>\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0cRust\u200b\u4f1a\u200b\u91c7\u53d6\u200b\u503c\u200b\u79fb\u52a8\u200b\u7684\u200b\u65b9\u5f0f\u200b\u8fdb\u884c\u200b\u8d4b\u503c\u200b\uff0c\u200b\u9664\u975e\u200b\u5bf9\u8c61\u200b\u7684\u200b\u7c7b\u578b\u200b\u5b9e\u73b0\u200b\u4e86\u200b<code>Copy</code> trait\u3002\u200b\u5927\u591a\u6570\u200b\u57fa\u672c\u200b\u7c7b\u578b\u200b\u90fd\u200b\u5b9e\u73b0\u200b\u4e86\u200b<code>Copy</code> trait\u3002</p> <pre><code>fn main() {\n    let a = vec![1, 2, 3]; // vec is not a primitive type, and it does not implement Copy trait\n    let b = a;\n    println!(\"{:?} {:?}\", a, b); // Error; use of moved value: `a`\n}\n</code></pre>"},{"location":"coding/rust/4/#borrowing","title":"\u5f15\u7528\u200b\uff08Borrowing\uff09","text":"<p>\u200b\u5728\u200bRust\u200b\u4e2d\u200b\uff0c\u200b\u53d8\u91cf\u200b\u7684\u200b\u5f15\u7528\u200b\u6709\u200b\u4e24\u79cd\u200b\uff0c\u200b\u5373\u200b\u53ea\u8bfb\u200b\u5f15\u7528\u200b\uff08<code>&amp;T</code>\uff09\u200b\u548c\u200b\u53ef\u53d8\u200b\u5f15\u7528\u200b\uff08<code>&amp;mut T</code>\uff09\u3002\u200b\u53ea\u8bfb\u200b\u5f15\u7528\u200b\u548c\u200b\u53ef\u53d8\u200b\u5f15\u7528\u200b\u90fd\u200b\u662f\u200b\u6307\u5411\u200b\u539f\u59cb\u200b\u53d8\u91cf\u200b\u7684\u200b\u6307\u9488\u200b\uff0c\u200b\u4f46\u200b\u53ea\u8bfb\u200b\u5f15\u7528\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u4fee\u6539\u200b\u539f\u59cb\u200b\u53d8\u91cf\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u800c\u200b\u53ef\u53d8\u200b\u5f15\u7528\u200b\u5141\u8bb8\u200b\u4fee\u6539\u200b\u539f\u59cb\u200b\u53d8\u91cf\u200b\u7684\u200b\u503c\u200b\u3002\u200b\u53ef\u53d8\u200b\u5f15\u7528\u200b\u53ea\u80fd\u200b\u6307\u5411\u200b\u53ef\u53d8\u200b\u53d8\u91cf\u200b\u3002\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u89e3\u200b\u5f15\u7528\u200b\u8fd0\u7b97\u7b26\u200b<code>*</code>\u200b\u6765\u200b\u8bbf\u95ee\u200b\u5f15\u7528\u200b\u6307\u5411\u200b\u7684\u200b\u503c\u200b\u3002</p> <pre><code>fn main() {\n    let const_var = 5;\n    let mutable_ref = &amp;mut const_var;\n    // error[E0596]: cannot borrow `const_var` as mutable, as it is not declared as mutable\n}\n</code></pre> <p>\u200b\u5f15\u7528\u200b\u7684\u200b\u751f\u547d\u5468\u671f\u200b\u662f\u4ece\u200b\u5f15\u7528\u200b\u58f0\u660e\u200b\u5f00\u59cb\u200b\u5230\u200b\u5f15\u7528\u200b\u6700\u540e\u200b\u4e00\u6b21\u200b\u4f7f\u7528\u200b\u7ed3\u675f\u200b\u3002\u200b\u5173\u4e8e\u200b\u5f15\u7528\u200b\u7684\u200b\u4f7f\u7528\u200b\u6709\u200b\u5982\u4e0b\u200b\u9650\u5236\u200b\uff1a</p> <ol> <li> <p>\u200b\u5728\u200b\u5f15\u7528\u200b\u7684\u200b\u751f\u547d\u5468\u671f\u200b\u5185\u200b\uff0c\u200b\u53ef\u53d8\u200b\u5f15\u7528\u200b\u548c\u200b\u53ea\u8bfb\u200b\u5f15\u7528\u200b\u4e0d\u80fd\u200b\u540c\u65f6\u200b\u5b58\u5728\u200b\u3002</p> \u200b\u9519\u8bef\u200b\u6b63\u786e\u200b <pre><code>fn main() {\n    let mut owner = 5;\n    let shared_borrow = &amp;owner; // share_borrow starts here\n    let mutable_borrow = &amp;mut owner; // mutable_borrow starts here\n    println!(\"{}\", mutable_borrow); // Error\n    // mutable_borrow ends here\n    println!(\"{}\", shared_borrow);\n    // share_borrow ends here\n}\n</code></pre> <pre><code>fn main() {\n    let mut owner = 5;\n    let shared_borrow = &amp;owner; // shared_borrow starts here\n    println!(\"{}\", shared_borrow);\n    // shared_borrow ends here\n    // mutable_borrow starts here\n    let mutable_borrow = &amp;mut owner; // mutable_borrow starts here\n    println!(\"{}\", mutable_borrow);\n    // mutable_borrow ends here\n}\n</code></pre> </li> <li> <p>\u200b\u5728\u200b\u53ef\u53d8\u200b\u5f15\u7528\u200b\u7684\u200b\u751f\u547d\u5468\u671f\u200b\u5185\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u5bf9\u200b\u540c\u4e00\u200b\u53d8\u91cf\u200b\u58f0\u660e\u200b\u65b0\u200b\u7684\u200b\u53ef\u53d8\u200b\u5f15\u7528\u200b\u3002</p> \u200b\u9519\u8bef\u200b\u6b63\u786e\u200b <pre><code>fn main() {\n    let mut owner = 5;\n    let mutable_borrow = &amp;mut owner;\n    let another_mutable_borrow = &amp;mut owner;\n    println!(\"{} {}\", mutable_borrow, another_mutable_borrow);\n    // error[E0499]: cannot borrow `owner` as mutable more than once at a time\n}\n</code></pre> <pre><code>fn main() {\n    let mut owner = 5;\n    let mutable_borrow = &amp;mut owner;\n    println!(\"{}\", mutable_borrow);\n    let another_mutable_borrow = &amp;mut owner;\n    println!(\"{}\", another_mutable_borrow);\n}\n</code></pre> </li> <li> <p>\u200b\u5728\u200b\u53ef\u53d8\u200b\u5f15\u7528\u200b\u7684\u200b\u751f\u547d\u5468\u671f\u200b\u5185\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u8bbf\u95ee\u200b\u539f\u59cb\u200b\u53d8\u91cf\u200b\u6216\u200b\u5bf9\u200b\u539f\u59cb\u200b\u53d8\u91cf\u200b\u8fdb\u884c\u200b\u8d4b\u503c\u200b\u3002</p> \u200b\u9519\u8bef\u200b\u6b63\u786e\u200b <pre><code>fn main() {\n    let mut owner = 5;\n    let mutable_borrow = &amp;mut owner;\n    println!(\"{}\", owner + *mutable_borrow);\n    // error[E0503]: cannot use `owner` because it was mutably borrowed\n}\n</code></pre> <pre><code>fn main() {\n    let mut owner = 5;\n    let mutable_borrow = &amp;mut owner;\n    println!(\"{}\", *mutable_borrow + owner); // 10\n}\n</code></pre> </li> <li> <p>\u200b\u53ef\u4ee5\u200b\u7528\u200b\u6570\u636e\u5e93\u200b\u4e2d\u200b\u201c\u200b\u5171\u4eab\u200b\u9501\u200b\u201d\u200b\u548c\u200b\u201c\u200b\u6392\u200b\u4ed6\u200b\u9501\u200b\u201d\u200b\u7684\u200b\u6982\u5ff5\u200b\u6765\u200b\u7406\u89e3\u200b\u53ea\u8bfb\u200b\u5f15\u7528\u200b\u548c\u200b\u53ef\u53d8\u200b\u5f15\u7528\u200b\u3002\u200b\u53ea\u8bfb\u200b\u5f15\u7528\u200b\u76f8\u5f53\u4e8e\u200b\u5bf9\u200b\u539f\u59cb\u200b\u53d8\u91cf\u200b\u52a0\u200b\u5171\u4eab\u200b\u9501\u200b\uff0c\u200b\u53ef\u53d8\u200b\u5f15\u7528\u200b\u76f8\u5f53\u4e8e\u200b\u5bf9\u200b\u539f\u59cb\u200b\u53d8\u91cf\u200b\u52a0\u6392\u200b\u4ed6\u9501\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u540c\u200b\u4e00\u5757\u200b\u6570\u636e\u200b\uff0c\u200b\u5171\u4eab\u200b\u9501\u200b\u53ef\u4ee5\u200b\u540c\u65f6\u200b\u5b58\u5728\u200b\uff0c\u200b\u4f46\u6392\u200b\u4ed6\u200b\u9501\u200b\u53ea\u80fd\u200b\u6709\u200b\u4e00\u4e2a\u200b\u3002</p> </li> <li> <p>\u200b\u5f15\u7528\u200b\u7684\u200b\u751f\u547d\u5468\u671f\u200b\u4e0d\u80fd\u200b\u8d85\u8fc7\u200b\u539f\u59cb\u200b\u53d8\u91cf\u200b\u7684\u200b\u751f\u547d\u5468\u671f\u200b\u3002</p> E0597: ... does not live long enoughE0515: cannot return value referencing local variable ... <pre><code>struct Foo&lt;'a&gt; {\n    x: Option&lt;&amp;'a u32&gt;,\n}\n\nfn main() {\n    let mut x = Foo { x: None };\n    {\n        let y = 0;\n        x.x = Some(&amp;y);\n    } // Leaving the scope of y, y is dropped\n    println!(\"{:?}\", x.x) // error[E0597]: `y` does not live long enough\n}\n</code></pre> <pre><code>fn one(x: &amp;i32) -&gt; &amp;i32 {\n    let ret = *x + 1;\n    &amp;ret // error[E0515]: cannot return value referencing local variable `ret`\n} // Leaving the scope of ret, ret is dropped\n\nfn main() {\n    println!(\"{}\", *one(&amp;5));\n}\n</code></pre> </li> </ol>"},{"location":"coding/rust/4/#_1","title":"\u751f\u547d\u5468\u671f","text":"<p>\u200b\u5f15\u7528\u200b\u76f8\u5f53\u4e8e\u200b\u6307\u5411\u200b\u4e00\u6bb5\u200b\u5185\u5b58\u7a7a\u95f4\u200b\u7684\u200b\u6307\u9488\u200b\uff0c\u200b\u5728\u200b\u6700\u540e\u200b\u4e00\u6b21\u200b\u8bbf\u95ee\u200b\u5f15\u7528\u200b\u540e\u200b\uff0c\u200b\u5f15\u7528\u200b\u7684\u200b\u751f\u547d\u5468\u671f\u200b\u5c31\u200b\u7ed3\u675f\u200b\u4e86\u200b\uff0c\u200b\u4f46\u200b\u5728\u200b\u4e00\u4e9b\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u9700\u8981\u200b\u7ee7\u7eed\u200b\u4fdd\u6301\u200b\u5f15\u7528\u200b\u7684\u200b\u751f\u547d\u5468\u671f\u200b\uff0c\u200b\u6bd4\u5982\u200b\u5728\u200b\u51fd\u6570\u200b\u4e2d\u200b\u8fd4\u56de\u200b\u5f15\u7528\u200b\u3002\u200b\u5728\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u5f15\u7528\u200b\u6807\u8bb0\u200b\u6765\u200b\u6307\u5b9a\u200b\u5f15\u7528\u200b\u7684\u200b\u751f\u547d\u5468\u671f\u200b\u3002</p> <pre><code>fn main() {\n    let reference_to_nothing = dangle();\n    // error[E0106]: missing lifetime specifier\n}\n\nfn dangle() -&gt; &amp;String {\n    let s = String::from(\"hello\");\n\n    &amp;s // The lifetime of s is over, so this reference is dangling\n}\n</code></pre> <p>\u200b\u5f15\u7528\u200b\u6807\u8bb0\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u6cdb\u578b\u200b\u53c2\u6570\u200b\u3001\u200b\u51fd\u6570\u53c2\u6570\u200b\u3001\u200b\u51fd\u6570\u200b\u8fd4\u56de\u503c\u200b\uff0c\u200b\u800c\u200b\u4e0d\u80fd\u200b\u7528\u4e8e\u200b\u5f15\u7528\u200b\u58f0\u660e\u200b\u3002\u200b\u6709\u200b\u76f8\u540c\u200b\u5f15\u7528\u200b\u6807\u8bb0\u200b\u7684\u200b\u5f15\u7528\u200b\u7684\u200b\u751f\u547d\u5468\u671f\u200b\u76f8\u540c\u200b\u3002<code>'static</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7279\u6b8a\u200b\u5f15\u7528\u200b\u6807\u8bb0\u200b\uff0c\u200b\u8868\u793a\u200b\u5f15\u7528\u200b\u7684\u200b\u751f\u547d\u5468\u671f\u200b\u662f\u200b\u6574\u4e2a\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u751f\u547d\u5468\u671f\u200b\uff0c\u200b\u5373\u200b\u5f15\u7528\u200b\u6307\u5411\u200b\u7684\u200b\u5185\u5b58\u7a7a\u95f4\u200b\u5728\u200b\u7a0b\u5e8f\u200b\u7ed3\u675f\u200b\u65f6\u624d\u200b\u4f1a\u200b\u88ab\u200b\u91ca\u653e\u200b\u3002\u200b\u6240\u6709\u200b\u6307\u5411\u200b\u5b57\u7b26\u4e32\u200b\u5b57\u9762\u200b\u91cf\u200b\u7684\u200b\u5f15\u7528\u200b\u90fd\u200b\u662f\u200b<code>'static</code>\u200b\u7c7b\u578b\u200b\u3002</p> \u200b\u51fd\u6570\u200b\u590d\u6742\u200b\u5bf9\u8c61\u200bImpl &amp; Trait\u200b\u6cdb\u578b\u200b <pre><code>fn function&lt;'a&gt;() -&gt; &amp;'a str {}\nfn function&lt;'a&gt;(x: &amp;'a str) {}\nfn function&lt;'a&gt;(x: &amp;'a str) -&gt; &amp;'a str {}\nfn function&lt;'a&gt;(x: &amp;'a str, y: &amp;'a str) -&gt; &amp;'a str {}\nfn function&lt;'a, 'b&gt;(x: &amp;'a str, y: &amp;'b str) -&gt; &amp;'a str {}\n</code></pre> <pre><code>enum Enum&lt;'a&gt; {\n    Variant1(&amp;'a str),\n    Variant2(&amp;'a str) // exist as long as parent object exists\n}\nstruct Struct&lt;'a&gt; {\n    field: &amp;'a str // exist as long as parent object exists\n}\n</code></pre> <pre><code>struct Struct&lt;'a&gt; {\n    field: &amp;'a str\n}\ntrait New&lt;'a&gt; {\n    fn new() -&gt; Self;\n}\nimpl&lt;'a&gt; New&lt;'a&gt; for Struct&lt;'a&gt; {\n    fn new() -&gt; Self {\n        Struct { field: \"hello\" }\n    }\n}\n</code></pre> <pre><code>fn function&lt;T&gt;(x: T) where for&lt;'a&gt; T: Fn(&amp;'a str) -&gt; &amp;'a str {}\nenum Enum&lt;T&gt; where for&lt;'a&gt; T: Fn(&amp;'a str) -&gt; &amp;'a str { V(T) }\nstruct Struct&lt;T&gt; where for&lt;'a&gt; T: Fn(&amp;'a str) -&gt; &amp;'a str { field: T }\nimpl&lt;T&gt; Struct&lt;T&gt; where for&lt;'a&gt; T: Fn(&amp;'a str) -&gt; &amp;'a str {\n    fn function(&amp;self) -&gt; &amp;F { &amp;self.field }\n}\n</code></pre> <p>\u200b\u5176\u4e2d\u200b\uff0c<code>where for</code>\u200b\u6709\u200b\u53e6\u200b\u4e00\u79cd\u200b\u5199\u6cd5\u200b</p> <pre><code>fn function&lt;T&gt;(x: T) where T: for&lt;'a&gt; Fn(&amp;'a str) -&gt; &amp;'a str {}\n</code></pre> <p><code>for</code>\u200b\u5bf9\u200b<code>T</code>\u200b\u8fdb\u884c\u200b\u4e86\u200b\u9650\u5236\u200b\uff0c\u200b\u8868\u793a\u200b<code>T</code>\u200b\u5fc5\u987b\u200b\u662f\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u4e14\u200b\u8fd9\u4e2a\u200b\u51fd\u6570\u200b\u7684\u200b\u53c2\u6570\u200b\u548c\u200b\u751f\u547d\u5468\u671f\u200b\u5fc5\u987b\u200b\u548c\u200b\u6a21\u677f\u200b\u5339\u914d\u200b\u3002</p> <pre><code>struct Closure&lt;F&gt; {\n    data: (u8, u16),\n    func: F,\n}\n\nimpl&lt;F&gt; Closure&lt;F&gt;\n    where for&lt;'a&gt; F: Fn(&amp;'a (u8, u16)) -&gt; &amp;'a u8,\n{\n    fn call(&amp;self) -&gt; &amp;u8 {\n        (self.func)(&amp;self.data)\n    }\n}\n\nfn do_it(data: &amp;(u8, u16)) -&gt; &amp;u8 { &amp;data.0 }\n\nfn main() {\n    let clo = Closure { data: (0, 1), func: do_it };\n    println!(\"{}\", clo.call());\n}\n</code></pre> <p>\u200b\u4e0d\u540c\u200b\u5f15\u7528\u200b\u6807\u8bb0\u200b\u7684\u200b\u5f15\u7528\u200b\u4e0d\u80fd\u200b\u76f8\u4e92\u200b\u8d4b\u503c\u200b\uff0c\u200b\u5728\u200b\u4f5c\u4e3a\u200b\u51fd\u6570\u200b\u8fd4\u56de\u503c\u200b\u65f6\u200b\uff0cRust\u200b\u4e5f\u200b\u4f1a\u200b\u68c0\u67e5\u200b\u5f15\u7528\u200b\u6807\u8bb0\u200b\u662f\u5426\u200b\u5339\u914d\u200b\u3002\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>'a: 'b</code>\u200b\u6765\u200b\u7ea6\u675f\u200b<code>'a</code>\u200b\u7684\u200b\u751f\u547d\u5468\u671f\u200b\u4e0d\u77ed\u4e8e\u200b<code>'b</code>\u200b\u7684\u200b\u751f\u547d\u5468\u671f\u200b\u3002</p> \u200b\u9519\u8bef\u200b\u6b63\u786e\u200b\u6b63\u786e\u200b <pre><code>fn two_args&lt;'a, 'b&gt;(a: &amp;'a mut i32, b: &amp;'b i32) -&gt; &amp;'b mut i32 {\n    *a += b;\n    a // error: lifetime may not live long enough\n}\nfn main() {\n    let mut a = 3;\n    let b: &amp;mut i32 = two_args(&amp;mut a, &amp;4);\n    println!(\"{}\", b);\n}\n</code></pre> <pre><code>fn two_args&lt;'a, 'b&gt;(a: &amp;'a mut i32, b: &amp;'b i32) -&gt; &amp;'a mut i32 {\n    *a += b;\n    a\n}\nfn main() {\n    let mut a = 3;\n    let b: &amp;mut i32 = two_args(&amp;mut a, &amp;4);\n    println!(\"{}\", b);\n}\n</code></pre> <pre><code>fn two_args&lt;'a: 'b, 'b&gt;(a: &amp;'a mut i32, b: &amp;'b i32) -&gt; &amp;'b mut i32 {\n    *a += b;\n    a\n}\nfn main() {\n    let mut a = 3;\n    let b: &amp;mut i32 = two_args(&amp;mut a, &amp;4);\n    println!(\"{}\", b);\n}\n</code></pre> <p>\u200b\u901a\u5e38\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u51fd\u6570\u200b\u58f0\u660e\u200b\u4e2d\u200b\u7684\u200b\u5f15\u7528\u200b\u6807\u8bb0\u200b\u53ef\u4ee5\u200b\u7701\u7565\u200b\uff0cRust\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u63a8\u65ad\u200b\u6bcf\u4e2a\u200b\u53c2\u6570\u200b\u548c\u200b\u8fd4\u56de\u503c\u200b\u7684\u200b\u5f15\u7528\u200b\u6807\u8bb0\u200b</p> <ol> <li> <p>\u200b\u6bcf\u4e2a\u200b\u8f93\u51fa\u200b\u53c2\u6570\u200b\u90fd\u200b\u4f1a\u200b\u5206\u914d\u200b\u4e00\u4e2a\u200b\u72ec\u7acb\u200b\u7684\u200b\u5f15\u7528\u200b\u6807\u8bb0\u200b\u3002</p> \u200b\u7701\u7565\u200b\u6807\u8bb0\u200b\u663e\u793a\u200b\u6807\u8bb0\u200b <pre><code>fn four_args(a: &amp;i32, b: &amp;i32, c: &amp;i32, d: &amp;i32) -&gt; i32 {\n    a + b + c + d\n}\n</code></pre> <pre><code>fn four_args&lt;'a, 'b, 'c, 'd&gt;(a: &amp;'a i32, b: &amp;'b i32, c: &amp;'c i32, d: &amp;'d i32) -&gt; i32 {\n    a + b + c + d\n}\n</code></pre> </li> <li> <p>\u200b\u5982\u679c\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u8f93\u5165\u200b\u53c2\u6570\u200b\uff0c\u200b\u90a3\u4e48\u200b\u8fd9\u4e2a\u200b\u53c2\u6570\u200b\u7684\u200b\u5f15\u7528\u200b\u6807\u8bb0\u200b\u5c31\u662f\u200b\uff08\u200b\u6240\u6709\u200b\uff09\u200b\u8fd4\u56de\u503c\u200b\u7684\u200b\u5f15\u7528\u200b\u6807\u8bb0\u200b\u3002</p> \u200b\u7701\u7565\u200b\u6807\u8bb0\u200b\u663e\u793a\u200b\u6807\u8bb0\u200b <pre><code>fn one_arg(a: &amp;i32) -&gt; &amp;i32 {\n    a\n}\n</code></pre> <pre><code>fn one_arg&lt;'a&gt;(a: &amp;'a i32) -&gt; &amp;'a i32 {\n    a\n}\n</code></pre> </li> <li> <p>\u200b\u5f53\u200b\u51fd\u6570\u200b\u7684\u200b\u67d0\u4e2a\u200b\u53c2\u6570\u200b\u4e3a\u200b<code>&amp;self</code>\u200b\u6216\u200b<code>&amp;mut self</code>\u200b\u65f6\u200b\uff0c\u200b\u8fd4\u56de\u503c\u200b\u7684\u200b\u5f15\u7528\u200b\u6807\u8bb0\u200b\u548c\u200b<code>&amp;self</code>\u200b\u7684\u200b\u5f15\u7528\u200b\u6807\u8bb0\u200b\u76f8\u540c\u200b\u3002</p> \u200b\u7701\u7565\u200b\u6807\u8bb0\u200b\u663e\u793a\u200b\u6807\u8bb0\u200b <pre><code>struct Player {\n    first_name: String,\n    last_name: String,\n}\n\nimpl Player {\n    fn full_name(&amp;self) -&gt; String {\n        format!(\"{} {}\", self.first_name, self.last_name)\n    }\n}\n</code></pre> <pre><code>struct Player {\n    first_name: String,\n    last_name: String,\n}\n\nimpl Player {\n    fn full_name&lt;'a&gt;(&amp;'a self) -&gt; String {\n        format!(\"{} {}\", self.first_name, self.last_name)\n    }\n}\n</code></pre> </li> <li> <p>\u200b\u5982\u679c\u200b\u4e0d\u200b\u6ee1\u8db3\u200b\u4e0a\u8ff0\u200b\u6761\u4ef6\u200b\uff0c\u200b\u5219\u200b\u9700\u8981\u200b\u663e\u5f0f\u200b\u6307\u5b9a\u200b\u5f15\u7528\u200b\u6807\u8bb0\u200b\u3002</p> \u200b\u9519\u8bef\u200b\u6b63\u786e\u200b <pre><code>fn two_args(a: &amp;mut i32, b: &amp;i32) -&gt; &amp;mut i32 {\n    *a += b;\n    a // error[E0106]: missing lifetime specifier\n}\nfn main() {\n    let mut a = 3;\n    let b: &amp;mut i32 = two_args(&amp;mut a, &amp;4);\n    println!(\"{}\", b);\n}\n</code></pre> <pre><code>fn two_args&lt;'a, 'b&gt;(a: &amp;'a mut i32, b: &amp;'b i32) -&gt; &amp;'a mut i32 {\n    *a += b;\n    a\n}\nfn main() {\n    let mut a = 3;\n    let b: &amp;mut i32 = two_args(&amp;mut a, &amp;4);\n    println!(\"{}\", b);\n}\n</code></pre> </li> </ol>"},{"location":"coding/rust/5/","title":"Error Handling","text":"<p>\u200b\u672c\u200b\u8282\u200b\u4ecb\u7ecd\u200bRust\u200b\u7684\u200b\u5f02\u5e38\u200b\u5904\u7406\u200b\u673a\u5236\u200b\u3002</p>"},{"location":"coding/rust/5/#_1","title":"\u7f16\u8bd1\u5668\u200b\u9519\u8bef","text":"<p>Rust\u200b\u4e2d\u200b\u7684\u200b\u90e8\u5206\u200b\u9519\u8bef\u200b\u53ef\u4ee5\u200b\u5728\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u88ab\u200b\u68c0\u6d4b\u200b\u51fa\u6765\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u9519\u8bef\u200b\u88ab\u200b\u79f0\u4e3a\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u9519\u8bef\u200b\uff08compile-time error\uff09\u3002\u200b\u4f7f\u7528\u200b<code>rustc --explain</code>\u200b\u53ef\u4ee5\u200b\u67e5\u770b\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u9519\u8bef\u200b\u7684\u200b\u8be6\u7ec6\u4fe1\u606f\u200b\u3002</p> <pre><code>rustc --explain E0382\n# A variable was used after its contents were moved elsewhere.\n#\n# Erroneous code example:\n#\n# struct MyStruct { s: u32 }\n#\n# fn main() {\n#    let mut x = MyStruct { s: 5u32 };\n#    let y = x;\n#    x.s = 6;\n#    println!(\"{}\", x.s);\n# }\n# ...\n</code></pre>"},{"location":"coding/rust/5/#panic","title":"\u5f02\u5e38\u200b\uff08Panic\uff09","text":"<p>Rust\u200b\u4e2d\u200b\u7684\u200b\u5f02\u5e38\u200b\u88ab\u200b\u79f0\u4e3a\u200bpanic\u3002\u200b\u5f53\u200b\u7a0b\u5e8f\u200b\u53d1\u751f\u200bpanic\u200b\u65f6\u200b\uff0cRust\u200b\u4f1a\u200b\u6253\u5370\u200b\u51fa\u200b\u5f02\u5e38\u200b\u4fe1\u606f\u200b\u5e76\u200b\u9000\u51fa\u200b\u7a0b\u5e8f\u200b\u3002\u200b\u6709\u200b\u591a\u4e2a\u200b\u5b8f\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u89e6\u53d1\u200b\u5f02\u5e38\u200b\u3002</p> <pre><code>// \u200b\u4ee5\u4e0b\u200b\u7684\u200b\u5b8f\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u63a5\u53d7\u200b\u7c7b\u4f3c\u200bprintln!\u200b\u7684\u200b\u683c\u5f0f\u5316\u200b\u5b57\u7b26\u4e32\u200b\npanic!(\"This is a panic!\");\nunimplemented!(); // \u200b\u7528\u4e8e\u200b\u6807\u8bb0\u200b\u672a\u200b\u5b9e\u73b0\u200b\u7684\u200b\u4ee3\u7801\u200b\nunreachable!(); // \u200b\u7528\u4e8e\u200b\u6807\u8bb0\u200b\u4e0d\u200b\u53ef\u80fd\u200b\u5230\u8fbe\u200b\u7684\u200b\u5206\u652f\u200b\n\n// \u200b\u4ee5\u4e0b\u200b\u5b8f\u200b\u7528\u4e8e\u200b\u6d4b\u8bd5\u200b\nassert!(false); // \u200b\u7528\u4e8e\u200b\u6d4b\u8bd5\u200b\u8868\u8fbe\u5f0f\u200b\u662f\u5426\u200b\u4e3a\u200btrue\nassert_eq!(1, 2); // \u200b\u7528\u4e8e\u200b\u6d4b\u8bd5\u200b\u4e24\u4e2a\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u503c\u200b\u662f\u5426\u200b\u76f8\u7b49\u200b\nassert_ne!(1, 1); // \u200b\u7528\u4e8e\u200b\u6d4b\u8bd5\u200b\u4e24\u4e2a\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u503c\u200b\u662f\u5426\u200b\u4e0d\u200b\u76f8\u7b49\u200b\n\n// \u200b\u5728\u200bDebug\u200b\u6a21\u5f0f\u200b\u6216\u200b\u4f7f\u7528\u200b-C debug-assertions\u200b\u53c2\u6570\u200b\u65f6\u200b\uff0c\u200b\u4ee5\u4e0b\u200b\u5b8f\u624d\u200b\u4f1a\u200b\u89e6\u53d1\u200b\ndebug_assert!(false);\ndebug_assert_eq!(1, 2);\ndebug_assert_ne!(1, 1);\n</code></pre>"},{"location":"coding/rust/5/#_2","title":"\u5f02\u5e38\u200b\u5904\u7406","text":"<p>Rust\u200b\u4e2d\u200b\u5185\u7f6e\u200b\u4e86\u200b\u4e24\u4e2a\u200b\u7c7b\u578b\u200b<code>Option&lt;T&gt;</code>\u200b\u548c\u200b<code>Result&lt;T, E&gt;</code>\u200b\u7528\u4e8e\u200b\u5f02\u5e38\u200b\u5904\u7406\u200b\uff0c\u200b\u5176\u200b\u5b9a\u4e49\u200b\u4e3a\u200b</p> <pre><code>enum Option&lt;T&gt; {\n    None,\n    Some(T),\n}\nenum Result&lt;T, E&gt; {\n    Ok(T),\n    Err(E),\n}\n</code></pre> <p>\u200b\u4ee5\u4e0b\u200b\uff0c\u200b\u5747\u200b\u4ee5\u200b<code>T</code>\u200b\u4ee3\u8868\u200b<code>Option::Some</code>\u200b\u6216\u200b<code>Result::Ok</code>\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c<code>E</code>\u200b\u4ee3\u8868\u200b<code>Result::Err</code>\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002</p> <ul> <li> <p><code>Option</code>\u200b\u7c7b\u578b\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u4e00\u4e2a\u200b\u53ef\u80fd\u200b\u4e0d\u200b\u5b58\u5728\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u5e38\u7528\u200b\u4e8e\u200b\u51fd\u6570\u53c2\u6570\u200b\u3001\u200b\u7ed3\u6784\u200b\u4f53\u5b57\u200b\u6bb5\u200b\u6216\u200b\u51fd\u6570\u200b\u8fd4\u56de\u503c\u200b\uff0c\u200b\u4f7f\u7528\u200b<code>match</code>\u200b\u8bed\u53e5\u200b\u53ef\u4ee5\u200b\u5339\u914d\u200b<code>Option</code>\u200b\u7c7b\u578b\u200b\u53d6\u503c\u200b\u7684\u200b\u4e0d\u540c\u200b\u60c5\u51b5\u200b\u3002</p> <pre><code>fn main() {\n    let x: Option&lt;i32&gt; = Some(5);\n    match x {\n        Some(i) =&gt; println!(\"{}\", i),\n        None =&gt; println!(\"None\"),\n    }\n}\n</code></pre> <ol> <li>\u200b\u4f7f\u7528\u200b<code>is_some</code>\u200b\u548c\u200b<code>is_none</code>\u200b\u65b9\u6cd5\u200b\u53ef\u4ee5\u200b\u5feb\u901f\u200b\u5224\u65ad\u200b<code>Option</code>\u200b\u7c7b\u578b\u200b\u662f\u5426\u200b\u4e3a\u200b<code>Some</code>\u200b\u6216\u200b<code>None</code>\u3002</li> <li>\u200b\u4f7f\u7528\u200b<code>unwrap</code>\u200b\u65b9\u6cd5\u200b\u53ef\u4ee5\u200b\u5c06\u200b<code>Option</code>\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u4e3a\u200b<code>T</code>\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5982\u679c\u200b<code>Option</code>\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>None</code>\uff0c\u200b\u5219\u200b\u4f1a\u200b\u89e6\u53d1\u200b\u5f02\u5e38\u200b\u3002</li> </ol> </li> <li> <p><code>Result</code>\u200b\u7c7b\u578b\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u4e00\u4e2a\u200b\u53ef\u80fd\u200b\u51fa\u9519\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u5e38\u7528\u200b\u4e8e\u200b\u51fd\u6570\u200b\u8fd4\u56de\u503c\u200b\u3002<code>Ok</code>\u200b\u8868\u793a\u200b\u51fd\u6570\u200b\u6267\u884c\u200b\u6210\u529f\u200b\uff0c<code>Err</code>\u200b\u8868\u793a\u200b\u51fd\u6570\u200b\u6267\u884c\u200b\u5931\u8d25\u200b\u3002</p> <pre><code>fn main() {\n    let x: Result&lt;i32, &amp;str&gt; = Ok(5);\n    match x {\n        Ok(i) =&gt; println!(\"{}\", i),\n        Err(e) =&gt; println!(\"{}\", e),\n    }\n}\n</code></pre> <ol> <li>\u200b\u4f7f\u7528\u200b<code>is_ok</code>\u200b\u548c\u200b<code>is_err</code>\u200b\u65b9\u6cd5\u200b\u53ef\u4ee5\u200b\u5feb\u901f\u200b\u5224\u65ad\u200b<code>Result</code>\u200b\u7c7b\u578b\u200b\u662f\u5426\u200b\u4e3a\u200b<code>Ok</code>\u200b\u6216\u200b<code>Err</code>\u3002</li> <li> <p>\u200b\u4f7f\u7528\u200b<code>ok</code>\u200b\u548c\u200b<code>err</code>\u200b\u65b9\u6cd5\u200b\u53ef\u4ee5\u200b\u5c06\u200b<code>Result&lt;T, E&gt;</code>\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u4e3a\u200b<code>Option&lt;T&gt;</code>\u200b\u7c7b\u578b\u200b\u3002\u200b\u5982\u679c\u200b\u8c03\u7528\u200b\u7684\u200b\u65b9\u6cd5\u200b\u548c\u200b<code>Result</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u53d6\u503c\u200b\u76f8\u540c\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b<code>Some(T)</code>\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b<code>None</code>\u3002</p> <pre><code>fn main() {\n    let x: Result&lt;i32, &amp;str&gt; = Ok(5);\n    let y: Option&lt;i32&gt; = x.ok();\n    println!(\"{:?}\", y); // Some(5)\n    let x: Result&lt;i32, &amp;str&gt; = Err(\"error\");\n    let y: Option&lt;i32&gt; = x.ok();\n    println!(\"{:?}\", y); // None\n}\n</code></pre> </li> <li> <p>\u200b\u4f7f\u7528\u200b<code>unwrap</code>\u200b\u65b9\u6cd5\u200b\u6216\u200b<code>expect</code>\u200b\u65b9\u6cd5\u200b\u53ef\u4ee5\u200b\u5c06\u200b<code>Result</code>\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u4e3a\u200b<code>T</code>\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5982\u679c\u200b<code>Result</code>\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>Err</code>\uff0c\u200b\u5219\u200b\u4f1a\u200b\u89e6\u53d1\u200b\u5f02\u5e38\u200b\uff0c\u200b\u8f93\u51fa\u200b\u7684\u200b\u5f02\u5e38\u200b\u4fe1\u606f\u200b\u5bf9\u5e94\u200b\u4e8e\u200b<code>Err</code>\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\u6216\u200b<code>expect</code>\u200b\u65b9\u6cd5\u200b\u7684\u200b\u53c2\u6570\u200b\u3002</p> <pre><code>fn main() {\n    let x: Result&lt;i32, &amp;str&gt; = Ok(5);\n    let y: i32 = x.unwrap();\n    println!(\"{}\", y); // 5\n    let x: Result&lt;i32, &amp;str&gt; = Err(\"error\");\n    let y: i32 = x.unwrap(); // thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: \"error\"', src/main.rs:2:26\n    println!(\"{}\", y);\n}\n</code></pre> </li> </ol> </li> </ul> <p><code>unwrap</code>\u200b\u65b9\u6cd5\u200b\u6709\u200b\u5982\u4e0b\u200b\u53d8\u79cd\u200b\uff1a</p> <ul> <li><code>expect</code>\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u6307\u5b9a\u200b\u8df3\u51fa\u200b\u5f02\u5e38\u200b\u65f6\u200b\u7684\u200b\u63d0\u793a\u4fe1\u606f\u200b\u3002</li> <li>\uff08\u200b\u4ec5\u200b<code>Result</code>\u200b\u7c7b\u578b\u200b\uff09<code>unwrap_err</code>\u200b\u65b9\u6cd5\u200b\u548c\u200b<code>expect_err</code>\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u4e0e\u200b<code>unwrap</code>\u200b\u76f8\u53cd\u200b\uff0c\u200b\u5f53\u200b<code>Result</code>\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>Ok</code>\u200b\u65f6\u200b\uff0c\u200b\u4f1a\u200b\u89e6\u53d1\u200b\u5f02\u5e38\u200b\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b<code>Err</code>\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\u3002</li> <li><code>unwrap_or</code>\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b<code>T</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u5728\u200b<code>unwrap</code>\u200b\u65b9\u6cd5\u200b\u4f1a\u200b\u89e6\u53d1\u200b\u5f02\u5e38\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u8fd4\u56de\u200b\u8be5\u200b\u53c2\u6570\u200b\u3002</li> <li> <p><code>unwrap_or_default</code>\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5728\u200b<code>unwrap</code>\u200b\u65b9\u6cd5\u200b\u4f1a\u200b\u89e6\u53d1\u200b\u5f02\u5e38\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u8fd4\u56de\u200b\u8be5\u200b\u9ed8\u8ba4\u503c\u200b\u3002\u200b\u8be5\u200b\u65b9\u6cd5\u200b\u8981\u6c42\u200b<code>T</code>\u200b\u7c7b\u578b\u200b\u5b9e\u73b0\u200b\u4e86\u200b<code>Default</code>\u200b\u7279\u6027\u200b\u3002</p> <pre><code>struct MyStruct {\n    s: i32\n}\n\nfn main() {\n    let a: Option&lt;MyStruct&gt; = None;\n    println!(\"{}\", a.unwrap_or_default().s);\n    // error[E0277]: the trait bound `MyStruct: Default` is not satisfied\n}\n</code></pre> </li> <li> <p><code>unwrap_or_else</code>\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\uff0c\u200b\u5728\u200b<code>unwrap</code>\u200b\u65b9\u6cd5\u200b\u4f1a\u200b\u89e6\u53d1\u200b\u5f02\u5e38\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u8fd4\u56de\u200b\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u3002\u200b\u5176\u4e2d\u200b\uff0c<code>Result</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u95ed\u5305\u200b\u53c2\u6570\u200b\u4e3a\u200b<code>E</code>\u200b\u7c7b\u578b\u200b\uff0c<code>Option</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u95ed\u5305\u200b\u53c2\u6570\u200b\u4e3a\u200b<code>()</code>\u200b\u7c7b\u578b\u200b\uff0c\u200b\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u9700\u8981\u200b\u548c\u200b<code>Some</code>\u200b\u6216\u200b<code>Ok</code>\u200b\u7684\u200b\u7c7b\u578b\u200b\u76f8\u540c\u200b\u3002</p> <pre><code>fn increment(x: i32) -&gt; i32 {\n    x + 1\n}\n\nfn main() {\n    let a: Result&lt;i32, i32&gt; = Err(2);\n    println!(\"{}\", a.unwrap_or_else(increment));\n    // 3\n}\n</code></pre> </li> </ul>"},{"location":"coding/rust/5/#_3","title":"\u8fd0\u7b97","text":"<p>Rust\u200b\u53ef\u4ee5\u200b\u5728\u200b\u4e0d\u200b\u53d6\u51fa\u200b<code>Option</code>\u200b\u6216\u200b<code>Result</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u503c\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u5bf9\u200b\u5176\u200b\u8fdb\u884c\u200b\u8fd0\u7b97\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u4ee5\u4e0b\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u8bb0\u200b<code>A</code>\u200b\u4e3a\u200b\u8c03\u7528\u200b\u65b9\u6cd5\u200b\u7684\u200b\u5bf9\u8c61\u200b\uff0c<code>B</code>\u200b\u4e3a\u200b\u65b9\u6cd5\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u5373\u200b<code>A.method(B)</code>\u3002</p> <p><code>Option</code>\u200b\u548c\u200b<code>Result</code>\u200b\u7684\u200b\u771f\u503c\u200b</p> <p>\u200b\u4e0d\u59a8\u200b\u5c06\u200b<code>Option</code>\u200b\u548c\u200b<code>Result</code>\u200b\u7c7b\u578b\u200b\u7684\u200b<code>Some</code>\u200b\u548c\u200b<code>Ok</code>\u200b\u89c6\u4e3a\u200b\u771f\u200b\uff0c\u200b\u5176\u4e2d\u200b\u7684\u200b\u503c\u200b<code>T</code>\u200b\u79f0\u4e3a\u200b\u771f\u503c\u200b\uff0c<code>None</code>\u200b\u548c\u200b<code>Err</code>\u200b\u89c6\u4e3a\u200b\u5047\u200b\uff0c<code>Err</code>\u200b\u7684\u200b\u503c\u200b<code>E</code>\u200b\u89c6\u4e3a\u200b\u5047\u503c\u200b\u3002</p> <ol> <li>\u200b\u903b\u8f91\u8fd0\u7b97\u200b<code>A.or(B)</code>\u200b\u4e0e\u200b<code>A.and(B)</code>\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u548c\u200b\u81ea\u8eab\u200b\u7c7b\u578b\u200b\u76f8\u540c\u200b\u7684\u200b\u53c2\u6570\u200b\u3002<ul> <li>\u200b\u5bf9\u4e8e\u200b<code>or()</code>\uff0c\u200b\u5982\u679c\u200b<code>A</code>\u200b\u4e3a\u200b\u771f\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b<code>A</code>\u200b\u7684\u200b\u771f\u503c\u200b\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b<code>B</code>\u200b\u503c\u200b\u3002</li> <li>\u200b\u5bf9\u4e8e\u200b<code>and()</code>\uff0c\u200b\u5982\u679c\u200b<code>A</code>\u200b\u4e3a\u200b\u5047\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b<code>A</code>\u200b\u7684\u200b\u5047\u503c\u200b\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b<code>B</code>\u3002</li> </ul> </li> <li><code>A.or_else()</code>\u200b\u4e3a\u200b<code>A.or(B)</code>\u200b\u7684\u200b\u53d8\u79cd\u200b\uff0c\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u3002\u200b\u5982\u679c\u200b\u4e3a\u200b\u771f\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b<code>A</code>\u200b\u7684\u200b\u771f\u503c\u200b\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u3002</li> <li><code>A.and_then()</code>\u200b\u4e3a\u200b<code>A.and(B)</code>\u200b\u7684\u200b\u53d8\u79cd\u200b\uff0c\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u3002\u200b\u5982\u679c\u200b\u4e3a\u200b\u5047\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b<code>A</code>\u200b\u7684\u200b\u5047\u503c\u200b\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u3002</li> <li>\uff08\u200b\u4ec5\u200b<code>Option</code>\u200b\u7c7b\u578b\u200b\uff09<code>A.filter()</code>\uff0c\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b<code>fn (T) -&gt; bool</code>\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u3002\u200b\u5982\u679c\u200b<code>A</code>\u200b\u4e3a\u200b\u771f\u200b\uff0c\u200b\u4e14\u200b\u4ee5\u200b\u5176\u200b\u771f\u503c\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u540e\u200b\u8c03\u7528\u51fd\u6570\u200b\u8fd4\u56de\u200b\u771f\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b<code>A</code>\u200b\u7684\u200b\u771f\u503c\u200b\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b<code>None</code>\u3002</li> <li><code>A.map()</code>\uff0c\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b<code>fn (T) -&gt; U</code>\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u3002\u200b\u5982\u679c\u200b<code>A</code>\u200b\u4e3a\u200b\u771f\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b<code>A</code>\u200b\u7684\u200b\u771f\u503c\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u540e\u200b\u8c03\u7528\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b<code>A</code>\u200b\u7684\u200b\u5047\u503c\u200b\u3002\u200b\u6ce8\u610f\u200b\u8fd4\u56de\u503c\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>Option&lt;U&gt;</code>\u200b\u6216\u200b<code>Result&lt;U, E&gt;</code>\u3002<ul> <li>\uff08\u200b\u4ec5\u200b<code>Result</code>\u200b\u7c7b\u578b\u200b\uff09<code>A.map_err()</code>\uff0c\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b<code>fn (E) -&gt; F</code>\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u3002\u200b\u5982\u679c\u200b<code>A</code>\u200b\u4e3a\u200b\u5047\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b<code>A</code>\u200b\u7684\u200b\u5047\u503c\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u540e\u200b\u8c03\u7528\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b<code>A</code>\u200b\u7684\u200b\u771f\u503c\u200b\u3002</li> <li>\uff08\u200b\u4ec5\u200b<code>Option</code>\u200b\u7c7b\u578b\u200b\uff09<code>A.map_or()</code>\uff0c\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b<code>U</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u9ed8\u8ba4\u503c\u200b\u548c\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b<code>fn (T) -&gt; U</code>\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u3002\u200b\u5982\u679c\u200b<code>A</code>\u200b\u4e3a\u200b\u771f\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b<code>A</code>\u200b\u7684\u200b\u771f\u503c\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u540e\u200b\u8c03\u7528\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b\u9ed8\u8ba4\u503c\u200b\u3002</li> <li><code>A.map_or_else()</code>\uff0c\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b<code>fn () -&gt; U</code>\u200b\u548c\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b<code>fn (T) -&gt; U</code>\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u3002\u200b\u5982\u679c\u200b<code>A</code>\u200b\u4e3a\u200b\u771f\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b<code>A</code>\u200b\u7684\u200b\u771f\u503c\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u540e\u200b\u8c03\u7528\u200b\u7b2c\u4e8c\u4e2a\u200b\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b\u7b2c\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u3002</li> </ul> </li> <li>\uff08\u200b\u4ec5\u200b<code>Option</code>\u200b\u7c7b\u578b\u200b\uff09<code>A.ok_or()</code>\u200b\u7528\u4e8e\u200b\u5c06\u200b<code>Option</code>\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u4e3a\u200b<code>Result</code>\u200b\u7c7b\u578b\u200b\uff0c\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b<code>E</code>\u200b\u7c7b\u578b\u200b\u7684\u200b\u53c2\u6570\u200b\u3002\u200b\u5982\u679c\u200b<code>A</code>\u200b\u4e3a\u200b\u771f\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b<code>A</code>\u200b\u7684\u200b\u771f\u503c\u200b\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b\u53c2\u6570\u200b\u4f5c\u4e3a\u200b<code>Err</code>\u200b\u7684\u200b\u503c\u200b\u3002<ul> <li><code>A.ok_or_else()</code>\u200b\u4e3a\u200b<code>A.ok_or()</code>\u200b\u7684\u200b\u53d8\u79cd\u200b\uff0c\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u3002\u200b\u5982\u679c\u200b<code>A</code>\u200b\u4e3a\u200b\u771f\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b<code>A</code>\u200b\u7684\u200b\u771f\u503c\u200b\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u3002</li> </ul> </li> <li><code>A.as_ref()</code>\u200b\u548c\u200b<code>A.as_mut()</code>\uff0c\u200b\u7528\u4e8e\u200b\u5c06\u200b<code>Option&lt;T&gt;</code>\u200b\u6216\u200b<code>Result&lt;T, E&gt;</code>\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u5176\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5f15\u7528\u200b\u3002\u200b\u5176\u4e2d\u200b<code>A.as_ref()</code>\u200b\u8fd4\u56de\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u5f15\u7528\u200b\uff0c\u200b\u5373\u200b<code>Option&lt;&amp;T&gt;</code>\u200b\u6216\u200b<code>Result&lt;&amp;T, &amp;E&gt;</code>\uff1b<code>A.as_mut()</code>\u200b\u8fd4\u56de\u200b\u53ef\u53d8\u200b\u5f15\u7528\u200b\uff0c\u200b\u5373\u200b<code>Option&lt;&amp;mut T&gt;</code>\u200b\u6216\u200b<code>Result&lt;&amp;mut T, &amp;mut E&gt;</code>\u3002</li> </ol>"},{"location":"coding/rust/5/#_4","title":"\u5f02\u5e38\u200b\u4f20\u9012","text":"<p>Rust\u200b\u4e2d\u200b\uff0c\u200b\u6709\u200b\u4e24\u79cd\u200b\u65b9\u5f0f\u200b\u53ef\u4ee5\u200b\u5411\u4e0a\u200b\u8fd4\u56de\u200b\u5f02\u5e38\u200b\u3002</p> <ul> <li> <p><code>?</code>\u200b\u8fd0\u7b97\u7b26\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5c06\u200b<code>Option</code>\u200b\u6216\u200b<code>Result</code>\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u4e3a\u200b<code>T</code>\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5982\u679c\u200b<code>Result</code>\u200b\u7c7b\u578b\u200b\u4e3a\u200b<code>Err</code>\u200b\u6216\u200b\uff0c\u200b\u5219\u200b\u4f1a\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b<code>Err</code>\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\u3002</p> <pre><code>fn fn_with_error&lt;'a&gt;() -&gt; Result&lt;i32, &amp;'a str&gt; {\n    Err(\"Deterministic error\")\n}\nfn use_fn&lt;'a&gt;() -&gt; Result&lt;i32, &amp;'a str&gt; {\n    let x = fn_with_error()?; // Directly return Err(\"Deterministic error\")\n    Ok(x) // unreachable\n}\nfn main() {\n    let x: &amp;str = use_fn().unwrap_err();\n    println!(\"{}\", x); // Deterministic error\n}\n</code></pre> </li> <li> <p><code>try!</code>\u200b\u5b8f\u200b\uff0c\u200b\u4e0e\u200b<code>?</code>\u200b\u7684\u200b\u6548\u679c\u200b\u7b49\u540c\u200b\uff0c\u200b\u4f7f\u7528\u200b\u65b9\u5f0f\u200b\u4e3a\u200b<code>try!(expression)</code>\u3002\u200b\u76ee\u524d\u200b\u5df2\u7ecf\u200b\u88ab\u200b\u5f03\u7528\u200b\uff0c\u200b\u4f7f\u7528\u200b<code>?</code>\u200b\u4ee3\u66ff\u200b\u3002</p> <pre><code>fn fn_with_error&lt;'a&gt;() -&gt; Result&lt;i32, &amp;'a str&gt; {\n    Err(\"Deterministic error\")\n}\nfn use_fn&lt;'a&gt;() -&gt; Result&lt;i32, &amp;'a str&gt; {\n    let x = try!(fn_with_error()); // error: use of deprecated `try` macro\n    Ok(x) // unreachable\n}\nfn main() {\n    let x: &amp;str = use_fn().unwrap_err();\n    println!(\"{}\", x); // Deterministic error\n}\n</code></pre> </li> </ul>"},{"location":"coding/rust/5/#_5","title":"\u4e3b\u200b\u51fd\u6570","text":"<p>Rust\u200b\u7684\u200b<code>main</code>\u200b\u51fd\u6570\u200b\u53ea\u80fd\u200b\u53d6\u200b<code>()</code>\u200b\u6216\u200b<code>Result&lt;(), E&gt;</code>\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5176\u4e2d\u200b<code>E</code>\u200b\u4e3a\u200b<code>std::error::Error</code>\u200b\u7684\u200b\u5b9e\u73b0\u200b\u7c7b\u578b\u200b\u3002\u200b\u5982\u679c\u200b<code>main</code>\u200b\u51fd\u6570\u200b\u8fd4\u56de\u200b<code>Result</code>\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5219\u200b\u4f1a\u200b\u5c06\u200b<code>Err</code>\u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\u6253\u5370\u200b\u5230\u200b<code>stderr</code>\u200b\u5e76\u200b\u9000\u51fa\u200b\u7a0b\u5e8f\u200b\u3002</p> <pre><code>use std::fs::File;\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    let _ = File::open(\"not-existing-file.txt\")?; // Result::Err\n\n    Ok(()) // Default return value\n    // Must with this line, otherwise return () which is incompatible\n}\n</code></pre> <p>\u200b\u5982\u679c\u200b<code>main</code>\u200b\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b\u4e0d\u662f\u200b<code>()</code>\u200b\u6216\u200b<code>Result</code>\uff0c\u200b\u5219\u200b\u65e0\u6cd5\u200b\u901a\u8fc7\u200b\u7f16\u8bd1\u200b\u3002</p> <pre><code>fn main() -&gt; i32 {\n    0\n}\n// error[E0277]: `main` has invalid return type `i32`\n</code></pre>"},{"location":"coding/rust/5/#_6","title":"\u81ea\u5b9a\u4e49\u200b\u5f02\u5e38","text":"<p>\u200b\u5728\u200bRust\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u81ea\u5b9a\u4e49\u200b\u5f02\u5e38\u200b\u7c7b\u578b\u200b\u3002\u200b\u5f02\u5e38\u200b\u7c7b\u578b\u200b\u9700\u8981\u200b\u5b9e\u73b0\u200b<code>std::error::Error</code>\u200b\u7279\u6027\u200b\uff0c\u200b\u8be5\u200b\u7279\u6027\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4ee5\u4e0b\u200b\u65b9\u6cd5\u200b\uff1a</p> <ul> <li><code>fn source(&amp;self) -&gt; Option&lt;&amp;(dyn Error + 'static)&gt;</code>\uff0c\u200b\u7528\u4e8e\u200b\u8fd4\u56de\u200b\u5f15\u8d77\u200b\u5f02\u5e38\u200b\u7684\u200b\u539f\u56e0\u200b\uff08\u200b\u53ef\u200b\u9009\u200b\uff09\u3002</li> <li><code>fn Debug::fmt(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result</code>\uff0c\u200b\u7528\u4e8e\u200b\u683c\u5f0f\u5316\u200b\u5f02\u5e38\u200b\u4fe1\u606f\u200b\uff08\u200b\u7528\u4e8e\u200b\u8c03\u8bd5\u200b\uff09\u3002</li> <li><code>fn Display::fmt(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result</code>\uff0c\u200b\u7528\u4e8e\u200b\u683c\u5f0f\u5316\u200b\u5f02\u5e38\u200b\u4fe1\u606f\u200b\uff08\u200b\u7528\u4e8e\u200b\u8f93\u51fa\u200b\uff09\u3002</li> </ul> <pre><code>struct MyError {\n    code: i32,\n    message: String\n}\n\nimpl std::error::Error for MyError {\n    fn source(&amp;self) -&gt; Option&lt;&amp;(dyn std::error::Error + 'static)&gt; {\n        None\n    }\n}\n\nimpl std::fmt::Debug for MyError {\n    fn fmt(&amp;self, f: &amp;mut std::fmt::Formatter&lt;'_&gt;) -&gt; std::fmt::Result {\n        write!(\n            f, \"MyError {{ code: {}, message: {} }} at file {} line {}\",\n            self.code, self.message, file!(), line!()\n            // file!() and line!() are macros to get the current file and line\n        )\n    }\n}\n\nimpl std::fmt::Display for MyError {\n    fn fmt(&amp;self, f: &amp;mut std::fmt::Formatter&lt;'_&gt;) -&gt; std::fmt::Result {\n        write!(f, \"MyError {{ code: {}, message: {} }}\", self.code, self.message)\n    }\n}\n\n// Use the error\n\nfn raise_error() -&gt; Result&lt;(), MyError&gt; {\n    Err(MyError { code: 1, message: \"Error message\".to_string() })\n}\n\nfn main() -&gt; Result&lt;(), MyError&gt; {\n    let _ = raise_error()?;\n    // MyError { code: 1, message: Error message } at file src/main.rs line 16\n    Ok(())\n}\n</code></pre>"},{"location":"coding/rust/5/#_7","title":"\u5f02\u5e38\u200b\u8f6c\u6362","text":"<p>\u200b\u7531\u4e8e\u200bRust\u200b\u4e2d\u200b\u7684\u200b\u5f02\u5e38\u200b\u7c7b\u578b\u200b\u662f\u200b\u9759\u6001\u200b\u7684\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5728\u200b\u5f02\u5e38\u200b\u4f20\u9012\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u9047\u5230\u200b\u5f02\u5e38\u200b\u7c7b\u578b\u200b\u4e0d\u200b\u5339\u914d\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002\u200b\u6b64\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>From</code>\u200b\u7279\u6027\u200b\u5c06\u200b\u5f02\u5e38\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u4e3a\u200b\u53e6\u200b\u4e00\u79cd\u200b\u5f02\u5e38\u200b\u7c7b\u578b\u200b\u3002</p> <p>\u200b\u4ee5\u4e0b\u200b\u4ee5\u200b<code>std::io::Error</code>\u200b\u4e3a\u4f8b\u200b\u3002</p> <pre><code>impl std::convert::From&lt;std::io::Error&gt; for MyError {\n    fn from(error: std::io::Error) -&gt; Self {\n        MyError { code: 2, message: error.to_string() }\n    }\n}\n</code></pre> <p>\u200b\u6b64\u540e\u200b\uff0c\u200b\u65e0\u9700\u200b\u663e\u5f0f\u200b\u8c03\u7528\u200b<code>From</code>\u200b\u7279\u6027\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5373\u53ef\u200b\u5c06\u200b<code>std::io::Error</code>\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u4e3a\u200b<code>MyError</code>\u200b\u7c7b\u578b\u200b\u3002</p>"},{"location":"coding/rust/6/","title":"Supplements for Basics","text":""},{"location":"coding/rust/6/#_1","title":"\u5ffd\u7565\u200b\u53d8\u91cf","text":"<p>\u200b\u5728\u200b\u58f0\u660e\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b\u5374\u200b\u6ca1\u6709\u200b\u4f7f\u7528\u200b\u65f6\u200b\uff0cRust\u200b\u4f1a\u200b\u7ed9\u51fa\u200b\u8b66\u544a\u200b\u3002\u200b\u5982\u679c\u200b\u4e0d\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u8fd9\u4e2a\u200b\u53d8\u91cf\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u53d8\u91cf\u540d\u200b\u524d\u200b\u52a0\u4e0a\u200b\u4e0b\u5212\u7ebf\u200b\u524d\u7f00\u200b\u4f5c\u4e3a\u200b\u6807\u8bb0\u200b\u3002\u200b\u540d\u4e3a\u200b<code>_</code>\u200b\u7684\u200b\u53d8\u91cf\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7279\u6b8a\u200b\u7684\u200b\u53d8\u91cf\u200b\uff0c\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u58f0\u660e\u200b\u591a\u6b21\u200b\uff0c\u200b\u4f46\u662f\u200b\u4e0d\u80fd\u200b\u88ab\u200b\u4f7f\u7528\u200b\u3002</p> <p>  Download source code</p> <pre><code>fn main() {\n    let _: i32 = 5;\n    println!(\"{}\", _);\n    // error: in expressions, `_` can only be used on the left-hand side of an assignment\n}\n</code></pre>"},{"location":"coding/rust/6/#_2","title":"\u6a21\u5f0f\u5339\u914d","text":""},{"location":"coding/rust-gui/","title":"Rust GUI library","text":"<p>The following pages are notes from Building a simple text editor with iced, a cross-platform GUI library for Rust using iced lib.</p> <ol> <li>Hello World</li> <li>Multi-line Input</li> <li>Theme and Cursor Indicator</li> <li>Async File Loading</li> <li>File Picker</li> <li>File Path Indicator</li> <li>New and Save</li> <li>Button prettify</li> <li>Syntax Highlighting</li> <li>Misc</li> </ol>"},{"location":"coding/rust-gui/1-hello-world/","title":"Hello World App","text":"<p>Keywords: <code>iced::Sandbox</code>, <code>iced::Settings</code>, <code>iced::widget::text</code></p>"},{"location":"coding/rust-gui/1-hello-world/#_1","title":"\u521b\u5efa\u200b\u9879\u76ee","text":"<p>\u200b\u9996\u5148\u200b\uff0c\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b Rust \u200b\u9879\u76ee\u200b\uff0c\u200b\u5e76\u200b\u6dfb\u52a0\u200b\u5bf9\u200b<code>iced</code>\u200b\u5e93\u200b\u7684\u200b\u4f9d\u8d56\u200b\u3002</p> <pre><code>cargo new text-editor\ncd text-editor\ncargo add iced\n</code></pre> <p>\u200b\u6b64\u65f6\u200b\u7684\u200b<code>main.rs</code>\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>fn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>"},{"location":"coding/rust-gui/1-hello-world/#gui","title":"\u521b\u5efa\u200bGUI\u200b\u5e94\u7528","text":"<p><code>iced</code>\u200b\u7684\u200bGUI\u200b\u7c7b\u6709\u200b<code>Application</code>\u200b\u548c\u200b<code>Sandbox</code>\u200b\u4e24\u79cd\u200b\u3002\u200b\u5176\u4e2d\u200b<code>Sandbox</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7b80\u5316\u7248\u200b\u7684\u200b<code>Application</code>\uff0c\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u884c\u4e3a\u200b\u3002<code>Sandbox</code>\u200b\u7279\u6027\u200b\u5305\u542b\u200b\u5982\u4e0b\u200b\u65b9\u6cd5\u200b\uff1a</p> <pre><code>pub trait Sandbox {\n    type Message: std::fmt::Debug + Send;\n    fn new() -&gt; Self;\n    fn title(&amp;self) -&gt; String;\n    fn update(&amp;mut self, message: Self::Message);\n    fn view(&amp;self) -&gt; Element&lt;'_, Self::Message&gt;;\n    fn theme(&amp;self) -&gt; Theme {\n        Theme::default()\n    }\n    fn style(&amp;self) -&gt; theme::Application {\n        theme::Application::default()\n    }\n    fn scale_factor(&amp;self) -&gt; f64 {\n        1.0\n    }\n    fn run(settings: Settings&lt;()&gt;) -&gt; Result&lt;(), Error&gt;\n    where\n        Self: 'static + Sized,\n    {\n        &lt;Self as Application&gt;::run(settings)\n    }\n}\n</code></pre> <p>\u200b\u4e3a\u4e86\u200b\u4f7f\u7528\u200b<code>Sandbox</code>\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5b9e\u73b0\u200b\u5176\u4e2d\u200b\u672a\u200b\u5b9e\u73b0\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5373\u200b<code>Message</code>\u3001<code>new</code>\u3001<code>title</code>\u3001<code>update</code>\u200b\u548c\u200b<code>view</code>\u3002</p> <ul> <li> <p><code>Message</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u679a\u4e3e\u200b\u7c7b\u578b\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5b9a\u4e49\u200b\u5e94\u7528\u200b\u4f1a\u200b\u4ea7\u751f\u200b\u7684\u200b\u6d88\u606f\u200b\u7c7b\u578b\u200b\uff0c\u200b\u9700\u8981\u200b\u5b9e\u73b0\u200b<code>std::fmt::Debug</code>\u200b\u548c\u200b<code>Send</code>\u200b\u7279\u6027\u200b\u3002</p> <pre><code>#[derive(Debug)] // Inherit the Debug trait\nenum Message {} // No message required\n</code></pre> </li> <li> <p><code>new</code>\u200b\u65b9\u6cd5\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b<code>Sandbox</code>\u200b\u5b9e\u4f8b\u200b\uff0c\u200b\u521d\u59cb\u5316\u200b\u5b9e\u4f8b\u200b\u72b6\u6001\u200b\uff0c\u200b\u4e00\u822c\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b<code>Self</code>\u200b\u5373\u53ef\u200b\u3002</p> <pre><code>fn new() -&gt; Self {\n    Self\n}\n</code></pre> </li> <li> <p><code>title</code>\u200b\u65b9\u6cd5\u200b\u7528\u4e8e\u200b\u8fd4\u56de\u200bGUI\u200b\u7a97\u53e3\u200b\u7684\u200b\u6807\u9898\u200b\u3002</p> <pre><code>fn title(&amp;self) -&gt; String {\n    String::from(\"A text editor\")\n}\n</code></pre> </li> <li> <p><code>update</code>\u200b\u65b9\u6cd5\u200b\u548c\u200b<code>view</code>\u200b\u65b9\u6cd5\u200b\u5171\u540c\u200b\u7ec4\u6210\u200b\u5e94\u7528\u200b\u7684\u200b\u6d88\u606f\u200b\u5faa\u73af\u200b\uff1a<code>update</code>\u200b\u65b9\u6cd5\u200b\u7528\u4e8e\u200b\u5904\u7406\u200b\u6d88\u606f\u200b\uff0c\u200b\u66f4\u65b0\u200b\u5e94\u7528\u200b\u72b6\u6001\u200b\uff0c<code>view</code>\u200b\u65b9\u6cd5\u200b\u7528\u4e8e\u200b\u5728\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\u540e\u200b\u66f4\u65b0\u200b\u5e94\u7528\u200b\u754c\u9762\u200b\u3002\u200b\u6b64\u5904\u200b\u6211\u4eec\u200b\u5728\u200b<code>view</code>\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u653e\u7f6e\u200b\u4e00\u4e2a\u200b\u6587\u672c\u200b\u63a7\u4ef6\u200b\u3002</p> <pre><code>fn update(&amp;mut self, message: Self::Message) {\n    match message {\n        // No message to handle\n    }\n}\n\nfn view(&amp;self) -&gt; Element&lt;'_, Self::Message&gt; {\n    text(\"Hello, world!\").into()\n}\n</code></pre> </li> </ul> <p>\u200b\u901a\u8fc7\u200b<code>Sandbox::run</code>\u200b\u65b9\u6cd5\u200b\u542f\u52a8\u200b\u5e94\u7528\u200b\uff0c\u200b\u8be5\u200b\u65b9\u6cd5\u200b\u8fd4\u56de\u200b<code>Result&lt;(), Error&gt;</code>\u200b\u7c7b\u578b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4f5c\u4e3a\u200b<code>main</code>\u200b\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u3002</p> <p>\u200b\u4ee5\u4e0b\u200b\u4e3a\u200b\u5b8c\u6574\u200b\u7684\u200b<code>main.rs</code>\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\uff1a</p> <p>  Download source code</p> <pre><code>use iced::{Element, Sandbox, Settings};\nuse iced::widget::text;\n\nfn main() -&gt; iced::Result {\n    Editor::run(Settings::default())\n}\n\nstruct Editor;\n\n#[derive(Debug)]\nenum Message {}\n\nimpl Sandbox for Editor {\n    type Message = Message; // Define the type of messages\n    fn new() -&gt; Self {\n        Self\n    }\n\n    fn title(&amp;self) -&gt; String {\n        String::from(\"A text editor\")\n    }\n\n    fn update(&amp;mut self, message: Message) {\n        // Handle messages here\n        match message {}\n    }\n\n    fn view(&amp;self) -&gt; Element&lt;'_, Message&gt; {\n        // Create the user interface here\n        text(\"Hello, world!\").into()\n    }\n}\n</code></pre>"},{"location":"coding/rust-gui/10-misc/","title":"Miscellaneous","text":"<p>\u200b\u672c\u200b\u8282\u200b\u6dfb\u52a0\u200b\u4e00\u4e9b\u200b\u989d\u5916\u200b\u529f\u80fd\u200b\u3002</p> <p>\u200b\u9996\u5148\u200b\uff0c\u200b\u5f53\u200b\u6587\u4ef6\u200b\u6ca1\u6709\u200b\u88ab\u200b\u4fee\u6539\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8bbe\u7f6e\u200b\u7981\u7528\u200b\u4fdd\u5b58\u200b\u6309\u94ae\u200b\u3002\u200b\u8fd9\u6837\u200b\u53ef\u4ee5\u200b\u907f\u514d\u200b\u7528\u6237\u200b\u8bef\u64cd\u4f5c\u200b\u3002\u200b\u5728\u200b<code>on_press_maybe</code>\u200b\u4e2d\u200b\u4f20\u5165\u200b<code>None</code>\u200b\u5373\u53ef\u200b\u3002\u200b\u540c\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u6587\u4ef6\u200b\u7684\u200b\u4fee\u6539\u200b\u60c5\u51b5\u200b\u8bbe\u7f6e\u200b\u6309\u94ae\u200b\u7684\u200b\u6837\u5f0f\u200b\u3002</p> <pre><code>fn toolbar_button&lt;'a&gt;(description: &amp;str, callback: Option&lt;Message&gt;) -&gt; Element&lt;'a, Message&gt; {\n    let font = Font::with_name(\"editor-icon\");\n    let lower = description.to_lowercase();\n    let icon = text(match lower.as_str() {\n        \"new\" =&gt; '\\u{E800}',\n        \"open\" =&gt; '\\u{F115}',\n        \"save\" =&gt; '\\u{E801}',\n        _ =&gt; ' '\n    }).font(font);\n    let is_disabled = callback.is_none();\n    tooltip(\n        button(container(icon)\n            .width(30)  // Set the width of the button\n            .center_x() // Center the icon\n        ).on_press_maybe(callback).style(\n            if is_disabled {\n                theme::Button::Secondary\n            } else {\n                theme::Button::Primary\n            }\n        ),\n        description, tooltip::Position::FollowCursor\n    ).style(theme::Container::Box).into()\n}\n</code></pre> <p>\u200b\u540c\u65f6\u200b\u4fee\u6539\u200b<code>toolbar_button</code>\u200b\u7684\u200b\u8c03\u7528\u200b\u3002</p> <pre><code>// ... In `view` function\nlet controls = row![\n    toolbar_button(\"New\", Some(Message::NewButtonPressed)),\n    toolbar_button(\"Open\", Some(Message::OpenButtonPressed)),\n    toolbar_button(\"Save\", if self.modified { Some(Message::SaveButtonPressed) } else { None }),\n    horizontal_space(Length::Fill),\n    pick_list(highlighter::Theme::ALL, Some(self.theme), Message::ThemeChanged)\n].spacing(10);\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u6dfb\u52a0\u200b\u4e0d\u540c\u200b\u7684\u200b\u5feb\u6377\u952e\u200b\uff0c\u200b\u4ee5\u200b\u65b9\u4fbf\u200b\u7528\u6237\u200b\u64cd\u4f5c\u200b\u3002</p> <pre><code>// In `impl Application for Editor`\nfn subscription(&amp;self) -&gt; Subscription&lt;Message&gt; {\n    keyboard::on_key_press(|keycode, modifier| {\n        match (keycode, modifier) {\n            (keyboard::KeyCode::S, keyboard::Modifiers::COMMAND) =&gt; {\n                Some(Message::SaveButtonPressed)\n            },\n            (keyboard::KeyCode::O, keyboard::Modifiers::COMMAND) =&gt; {\n                Some(Message::OpenButtonPressed)\n            },\n            (keyboard::KeyCode::N, keyboard::Modifiers::COMMAND) =&gt; {\n                Some(Message::NewButtonPressed)\n            },\n            _ =&gt; None\n        }\n    })\n}\n</code></pre> <p>\u200b\u8fd9\u6837\u200b\uff0c\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>Command + S</code>\u200b\u6765\u200b\u4fdd\u5b58\u200b\u6587\u4ef6\u200b\uff0c<code>Command + O</code>\u200b\u6765\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b\uff0c<code>Command + N</code>\u200b\u6765\u200b\u65b0\u5efa\u200b\u6587\u4ef6\u200b\u3002</p> <p>\u200b\u6587\u4ef6\u200b\u7684\u200b\u6807\u9898\u680f\u200b\u901a\u5e38\u200b\u663e\u793a\u6587\u4ef6\u200b\u8def\u5f84\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u548c\u200b\u5de6\u4e0b\u89d2\u200b\u7684\u200b\u72b6\u6001\u680f\u200b\u4fdd\u6301\u200b\u540c\u6b65\u200b\u3002</p> <pre><code>// ... In `impl Application for Editor`\nfn title(&amp;self) -&gt; String {\n    let path_text = match &amp;self.path {\n        None =&gt; String::from(\"New file\"),\n        Some(path) =&gt; path.to_string_lossy().to_string()\n    };\n    let suffix = if self.modified { \"*\" } else { \"\" };\n    format!(\"{}{}\", path_text, suffix)\n}\n\n// ... In `view` function\nlet path_indicator = if let Some(error) = &amp;self.error {\n    match error {\n        Error::DialogClosed =&gt; text(\"Dialog closed\"),\n        Error::IO(kind) =&gt; text(format!(\"I/O error: {:?}\", kind))\n    }\n} else {\n    text(self.title())\n};\n</code></pre> <p>\u200b\u4ee5\u4e0b\u200b\u4e3a\u200b\u5b8c\u6574\u200b\u7684\u200b<code>main.rs</code>\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\uff1a</p> <p>  Download source code</p> <pre><code>use std::io;\nuse std::path::{Path, PathBuf};\nuse std::sync::Arc;\n\nuse iced::{executor, keyboard, theme, Application, Command, Element, Font, Length, Settings, Subscription, Theme};\nuse iced::highlighter::{self, Highlighter};\nuse iced::widget::{button, column, container, horizontal_space, pick_list, row, text, text_editor, tooltip};\n\nfn main() -&gt; iced::Result {\n    Editor::run(Settings {\n        fonts: vec![include_bytes!(\"../fonts/editor-icon.ttf\").as_slice().into()],\n        ..Default::default()\n    })\n}\n\nstruct Editor {\n    path: Option&lt;PathBuf&gt;,\n    content: text_editor::Content,\n    modified: bool,\n    error: Option&lt;Error&gt;,\n    theme: highlighter::Theme\n}\n\n#[derive(Debug, Clone)]\nenum Message {\n    EditorEdit(text_editor::Action),\n    FileOpened(Result&lt;(PathBuf, Arc&lt;String&gt;), Error&gt;),\n    FileSaved(Result&lt;PathBuf, Error&gt;),\n    ThemeChanged(highlighter::Theme),\n    NewButtonPressed,\n    OpenButtonPressed,\n    SaveButtonPressed\n}\n\nimpl Application for Editor {\n    type Message = Message; // Define the type of messages\n    type Theme = Theme;\n    type Executor = executor::Default; // Engine for running async tasks\n    type Flags = ();\n\n    fn new(_flags: Self::Flags) -&gt; (Self, Command&lt;Message&gt;) {\n        (\n            Self {\n                content: text_editor::Content::new(),\n                error: None,\n                modified: false,\n                path: None,\n                theme: highlighter::Theme::SolarizedDark\n            },\n            Command::perform(\n            load_file(format!(\"{}/src/main.rs\", env!(\"CARGO_MANIFEST_DIR\"))),\n            Message::FileOpened\n            )\n        )\n    }\n\n    fn title(&amp;self) -&gt; String {\n        let path_text = match &amp;self.path {\n            None =&gt; String::from(\"New file\"),\n            Some(path) =&gt; path.to_string_lossy().to_string()\n        };\n        let suffix = if self.modified { \"*\" } else { \"\" };\n        format!(\"{}{}\", path_text, suffix)\n    }\n\n    fn subscription(&amp;self) -&gt; Subscription&lt;Message&gt; {\n        keyboard::on_key_press(|keycode, modifier| {\n            match (keycode, modifier) {\n                (keyboard::KeyCode::S, keyboard::Modifiers::COMMAND) =&gt; {\n                    Some(Message::SaveButtonPressed)\n                },\n                (keyboard::KeyCode::O, keyboard::Modifiers::COMMAND) =&gt; {\n                    Some(Message::OpenButtonPressed)\n                },\n                (keyboard::KeyCode::N, keyboard::Modifiers::COMMAND) =&gt; {\n                    Some(Message::NewButtonPressed)\n                },\n                _ =&gt; None\n            }\n        })\n    }\n\n    fn update(&amp;mut self, message: Message) -&gt; Command&lt;Message&gt; {\n        // Handle messages here\n        match message {\n            Message::EditorEdit(action) =&gt; {\n                match &amp;action {\n                    text_editor::Action::Edit(_) =&gt; self.modified = true,\n                    _ =&gt; {}\n                }\n                self.content.edit(action);\n                Command::none()\n            },\n            Message::FileOpened(Ok((path, result))) =&gt; {\n                self.path = Some(path);\n                self.modified = false;\n                self.content = text_editor::Content::with(&amp;result);\n                Command::none()\n            },\n            Message::FileSaved(Ok(path)) =&gt; {\n                self.path = Some(path);\n                self.modified = false;\n                Command::none()\n            },\n            Message::FileOpened(Err(error)) | Message::FileSaved(Err(error)) =&gt; {\n                self.error = Some(error);\n                Command::none()\n            },\n            Message::ThemeChanged(theme) =&gt; {\n                self.theme = theme;\n                Command::none()\n            },\n            Message::NewButtonPressed =&gt; {\n                self.content = text_editor::Content::new();\n                self.error = None;\n                self.path = None;\n                self.modified = false;\n                Command::none()\n            },\n            Message::OpenButtonPressed =&gt; {\n                self.modified = false;\n                Command::perform(pick_file(), Message::FileOpened)\n            },\n            Message::SaveButtonPressed =&gt; {\n                let content = self.content.text();\n                match self.modified {\n                    false =&gt; Command::none(),\n                    true =&gt; Command::perform(\n                        save_file(self.path.clone(), content),\n                        Message::FileSaved\n                    )\n                }\n            }\n        }\n    }\n\n    fn view(&amp;self) -&gt; Element&lt;'_, Message&gt; {\n        // Create the user interface here\n        let editor = text_editor(&amp;self.content)\n            .on_edit(Message::EditorEdit)\n            .highlight::&lt;Highlighter&gt;(\n                highlighter::Settings {\n                    theme: self.theme,\n                    extension: self.path\n                        .as_ref()\n                        .and_then(|path| path.extension()?.to_str())\n                        .unwrap_or(\"rs\")\n                        .to_string()\n                }, |highlighter, _theme| {\n                    highlighter.to_format()\n                }\n            )\n            .font(Font::MONOSPACE);\n        let controls = row![\n            toolbar_button(\"New\", Some(Message::NewButtonPressed)),\n            toolbar_button(\"Open\", Some(Message::OpenButtonPressed)),\n            toolbar_button(\"Save\", if self.modified { Some(Message::SaveButtonPressed) } else { None }),\n            horizontal_space(Length::Fill),\n            pick_list(highlighter::Theme::ALL, Some(self.theme), Message::ThemeChanged)\n        ].spacing(10);\n\n        // Query cursor position\n        let path_indicator = if let Some(error) = &amp;self.error {\n            match error {\n                Error::DialogClosed =&gt; text(\"Dialog closed\"),\n                Error::IO(kind) =&gt; text(format!(\"I/O error: {:?}\", kind))\n            }\n        } else {\n            text(self.title())\n        };\n        let cursor_indicator = {\n            let (line, column) = self.content.cursor_position();\n\n            text(format!(\"Line: {}, Column: {}\", line + 1, column + 1))\n        };\n        let status_bar = row![\n            path_indicator,\n            horizontal_space(Length::Fill),\n            cursor_indicator\n        ];\n\n        container(column![controls, editor, status_bar].spacing(10)).padding(10).into()\n    }\n\n    fn theme(&amp;self) -&gt; Theme {\n        if self.theme.is_dark() {\n            Theme::Dark\n        } else {\n            Theme::Light\n        }\n    }\n}\n\nasync fn pick_file() -&gt; Result&lt;(PathBuf, Arc&lt;String&gt;), Error&gt; {\n    let file_handle = rfd::AsyncFileDialog::new()\n        .set_title(\"Choose a text file...\")\n        .pick_file()\n        .await\n        .ok_or(Error::DialogClosed)?;\n    load_file(file_handle.path()).await\n}\n\nasync fn load_file(path: impl AsRef&lt;Path&gt;) -&gt; Result&lt;(PathBuf, Arc&lt;String&gt;), Error&gt; {\n    let content = tokio::fs::read_to_string(path.as_ref())\n        .await\n        .map(Arc::new)\n        .map_err(|err| err.kind())\n        .map_err(Error::IO);\n    content.and_then(|content| Ok((path.as_ref().to_path_buf(), content)))\n}\n\nasync fn save_file(path: Option&lt;PathBuf&gt;, content: String) -&gt; Result&lt;PathBuf, Error&gt; {\n    let path = if let Some(path) = path {\n        path\n    } else {\n        rfd::AsyncFileDialog::new()\n            .set_title(\"Save the file to...\")\n            .save_file()\n            .await\n            .ok_or(Error::DialogClosed)?\n            .path()\n            .to_path_buf()\n    };\n    tokio::fs::write(&amp;path, content)\n        .await\n        .map_err(|err| err.kind())\n        .map_err(Error::IO)\n        .map(|_| path)\n}\n\nfn toolbar_button&lt;'a&gt;(description: &amp;str, callback: Option&lt;Message&gt;) -&gt; Element&lt;'a, Message&gt; {\n    let font = Font::with_name(\"editor-icon\");\n    let lower = description.to_lowercase();\n    let icon = text(match lower.as_str() {\n        \"new\" =&gt; '\\u{E800}',\n        \"open\" =&gt; '\\u{F115}',\n        \"save\" =&gt; '\\u{E801}',\n        _ =&gt; ' '\n    }).font(font);\n    let is_disabled = callback.is_none();\n    tooltip(\n        button(container(icon)\n            .width(30)  // Set the width of the button\n            .center_x() // Center the icon\n        ).on_press_maybe(callback).style(\n            if is_disabled {\n                theme::Button::Secondary\n            } else {\n                theme::Button::Primary\n            }\n        ),\n        description, tooltip::Position::FollowCursor\n    ).style(theme::Container::Box).into()\n}\n\n#[derive(Debug, Clone)]\nenum Error {\n    DialogClosed,\n    IO(io::ErrorKind)\n}\n</code></pre>"},{"location":"coding/rust-gui/2-multi-line-input/","title":"Add Multi-line Input","text":"<p>Keywords: <code>iced::widget::text_editor</code>, <code>iced::widget::container</code>.</p> <p>\u200b\u672c\u200b\u8282\u200b\u6211\u4eec\u200b\u5c06\u200b<code>text</code>\u200b\u63a7\u4ef6\u200b\u66ff\u6362\u200b\u4e3a\u200b<code>text_editor</code>\u200b\u63a7\u4ef6\u200b\uff0c\u200b\u4ee5\u200b\u5b9e\u73b0\u200b\u591a\u884c\u200b\u6587\u672c\u200b\u7684\u200b\u8f93\u5165\u200b\u3002</p> <p>iced\u200b\u5e93\u200b\u7248\u672c\u200b</p> <p><code>text_editor</code>\u200b\u63a7\u4ef6\u200b\u5c1a\u672a\u200b\u5728\u200b\u6b63\u5f0f\u200b\u7248\u672c\u200b\u4e2d\u200b\u53d1\u5e03\u200b\uff0c\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b<code>git</code>\u200b\u4ed3\u5e93\u200b\u4e2d\u200b\u7684\u200b\u4ee3\u7801\u200b\u3002</p> <pre><code>[dependencies]\niced = { git = \"https://github.com/iced-rs/iced.git\", rev = \"refs/tags/text-editor\" }\n</code></pre> <p>\u200b\u9996\u5148\u200b\uff0c\u200b\u5c06\u200b\u5f15\u5165\u200b\u7684\u200b<code>iced::widget::text</code>\u200b\u66ff\u6362\u200b\u4e3a\u200b<code>iced::widget::text_editor</code>\u3002<code>text_editor</code>\u200b\u662f\u200b\u6709\u200b\u72b6\u6001\u200b\u7684\u200b\uff0c\u200b\u9700\u8981\u200b\u5728\u200b<code>new</code>\u200b\u4e2d\u200b\u521d\u59cb\u5316\u200b\u7a7a\u95f4\u200b\u72b6\u6001\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5728\u200b<code>view</code>\u200b\u4e2d\u200b\u6839\u636e\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\u63a7\u4ef6\u200b\u5185\u5bb9\u200b\u3002</p> <pre><code>struct Editor {\n    content: text_editor::Content\n}\n\n// ...\n\nimpl Sandbox for Editor {\n    type Message = Message;\n\n    fn new() -&gt; Self {\n        Editor {\n            content: text_editor::Content::new() // Initialize the content\n        }\n    }\n\n    // ...\n\n    fn view(&amp;self) -&gt; Element&lt;'_, Message&gt; {\n        text_editor(&amp;self.content).into() // Link the content state\n    }\n}\n</code></pre> <p>\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c<code>into</code>\u200b\u65b9\u6cd5\u200b\u4f1a\u200b\u4f7f\u200b\u63a7\u4ef6\u200b\u5145\u6ee1\u200b\u6574\u4e2a\u200b\u7a97\u53e3\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>container</code>\u200b\u5305\u56f4\u200b<code>text_editor</code>\u200b\u63a7\u4ef6\u200b\u8f85\u52a9\u200b\u5e03\u5c40\u200b\u3002</p> <pre><code>use iced::widget::container;\n\n// ...\n\nimpl Sandbox for Editor {\n    // ...\n    fn view(&amp;self) -&gt; Element&lt;'_, Message&gt; {\n        let editor = text_editor(&amp;self.content);\n        container(editor).padding(10).into() // Add padding and wrap the editor\n    }\n}\n</code></pre> <p>\u200b\u6b64\u65f6\u200b\uff0c\u200b\u591a\u884c\u200b\u6587\u672c\u200b\u8f93\u5165\u6846\u200b\u7684\u200b\u5e03\u5c40\u200b\u5df2\u7ecf\u200b\u5b8c\u6210\u200b\u3002\u200b\u4f46\u200b\u7531\u4e8e\u200b\u8f93\u5165\u6846\u200b\u6ca1\u6709\u200b\u7ed1\u5b9a\u200b\u4e8b\u4ef6\u5904\u7406\u200b\uff0c\u200b\u56e0\u6b64\u200b\u76ee\u524d\u200b\u65e0\u6cd5\u200b\u8f93\u5165\u200b\u6587\u672c\u200b\u3002<code>text_editor</code>\u200b\u63a7\u4ef6\u200b\u652f\u6301\u200b\u7684\u200b\u4e8b\u4ef6\u200b\u6709\u200b</p> <pre><code>pub enum Action {\n    Move(Motion),\n    Select(Motion),\n    SelectWord,\n    SelectLine,\n    Edit(Edit),\n    Click(Point),\n    Drag(Point),\n    Scroll { lines: i32 },\n}\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5c06\u200b<code>Edit</code>\u200b\u4e8b\u4ef6\u200b\u5728\u200b<code>update</code>\u200b\u548c\u200b<code>view</code>\u200b\u4e2d\u200b\u8fdb\u884c\u200b\u5904\u7406\u200b\uff0c\u200b\u540c\u65f6\u200b\u66f4\u65b0\u200b<code>Message</code>\u200b\u679a\u4e3e\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>#[derive(Debug, Clone)]\nenum Message {\n    EditorEdit(text_editor::Action)\n}\n\n// ...\n\nimpl Sandbox for Editor {\n    // ...\n    fn update(&amp;mut self, message: Message) {\n        match message {\n            Message::EditorEdit(action) =&gt; {\n                self.content = self.content.edit(action);\n            }\n        }\n    }\n\n    fn view(&amp;self) -&gt; Element&lt;'_, Message&gt; {\n        let editor = text_editor(&amp;self.content).on_edit(Message::EditorEdit); // Bind the edit event\n        container(editor).padding(10).into() // Add padding and wrap the editor\n    }\n}\n</code></pre> <p>\u200b\u4ee5\u4e0b\u200b\u4e3a\u200b\u5b8c\u6574\u200b\u7684\u200b<code>main.rs</code>\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\uff1a</p> <p>  Download source code</p> <pre><code>use iced::{Element, Sandbox, Settings};\nuse iced::widget::{text_editor, container};\n\nfn main() -&gt; iced::Result {\n    Editor::run(Settings::default())\n}\n\nstruct Editor {\n    content: text_editor::Content\n}\n\n#[derive(Debug, Clone)]\nenum Message {\n    EditorEdit(text_editor::Action)\n}\n\nimpl Sandbox for Editor {\n    type Message = Message; // Define the type of messages\n\n    fn new() -&gt; Self {\n        Self {\n            content: text_editor::Content::new()\n        }\n    }\n\n    fn title(&amp;self) -&gt; String {\n        String::from(\"A text editor\")\n    }\n\n    fn update(&amp;mut self, message: Message) {\n        // Handle messages here\n        match message {\n            Message::EditorEdit(action) =&gt; {\n                self.content.edit(action);\n            }\n        }\n    }\n\n    fn view(&amp;self) -&gt; Element&lt;'_, Message&gt; {\n        // Create the user interface here\n        let editor = text_editor(&amp;self.content).on_edit(Message::EditorEdit);\n        container(editor).padding(10).into()\n    }\n}\n</code></pre>"},{"location":"coding/rust-gui/3-theme-and-cursor-indicator/","title":"Theme and Cursor Indicator","text":"<p>Keywords: <code>iced::widget::column</code>, <code>iced::widget::row</code>, <code>iced::widget::horizontal_space</code>, <code>iced::Theme</code>, <code>iced::Length</code></p> <p>\u200b\u672c\u8282\u200b\u5c06\u200b\u7a97\u53e3\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b\u6697\u8272\u200b\u8c03\u200b\uff0c\u200b\u5e76\u4e14\u200b\u901a\u8fc7\u200b<code>text</code>\u200b\u63a7\u4ef6\u200b\u663e\u793a\u200b\u5149\u6807\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u3002</p>"},{"location":"coding/rust-gui/3-theme-and-cursor-indicator/#_1","title":"\u8bbe\u7f6e\u200b\u7a97\u53e3\u200b\u4e3b\u9898","text":"<p>\u200b\u7a97\u53e3\u200b\u4e3b\u9898\u200b\u901a\u8fc7\u200b<code>theme</code>\u200b\u51fd\u6570\u200b\u8bbe\u7f6e\u200b\uff0c\u200b\u5b9a\u4e49\u200b\u4e3b\u9898\u200b\u98ce\u683c\u200b\u7684\u200b\u7c7b\u200b\u4e3a\u200b<code>iced::Theme</code>\uff0c<code>Light</code>\u200b\u548c\u200b<code>Dark</code>\u200b\u5206\u522b\u200b\u8868\u793a\u200b\u4eae\u8272\u200b\u548c\u200b\u6697\u8272\u200b\u8c03\u200b\u3002</p> <pre><code>use iced::Theme\n\n// ...\n\nimpl Sandbox for Editor {\n    // ...\n\n    fn theme(&amp;self) -&gt; iced::Theme {\n        iced::Theme::Dark // Set the window theme to dark\n    }\n}\n</code></pre>"},{"location":"coding/rust-gui/3-theme-and-cursor-indicator/#_2","title":"\u8bfb\u53d6\u200b\u6587\u4ef6\u200b\u5185\u5bb9","text":"<p>\u200b\u5728\u200b\u7a0b\u5e8f\u200b\u542f\u52a8\u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u8bbe\u7f6e\u200b\u4e00\u4e2a\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\uff0c\u200b\u6b64\u5904\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>include_str!</code>\u200b\u5b8f\u5728\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u8bfb\u53d6\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\u5e76\u200b\u7528\u4e8e\u200b\u521d\u59cb\u5316\u200b\u6587\u672c\u6846\u200b\u7684\u200b\u72b6\u6001\u200b\u3002</p> <pre><code>impl Sandbox for Editor {\n    // ...\n\n    fn new() -&gt; Self {\n        Self {\n            content: text_editor::Content::with(include_str!(\"main.rs\"))\n        }\n    }\n}\n</code></pre>"},{"location":"coding/rust-gui/3-theme-and-cursor-indicator/#_3","title":"\u663e\u793a\u200b\u5149\u6807\u200b\u4f4d\u7f6e","text":"<p>\u200b\u6587\u672c\u6846\u200b\u7684\u200b\u5149\u6807\u200b\u4f4d\u7f6e\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b<code>self.content</code>\u200b\u72b6\u6001\u200b\u7684\u200b<code>cursor_position</code>\u200b\u65b9\u6cd5\u200b\u83b7\u53d6\u200b\uff0c\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b\u5149\u6807\u200b\u4f4d\u7f6e\u200b\uff08\u200b\u4ece\u200b0\u200b\u5f00\u59cb\u200b\uff09\u200b\u7684\u200b\u5143\u7ec4\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u5149\u6807\u200b\u4f4d\u7f6e\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b<code>text</code>\u200b\u63a7\u4ef6\u200b\u7528\u4e8e\u200b\u663e\u793a\u200b\u3002</p> <ul> <li>\u200b\u901a\u8fc7\u200b<code>column!</code>\u200b\u5b8f\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u5217\u200b\u5e03\u5c40\u200b\uff0c\u200b\u4e0a\u8fb9\u200b\u5305\u542b\u200b\u8f93\u5165\u200b\u6587\u672c\u6846\u200b\uff0c\u200b\u4e0b\u8fb9\u200b\u5305\u542b\u200b\u5149\u6807\u200b\u4f4d\u7f6e\u200b\u663e\u793a\u200b\u3002</li> <li>\u200b\u901a\u8fc7\u200b<code>row!</code>\u200b\u5b8f\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u884c\u200b\u5e03\u5c40\u200b\uff0c\u200b\u7ed3\u5408\u200b<code>Length::Fill</code>\u200b\u628a\u200b\u5149\u6807\u200b\u4f4d\u7f6e\u200b\u538b\u7f29\u200b\u5230\u200b\u53f3\u4fa7\u200b\u5bf9\u9f50\u200b\u3002</li> </ul> <pre><code>use iced::widget::{column, row, horizontal_space, text};\nuse iced::Length;\n\n// ...\n\nimpl Sandbox for Editor {\n    // ...\n\n    fn view(&amp;self) -&gt; Element&lt;'_, Message&gt; {\n        let editor = text_editor(&amp;self.content);\n        // Query cursor position\n        let cursor_indicator = {\n            let (line, column) = self.content.cursor_position();\n\n            text(format!(\"Line: {}, Column: {}\", line + 1, column + 1))\n        };\n        let status_bar = row![horizontal_space(Length::Fill), cursor_indicator];\n\n        container(column![editor, status_bar].spacing(10)).padding(10).into()\n    }\n}\n</code></pre> <p>\u200b\u4ee5\u4e0b\u200b\u4e3a\u200b\u5b8c\u6574\u200b\u7684\u200b<code>main.rs</code>\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\uff1a</p> <p>  Download source code</p> <pre><code>use iced::{Theme, Element, Sandbox, Settings, Length};\nuse iced::widget::{column, container, horizontal_space, row, text, text_editor};\n\nfn main() -&gt; iced::Result {\n    Editor::run(Settings::default())\n}\n\nstruct Editor {\n    content: text_editor::Content\n}\n\n#[derive(Debug, Clone)]\nenum Message {\n    EditorEdit(text_editor::Action)\n}\n\nimpl Sandbox for Editor {\n    type Message = Message; // Define the type of messages\n\n    fn new() -&gt; Self {\n        Self {\n            content: text_editor::Content::with(include_str!(\"main.rs\"))\n        }\n    }\n\n    fn title(&amp;self) -&gt; String {\n        String::from(\"A text editor\")\n    }\n\n    fn update(&amp;mut self, message: Message) {\n        // Handle messages here\n        match message {\n            Message::EditorEdit(action) =&gt; {\n                self.content.edit(action);\n            }\n        }\n    }\n\n    fn view(&amp;self) -&gt; Element&lt;'_, Message&gt; {\n        // Create the user interface here\n        let editor = text_editor(&amp;self.content).on_edit(Message::EditorEdit);\n\n        // Query cursor position\n        let cursor_indicator = {\n            let (line, column) = self.content.cursor_position();\n\n            text(format!(\"Line: {}, Column: {}\", line + 1, column + 1))\n        };\n        let status_bar = row![horizontal_space(Length::Fill), cursor_indicator];\n\n        container(column![editor, status_bar].spacing(10)).padding(10).into()\n    }\n\n    fn theme(&amp;self) -&gt; Theme {\n        Theme::Dark\n    }\n}\n</code></pre>"},{"location":"coding/rust-gui/4-async-file-loading/","title":"Asynchronous File Loading","text":"<p>Keywords: <code>iced::Application</code>, <code>iced::Command</code>, <code>iced::executor</code>, <code>std::io</code>, <code>std::path::Path</code>, <code>std::sync::Arc</code>, <code>tokio::fs::read_to_string</code></p> <p>\u200b\u4e3a\u4e86\u200b\u5b9e\u73b0\u200b\u5f02\u6b65\u200b\u6587\u4ef6\u200b\u52a0\u8f7d\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b<code>tokio</code>\u200b\u5e93\u200b</p> <pre><code>[dependencies]\ntokio = { version = \"1.32\", features = [\"fs\"] }\n</code></pre> <p><code>Sandbox</code>\u200b\u4e0d\u80fd\u200b\u76f4\u63a5\u200b\u6267\u884c\u200b\u5f02\u6b65\u200b\u51fd\u6570\u200b\uff0c\u200b\u9700\u8981\u200b\u7528\u200b<code>Application</code>\u3002\u200b\u76f8\u6bd4\u200b\u4e8e\u200b<code>Sandbox</code>\uff0c<code>Application</code>\u200b\u9700\u8981\u200b\u989d\u5916\u200b\u5b9e\u73b0\u200b\u5982\u4e0b\u200b\u7c7b\u578b\u200b</p> <pre><code>impl Application for Editor {\n    // ...\n    type Theme; // Color theme\n    type Executor; // Engine for running async tasks\n    type Flags; // Initial state\n}\n</code></pre> <p>\u200b\u6b64\u5904\u200b\uff0c<code>Theme</code>\u200b\u548c\u200b<code>Flags</code>\u200b\u7c7b\u578b\u200b\u4e0d\u200b\u9700\u8981\u200b\u989d\u5916\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5206\u522b\u200b\u7528\u200b<code>iced::Theme</code>\u200b\u548c\u200b<code>()</code>\u200b\u4ee3\u66ff\u200b\u3002\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c<code>Executor</code>\u200b\u7c7b\u578b\u200b\u9700\u8981\u200b\u7528\u200b<code>iced::executor::Default</code>\u200b\u4ee3\u66ff\u200b\u3002</p> <p>\u200b\u5728\u200b\u4fee\u6539\u200b\u4e3a\u200b<code>Application</code>\u200b\u540e\u200b\uff0c<code>new</code>\u200b\u548c\u200b<code>update</code>\u200b\u65b9\u6cd5\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u6807\u7b7e\u200b\u4e5f\u200b\u9700\u8981\u200b\u4fee\u6539\u200b\uff0c<code>new</code>\u200b\u65b9\u6cd5\u200b\u8fd4\u56de\u200b<code>(Self, Command&lt;Message&gt;)</code>\uff0c<code>update</code>\u200b\u65b9\u6cd5\u200b\u8fd4\u56de\u200b<code>Command&lt;Message&gt;</code>\u3002\u200b\u5176\u4e2d\u200b<code>Command&lt;Message&gt;</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5f02\u6b65\u200b\u4efb\u52a1\u200b\uff0c\u200b\u5728\u200b\u6267\u884c\u200b\u5b8c\u6bd5\u200b\u540e\u200b\u4f1a\u200b\u53d1\u9001\u200b\u4e00\u4e2a\u200b\u5bf9\u5e94\u200b\u7c7b\u578b\u200b\u7684\u200b<code>Message</code>\u3002</p> <pre><code>impl Application for Editor {\n    // ...\n\n    fn new(_flags: ()) -&gt; (Self, Command&lt;Message&gt;) {\n        (\n            Self {\n                // ...\n            },\n            Command::none(),\n        )\n    }\n\n    fn update(&amp;mut self, message: Message) -&gt; Command&lt;Message&gt; {\n        match message {\n            // ...\n        }\n\n        Command::none()\n    }\n}\n</code></pre> <p>\u200b\u6b64\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u7f16\u5199\u200b\u7528\u4e8e\u200b\u8bfb\u53d6\u200b\u6587\u4ef6\u200b\u7684\u200b\u51fd\u6570\u200b\u3002</p> <pre><code>use std::io;\nuse std::path::Path;\nuse std::sync::Arc;\n\nasync fn load_file&lt;T&gt;(path: T) -&gt; Result&lt;Arc&lt;String&gt;, io::ErrorKind&gt;\n    where T: AsRef&lt;Path&gt;\n{\n    tokio::fs::read_to_string(path)\n        .await\n        .map(Arc::new)\n        .map_err(|e| e.kind())\n}\n</code></pre> <p>\u200b\u5728\u200b<code>new</code>\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>Command</code>\u200b\u6765\u200b\u8c03\u7528\u200b<code>load_file</code>\u200b\u51fd\u6570\u200b\u3002</p> <pre><code>enum Message {\n    EditorEdit(text_editor::Action),\n    FileOpened(Result&lt;Arc&lt;String&gt;, io::ErrorKind&gt;)\n}\n\nimpl Application for Editor {\n    // ...\n\n    fn new(_flags: ()) -&gt; (Self, Command&lt;Message&gt;) {\n        let path = \"path/to/file.txt\";\n        let file = load_file(path);\n\n        (\n            Self {\n                // ...\n            },\n            Command::perform(\n                load_file(format!(\"{}/main.rs\", env!(\"CARGO_MANIFEST_DIR\"))),\n                Message::FileLoaded,\n            ),\n        )\n    }\n}\n</code></pre> <p>\u200b\u8bfb\u53d6\u200b\u6587\u4ef6\u200b\u65f6\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u53d1\u751f\u200b\u9519\u8bef\u200b\uff0c\u200b\u9700\u8981\u200b\u5bf9\u200b\u5f02\u5e38\u200b\u6d88\u606f\u200b\u8fdb\u884c\u200b\u5904\u7406\u200b\u3002\u200b\u5728\u200b<code>load_file</code>\u200b\u51fd\u6570\u200b\u4e2d\u200b\u5df2\u7ecf\u200b\u901a\u8fc7\u200b<code>Result</code>\u200b\u8fd4\u56de\u200b\u4e86\u200b\u5bf9\u5e94\u200b\u7684\u200b\u9519\u8bef\u200b\u7c7b\u578b\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u5728\u200b<code>update</code>\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u5904\u7406\u200b<code>Message::FileOpened</code>\u200b\u5373\u53ef\u200b\u3002</p> <pre><code>struct Editor {\n    // ...\n    error: Option&lt;io::ErrorKind&gt;, // Use Option to store error\n}\n\n// ...\n\nimpl Application for Editor {\n    // ...\n\n    fn new(_flags: ()) -&gt; (Self, Command&lt;Message&gt;) {\n        (\n            Self {\n                // ...\n                error: None, // Initialize error as None\n            },\n            // ...\n        )\n    }\n\n    fn update(&amp;mut self, message: Message) -&gt; Command&lt;Message&gt; {\n        // ...\n        match message {\n            // ...\n            Message::FileOpened(Error(e)) =&gt; {\n                self.error = Some(e); // Store error\n            }\n        }\n        // ...\n    }\n}\n</code></pre> <p>\u200b\u4ee5\u4e0b\u200b\u4e3a\u200b\u5b8c\u6574\u200b\u7684\u200b<code>main.rs</code>\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\uff1a</p> <p>  Download source code</p> <pre><code>use iced::{Theme, Element, Sandbox, Settings, Length};\nuse iced::widget::{column, container, horizontal_space, row, text, text_editor};\n\nfn main() -&gt; iced::Result {\n    Editor::run(Settings::default())\n}\n\nstruct Editor {\n    content: text_editor::Content\n}\n\n#[derive(Debug, Clone)]\nenum Message {\n    EditorEdit(text_editor::Action)\n}\n\nimpl Sandbox for Editor {\n    type Message = Message; // Define the type of messages\n\n    fn new() -&gt; Self {\n        Self {\n            content: text_editor::Content::with(include_str!(\"main.rs\"))\n        }\n    }\n\n    fn title(&amp;self) -&gt; String {\n        String::from(\"A text editor\")\n    }\n\n    fn update(&amp;mut self, message: Message) {\n        // Handle messages here\n        match message {\n            Message::EditorEdit(action) =&gt; {\n                self.content.edit(action);\n            }\n        }\n    }\n\n    fn view(&amp;self) -&gt; Element&lt;'_, Message&gt; {\n        // Create the user interface here\n        let editor = text_editor(&amp;self.content).on_edit(Message::EditorEdit);\n\n        // Query cursor position\n        let cursor_indicator = {\n            let (line, column) = self.content.cursor_position();\n\n            text(format!(\"Line: {}, Column: {}\", line + 1, column + 1))\n        };\n        let status_bar = row![horizontal_space(Length::Fill), cursor_indicator];\n\n        container(column![editor, status_bar].spacing(10)).padding(10).into()\n    }\n\n    fn theme(&amp;self) -&gt; Theme {\n        Theme::Dark\n    }\n}\n</code></pre>"},{"location":"coding/rust-gui/5-file-picker/","title":"File Picker","text":"<p>Keywords: <code>iced::widget::button</code>, <code>rfd::AsyncFileDialog</code></p> <p>\u200b\u672c\u8282\u200b\u5728\u200b\u7a97\u53e3\u200b\u4e0a\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u6309\u94ae\u200b\uff0c\u200b\u70b9\u51fb\u200b\u540e\u5f39\u200b\u51fa\u200b\u6587\u4ef6\u200b\u9009\u62e9\u200b\u5bf9\u8bdd\u6846\u200b\uff0c\u200b\u9009\u62e9\u200b\u6587\u4ef6\u200b\u540e\u200b\u5c06\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\u663e\u793a\u200b\u5728\u200b\u7a97\u53e3\u200b\u4e0a\u200b\u3002\u200b\u9996\u5148\u200b\u9700\u8981\u200b\u6dfb\u52a0\u200b<code>rfd</code>\u200b\u5e93\u200b\u7684\u200b\u4f9d\u8d56\u200b\uff0c\u200b\u7528\u4e8e\u200b\u6587\u4ef6\u200b\u9009\u62e9\u200b\u5bf9\u8bdd\u6846\u200b\u3002</p> <pre><code>cargo add rfd\n</code></pre> <p>\u200b\u9996\u5148\u200b\u9700\u8981\u200b\u7f16\u5199\u200b\u7528\u4e8e\u200b\u663e\u793a\u6587\u4ef6\u200b\u9009\u62e9\u200b\u7a97\u53e3\u200b\u7684\u200b\u51fd\u6570\u200b\u3002\u200b\u6ce8\u610f\u200b<code>rfd::AsyncFileDialog</code>\u200b\u4f1a\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u5f02\u5e38\u200b\uff0c\u200b\u56e0\u6b64\u200b\u9700\u8981\u200b\u81ea\u5b9a\u4e49\u200b\u5f02\u5e38\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>#[derive(Debug, Clone)]\nenum Error {\n    DialogClosed,\n    IO(io::ErrorKind)\n}\n\nasync fn pick_file() -&gt; Result&lt;Arc&lt;String&gt;, Error&gt; {\n    let handler = rfd::AsyncFileDialog::new()\n        .set_title(\"Choose a text file...\")\n        .pick_file()\n        .await\n        .ok_or(Error::DialogClosed)?; // If error, return DialogClosed error\n    load_file(handler.path()).await\n}\n</code></pre> <p>\u200b\u8c03\u6574\u200b\u7a97\u53e3\u200b\u5e03\u5c40\u200b\uff0c\u200b\u5728\u200b\u7a97\u53e3\u200b\u4e0a\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u6309\u94ae\u200b\u3002</p> <pre><code>impl Application for Editor {\n    // ...\n\n    fn view(&amp;self) -&gt; Element&lt;'_, Message&gt; {\n        let controls = row![button(\"Open\")];\n        // ...\n        container(column![controls, editor, status_bar].spacing(10)).padding(10).into()\n    }\n}\n</code></pre> <p>\u200b\u4e4b\u540e\u200b\u9700\u8981\u200b\u6dfb\u52a0\u200b\u6309\u94ae\u200b\u7684\u200b\u70b9\u51fb\u200b\u4e8b\u4ef6\u5904\u7406\u200b\uff0c\u200b\u8c03\u7528\u200b<code>pick_file</code>\u200b\u51fd\u6570\u200b\u3002</p> <pre><code>enum Message {\n    // ...\n    OpenButtonPressed\n}\n\nimpl Application for Editor {\n    // ...\n\n    fn update(&amp;mut self, message: Message) -&gt; Command&lt;Message&gt; {\n        // Handle messages here\n        match message {\n            // ...\n            Message::OpenButtonPressed =&gt; {\n                Command::perform(pick_file(), Message::FileOpened)\n            }\n        }\n    }\n\n    fn view(&amp;self) -&gt; Element&lt;'_, Message&gt; {\n        let controls = row![button(\"Open\").on_press(Message::OpenButtonPressed)];\n        // ...\n    }\n}\n</code></pre> <p>\u200b\u4ee5\u4e0b\u200b\u4e3a\u200b\u5b8c\u6574\u200b\u7684\u200b<code>main.rs</code>\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\uff1a</p> <p>  Download source code</p> <pre><code>use std::io;\nuse std::path::Path;\nuse std::sync::Arc;\n\nuse iced::{executor, Application, Command, Element, Length, Settings, Theme};\nuse iced::widget::{button, column, container, horizontal_space, row, text, text_editor};\n\nfn main() -&gt; iced::Result {\n    Editor::run(Settings::default())\n}\n\nstruct Editor {\n    content: text_editor::Content,\n    error: Option&lt;Error&gt;\n}\n\n#[derive(Debug, Clone)]\nenum Message {\n    EditorEdit(text_editor::Action),\n    FileOpened(Result&lt;Arc&lt;String&gt;, Error&gt;),\n    OpenButtonPressed\n}\n\nimpl Application for Editor {\n    type Message = Message; // Define the type of messages\n    type Theme = Theme;\n    type Executor = executor::Default; // Engine for running async tasks\n    type Flags = ();\n\n    fn new(_flags: Self::Flags) -&gt; (Self, Command&lt;Message&gt;) {\n        (\n            Self {\n                content: text_editor::Content::new(),\n                error: None\n            },\n            Command::perform(\n            load_file(format!(\"{}/src/main.rs\", env!(\"CARGO_MANIFEST_DIR\"))),\n            Message::FileOpened\n            )\n        )\n    }\n\n    fn title(&amp;self) -&gt; String {\n        String::from(\"A text editor\")\n    }\n\n    fn update(&amp;mut self, message: Message) -&gt; Command&lt;Message&gt; {\n        // Handle messages here\n        match message {\n            Message::EditorEdit(action) =&gt; {\n                self.content.edit(action);\n                Command::none()\n            },\n            Message::FileOpened(Ok(result)) =&gt; {\n                self.content = text_editor::Content::with(&amp;result);\n                Command::none()\n            },\n            Message::FileOpened(Err(error)) =&gt; {\n                self.error = Some(error);\n                Command::none()\n            },\n            Message::OpenButtonPressed =&gt; {\n                Command::perform(pick_file(), Message::FileOpened)\n            }\n        }\n    }\n\n    fn view(&amp;self) -&gt; Element&lt;'_, Message&gt; {\n        // Create the user interface here\n        let editor = text_editor(&amp;self.content).on_edit(Message::EditorEdit);\n        let controls = row![button(\"Open\").on_press(Message::OpenButtonPressed)];\n\n        // Query cursor position\n        let cursor_indicator = {\n            let (line, column) = self.content.cursor_position();\n\n            text(format!(\"Line: {}, Column: {}\", line + 1, column + 1))\n        };\n        let status_bar = row![horizontal_space(Length::Fill), cursor_indicator];\n\n        container(column![controls, editor, status_bar].spacing(10)).padding(10).into()\n    }\n\n    fn theme(&amp;self) -&gt; Theme {\n        Theme::Dark\n    }\n}\n\nasync fn pick_file() -&gt; Result&lt;Arc&lt;String&gt;, Error&gt; {\n    let file_handle = rfd::AsyncFileDialog::new()\n        .set_title(\"Choose a text file...\")\n        .pick_file()\n        .await\n        .ok_or(Error::DialogClosed)?;\n    load_file(file_handle.path()).await\n}\n\nasync fn load_file(path: impl AsRef&lt;Path&gt;) -&gt; Result&lt;Arc&lt;String&gt;, Error&gt; {\n    tokio::fs::read_to_string(path)\n        .await\n        .map(Arc::new)\n        .map_err(|err| err.kind())\n        .map_err(Error::IO)\n}\n\n#[derive(Debug, Clone)]\nenum Error {\n    DialogClosed,\n    IO(io::ErrorKind)\n}\n</code></pre>"},{"location":"coding/rust-gui/6-file-path-indicator/","title":"File Path Indicator","text":"<p>\u200b\u672c\u8282\u200b\u5728\u200b\u72b6\u6001\u680f\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u663e\u793a\u6587\u4ef6\u200b\u8def\u5f84\u200b\u7684\u200b\u6587\u672c\u200b\u63a7\u4ef6\u200b\u3002\u200b\u9996\u5148\u200b\u9700\u8981\u200b\u5b58\u50a8\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b\u72b6\u6001\u200b\uff0c\u200b\u5e76\u200b\u5728\u200b\u521d\u59cb\u5316\u200b\u9636\u6bb5\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b<code>None</code>\u3002</p> <pre><code>struct Editor {\n    path: Option&lt;PathBuf&gt;,\n    // ...\n}\n\nimpl Application for Editor {\n    // ...\n    fn new() -&gt; (Editor, Command&lt;Message&gt;) {\n        (\n            Editor {\n                path: None,\n                // ...\n            },\n            // ...\n        )\n    }\n    // ...\n}\n</code></pre> <p>Path\u200b\u4e0e\u200bPathBuf</p> <p><code>std::path::Path</code>\u200b\u548c\u200b<code>std::path::PathBuf</code>\u200b\u7684\u200b\u5173\u7cfb\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b<code>&amp;str</code>\u200b\u548c\u200b<code>String</code>\u200b\u7684\u200b\u5173\u7cfb\u200b\u3002<code>Path</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u5f15\u7528\u200b\uff0c<code>PathBuf</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u53ef\u53d8\u200b\u7684\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5b58\u50a8\u200b\u8def\u5f84\u200b\u72b6\u6001\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b<code>PathBuf</code>\uff0c\u200b\u5f15\u7528\u200b\u8def\u5f84\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>Path</code>\u3002</p> <p>\u200b\u4e4b\u524d\u200b\u7684\u200b<code>load_file</code>\u200b\u51fd\u6570\u200b\u53ea\u200b\u8fd4\u56de\u200b\u4e86\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\uff0c\u200b\u6b64\u5904\u200b\u9700\u8981\u200b\u5c06\u200b\u6587\u4ef6\u200b\u7684\u200b\u8def\u5f84\u200b\u4e00\u540c\u200b\u8fd4\u56de\u200b\u3002\u200b\u6ce8\u610f\u200b\u51fd\u6570\u200b\u4e0d\u80fd\u200b\u8fd4\u56de\u200b\u5f15\u7528\u200b\uff0c\u200b\u56e0\u6b64\u200b\u9700\u8981\u200b\u5c06\u200b\u8def\u5f84\u200b\u8f6c\u6362\u200b\u4e3a\u200b<code>PathBuf</code>\u200b\u7c7b\u578b\u200b\u3002<code>and_then</code>\u200b\u65b9\u6cd5\u200b\u5904\u7406\u200b<code>Result</code>\u200b\u7684\u200b<code>Ok</code>\u200b\u503c\u200b\uff0c\u200b\u5728\u200b\u6210\u529f\u200b\u8bfb\u53d6\u200b\u6587\u4ef6\u200b\u540e\u200b\u5c06\u200b<code>Path</code>\u200b\u8f6c\u6362\u200b\u4e3a\u200b<code>PathBuf</code>\u200b\u5e76\u200b\u8fd4\u56de\u200b\u3002\u200b\u8c03\u7528\u200b<code>load_file</code>\u200b\u7684\u200b<code>pick_file</code>\u200b\u51fd\u6570\u200b\u4e5f\u200b\u9700\u8981\u200b\u4e00\u5e76\u200b\u4fee\u6539\u200b\uff0c\u200b\u540c\u65f6\u200b\u8fd4\u56de\u200b\u8def\u5f84\u200b\u548c\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\u3002</p> <pre><code>async fn pick_file() -&gt; Result&lt;(PathBuf, Arc&lt;String&gt;), Error&gt; {\n    // ...\n}\n\nasync fn load_file(path: impl AsRef&lt;Path&gt;) -&gt; Result&lt;(PathBuf, Arc&lt;String&gt;), Error&gt; {\n    let content = tokio::fs::read_to_string(path.as_ref())\n        .await\n        .map(Arc::new)\n        .map_err(|err| err.kind())\n        .map_err(Error::IO);\n    content.and_then(|content| Ok((path.as_ref().to_path_buf(), content)))\n}\n</code></pre> <p>\u200b\u5728\u200b\u4fee\u6539\u200b\u8bfb\u53d6\u200b\u6587\u4ef6\u200b\u7684\u200b\u51fd\u6570\u200b\u540e\u200b\uff0c\u200b\u9700\u8981\u200b\u4fee\u6539\u200b\u51fd\u6570\u200b\u56de\u8c03\u200b\u4e8b\u4ef6\u200b\u7684\u200b\u7c7b\u578b\u200b\u548c\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5904\u7406\u51fd\u6570\u200b</p> \u200b\u4fee\u6539\u200b\u540e\u200b\u4fee\u6539\u200b\u524d\u200b <pre><code>enum Message {\n    // ...\n    FileOpened(Result&lt;(PathBuf, Arc&lt;String&gt;), Error&gt;),\n}\n\nimpl Application for Editor {\n    // ...\n    fn update(&amp;mut self, message: Message) -&gt; Command&lt;Message&gt; {\n        match message {\n            // ...\n            Message::FileOpened(Ok((path, result))) =&gt; {\n                self.path = Some(path);\n                self.content = text_editor::Content::with(&amp;result);\n                Command::none()\n            },\n        }\n    }\n}\n</code></pre> <pre><code>enum Message {\n    // ...\n    FileOpened(Result&lt;Arc&lt;String&gt;, Error&gt;),\n}\n\nimpl Application for Editor {\n    // ...\n    fn update(&amp;mut self, message: Message) -&gt; Command&lt;Message&gt; {\n        match message {\n            // ...\n            Message::FileOpened(Ok(result)) =&gt; {\n                self.content = text_editor::Content::with(&amp;result);\n                Command::none()\n            },\n        }\n    }\n}\n</code></pre> <p>\u200b\u6700\u540e\u200b\u5728\u200b\u72b6\u6001\u680f\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u6587\u672c\u200b\u63a7\u4ef6\u200b\u663e\u793a\u6587\u4ef6\u200b\u8def\u5f84\u200b\u5373\u53ef\u200b\u3002</p> <pre><code>impl Application for Editor {\n    // ...\n    fn view(&amp;mut self) -&gt; Element&lt;Message&gt; {\n        // ...\n        let path_indicator = match &amp;self.path {\n            None =&gt; text(\"\"),\n            Some(path) =&gt; text(path.to_string_lossy())\n        };\n        let status_bar = row![\n            path_indicator, // Add path indicator here\n            horizontal_space(Length::Fill),\n            cursor_indicator\n        ];\n        // ...\n    }\n}\n</code></pre> <p>\u200b\u4ee5\u4e0b\u200b\u4e3a\u200b\u5b8c\u6574\u200b\u7684\u200b<code>main.rs</code>\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\uff1a</p> <p>  Download source code</p> <pre><code>use std::io;\nuse std::path::{Path, PathBuf};\nuse std::sync::Arc;\n\nuse iced::{executor, Application, Command, Element, Length, Settings, Theme};\nuse iced::widget::{button, column, container, horizontal_space, row, text, text_editor};\n\nfn main() -&gt; iced::Result {\n    Editor::run(Settings::default())\n}\n\nstruct Editor {\n    path: Option&lt;PathBuf&gt;,\n    content: text_editor::Content,\n    error: Option&lt;Error&gt;\n}\n\n#[derive(Debug, Clone)]\nenum Message {\n    EditorEdit(text_editor::Action),\n    FileOpened(Result&lt;(PathBuf, Arc&lt;String&gt;), Error&gt;),\n    OpenButtonPressed\n}\n\nimpl Application for Editor {\n    type Message = Message; // Define the type of messages\n    type Theme = Theme;\n    type Executor = executor::Default; // Engine for running async tasks\n    type Flags = ();\n\n    fn new(_flags: Self::Flags) -&gt; (Self, Command&lt;Message&gt;) {\n        (\n            Self {\n                content: text_editor::Content::new(),\n                error: None,\n                path: None\n            },\n            Command::perform(\n            load_file(format!(\"{}/src/main.rs\", env!(\"CARGO_MANIFEST_DIR\"))),\n            Message::FileOpened\n            )\n        )\n    }\n\n    fn title(&amp;self) -&gt; String {\n        String::from(\"A text editor\")\n    }\n\n    fn update(&amp;mut self, message: Message) -&gt; Command&lt;Message&gt; {\n        // Handle messages here\n        match message {\n            Message::EditorEdit(action) =&gt; {\n                self.content.edit(action);\n                Command::none()\n            },\n            Message::FileOpened(Ok((path, result))) =&gt; {\n                self.path = Some(path);\n                self.content = text_editor::Content::with(&amp;result);\n                Command::none()\n            },\n            Message::FileOpened(Err(error)) =&gt; {\n                self.error = Some(error);\n                Command::none()\n            },\n            Message::OpenButtonPressed =&gt; {\n                Command::perform(pick_file(), Message::FileOpened)\n            }\n        }\n    }\n\n    fn view(&amp;self) -&gt; Element&lt;'_, Message&gt; {\n        // Create the user interface here\n        let editor = text_editor(&amp;self.content).on_edit(Message::EditorEdit);\n        let controls = row![button(\"Open\").on_press(Message::OpenButtonPressed)];\n\n        // Query cursor position\n        let path_indicator = match &amp;self.path {\n            None =&gt; text(\"\"),\n            Some(path) =&gt; text(path.to_string_lossy())\n        };\n        let cursor_indicator = {\n            let (line, column) = self.content.cursor_position();\n\n            text(format!(\"Line: {}, Column: {}\", line + 1, column + 1))\n        };\n        let status_bar = row![\n            path_indicator,\n            horizontal_space(Length::Fill),\n            cursor_indicator\n        ];\n\n        container(column![controls, editor, status_bar].spacing(10)).padding(10).into()\n    }\n\n    fn theme(&amp;self) -&gt; Theme {\n        Theme::Dark\n    }\n}\n\nasync fn pick_file() -&gt; Result&lt;(PathBuf, Arc&lt;String&gt;), Error&gt; {\n    let file_handle = rfd::AsyncFileDialog::new()\n        .set_title(\"Choose a text file...\")\n        .pick_file()\n        .await\n        .ok_or(Error::DialogClosed)?;\n    load_file(file_handle.path()).await\n}\n\nasync fn load_file(path: impl AsRef&lt;Path&gt;) -&gt; Result&lt;(PathBuf, Arc&lt;String&gt;), Error&gt; {\n    let content = tokio::fs::read_to_string(path.as_ref())\n        .await\n        .map(Arc::new)\n        .map_err(|err| err.kind())\n        .map_err(Error::IO);\n    content.and_then(|content| Ok((path.as_ref().to_path_buf(), content)))\n}\n\n#[derive(Debug, Clone)]\nenum Error {\n    DialogClosed,\n    IO(io::ErrorKind)\n}\n</code></pre>"},{"location":"coding/rust-gui/7-new-and-save/","title":"New and Save","text":"<p>\u200b\u672c\u200b\u8282\u200b\u6dfb\u52a0\u200b\u65b0\u5efa\u200b\u548c\u200b\u4fdd\u5b58\u200b\u6587\u4ef6\u200b\u7684\u200b\u529f\u80fd\u200b\u3002</p> <p>\u200b\u9996\u5148\u200b\uff0c\u200b\u5728\u200b<code>EditorEdit</code>\u200b\u6d88\u606f\u200b\u5904\u7406\u200b\u4e2d\u200b\u68c0\u67e5\u200b\u662f\u5426\u200b\u5bf9\u200b\u6587\u4ef6\u200b\u8fdb\u884c\u200b\u4e86\u200b\u4fee\u6539\u200b\uff0c\u200b\u5e76\u4e14\u200b\u8bb0\u5f55\u200b\u6587\u4ef6\u200b\u7684\u200b\u4fee\u6539\u200b\u72b6\u6001\u200b\u3002</p> <pre><code>struct Editor {\n    // ...\n    modified: bool\n}\n// ... In `update` function\n            Message::EditorEdit(action) =&gt; {\n                match &amp;action {\n                    text_editor::Action::Edit(_) =&gt; self.modified = true,\n                    _ =&gt; {}\n                }\n                self.content.edit(action);\n                Command::none()\n            },\n            Message::FileOpened(Ok((path, result))) =&gt; {\n                self.path = Some(path);\n                self.modified = false;\n                self.content = text_editor::Content::with(&amp;result);\n                Command::none()\n            },\n            // ...\n            Message::OpenButtonPressed =&gt; {\n                self.modified = false;\n                Command::perform(pick_file(), Message::FileOpened)\n            },\n</code></pre> <p>\u200b\u5176\u6b21\u200b\uff0c\u200b\u8c03\u6574\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b\u63a7\u4ef6\u200b\u7684\u200b\u4e0d\u540c\u200b\u663e\u793a\u200b\u72b6\u6001\u200b\uff1a</p> <ol> <li>\u200b\u5f53\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b\u4e3a\u200b\u7a7a\u65f6\u200b\uff0c\u200b\u4e3a\u200b\u65b0\u200b\u6587\u4ef6\u200b\uff0c\u200b\u663e\u793a\u200b\u201cNew File\u201d\u3002</li> <li>\u200b\u5f53\u200b\u6253\u5f00\u200b\u4e00\u4e2a\u200b\u6587\u4ef6\u200b\u65f6\u200b\uff0c\u200b\u663e\u793a\u6587\u4ef6\u200b\u8def\u5f84\u200b\u3002</li> <li>\u200b\u5f53\u200b\u6587\u4ef6\u200b\u88ab\u200b\u4fee\u6539\u200b\u540e\u200b\uff0c\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b\u540e\u200b\u52a0\u4e0a\u200b\u201c*\u201d\u3002</li> <li>\u200b\u5f53\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b\u51fa\u9519\u200b\u65f6\u200b\uff0c\u200b\u663e\u793a\u200b\u9519\u8bef\u4fe1\u606f\u200b\u3002</li> </ol> <pre><code>let path_indicator = if let Some(error) = &amp;self.error {\n    match error {\n        Error::DialogClosed =&gt; text(\"Dialog closed\"),\n        Error::IO(kind) =&gt; text(format!(\"I/O error: {:?}\", kind))\n    }\n} else {\n    let path_text = match &amp;self.path {\n        None =&gt; String::from(\"New file\"),\n        Some(path) =&gt; path.to_string_lossy().to_string()\n    };\n    let suffix = if self.modified { \"*\" } else { \"\" };\n    text(format!(\"{}{}\", path_text, suffix))\n};\n</code></pre> <p>\u200b\u5728\u200b\u521b\u5efa\u200b\u6587\u4ef6\u200b\u65f6\u200b\uff0c\u200b\u9700\u8981\u200b\u6e05\u7a7a\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b\u548c\u200b\u5185\u5bb9\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u6e05\u7a7a\u200b\u9519\u8bef\u4fe1\u606f\u200b\u3002\u200b\u52a0\u5165\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u6d88\u606f\u200b\u7c7b\u578b\u200b<code>NewButtonPressed</code>\uff0c\u200b\u7531\u200b\u4e00\u4e2a\u200b\u6309\u94ae\u200b\u89e6\u53d1\u200b\uff0c\u200b\u5728\u200b<code>update</code>\u200b\u51fd\u6570\u200b\u4e2d\u200b\u6267\u884c\u200b\u8fd9\u4e2a\u200b\u903b\u8f91\u200b\u3002</p> \u200b\u6d88\u606f\u200b\u7c7b\u578b\u200b\u58f0\u660e\u200b\u6d88\u606f\u200b\u89e6\u53d1\u200b\u6267\u884c\u200b\u903b\u8f91\u200b <pre><code>enum Message {\n    EditorEdit(text_editor::Action),\n    FileOpened(Result&lt;(PathBuf, Arc&lt;String&gt;), Error&gt;),\n    NewButtonPressed,\n    OpenButtonPressed\n}\n</code></pre> <pre><code>// ... In `view` function\nlet controls = row![\n    button(\"New\").on_press(Message::NewButtonPressed),\n    button(\"Open\").on_press(Message::OpenButtonPressed)\n];\n</code></pre> <pre><code>// ... In matching logic in `update` function\nMessage::NewButtonPressed =&gt; {\n    self.content = text_editor::Content::new();\n    self.error = None;\n    self.path = None;\n    self.modified = false;\n    Command::none()\n},\n// ...\n</code></pre> <p>\u200b\u63a5\u4e0b\u6765\u200b\u5904\u7406\u200b\u4fdd\u5b58\u200b\u6587\u4ef6\u200b\u7684\u200b\u903b\u8f91\u200b\uff0c\u200b\u5f53\u200b\u5b58\u5728\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b\u65f6\u200b\uff0c\u200b\u4fdd\u5b58\u200b\u6587\u4ef6\u200b\uff0c\u200b\u5426\u5219\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b\u9009\u62e9\u200b\u5bf9\u8bdd\u6846\u200b\u3002</p> <pre><code>async fn save_file(path: Option&lt;PathBuf&gt;, content: String) -&gt; Result&lt;PathBuf, Error&gt; {\n    let path = if let Some(path) = path {\n        path\n    } else {\n        rfd::AsyncFileDialog::new()\n            .set_title(\"Save the file to...\")\n            .save_file()\n            .await\n            .ok_or(Error::DialogClosed)?\n            .path()\n            .to_path_buf()\n    };\n    tokio::fs::write(&amp;path, content)\n        .await\n        .map_err(|err| err.kind())\n        .map_err(Error::IO)\n        .map(|_| path)\n}\n</code></pre> <p>\u200b\u5728\u200b\u4fdd\u5b58\u200b\u6587\u4ef6\u200b\u65f6\u200b\uff0c\u200b\u9700\u8981\u200b</p> <ol> <li>\u200b\u68c0\u67e5\u200b\u6587\u4ef6\u200b\u7684\u200b\u4fee\u6539\u200b\u72b6\u6001\u200b\uff0c\u200b\u5982\u679c\u200b\u6587\u4ef6\u200b\u6ca1\u6709\u200b\u4fee\u6539\u200b\uff0c\u200b\u4e0d\u200b\u6267\u884c\u200b\u4fdd\u5b58\u200b\u64cd\u4f5c\u200b\u3002</li> <li>\u200b\u68c0\u67e5\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b\u662f\u5426\u200b\u4e3a\u7a7a\u200b\uff0c\u200b\u5982\u679c\u200b\u4e3a\u7a7a\u200b\uff0c\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b\u9009\u62e9\u200b\u5bf9\u8bdd\u6846\u200b\uff0c\u200b\u5426\u5219\u200b\u76f4\u63a5\u200b\u4fdd\u5b58\u200b\u6587\u4ef6\u200b\u3002</li> <li>\u200b\u52a0\u5165\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u6d88\u606f\u200b\u7c7b\u578b\u200b<code>SaveButtonPressed</code>\uff0c\u200b\u7531\u200b\u4e00\u4e2a\u200b\u6309\u94ae\u200b\u89e6\u53d1\u200b\uff0c\u200b\u5728\u200b<code>update</code>\u200b\u51fd\u6570\u200b\u4e2d\u200b\u6267\u884c\u200b\u8fd9\u4e2a\u200b\u903b\u8f91\u200b\u3002</li> </ol> \u200b\u6d88\u606f\u200b\u7c7b\u578b\u200b\u58f0\u660e\u200b\u6d88\u606f\u200b\u89e6\u53d1\u200b\u6267\u884c\u200b\u903b\u8f91\u200b <pre><code>enum Message {\n    EditorEdit(text_editor::Action),\n    FileOpened(Result&lt;(PathBuf, Arc&lt;String&gt;), Error&gt;),\n    FileSaved(Result&lt;PathBuf, Error&gt;),\n    NewButtonPressed,\n    OpenButtonPressed,\n    SaveButtonPressed\n}\n</code></pre> <pre><code>// ... In `view` function\nlet controls = row![\n    button(\"New\").on_press(Message::NewButtonPressed),\n    button(\"Open\").on_press(Message::OpenButtonPressed),\n    button(\"Save\").on_press(Message::SaveButtonPressed)\n];\n</code></pre> <pre><code>// ... In matching logic in `update` function\nMessage::FileSaved(Ok(path)) =&gt; {\n    self.path = Some(path);\n    self.modified = false;\n    Command::none()\n},\nMessage::FileOpened(Err(error)) | Message::FileSaved(Err(error)) =&gt; {\n    self.error = Some(error);\n    Command::none()\n},\n// ...\nMessage::SaveButtonPressed =&gt; {\n    let content = self.content.text();\n    match self.modified {\n        false =&gt; Command::none(),\n        true =&gt; Command::perform(\n            save_file(self.path.clone(), content),\n            Message::FileSaved\n        )\n    }\n}\n</code></pre> <p>\u200b\u6700\u540e\u200b\uff0c\u200b\u8c03\u6574\u200b\u4e09\u4e2a\u200b\u6309\u94ae\u200b\u4e4b\u95f4\u200b\u7684\u200b\u95f4\u8ddd\u200b</p> <pre><code>let controls = row![\n    button(\"New\").on_press(Message::NewButtonPressed),\n    button(\"Open\").on_press(Message::OpenButtonPressed),\n    button(\"Save\").on_press(Message::SaveButtonPressed)\n].spacing(10);\n</code></pre> <p>\u200b\u4ee5\u4e0b\u200b\u4e3a\u200b\u5b8c\u6574\u200b\u7684\u200b<code>main.rs</code>\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\uff1a</p> <p>  Download source code</p> <pre><code>use std::io;\nuse std::path::{Path, PathBuf};\nuse std::sync::Arc;\n\nuse iced::{executor, Application, Command, Element, Length, Settings, Theme};\nuse iced::widget::{button, column, container, horizontal_space, row, text, text_editor};\n\nfn main() -&gt; iced::Result {\n    Editor::run(Settings::default())\n}\n\nstruct Editor {\n    path: Option&lt;PathBuf&gt;,\n    content: text_editor::Content,\n    modified: bool,\n    error: Option&lt;Error&gt;\n}\n\n#[derive(Debug, Clone)]\nenum Message {\n    EditorEdit(text_editor::Action),\n    FileOpened(Result&lt;(PathBuf, Arc&lt;String&gt;), Error&gt;),\n    FileSaved(Result&lt;PathBuf, Error&gt;),\n    NewButtonPressed,\n    OpenButtonPressed,\n    SaveButtonPressed\n}\n\nimpl Application for Editor {\n    type Message = Message; // Define the type of messages\n    type Theme = Theme;\n    type Executor = executor::Default; // Engine for running async tasks\n    type Flags = ();\n\n    fn new(_flags: Self::Flags) -&gt; (Self, Command&lt;Message&gt;) {\n        (\n            Self {\n                content: text_editor::Content::new(),\n                error: None,\n                modified: false,\n                path: None\n            },\n            Command::perform(\n            load_file(format!(\"{}/src/main.rs\", env!(\"CARGO_MANIFEST_DIR\"))),\n            Message::FileOpened\n            )\n        )\n    }\n\n    fn title(&amp;self) -&gt; String {\n        String::from(\"A text editor\")\n    }\n\n    fn update(&amp;mut self, message: Message) -&gt; Command&lt;Message&gt; {\n        // Handle messages here\n        match message {\n            Message::EditorEdit(action) =&gt; {\n                match &amp;action {\n                    text_editor::Action::Edit(_) =&gt; self.modified = true,\n                    _ =&gt; {}\n                }\n                self.content.edit(action);\n                Command::none()\n            },\n            Message::FileOpened(Ok((path, result))) =&gt; {\n                self.path = Some(path);\n                self.modified = false;\n                self.content = text_editor::Content::with(&amp;result);\n                Command::none()\n            },\n            Message::FileSaved(Ok(path)) =&gt; {\n                self.path = Some(path);\n                self.modified = false;\n                Command::none()\n            },\n            Message::FileOpened(Err(error)) | Message::FileSaved(Err(error)) =&gt; {\n                self.error = Some(error);\n                Command::none()\n            },\n            Message::NewButtonPressed =&gt; {\n                self.content = text_editor::Content::new();\n                self.error = None;\n                self.path = None;\n                self.modified = false;\n                Command::none()\n            },\n            Message::OpenButtonPressed =&gt; {\n                self.modified = false;\n                Command::perform(pick_file(), Message::FileOpened)\n            },\n            Message::SaveButtonPressed =&gt; {\n                let content = self.content.text();\n                match self.modified {\n                    false =&gt; Command::none(),\n                    true =&gt; Command::perform(\n                        save_file(self.path.clone(), content),\n                        Message::FileSaved\n                    )\n                }\n            }\n        }\n    }\n\n    fn view(&amp;self) -&gt; Element&lt;'_, Message&gt; {\n        // Create the user interface here\n        let editor = text_editor(&amp;self.content).on_edit(Message::EditorEdit);\n        let controls = row![\n            button(\"New\").on_press(Message::NewButtonPressed),\n            button(\"Open\").on_press(Message::OpenButtonPressed),\n            button(\"Save\").on_press(Message::SaveButtonPressed)\n        ].spacing(10);\n\n        // Query cursor position\n        let path_indicator = if let Some(error) = &amp;self.error {\n            match error {\n                Error::DialogClosed =&gt; text(\"Dialog closed\"),\n                Error::IO(kind) =&gt; text(format!(\"I/O error: {:?}\", kind))\n            }\n        } else {\n            let path_text = match &amp;self.path {\n                None =&gt; String::from(\"New file\"),\n                Some(path) =&gt; path.to_string_lossy().to_string()\n            };\n            let suffix = if self.modified { \"*\" } else { \"\" };\n            text(format!(\"{}{}\", path_text, suffix))\n        };\n        let cursor_indicator = {\n            let (line, column) = self.content.cursor_position();\n\n            text(format!(\"Line: {}, Column: {}\", line + 1, column + 1))\n        };\n        let status_bar = row![\n            path_indicator,\n            horizontal_space(Length::Fill),\n            cursor_indicator\n        ];\n\n        container(column![controls, editor, status_bar].spacing(10)).padding(10).into()\n    }\n\n    fn theme(&amp;self) -&gt; Theme {\n        Theme::Dark\n    }\n}\n\nasync fn pick_file() -&gt; Result&lt;(PathBuf, Arc&lt;String&gt;), Error&gt; {\n    let file_handle = rfd::AsyncFileDialog::new()\n        .set_title(\"Choose a text file...\")\n        .pick_file()\n        .await\n        .ok_or(Error::DialogClosed)?;\n    load_file(file_handle.path()).await\n}\n\nasync fn load_file(path: impl AsRef&lt;Path&gt;) -&gt; Result&lt;(PathBuf, Arc&lt;String&gt;), Error&gt; {\n    let content = tokio::fs::read_to_string(path.as_ref())\n        .await\n        .map(Arc::new)\n        .map_err(|err| err.kind())\n        .map_err(Error::IO);\n    content.and_then(|content| Ok((path.as_ref().to_path_buf(), content)))\n}\n\nasync fn save_file(path: Option&lt;PathBuf&gt;, content: String) -&gt; Result&lt;PathBuf, Error&gt; {\n    let path = if let Some(path) = path {\n        path\n    } else {\n        rfd::AsyncFileDialog::new()\n            .set_title(\"Save the file to...\")\n            .save_file()\n            .await\n            .ok_or(Error::DialogClosed)?\n            .path()\n            .to_path_buf()\n    };\n    tokio::fs::write(&amp;path, content)\n        .await\n        .map_err(|err| err.kind())\n        .map_err(Error::IO)\n        .map(|_| path)\n}\n\n#[derive(Debug, Clone)]\nenum Error {\n    DialogClosed,\n    IO(io::ErrorKind)\n}\n</code></pre>"},{"location":"coding/rust-gui/8-button-prettify/","title":"Button Prettify","text":"<p>\u200b\u5728\u200b\u672c\u8282\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u628a\u200b\u6309\u94ae\u200b\u7684\u200b\u6587\u672c\u200b\u66ff\u6362\u200b\u4e3a\u200b\u56fe\u6807\u200b\uff0c\u200b\u5e76\u4e14\u200b\u6dfb\u52a0\u200b\u6587\u672c\u200b\u60ac\u6d6e\u200b\u63d0\u793a\u200b\u3002</p> <p>\u200b\u9996\u5148\u200b\u9700\u8981\u200b\u521b\u5efa\u200b\u5305\u542b\u200b\u56fe\u6807\u200b\u7684\u200b\u5b57\u4f53\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200bFontello\u200b\u4e0a\u200b\u9009\u62e9\u200b\u56fe\u6807\u200b\uff0c\u200b\u7136\u540e\u200b\u4e0b\u8f7d\u200b\u5b57\u4f53\u200b\u6587\u4ef6\u200b\u3002\u200b\u5c06\u200b<code>ttf</code>\u200b\u7248\u672c\u200b\u7684\u200b\u5b57\u4f53\u200b\u5b58\u653e\u200b\u5728\u200b\u9879\u76ee\u200b\u4e0b\u200b\u7684\u200b<code>fonts/editor-icon.ttf</code>\u200b\u4e2d\u200b\u3002</p> <p>\u200b\u7136\u540e\u200b\u5728\u200b\u4ee3\u7801\u200b\u4e2d\u200b\u52a0\u8f7d\u200b\u5b57\u4f53\u200b\u6587\u4ef6\u200b\uff0c\u200b\u5728\u200b<code>iced::Settings</code>\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u5b57\u4f53\u200b\uff1a</p> <pre><code>fn main() -&gt; iced::Result {\n    Editor::run(Settings {\n        fonts: vec![include_bytes!(\"../fonts/editor-icon.ttf\").as_slice().into()],\n        ..Default::default() // Expand the default settings\n    })\n}\n</code></pre> <p>\u200b\u52a0\u8f7d\u200b\u5b57\u4f53\u200b\u540e\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u6309\u94ae\u200b\u7684\u200b\u8f93\u5165\u200b\u6587\u672c\u200b\u66ff\u6362\u200b\u4e3a\u200b\u56fe\u6807\u200b\uff0c\u200b\u4f7f\u7528\u200b<code>text</code>\u200b\u63a7\u4ef6\u200b\u521b\u5efa\u200b\u56fe\u6807\u200b\u3002\u200b\u5728\u200b\u7f51\u9875\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u8bfb\u53d6\u200b\u5230\u200b\u5bf9\u5e94\u200b\u65b0\u5efa\u200b\u3001\u200b\u6253\u5f00\u200b\u3001\u200b\u4fdd\u5b58\u200b\u7684\u200bUnicode\u200b\u7f16\u7801\u200b\u5206\u522b\u200b\u4e3a\u200b<code>\\u{E800}</code>\u3001<code>\\u{F115}</code>\u3001<code>\\u{E801}</code>\u3002</p> <pre><code>fn toolbar_button&lt;'a&gt;(description: &amp;str, callback: Message) -&gt; Element&lt;'a, Message&gt; {\n    let font = Font::with_name(\"editor-icon\");\n\n    let icon = text(match description {\n        \"new\" =&gt; '\\u{E800}',\n        \"open\" =&gt; '\\u{F115}',\n        \"save\" =&gt; '\\u{E801}',\n        _ =&gt; ' '\n    }).font(font);\n\n    button(container(icon)\n        .width(30)  // Set the width of the button\n        .center_x() // Center the icon\n    ).on_press(callback).into()\n}\n</code></pre> <p>\u200b\u4f7f\u7528\u200b<code>button_icon</code>\u200b\u51fd\u6570\u200b\u66ff\u6362\u200b\u6309\u94ae\u200b\u539f\u672c\u200b\u7684\u200b\u8f93\u5165\u200b</p> <pre><code>// ... In `view` function\nlet controls = row![\n    toolbar_button(\"new\", Message::NewButtonPressed),\n    toolbar_button(\"open\", Message::OpenButtonPressed),\n    toolbar_button(\"save\", Message::SaveButtonPressed)\n].spacing(10);\n</code></pre> <p>\u200b\u6700\u540e\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u60ac\u6d6e\u200b\u63d0\u793a\u200b\uff0c\u200b\u4f7f\u7528\u200b<code>Tooltip</code>\u200b\u63a7\u4ef6\u200b\u5305\u88f9\u200b\u6309\u94ae\u200b\u5373\u53ef\u200b\u3002\u200b\u4e3a\u4e86\u200b\u7f8e\u89c2\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b<code>style</code>\u200b\u65b9\u6cd5\u200b\u8bbe\u7f6e\u200b\u63d0\u793a\u6846\u200b\u7684\u200b\u6837\u5f0f\u200b\u3002</p> <pre><code>// ... In `view` function\nlet controls = row![\n    toolbar_button(\"New\", Message::NewButtonPressed),\n    toolbar_button(\"Open\", Message::OpenButtonPressed),\n    toolbar_button(\"Save\", Message::SaveButtonPressed)\n].spacing(10);\n\n// ... In the outer scope\nfn toolbar_button&lt;'a&gt;(description: &amp;str, callback: Message) -&gt; Element&lt;'a, Message&gt; {\n    let font = Font::with_name(\"editor-icon\");\n    let lower = description.to_lowercase();\n    let icon = text(match lower.as_str() {\n        \"new\" =&gt; '\\u{E800}',\n        \"open\" =&gt; '\\u{F115}',\n        \"save\" =&gt; '\\u{E801}',\n        _ =&gt; ' '\n    }).font(font);\n\n    tooltip(\n        button(container(icon)\n            .width(30)  // Set the width of the button\n            .center_x() // Center the icon\n        ).on_press(callback),\n        description, tooltip::Position::FollowCursor\n    ).style(theme::Container::Box).into() // Set the style of the tooltip\n}\n</code></pre> <p>\u200b\u4ee5\u4e0b\u200b\u4e3a\u200b\u5b8c\u6574\u200b\u7684\u200b<code>main.rs</code>\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\uff1a</p> <p>  Download source code</p> <pre><code>use std::io;\nuse std::path::{Path, PathBuf};\nuse std::sync::Arc;\n\nuse iced::{executor, theme, Application, Command, Element, Font, Length, Settings, Theme};\nuse iced::widget::{button, column, container, horizontal_space, row, text, text_editor, tooltip};\n\nfn main() -&gt; iced::Result {\n    Editor::run(Settings {\n        fonts: vec![include_bytes!(\"../fonts/editor-icon.ttf\").as_slice().into()],\n        ..Default::default()\n    })\n}\n\nstruct Editor {\n    path: Option&lt;PathBuf&gt;,\n    content: text_editor::Content,\n    modified: bool,\n    error: Option&lt;Error&gt;\n}\n\n#[derive(Debug, Clone)]\nenum Message {\n    EditorEdit(text_editor::Action),\n    FileOpened(Result&lt;(PathBuf, Arc&lt;String&gt;), Error&gt;),\n    FileSaved(Result&lt;PathBuf, Error&gt;),\n    NewButtonPressed,\n    OpenButtonPressed,\n    SaveButtonPressed\n}\n\nimpl Application for Editor {\n    type Message = Message; // Define the type of messages\n    type Theme = Theme;\n    type Executor = executor::Default; // Engine for running async tasks\n    type Flags = ();\n\n    fn new(_flags: Self::Flags) -&gt; (Self, Command&lt;Message&gt;) {\n        (\n            Self {\n                content: text_editor::Content::new(),\n                error: None,\n                modified: false,\n                path: None\n            },\n            Command::perform(\n            load_file(format!(\"{}/src/main.rs\", env!(\"CARGO_MANIFEST_DIR\"))),\n            Message::FileOpened\n            )\n        )\n    }\n\n    fn title(&amp;self) -&gt; String {\n        String::from(\"A text editor\")\n    }\n\n    fn update(&amp;mut self, message: Message) -&gt; Command&lt;Message&gt; {\n        // Handle messages here\n        match message {\n            Message::EditorEdit(action) =&gt; {\n                match &amp;action {\n                    text_editor::Action::Edit(_) =&gt; self.modified = true,\n                    _ =&gt; {}\n                }\n                self.content.edit(action);\n                Command::none()\n            },\n            Message::FileOpened(Ok((path, result))) =&gt; {\n                self.path = Some(path);\n                self.modified = false;\n                self.content = text_editor::Content::with(&amp;result);\n                Command::none()\n            },\n            Message::FileSaved(Ok(path)) =&gt; {\n                self.path = Some(path);\n                self.modified = false;\n                Command::none()\n            },\n            Message::FileOpened(Err(error)) | Message::FileSaved(Err(error)) =&gt; {\n                self.error = Some(error);\n                Command::none()\n            },\n            Message::NewButtonPressed =&gt; {\n                self.content = text_editor::Content::new();\n                self.error = None;\n                self.path = None;\n                self.modified = false;\n                Command::none()\n            },\n            Message::OpenButtonPressed =&gt; {\n                self.modified = false;\n                Command::perform(pick_file(), Message::FileOpened)\n            },\n            Message::SaveButtonPressed =&gt; {\n                let content = self.content.text();\n                match self.modified {\n                    false =&gt; Command::none(),\n                    true =&gt; Command::perform(\n                        save_file(self.path.clone(), content),\n                        Message::FileSaved\n                    )\n                }\n            }\n        }\n    }\n\n    fn view(&amp;self) -&gt; Element&lt;'_, Message&gt; {\n        // Create the user interface here\n        let editor = text_editor(&amp;self.content).on_edit(Message::EditorEdit);\n        let controls = row![\n            toolbar_button(\"New\", Message::NewButtonPressed),\n            toolbar_button(\"Open\", Message::OpenButtonPressed),\n            toolbar_button(\"Save\", Message::SaveButtonPressed)\n        ].spacing(10);\n\n        // Query cursor position\n        let path_indicator = if let Some(error) = &amp;self.error {\n            match error {\n                Error::DialogClosed =&gt; text(\"Dialog closed\"),\n                Error::IO(kind) =&gt; text(format!(\"I/O error: {:?}\", kind))\n            }\n        } else {\n            let path_text = match &amp;self.path {\n                None =&gt; String::from(\"New file\"),\n                Some(path) =&gt; path.to_string_lossy().to_string()\n            };\n            let suffix = if self.modified { \"*\" } else { \"\" };\n            text(format!(\"{}{}\", path_text, suffix))\n        };\n        let cursor_indicator = {\n            let (line, column) = self.content.cursor_position();\n\n            text(format!(\"Line: {}, Column: {}\", line + 1, column + 1))\n        };\n        let status_bar = row![\n            path_indicator,\n            horizontal_space(Length::Fill),\n            cursor_indicator\n        ];\n\n        container(column![controls, editor, status_bar].spacing(10)).padding(10).into()\n    }\n\n    fn theme(&amp;self) -&gt; Theme {\n        Theme::Dark\n    }\n}\n\nasync fn pick_file() -&gt; Result&lt;(PathBuf, Arc&lt;String&gt;), Error&gt; {\n    let file_handle = rfd::AsyncFileDialog::new()\n        .set_title(\"Choose a text file...\")\n        .pick_file()\n        .await\n        .ok_or(Error::DialogClosed)?;\n    load_file(file_handle.path()).await\n}\n\nasync fn load_file(path: impl AsRef&lt;Path&gt;) -&gt; Result&lt;(PathBuf, Arc&lt;String&gt;), Error&gt; {\n    let content = tokio::fs::read_to_string(path.as_ref())\n        .await\n        .map(Arc::new)\n        .map_err(|err| err.kind())\n        .map_err(Error::IO);\n    content.and_then(|content| Ok((path.as_ref().to_path_buf(), content)))\n}\n\nasync fn save_file(path: Option&lt;PathBuf&gt;, content: String) -&gt; Result&lt;PathBuf, Error&gt; {\n    let path = if let Some(path) = path {\n        path\n    } else {\n        rfd::AsyncFileDialog::new()\n            .set_title(\"Save the file to...\")\n            .save_file()\n            .await\n            .ok_or(Error::DialogClosed)?\n            .path()\n            .to_path_buf()\n    };\n    tokio::fs::write(&amp;path, content)\n        .await\n        .map_err(|err| err.kind())\n        .map_err(Error::IO)\n        .map(|_| path)\n}\n\nfn toolbar_button&lt;'a&gt;(description: &amp;str, callback: Message) -&gt; Element&lt;'a, Message&gt; {\n    let font = Font::with_name(\"editor-icon\");\n    let lower = description.to_lowercase();\n    let icon = text(match lower.as_str() {\n        \"new\" =&gt; '\\u{E800}',\n        \"open\" =&gt; '\\u{F115}',\n        \"save\" =&gt; '\\u{E801}',\n        _ =&gt; ' '\n    }).font(font);\n\n    tooltip(\n        button(container(icon)\n            .width(30)  // Set the width of the button\n            .center_x() // Center the icon\n        ).on_press(callback),\n        description, tooltip::Position::FollowCursor\n    ).style(theme::Container::Box).into()\n}\n\n#[derive(Debug, Clone)]\nenum Error {\n    DialogClosed,\n    IO(io::ErrorKind)\n}\n</code></pre>"},{"location":"coding/rust-gui/9-syntax-highlighting/","title":"Syntax Highlighting","text":"<p>Keywords: <code>iced::widget::pick_list</code></p> <p>\u200b\u672c\u200b\u8282\u200b\u6dfb\u52a0\u200b\u4ee3\u7801\u200b\u7f16\u8f91\u5668\u200b\u7684\u200b\u8bed\u6cd5\u200b\u9ad8\u4eae\u200b\u529f\u80fd\u200b\u3002</p> <p>\u200b\u9996\u5148\u200b\uff0c\u200b\u4fee\u6539\u200b\u7f16\u8f91\u5668\u200b\u7684\u200b\u9ed8\u8ba4\u200b\u5b57\u4f53\u200b\u4e3a\u200b\u7b49\u200b\u5bbd\u200b\u5b57\u4f53\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u66f4\u597d\u200b\u5730\u200b\u663e\u793a\u200b\u4ee3\u7801\u200b\u3002</p> <pre><code>// ... In `view` function\nlet editor = text_editor(&amp;self.content)\n    .on_edit(Message::EditorEdit)\n    .font(Font::MONOSPACE);\n</code></pre> <p>\u200b\u63a5\u4e0b\u6765\u200b\uff0c\u200b\u6dfb\u52a0\u200b\u9ad8\u4eae\u200b\u5904\u7406\u200b\u7684\u200b\u903b\u8f91\u200b\u3002\u200b\u9ad8\u4eae\u200b\u529f\u80fd\u200b\u7531\u200b<code>iced</code>\u200b\u7684\u200b<code>highlighter</code>\u200b\u6a21\u5757\u200b\u63d0\u4f9b\u200b\uff0c\u200b\u9700\u8981\u200b\u5728\u200b<code>Cargo.toml</code>\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u4f9d\u8d56\u200b\u3002</p> <pre><code>[dependencies]\niced = { git = \"https://github.com/iced-rs/iced.git\", rev = \"refs/tags/text-editor\", features = [ \"highlighter\" ] }\n</code></pre> <p>\u200b\u5728\u200b\u6587\u672c\u6846\u200b\u7684\u200b<code>highlight</code>\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u8bbe\u7f6e\u200b\u9ad8\u4eae\u200b\u3002<code>highlight</code>\u200b\u65b9\u6cd5\u200b\u9700\u8981\u200b\u6307\u5b9a\u200b\u914d\u8272\u200b\u65b9\u6848\u200b<code>theme</code>\u200b\u548c\u200b\u8bed\u6cd5\u200b<code>extension</code>\u3002<code>extension</code>\u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b\u7684\u200b\u540e\u7f00\u540d\u200b\u81ea\u52a8\u8bc6\u522b\u200b\uff0c\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u540e\u7f00\u540d\u200b\uff0c\u200b\u5219\u200b\u9ed8\u8ba4\u200b\u4e3a\u200b<code>rs</code>\u3002</p> <pre><code>let editor = text_editor(&amp;self.content)\n    .on_edit(Message::EditorEdit)\n    .highlight::&lt;Highlighter&gt;( // use iced::highlighter::Highlighter\n        highlighter::Settings {\n            theme: highlighter::Theme::SolarizedDark, // Set the theme\n            extension: self.path\n                .as_ref()\n                .and_then(|path| path.extension()?.to_str())\n                .unwrap_or(\"rs\") // If extension is not found, use `rs`\n                .to_string()\n        }, |highlighter, _theme| {\n            highlighter.to_format()\n        }\n    )\n    .font(Font::MONOSPACE);\n</code></pre> <p>\u200b\u63a5\u4e0b\u6765\u200b\u6dfb\u52a0\u200b\u9ad8\u4eae\u200b\u98ce\u683c\u200b\u7684\u200b\u9009\u62e9\u200b\u529f\u80fd\u200b\u3002\u200b\u9996\u5148\u200b\u5728\u200b<code>Editor</code>\u200b\u4e2d\u200b\u6dfb\u52a0\u200b<code>theme</code>\u200b\u72b6\u6001\u200b\u4f5c\u4e3a\u200b\u5f53\u524d\u200b\u7684\u200b\u4e3b\u9898\u200b\uff0c\u200b\u5e76\u4e14\u200b\u8bbe\u7f6e\u200b\u521d\u59cb\u5316\u200b\u72b6\u6001\u200b\u3002</p> <pre><code>struct Editor {\n    // ...\n    theme: highlighter::Theme\n}\n// ... In `new` function\nSelf {\n    // ...\n    theme: highlighter::Theme::SolarizedDark\n},\n// ... In `view` function\nhighlighter::Settings {\n    theme: self.theme,\n    // ...\n}\n</code></pre> <p>\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b<code>pick_list</code>\u200b\u63a7\u4ef6\u200b\u7528\u4e8e\u200b\u9009\u62e9\u200b\u9ad8\u4eae\u200b\u98ce\u683c\u200b\uff0c<code>pick_list</code>\u200b\u9700\u8981\u200b\u8bbe\u7f6e\u200b\u9009\u9879\u200b\u3001\u200b\u5f53\u524d\u200b\u9009\u4e2d\u200b\u9879\u200b\u548c\u200b\u89e6\u53d1\u200b\u4e8b\u4ef6\u200b\u3002\u200b\u6bcf\u6b21\u200b\u66f4\u65b0\u200b\u65f6\u200b\u90fd\u200b\u4f1a\u200b\u4ee5\u200b\u9009\u4e2d\u200b\u9879\u4e3a\u200b\u53c2\u6570\u200b\u89e6\u53d1\u200b\u4e8b\u4ef6\u200b\u3002</p> <pre><code>let controls = row![\n    toolbar_button(\"New\", Message::NewButtonPressed),\n    toolbar_button(\"Open\", Message::OpenButtonPressed),\n    toolbar_button(\"Save\", Message::SaveButtonPressed),\n    horizontal_space(Length::Fill),\n    pick_list(highlighter::Theme::ALL, Some(self.theme), Message::ThemeChanged)\n].spacing(10);\n</code></pre> <p>\u200b\u540c\u65f6\u200b\u66f4\u65b0\u200b<code>ThemeChanged</code>\u200b\u4e8b\u4ef6\u200b\u7684\u200b\u5904\u7406\u200b\u903b\u8f91\u200b</p> <pre><code>// ... In `update` function\nMessage::ThemeChanged(theme) =&gt; {\n    self.theme = theme;\n    Command::none()\n}\n</code></pre> <p>\u200b\u5185\u7f6e\u200b\u7684\u200b\u90e8\u5206\u200b\u4e3b\u9898\u200b\u5e76\u200b\u4e0d\u662f\u200b\u6697\u8272\u200b\u4e3b\u9898\u200b\uff0c\u200b\u9700\u8981\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u6839\u636e\u200b\u4e3b\u9898\u200b\u7684\u200b\u4eae\u200b\u6697\u200b\u5207\u6362\u200b\u7a97\u53e3\u200b\u914d\u8272\u200b\u7684\u200b\u529f\u80fd\u200b\uff1a</p> <pre><code>// ... In `impl Application for Editor`\nfn theme(&amp;self) -&gt; Theme {\n    if self.theme.is_dark() {\n        Theme::Dark\n    } else {\n        Theme::Light\n    }\n}\n</code></pre> <p>\u200b\u4ee5\u4e0b\u200b\u4e3a\u200b\u5b8c\u6574\u200b\u7684\u200b<code>main.rs</code>\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\uff1a</p> <p>  Download source code</p> <pre><code>use std::io;\nuse std::path::{Path, PathBuf};\nuse std::sync::Arc;\n\nuse iced::{executor, theme, Application, Command, Element, Font, Length, Settings, Theme};\nuse iced::highlighter::{self, Highlighter};\nuse iced::widget::{button, column, container, horizontal_space, pick_list, row, text, text_editor, tooltip};\n\nfn main() -&gt; iced::Result {\n    Editor::run(Settings {\n        fonts: vec![include_bytes!(\"../fonts/editor-icon.ttf\").as_slice().into()],\n        ..Default::default()\n    })\n}\n\nstruct Editor {\n    path: Option&lt;PathBuf&gt;,\n    content: text_editor::Content,\n    modified: bool,\n    error: Option&lt;Error&gt;,\n    theme: highlighter::Theme\n}\n\n#[derive(Debug, Clone)]\nenum Message {\n    EditorEdit(text_editor::Action),\n    FileOpened(Result&lt;(PathBuf, Arc&lt;String&gt;), Error&gt;),\n    FileSaved(Result&lt;PathBuf, Error&gt;),\n    ThemeChanged(highlighter::Theme),\n    NewButtonPressed,\n    OpenButtonPressed,\n    SaveButtonPressed\n}\n\nimpl Application for Editor {\n    type Message = Message; // Define the type of messages\n    type Theme = Theme;\n    type Executor = executor::Default; // Engine for running async tasks\n    type Flags = ();\n\n    fn new(_flags: Self::Flags) -&gt; (Self, Command&lt;Message&gt;) {\n        (\n            Self {\n                content: text_editor::Content::new(),\n                error: None,\n                modified: false,\n                path: None,\n                theme: highlighter::Theme::SolarizedDark\n            },\n            Command::perform(\n            load_file(format!(\"{}/src/main.rs\", env!(\"CARGO_MANIFEST_DIR\"))),\n            Message::FileOpened\n            )\n        )\n    }\n\n    fn title(&amp;self) -&gt; String {\n        String::from(\"A text editor\")\n    }\n\n    fn update(&amp;mut self, message: Message) -&gt; Command&lt;Message&gt; {\n        // Handle messages here\n        match message {\n            Message::EditorEdit(action) =&gt; {\n                match &amp;action {\n                    text_editor::Action::Edit(_) =&gt; self.modified = true,\n                    _ =&gt; {}\n                }\n                self.content.edit(action);\n                Command::none()\n            },\n            Message::FileOpened(Ok((path, result))) =&gt; {\n                self.path = Some(path);\n                self.modified = false;\n                self.content = text_editor::Content::with(&amp;result);\n                Command::none()\n            },\n            Message::FileSaved(Ok(path)) =&gt; {\n                self.path = Some(path);\n                self.modified = false;\n                Command::none()\n            },\n            Message::FileOpened(Err(error)) | Message::FileSaved(Err(error)) =&gt; {\n                self.error = Some(error);\n                Command::none()\n            },\n            Message::ThemeChanged(theme) =&gt; {\n                self.theme = theme;\n                Command::none()\n            },\n            Message::NewButtonPressed =&gt; {\n                self.content = text_editor::Content::new();\n                self.error = None;\n                self.path = None;\n                self.modified = false;\n                Command::none()\n            },\n            Message::OpenButtonPressed =&gt; {\n                self.modified = false;\n                Command::perform(pick_file(), Message::FileOpened)\n            },\n            Message::SaveButtonPressed =&gt; {\n                let content = self.content.text();\n                match self.modified {\n                    false =&gt; Command::none(),\n                    true =&gt; Command::perform(\n                        save_file(self.path.clone(), content),\n                        Message::FileSaved\n                    )\n                }\n            }\n        }\n    }\n\n    fn view(&amp;self) -&gt; Element&lt;'_, Message&gt; {\n        // Create the user interface here\n        let editor = text_editor(&amp;self.content)\n            .on_edit(Message::EditorEdit)\n            .highlight::&lt;Highlighter&gt;(\n                highlighter::Settings {\n                    theme: self.theme,\n                    extension: self.path\n                        .as_ref()\n                        .and_then(|path| path.extension()?.to_str())\n                        .unwrap_or(\"rs\")\n                        .to_string()\n                }, |highlighter, _theme| {\n                    highlighter.to_format()\n                }\n            )\n            .font(Font::MONOSPACE);\n        let controls = row![\n            toolbar_button(\"New\", Message::NewButtonPressed),\n            toolbar_button(\"Open\", Message::OpenButtonPressed),\n            toolbar_button(\"Save\", Message::SaveButtonPressed),\n            horizontal_space(Length::Fill),\n            pick_list(highlighter::Theme::ALL, Some(self.theme), Message::ThemeChanged)\n        ].spacing(10);\n\n        // Query cursor position\n        let path_indicator = if let Some(error) = &amp;self.error {\n            match error {\n                Error::DialogClosed =&gt; text(\"Dialog closed\"),\n                Error::IO(kind) =&gt; text(format!(\"I/O error: {:?}\", kind))\n            }\n        } else {\n            let path_text = match &amp;self.path {\n                None =&gt; String::from(\"New file\"),\n                Some(path) =&gt; path.to_string_lossy().to_string()\n            };\n            let suffix = if self.modified { \"*\" } else { \"\" };\n            text(format!(\"{}{}\", path_text, suffix))\n        };\n        let cursor_indicator = {\n            let (line, column) = self.content.cursor_position();\n\n            text(format!(\"Line: {}, Column: {}\", line + 1, column + 1))\n        };\n        let status_bar = row![\n            path_indicator,\n            horizontal_space(Length::Fill),\n            cursor_indicator\n        ];\n\n        container(column![controls, editor, status_bar].spacing(10)).padding(10).into()\n    }\n\n    fn theme(&amp;self) -&gt; Theme {\n        if self.theme.is_dark() {\n            Theme::Dark\n        } else {\n            Theme::Light\n        }\n    }\n}\n\nasync fn pick_file() -&gt; Result&lt;(PathBuf, Arc&lt;String&gt;), Error&gt; {\n    let file_handle = rfd::AsyncFileDialog::new()\n        .set_title(\"Choose a text file...\")\n        .pick_file()\n        .await\n        .ok_or(Error::DialogClosed)?;\n    load_file(file_handle.path()).await\n}\n\nasync fn load_file(path: impl AsRef&lt;Path&gt;) -&gt; Result&lt;(PathBuf, Arc&lt;String&gt;), Error&gt; {\n    let content = tokio::fs::read_to_string(path.as_ref())\n        .await\n        .map(Arc::new)\n        .map_err(|err| err.kind())\n        .map_err(Error::IO);\n    content.and_then(|content| Ok((path.as_ref().to_path_buf(), content)))\n}\n\nasync fn save_file(path: Option&lt;PathBuf&gt;, content: String) -&gt; Result&lt;PathBuf, Error&gt; {\n    let path = if let Some(path) = path {\n        path\n    } else {\n        rfd::AsyncFileDialog::new()\n            .set_title(\"Save the file to...\")\n            .save_file()\n            .await\n            .ok_or(Error::DialogClosed)?\n            .path()\n            .to_path_buf()\n    };\n    tokio::fs::write(&amp;path, content)\n        .await\n        .map_err(|err| err.kind())\n        .map_err(Error::IO)\n        .map(|_| path)\n}\n\nfn toolbar_button&lt;'a&gt;(description: &amp;str, callback: Message) -&gt; Element&lt;'a, Message&gt; {\n    let font = Font::with_name(\"editor-icon\");\n    let lower = description.to_lowercase();\n    let icon = text(match lower.as_str() {\n        \"new\" =&gt; '\\u{E800}',\n        \"open\" =&gt; '\\u{F115}',\n        \"save\" =&gt; '\\u{E801}',\n        _ =&gt; ' '\n    }).font(font);\n\n    tooltip(\n        button(container(icon)\n            .width(30)  // Set the width of the button\n            .center_x() // Center the icon\n        ).on_press(callback),\n        description, tooltip::Position::FollowCursor\n    ).style(theme::Container::Box).into()\n}\n\n#[derive(Debug, Clone)]\nenum Error {\n    DialogClosed,\n    IO(io::ErrorKind)\n}\n</code></pre>"},{"location":"japanese/","title":"\u65e5\u8bed","text":"<p>\u200b\u65e5\u8bed\u200b\u5b66\u4e60\u200b\u7b14\u8bb0\u200b</p> <ol> <li>\u200b\u65e5\u8bed\u200b(1) - 2023-2024\u200b\u5b66\u5e74\u200b\u79cb\u5b63\u200b\u5b66\u671f\u200b<ul> <li>\u200b\u77ed\u8bed\u200b\u4e0e\u200b\u8868\u8fbe\u200b</li> <li>\u200b\u8bed\u6cd5\u200b</li> <li>\u200b\u5355\u8bcd\u8868\u200b</li> </ul> </li> </ol>"},{"location":"japanese/japanese-1-grammar/","title":"\u65e5\u8bed\u200b(1)\u200b\u8bed\u6cd5","text":""},{"location":"japanese/japanese-1-grammar/#_1","title":"\u8bcd\u6cd5","text":"<p>\u200b\u65e5\u8bed\u200b\u4e2d\u200b\u7684\u200b\u5355\u8bcd\u200b\u8bcd\u6027\u200b\u4e3b\u8981\u200b\u6709\u200b\u540d\u8bcd\u200b\u3001\u200b\u52a8\u8bcd\u200b\u3001\u200b\u5f62\u5bb9\u8bcd\u200b\u3001\u200b\u526f\u8bcd\u200b\u3001\u200b\u52a9\u8bcd\u200b\u3001\u200b\u63a5\u7eed\u8bcd\u200b\u7b49\u200b\u3002\u200b\u5176\u4e2d\u200b\uff0c\u200b\u52a8\u8bcd\u200b\u53ef\u4ee5\u200b\u5206\u4e3a\u200bI\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u3001III\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u3001III\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u3002\u200b\u5f62\u5bb9\u8bcd\u200b\u53ef\u4ee5\u200b\u5206\u4e3a\u200bI\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\u3001II\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\u3002</p> <ul> <li>\u200b\u540d\u8bcd\u200b\u3001\u200b\u4ee3\u8bcd\u200b\u3001\u200b\u6570\u8bcd\u200b\u79f0\u4e3a\u200b\u300c\u200b\u4f53\u8a00\u200b\u300d\u3002</li> <li>\u200b\u52a8\u8bcd\u200b\u3001\u200b\u5f62\u5bb9\u8bcd\u200b\u3001\u200b\u5f62\u5bb9\u200b\u52a8\u8bcd\u200b\u79f0\u4e3a\u200b\u300c\u200b\u7528\u8a00\u200b\u300d\u3002</li> </ul>"},{"location":"japanese/japanese-1-grammar/#_2","title":"\u300c\u30a2\u30bd\u30b3\u30c9\u300d\u200b\u7cfb\u7edf","text":"<p>\u200b\u5728\u200b\u65e5\u8bed\u200b\u4e2d\u200b\uff0c\u300c\u30a2\u30bd\u30b3\u30c9\u300d\u200b\u548c\u200b\u300c\u308c\u300d\uff08\u200b\u4e8b\u7269\u200b\uff09\u3001\u300c\u3053\u300d\uff08\u200b\u5730\u70b9\u200b\uff09\u3001\u300c\u3061\u3089\u300d\uff08\u200b\u65b9\u4f4d\u200b\uff09\u200b\u7b49\u200b\u6307\u793a\u200b\u4ee3\u8bcd\u200b\u8fde\u7528\u200b\u65f6\u200b\uff0c\u200b\u8868\u793a\u200b\u8be5\u8bcd\u200b\u7684\u200b\u8fdc\u8fd1\u200b\u3002</p> \u200b\u524d\u7f00\u200b \u200b\u4e8b\u7269\u200b \u200b\u5730\u70b9\u200b \u200b\u65b9\u4f4d\u200b \u200b\u72b6\u6001\u200b \u200b\u8fd1\u79f0\u200b \u3053 \u3053\u308c \u3053\u3053 \u3053\u3061\u3089 \u3053\u3093\u306a \u200b\u4e2d\u79f0\u200b \u305d \u305d\u308c \u305d\u3053 \u305d\u3061\u3089 \u305d\u3093\u306a \u200b\u8fdc\u79f0\u200b \u3042 \u3042\u308c \u3042\u305d\u3053 \u3042\u3061\u3089 \u3042\u3093\u306a \u200b\u4e0d\u5b9a\u200b\u79f0\u200b \u3069 \u3069\u308c \u3069\u3053 \u3069\u3061\u3089 \u3069\u3093\u306a <p>\u200b\u4e0d\u5b9a\u200b\u79f0\u200b\u662f\u200b\u7591\u95ee\u8bcd\u200b\uff0c\u200b\u7528\u4e8e\u200b\u63d0\u95ee\u200b\u3002</p>"},{"location":"japanese/japanese-1-grammar/#_3","title":"\u5f62\u5bb9\u8bcd","text":"<p>\u200b\u5f62\u5bb9\u8bcd\u200b\u53ef\u4ee5\u200b\u5206\u4e3a\u200bI\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\u548c\u200bII\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\u3002I\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\u7684\u200b\u8bcd\u5c3e\u200b\u662f\u200b\u300c\u3044\u300d\uff0c\u200b\u5176\u4ed6\u200b\u7684\u200b\u90fd\u200b\u662f\u200bII\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\uff0cII\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\u53c8\u200b\u79f0\u4e3a\u200b\u5f62\u5bb9\u200b\u52a8\u8bcd\u200b\uff0c\u200b\u5176\u200b\u539f\u578b\u200b\u7684\u200b\u8bcd\u5c3e\u200b\u4e3a\u200b\u300c\u3060\u300d\u3002</p> I\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b \u200b\u542b\u4e49\u200b II\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b \u200b\u542b\u4e49\u200b \u3042\u305f\u3089\u3057\u3044 \u200b\u65b0\u200b\u7684\u200b \u3060\u3044\u3058\u3087\u3046\u3076 \u200b\u6ca1\u5173\u7cfb\u200b \u305f\u304b\u3044 \u200b\u9ad8\u200b\u7684\u200b \u3079\u3093\u308a \u200b\u65b9\u4fbf\u200b \u3072\u308d\u3044 \u200b\u5bbd\u200b\u7684\u200b \u3059\u304d \u200b\u559c\u6b22\u200b <p>\u200b\u4f8b\u5916\u200b\uff1a\u200b\u7dba\u9e97\u200b\uff08\u304d\u308c\u3044\uff09\u3001\u200b\u5acc\u200b\u3044\uff08\u304d\u3089\u3044\uff09\u200b\u662f\u200bII\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\uff0c\u200b\u4f46\u662f\u200b\u8bcd\u5c3e\u200b\u662f\u200b\u300c\u3044\u300d\u3002</p> <p>\u200b\u5f62\u5bb9\u8bcd\u200b\u6709\u200b\u3066\u200b\u578b\u200b\u53d8\u5f62\u200b\u3002</p> \u3066\u200b\u578b\u200b\u306a\u3044\u200b\u578b\u200b\u3063\u305f\u200b\u578b\u200b <p>\u200b\u5f62\u5bb9\u8bcd\u200b\u7684\u200b\u3066\u200b\u578b\u200b\u662f\u200b\u5f62\u5bb9\u8bcd\u200b\u7684\u200b\u8fde\u7528\u200b\u5f62\u5f0f\u200b\uff0c\u200b\u7528\u4e8e\u200b\u8fde\u63a5\u200b\u4e24\u4e2a\u200b\u5206\u53e5\u200b\u3002</p> <ol> <li>I\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\u7684\u200b\u3066\u200b\u578b\u200b\u662f\u200b\u5c06\u200b\u8bcd\u5c3e\u200b\u7684\u200b\u300c\u3044\u300d\u200b\u53d8\u4e3a\u200b\u300c\u304f\u3066\u300d\u3002</li> <li>II\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\u7684\u200b\u3066\u200b\u578b\u200b\u662f\u200b\u5728\u200b\u8bcd\u5c3e\u200b\u76f4\u63a5\u200b\u52a0\u4e0a\u200b\u300c\u3067\u300d\u3002</li> </ol> \u200b\u5f62\u5bb9\u8bcd\u200b \u200b\u5206\u7c7b\u200b \u3066\u200b\u578b\u200b \u3042\u305f\u3089\u3057\u3044 I\u200b\u7c7b\u200b \u3042\u305f\u3089\u3057\u304f\u3066 \u305f\u304b\u3044 I\u200b\u7c7b\u200b \u305f\u304b\u304f\u3066 \u3072\u308d\u3044 I\u200b\u7c7b\u200b \u3072\u308d\u304f\u3066 \u3079\u3093\u308a II\u200b\u7c7b\u200b \u3079\u3093\u308a\u3067 \u3059\u304d II\u200b\u7c7b\u200b \u3059\u304d\u3067 <p>\u200b\u5f62\u5bb9\u8bcd\u200b\u7684\u200b\u306a\u3044\u200b\u578b\u200b\u662f\u200b\u5f62\u5bb9\u8bcd\u200b\u7684\u200b\u5426\u5b9a\u200b\u5f62\u5f0f\u200b\uff0c\u200b\u7528\u4e8e\u200b\u7b80\u4f53\u200b\u5426\u5b9a\u53e5\u200b\u4e2d\u200b\u3002</p> <ol> <li>I\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\u7684\u200b\u306a\u3044\u200b\u578b\u200b\u662f\u200b\u5c06\u200b\u8bcd\u5c3e\u200b\u7684\u200b\u300c\u3044\u300d\u200b\u53d8\u4e3a\u200b\u300c\u304f\u306a\u3044\u300d\u3002</li> <li>II\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\u7684\u200b\u306a\u3044\u200b\u578b\u200b\u662f\u200b\u5728\u200b\u8bcd\u5c3e\u200b\u76f4\u63a5\u200b\u52a0\u4e0a\u200b\u300c\u3067\u306f\u306a\u3044\u300d\u3002</li> </ol> \u200b\u5f62\u5bb9\u8bcd\u200b \u200b\u5206\u7c7b\u200b \u306a\u3044\u200b\u578b\u200b \u3042\u305f\u3089\u3057\u3044 I\u200b\u7c7b\u200b \u3042\u305f\u3089\u3057\u304f\u306a\u3044 \u305f\u304b\u3044 I\u200b\u7c7b\u200b \u305f\u304b\u304f\u306a\u3044 \u3072\u308d\u3044 I\u200b\u7c7b\u200b \u3072\u308d\u304f\u306a\u3044 \u3079\u3093\u308a II\u200b\u7c7b\u200b \u3079\u3093\u308a\u3067\u306f\u306a\u3044 \u3059\u304d II\u200b\u7c7b\u200b \u3059\u304d\u3067\u306f\u306a\u3044 <p>\u200b\u5f62\u5bb9\u8bcd\u200b\u7684\u200b\u3063\u305f\u200b\u578b\u200b\u662f\u200b\u5f62\u5bb9\u8bcd\u200b\u7684\u200b\u8fc7\u53bb\u200b\u5f0f\u200b\uff0c\u200b\u7528\u4e8e\u200b\u7b80\u4f53\u200b\u8fc7\u53bb\u200b\u53e5\u200b\u4e2d\u200b\u3002</p> <ol> <li>I\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\u7684\u200b\u3063\u305f\u200b\u578b\u200b\u662f\u200b\u5c06\u200b\u8bcd\u5c3e\u200b\u7684\u200b\u300c\u3044\u300d\u200b\u53d8\u4e3a\u200b\u300c\u304b\u3063\u305f\u300d\u3002</li> <li>II\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\u7684\u200b\u3063\u305f\u200b\u578b\u200b\u662f\u200b\u5728\u200b\u8bcd\u5c3e\u200b\u76f4\u63a5\u200b\u52a0\u4e0a\u200b\u300c\u3060\u3063\u305f\u300d\uff08\u200b\u76f8\u5f53\u4e8e\u200b\u539f\u578b\u200b\u76f4\u63a5\u200b\u52a0\u200b\u300c\u3063\u305f\u300d\uff09\u3002</li> </ol> \u200b\u5f62\u5bb9\u8bcd\u200b \u200b\u5206\u7c7b\u200b \u3063\u305f\u200b\u578b\u200b \u3042\u305f\u3089\u3057\u3044 I\u200b\u7c7b\u200b \u3042\u305f\u3089\u3057\u304b\u3063\u305f \u305f\u304b\u3044 I\u200b\u7c7b\u200b \u305f\u304b\u304b\u3063\u305f \u3072\u308d\u3044 I\u200b\u7c7b\u200b \u3072\u308d\u304b\u3063\u305f \u3079\u3093\u308a II\u200b\u7c7b\u200b \u3079\u3093\u308a\u3060\u3063\u305f \u3059\u304d II\u200b\u7c7b\u200b \u3059\u304d\u3060\u3063\u305f <p>\u200b\u6ce8\u610f\u200b\u300c\u306a\u3044\u300d\u200b\u578b\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u770b\u4f5c\u200bI\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\uff0c\u200b\u5176\u200b\u8fc7\u53bb\u200b\u5f62\u5f0f\u200b\u4e3a\u200b\u300c\u306a\u304b\u3063\u305f\u300d\u3002</p> <ul> <li>I\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\u4fee\u9970\u200b\u4f53\u8a00\u65f6\u200b\uff0c\u200b\u76f4\u63a5\u200b\u52a0\u4f53\u8a00\u200b\u5373\u53ef\u200b\uff0c\u200b\u4fee\u9970\u200b\u7528\u8a00\u65f6\u200b\uff08\u200b\u5373\u200b\u526f\u8bcd\u200b\u5f62\u5f0f\u200b\uff09\u200b\u9700\u8981\u200b\u5c06\u200b\u300c\u3044\u300d\u200b\u53d8\u4e3a\u200b\u300c\u304f\u300d\u3002</li> <li>II\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\u4fee\u9970\u200b\u4f53\u8a00\u65f6\u200b\u9700\u8981\u200b\u52a0\u200b\u300c\u306a\u300d\uff0c\u200b\u4fee\u9970\u200b\u7528\u8a00\u65f6\u200b\u9700\u8981\u200b\u52a0\u200b\u300c\u306b\u300d\u3002</li> </ul>"},{"location":"japanese/japanese-1-grammar/#_4","title":"\u52a8\u8bcd","text":"<p>\u200b\u52a8\u8bcd\u200b\u53ef\u4ee5\u200b\u5206\u4e3a\u200bI\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u3001II\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u3001III\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u3002</p> <ol> <li>II\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u8bcd\u5c3e\u200b\u662f\u200b\u300c\u308b\u300d\uff0c\u300c\u308b\u300d\u200b\u524d\u200b\u7684\u200b\u5047\u540d\u200b\u662f\u200b\u300c\u3044\u300d\u200b\u6bb5\u200b\u6216\u200b\u300c\u3048\u300d\u200b\u6bb5\u200b\u3002</li> <li>III\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u8bcd\u5c3e\u200b\u662f\u200b\u300c\u3059\u308b\u300d\u200b\u6216\u200b\u300c\u304f\u308b\u300d\u3002\u300c\u3059\u308b\u300d\u200b\u7ed3\u5c3e\u200b\u7684\u200b\u52a8\u8bcd\u200b\u53c8\u200b\u79f0\u4e3a\u200b\u30b5\u200b\u53d8\u52a8\u200b\u8bcd\u200b\uff0c\u300c\u304f\u308b\u300d\u200b\u7ed3\u5c3e\u200b\u7684\u200b\u52a8\u8bcd\u200b\u53c8\u200b\u79f0\u4e3a\u200b\u30ab\u200b\u53d8\u52a8\u200b\u8bcd\u200b\u3002</li> <li>\u200b\u5269\u4e0b\u200b\u6240\u6709\u200b\u7684\u200b\u52a8\u8bcd\u200b\u5747\u200b\u4e3a\u200bI\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u3002I\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u7ed3\u5c3e\u200b\u662f\u200b\u300c\u3046\u300d\u200b\u6bb5\u200b\u5047\u540d\u200b\u3002</li> </ol> <p>\u200b\u52a8\u8bcd\u200b\u6709\u200b\u307e\u3059\u200b\u578b\u200b\u3001\u306a\u3044\u200b\u578b\u200b\u3001\u305f\u200b\u578b\u200b\u3001\u3066\u200b\u578b\u200b\u7b49\u200b\u4e0d\u540c\u200b\u7684\u200b\u53d8\u5f62\u200b\u3002</p> \u307e\u3059\u200b\u578b\u200b\u306a\u3044\u200b\u578b\u200b\u305f\u200b\u578b\u200b\u3066\u200b\u578b\u200b <p>\u200b\u52a8\u8bcd\u200b\u7684\u200b\u307e\u3059\u200b\u578b\u200b\u662f\u200b\u52a8\u8bcd\u200b\u7684\u200b\u656c\u4f53\u200b\u5f62\u5f0f\u200b\uff0c\u200b\u7528\u4e8e\u200b\u656c\u4f53\u200b\u53e5\u200b\u4e2d\u200b\u3002</p> <ol> <li>II\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u307e\u3059\u200b\u578b\u200b\u662f\u200b\u53bb\u6389\u200b\u8bcd\u5c3e\u200b\u300c\u308b\u300d\uff0c\u200b\u52a0\u4e0a\u200b\u300c\u307e\u3059\u300d\u3002</li> <li>\u200b\u4ee5\u200b\u300c\u3059\u308b\u300d\u200b\u7ed3\u5c3e\u200b\u7684\u200bIII\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u307e\u3059\u200b\u578b\u200b\u662f\u200b\u53bb\u6389\u200b\u8bcd\u5c3e\u200b\u300c\u3059\u308b\u300d\uff0c\u200b\u52a0\u4e0a\u200b\u300c\u3057\u307e\u3059\u300d\uff0c\u200b\u4ee5\u200b\u300c\u304f\u308b\u300d\u200b\u7ed3\u5c3e\u200b\u7684\u200bIII\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u307e\u3059\u200b\u578b\u200b\u662f\u200b\u53bb\u6389\u200b\u8bcd\u5c3e\u200b\u300c\u304f\u308b\u300d\uff0c\u200b\u52a0\u4e0a\u200b\u300c\u304d\u307e\u3059\u300d\u3002</li> <li>I\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u307e\u3059\u200b\u578b\u200b\u662f\u200b\u5c06\u200b\u7ed3\u5c3e\u200b\u7684\u200b\u300c\u3046\u300d\u200b\u6bb5\u200b\u5047\u540d\u200b\u53d8\u4e3a\u200b\u5bf9\u5e94\u200b\u7684\u200b\u300c\u3044\u300d\u200b\u6bb5\u200b\u5047\u540d\u200b\uff0c\u200b\u518d\u200b\u52a0\u4e0a\u200b\u300c\u307e\u3059\u300d\u3002</li> </ol> \u200b\u52a8\u8bcd\u200b \u200b\u5206\u7c7b\u200b \u307e\u3059\u200b\u578b\u200b \u3042\u308b I\u200b\u7c7b\u200b \u3042\u308a\u307e\u3059 \u3067\u304d\u308b II\u200b\u7c7b\u200b \u3067\u304d\u307e\u3059 \u3068\u308b I\u200b\u7c7b\u200b \u3068\u308a\u307e\u3059 \u308c\u3093\u3057\u3085\u3046\u3059\u308b III\u200b\u7c7b\u200b \u308c\u3093\u3057\u3085\u3046\u3057\u307e\u3059 \u3082\u3064 I\u200b\u7c7b\u200b \u3082\u3061\u307e\u3059 <p>\u200b\u52a8\u8bcd\u200b\u7684\u200b\u306a\u3044\u200b\u578b\u200b\u662f\u200b\u52a8\u8bcd\u200b\u7684\u200b\u5426\u5b9a\u200b\u5f62\u5f0f\u200b\uff0c\u200b\u7528\u4e8e\u200b\u7b80\u4f53\u200b\u5426\u5b9a\u53e5\u200b\u4e2d\u200b\u3002</p> <ol> <li>II\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u306a\u3044\u200b\u578b\u200b\u662f\u200b\u53bb\u6389\u200b\u8bcd\u5c3e\u200b\u300c\u308b\u300d\uff0c\u200b\u52a0\u4e0a\u200b\u300c\u306a\u3044\u300d\u3002</li> <li>\u200b\u4ee5\u200b\u300c\u3059\u308b\u300d\u200b\u7ed3\u5c3e\u200b\u7684\u200bIII\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u306a\u3044\u200b\u578b\u200b\u662f\u200b\u53bb\u6389\u200b\u8bcd\u5c3e\u200b\u300c\u3059\u308b\u300d\uff0c\u200b\u52a0\u4e0a\u200b\u300c\u3057\u306a\u3044\u300d\uff0c\u200b\u4ee5\u200b\u300c\u304f\u308b\u300d\u200b\u7ed3\u5c3e\u200b\u7684\u200bIII\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u306a\u3044\u200b\u578b\u200b\u662f\u200b\u53bb\u6389\u200b\u8bcd\u5c3e\u200b\u300c\u304f\u308b\u300d\uff0c\u200b\u52a0\u4e0a\u200b\u300c\u3053\u306a\u3044\u300d\u3002</li> <li>I\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u306a\u3044\u200b\u578b\u200b\u662f\u200b\u5c06\u200b\u7ed3\u5c3e\u200b\u7684\u200b\u300c\u3046\u300d\u200b\u6bb5\u200b\u5047\u540d\u200b\u53d8\u4e3a\u200b\u5bf9\u5e94\u200b\u7684\u200b\u300c\u3042\u300d\u200b\u6bb5\u200b\u5047\u540d\u200b\uff0c\u200b\u518d\u200b\u52a0\u4e0a\u200b\u300c\u306a\u3044\u300d\u3002</li> </ol> \u200b\u52a8\u8bcd\u200b \u200b\u5206\u7c7b\u200b \u306a\u3044\u200b\u578b\u200b \u3042\u308b I\u200b\u7c7b\u200b \u3042\u304b\u306a\u3044 \u3067\u304d\u308b II\u200b\u7c7b\u200b \u3067\u304d\u306a\u3044 \u3068\u308b I\u200b\u7c7b\u200b \u3068\u3089\u306a\u3044 \u308c\u3093\u3057\u3085\u3046\u3059\u308b III\u200b\u7c7b\u200b \u308c\u3093\u3057\u3085\u3046\u3057\u306a\u3044 \u3082\u3064 I\u200b\u7c7b\u200b \u3082\u305f\u306a\u3044 <p>\u200b\u52a8\u8bcd\u200b\u7684\u200b\u305f\u200b\u578b\u200b\u662f\u200b\u52a8\u8bcd\u200b\u7684\u200b\u8fc7\u53bb\u200b\u5f0f\u200b\uff0c\u200b\u7528\u4e8e\u200b\u7b80\u4f53\u200b\u8fc7\u53bb\u200b\u53e5\u200b\u4e2d\u200b\u3002</p> <ol> <li>II\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u305f\u200b\u578b\u200b\u662f\u200b\u53bb\u6389\u200b\u8bcd\u5c3e\u200b\u300c\u308b\u300d\uff0c\u200b\u52a0\u4e0a\u200b\u300c\u305f\u300d\u3002</li> <li>\u200b\u4ee5\u200b\u300c\u3059\u308b\u300d\u200b\u7ed3\u5c3e\u200b\u7684\u200bIII\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u305f\u200b\u578b\u200b\u662f\u200b\u53bb\u6389\u200b\u8bcd\u5c3e\u200b\u300c\u3059\u308b\u300d\uff0c\u200b\u52a0\u4e0a\u200b\u300c\u3057\u305f\u300d\uff0c\u200b\u4ee5\u200b\u300c\u304f\u308b\u300d\u200b\u7ed3\u5c3e\u200b\u7684\u200bIII\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u305f\u200b\u578b\u200b\u662f\u200b\u53bb\u6389\u200b\u8bcd\u5c3e\u200b\u300c\u304f\u308b\u300d\uff0c\u200b\u52a0\u4e0a\u200b\u300c\u304d\u305f\u300d\u3002</li> <li>I\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u305f\u200b\u578b\u200b\u9700\u8981\u200b\u8003\u8651\u200b\u8bcd\u5c3e\u200b\u7684\u200b\u300c\u3046\u300d\u200b\u6bb5\u200b\u5047\u540d\u200b\u3002<ul> <li>\u200b\u4ee5\u200b\u300c\u3046\u300d\u3001\u300c\u3064\u300d\u3001\u300c\u308b\u300d\u200b\u7ed3\u5c3e\u200b\u7684\u200bI\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u305f\u200b\u578b\u200b\u662f\u200b\u5c06\u200b\u7ed3\u5c3e\u200b\u7684\u200b\u5047\u540d\u200b\u53d8\u4e3a\u200b\u300c\u3063\u305f\u300d\u3002</li> <li>\u200b\u4ee5\u200b\u300c\u3080\u300d\u3001\u300c\u3076\u300d\u3001\u300c\u306c\u300d\u200b\u7ed3\u5c3e\u200b\u7684\u200bI\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u305f\u200b\u578b\u200b\u662f\u200b\u5c06\u200b\u7ed3\u5c3e\u200b\u7684\u200b\u5047\u540d\u200b\u53d8\u4e3a\u200b\u300c\u3093\u3060\u300d\u3002</li> <li>\u200b\u4ee5\u200b\u300c\u304f\u300d\u3001\u300c\u3050\u300d\u200b\u7ed3\u5c3e\u200b\u7684\u200bI\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u305f\u200b\u578b\u200b\u662f\u200b\u5c06\u200b\u7ed3\u5c3e\u200b\u7684\u200b\u5047\u540d\u200b\u53d8\u4e3a\u200b\u300c\u3044\u305f\u300d\u200b\u548c\u200b\u300c\u3044\u3060\u300d\u3002</li> <li>\u200b\u4ee5\u200b\u300c\u3059\u300d\u200b\u7ed3\u5c3e\u200b\u7684\u200bI\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u305f\u200b\u578b\u200b\u662f\u200b\u5c06\u200b\u7ed3\u5c3e\u200b\u7684\u200b\u5047\u540d\u200b\u53d8\u4e3a\u200b\u300c\u3057\u305f\u300d\u3002</li> </ul> </li> <li>\u200b\u7279\u4f8b\u200b\uff1a\u300c\u200b\u884c\u200b\u304f\u300d\u200b\u7684\u200b\u305f\u200b\u578b\u200b\u662f\u200b\u300c\u3044\u3063\u305f\u300d\u3002</li> </ol> \u200b\u52a8\u8bcd\u200b \u200b\u5206\u7c7b\u200b \u305f\u200b\u578b\u200b \u3042\u308b I\u200b\u7c7b\u200b \u3042\u3063\u305f \u3067\u304d\u308b II\u200b\u7c7b\u200b \u3067\u304d\u305f \u3068\u308b I\u200b\u7c7b\u200b \u3068\u3063\u305f \u308c\u3093\u3057\u3085\u3046\u3059\u308b III\u200b\u7c7b\u200b \u308c\u3093\u3057\u3085\u3046\u3057\u305f \u3082\u3064 I\u200b\u7c7b\u200b \u3082\u3063\u305f <p>\u200b\u52a8\u8bcd\u200b\u7684\u200b\u3066\u200b\u578b\u200b\u662f\u200b\u52a8\u8bcd\u200b\u7684\u200b\u8fde\u7528\u200b\u5f62\u5f0f\u200b\uff0c\u200b\u7528\u4e8e\u200b\u8fde\u63a5\u200b\u4e24\u4e2a\u200b\u5206\u53e5\u200b\u3002</p> <ol> <li>II\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u3066\u200b\u578b\u200b\u662f\u200b\u53bb\u6389\u200b\u8bcd\u5c3e\u200b\u300c\u308b\u300d\uff0c\u200b\u52a0\u4e0a\u200b\u300c\u3066\u300d\u3002</li> <li>\u200b\u4ee5\u200b\u300c\u3059\u308b\u300d\u200b\u7ed3\u5c3e\u200b\u7684\u200bIII\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u3066\u200b\u578b\u200b\u662f\u200b\u53bb\u6389\u200b\u8bcd\u5c3e\u200b\u300c\u3059\u308b\u300d\uff0c\u200b\u52a0\u4e0a\u200b\u300c\u3057\u3066\u300d\uff0c\u200b\u4ee5\u200b\u300c\u304f\u308b\u300d\u200b\u7ed3\u5c3e\u200b\u7684\u200bIII\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u3066\u200b\u578b\u200b\u662f\u200b\u53bb\u6389\u200b\u8bcd\u5c3e\u200b\u300c\u304f\u308b\u300d\uff0c\u200b\u52a0\u4e0a\u200b\u300c\u304d\u3066\u300d\u3002</li> <li>I\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u3066\u200b\u578b\u200b\u9700\u8981\u200b\u8003\u8651\u200b\u8bcd\u5c3e\u200b\u7684\u200b\u300c\u3046\u300d\u200b\u6bb5\u200b\u5047\u540d\u200b\u3002<ul> <li>\u200b\u4ee5\u200b\u300c\u3046\u300d\u3001\u300c\u3064\u300d\u3001\u300c\u308b\u300d\u200b\u7ed3\u5c3e\u200b\u7684\u200bI\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u3066\u200b\u578b\u200b\u662f\u200b\u5c06\u200b\u7ed3\u5c3e\u200b\u7684\u200b\u5047\u540d\u200b\u53d8\u4e3a\u200b\u300c\u3063\u3066\u300d\u3002</li> <li>\u200b\u4ee5\u200b\u300c\u3080\u300d\u3001\u300c\u3076\u300d\u3001\u300c\u306c\u300d\u200b\u7ed3\u5c3e\u200b\u7684\u200bI\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u3066\u200b\u578b\u200b\u662f\u200b\u5c06\u200b\u7ed3\u5c3e\u200b\u7684\u200b\u5047\u540d\u200b\u53d8\u4e3a\u200b\u300c\u3093\u3067\u300d\u3002</li> <li>\u200b\u4ee5\u200b\u300c\u304f\u300d\u3001\u300c\u3050\u300d\u200b\u7ed3\u5c3e\u200b\u7684\u200bI\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u3066\u200b\u578b\u200b\u662f\u200b\u5c06\u200b\u7ed3\u5c3e\u200b\u7684\u200b\u5047\u540d\u200b\u53d8\u4e3a\u200b\u300c\u3044\u3066\u300d\u200b\u548c\u200b\u300c\u3044\u3067\u300d\u3002</li> <li>\u200b\u4ee5\u200b\u300c\u3059\u300d\u200b\u7ed3\u5c3e\u200b\u7684\u200bI\u200b\u7c7b\u200b\u52a8\u8bcd\u200b\u7684\u200b\u3066\u200b\u578b\u200b\u662f\u200b\u5c06\u200b\u7ed3\u5c3e\u200b\u7684\u200b\u5047\u540d\u200b\u53d8\u4e3a\u200b\u300c\u3057\u3066\u300d\u3002</li> </ul> </li> </ol> \u200b\u52a8\u8bcd\u200b \u200b\u5206\u7c7b\u200b \u3066\u200b\u578b\u200b \u3042\u308b I\u200b\u7c7b\u200b \u3042\u3063\u3066 \u3067\u304d\u308b II\u200b\u7c7b\u200b \u3067\u304d\u3066 \u3068\u308b I\u200b\u7c7b\u200b \u3068\u3063\u3066 \u308c\u3093\u3057\u3085\u3046\u3059\u308b III\u200b\u7c7b\u200b \u308c\u3093\u3057\u3085\u3046\u3057\u3066 \u3082\u3064 I\u200b\u7c7b\u200b \u3082\u3063\u3066"},{"location":"japanese/japanese-1-grammar/#_5","title":"\u53e5\u6cd5","text":""},{"location":"japanese/japanese-1-grammar/#_6","title":"\u8bed\u53e5\u200b\u5206\u7c7b","text":"<p>\u200b\u65e5\u8bed\u200b\u4e2d\u200b\u7684\u200b\u8bed\u53e5\u200b\u53ef\u4ee5\u200b\u5206\u4e3a\u200b\u5b58\u5728\u200b\u53e5\u200b\uff08\u3042\u308a\u307e\u3059\u3001\u3044\u307e\u3059\uff09\u3001\u200b\u5224\u65ad\u53e5\u200b\uff08\u200b\u540d\u8bcd\u200b\uff09\u3001\u200b\u53d9\u8ff0\u200b\u53e5\u200b\uff08\u200b\u4e00\u822c\u200b\u52a8\u8bcd\u200b\uff09\u3001\u200b\u63cf\u5199\u200b\u53e5\u200b\uff08\u200b\u5f62\u5bb9\u8bcd\u200b\u3001\u200b\u5f62\u5bb9\u200b\u52a8\u8bcd\u200b\uff09\u3002\u200b\u5224\u65ad\u53e5\u200b\u548c\u200b\u63cf\u5199\u200b\u53e5\u200b\u7684\u200b\u656c\u4f53\u200b\u5f62\u5f0f\u200b\u662f\u200b\u300c\u301c\u3067\u3059\u300d\uff0c\u200b\u7b80\u4f53\u200b\u5f62\u5f0f\u200b\u662f\u200b\u300c\u301c\u3060\u300d\u3002\u200b\u53d9\u8ff0\u200b\u53e5\u200b\u548c\u200b\u5b58\u5728\u200b\u53e5\u200b\u7684\u200b\u656c\u4f53\u200b\u5f62\u5f0f\u200b\u662f\u200b\u300c\u301c\u307e\u3059\u300d\uff0c\u200b\u53c8\u79f0\u200b\u307e\u3059\u200b\u578b\u200b\u3002</p> <p>\u200b\u53e5\u5b50\u200b\u7531\u200b\u4e0d\u540c\u200b\u7684\u200b\u300c\u200b\u6587\u8282\u200b\u300d\u200b\u7ec4\u6210\u200b\uff0c\u200b\u6587\u8282\u200b\u662f\u200b\u65e5\u8bed\u200b\u8bed\u6cd5\u7ed3\u6784\u200b\u4e2d\u200b\u7684\u200b\u5355\u5143\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u6587\u8282\u200b\u90fd\u200b\u6709\u200b\u4e00\u4e2a\u200b\u300c\u200b\u6838\u5fc3\u200b\u8bcd\u200b\u300d\uff0c\u200b\u6838\u5fc3\u200b\u8bcd\u200b\u7684\u200b\u8bcd\u6027\u200b\u51b3\u5b9a\u200b\u4e86\u200b\u6587\u8282\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002\u200b\u6587\u8282\u200b\u4e2d\u200b\u7684\u200b\u9644\u5c5e\u200b\u8bcd\u200b\uff08\u200b\u52a9\u8bcd\u200b\uff09\u200b\u7528\u4e8e\u200b\u4fee\u9970\u200b\u6838\u5fc3\u200b\u8bcd\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u52a9\u8bcd\u200b\u53ea\u80fd\u200b\u7528\u4e8e\u200b\u4fee\u9970\u200b\u540d\u8bcd\u200b\u3002</p>"},{"location":"japanese/japanese-1-grammar/#_7","title":"\u683c\u200b\u52a9\u8bcd","text":"<p>\u200b\u683c\u200b\u52a9\u8bcd\u200b\u7528\u4e8e\u200b\u540d\u8bcd\u200b\u540e\u200b\uff0c\u200b\u8868\u793a\u200b\u540d\u8bcd\u200b\u5728\u200b\u53e5\u5b50\u200b\u4e2d\u200b\u7684\u200b\u8bed\u6cd5\u200b\u6210\u5206\u200b\u3002</p> \u304c\u306e\u306b\u3067\u3092\u304b\u3089\u3078\u3088\u308a\u307b\u3069 <p>\u200b\u52a9\u8bcd\u200b\u300c\u304c\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u4e3b\u8bed\u200b\uff0c\u200b\u5176\u524d\u200b\u7684\u200b\u540d\u8bcd\u200b\u8868\u793a\u200b\u52a8\u4f5c\u200b\u7684\u200b\u6267\u884c\u8005\u200b\uff0c\u200b\u6216\u8005\u200b\u63cf\u5199\u200b\u3001\u200b\u5224\u65ad\u200b\u6216\u200b\u5b58\u5728\u200b\u7684\u200b\u5bf9\u8c61\u200b\u3002</p> <p>\u300c\u200b\u79c1\u200b\u304c\u200b\u884c\u200b\u304d\u307e\u3059\u3002\u300d\uff1a\u200b\u6211\u200b\u53bb\u200b\u3002\uff08\u200b\u53d9\u8ff0\u200b\u53e5\u200b\uff09 \u300c\u200b\u79c1\u200b\u304c\u200b\u5b66\u751f\u200b\u3067\u3059\u3002\u300d\uff1a\u200b\u6211\u200b\u662f\u200b\u5b66\u751f\u200b\u3002\uff08\u200b\u5224\u65ad\u53e5\u200b\uff09 \u300c\u200b\u79c1\u200b\u304c\u3044\u307e\u3059\u3002\u300d\uff1a\u200b\u6211\u200b\u5728\u200b\u3002\uff08\u200b\u5b58\u5728\u200b\u53e5\u200b\uff09</p> <p>\u200b\u52a9\u8bcd\u200b\u300c\u306e\u300d\u200b\u4f5c\u4e3a\u200b\u683c\u200b\u52a9\u8bcd\u200b\u65f6\u200b\u8868\u793a\u200b\u6240\u6709\u200b\u5173\u7cfb\u200b\uff0c\u200b\u5176\u524d\u200b\u7684\u200b\u540d\u8bcd\u200b\u8868\u793a\u200b\u88ab\u200b\u4fee\u9970\u200b\u7684\u200b\u5bf9\u8c61\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b\uff0c\u300c\u306e\u300d\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u540c\u4f4d\u8bed\u200b\uff0c\u200b\u56e0\u6b64\u200b\u300c\u306e\u300d\u200b\u7684\u200b\u5b9e\u9645\u200b\u542b\u4e49\u200b\u9700\u8981\u200b\u6839\u636e\u200b\u4e0a\u4e0b\u6587\u200b\u6765\u200b\u786e\u5b9a\u200b\u3002</p> <p>\u300c\u30de\u30a4\u30b1\u30eb\u3055\u3093\u306e\u200b\u5f8c\u200b\u8f29\u200b\u306e\u200b\u571f\u5c4b\u200b\u3068\u200b\u7533\u200b\u3057\u307e\u3059\u3002\u300d\uff1a\u200b\u6211\u200b\u662f\u200b\u8fc8\u514b\u5c14\u200b\u7684\u200b\u540e\u8f88\u200b\u571f\u5c4b\u200b\u3002</p> <p>\u200b\u53e5\u200b\u4e2d\u200b\u7684\u200b\u300c\u30de\u30a4\u30b1\u30eb\u3055\u3093\u306e\u200b\u5f8c\u200b\u8f29\u200b\u300d\u200b\u8868\u793a\u200b\u8fc8\u514b\u5c14\u200b\u7684\u200b\u540e\u8f88\u200b\uff0c\u200b\u662f\u200b\u6240\u6709\u200b\u5173\u7cfb\u200b\uff0c\u300c\u200b\u5f8c\u200b\u8f29\u200b\u306e\u200b\u571f\u5c4b\u200b\u300d\u200b\u8868\u793a\u200b\u571f\u5c4b\u200b\u662f\u200b\u8fc8\u514b\u5c14\u200b\u7684\u200b\u540e\u8f88\u200b\uff0c\u200b\u662f\u200b\u540c\u4f4d\u8bed\u200b\u5173\u7cfb\u200b\u3002</p> <p>\u200b\u683c\u200b\u52a9\u8bcd\u200b\u300c\u306b\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b</p> <ol> <li> <p>\u200b\u52a8\u4f5c\u200b\u53e5\u200b\u4e2d\u200b\uff0c\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u52a8\u4f5c\u200b\u7684\u200b\u6267\u884c\u200b\u65f6\u95f4\u200b\u3001\u200b\u5730\u70b9\u200b\u3001\u200b\u5bf9\u8c61\u200b\u7b49\u200b\u3002\u200b\u52a8\u8bcd\u200b\u9700\u8981\u200b\u662f\u200b\u79fb\u52a8\u200b\u52a8\u8bcd\u200b\u3002</p> <p>\u300c7\u200b\u6642\u200b\u306b\u200b\u56f3\u200b\u66f8\u9928\u200b\u306b\u200b\u884c\u200b\u304d\u307e\u3059\u3002\u300d\uff1a7\u200b\u70b9\u53bb\u200b\u56fe\u4e66\u9986\u200b\u3002</p> </li> <li> <p>\u200b\u5b58\u5728\u200b\u53e5\u200b\u4e2d\u200b\uff0c\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u5b58\u5728\u200b\u7684\u200b\u5730\u70b9\u200b\u3002</p> <p>\u300c\u200b\u56f3\u200b\u66f8\u9928\u200b\u306b\u200b\u672c\u200b\u304c\u3042\u308a\u307e\u3059\u3002\u300d\uff1a\u200b\u56fe\u4e66\u9986\u200b\u91cc\u200b\u6709\u200b\u4e66\u200b\u3002 \u300c\u200b\u79c1\u200b\u306b\u306f\u200b\u59c9\u200b\u304c\u200b\u4e00\u4eba\u200b\u3044\u307e\u3059\u3002\u300d\uff1a\u200b\u6211\u200b\u6709\u200b\u4e00\u4e2a\u200b\u59d0\u59d0\u200b\u3002</p> </li> </ol> <p>\u200b\u683c\u200b\u52a9\u8bcd\u200b\u300c\u3067\u300d\u200b\u7528\u4e8e\u200b</p> <ol> <li> <p>\u200b\u63a5\u200b\u540d\u8bcd\u200b\u65f6\u200b\uff0c\u200b\u8868\u793a\u200b\u52a8\u4f5c\u200b\u7684\u200b\u6267\u884c\u200b\u624b\u6bb5\u200b\u6216\u200b\u65b9\u6cd5\u200b\u3002</p> <p>\u300c\u200b\u96fb\u8eca\u200b\u3067\u200b\u884c\u200b\u304d\u307e\u3059\u3002\u300d\uff1a\u200b\u5750\u200b\u7535\u8f66\u200b\u53bb\u200b\u3002</p> </li> <li> <p>\u200b\u63a5\u200b\u5730\u70b9\u200b\u65f6\u200b\uff0c\u200b\u8868\u793a\u200b\u52a8\u4f5c\u200b\u7684\u200b\u53d1\u751f\u200b\u5730\u70b9\u200b\u3002</p> <p>\u300c\u200b\u56f3\u200b\u66f8\u9928\u200b\u3067\u200b\u52c9\u5f37\u200b\u3057\u307e\u3059\u3002\u300d\uff1a\u200b\u5728\u200b\u56fe\u4e66\u9986\u200b\u5b66\u4e60\u200b\u3002</p> </li> </ol> <p>\u200b\u683c\u200b\u52a9\u8bcd\u200b\u300c\u3092\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u52a8\u4f5c\u200b\u7684\u200b\u5bf9\u8c61\u200b\uff08\u200b\u4ed6\u200b\u52a8\u8bcd\u200b\uff09\u200b\u6216\u200b\u4f7f\u5f79\u200b\u6001\u200b\uff08\u200b\u81ea\u52a8\u8bcd\u200b\uff09\u3002</p> <p>\u300c\u200b\u672c\u200b\u3092\u200b\u8aad\u200b\u307f\u307e\u3059\u3002\u300d\uff1a\u200b\u770b\u4e66\u200b\u3002</p> <p>\u200b\u683c\u200b\u52a9\u8bcd\u200b\u300c\u304b\u3089\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u52a8\u4f5c\u200b\u7684\u200b\u8d77\u70b9\u200b\u3002</p> <p>\u300c\u200b\u56f3\u200b\u66f8\u9928\u200b\u304b\u3089\u200b\u51fa\u200b\u767a\u200b\u3057\u307e\u3059\u3002\u300d\uff1a\u200b\u4ece\u200b\u56fe\u4e66\u9986\u200b\u51fa\u53d1\u200b\u3002</p> <p>\u200b\u683c\u200b\u52a9\u8bcd\u200b\u300c\u3078\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u52a8\u4f5c\u200b\uff08\u200b\u79fb\u52a8\u200b\u52a8\u8bcd\u200b\uff09\u200b\u7684\u200b\u7ec8\u70b9\u200b\u3002\uff08\u200b\u53ef\u4ee5\u200b\u4e0e\u200b\u300c\u306b\u300d\u200b\u4e92\u6362\u200b\uff09</p> <p>\u300c\u200b\u56f3\u200b\u66f8\u9928\u200b\u3078\u200b\u884c\u200b\u304d\u307e\u3059\u3002\u300d\uff1a\u200b\u53bb\u200b\u56fe\u4e66\u9986\u200b\u3002</p> <p>\u200b\u683c\u200b\u52a9\u8bcd\u200b\u300c\u3088\u308a\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u6bd4\u8f83\u200b\u7684\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5176\u524d\u200b\u7684\u200b\u540d\u8bcd\u200b\u7684\u200b\u7a0b\u5ea6\u200b\u6bd4\u200b\u4e3b\u8bed\u200b\u7684\u200b\u7a0b\u5ea6\u200b\u5f31\u200b\u3002</p> <p>\u300c\u200b\u6e05\u83ef\u200b\u5927\u5b66\u200b\u306f\u200b\u5317\u4eac\u5927\u5b66\u200b\u3088\u308a\u200b\u6709\u540d\u200b\u3067\u3059\u3002\u300d\uff1a\u200b\u6e05\u534e\u5927\u5b66\u200b\u6bd4\u200b\u5317\u4eac\u5927\u5b66\u200b\u6709\u540d\u200b\u3002</p> <p>\u200b\u5728\u200b\u63cf\u8ff0\u200b\u53e5\u200b\u4e2d\u683c\u200b\u52a9\u8bcd\u200b\u300c\u307b\u3069\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u7a0b\u5ea6\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5426\u5b9a\u53e5\u200b\u4e2d\u200b\u8868\u793a\u200b\u5176\u524d\u200b\u7684\u200b\u540d\u8bcd\u200b\u7684\u200b\u7a0b\u5ea6\u200b\u6bd4\u200b\u4e3b\u8bed\u200b\u7684\u200b\u7a0b\u5ea6\u200b\u5f3a\u200b\u3002</p> <p>\u300c\u200b\u5317\u4eac\u5927\u5b66\u200b\u306f\u200b\u6e05\u83ef\u200b\u5927\u5b66\u200b\u307b\u3069\u200b\u6709\u540d\u200b\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u300d\uff1a\u200b\u5317\u4eac\u5927\u5b66\u200b\u6ca1\u6709\u200b\u6e05\u534e\u5927\u5b66\u200b\u6709\u540d\u200b\u3002</p>"},{"location":"japanese/japanese-1-grammar/#_8","title":"\u526f\u200b\u52a9\u8bcd","text":"<p>\u200b\u526f\u200b\u52a9\u8bcd\u200b\u7528\u4e8e\u200b\u4fee\u9970\u8bed\u200b\u6cd5\u200b\u6210\u5206\u200b\uff0c\u200b\u4efb\u4f55\u200b\u4e0d\u662f\u200b\u683c\u200b\u52a9\u8bcd\u200b\u3001\u200b\u63a5\u7eed\u200b\u52a9\u8bcd\u200b\u3001\u200b\u7ec8\u200b\u52a9\u8bcd\u200b\u7684\u200b\u52a9\u8bcd\u200b\u90fd\u200b\u662f\u200b\u526f\u200b\u52a9\u8bcd\u200b\u3002</p> \u306f\u307e\u3067\u3082\u306e\u307f\u3060\u3051\u3068\u304b\u304f\u3089\u3044\u304b <p>\u200b\u526f\u200b\u52a9\u8bcd\u200b\u300c\u306f\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u53e5\u5b50\u200b\u7684\u200b\u4e3b\u9898\u200b\uff0c\u200b\u8054\u7ed3\u200b\u524d\u200b\u4e00\u4e2a\u200b\u53e5\u5b50\u200b\u3002\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u5c06\u200b\u5176\u4ed6\u200b\u7684\u200b\u683c\u200b\u52a9\u8bcd\u200b\u4fee\u9970\u200b\u7684\u200b\u8bed\u6cd5\u200b\u6210\u5206\u200b\u4f5c\u4e3a\u200b\u4e3b\u9898\u200b\u3002\u300c\u306f\u300d\u200b\u6240\u200b\u4fee\u9970\u200b\u7684\u200b\u4e3b\u9898\u200b\u901a\u5e38\u200b\u5728\u200b\u53e5\u5b50\u200b\u7684\u200b\u5f00\u5934\u200b\u3002</p> <ul> <li> <p>\u200b\u5c06\u200b\u4e3b\u8bed\u200b\u4f5c\u4e3a\u200b\u4e3b\u9898\u200b\uff1a\u300c\u304c\u300d\u200b\u53d8\u4e3a\u200b\u300c\u306f\u300d</p> <p>\u300c\u200b\u79c1\u200b\u306f\u200b\u5b66\u751f\u200b\u3067\u3059\u3002\u300d\uff1a\u200b\u6211\u200b\u662f\u200b\u5b66\u751f\u200b\u3002</p> </li> <li> <p>\u200b\u5c06\u200b\u5730\u70b9\u200b\u4f5c\u4e3a\u200b\u4e3b\u9898\u200b\uff1a\u300c\u306b\u300d\u200b\u540e\u52a0\u200b\u300c\u306f\u300d</p> <p>\u300c\u200b\u56f3\u200b\u66f8\u9928\u200b\u306e\u200b\u8fd1\u200b\u304f\u306b\u306f\u30b3\u30f3\u30d3\u30cb\u304c\u3042\u308a\u307e\u3059\u3002\u300d\uff1a\u200b\u56fe\u4e66\u9986\u200b\u9644\u8fd1\u200b\u6709\u200b\u4fbf\u5229\u5e97\u200b\u3002</p> </li> </ul> <p>\u200b\u6ce8\u610f\u200b\uff0c\u200b\u7591\u95ee\u8bcd\u200b\u4e0d\u80fd\u200b\u4f5c\u4e3a\u200b\u4e3b\u9898\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4e0d\u80fd\u200b\u7528\u200b\u300c\u306f\u300d\u200b\u4fee\u9970\u200b\u7591\u95ee\u8bcd\u200b\uff0c\u200b\u53ea\u80fd\u200b\u7528\u200b\u300c\u304c\u300d\u3002</p> <p>\u200b\u526f\u200b\u52a9\u8bcd\u200b\u300c\u307e\u3067\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u65f6\u95f4\u200b\u3001\u200b\u5730\u70b9\u200b\u3001\u200b\u8303\u56f4\u200b\u7b49\u200b\u7684\u200b\u7ec8\u70b9\u200b\uff0c\u200b\u8868\u793a\u200b\u201c\u200b\u76f4\u5230\u200b\u201d\u3001\u201c\u200b\u5230\u200b\u2026\u2026\u200b\u4e3a\u6b62\u200b\u201d\u3002\u200b\u53ef\u4ee5\u200b\u548c\u200b\u300c\u304b\u3089\u300d\u200b\u4e00\u8d77\u200b\u7528\u200b\uff0c\u200b\u8868\u793a\u200b\u201c\u200b\u4ece\u200b\u2026\u2026\u200b\u5230\u200b\u2026\u2026\u201d\u3002</p> <p>\u300c\u3055\u3063\u304d\u307e\u3067\u200b\u56f3\u200b\u66f8\u9928\u200b\u306b\u3044\u307e\u3057\u305f\u3002\u300d\uff1a\u200b\u521a\u624d\u200b\u4e00\u76f4\u200b\u5728\u200b\u56fe\u4e66\u9986\u200b\u3002\uff08\u200b\u65f6\u95f4\u200b\uff09 \u300c\u200b\u56f3\u200b\u66f8\u9928\u200b\u307e\u3067\u200b\u884c\u200b\u304d\u307e\u3057\u3087\u3046\u3002\u300d\uff1a\u200b\u53bb\u200b\u56fe\u4e66\u9986\u200b\u5427\u200b\u3002\uff08\u200b\u5730\u70b9\u200b\uff09</p> <p>\u200b\u526f\u200b\u52a9\u8bcd\u200b\u300c\u3082\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u201c\u200b\u4e5f\u200b\u201d\uff0c\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u4e0e\u200b\u524d\u9762\u200b\u7684\u200b\u5185\u5bb9\u200b\u76f8\u540c\u200b\u7684\u200b\u4e8b\u7269\u200b\u3002</p> <p>\u300c\u200b\u79c1\u200b\u3082\u200b\u5b66\u751f\u200b\u3067\u3059\u3002\u300d\uff1a\u200b\u6211\u200b\u4e5f\u200b\u662f\u200b\u5b66\u751f\u200b\u3002 \u300c\u200b\u56f3\u200b\u66f8\u9928\u200b\u8fd1\u200b\u304f\u306b\u3082\u200b\u7dcf\u200b\u5408\u200b\u68df\u200b\u304c\u3042\u308a\u307e\u3059\u3002\u300d\uff1a\u200b\u56fe\u4e66\u9986\u200b\u9644\u8fd1\u200b\u4e5f\u200b\u6709\u200b\u7efc\u5408\u697c\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b\u300c\u304c\u300d\u3001\u300c\u306f\u300d\u3001\u300c\u3082\u300d\u200b\u4e0d\u80fd\u200b\u540c\u65f6\u200b\u7528\u4e8e\u200b\u540c\u4e00\u4e2a\u200b\u4e3b\u8bed\u200b\u3002</p> <p>\u200b\u526f\u200b\u52a9\u8bcd\u200b\u300c\u306e\u307f\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u201c\u200b\u53ea\u6709\u200b\u201d\uff0c\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u4e0e\u200b\u524d\u9762\u200b\u7684\u200b\u5185\u5bb9\u200b\u4e0d\u540c\u200b\u7684\u200b\u4e8b\u7269\u200b\u3002</p> <p>\u300c\u304a\u200b\u4f1a\u8a08\u200b\u306f\u200b\u73fe\u91d1\u200b\u306e\u307f\u3067\u3059\u3002\u300d\uff1a\u200b\u53ea\u6536\u200b\u73b0\u91d1\u200b\u3002</p> <p>\u200b\u526f\u200b\u52a9\u8bcd\u200b\u300c\u3060\u3051\u300d\u200b\u7684\u200b\u542b\u4e49\u200b\u540c\u200b\u300c\u306e\u307f\u300d\uff0c\u200b\u4f46\u662f\u200b\u300c\u3060\u3051\u300d\u200b\u7684\u200b\u8bed\u6c14\u200b\u66f4\u52a0\u200b\u53e3\u8bed\u200b\u3002</p> <p>\u300c\u304a\u200b\u4f1a\u8a08\u200b\u306f\u200b\u73fe\u91d1\u200b\u3060\u3051\u3067\u3059\u3002\u300d\uff1a\u200b\u53ea\u6536\u200b\u73b0\u91d1\u200b\u3002</p> <p>\u200b\u526f\u200b\u52a9\u8bcd\u200b\u300c\u3068\u304b\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u201c\u200b\u4f8b\u5982\u200b\u201d\uff0c\u200b\u7528\u4e8e\u200b\u5217\u4e3e\u200b\u4e8b\u7269\u200b\u3002</p> <p>\u300c\u200b\u79c1\u200b\u306f\u200b\u65e5\u672c\u200b\u8a9e\u200b\u3068\u304b\u200b\u82f1\u8a9e\u200b\u3068\u304b\u200b\u4e2d\u56fd\u200b\u8a9e\u200b\u3068\u304b\u200b\u8a71\u200b\u305b\u307e\u3059\u3002\u300d\uff1a\u200b\u6211\u4f1a\u200b\u8bf4\u200b\u65e5\u8bed\u200b\u3001\u200b\u82f1\u8bed\u200b\u3001\u200b\u6c49\u8bed\u200b\u7b49\u200b\u3002</p> <p>\u200b\u526f\u200b\u52a9\u8bcd\u200b\u300c\u304f\u3089\u3044\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u201c\u200b\u5927\u7ea6\u200b\u201d\u3001\u201c\u200b\u5de6\u53f3\u200b\u201d\uff0c\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u6570\u91cf\u200b\u3002\u200b\u524d\u9762\u200b\u7684\u200b\u540d\u8bcd\u200b\u4ee5\u200b\u62e8\u97f3\u200b\u7ed3\u5c3e\u200b\u65f6\u200b\uff0c\u300c\u304f\u3089\u3044\u300d\u200b\u53d8\u4e3a\u200b\u300c\u3050\u3089\u3044\u300d\u3002</p> <p>\u300c\u200b\u5168\u90e8\u200b\u3067100\u200b\u5186\u200b\u304f\u3089\u3044\u3067\u3059\u3002\u300d\uff1a\u200b\u4e00\u5171\u200b\u5927\u7ea6\u200b100\u200b\u65e5\u5143\u200b\u3002</p> <p>\u200b\u526f\u200b\u52a9\u8bcd\u200b\u300c\u304b\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u4e0d\u200b\u786e\u5b9a\u200b\u7684\u200b\u4e8b\u7269\u200b\u3002</p> <p>\u300c\u3044\u3064\u304b\u200b\u56f3\u200b\u66f8\u9928\u200b\u306b\u200b\u884c\u200b\u304d\u307e\u3057\u3087\u3046\u3002\u300d\uff1a\u200b\u4ec0\u4e48\u200b\u65f6\u5019\u200b\u53bb\u200b\u56fe\u4e66\u9986\u200b\u5427\u200b\u3002</p>"},{"location":"japanese/japanese-1-grammar/#_9","title":"\u63a5\u7eed\u200b\u52a9\u8bcd","text":"<p>\u200b\u63a5\u7eed\u200b\u52a9\u8bcd\u200b\u7528\u4e8e\u200b\u8fde\u63a5\u200b\u4e24\u4e2a\u200b\u5206\u53e5\u200b\uff0c\u200b\u63a5\u200b\u5728\u200b\u7b2c\u4e00\u4e2a\u200b\u5206\u53e5\u200b\u7684\u200b\u7ed3\u5c3e\u200b\uff0c\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u4e24\u4e2a\u200b\u5206\u53e5\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5173\u7cfb\u200b\u3002</p> \u304c\u3051\u3069\u304b\u3089\u3068\u3082\u306e\u3067 <p>\u300c\u304c\u300d\u200b\u5728\u200b\u5206\u53e5\u200b\u7684\u200b\u7ed3\u5c3e\u200b\u65f6\u200b\uff0c\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u8f7b\u5fae\u200b\u7684\u200b\u8f6c\u6298\u200b\u8bed\u6c14\u200b\u3002\u200b\u524d\u200b\u4e00\u4e2a\u200b\u5206\u53e5\u200b\u8868\u793a\u200b\u201c\u200b\u867d\u7136\u200b\u2026\u2026\u201d\uff0c\u200b\u540e\u200b\u4e00\u4e2a\u200b\u5206\u53e5\u200b\u8868\u793a\u200b\u201c\u200b\u4f46\u662f\u200b\u2026\u2026\u201d\u3002</p> <p>\u300c\u200b\u79c1\u200b\u3067\u3059\u304c\u3001\u200b\u4f55\u200b\u3067\u3059\u304b\u3002\u300d\uff1a\u200b\u6211\u200b\u662f\u200b\uff0c\u200b\u6709\u200b\u4ec0\u4e48\u200b\u4e8b\u200b\u5417\u200b\uff1f</p> <p>\u300c\u3051\u3069\u300d\u200b\u5728\u200b\u5206\u53e5\u200b\u7684\u200b\u7ed3\u5c3e\u200b\u65f6\u200b\uff0c\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u8f6c\u6298\u200b\u8bed\u6c14\u200b\u3002\u200b\u524d\u200b\u4e00\u4e2a\u200b\u5206\u53e5\u200b\u8868\u793a\u200b\u201c\u200b\u867d\u7136\u200b\u2026\u2026\u201d\uff0c\u200b\u540e\u200b\u4e00\u4e2a\u200b\u5206\u53e5\u200b\u8868\u793a\u200b\u201c\u200b\u4f46\u662f\u200b\u2026\u2026\u201d\u3002\u300c\u3051\u3069\u300d\u200b\u7684\u200b\u8bed\u6c14\u200b\u6bd4\u200b\u300c\u304c\u300d\u200b\u66f4\u52a0\u200b\u53e3\u8bed\u200b\uff0c\u200b\u662f\u200b\u300c\u3051\u308c\u3069\u3082\u300d\u200b\u7684\u200b\u7f29\u5199\u200b\u3002\u200b\u9664\u4e86\u200b\u300c\u3051\u3069\u300d\uff0c\u300c\u3051\u308c\u3069\u3082\u300d\u200b\u8fd8\u6709\u200b\u300c\u3051\u308c\u3069\u300d\u3001\u300c\u3051\u3069\u3082\u300d\u200b\u7b49\u200b\u7f29\u5199\u200b\u5f62\u5f0f\u200b\u3002</p> <p>\u300c\u305d\u3046\u306a\u3093\u3067\u3059\u3051\u3069\u3001\u3084\u306f\u308a\u200b\u5927\u200b\u5909\u200b\u3067\u3059\u3002\u300d\uff1a\u200b\u867d\u7136\u200b\u662f\u200b\u8fd9\u6837\u200b\uff0c\u200b\u4f46\u662f\u200b\u8fd8\u662f\u200b\u5f88\u200b\u8f9b\u82e6\u200b\u3002</p> <p>\u300c\u304b\u3089\u300d\u200b\u5728\u200b\u5206\u53e5\u200b\u7684\u200b\u7ed3\u5c3e\u200b\u65f6\u200b\uff0c\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u56e0\u679c\u5173\u7cfb\u200b\u3002\u200b\u524d\u200b\u4e00\u4e2a\u200b\u5206\u53e5\u200b\u8868\u793a\u200b\u201c\u200b\u56e0\u4e3a\u200b\u2026\u2026\u201d\uff0c\u200b\u540e\u200b\u4e00\u4e2a\u200b\u5206\u53e5\u200b\u8868\u793a\u200b\u201c\u200b\u6240\u4ee5\u200b\u2026\u2026\u201d\u3002\u200b\u5728\u200b\u8868\u793a\u200b\u56e0\u679c\u5173\u7cfb\u200b\u65f6\u200b\uff0c\u300c\u304b\u3089\u300d\u200b\u524d\u200b\u5fc5\u987b\u200b\u662f\u200b\u4e00\u4e2a\u200b\u53e5\u5b50\u200b\u3002\u300c\u304b\u3089\u300d\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4e0d\u200b\u52a0\u200b\u540e\u8fb9\u200b\u7684\u200b\u5206\u53e5\u200b\uff0c\u200b\u7528\u4e8e\u200b\u9648\u8ff0\u200b\u539f\u56e0\u200b\u3002</p> <p>\u300c\u200b\u4eca\u65e5\u200b\u306f\u200b\u6691\u200b\u3044\u304b\u3089\u3001\u200b\u6dbc\u200b\u3057\u3044\u200b\u6240\u200b\u306b\u200b\u884c\u200b\u304d\u307e\u3057\u3087\u3046\u3002\u300d\uff1a\u200b\u56e0\u4e3a\u200b\u4eca\u5929\u200b\u5f88\u200b\u70ed\u200b\uff0c\u200b\u6240\u4ee5\u200b\u53bb\u200b\u51c9\u5feb\u200b\u7684\u200b\u5730\u65b9\u200b\u5427\u200b\u3002</p> <p>\u300c\u3068\u3082\u300d\u200b\u8868\u793a\u200b\u603b\u6570\u200b\uff0c\u200b\u76f8\u5f53\u4e8e\u200b\u6c49\u8bed\u200b\u4e2d\u200b\u7684\u200b\u201c\u200b\u5171\u200b\u201d\u3001\u201c\u200b\u90fd\u200b\u201d\u3002</p> <p>\u300c\u304a\u200b\u4e8c\u4eba\u200b\u3068\u3082\u30db\u30c3\u30c8\u30b3\u30fc\u30d2\u30fc\u3067\u3088\u308d\u3057\u3044\u3067\u3059\u304b\u3002\u300d\uff1a\u200b\u4e24\u4f4d\u200b\u90fd\u200b\u8981\u200b\u559d\u200b\u70ed\u5496\u5561\u200b\u5417\u200b\uff1f</p> <p>\u300c\u306e\u3067\u300d\u200b\u5728\u200b\u5206\u53e5\u200b\u7684\u200b\u7ed3\u5c3e\u200b\u65f6\u200b\uff0c\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u56e0\u679c\u5173\u7cfb\u200b\u3002\u200b\u524d\u200b\u4e00\u4e2a\u200b\u5206\u53e5\u200b\u8868\u793a\u200b\u201c\u200b\u56e0\u4e3a\u200b\u2026\u2026\u201d\uff0c\u200b\u540e\u200b\u4e00\u4e2a\u200b\u5206\u53e5\u200b\u8868\u793a\u200b\u201c\u200b\u6240\u4ee5\u200b\u2026\u2026\u201d\u3002\u200b\u5728\u200b\u8868\u793a\u200b\u56e0\u679c\u5173\u7cfb\u200b\u65f6\u200b\uff0c\u300c\u306e\u3067\u300d\u200b\u524d\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7b80\u4f53\u200b\u53e5\u200b\u3002\u200b\u5982\u679c\u200b\u300c\u306e\u3067\u300d\u200b\u524d\u200b\u662f\u200b\u4e00\u4e2a\u200b\u540d\u8bcd\u200b\u6216\u200bII\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\uff0c\u200b\u9700\u8981\u200b\u5c06\u200b\u7b80\u4f53\u200b\u53e5\u200b\u7684\u200b\u300c\u3060\u300d\u200b\u53d8\u4e3a\u200b\u300c\u306a\u300d\u3002</p> <p>\u300c\u200b\u4eca\u65e5\u200b\u306f\u200b\u6691\u200b\u3044\u306e\u3067\u3001\u200b\u6dbc\u200b\u3057\u3044\u200b\u6240\u200b\u306b\u200b\u884c\u200b\u304d\u307e\u3057\u3087\u3046\u3002\u300d\uff1a\u200b\u56e0\u4e3a\u200b\u4eca\u5929\u200b\u5f88\u200b\u70ed\u200b\uff0c\u200b\u6240\u4ee5\u200b\u53bb\u200b\u51c9\u5feb\u200b\u7684\u200b\u5730\u65b9\u200b\u5427\u200b\u3002</p>"},{"location":"japanese/japanese-1-grammar/#_10","title":"\u7ec8\u200b\u52a9\u8bcd","text":"<p>\u200b\u65e5\u8bed\u200b\u4e2d\u200b\u7684\u200b\u7ec8\u200b\u52a9\u8bcd\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u53e5\u5b50\u200b\u7684\u200b\u8bed\u6c14\u200b\u53d8\u5316\u200b\u3002</p> \u304b\u306d\u3088\u3088\u306d <p>\u300c\u304b\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u7591\u95ee\u200b\u7684\u200b\u8bed\u6c14\u200b\u3002\u200b\u5728\u200b\u53e5\u5b50\u200b\u7684\u200b\u7ed3\u5c3e\u200b\uff0c\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u7591\u95ee\u53e5\u200b\u3002</p> <p>\u300c\u200b\u4eca\u65e5\u200b\u306f\u200b\u6691\u200b\u3044\u3067\u3059\u304b\u3002\u300d\uff1a\u200b\u4eca\u5929\u200b\u5f88\u200b\u70ed\u200b\u5417\u200b\uff1f</p> <p>\u300c\u306d\u300d\u200b\u53ef\u4ee5\u200b\u8868\u8fbe\u200b\u786e\u8ba4\u200b\u6216\u200b\u611f\u53f9\u200b\u7684\u200b\u8bed\u6c14\u200b\u3002\u200b\u5f53\u200b\u300c\u306d\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u786e\u8ba4\u200b\u7684\u200b\u8bed\u6c14\u200b\u65f6\u200b\uff0c\u200b\u9700\u8981\u200b\u8bfb\u200b\u5347\u8c03\u200b\uff1b\u200b\u5f53\u200b\u300c\u306d\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u611f\u53f9\u200b\u7684\u200b\u8bed\u6c14\u200b\u65f6\u200b\uff0c\u200b\u9700\u8981\u200b\u8bfb\u200b\u964d\u8c03\u200b\u3002</p> <p>\u300c\u200b\u4eca\u65e5\u200b\u306f\u200b\u571f\u66dc\u65e5\u200b\u3067\u3059\u306d\u3002\u300d\u200b\u4eca\u5929\u200b\u662f\u200b\u661f\u671f\u516d\u200b\u5427\u200b\uff1f\uff08\u200b\u786e\u8ba4\u200b\uff09 \u300c\u200b\u4eca\u65e5\u200b\u306f\u200b\u6691\u200b\u3044\u3067\u3059\u306d\u3002\u300d\uff1a\u200b\u4eca\u5929\u200b\u5f88\u200b\u70ed\u200b\u554a\u200b\u3002\uff08\u200b\u611f\u53f9\u200b\uff09</p> <p>\u300c\u3088\u300d\u200b\u7528\u4e8e\u200b\u5f3a\u8c03\u200b\u81ea\u5df1\u200b\u7684\u200b\u89c2\u70b9\u200b\u3002</p> <p>\u300c\u200b\u4eca\u65e5\u200b\u306f\u200b\u6691\u200b\u3044\u3067\u3059\u3088\u3002\u300d\uff1a\u200b\u4eca\u5929\u200b\u5f88\u200b\u70ed\u200b\u554a\u200b\u3002</p> <p>\u300c\u3088\u306d\u300d\u200b\u540c\u65f6\u200b\u5305\u542b\u200b\u4e86\u200b\u300c\u3088\u300d\u200b\u548c\u200b\u300c\u306d\u300d\u200b\u7684\u200b\u8bed\u6c14\u200b\u3002</p> <p>\u300c\u200b\u4eca\u65e5\u200b\u306f\u200b\u6691\u200b\u3044\u3067\u3059\u3088\u306d\u3002\u300d\uff1a\u200b\u4eca\u5929\u200b\u5f88\u200b\u70ed\u200b\uff0c\u200b\u5bf9\u200b\u5427\u200b\uff1f</p>"},{"location":"japanese/japanese-1-grammar/#_11","title":"\u300c\u306f\u300d\u200b\u4e0e\u200b\u300c\u304c\u300d","text":"<p>\u200b\u52a9\u8bcd\u200b\u300c\u304c\u300d\u200b\u662f\u200b\u683c\u200b\u52a9\u8bcd\u200b\uff0c\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u4e3b\u8bed\u200b\uff0c\u300c\u306f\u300d\u200b\u662f\u200b\u526f\u200b\u52a9\u8bcd\u200b\uff0c\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u4e3b\u9898\u200b\u3002\u200b\u4e3b\u9898\u200b\u662f\u200b\u6307\u200b\u53e5\u5b50\u200b\u4e3b\u8981\u200b\u63cf\u8ff0\u200b\u7684\u200b\u8bdd\u9898\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7531\u200b\u4e3b\u8bed\u200b\u6216\u200b\u5176\u4ed6\u200b\u6210\u5206\u200b\u5145\u5f53\u200b\u3002</p> <ul> <li>\u300c\u200b\u56f3\u200b\u66f8\u9928\u200b\u306e\u200b\u8fd1\u200b\u304f\u306b\u306f\u30b3\u30f3\u30d3\u30cb\u304c\u3042\u308a\u307e\u3059\u3002\u300d</li> <li>\u300c\u30b3\u30f3\u30d3\u30cb\u306f\u200b\u56f3\u200b\u66f8\u9928\u200b\u306e\u200b\u8fd1\u200b\u304f\u306b\u3042\u308a\u307e\u3059\u3002\u300d</li> <li>\u300c\u200b\u56f3\u200b\u66f8\u9928\u200b\u306e\u3061\u304b\u304f\u306b\u30b3\u30f3\u30d3\u30cb\u304c\u3042\u308a\u307e\u3059\u3002\u300d</li> <li>\u200b\u7b2c\u200b1\u200b\u53e5\u200b\u4e2d\u200b\u4e3b\u8981\u200b\u5f3a\u8c03\u200b\u56fe\u4e66\u9986\u200b\u7684\u200b\u9644\u8fd1\u200b\u6709\u200b\u4fbf\u5229\u5e97\u200b\uff0c\u200b\u53e5\u5b50\u200b\u7684\u200b\u4e3b\u9898\u200b\u662f\u200b\u56fe\u4e66\u9986\u200b\u9644\u8fd1\u200b\u7684\u200b\u4e1c\u897f\u200b\uff1b\u200b\u7b2c\u200b2\u200b\u53e5\u200b\u4e2d\u200b\u4e3b\u8981\u200b\u5f3a\u8c03\u200b\u4fbf\u5229\u5e97\u200b\u5728\u200b\u56fe\u4e66\u9986\u200b\u9644\u8fd1\u200b\uff0c\u200b\u53e5\u5b50\u200b\u7684\u200b\u4e3b\u9898\u200b\u662f\u200b\u4fbf\u5229\u5e97\u200b\u3002</li> <li>\u200b\u7b2c\u200b3\u200b\u53e5\u200b\u4e0d\u200b\u5305\u542b\u200b\u4e3b\u9898\u200b\uff0c\u200b\u4ec5\u4ec5\u200b\u9648\u8ff0\u200b\u4e86\u200b\u56fe\u4e66\u9986\u200b\u9644\u8fd1\u200b\u6709\u200b\u4fbf\u5229\u5e97\u200b\u3002</li> </ul> <p>\u200b\u5f53\u200b\u56de\u7b54\u200b\u7591\u95ee\u53e5\u200b\u65f6\u200b\uff0c\u200b\u5982\u679c\u200b\u7591\u95ee\u53e5\u200b\u662f\u200b\u7528\u200b\u300c\u304c\u300d\u200b\u63d0\u95ee\u200b\u7684\u200b\uff0c\u200b\u5728\u200b\u56de\u7b54\u200b\u7684\u200b\u65f6\u5019\u200b\u4e5f\u200b\u9700\u8981\u200b\u7528\u200b\u300c\u304c\u300d\u3002</p> <p>\u200b\u901a\u5e38\u200b\u6765\u8bf4\u200b\uff1a</p> <ol> <li>\u300c\u306f\u300d\u200b\u901a\u5e38\u200b\u7528\u4e8e\u200b\u63d0\u793a\u200b\u5df2\u6709\u200b\u7684\u200b\u4fe1\u606f\u200b\uff0c\u300c\u304c\u300d\u200b\u7528\u4e8e\u200b\u63d0\u793a\u200b\u65b0\u200b\u7684\u200b\u4fe1\u606f\u200b\u3002</li> <li>\u300c\u306f\u300d\u200b\u5f3a\u8c03\u200b\uff08\u200b\u4f20\u8fbe\u200b\uff09\u200b\u7684\u200b\u901a\u5e38\u200b\u662f\u200b\u300c\u306f\u300d\u200b\u540e\u9762\u200b\u7684\u200b\u5185\u5bb9\u200b\uff0c\u300c\u304c\u300d\u200b\u5f3a\u8c03\u200b\uff08\u200b\u4f20\u8fbe\u200b\uff09\u200b\u7684\u200b\u901a\u5e38\u200b\u662f\u200b\u300c\u304c\u300d\u200b\u524d\u9762\u200b\u7684\u200b\u5185\u5bb9\u200b\u3002</li> <li>\u200b\u7528\u4e8e\u200b\u5f62\u5bb9\u200b\u80fd\u529b\u200b\u7684\u200bII\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\uff08\u300c\u3058\u3087\u3046\u305a\u300d\u3001\u300c\u3078\u305f\u300d\u3001\u300c\u200b\u597d\u200b\u304d\u300d\u3001\u300c\u3068\u304f\u3044\u300d\uff09\u200b\u6216\u200b\u52a8\u8bcd\u200b\uff08\u300c\u3067\u304d\u308b\u300d\u3001\u300c\u308f\u304b\u308b\u300d\uff09\u200b\u7684\u200b\u4e3b\u8bed\u200b\u53ea\u80fd\u200b\u7528\u200b\u300c\u304c\u300d\uff0c\u200b\u4e0d\u80fd\u200b\u7528\u200b\u300c\u306f\u300d\u3002</li> </ol>"},{"location":"japanese/japanese-1-grammar/#_12","title":"\u63a5\u7eed\u8bcd","text":"<p>\u200b\u63a5\u7eed\u8bcd\u200b\u653e\u5728\u200b\u53e5\u5b50\u200b\u7684\u200b\u5f00\u5934\u200b\uff0c\u200b\u540e\u9762\u200b\u53ef\u4ee5\u200b\u63a5\u200b\u53e5\u5b50\u200b\u6216\u200b\u77ed\u8bed\u200b\uff0c\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u8be5\u53e5\u200b\u548c\u200b\u524d\u200b\u4e00\u53e5\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5173\u7cfb\u200b\u3002</p>"},{"location":"japanese/japanese-1-grammar/#_13","title":"\u3057\u304b\u3057","text":"<p>\u300c\u3057\u304b\u3057\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u8f6c\u6298\u200b\u5173\u7cfb\u200b\uff0c\u200b\u76f8\u5f53\u4e8e\u200b\u6c49\u8bed\u200b\u4e2d\u200b\u7684\u200b\u201c\u200b\u4f46\u662f\u200b\u201d\uff0c\u200b\u7528\u4e8e\u200b\u53e5\u5b50\u200b\u7684\u200b\u5f00\u5934\u200b\u3002</p> <p>\u300c\u3057\u304b\u3057\u3001\u200b\u4eca\u65e5\u200b\u306f\u200b\u6691\u200b\u3044\u3067\u3059\u306d\u3002\u300d\uff1a\u200b\u4f46\u662f\u200b\uff0c\u200b\u4eca\u5929\u200b\u5f88\u200b\u70ed\u200b\u5427\u200b\u3002</p>"},{"location":"japanese/japanese-1-grammar/#_14","title":"\u3067\u3082","text":"<p>\u300c\u3067\u3082\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u8f6c\u6298\u200b\u5173\u7cfb\u200b\uff0c\u200b\u76f8\u5f53\u4e8e\u200b\u6c49\u8bed\u200b\u4e2d\u200b\u7684\u200b\u201c\u200b\u4f46\u662f\u200b\u201d\uff0c\u200b\u8bed\u6c14\u200b\u6bd4\u200b\u300c\u3057\u304b\u3057\u300d\u200b\u66f4\u52a0\u200b\u53e3\u8bed\u200b\u3002</p> <p>\u300c\u3067\u3082\u3001\u200b\u5348\u200b\u5f8c\u200b\u304b\u3089\u306f\u200b\u6dbc\u200b\u3057\u304f\u306a\u308a\u307e\u3059\u3002\u300d\uff1a\u200b\u4f46\u662f\u200b\uff0c\u200b\u4ece\u200b\u4e0b\u5348\u200b\u5f00\u59cb\u200b\u4f1a\u200b\u51c9\u5feb\u200b\u4e00\u4e9b\u200b\u3002</p>"},{"location":"japanese/japanese-1-grammar/#_15","title":"\u305d\u308c\u304b\u3089","text":"<p>\u300c\u305d\u308c\u304b\u3089\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u987a\u63a5\u200b\u5173\u7cfb\u200b\uff0c\u200b\u76f8\u5f53\u4e8e\u200b\u6c49\u8bed\u200b\u4e2d\u200b\u7684\u200b\u201c\u200b\u7136\u540e\u200b\u201d\uff0c\u200b\u7528\u4e8e\u200b\u53e5\u5b50\u200b\u7684\u200b\u5f00\u5934\u200b\u3002</p> <p>\u300c\u305d\u308c\u304b\u3089\u3001\u200b\u56f3\u200b\u66f8\u9928\u200b\u306b\u200b\u884c\u200b\u304d\u307e\u3057\u3087\u3046\u3002\u300d\uff1a\u200b\u7136\u540e\u200b\uff0c\u200b\u53bb\u200b\u56fe\u4e66\u9986\u200b\u5427\u200b\u3002</p>"},{"location":"japanese/japanese-1-grammar/#_16","title":"\u8bed\u6cd5","text":""},{"location":"japanese/japanese-1-grammar/#_17","title":"\u656c\u4f53\u200b\u53e5\u200b\u53ca\u200b\u65f6\u6001\u53d8\u5316","text":""},{"location":"japanese/japanese-1-grammar/#_18","title":"\u540d\u8bcd\u200b\u53e5\u200b\u4e0e\u200b\u52a8\u200b\u8bcd\u53e5","text":"<p>\u200b\u65e5\u8bed\u200b\u4e2d\u200b\u7684\u200b\u65f6\u6001\u53d8\u5316\u200b\u4e3b\u8981\u200b\u6709\u200b\u73b0\u5728\u200b\u548c\u200b\u8fc7\u53bb\u200b\u65f6\u200b\u3002\u200b\u540d\u8bcd\u200b\u656c\u4f53\u200b\u53e5\u200b\u4ee5\u200b\u300c\u3067\u3059\u300d\u200b\u7ed3\u53e5\u200b\uff0c\u200b\u5176\u200b\u5728\u200b\u4e0d\u540c\u200b\u65f6\u6001\u200b\u4e0b\u200b\u7684\u200b\u53d8\u5f62\u200b\u5982\u4e0b\u200b\uff1a</p> \u200b\u80af\u5b9a\u200b \u200b\u5426\u5b9a\u200b \u200b\u73b0\u5728\u200b \u301c\u3067\u3059\u3002 \u301c\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u200b\u8fc7\u53bb\u200b \u301c\u3067\u3057\u305f\u3002 \u301c\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002 <p>\u300c\u3067\u306f\u300d\u200b\u53ef\u4ee5\u200b\u66ff\u6362\u6210\u200b\u300c\u3058\u3083\u300d\u3002</p> <p>\u200b\u52a8\u8bcd\u200b\u656c\u4f53\u200b\u53e5\u200b\u4ee5\u200b\u300c\u307e\u3059\u300d\u200b\u7ed3\u53e5\u200b\uff0c\u200b\u5176\u200b\u5728\u200b\u4e0d\u540c\u200b\u65f6\u6001\u200b\u4e0b\u200b\u7684\u200b\u53d8\u5f62\u200b\u5982\u4e0b\u200b\uff1a</p> \u200b\u80af\u5b9a\u200b \u200b\u5426\u5b9a\u200b \u200b\u73b0\u5728\u200b \u301c\u307e\u3059\u3002 \u301c\u307e\u305b\u3093\u3002 \u200b\u8fc7\u53bb\u200b \u301c\u307e\u3057\u305f\u3002 \u301c\u307e\u305b\u3093\u3067\u3057\u305f\u3002 <p>\u200b\u5b58\u5728\u200b\u53e5\u200b\u7684\u200b\u52a8\u8bcd\u200b\u6709\u200b\u4e24\u79cd\u200b\uff0c\u200b\u5373\u200b\u300c\u3042\u308b\u300d\uff08\u3042\u308a\u307e\u3059\uff09\u200b\u548c\u200b\u300c\u3044\u308b\u300d\uff08\u3044\u307e\u3059\uff09\uff0c\u200b\u5176\u4e2d\u200b\u300c\u3042\u308b\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u65e0\u200b\u751f\u547d\u200b\u7684\u200b\u4e8b\u7269\u200b\uff0c\u300c\u3044\u308b\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u6709\u200b\u751f\u547d\u200b\u7684\u200b\u4e8b\u7269\u200b\u3002</p> <p>\u200b\u8868\u793a\u200b\u63d0\u8bae\u200b\u65f6\u200b\uff0c\u200b\u7528\u200b\u300c\u307e\u3057\u3087\u3046\u300d\u200b\u6216\u200b\u300c\u307e\u3057\u3087\u3046\u304b\u300d\u200b\u4ee3\u66ff\u200b\u300c\u307e\u3059\u300d\u3002\u200b\u8868\u793a\u200b\u63a8\u6d4b\u200b\u65f6\u200b\uff0c\u200b\u7528\u200b\u300c\u3067\u3057\u3087\u3046\u300d\u200b\u4ee3\u66ff\u200b\u300c\u3067\u3059\u300d\u3002</p>"},{"location":"japanese/japanese-1-grammar/#_19","title":"\u63cf\u8ff0\u200b\u53e5","text":"<p>\u200b\u5bf9\u4e8e\u200bI\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\uff0c\u200b\u5176\u200b\u5728\u200b\u4e0d\u540c\u200b\u65f6\u6001\u200b\u4e0b\u200b\u7684\u200b\u53d8\u5f62\u200b\u5982\u4e0b\u200b\uff08\u201c\uff5e\u201d\u200b\u6307\u200b\u5f62\u5bb9\u8bcd\u200b\u7684\u200b\u8bcd\u5e72\u200b\uff0c\u200b\u5373\u200b\u53bb\u6389\u200b\u300c\u3044\u300d\u200b\u7684\u200b\u90e8\u5206\u200b\uff09\uff1a</p> \u200b\u80af\u5b9a\u200b \u200b\u5426\u5b9a\u200b \u200b\u73b0\u5728\u200b \u301c\u3044\u3067\u3059\u3002 \u301c\u304f\u3042\u308a\u307e\u305b\u3093\u3002 \u200b\u8fc7\u53bb\u200b \u301c\u304b\u3063\u305f\u3067\u3059\u3002 \u301c\u304f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002 <p>\u200b\u6ce8\u610f\u200b\u300c\u306a\u3044\u300d\u200b\u4e5f\u200b\u662f\u200bI\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\uff0c\u300c\u3042\u308a\u307e\u305b\u3093\u300d\u200b\u548c\u200b\u300c\u306a\u3044\u3067\u3059\u300d\u200b\u7b49\u4ef7\u200b\u3002\u200b\u56e0\u6b64\u200b\u8fd8\u6709\u200b\u5982\u4e0b\u200b\u53d8\u5f62\u200b\uff1a</p> \u200b\u80af\u5b9a\u200b \u200b\u5426\u5b9a\u200b \u200b\u73b0\u5728\u200b \u301c\u3044\u3067\u3059\u3002 \uff5e\u304f\u306a\u3044\u3067\u3059\u3002 \u200b\u8fc7\u53bb\u200b \u301c\u304b\u3063\u305f\u3067\u3057\u305f\u3002 \u301c\u304f\u306a\u304b\u3063\u305f\u3067\u3059 <p>\u200b\u4ee5\u4e0b\u200b\u4e24\u4e2a\u200b\u53e5\u5b50\u200b\u7b49\u4ef7\u200b\uff1a</p> <p>\u300c\u200b\u79c1\u200b\u306f\u200b\u9ad8\u200b\u304f\u306a\u3044\u3067\u3059\u3002\u300d \u300c\u200b\u79c1\u200b\u306f\u200b\u9ad8\u200b\u304f\u3042\u308a\u307e\u305b\u3093\u3002\u300d</p> <p>II\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\uff08\u200b\u5f62\u5bb9\u200b\u52a8\u8bcd\u200b\uff09\u200b\u7684\u200b\u53d8\u5f62\u200b\u548c\u200b\u540d\u8bcd\u200b\u76f8\u540c\u200b\u3002</p>"},{"location":"japanese/japanese-1-grammar/#_20","title":"\u52a8\u200b\u8bcd\u53e5\u200b\u7684\u200b\u8fdb\u884c\u200b\u65f6\u200b\u4e0e\u200b\u5b8c\u6210\u200b\u65f6","text":"<p>\u300c\u3066\u3044\u307e\u3059\u300d\u200b\u4e0e\u200b\u6301\u7eed\u6027\u200b\u52a8\u8bcd\u200b\u8fde\u7528\u200b\u65f6\u200b\uff0c\u200b\u8868\u793a\u200b\u52a8\u4f5c\u200b\u7684\u200b\u8fdb\u884c\u200b\u65f6\u200b\uff1b\u200b\u4e0e\u200b\u77ac\u95f4\u200b\u52a8\u8bcd\u200b\u8fde\u7528\u200b\u65f6\u200b\uff0c\u200b\u8868\u793a\u200b\u52a8\u4f5c\u200b\u7684\u200b\u5b8c\u6210\u200b\u65f6\u200b\u3002</p>"},{"location":"japanese/japanese-1-grammar/#_21","title":"\u987a\u63a5\u200b\u5173\u7cfb","text":"<p>\u200b\u4e24\u4e2a\u200b\u5206\u53e5\u200b\u5982\u679c\u200b\u4e0d\u662f\u200b\u8868\u793a\u200b\u8f6c\u6298\u200b\u3001\u200b\u6761\u4ef6\u200b\u7b49\u200b\u5173\u7cfb\u200b\uff0c\u200b\u8868\u793a\u200b\u987a\u63a5\u200b\u5173\u7cfb\u200b\u65f6\u200b\uff0c\u200b\u6784\u6210\u200b\u987a\u63a5\u200b\u5173\u7cfb\u200b\u3002\u200b\u7b2c\u4e00\u4e2a\u200b\u4ece\u53e5\u200b\u7684\u200b\u53e5\u200b\u5c3e\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u300c\u3066\u300d\u200b\u578b\u200b\uff08\u200b\u8fde\u7528\u200b\u578b\u200b\uff09\u200b\u7ed3\u5c3e\u200b\u3002</p> <p>\u300c\u200b\u79c1\u200b\u306f\u200b\u65e5\u672c\u200b\u8a9e\u200b\u3092\u200b\u52c9\u5f37\u200b\u3057\u3066\u3001\u200b\u4e2d\u56fd\u200b\u8a9e\u200b\u3092\u200b\u52c9\u5f37\u200b\u3057\u307e\u3059\u3002\u300d\uff1a\u200b\u6211\u200b\u5b66\u4e60\u200b\u65e5\u8bed\u200b\uff0c\u200b\u4e5f\u200b\u5b66\u4e60\u200b\u6c49\u8bed\u200b\u3002</p>"},{"location":"japanese/japanese-1-grammar/#_22","title":"\u5f62\u5f0f\u200b\u4f53\u8a00","text":"<p>\u200b\u5f62\u5f0f\u200b\u4f53\u8a00\u200b\u662f\u200b\u6307\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u62bd\u8c61\u6982\u5ff5\u200b\u7684\u200b\u540d\u8bcd\u200b\uff0c\u200b\u5982\u200b\u300c\u3053\u3068\u300d\u3001\u300c\u306e\u300d\u3001\u300c\u3082\u306e\u300d\u200b\u7b49\u200b\u3002\u200b\u5f62\u5f0f\u200b\u4f53\u8a00\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u52a8\u4f5c\u200b\u7684\u200b\u4e3b\u8bed\u200b\u6216\u200b\u5bbe\u8bed\u200b\uff0c\u200b\u4e0e\u200b\u52a8\u8bcd\u200b\u539f\u578b\u200b\u8fde\u7528\u200b\u65f6\u200b\u76f8\u5f53\u4e8e\u200b\u52a8\u540d\u8bcd\u200b\u3002</p> \u200b\u5f62\u5f0f\u200b\u4f53\u8a00\u200b \u200b\u542b\u4e49\u200b \u3053\u3068 \u200b\u4e8b\u60c5\u200b\uff08\u200b\u4e00\u822c\u200b\u8868\u793a\u200b\u4e8b\u60c5\u200b\u3001\u200b\u4e8b\u5b9e\u200b\u3001\u200b\u5185\u5bb9\u200b\uff09 \u306e \u200b\u4e8b\u60c5\u200b\uff08\u200b\u4e00\u822c\u200b\u8868\u793a\u200b\u4eba\u200b\u3001\u200b\u4e8b\u200b\u3001\u200b\u7269\u200b\uff09 \u3068\u3053\u308d \u200b\u5730\u70b9\u200b\uff08\u200b\u7528\u6765\u200b\u505a\u200b\u2026\u2026\uff09 \u3082\u306e \u200b\u7269\u54c1\u200b\uff08\u200b\u7528\u6765\u200b\u505a\u200b\u2026\u2026\uff09 <p>\u200b\u56f3\u200b\u66f8\u9928\u200b\u306f\u200b\u52c9\u5f37\u200b\u3059\u308b\u3068\u3053\u308d\u3067\u3059\u3002\uff1a\u200b\u56fe\u4e66\u9986\u200b\u662f\u200b\u5b66\u4e60\u200b\u7684\u200b\u5730\u65b9\u200b\u3002</p>"},{"location":"japanese/japanese-1-grammar/#_23","title":"\u6bd4\u8f83\u7ea7\u200b\u4e0e\u200b\u6700\u9ad8\u7ea7","text":"<p>\u200b\u65e5\u8bed\u200b\u4e2d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u6bd4\u8f83\u200b\u7684\u200b\u52a9\u8bcd\u200b\u4e3a\u200b\u300c\u3088\u308a\u300d\u200b\u548c\u200b\u300c\u307b\u3069\u300d\u3002\u200b\u8981\u200b\u8868\u793a\u200b\u201cA\u200b\u6bd4\u200bB\u200b\u66f4\u200b\u2026\u2026\u201d\uff0c\u200b\u6709\u200b\u5982\u4e0b\u200b\u7684\u200b\u8868\u8fbe\u65b9\u5f0f\u200b\uff1a</p> <ol> <li>\u300cA\u306fB\u3088\u308a\u301c\u300d\uff0c\u200b\u8868\u793a\u200b\u201cA\u200b\u6bd4\u200bB\u200b\u66f4\u200b\u2026\u2026\u201d\uff0c\u200b\u5728\u200b\u53e3\u8bed\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u7701\u7565\u200b\u300cA\u306f\u300d\u200b\u6765\u200b\u66f4\u200b\u591a\u200b\u5f3a\u8c03\u200b\u7528\u4e8e\u200b\u6bd4\u8f83\u200b\u7684\u200b\u57fa\u51c6\u200b\u3002</li> <li>\u300cB\u3088\u308aA\u306e\u200b\u65b9\u200b\u304c\u300d\u200b\u8868\u793a\u200b\u201cA\u200b\u6bd4\u200bB\u200b\u66f4\u200b\u2026\u2026\u201d\uff0c\u200b\u5728\u200b\u53e3\u8bed\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u7701\u7565\u200b\u300cB\u3088\u308a\u300d\uff0c\u200b\u66f4\u200b\u591a\u200b\u5f3a\u8c03\u200b\u4e3b\u8bed\u200bA\u3002</li> <li>\u300cB\u306fA\u307b\u3069\u301c\u3042\u308a\u307e\u305b\u3093\u300d\uff0c\u200b\u8868\u793a\u200b\u201cB\u200b\u4e0d\u5982\u200bA\u2026\u2026\u201d\u3002</li> </ol> <p>\u200b\u5728\u200b\u7591\u95ee\u53e5\u200b\u4e2d\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u200b\u300cA\u3068B\u3068\u3069\u3061\u3089\u306e\u200b\u65b9\u200b\u304c\u301c\u3067\u3059\u304b\u300d\u200b\u6765\u200b\u8be2\u95ee\u200bA\u200b\u548c\u200bB\u200b\u54ea\u4e2a\u200b\u66f4\u200b\u2026\u2026\u3002\u200b\u5176\u4e2d\u200b\u300c\u306e\u200b\u65b9\u200b\u300d\u200b\u8868\u793a\u200b\u201c\u2026\u2026\u200b\u7684\u200b\u7a0b\u5ea6\u200b\u201d\uff0c\u200b\u5728\u200b\u95ee\u53e5\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u7701\u7565\u200b\u3002\u200b\u6ce8\u610f\u200b\u5728\u200b\u56de\u7b54\u200b\u7591\u95ee\u53e5\u200b\u65f6\u200b\uff0c\u200b\u9700\u8981\u200b\u7528\u200b\u300c\u304c\u300d\u3002\u200b\u5982\u679c\u200b\u4e24\u8005\u200b\u7a0b\u5ea6\u200b\u5dee\u4e0d\u591a\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u200b\u300c\u3069\u3061\u3089\u3082\u301c\u300d\u200b\u56de\u7b54\u200b\u3002</p> <p>\u300c\u200b\u5317\u4eac\u5927\u5b66\u200b\u3068\u200b\u6e05\u83ef\u200b\u5927\u5b66\u200b\u3068\u3069\u3061\u3089\u306e\u200b\u65b9\u200b\u304c\u200b\u6709\u540d\u200b\u3067\u3059\u304b\u3002\u300d\uff1a\u200b\u5317\u4eac\u5927\u5b66\u200b\u548c\u200b\u6e05\u534e\u5927\u5b66\u200b\u54ea\u4e2a\u200b\u66f4\u200b\u6709\u540d\u200b\uff1f \u300c\u200b\u6e05\u83ef\u200b\u5927\u5b66\u200b\u306e\u200b\u65b9\u200b\u304c\u200b\u6709\u540d\u200b\u3067\u3059\u3002\u300d\uff1a\u200b\u5317\u4eac\u5927\u5b66\u200b\u66f4\u200b\u6709\u540d\u200b\u3002 \u200b\u6216\u200b \u300c\u3069\u3061\u3089\u3082\u200b\u6709\u540d\u200b\u3067\u3059\u3002\u300d\uff1a\u200b\u4e24\u4e2a\u200b\u90fd\u200b\u6709\u540d\u200b\u3002</p> <p>\u200b\u65e5\u8bed\u200b\u4e2d\u200b\u8868\u8fbe\u200b\u6700\u9ad8\u7ea7\u200b\u7684\u200b\u65b9\u5f0f\u200b\u6709\u200b\u4e24\u79cd\u200b\uff1a</p> <ol> <li> <p>\u200b\u526f\u8bcd\u200b\u300c\u200b\u4e00\u756a\u200b\u300d\uff0c\u200b\u8868\u793a\u200b\u201c\u200b\u6700\u200b\u2026\u2026\u201d\uff0c\u200b\u5728\u200b\u53e5\u5b50\u200b\u4e2d\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u300c\u301c\u306e\u200b\u4e2d\u200b\u3067\u300d\u200b\u6765\u200b\u9650\u5236\u200b\u6bd4\u8f83\u200b\u7684\u200b\u8303\u56f4\u200b\u3002</p> <p>\u300c\u200b\u5317\u4eac\u200b\u306e\u200b\u5927\u5b66\u200b\u306e\u200b\u4e2d\u200b\u3067\u200b\u6e05\u83ef\u200b\u5927\u5b66\u200b\u304c\u200b\u4e00\u756a\u200b\u6709\u540d\u200b\u3067\u3059\u3002\u300d\uff1a\u200b\u5728\u200b\u5317\u4eac\u200b\u7684\u200b\u5927\u5b66\u200b\u4e2d\u200b\uff0c\u200b\u6e05\u534e\u5927\u5b66\u200b\u6700\u200b\u6709\u540d\u200b\u3002</p> </li> <li> <p>\u200b\u4f7f\u7528\u200b\u201c\u200b\u6ca1\u6709\u200b\u6bd4\u200b\u2026\u2026\u200b\u66f4\u200b\u2026\u2026\u201d\u200b\u7684\u200b\u53e5\u5f0f\u200b\uff0c\u200b\u5373\u200b\u300cA\u307b\u3069\u301cB\u306f\u3042\u308a\u307e\u305b\u3093\u300d\u3002\u200b\u5176\u4e2d\u200b\uff0cB\u200b\u4e3a\u200b\u5f62\u5f0f\u200b\u4f53\u8a00\u200b\uff0c\u200b\u8868\u793a\u200b\u201c\u2026\u2026\u200b\u7684\u200b\u4e1c\u897f\u200b\u201d\u3002\u200b\u6ce8\u610f\u200b\u7528\u4e8e\u200b\u6709\u200b\u751f\u547d\u200b\u7684\u200b\u4e8b\u7269\u200b\u65f6\u200b\uff0c\u200b\u9700\u8981\u200b\u7528\u200b\u300c\u3044\u307e\u305b\u3093\u300d\u3002</p> <p>\u300c\u200b\u6e05\u83ef\u200b\u5927\u5b66\u200b\u307b\u3069\u200b\u6709\u540d\u200b\u306a\u200b\u5927\u5b66\u200b\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u300d\uff1a\u200b\u6ca1\u6709\u200b\u6bd4\u200b\u6e05\u534e\u5927\u5b66\u200b\u66f4\u200b\u6709\u540d\u200b\u7684\u200b\u5927\u5b66\u200b\u4e86\u200b\u3002</p> </li> </ol> <p>\u200b\u63d0\u95ee\u200b\u6700\u9ad8\u7ea7\u200b\u65f6\u200b\u7684\u200b\u4e00\u822c\u200b\u53e5\u5f0f\u200b\u4e3a\u200b\u300cA\u3067\u3069\u3053\u304c\u200b\u4e00\u756a\u200b\u301c\u3067\u3059\u304b\u300d\u200b\u6216\u200b\u300cA\u3067\u3069\u306e\u301c\u304c\u200b\u4e00\u756a\u200b\u301c\u3067\u3059\u304b\u300d\uff0c\u200b\u610f\u200b\u4e3a\u200bA\u200b\u4e2d\u200b\u6700\u200b\u2026\u2026\u200b\u7684\u200b\u662f\u200b\u54ea\u4e2a\u200b\u2026\u2026\u3002</p>"},{"location":"japanese/japanese-1-grammar/#_24","title":"\u7b80\u4f53\u200b\u53e5","text":"<p>\u200b\u5f53\u200b\u4f7f\u7528\u200b\u63a5\u7eed\u200b\u52a9\u8bcd\u200b\u300c\u306e\u3067\u300d\u200b\u65f6\u200b\uff0c\u200b\u524d\u200b\u4e00\u4e2a\u200b\u5206\u53e5\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u7b80\u4f53\u200b\u53e5\u200b\u3002</p>"},{"location":"japanese/japanese-1-grammar/#_25","title":"\u540d\u8bcd\u200b\u53e5","text":"<p>\u200b\u5bf9\u4e8e\u200b\u53e5\u5b50\u200b\u7ed3\u5c3e\u200b\u662f\u200bI\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u7b80\u4f53\u200b\u53e5\u200b\u65e0\u9700\u200b\u505a\u51fa\u200b\u53d8\u5316\u200b\u3002</p> \u200b\u80af\u5b9a\u200b \u200b\u5426\u5b9a\u200b \u200b\u73b0\u5728\u200b \uff5e\u3044 \uff5e\u304f\u306a\u3044 \u200b\u8fc7\u53bb\u200b \uff5e\u304b\u3063\u305f \uff5e\u304f\u306a\u304b\u3063\u305f <p>\u200b\u5bf9\u4e8e\u200b\u53e5\u5b50\u200b\u7ed3\u5c3e\u200b\u662f\u200b\u540d\u8bcd\u200b\u548c\u200bII\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u7b80\u4f53\u200b\u53e5\u200b\u662f\u200b\u5728\u200b\u53e5\u200b\u5c3e\u200b\u52a0\u4e0a\u200b\u300c\u3060\u300d\uff08II\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\u7684\u200b\u539f\u578b\u200b\uff09\u3002\u200b\u8fc7\u53bb\u200b\u65f6\u200b\u7b80\u4f53\u200b\u53e5\u200b\u662f\u200b\u5728\u200b\u53e5\u200b\u5c3e\u200b\u52a0\u4e0a\u200b\u300c\u3060\u3063\u305f\u300d\u3002\u200b\u5426\u5b9a\u200b\u5f62\u5f0f\u200b\u52a0\u4e0a\u200b\u300c\u3067\u306f\u306a\u3044\u300d\u200b\u6216\u200b\u300c\u3067\u306f\u306a\u3063\u304b\u305f\u300d\u3002</p> \u200b\u80af\u5b9a\u200b \u200b\u5426\u5b9a\u200b \u200b\u73b0\u5728\u200b \u301c\u3060 \u301c\u3067\u306f\u306a\u3044 \u200b\u8fc7\u53bb\u200b \u301c\u3060\u3063\u305f \u301c\u3067\u306f\u306a\u304b\u3063\u305f"},{"location":"japanese/japanese-1-grammar/#_26","title":"\u52a8\u200b\u8bcd\u53e5","text":"<p>\u200b\u5728\u200b\u7b80\u4f53\u200b\u53e5\u200b\u4e2d\u200b\uff0c\u200b\u52a8\u8bcd\u200b\u4f7f\u7528\u200b\u5176\u200b\u539f\u578b\u200b\u3002\u200b\u5426\u5b9a\u200b\u5f62\u5f0f\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u5176\u200b\u306a\u3044\u200b\u578b\u200b\uff0c\u200b\u8fc7\u53bb\u200b\u65f6\u200b\u4f7f\u7528\u200b\u5176\u200b\u305f\u200b\u578b\u200b\u3002\u200b\u6ce8\u610f\u200b\u300c\u306a\u3044\u300d\u200b\u662f\u200bI\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5176\u200b\u8fc7\u53bb\u200b\u5426\u5b9a\u200b\u5f62\u5f0f\u200b\u4e3a\u200b\u300c\u306a\u304b\u3063\u305f\u300d\u3002</p>"},{"location":"japanese/japanese-1-grammar/#_27","title":"\u306e\u3067\u3059/\u3093\u3067\u3059\u200b\u7ed3\u6784","text":"<p>\u300c\u306e\u3067\u3059\u300d\u200b\u548c\u200b\u300c\u3093\u3067\u3059\u300d\u200b\u591a\u200b\u7528\u4e8e\u200b\u53e3\u8bed\u200b\uff0c\u200b\u8868\u793a\u200b\u89e3\u91ca\u200b\u3001\u200b\u8bf4\u660e\u200b\u3001\u200b\u8bf7\u6c42\u200b\u3001\u200b\u5efa\u8bae\u200b\u7b49\u200b\u8bed\u6c14\u200b\u3002II\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\u6216\u200b\u540d\u8bcd\u200b\u9700\u8981\u200b\u5728\u200b\u7b80\u4f53\u200b\u53e5\u200b\u5f62\u5f0f\u200b\u540e\u200b\u52a0\u4e0a\u200b\u300c\u306a\u300d\uff0c\u200b\u518d\u200b\u52a0\u200b\u300c\u306e\u3067\u3059\u300d\u200b\u6216\u200b\u300c\u3093\u3067\u3059\u300d\uff1bI\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b\u76f4\u63a5\u200b\u52a0\u200b\u300c\u306e\u3067\u3059\u300d\u200b\u6216\u200b\u300c\u3093\u3067\u3059\u300d\u3002</p>"},{"location":"japanese/japanese-1-pattern/","title":"\u65e5\u8bed\u200b(1)\u200b\u77ed\u8bed\u200b\u4e0e\u200b\u8868\u8fbe","text":""},{"location":"japanese/japanese-1-pattern/#1-4","title":"1-4\u200b\u8bfe","text":"<ol> <li>\u300c\u304a\u3084\u3059\u307f\u306a\u3055\u3044\u300d\uff1a\u200b\u665a\u5b89\u200b</li> <li>\u300c\u304a\u200b\u75b2\u200b\u308c\u200b\u69d8\u200b\u300d\uff1a\u200b\u8f9b\u82e6\u200b\u4e86\u200b</li> <li>\u300c\u308f\u304b\u308a\u307e\u3057\u305f\u300d\uff1a\u200b\u6211\u200b\u77e5\u9053\u200b\u4e86\u200b</li> <li>\u300c\u200b\u521d\u200b\u3081\u307e\u3057\u3066\u300d\uff1a\u200b\u521d\u6b21\u89c1\u9762\u200b</li> <li>\u300c\u304a\u200b\u5143\u200b\u6c17\u200b\u3067\u3059\u304b\u300d\uff1a\u200b\u60a8\u597d\u200b\u5417\u200b\uff1f</li> <li>\u300c\u304a\u304b\u3052\u3055\u307e\u3067\u3001\u200b\u5143\u200b\u6c17\u200b\u3067\u3059\u300d\uff1a\u200b\u8c22\u8c22\u60a8\u200b\uff0c\u200b\u6211\u200b\u5f88\u200b\u597d\u200b\u3002</li> <li>\u300c\u200b\u884c\u200b\u3063\u3066\u304d\u307e\u3059\u300d\uff1a\u200b\u6211\u200b\u8d70\u200b\u4e86\u200b</li> <li>\u300c\u200b\u884c\u200b\u3063\u3066\u3089\u3063\u3057\u3083\u3044\u300d\uff1a\u200b\u4e00\u8def\u987a\u98ce\u200b</li> <li>\u300c\u305f\u3060\u3044\u307e\u300d\uff1a\u200b\u6211\u200b\u56de\u6765\u200b\u4e86\u200b</li> <li>\u300c\u304a\u200b\u5e30\u200b\u308a\u306a\u3055\u3044\u300d\uff1a\u200b\u6b22\u8fce\u200b\u56de\u6765\u200b</li> <li>\u300c\u3055\u3088\u3046\u306a\u3089\u300d\uff1a\u200b\u518d\u89c1\u200b</li> <li>\u300c\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u300d\uff1a\u200b\u975e\u5e38\u200b\u611f\u8c22\u60a8\u200b</li> <li>\u300c\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u300d\uff1a\u200b\u975e\u5e38\u200b\u611f\u8c22\u60a8\u200b</li> </ol>"},{"location":"japanese/japanese-1-pattern/#5","title":"\u7b2c\u200b5\u200b\u8bfe","text":"<ol> <li>\u300c\u304a\u306f\u3088\u3046\u3054\u3056\u3044\u307e\u3059\u300d\uff1a\u200b\u65e9\u4e0a\u597d\u200b</li> <li>\u300c\u3053\u3093\u306b\u3061\u306f\u300d\uff1a\u200b\u4f60\u597d\u200b</li> <li>\u300c\u3053\u3093\u3070\u3093\u306f\u300d\uff1a\u200b\u665a\u4e0a\u200b\u597d\u200b</li> <li>\u300c\u3088\u308d\u3057\u304f\u304a\u200b\u9858\u200b\u3044\u3057\u307e\u3059\u300d\u3001\u300c\u3088\u308d\u3057\u304f\u304a\u200b\u9858\u200b\u3044\u3044\u305f\u3057\u307e\u3059\u300d\uff1a\u200b\u8bf7\u591a\u5173\u7167\u200b</li> <li>\u200b\u5173\u4e8e\u200b\u95ee\u53e5\u200b<ul> <li>\u200b\u80af\u5b9a\u200b\u56de\u590d\u200b\uff1a\u300c\u306f\u3044\u3001\u305d\u3046\u3067\u3059\u300d\uff0c\u200b\u6ce8\u610f\u200b\u300c\u306f\u3044\u300d\u200b\u4e0d\u80fd\u200b\u591a\u6b21\u91cd\u590d\u200b\u3002</li> <li>\u200b\u5426\u5b9a\u200b\u56de\u590d\u200b\uff1a\u300c\u3044\u3044\u3048\u3001\u200b\u9055\u200b\u3044\u307e\u3059\u300d</li> </ul> </li> </ol>"},{"location":"japanese/japanese-1-pattern/#6","title":"\u7b2c\u200b6\u200b\u8bfe","text":"<ol> <li>\u300c\u3048\u3048\u3068\u300d\uff1a\u200b\u55ef\u200b\u2026\u2026\uff0c\u200b\u8868\u793a\u200b\u77ed\u6682\u200b\u7684\u200b\u505c\u987f\u200b\u6216\u200b\u601d\u8003\u200b</li> <li>\u200b\u5207\u5165\u200b\u8bdd\u9898\u200b<ul> <li>\u300c\u3042\u306e\u3046\u300d\uff1a\u200b\u90a3\u4e2a\u200b\u2026\u2026</li> <li>\u300c\u3059\u307f\u307e\u305b\u3093\uff08\u304c\uff09\u300d\uff1a\u200b\u4e0d\u597d\u610f\u601d\u200b</li> </ul> </li> <li>\u200b\u7ed3\u675f\u200b\u8bdd\u9898\u200b<ul> <li>\u300c\u200b\u5931\u793c\u200b\u3057\u307e\u3059\u300d\uff1a\u200b\u5931\u966a\u200b\u4e86\u200b</li> <li>\u300c\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u300d\uff1a\u200b\u4eca\u5929\u200b\u975e\u5e38\u200b\u611f\u8c22\u60a8\u200b</li> <li>\u300c\u3067\u306f\u3001\u307e\u305f\u300d\uff1a\u200b\u90a3\u4e48\u200b\uff0c\u200b\u518d\u89c1\u200b</li> </ul> </li> </ol>"},{"location":"japanese/japanese-1-pattern/#7","title":"\u7b2c\u200b7\u200b\u8bfe","text":"<ol> <li>\u300c\u200b\u5931\u793c\u200b\u3057\u307e\u3057\u305f\u300d\uff1a\u200b\u4e0d\u597d\u610f\u601d\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5931\u793c\u200b\u3001\u200b\u5931\u656c\u200b\u7684\u200b\u884c\u4e3a\u200b\u3002</li> <li>\u300c\u304a\u200b\u4e16\u8a71\u200b\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u300d\uff1a\u200b\u611f\u8c22\u60a8\u200b\u4e00\u76f4\u200b\u4ee5\u6765\u200b\u7684\u200b\u7167\u987e\u200b\u3002</li> <li>\u200b\u4ecb\u7ecd\u200b\u5bb6\u5ead\u6210\u5458\u200b<ul> <li>\u300c\u200b\u5fa1\u5b85\u200b\u300d\u200b\u7528\u4e8e\u200b\u5c0a\u79f0\u200b\u5bf9\u65b9\u200b\u7684\u200b\u5bb6\u5ead\u200b\uff0c\u300c\u3046\u3061\u300d\u200b\u7528\u4e8e\u200b\u79f0\u547c\u200b\u81ea\u5df1\u200b\u7684\u200b\u5bb6\u5ead\u200b\u3002</li> <li>\u300cA\u306b\u306f\uff5e\u304c\u3044\u307e\u3059\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200bA\u200b\u6709\u200b\uff5e\u200b\u5bb6\u5ead\u6210\u5458\u200b\uff0c\u200b\u5982\u679c\u200b\u6709\u200b\u591a\u4f4d\u200b\uff0c\u200b\u5219\u200b\u5728\u200b\u300c\u304c\u300d\u200b\u540e\u52a0\u200b\u6570\u91cf\u8bcd\u200b\uff0c\u300c\u3068\u300d\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u5e76\u5217\u200b\u3002</li> </ul> </li> <li>\u300c\u305d\u3046\u306a\u3093\u3067\u3059\u300d\uff1a\u200b\u8868\u793a\u200b\u53cd\u590d\u200b\u786e\u8ba4\u200b\u540e\u200b\u7684\u200b\u5f3a\u8c03\u200b\u3002</li> </ol>"},{"location":"japanese/japanese-1-pattern/#8","title":"\u7b2c\u200b8\u200b\u8bfe","text":"<ol> <li>\u300c\u301c\u3067\u200b\u5b9c\u200b\u3057\u3044\u3067\u3059\u304b\u300d\u200b\u7528\u4e8e\u200b\u5411\u200b\u5bf9\u65b9\u200b\u786e\u8ba4\u200b\uff5e\u200b\u4e2d\u200b\u7684\u200b\u5185\u5bb9\u200b\u662f\u5426\u200b\u5408\u9002\u200b\u3002\u200b\u53ef\u4ee5\u200b\u5982\u4e0b\u200b\u56de\u7b54\u200b<ul> <li>\u300c\u306f\u3044\u3001\u200b\u5927\u4e08\u592b\u200b\u3067\u3059\u3002\u300d</li> <li>\u300c\u306f\u3044\u3001\u304a\u200b\u9858\u200b\u3044\u3057\u307e\u3059\u3002\u300d</li> </ul> </li> <li>\u200b\u8d2d\u7269\u200b<ul> <li>\u200b\u63d0\u51fa\u200b\u9700\u6c42\u200b\uff1a\u300c\u301c\u306f\u3042\u308a\u307e\u3059\u304b\u300d\u3001\u300c\u301c\u3092\u304f\u3060\u3055\u3044\u300d\u3001\u300c\u301c\u3092\u304a\u200b\u9858\u200b\u3044\u3057\u307e\u3059\u300d\u3002</li> <li>\u200b\u8be2\u95ee\u200b\u4ef7\u683c\u200b\uff1a\u300c\u301c\uff08\u304a\uff09\u3044\u304f\u3089\u3067\u3059\u304b\u300d</li> <li>\u200b\u9009\u62e9\u200b\uff1a\u300c\u301c\u306b\u3057\u307e\u3059\u300d\u3001\u300c\u301c\u3067\u300d</li> </ul> </li> <li>\u200b\u5c31\u9910\u200b<ul> <li>\u200b\u9910\u524d\u200b\uff1a\u300c\u3044\u305f\u3060\u304d\u307e\u3059\u300d\uff1a\u200b\u6211\u8981\u200b\u5f00\u59cb\u200b\u5403\u200b\u4e86\u200b\u3002</li> <li>\u200b\u9910\u540e\u200b\uff1a\u300c\u3054\u200b\u99b3\u200b\u8d70\u200b\u69d8\u200b\u3067\u3057\u305f\u300d\uff1a\u200b\u60a8\u200b\u7684\u200b\u6b3e\u5f85\u200b\u771f\u662f\u200b\u592a\u597d\u4e86\u200b\u3002</li> </ul> </li> <li>\u300c\u3054\u3061\u3085\u3046\u3082\u3093\u306f\uff1f\u300d\uff1a\u200b\u60a8\u200b\u70b9\u200b\u4ec0\u4e48\u200b\uff1f</li> </ol>"},{"location":"japanese/japanese-1-pattern/#9","title":"\u7b2c\u200b9\u200b\u8bfe","text":"<ol> <li>\u300c\u304a\u200b\u4e45\u200b\u3057\u3076\u308a\u3067\u3059\u300d\uff1a\u200b\u597d\u4e45\u4e0d\u89c1\u200b</li> <li>\u300c\uff08\u305d\u308c\u306f\uff09\u3088\u304b\u3063\u305f\u3067\u3059\u306d\u300d\uff1a\u200b\u592a\u597d\u4e86\u200b<ul> <li>\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u81ea\u5df1\u200b\uff0c\u200b\u5bf9\u200b\u81ea\u5df1\u200b\u65f6\u4e0d\u52a0\u200b\u300c\u306d\u300d</li> </ul> </li> <li>\u300c\u200b\u52c9\u5f37\u200b\u306b\u306a\u308a\u307e\u3059\u300d\uff1a\u200b\u53d7\u76ca\u532a\u6d45\u200b</li> <li>\u300c\u200b\u9811\u5f35\u200b\u3063\u3066\uff08\u304f\u3060\u3055\u3044\uff09\u300d\uff1a\u200b\u52a0\u6cb9\u200b</li> <li>\u300c\u304a\u305f\u3093\u3058\u3087\u3046\u3073\u306f\u3044\u3064\u3067\u3059\u304b\u300d\uff1a\u200b\u60a8\u200b\u7684\u200b\u751f\u65e5\u200b\u662f\u200b\u4ec0\u4e48\u200b\u65f6\u5019\u200b\uff1f<ul> <li>\u300c\u200b\u79c1\u200b\u306e\u200b\u8a95\u200b\u751f\u65e5\u200b\u306f\u306a\u306a\u304c\u3064\u306b\u3058\u3085\u3046\u308d\u304f\u306b\u3061\u3067\u3059\u300d\uff1a\u200b\u6211\u200b\u7684\u200b\u751f\u65e5\u200b\u662f\u200b7\u200b\u6708\u200b26\u200b\u65e5\u200b\u3002</li> </ul> </li> <li>\u300c\u304a\u3081\u3067\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u300d\uff1a\u200b\u606d\u559c\u200b\u60a8\u200b</li> </ol>"},{"location":"japanese/japanese-1-pattern/#10","title":"\u7b2c\u200b10\u200b\u8bfe","text":"<ol> <li>\u300c\u301c\u306f\u200b\u7a7a\u200b\u3044\u3066\u3044\u307e\u3059\u300d\uff1a\uff5e\u200b\u6709\u7a7a\u200b</li> <li>\u300c\u301c\u305f\u3044\u3067\u3059\u300d\uff1a\u200b\u60f3\u8981\u200b\uff5e</li> <li>\u300c\u301c\u304c\u200b\u697d\u200b\u3057\u307f\u3067\u3059\u300d\uff1a\uff5e\u200b\u4ee4\u4eba\u200b\u671f\u5f85\u200b</li> <li>\u200b\u63d0\u51fa\u200b\u9080\u8bf7\u200b\uff1a<ul> <li>\u300c\uff08\u200b\u4e00\u7dd2\u200b\u306b\uff09\u301c\u307e\u3057\u3087\u3046\u304b\u300d\uff1a\u200b\u4e00\u8d77\u200b\uff5e\u200b\u5427\u200b\uff1f</li> <li>\u300c\u301c\u306f\u3069\u3046\u3067\u3059\u304b\u300d\uff1a\uff5e\u200b\u600e\u4e48\u6837\u200b\uff1f</li> <li>\u300c\u301c\u304c\u3044\u3044\u3067\u3059\u304b\u300d\uff1a\uff5e\u200b\u597d\u200b\u5417\u200b\uff1f\uff08\uff5e\u200b\u5fc5\u987b\u200b\u662f\u200b\u7591\u95ee\u8bcd\u200b\uff09</li> </ul> </li> <li>\u200b\u56de\u7b54\u200b\u9080\u8bf7\u200b<ul> <li>\u200b\u63a5\u53d7\u200b\u9080\u8bf7\u200b\uff1a\u300c\u306f\u3044\u3001\u3044\u3044\u3067\u3059\u306d\u300d\u3001\u300c\u305d\u3057\u307e\u3057\u3087\u3046\u300d</li> <li>\u200b\u62d2\u7edd\u200b\u9080\u8bf7\u200b\uff1a\u300c\u3059\u307f\u307e\u305b\u3093\u3001\u3061\u3087\u3063\u3068\u2026\u2026\u300d\u3001\u300c\u3044\u3044\u3048\u3001\u3051\u3063\u3053\u3046\u3067\u3059\u3002\u300d\u3001\u300c\u3044\u3044\u3067\u3059\u300d</li> </ul> </li> </ol>"},{"location":"japanese/japanese-1-pattern/#11","title":"\u7b2c\u200b11\u200b\u8bfe","text":"<ol> <li>\u300c\u200b\u5168\u7136\u200b\u301c\u300d\uff1a\u200b\u5b8c\u5168\u200b\u4e0d\u200b\uff5e\uff0c\u200b\u7528\u4e8e\u200b\u5426\u5b9a\u53e5\u200b\u3002</li> <li>\u300c\u305d\u3046\u306a\u3093\u3067\u3059\u304b\u300d\uff1a\u200b\u662f\u200b\u5417\u200b\uff1f\u200b\u8868\u793a\u200b\u66f4\u200b\u60ca\u8bb6\u200b\u7684\u200b\u8bed\u6c14\u200b\u3002</li> </ol>"},{"location":"japanese/japanese-1-pattern/#12","title":"\u7b2c\u200b12\u200b\u8bfe","text":"<ol> <li>\u300c\uff08\u3059\u307f\u307e\u305b\u3093\u3001\uff09\u301c\u3066\u304f\u3060\u3055\u3044\u300d\uff1a\u200b\u8bf7\u200b\uff5e</li> <li>\u300c\u301c\u3066\u304f\u3060\u3055\u3044\u307e\u305b\u3093\u304b\u300d\uff1a\u200b\u8bf7\u200b\uff5e\u200b\u5417\u200b\uff1f\uff08\u200b\u7528\u4e8e\u200b\u4e0b\u7ea7\u200b\u5bf9\u200b\u4e0a\u7ea7\u200b\uff09</li> </ol>"},{"location":"japanese/japanese-1-pattern/#1311","title":"\u7b2c\u200b13\u200b\u8bfe\u200b\uff08\u200b\u65b0\u4e16\u7eaa\u200b\u521d\u7ea7\u200b\u7b2c\u200b11\u200b\u8bfe\u200b\uff09","text":"<ol> <li>\u300c\u200b\u6559\u200b\u3048\u3066\u304f\u3060\u3055\u3044\u300d\uff1a\u200b\u8bf7\u200b\u544a\u8bc9\u200b\u6211\u200b</li> <li>\u300c\u200b\u5b89\u5fc3\u200b\u3057\u3066\u304f\u3060\u3055\u3044\u300d\uff1a\u200b\u8bf7\u200b\u653e\u5fc3\u200b</li> <li>\u300c\u3067\u306f\u3001\u304a\u200b\u5143\u200b\u6c17\u200b\u3067\u300d\uff1a\u200b\u90a3\u4e48\u200b\uff0c\u200b\u4fdd\u91cd\u200b</li> <li>\u300c\u3054\u200b\u5bb6\u65cf\u200b\u306e\u200b\u7686\u200b\u69d8\u200b\u306b\u3082\u3088\u308d\u3057\u304f\u300d\uff1a\u200b\u8bf7\u4ee3\u200b\u6211\u200b\u5411\u200b\u60a8\u200b\u7684\u200b\u5bb6\u4eba\u200b\u95ee\u597d\u200b</li> <li>\u300c\u3069\u3046\u3082\u300d\uff1a\u200b\u975e\u5e38\u611f\u8c22\u200b</li> </ol>"},{"location":"japanese/japanese-1-vocab/","title":"\u65e5\u8bed\u200b(1) \u200b\u5355\u8bcd\u8868","text":""},{"location":"japanese/japanese-1-vocab/#_1","title":"\u52a8\u8bcd","text":"I\u200b\u7c7b\u200b\u52a8\u8bcd\u200bII\u200b\u7c7b\u200b\u52a8\u8bcd\u200bIII\u200b\u7c7b\u200b\u52a8\u8bcd\u200b \u200b\u52a8\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u5206\u7c7b\u200b \u200b\u542b\u4e49\u200b \u200b\u9055\u200b\u3046 \u3061\u304c\u3046 \u200b\u81ea\u200bI \u200b\u4e0d\u662f\u200b \u200b\u5408\u200b\u3046 \u3042\u3046 \u200b\u81ea\u200bI \u200b\u5408\u9002\u200b \u200b\u4ed8\u200b\u304d\u200b\u5408\u200b\u3046 \u3064\u304d\u3042\u3046 \u200b\u81ea\u200bI \u200b\u4ea4\u5f80\u200b \u3053\u305f\u308f\u308b \u200b\u81ea\u200bI \u200b\u8bb2\u7a76\u200b \u200b\u9811\u5f35\u200b\u308b \u304c\u3093\u3070\u308b \u200b\u81ea\u200bI \u200b\u52a0\u6cb9\u200b \u200b\u884c\u200b\u304f \u3044\u304f \u200b\u81ea\u200bI \u200b\u53bb\u200b \u200b\u7a7a\u200b\u304f \u3042\u304f \u200b\u81ea\u200bI \u200b\u7a7a\u95f2\u200b \u200b\u5206\u200b\u304b\u308b \u308f\u304b\u308b \u200b\u81ea\u200bI \u200b\u660e\u767d\u200b \u304b\u304b\u308b \u200b\u81ea\u200bI \u200b\u82b1\u8d39\u200b \u200b\u5e30\u200b\u308b \u304b\u3048\u308b \u200b\u81ea\u200bI \u200b\u56de\u5bb6\u200b \u200b\u8981\u200b\u308b \u3044\u308b \u200b\u81ea\u200bI \u200b\u9700\u8981\u200b \u200b\u6e07\u200b\u304f \u304b\u308f\u304f \u200b\u81ea\u200bI \u200b\u53e3\u6e34\u200b \u200b\u7b11\u200b\u3046 \u308f\u3089\u3046 \u200b\u81ea\u200bI \u200b\u7b11\u200b \u200b\u6b8b\u200b\u308b \u306e\u3053\u308b \u200b\u81ea\u200bI \u200b\u5269\u4e0b\u200b \u200b\u558b\u200b\u308b \u3057\u3083\u3079\u308b \u200b\u4ed6\u200bI \u200b\u804a\u5929\u200b \u200b\u4f7f\u200b\u3046 \u3064\u304b\u3046 \u200b\u4ed6\u200bI \u200b\u4f7f\u7528\u200b \u200b\u7533\u200b\u3059 \u3082\u3046\u3059 \u200b\u4ed6\u200bI \u200b\u53eb\u200b \u200b\u8aad\u200b\u3080 \u3088\u3080 \u200b\u4ed6\u200bI \u200b\u8bfb\u200b \u200b\u64ae\u200b\u308b \u3068\u308b \u200b\u4ed6\u200bI \u200b\u62cd\u7167\u200b \u200b\u4f5c\u200b\u308b \u3064\u304f\u308b \u200b\u4ed6\u200bI \u200b\u505a\u200b \u200b\u98f2\u200b\u3080 \u306e\u3080 \u200b\u4ed6\u200bI \u200b\u559d\u200b \u200b\u5f85\u200b\u3064 \u307e\u3064 \u200b\u4ed6\u200bI \u200b\u7b49\u5f85\u200b \u200b\u9078\u200b\u3076 \u3048\u3089\u3076 \u200b\u4ed6\u200bI \u200b\u9009\u62e9\u200b \u200b\u601d\u200b\u3046 \u304a\u3082\u3046 \u200b\u4ed6\u200bI \u200b\u8ba4\u4e3a\u200b \u200b\u8a00\u200b\u3046 \u3044\u3046 \u200b\u4ed6\u200bI \u200b\u8bf4\u200b \u200b\u904e\u200b\u3054\u3059 \u3059\u3054\u3059 \u200b\u4ed6\u200bI \u200b\u5ea6\u8fc7\u200b \u200b\u52a8\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u5206\u7c7b\u200b \u200b\u542b\u4e49\u200b \u3044\u308b \u200b\u81ea\u200bII \u200b\u6709\u200b \u200b\u9045\u200b\u308c\u308b \u304a\u304f\u308c\u308b \u200b\u81ea\u200bII \u200b\u8fdf\u5230\u200b \u200b\u53d7\u200b\u3051\u308b \u3046\u3051\u308b \u200b\u4ed6\u200bII \u200b\u53c2\u52a0\u200b \u200b\u6559\u200b\u3048\u308b \u304a\u3057\u3048\u308b \u200b\u4ed6\u200bII \u200b\u6559\u200b \u200b\u898b\u200b\u308b \u307f\u308b \u200b\u4ed6\u200bII \u200b\u770b\u200b \u200b\u98df\u200b\u3079\u308b \u305f\u3079\u308b \u200b\u4ed6\u200bII \u200b\u5403\u200b \u200b\u958b\u200b\u3051\u308b \u3042\u3051\u308b \u200b\u4ed6\u200bII \u200b\u6253\u5f00\u200b \u200b\u52a8\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u5206\u7c7b\u200b \u200b\u542b\u4e49\u200b \u304f\u308b \u200b\u81ea\u200bIII \u200b\u6765\u200b \u3059\u308b \u200b\u81ea\u4ed6\u200bIII \u200b\u505a\u200b \u200b\u7d39\u4ecb\u200b\u3059\u308b \u3057\u3087\u3046\u304b\u3044\u3059\u308b \u200b\u4ed6\u200bIII \u200b\u4ecb\u7ecd\u200b \u200b\u5931\u793c\u200b\u3059\u308b \u3057\u3064\u308c\u3044\u3059\u308b \u200b\u81ea\u200bIII \u200b\u5931\u793c\u200b \u200b\u4f1a\u8a08\u200b\u3059\u308b \u304b\u3044\u3051\u3044\u3059\u308b \u200b\u4ed6\u200bIII \u200b\u7ed3\u8d26\u200b \u200b\u6ce8\u6587\u200b\u3059\u308b \u3061\u3085\u3046\u3082\u3093\u3059\u308b \u200b\u4ed6\u200bIII \u200b\u70b9\u83dc\u200b \u200b\u55b6\u200b\u696d\u200b\u3059\u308b \u3048\u3044\u304e\u3087\u3046\u3059\u308b \u200b\u81ea\u4ed6\u200bIII \u200b\u8425\u4e1a\u200b \u200b\u52c9\u5f37\u200b\u3059\u308b \u3079\u3093\u304d\u3087\u3046\u3059\u308b \u200b\u81ea\u4ed6\u200bIII \u200b\u5b66\u4e60\u200b \u200b\u5408\u683c\u200b\u3059\u308b \u3054\u3046\u304b\u304f\u3059\u308b \u200b\u81ea\u200bIII \u200b\u5408\u683c\u200b\u3001\u200b\u901a\u8fc7\u200b \u200b\u7559\u5b66\u200b\u3059\u308b \u308a\u3085\u3046\u304c\u304f\u3059\u308b \u200b\u81ea\u200bIII \u200b\u7559\u5b66\u200b \u200b\u6599\u7406\u200b\u3059\u308b \u308a\u3087\u3046\u308a\u3059\u308b \u200b\u4ed6\u200bIII \u200b\u505a\u996d\u200b \u200b\u98df\u4e8b\u200b\u3059\u308b \u3057\u3087\u304f\u3058\u3059\u308b \u200b\u81ea\u200bIII \u200b\u5403\u996d\u200b \u200b\u9762\u63a5\u200b\u3059\u308b \u3081\u3093\u305b\u3064\u3059\u308b \u200b\u81ea\u200bIII \u200b\u9762\u8bd5\u200b \u200b\u52aa\u529b\u200b\u3059\u308b \u3069\u308a\u3087\u304f\u3059\u308b \u200b\u81ea\u200bIII \u200b\u52aa\u529b\u200b \u200b\u81ea\u708a\u200b\u3059\u308b \u3058\u3059\u3044\u3059\u308b \u200b\u81ea\u200bIII \u200b\u81ea\u5df1\u200b\u505a\u996d\u200b \u200b\u8cea\u554f\u200b\u3059\u308b \u3057\u3064\u3082\u3093\u3059\u308b \u200b\u81ea\u4ed6\u200bIII \u200b\u63d0\u95ee\u200b \u200b\u904b\u52d5\u200b\u3059\u308b \u3046\u3093\u3069\u3046\u3059\u308b \u200b\u81ea\u200bIII \u200b\u8fd0\u52a8\u200b \u200b\u7df4\u7fd2\u200b\u3059\u308b \u308c\u3093\u3057\u3085\u3046\u3059\u308b \u200b\u4ed6\u200bIII \u200b\u7ec3\u4e60\u200b \u200b\u904b\u200b\u8ee2\u200b\u3059\u308b \u3046\u3093\u3066\u3093\u3059\u308b \u200b\u81ea\u4ed6\u200bIII \u200b\u5f00\u8f66\u200b \u200b\u6c7a\u5b9a\u200b\u3059\u308b \u3051\u3063\u3066\u3044\u3059\u308b \u200b\u4ed6\u200bIII \u200b\u51b3\u5b9a\u200b \u200b\u6765\u200b\u65e5\u200b\u3059\u308b \u3089\u3044\u306b\u3061\u3059\u308b \u200b\u81ea\u200bIII \u200b\u6765\u200b\u65e5\u672c\u200b \u200b\u5230\u200b\u7740\u200b\u3059\u308b \u3068\u3046\u3061\u3083\u304f\u3059\u308b \u200b\u81ea\u200bIII \u200b\u5230\u8fbe\u200b \u200b\u4e88\u5b9a\u200b\u3059\u308b \u3088\u3066\u3044\u3059\u308b \u200b\u4ed6\u200bIII \u200b\u9884\u5b9a\u200b \u200b\u5c31\u200b\u8077\u200b\u3059\u308b \u3057\u3085\u3046\u3057\u3087\u304f\u3059\u308b \u200b\u81ea\u200bIII \u200b\u5c31\u804c\u200b \u200b\u8cbf\u6613\u200b\u3059\u308b \u307c\u3046\u3048\u304d\u3059\u308b \u200b\u81ea\u200bIII \u200b\u8d38\u6613\u200b \u200b\u6b8b\u696d\u200b\u3059\u308b \u3056\u3093\u304e\u3087\u3046\u3059\u308b \u200b\u81ea\u200bIII \u200b\u52a0\u73ed\u200b \u200b\u5fc3\u914d\u200b\u3059\u308b \u3057\u3093\u3071\u3044\u3059\u308b \u200b\u81ea\u4ed6\u200bIII \u200b\u62c5\u5fc3\u200b \u200b\u5b89\u5fc3\u200b\u3059\u308b \u3042\u3093\u3057\u3093\u3059\u308b \u200b\u81ea\u200bIII \u200b\u5b89\u5fc3\u200b \u200b\u65c5\u884c\u200b\u3059\u308b \u308a\u3087\u3053\u3046\u3059\u308b \u200b\u81ea\u200bIII \u200b\u65c5\u884c\u200b \u200b\u8a66\u200b\u9a13\u200b\u3059\u308b \u3057\u3051\u3093\u3059\u308b \u200b\u4ed6\u200bIII \u200b\u8003\u8bd5\u200b \u200b\u6848\u5185\u200b\u3059\u308b \u3042\u3093\u306a\u3044\u3059\u308b \u200b\u4ed6\u200bIII \u200b\u966a\u540c\u200b\u6e38\u89c8"},{"location":"japanese/japanese-1-vocab/#_2","title":"\u5f62\u5bb9\u8bcd","text":"I\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200bII\u200b\u7c7b\u200b\u5f62\u5bb9\u8bcd\u200b \u200b\u5f62\u5bb9\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5b89\u200b\u3044 \u3084\u3059\u3044 \u200b\u4fbf\u5b9c\u200b \u200b\u5b9c\u200b\u3057\u3044 \u3088\u308d\u3057\u3044 \u200b\u597d\u200b \u200b\u5fd9\u200b\u3057\u3044 \u3044\u305d\u304c\u3057\u3044 \u200b\u5fd9\u200b \u200b\u697d\u200b\u3057\u3044 \u305f\u306e\u3057\u3044 \u200b\u5f00\u5fc3\u200b \u200b\u591a\u200b\u3044 \u304a\u304a\u3044 \u200b\u591a\u200b \u200b\u53b3\u200b\u3057\u3044 \u304d\u3073\u3057\u3044 \u200b\u4e25\u683c\u200b \u200b\u65b0\u200b\u3057\u3044 \u3042\u305f\u3089\u3057\u3044 \u200b\u65b0\u200b \u200b\u7f8e\u5473\u200b\u3057\u3044 \u304a\u3044\u3057\u3044 \u200b\u597d\u5403\u200b \u200b\u512a\u200b\u3057\u3044 \u3084\u3055\u3057\u3044 \u200b\u6e29\u67d4\u200b \u200b\u5927\u200b\u304d\u3044 \u304a\u304a\u304d\u3044 \u200b\u5927\u200b \u200b\u9ad8\u200b\u3044 \u305f\u304b\u3044 \u200b\u9ad8\u200b \u200b\u9762\u767d\u200b\u3044 \u304a\u3082\u3057\u308d\u3044 \u200b\u6709\u8da3\u200b \u200b\u96e3\u200b\u3057\u3044 \u3080\u305a\u304b\u3057\u3044 \u200b\u96be\u200b \u200b\u9577\u200b\u3044 \u306a\u304c\u3044 \u200b\u957f\u200b \u3059\u3054\u3044 \u200b\u5389\u5bb3\u200b \u200b\u7fa8\u200b\u307e\u3057\u3044 \u3046\u3089\u3084\u307e\u3057\u3044 \u200b\u7fa1\u6155\u200b \u200b\u6065\u200b\u305a\u304b\u3057\u3044 \u306f\u305a\u304b\u3057\u3044 \u200b\u5bb3\u7f9e\u200b \u200b\u6016\u200b\u3044 \u3053\u308f\u3044 \u200b\u5bb3\u6015\u200b \u200b\u5c11\u200b\u306a\u3044 \u3059\u304f\u306a\u3044 \u200b\u5c11\u200b \u200b\u60aa\u200b\u3044 \u308f\u308b\u3044 \u200b\u574f\u200b \u200b\u5bd2\u200b\u3044 \u3055\u3080\u3044 \u200b\u51b7\u200b \u200b\u75db\u200b\u3044 \u3044\u305f\u3044 \u200b\u75bc\u200b \u200b\u901f\u200b\u3044 \u306f\u3084\u3044 \u200b\u5feb\u200b \u200b\u5e83\u200b\u3044 \u3072\u308d\u3044 \u200b\u5bbd\u200b \u200b\u9045\u200b\u3044 \u304a\u305d\u3044 \u200b\u6162\u200b \u200b\u8efd\u200b\u3044 \u304b\u308b\u3044 \u200b\u8f7b\u200b \u200b\u604b\u200b\u3057\u3044 \u3053\u3044\u3057\u3044 \u200b\u7231\u6155\u200b \u200b\u7518\u200b\u3044 \u3042\u307e\u3044 \u200b\u751c\u200b \u200b\u6dbc\u200b\u3057\u3044 \u3059\u305a\u3057\u3044 \u200b\u51c9\u723d\u200b \u200b\u6691\u200b\u3044 \u3042\u3064\u3044 \u200b\u70ed\u200b \u3046\u307e\u3089\u306a\u3044 \u200b\u65e0\u804a\u200b\u7684\u200b \u200b\u61d0\u200b\u304b\u3057\u3044 \u306a\u3064\u304b\u3057\u3044 \u200b\u6000\u5ff5\u200b \u200b\u7d20\u6674\u200b\u3089\u3057\u3044 \u3059\u3070\u3089\u3057\u3044 \u200b\u68d2\u200b \u200b\u73cd\u200b\u3057\u3044 \u3081\u305a\u3089\u3057\u3044 \u200b\u7a00\u6709\u200b \u200b\u826f\u200b\u3044 \u3088\u3044 \u200b\u597d\u200b \u200b\u5f62\u5bb9\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5acc\u200b\u3044 \u304d\u3089\u3044 \u200b\u8ba8\u538c\u200b \u200b\u8272\u200b\u3005\u200b \u3044\u308d\u3044\u308d \u200b\u5404\u79cd\u5404\u6837\u200b \u305d\u3063\u304f\u308a \u200b\u4e00\u6a21\u4e00\u6837\u200b \u200b\u5931\u793c\u200b \u3057\u3064\u308c\u3044 \u200b\u5931\u793c\u200b \u200b\u5927\u200b\u5909\u200b \u305f\u3044\u3078\u3093 \u200b\u975e\u5e38\u200b \u200b\u5225\u200b\u3005\u200b \u3079\u3064\u3079\u3064 \u200b\u5206\u5f00\u200b \u200b\u5927\u4e08\u592b\u200b \u3060\u3044\u3058\u3087\u3046\u3076 \u200b\u6ca1\u5173\u7cfb\u200b \u200b\u4e45\u200b\u3057\u3076\u308a \u3072\u3055\u3057\u3076\u308a \u200b\u76f8\u9694\u200b\u8bb8\u4e45\u200b \u200b\u81ea\u7531\u200b \u3058\u3086\u3046 \u200b\u81ea\u7531\u200b \u200b\u5143\u200b\u6c17\u200b \u3052\u3093\u304d \u200b\u7cbe\u795e\u200b \u200b\u9759\u200b\u304b \u3057\u305a\u304b \u200b\u5b89\u9759\u200b \u200b\u4e0a\u200b\u624b\u200b \u3058\u3087\u3046\u305a \u200b\u719f\u7ec3\u200b \u200b\u597d\u200b\u304d \u3059\u304d \u200b\u559c\u6b22\u200b \u200b\u697d\u200b\u3057\u307f \u305f\u306e\u3057\u307f \u200b\u671f\u5f85\u200b \u200b\u89aa\u5207\u200b \u3057\u3093\u305b\u3064 \u200b\u4eb2\u5207\u200b \u200b\u7d50\u69cb\u200b \u3051\u3063\u3053\u3046 \u200b\u5f88\u200b\u597d\u200b \u200b\u6b8b\u5ff5\u200b \u3056\u3093\u306d\u3093 \u200b\u9057\u61be\u200b \u304a\u200b\u6d12\u843d\u200b \u304a\u3057\u3083\u308c \u200b\u65f6\u9ae6\u200b \u200b\u7dba\u9e97\u200b \u304d\u308c\u3044 \u200b\u6f02\u4eae\u200b \u200b\u771f\u9762\u76ee\u200b \u307e\u3058\u3081 \u200b\u8ba4\u771f\u200b \u307a\u3089\u307a\u3089 \u200b\u6d41\u5229\u200b \u200b\u52e4\u52c9\u200b \u304d\u3093\u3079\u3093 \u200b\u52e4\u594b\u200b \u200b\u91cd\u8981\u200b \u3058\u3085\u3046\u3088\u3046 \u200b\u91cd\u8981\u200b \u200b\u5927\u4e8b\u200b \u3060\u3044\u3058 \u200b\u91cd\u8981\u200b \u200b\u5927\u597d\u200b\u304d \u3060\u3044\u3059\u304d \u200b\u975e\u5e38\u200b\u559c\u6b22\u200b \u200b\u4fbf\u5229\u200b \u3079\u3093\u308a \u200b\u65b9\u4fbf\u200b \u200b\u6709\u540d\u200b \u3086\u3046\u3081\u3044 \u200b\u6709\u540d\u200b \u200b\u71b1\u5fc3\u200b \u306d\u3063\u3057\u3093 \u200b\u70ed\u5fc3\u200b \u200b\u82e6\u624b\u200b \u306b\u304c\u3066 \u200b\u4e0d\u200b\u64c5\u957f\u200b \u200b\u4e0b\u624b\u200b \u3078\u305f \u200b\u4e0d\u200b\u64c5\u957f\u200b \u200b\u5f97\u610f\u200b \u3068\u304f\u3044 \u200b\u64c5\u957f\u200b \u200b\u5fc3\u914d\u200b \u3057\u3093\u3071\u3044 \u200b\u62c5\u5fc3\u200b \u200b\u5b89\u5fc3\u200b \u3042\u3093\u3057\u3093 \u200b\u5b89\u5fc3\u200b \u200b\u5143\u200b\u6c17\u200b \u3052\u3093\u304d \u200b\u7cbe\u795e\u200b \u200b\u4e0d\u8981\u200b \u3075\u3088\u3046 \u200b\u4e0d\u8981\u200b \u200b\u7c21\u200b\u5358\u200b \u304b\u3093\u305f\u3093 \u200b\u7b80\u5355\u200b \u200b\u4e00\u751f\u200b\u61f8\u547d\u200b \u3044\u3063\u3057\u3087\u3046\u3051\u3093\u3081\u3044 \u200b\u62fc\u547d\u200b \u200b\u5927\u5207\u200b \u305f\u3044\u305b\u3064 \u200b\u91cd\u8981"},{"location":"japanese/japanese-1-vocab/#_3","title":"\u6570\u5b57\u200b\u3001\u200b\u65f6\u95f4\u200b\u3001\u200b\u65e5\u671f","text":""},{"location":"japanese/japanese-1-vocab/#_4","title":"\u6570\u5b57","text":"<p>\u200b\u6ce8\u610f\u200b\uff1a</p> <ol> <li>1\u200b\u4eba\u200b\u548c\u200b2\u200b\u4eba\u200b\u7684\u200b\u7279\u6b8a\u200b\u5199\u6cd5\u200b\u3002</li> <li>4\u200b\u4eba\u200b\u7684\u200b\u5199\u6cd5\u200b\u662f\u200b\u300c\u3088\u306b\u3093\u300d\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u300c\u3088\u3093\u306b\u3093\u300d\u3002</li> <li>7\u30019\u200b\u4eba\u200b\u7684\u200b\u5199\u6cd5\u200b\u6709\u200b\u4e24\u79cd\u200b\u3002</li> <li>\u300c\u3072\u3083\u304f\u300d\u200b\u548c\u200b\u300c\u305b\u3093\u300d\u200b\u53ef\u4ee5\u200b\u7528\u6765\u200b\u76f4\u63a5\u200b\u8868\u793a\u200b100\u200b\u548c\u200b1000\uff0c\u200b\u800c\u200b\u300c\u307e\u3093\u300d\u200b\u548c\u200b\u300c\u304a\u304f\u300d\u200b\u9700\u8981\u200b\u52a0\u4e0a\u200b\u300c\u3044\u3061\u300d\u200b\u6765\u200b\u8868\u793a\u200b1\u200b\u4e07\u200b\u548c\u200b1\u200b\u4ebf\u200b\u3002</li> </ol> \u200b\u6570\u5b57\u200b \u200b\u5047\u540d\u200b \u200b\u6570\u5b57\u200b \u200b\u5047\u540d\u200b 1 \u3044\u3061 1\u200b\u4eba\u200b \u3072\u3068\u308a 2 \u306b 2\u200b\u4eba\u200b \u3075\u305f\u308a 3 \u3055\u3093 3\u200b\u4eba\u200b \u3055\u3093\u306b\u3093 4 \u3088\u3093 4\u200b\u4eba\u200b \u3088\u306b\u3093 5 \u3054 5\u200b\u4eba\u200b \u3054\u306b\u3093 6 \u308d\u304f 6\u200b\u4eba\u200b \u308d\u304f\u306b\u3093 7 \u306a\u306a 7\u200b\u4eba\u200b \u3057\u3061\u306b\u3093/\u306a\u306a\u306b\u3093 8 \u306f\u3061 8\u200b\u4eba\u200b \u306f\u3061\u306b\u3093 9 \u304d\u3085\u3046 9\u200b\u4eba\u200b \u304d\u3085\u3046\u306b\u3093/\u304f\u306b\u3093 10 \u3058\u3085\u3046 10\u200b\u4eba\u200b \u3058\u3085\u3046\u306b\u3093 \u200b\u767e\u200b \u3072\u3083\u304f \u200b\u5343\u200b \u305b\u3093 \u200b\u4e07\u200b \u3044\u3061\u307e\u3093 \u200b\u5104\u200b \u304a\u304f"},{"location":"japanese/japanese-1-vocab/#_5","title":"\u91cf\u8bcd","text":"<p>\u200b\u6ce8\u610f\u200b\uff1a</p> <ol> <li>\u200b\u6570\u5b57\u200b+\u300c\u3064\u300d\u200b\u7684\u200b\u5199\u6cd5\u200b\uff0c\u200b\u9664\u4e86\u200b7\u200b\u662f\u200b\u76f4\u63a5\u200b\u52a0\u200b\u300c\u3064\u300d\u200b\u4ee5\u5916\u200b\uff0c\u200b\u5176\u4ed6\u200b\u90fd\u200b\u6709\u200b\u660e\u663e\u200b\u7684\u200b\u53d8\u5316\u200b\u3002</li> <li>\u200b\u6570\u5b57\u200b+\u300c\u200b\u500b\u200b\u3001\u200b\u672c\u200b\u3001\u200b\u518a\u200b\u300d\u200b\u7684\u200b\u5199\u6cd5\u200b\uff0c\u200b\u9664\u4e86\u200b1\u30016\u30018\u300110\u200b\u662f\u200b\u76f4\u63a5\u200b\u52a0\u200b\u300c\u200b\u500b\u200b\u300d\u200b\u4ee5\u5916\u200b\uff0c\u200b\u5176\u4ed6\u200b\u90fd\u200b\u5c06\u200b\u6570\u5b57\u200b\u8bfb\u97f3\u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u5047\u540d\u200b\u8f6c\u4e3a\u200b\u501a\u97f3\u200b\u300c\u3063\u300d\uff0c\u200b\u518d\u200b\u52a0\u200b\u300c\u200b\u500b\u200b\u300d\uff0c\u200b\u5982\u200b\u300c\u3044\u3063\u3053\u300d\u3001\u300c\u308d\u3063\u3053\u300d\u3001\u300c\u306f\u3063\u3053\u300d\u3001\u300c\u3058\u3085\u3063\u3053\u300d\u3002</li> <li>\u200b\u6570\u5b57\u200b+\u300c\u200b\u672c\u200b\u300d\u200b\u7684\u200b\u5199\u6cd5\u200b\uff0c\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b1\u30013\u30016\u30018\u300110\u200b\u9700\u8981\u200b\u5c06\u200b\u300c\u307b\u300d\u200b\u7684\u200b\u8bfb\u97f3\u200b\u53d8\u4e3a\u200b\u300c\u307d\u300d\u3002</li> <li>\u200b\u6570\u5b57\u200b+\u300c\u200b\u679a\u200b\u3001\u200b\u53f0\u200b\u300d\uff0c\u200b\u76f4\u63a5\u200b\u5728\u200b\u6570\u5b57\u200b\u540e\u9762\u200b\u52a0\u200b\u300c\u200b\u679a\u200b\u300d\u200b\u6216\u200b\u300c\u200b\u53f0\u200b\u300d\u200b\u5373\u53ef\u200b\u3002</li> </ol> \u200b\u6570\u91cf\u200b \u3064 \u200b\u500b\u200b \u200b\u672c\u200b \u200b\u518a\u200b \u200b\u679a\u200b \u200b\u53f0\u200b 1 \u3072\u3068\u3064 \u3044\u3063\u3053 \u3044\u3063\u307d\u3093 \u3044\u3063\u3055\u3064 \u3044\u3061\u307e\u3044 \u3044\u3061\u3060\u3044 2 \u3075\u305f\u3064 \u306b\u3053 \u306b\u307b\u3093 \u306b\u3055\u3064 \u306b\u307e\u3044 \u306b\u3060\u3044 3 \u307f\u3063\u3064 \u3055\u3093\u3053 \u3055\u3093\u307d\u3093 \u3055\u3093\u3055\u3064 \u3055\u3093\u307e\u3044 \u3055\u3093\u3060\u3044 4 \u3088\u3063\u3064 \u3088\u3093\u3053 \u3088\u3093\u307b\u3093 \u3088\u3093\u3055\u3064 \u3088\u3093\u307e\u3044 \u3088\u3093\u3060\u3044 5 \u3044\u3064\u3064 \u3054\u3053 \u3054\u307b\u3093 \u3054\u3055\u3064 \u3054\u307e\u3044 \u3054\u3060\u3044 6 \u3080\u3063\u3064 \u308d\u3063\u3053 \u308d\u3063\u307d\u3093 \u308d\u304f\u3055\u3064 \u308d\u304f\u307e\u3044 \u308d\u304f\u3060\u3044 7 \u306a\u306a\u3064 \u306a\u306a\u3053 \u306a\u306a\u307b\u3093 \u306a\u306a\u3055\u3064 \u306a\u306a\u307e\u3044 \u306a\u306a\u3060\u3044 8 \u3084\u3063\u3064 \u306f\u3063\u3053 \u306f\u3063\u307d\u3093 \u306f\u3063\u3055\u3064 \u306f\u3061\u307e\u3044 \u306f\u3061\u3060\u3044 9 \u3053\u3053\u306e\u3064 \u304d\u3085\u3046\u3053 \u304d\u3085\u3046\u307b\u3093 \u304d\u3085\u3046\u3055\u3064 \u304d\u3085\u3046\u307e\u3044 \u304d\u3085\u3046\u3060\u3044 10 \u3068\u304a \u3058\u3085\u3063\u3053 \u3058\u3085\u3063\u307d\u3093 \u3058\u3085\u3063\u3055\u3064 \u3058\u3085\u3046\u307e\u3044 \u3058\u3085\u3046\u3060\u3044"},{"location":"japanese/japanese-1-vocab/#_6","title":"\u5c0f\u65f6","text":"<p>\u200b\u534a\u5c0f\u65f6\u200b\u5728\u200b\u300c\u200b\u6642\u9593\u200b\u300d\u200b\u540e\u52a0\u200b\u300c\u200b\u534a\u200b\uff08\u306f\u3093\uff09\u300d\u200b\u5373\u53ef\u200b\u3002</p> \u200b\u65f6\u95f4\u200b \u200b\u5047\u540d\u200b \u200b\u65f6\u95f4\u200b \u200b\u5047\u540d\u200b \u200b\u65f6\u95f4\u200b \u200b\u5047\u540d\u200b 1\u200b\u6642\u9593\u200b \u3044\u3061\u3058\u304b\u3093 9\u200b\u6642\u9593\u200b \u304f\u3058\u304b\u3093 17\u200b\u6642\u9593\u200b \u3058\u3085\u3046\u306a\u306a\u3058\u304b\u3093 2\u200b\u6642\u9593\u200b \u306b\u3058\u304b\u3093 10\u200b\u6642\u9593\u200b \u3058\u3085\u3046\u3058\u304b\u3093 18\u200b\u6642\u9593\u200b \u3058\u3085\u3046\u306f\u3061\u3058\u304b\u3093 3\u200b\u6642\u9593\u200b \u3055\u3093\u3058\u304b\u3093 11\u200b\u6642\u9593\u200b \u3058\u3085\u3046\u3044\u3061\u3058\u304b\u3093 19\u200b\u6642\u9593\u200b \u3058\u3085\u3046\u304f\u3058\u304b\u3093 4\u200b\u6642\u9593\u200b \u3088\u3058\u304b\u3093 12\u200b\u6642\u9593\u200b \u3058\u3085\u3046\u306b\u3058\u304b\u3093 20\u200b\u6642\u9593\u200b \u306b\u3058\u3085\u3046\u3058\u304b\u3093 5\u200b\u6642\u9593\u200b \u3054\u3058\u304b\u3093 13\u200b\u6642\u9593\u200b \u3058\u3085\u3046\u3055\u3093\u3058\u304b\u3093 21\u200b\u6642\u9593\u200b \u306b\u3058\u3085\u3046\u3044\u3061\u3058\u304b\u3093 6\u200b\u6642\u9593\u200b \u308d\u304f\u3058\u304b\u3093 14\u200b\u6642\u9593\u200b \u3058\u3085\u3046\u3088\u3058\u304b\u3093 22\u200b\u6642\u9593\u200b \u306b\u3058\u3085\u3046\u306b\u3058\u304b\u3093 7\u200b\u6642\u9593\u200b \u3057\u3061\u3058\u304b\u3093 15\u200b\u6642\u9593\u200b \u3058\u3085\u3046\u3054\u3058\u304b\u3093 23\u200b\u6642\u9593\u200b \u306b\u3058\u3085\u3046\u3055\u3093\u3058\u304b\u3093 8\u200b\u6642\u9593\u200b \u306f\u3061\u3058\u304b\u3093 16\u200b\u6642\u9593\u200b \u3058\u3085\u3046\u308d\u304f\u3058\u304b\u3093 24\u200b\u6642\u9593\u200b \u306b\u3058\u3085\u3046\u3088\u3058\u304b\u3093"},{"location":"japanese/japanese-1-vocab/#_7","title":"\u5206\u949f","text":"\u65f6\u95f4\u200b \u200b\u5047\u540d\u200b \u200b\u65f6\u95f4\u200b \u200b\u5047\u540d\u200b 1\u200b\u5206\u200b \u3044\u3063\u3077\u3093 1\u200b\u5206\u534a\u200b \u3044\u3063\u3077\u3093\u306f\u3093 2\u200b\u5206\u200b \u306b\u3075\u3093 2\u200b\u5206\u534a\u200b \u306b\u3075\u3093\u306f\u3093 3\u200b\u5206\u200b \u3055\u3093\u3077\u3093 3\u200b\u5206\u534a\u200b \u3055\u3093\u3077\u3093\u306f\u3093 4\u200b\u5206\u200b \u3088\u3093\u3077\u3093 4\u200b\u5206\u534a\u200b \u3088\u3093\u3077\u3093\u306f\u3093 5\u200b\u5206\u200b \u3054\u3075\u3093 5\u200b\u5206\u534a\u200b \u3054\u3075\u3093\u306f\u3093 6\u200b\u5206\u200b \u308d\u3063\u3077\u3093 6\u200b\u5206\u534a\u200b \u308d\u3063\u3077\u3093\u306f\u3093 7\u200b\u5206\u200b \u306a\u306a\u3075\u3093 7\u200b\u5206\u534a\u200b \u306a\u306a\u3075\u3093\u306f\u3093 8\u200b\u5206\u200b \u306f\u3063\u3077\u3093 8\u200b\u5206\u534a\u200b \u306f\u3063\u3077\u3093\u306f\u3093 9\u200b\u5206\u200b \u304d\u3085\u3046\u3075\u3093 9\u200b\u5206\u534a\u200b \u304d\u3085\u3046\u3075\u3093\u306f\u3093 10\u200b\u5206\u200b \u3058\u3085\u3063\u3077\u3093 10\u200b\u5206\u534a\u200b \u3058\u3085\u3063\u3077\u3093\u306f\u3093"},{"location":"japanese/japanese-1-vocab/#_8","title":"\u65e5\u671f","text":"<p>\u200b\u6ce8\u610f\u200b\uff1a1-10\u200b\u65e5\u200b\u7684\u200b\u53d8\u5316\u200b\u6bd4\u8f83\u200b\u7279\u6b8a\u200b\uff0c\u200b\u5176\u4f59\u200b\u7684\u200b\u90fd\u200b\u662f\u200b\u6570\u5b57\u200b+\u300c\u200b\u65e5\u200b\u300d\u3002</p> \u200b\u65e5\u671f\u200b \u200b\u5047\u540d\u200b \u200b\u65e5\u671f\u200b \u200b\u5047\u540d\u200b \u200b\u65e5\u671f\u200b \u200b\u5047\u540d\u200b 1\u200b\u65e5\u200b \u3064\u3044\u305f\u3061 11\u200b\u65e5\u200b \u3058\u3085\u3046\u3044\u3061\u306b\u3061 21\u200b\u65e5\u200b \u306b\u3058\u3085\u3046\u3044\u3061\u306b\u3061 2\u200b\u65e5\u200b \u3075\u3064\u304b 12\u200b\u65e5\u200b \u3058\u3085\u3046\u306b\u306b\u3061 22\u200b\u65e5\u200b \u306b\u3058\u3085\u3046\u306b\u306b\u3061 3\u200b\u65e5\u200b \u307f\u3063\u304b 13\u200b\u65e5\u200b \u3058\u3085\u3046\u3055\u3093\u306b\u3061 23\u200b\u65e5\u200b \u306b\u3058\u3085\u3046\u3055\u3093\u306b\u3061 4\u200b\u65e5\u200b \u3088\u3063\u304b 14\u200b\u65e5\u200b \u3058\u3085\u3046\u3088\u3063\u304b 24\u200b\u65e5\u200b \u306b\u3058\u3085\u3046\u3088\u3063\u304b 5\u200b\u65e5\u200b \u3044\u3064\u304b 15\u200b\u65e5\u200b \u3058\u3085\u3046\u3054\u306b\u3061 25\u200b\u65e5\u200b \u306b\u3058\u3085\u3046\u3054\u306b\u3061 6\u200b\u65e5\u200b \u3080\u3044\u304b 16\u200b\u65e5\u200b \u3058\u3085\u3046\u308d\u304f\u306b\u3061 26\u200b\u65e5\u200b \u306b\u3058\u3085\u3046\u308d\u304f\u306b\u3061 7\u200b\u65e5\u200b \u306a\u306e\u304b 17\u200b\u65e5\u200b \u3058\u3085\u3046\u3057\u3061\u306b\u3061 27\u200b\u65e5\u200b \u306b\u3058\u3085\u3046\u3057\u3061\u306b\u3061 8\u200b\u65e5\u200b \u3088\u3046\u304b 18\u200b\u65e5\u200b \u3058\u3085\u3046\u306f\u3061\u306b\u3061 28\u200b\u65e5\u200b \u306b\u3058\u3085\u3046\u306f\u3061\u306b\u3061 9\u200b\u65e5\u200b \u3053\u3053\u306e\u304b 19\u200b\u65e5\u200b \u3058\u3085\u3046\u304f\u306b\u3061 29\u200b\u65e5\u200b \u306b\u3058\u3085\u3046\u304f\u306b\u3061 10\u200b\u65e5\u200b \u3068\u304a\u304b 20\u200b\u65e5\u200b \u306f\u3064\u304b 30\u200b\u65e5\u200b \u3055\u3093\u3058\u3085\u3046\u306b\u3061 31\u200b\u65e5\u200b \u3055\u3093\u3058\u3085\u3046\u3044\u3061\u306b\u3061"},{"location":"japanese/japanese-1-vocab/#_9","title":"\u661f\u671f","text":"\u661f\u671f\u200b \u200b\u661f\u671f\u200b \u200b\u661f\u671f\u4e00\u200b \u200b\u6708\u66dc\u65e5\u200b \u3052\u3064\u3088\u3046\u3073 \u200b\u661f\u671f\u4e8c\u200b \u200b\u706b\u66dc\u65e5\u200b \u304b\u3088\u3046\u3073 \u200b\u661f\u671f\u4e09\u200b \u200b\u6c34\u66dc\u65e5\u200b \u3059\u3044\u3088\u3046\u3073 \u200b\u661f\u671f\u56db\u200b \u200b\u6728\u66dc\u65e5\u200b \u3082\u304f\u3088\u3046\u3073 \u200b\u661f\u671f\u4e94\u200b \u200b\u91d1\u66dc\u65e5\u200b \u304d\u3093\u3088\u3046\u3073 \u200b\u661f\u671f\u516d\u200b \u200b\u571f\u66dc\u65e5\u200b \u3069\u3088\u3046\u3073 \u200b\u661f\u671f\u65e5\u200b \u200b\u65e5\u66dc\u65e5\u200b \u306b\u3061\u3088\u3046\u3073"},{"location":"japanese/japanese-1-vocab/#_10","title":"\u5355\u8bcd\u8868","text":""},{"location":"japanese/japanese-1-vocab/#5","title":"\u7b2c\u200b5\u200b\u8bfe","text":"\u91cd\u70b9\u200b\u5355\u8bcd\u200b\u5176\u4ed6\u200b\u5355\u8bcd\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u3084\u3042 \u200b\u55e8\u200b \u301c\u3055\u3093 \u200b\u5148\u751f\u200b \u304a\u306f\u3088\u3046\u3054\u3056\u3044\u307e\u3059 \u200b\u65e9\u4e0a\u597d\u200b \u200b\u4eca\u65e5\u200b \u304d\u3087\u3046 \u200b\u4eca\u5929\u200b \u200b\u6388\u696d\u200b \u3058\u3085\u304e\u3087\u3046 \u200b\u8bfe\u200b \u200b\u4eca\u200b \u3044\u307e \u200b\u73b0\u5728\u200b \u200b\u90e8\u6d3b\u52d5\u200b \u3076\u304b\u3064\u3069\u3046 \u200b\u793e\u56e2\u6d3b\u52a8\u200b \u200b\u6253\u200b\u3061\u200b\u5408\u200b\u308f\u305b \u3046\u3061\u3042\u308f\u305b \u200b\u5546\u91cf\u200b \u200b\u50d5\u200b \u307c\u304f \u200b\u6211\u200b \u301c\u305f\u3061 ~\u200b\u4eec\u200b \u200b\u90e8\u6d3b\u200b \u3076\u304b\u3064 \u200b\u793e\u56e2\u200b \u200b\u59d4\u54e1\u4f1a\u200b \u3044\u3044\u3093\u304b\u3044 \u200b\u59d4\u5458\u4f1a\u200b \u30e1\u30f3\u30d0\u30fc \u200b\u6210\u5458\u200b \u200b\u7d39\u4ecb\u200b\u3057\u307e\u3059 \u3057\u3087\u3046\u304b\u3044\u3057\u307e\u3059 \u200b\u4ecb\u7ecd\u200b \u200b\u53cb\u9054\u200b \u3068\u3082\u3060\u3061 \u200b\u670b\u53cb\u200b \u200b\u5148\u8f29\u200b \u305b\u3093\u3071\u3044 \u200b\u524d\u8f88\u200b \u305d\u3046 \u200b\u662f\u200b\u7684\u200b \u200b\u521d\u200b\u3081\u307e\u3057\u3066 \u306f\u3058\u3081\u307e\u3057\u3066 \u200b\u521d\u6b21\u89c1\u9762\u200b \u3088\u308d\u3057\u304f \u200b\u8bf7\u591a\u5173\u7167\u200b \u200b\u4eca\u5e74\u200b \u3053\u3068\u3057 \u200b\u4eca\u5e74\u200b \u200b\u65b0\u5165\u751f\u200b \u3057\u3093\u306b\u3085\u3046\u305b\u3044 \u200b\u65b0\u751f\u200b \u200b\u4e2d\u56fd\u200b \u3061\u3085\u3046\u3054\u304f \u200b\u4e2d\u56fd\u200b \u304b\u3089 \u200b\u4ece\u200b \u200b\u6765\u200b\u307e\u3057\u305f \u304d\u307e\u3057\u305f \u200b\u6765\u200b \u200b\u65b9\u200b \u304b\u305f \u200b\u4eba\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u793e\u9577\u200b \u3057\u3083\u3061\u3087\u3046 \u200b\u603b\u7ecf\u7406\u200b \u3053\u3061\u3089 \u200b\u8fd9\u8fb9\u200b \u30af\u30e9\u30b9\u30e1\u30fc\u30c8 \u200b\u540c\u73ed\u540c\u5b66\u200b \u3042\u306a\u305f \u200b\u4f60\u200b \u200b\u79c1\u200b \u308f\u305f\u3057 \u200b\u6211\u200b \u200b\u5f7c\u200b \u304b\u308c \u200b\u4ed6\u200b \u200b\u5f7c\u5973\u200b \u304b\u306e\u3058\u3087 \u200b\u5979\u200b \u200b\u5148\u751f\u200b \u305b\u3093\u305b\u3044 \u200b\u8001\u5e08\u200b \u3053\u3093\u306b\u3061\u306f \u200b\u4f60\u597d\u200b \u3053\u3093\u3070\u3093\u306f \u200b\u665a\u4e0a\u200b\u597d\u200b \u200b\u7533\u200b\u3057\u307e\u3059 \u3082\u3046\u3057\u307e\u3059 \u200b\u53eb\u200b \u200b\u51fa\u8eab\u200b \u3057\u3085\u3063\u3057\u3093 \u200b\u51fa\u8eab\u200b\uff0c\u200b\u6765\u81ea\u200b \u200b\u5317\u4eac\u200b \u307a\u304d\u3093 \u200b\u5317\u4eac\u200b \u200b\u7d4c\u200b\u6e08\u200b \u3051\u3044\u3056\u3044 \u200b\u7ecf\u6d4e\u200b \u200b\u5b66\u90e8\u200b \u304c\u304f\u3076 \u200b\u7cfb\u200b \u200b\u5f8c\u200b\u8f29\u200b \u3053\u3046\u306f\u3044 \u200b\u540e\u8f88\u200b \u200b\u9055\u200b\u3044\u307e\u3059 \u3061\u304c\u3044\u307e\u3059 \u200b\u4e0d\u662f\u200b \u200b\u4e8c\u5e74\u751f\u200b \u306b\u306d\u3093\u305b\u3044 \u200b\u4e8c\u5e74\u7ea7\u200b \u200b\u4e00\u5e74\u751f\u200b \u3044\u3061\u306d\u3093\u305b\u3044 \u200b\u4e00\u5e74\u7ea7\u200b \u200b\u6771\u4eac\u200b \u3068\u3046\u304d\u3087\u3046 \u200b\u4e1c\u4eac\u200b \u200b\u4f1a\u793e\u200b\u54e1\u200b \u304b\u3044\u3057\u3083\u3044\u3093 \u200b\u516c\u53f8\u200b\u804c\u5458\u200b \u200b\u5de5\u5b66\u200b\u90e8\u200b \u3053\u3046\u304c\u304f\u3076 \u200b\u5de5\u5b66\u200b\u7cfb\u200b \u200b\u6cd5\u5b66\u90e8\u200b \u307b\u3046\u304c\u304f\u3076 \u200b\u6cd5\u5b66\u7cfb\u200b \u200b\u97d3\u56fd\u200b \u304b\u3093\u3053\u304f \u200b\u97e9\u56fd\u200b \u200b\u65e5\u672c\u200b\u4eba\u200b \u306b\u307b\u3093\u3058\u3093 \u200b\u65e5\u672c\u200b\u4eba\u200b \u200b\u5927\u200b\u5b66\u9662\u200b\u751f\u200b \u3060\u3044\u304c\u304f\u3044\u3093\u305b\u3044 \u200b\u7814\u7a76\u751f\u200b \u200b\u5b66\u90e8\u200b\u751f\u200b \u304c\u304f\u3076\u305b\u3044 \u200b\u672c\u79d1\u751f\u200b \u200b\u7559\u5b66\u751f\u200b \u308a\u3085\u3046\u304c\u304f\u305b\u3044 \u200b\u7559\u5b66\u751f\u200b \u30a2\u30e1\u30ea\u30ab \u200b\u7f8e\u56fd\u200b \u200b\u4ed5\u4e8b\u200b \u3057\u3054\u3068 \u200b\u5de5\u4f5c\u200b \u200b\u4f11\u200b\u307f \u3084\u3059\u307f \u200b\u4f11\u606f\u200b \u200b\u4e09\u5e74\u751f\u200b \u3055\u3093\u306d\u3093\u305b\u3044 \u200b\u4e09\u5e74\u7ea7\u200b \u200b\u56f3\u200b\u66f8\u9928\u200b \u3068\u3057\u3087\u304b\u3093 \u200b\u56fe\u4e66\u9986\u200b \u30a2\u30eb\u30d0\u30a4\u30c8 \u200b\u517c\u804c\u200b \u200b\u663c\u200b\u3054\u200b\u98ef\u200b \u3072\u308b\u3054\u306f\u3093 \u200b\u5348\u996d\u200b \u200b\u8a66\u200b\u9a13\u200b \u3057\u3051\u3093 \u200b\u8003\u8bd5\u200b \u200b\u65e5\u672c\u200b\u8a9e\u200b \u306b\u307b\u3093\u3054 \u200b\u65e5\u8bed\u200b \u200b\u90e8\u9577\u200b \u3076\u3061\u3087\u3046 \u200b\u90e8\u957f\u200b \u30c1\u30fc\u30e0 \u200b\u961f\u200b \u30ea\u30fc\u30c0\u30fc \u200b\u961f\u957f\u200b \u200b\u65b0\u200b\u5165\u793e\u200b\u54e1\u200b \u3057\u3093\u306b\u3085\u3046\u3057\u3083\u3044\u3093 \u200b\u65b0\u200b\u5458\u5de5\u200b \u200b\u53f8\u4f1a\u8005\u200b \u3057\u304b\u3044\u3057\u3083 \u200b\u4e3b\u6301\u4eba\u200b \u30a2\u30b7\u30b9\u30bf\u30f3\u30c8 \u200b\u52a9\u624b"},{"location":"japanese/japanese-1-vocab/#6","title":"\u7b2c\u200b6\u200b\u8bfe","text":"\u91cd\u70b9\u200b\u5355\u8bcd\u200b\u5176\u4ed6\u200b\u5355\u8bcd\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u3044\u3089\u3057\u3083\u3044\u307e\u3059 \u200b\u6765\u200b \u200b\u5c11\u200b\u3005\u200b \u3057\u3087\u3046\u3057\u3087\u3046 \u200b\u7a0d\u200b\u7b49\u200b \u304a\u200b\u5f85\u200b\u3061\u304f\u3060\u3055\u3044 \u304a\u307e\u3061\u304f\u3060\u3055\u3044 \u200b\u8bf7\u7a0d\u7b49\u200b \u200b\u5b66\u751f\u200b\u8a3c\u200b \u304c\u304f\u305b\u3044\u3057\u3087\u3046 \u200b\u5b66\u751f\u8bc1\u200b \u30e6\u30fc\u30b6\u30fc \u200b\u7528\u6237\u200b \u30a2\u30a4\u30c7\u30a3\u30fc ID \u30e6\u30fc\u30b6\u30fc\u30a2\u30a4\u30c7\u30a3\u30fc \u200b\u7528\u6237\u200bID \u305d\u308c\u304b\u3089 \u200b\u7136\u540e\u200b \u200b\u5730\u200b\u56f3\u200b \u3061\u305a \u200b\u5730\u56fe\u200b \u30d1\u30f3\u30d5\u30ec\u30c3\u30c8 \u200b\u5c0f\u518c\u5b50\u200b \u200b\u4eca\u591c\u200b \u3053\u3093\u3084 \u200b\u4eca\u665a\u200b \u200b\u61c7\u89aa\u200b\u4f1a\u200b \u3053\u3093\u3057\u3093\u304b\u3044 \u200b\u8054\u6b22\u4f1a\u200b \u200b\u4f1a\u5834\u200b \u304b\u3044\u3058\u3087\u3046 \u200b\u4f1a\u573a\u200b \u3069\u3061\u3089 \u200b\u54ea\u91cc\u200b \u200b\u7dcf\u200b\u5408\u200b\u68df\u200b \u305d\u3046\u3054\u3046\u3068\u3046 \u200b\u7efc\u5408\u697c\u200b \u301c\u304b\u3044 ~\u200b\u5c42\u200b \u200b\u8fd1\u200b\u304f \u3061\u304b\u304f \u200b\u9644\u8fd1\u200b \u307b\u3089 \u200b\u770b\u200b \u3053\u3053 \u200b\u8fd9\u91cc\u200b \u3044\u307e\u3059 \u200b\u6709\u200b \u3053\u308c\u304b\u3089 \u200b\u4ece\u200b\u73b0\u5728\u200b\u5f00\u59cb\u200b \u3053\u3061\u3089\u3053\u305d \u200b\u5f7c\u6b64\u5f7c\u6b64\u200b \u200b\u4e0a\u200b \u3046\u3048 \u200b\u4e0a\u200b \u200b\u4e0b\u200b \u3057\u305f \u200b\u4e0b\u200b \u200b\u524d\u200b \u307e\u3048 \u200b\u524d\u200b \u200b\u5f8c\u200b\u308d \u3046\u3057\u308d \u200b\u540e\u200b \u200b\u53f3\u200b \u307f\u304e \u200b\u53f3\u200b \u200b\u5de6\u200b \u3072\u3060\u308a \u200b\u5de6\u200b \u200b\u4e2d\u200b \u306a\u304b \u200b\u4e2d\u200b \u200b\u5916\u200b \u305d\u3068 \u200b\u5916\u200b \u200b\u96a3\u200b \u3068\u306a\u308a \u200b\u65c1\u8fb9\u200b \u200b\u8fd1\u200b\u304f \u3061\u304b\u304f \u200b\u9644\u8fd1\u200b \u200b\u9593\u200b \u3042\u3044\u3060 \u200b\u4e2d\u95f4\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u304a\u200b\u624b\u6d17\u200b\u3044 \u304a\u3066\u3042\u3089\u3044 \u200b\u6d17\u624b\u95f4\u200b \u200b\u5929\u200b\u6c17\u200b \u3066\u3093\u304d \u200b\u5929\u6c14\u200b \u200b\u82e6\u200b\u52b4\u200b \u304f\u308d\u3046 \u200b\u8f9b\u82e6\u200b \u307e\u305f \u200b\u53c8\u200b\uff0c\u200b\u518d\u200b \u200b\u5f8c\u200b \u3042\u3068 \u200b\u4ee5\u540e\u200b \u200b\u6765\u9031\u200b \u3089\u3044\u3057\u3085\u3046 \u200b\u4e0b\u5468\u200b \u200b\u4f55\u200b \u306a\u306b \u200b\u4ec0\u4e48\u200b \u3069\u3053 \u200b\u54ea\u91cc\u200b \u200b\u8ab0\u200b \u3060\u308c \u200b\u8c01\u200b \u3044\u3064 \u200b\u4ec0\u4e48\u200b\u65f6\u5019\u200b \u3069\u306a\u305f \u200b\u54ea\u4f4d\u200b \u200b\u660e\u65e5\u200b \u3042\u3057\u305f \u200b\u660e\u5929\u200b \u200b\u6628\u65e5\u200b \u304d\u306e\u3046 \u200b\u6628\u5929\u200b \u200b\u6559\u5ba4\u200b \u304d\u3087\u3046\u3057\u3064 \u200b\u6559\u5ba4\u200b \u3055\u3063\u304d \u200b\u521a\u624d\u200b \u200b\u96a3\u200b \u3068\u306a\u308a \u200b\u65c1\u8fb9\u200b \u200b\u53c2\u52a0\u8005\u200b \u3055\u3093\u304b\u3057\u3083 \u200b\u53c2\u52a0\u8005\u200b \u30ea\u30b9\u30c8 \u200b\u540d\u5355\u200b \u200b\u540d\u524d\u200b \u306a\u307e\u3048 \u200b\u540d\u5b57\u200b \u200b\u4e0b\u200b \u3057\u305f \u200b\u4e0b\u200b \u200b\u793e\u54e1\u200b\u5bee\u200b \u3057\u3083\u3044\u3093\u308a\u3087\u3046 \u200b\u5458\u5de5\u200b\u5bbf\u820d\u200b \u200b\u90e8\u5c4b\u200b \u3078\u3084 \u200b\u623f\u95f4\u200b \u200b\u9375\u200b \u304b\u304e \u200b\u94a5\u5319\u200b \u200b\u98df\u5802\u200b \u3057\u3087\u304f\u3069\u3046 \u200b\u98df\u5802\u200b \u200b\u4f1a\u8b70\u5ba4\u200b \u304b\u3044\u304e\u3057\u3064 \u200b\u4f1a\u8bae\u5ba4\u200b \u200b\u51b7\u200b\u8535\u200b\u5eab\u200b \u308c\u3044\u305e\u3046\u3053 \u200b\u51b0\u7bb1\u200b \u200b\u6d17\u6fef\u200b\u6a5f\u200b \u305b\u3093\u305f\u304f\u304d \u200b\u6d17\u8863\u673a\u200b \u200b\u81ea\u52d5\u200b\u8ca9\u200b\u58f2\u200b\u6a5f\u200b \u3058\u3069\u3046\u306f\u3093\u3070\u3044\u304d \u200b\u81ea\u52a8\u552e\u8d27\u673a\u200b \u200b\u56fd\u969b\u8ab2\u200b \u3053\u304f\u3055\u3044\u304b \u200b\u56fd\u9645\u90e8\u200b \u200b\u968e\u6bb5\u200b \u304b\u3044\u3060\u3093 \u200b\u697c\u68af\u200b \u200b\u5de6\u5074\u200b \u3072\u3060\u308a\u304c\u308f \u200b\u5de6\u8fb9\u200b \u200b\u672c\u200b \u307b\u3093 \u200b\u4e66\u200b \u200b\u7bb1\u200b \u306f\u3053 \u200b\u7bb1\u5b50\u200b \u200b\u4e2d\u200b \u306a\u304b \u200b\u4e2d\u200b \u30d7\u30ec\u30bb\u30f3\u30c8 \u200b\u793c\u7269\u200b \u200b\u7814\u7a76\u5ba4\u200b \u3051\u3093\u304d\u3085\u3046\u3057\u3064 \u200b\u7814\u7a76\u5ba4\u200b \u200b\u55b6\u200b\u696d\u8ab2\u200b \u3048\u3044\u304e\u3087\u3046\u304b \u200b\u8425\u4e1a\u90e8\u200b \u200b\u767a\u200b\u8868\u200b\u4f1a\u200b \u306f\u3063\u3074\u3087\u3046\u304b\u3044 \u200b\u53d1\u8868\u200b\u4f1a\u200b \u200b\u5165\u200b\u308a\u200b\u53e3\u200b \u3044\u308a\u3050\u3061 \u200b\u5165\u53e3\u200b \u30b3\u30f3\u30b5\u30fc\u30c8 \u200b\u97f3\u4e50\u4f1a\u200b \u200b\u904b\u52d5\u5834\u200b \u3046\u3093\u3069\u3046\u3058\u3087\u3046 \u200b\u8fd0\u52a8\u573a\u200b \u200b\u8aac\u200b\u660e\u200b\u4f1a\u200b \u305b\u3064\u3081\u3044\u304b\u3044 \u200b\u8bf4\u660e\u4f1a\u200b \u200b\u5efa\u7269\u200b \u305f\u3066\u3082\u306e \u200b\u5efa\u7b51\u7269\u200b \u200b\u53f3\u5074\u200b \u307f\u304e\u304c\u308f \u200b\u53f3\u8fb9"},{"location":"japanese/japanese-1-vocab/#7","title":"\u7b2c\u200b7\u200b\u8bfe","text":"\u91cd\u70b9\u200b\u5355\u8bcd\u200b\u5176\u4ed6\u200b\u5355\u8bcd\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u3082\u3057\u304b\u3057\u3066 \u200b\u6216\u8bb8\u200b \u200b\u59c9\u200b \u3042\u306d \u200b\u59d0\u59d0\u200b \u304a\u200b\u59c9\u200b\u3055\u3093 \u304a\u306d\u3048\u3055\u3093 \u200b\u59d0\u59d0\u200b \u200b\u5931\u793c\u200b \u3057\u3064\u308c\u3044 \u200b\u5931\u793c\u200b \u3044\u3064\u3082 \u200b\u7ecf\u5e38\u200b \u200b\u4e16\u8a71\u200b \u305b\u308f \u200b\u7167\u987e\u200b \u305d\u3063\u304f\u308a \u200b\u4e00\u6a21\u4e00\u6837\u200b \u304d\u3087\u3046\u3060\u3044 \u200b\u5144\u5f1f\u59d0\u59b9\u200b \u200b\u5bb6\u200b \u3046\u3061 \u200b\u5bb6\u200b \u301c\u200b\u4eba\u200b \u306b\u3093 ~\u200b\u4eba\u200b \u200b\u5f1f\u200b \u304a\u3068\u3046\u3068 \u200b\u5f1f\u5f1f\u200b \u3082\u3046 \u200b\u8fd8\u200b \u200b\u4e00\u4eba\u200b \u3072\u3068\u308a \u200b\u4e00\u4e2a\u200b\u4eba\u200b \u200b\u4e00\u7dd2\u200b \u3044\u3063\u3057\u3087 \u200b\u4e00\u8d77\u200b \u200b\u6d77\u5916\u200b \u304b\u3044\u304c\u3044 \u200b\u6d77\u5916\u200b \u200b\u5927\u200b\u5909\u200b \u305f\u3044\u3078\u3093 \u200b\u975e\u5e38\u200b \u200b\u7686\u200b \u307f\u3093\u306a \u200b\u5927\u5bb6\u200b \u200b\u7236\u200b \u3061\u3061 \u200b\u7236\u4eb2\u200b \u200b\u6bcd\u200b \u306f\u306f \u200b\u6bcd\u4eb2\u200b \u200b\u5144\u200b \u3042\u306b \u200b\u54e5\u54e5\u200b \u200b\u59bb\u200b \u3064\u307e \u200b\u59bb\u5b50\u200b \u200b\u592b\u200b \u304a\u3063\u3068 \u200b\u4e08\u592b\u200b \u200b\u59b9\u200b \u3044\u3082\u3046\u3068 \u200b\u59b9\u59b9\u200b \u200b\u7956\u7236\u200b \u305d\u3075 \u200b\u7956\u7236\u200b \u200b\u7956\u6bcd\u200b \u305d\u307c \u200b\u7956\u6bcd\u200b \u200b\u53d4\u6bcd\u200b \u304a\u3070 \u200b\u59d1\u59d1\u200b \u200b\u53d4\u7236\u200b \u304a\u3058 \u200b\u59d1\u4e08\u200b \u200b\u606f\u5b50\u200b \u3080\u3059\u3053 \u200b\u513f\u5b50\u200b \u200b\u5a18\u200b \u3080\u3059\u3081 \u200b\u5973\u513f\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u8da3\u5473\u200b \u3057\u3085\u307f \u200b\u7231\u597d\u200b \u200b\u6620\u753b\u200b \u3048\u3044\u304c \u200b\u7535\u5f71\u200b \u200b\u9451\u8cde\u200b \u304b\u3093\u3057\u3087\u3046 \u200b\u6b23\u8d4f\u200b \u200b\u6b21\u200b \u3064\u304e \u200b\u4e0b\u200b\u4e00\u6b21\u200b \u301c\u200b\u541b\u200b \u304f\u3093 ~\u200b\u541b\u200b \u200b\u5ba2\u200b \u304d\u3083\u304f \u200b\u5ba2\u4eba\u200b \u200b\u4e88\u7d04\u200b \u3088\u3084\u304f \u200b\u9884\u7ea6\u200b \u200b\u756a\u53f7\u200b \u3070\u3093\u3054\u3046 \u200b\u53f7\u7801\u200b \u30d1\u30b9\u30dd\u30fc\u30c8 \u200b\u62a4\u7167\u200b \u30b9\u30bf\u30c3\u30d5 \u200b\u5de5\u4f5c\u4eba\u5458\u200b \u200b\u533b\u8005\u200b \u3044\u3057\u3083 \u200b\u533b\u751f\u200b \u200b\u53e3\u200b \u304f\u3061 \u200b\u5634\u200b \u200b\u958b\u200b\u3051\u308b \u3042\u3051\u308b \u200b\u6253\u5f00\u200b \u200b\u4ed8\u200b\u304d\u200b\u5408\u200b\u3046 \u3064\u304d\u3042\u3046 \u200b\u4ea4\u5f80\u200b \u304a\u200b\u6bcd\u200b\u3055\u3093 \u304a\u304b\u3042\u3055\u3093 \u200b\u5988\u5988\u200b \u200b\u5fa1\u5b85\u200b \u304a\u305f\u304f \u200b\u60a8\u200b\u5bb6\u200b 2\u200b\u4eba\u200b \u3075\u305f\u308a \u200b\u4e24\u4e2a\u200b\u4eba\u200b \u200b\u4e00\u4eba\u200b\u3063\u200b\u5b50\u200b \u3072\u3068\u308a\u3063\u3053 \u200b\u72ec\u751f\u5b50\u5973\u200b \u200b\u4f55\u4eba\u200b \u306a\u3093\u306b\u3093 \u200b\u51e0\u4e2a\u200b\u4eba\u200b \u200b\u5bb6\u65cf\u200b \u304b\u305e\u304f \u200b\u5bb6\u5ead\u200b \u200b\u5199\u771f\u200b \u3057\u3083\u3057\u3093 \u200b\u7167\u7247\u200b \u200b\u5927\u962a\u200b \u304a\u304a\u3055\u304b \u200b\u5927\u962a\u200b \u3044\u304f\u3064 \u200b\u51e0\u4e2a\u200b \u301c\u200b\u6b73\u200b \u3055\u3044 ~\u200b\u5c81\u200b \u200b\u53bb\u5e74\u200b \u304d\u3087\u306d\u3093 \u200b\u53bb\u5e74\u200b \u200b\u5916\u56fd\u4eba\u200b \u304c\u3044\u3053\u304f\u3058\u3093 \u200b\u5916\u56fd\u4eba\u200b \u30d5\u30e9\u30f3\u30b9 \u200b\u6cd5\u56fd\u200b \u30da\u30c3\u30c8 \u200b\u5ba0\u7269\u200b \u200b\u732b\u200b \u306d\u3053 \u200b\u732b\u200b \u200b\u4e8c\u5339\u200b \u306b\u3072\u304d \u200b\u4e24\u53ea\u200b \u200b\u5916\u56fd\u200b\u8a9e\u200b \u304c\u3044\u3053\u304f\u3054 \u200b\u5916\u8bed\u200b \u200b\u82f1\u8a9e\u200b \u3048\u3044\u3054 \u200b\u82f1\u8bed\u200b \u200b\u5c0f\u200b\u8aac\u200b \u3057\u3087\u3046\u305b\u3064 \u200b\u5c0f\u8bf4\u200b \u305f\u304f\u3055\u3093 \u200b\u5f88\u591a\u200b \u200b\u540c\u7d1a\u751f\u200b \u3069\u3046\u304d\u3085\u3046\u305b\u3044 \u200b\u540c\u5e74\u7ea7\u200b\u540c\u5b66\u200b \u200b\u90e8\u4e0b\u200b \u3076\u304b \u200b\u90e8\u4e0b\u200b \u30a4\u30ae\u30ea\u30b9 \u200b\u82f1\u56fd\u200b \u30c9\u30a4\u30c4 \u200b\u5fb7\u56fd"},{"location":"japanese/japanese-1-vocab/#8","title":"\u7b2c\u200b8\u200b\u8bfe","text":"\u91cd\u70b9\u200b\u5355\u8bcd\u200b\u5176\u4ed6\u200b\u5355\u8bcd\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5e97\u54e1\u200b \u3066\u3093\u3044\u3093 \u200b\u5e97\u5458\u200b \u30e9\u30f3\u30c1 \u200b\u5348\u9910\u200b \u30e1\u30cb\u30e5\u30fc \u200b\u83dc\u5355\u200b \u200b\u5168\u90e8\u200b \u305c\u3093\u3076 \u200b\u5168\u90e8\u200b \u30bd\u30d5\u30c8\u30c9\u30ea\u30f3\u30af \u200b\u8f6f\u996e\u6599\u200b \u301c\u200b\u4ed8\u200b\u304d \u3064\u304d \u200b\u9644\u5e26\u200b \u200b\u5186\u200b \u3048\u3093 \u200b\u65e5\u5143\u200b \u200b\u5b89\u200b\u3044 \u3084\u3059\u3044 \u200b\u4fbf\u5b9c\u200b \u200b\u4f1a\u8a08\u200b \u304b\u3044\u3051\u3044 \u200b\u7ed3\u8d26\u200b \u200b\u73fe\u91d1\u200b \u3052\u3093\u304d\u3093 \u200b\u73b0\u91d1\u200b \u200b\u7167\u200b\u308a\u200b\u713c\u200b\u304d \u3066\u308a\u3084\u304d \u200b\u7167\u70e7\u200b \u30c1\u30ad\u30f3 \u200b\u9e21\u8089\u200b \u200b\u88cf\u200b \u3046\u3089 \u200b\u91cc\u9762\u200b \u30d4\u30b6 \u200b\u62ab\u8428\u200b \u200b\u6ce8\u6587\u200b \u3061\u3085\u3046\u3082\u3093 \u200b\u70b9\u83dc\u200b \u3069\u3046\u305e \u200b\u8bf7\u200b \u30db\u30c3\u30c8 \u200b\u70ed\u200b\u7684\u200b \u30b3\u30fc\u30d2\u30fc \u200b\u5496\u5561\u200b \u200b\u5b9c\u200b\u3057\u3044 \u3088\u308d\u3057\u3044 \u200b\u597d\u200b \u200b\u7a0e\u200b\u8fbc\u200b\u307f \u305c\u3044\u3053\u307f \u200b\u542b\u7a0e\u200b \u200b\u5225\u200b\u3005\u200b \u3079\u3064\u3079\u3064 \u200b\u5206\u5f00\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5473\u200b\u564c\u200b\u6c41\u200b \u307f\u305d\u3057\u308b \u200b\u5473\u200b\u564c\u200b\u6c64\u200b \u30b5\u30e9\u30c0 \u200b\u6c99\u62c9\u200b \u200b\u672c\u200b\u65e5\u200b \u307b\u3093\u3058\u3064 \u200b\u4eca\u5929\u200b \u200b\u6301\u200b\u3061\u200b\u5e30\u200b\u308a \u3082\u3061\u304b\u3048\u308a \u200b\u6253\u5305\u200b \u200b\u55b6\u200b\u696d\u200b \u3048\u3044\u304e\u3087\u3046 \u200b\u8425\u4e1a\u200b \u200b\u5927\u4e08\u592b\u200b \u3060\u3044\u3058\u3087\u3046\u3076 \u200b\u6ca1\u5173\u7cfb\u200b \u200b\u98df\u200b\u5f8c\u200b \u3057\u3087\u304f\u3054 \u200b\u996d\u540e\u200b \u200b\u7a0e\u200b\u629c\u200b\u304d \u305c\u3044\u306c\u304d \u200b\u4e0d\u542b\u7a0e\u200b \u30b9\u30de\u30db \u200b\u667a\u80fd\u624b\u673a\u200b \u30c6\u30b9\u30bf\u30fc \u200b\u8bd5\u7528\u54c1\u200b \u3057\u308d\u3044 \u200b\u767d\u8272\u200b \u200b\u540d\u53e4\u5c4b\u200b \u306a\u3054\u3084 \u200b\u540d\u53e4\u5c4b\u200b \u30c1\u30b1\u30c3\u30c8 \u200b\u7968\u200b \u3044\u304f\u3089 \u200b\u591a\u5c11\u200b\u94b1\u200b \u200b\u713c\u200b\u304d\u200b\u9ce5\u200b \u3084\u304d\u3068\u308a \u200b\u70e4\u9e21\u8089\u200b\u4e32\u200b \u304a\u200b\u8336\u200b \u304a\u3061\u3083 \u200b\u8336\u200b \u30ab\u30fc\u30c9 \u200b\u5361\u200b \u30a2\u30ea\u30da\u30a4 \u200b\u652f\u4ed8\u5b9d\u200b \u3086\u3063\u304f\u308a \u200b\u6162\u6162\u200b\u5730\u200b \u307b\u3093\u306e \u200b\u4e00\u70b9\u70b9\u200b \u200b\u6c17\u200b\u6301\u200b\u3061 \u304d\u3082\u3061 \u200b\u5fc3\u60c5\u200b \u200b\u5408\u200b\u3046 \u3042\u3046 \u200b\u5408\u9002\u200b \u200b\u8f9e\u66f8\u200b \u3058\u3057\u3087 \u200b\u8bcd\u5178\u200b \u200b\u81ea\u200b\u8ee2\u200b\u8eca\u200b \u3058\u3066\u3093\u3057\u3083 \u200b\u81ea\u884c\u8f66\u200b \u200b\u624b\u5e33\u200b \u3066\u3061\u3087\u3046 \u200b\u8bb0\u4e8b\u672c\u200b \u30d1\u30bd\u30b3\u30f3 \u200b\u7535\u8111\u200b \u30d3\u30fc\u30eb \u200b\u5564\u9152\u200b \u30a2\u30c3\u30d7\u30eb\u30d1\u30a4 \u200b\u82f9\u679c\u6d3e\u200b \u30cf\u30f3\u30d0\u30fc\u30ac\u30fc \u200b\u6c49\u5821\u200b \u200b\u5730\u4e0b\u200b \u3061\u304b \u200b\u5730\u4e0b\u200b \u30cf\u30f3\u30c9\u30bd\u30fc\u30d7 \u200b\u6d17\u624b\u6db2\u200b \u200b\u5965\u200b \u304a\u304f \u200b\u6df1\u5904\u200b \u200b\u68da\u200b \u305f\u306a \u200b\u67b6\u5b50\u200b \u30d5\u30e9\u30a4\u30c9\u30c1\u30ad\u30f3 \u200b\u70b8\u9e21\u200b \u200b\u7d05\u8336\u200b \u3053\u3046\u3061\u3083 \u200b\u7ea2\u8336\u200b \u305f\u3053\u200b\u713c\u200b\u304d \u305f\u3053\u3084\u304d \u200b\u7ae0\u9c7c\u70e7\u200b \u304a\u200b\u5bff\u53f8\u200b \u304a\u3059\u3057 \u200b\u5bff\u53f8\u200b \u3068\u3093\u304b\u3064 \u200b\u732a\u6392"},{"location":"japanese/japanese-1-vocab/#9","title":"\u7b2c\u200b9\u200b\u8bfe","text":"\u91cd\u70b9\u200b\u5355\u8bcd\u200b\u5176\u4ed6\u200b\u5355\u8bcd\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u4e45\u200b\u3057\u3076\u308a \u3072\u3055\u3057\u3076\u308a \u200b\u597d\u4e45\u4e0d\u89c1\u200b \u3069\u3046 \u200b\u600e\u4e48\u6837\u200b \u200b\u5927\u5b66\u200b \u3060\u3044\u304c\u304f \u200b\u5927\u5b66\u200b \u200b\u751f\u6d3b\u200b \u305b\u3044\u304b\u3064 \u200b\u751f\u6d3b\u200b \u200b\u52c9\u5f37\u200b \u3079\u3093\u304d\u3087\u3046 \u200b\u5b66\u4e60\u200b \u200b\u5fd9\u200b\u3057\u3044 \u3044\u305d\u304c\u3057\u3044 \u200b\u5fd9\u200b \u3067\u304d\u308b \u200b\u80fd\u200b \u200b\u697d\u200b\u3057\u3044 \u305f\u306e\u3057\u3044 \u200b\u5f00\u5fc3\u200b \u200b\u591a\u200b\u3044 \u304a\u304a\u3044 \u200b\u591a\u200b \u200b\u6bce\u200b\u65e5\u200b \u307e\u3044\u306b\u3061 \u200b\u6bcf\u5929\u200b \u200b\u5348\u524d\u200b \u3054\u305c\u3093 \u200b\u4e0a\u5348\u200b \u200b\u5348\u200b\u5f8c\u200b \u3054\u3054 \u200b\u4e0b\u5348\u200b \u200b\u81ea\u7531\u200b \u3058\u3086\u3046 \u200b\u81ea\u7531\u200b \u200b\u4eca\u200b\u5b66\u671f\u200b \u3053\u3093\u304c\u3063\u304d \u200b\u672c\u5b66\u671f\u200b \u200b\u6765\u200b\u6708\u200b \u3089\u3044\u3052\u3064 \u200b\u4e0b\u4e2a\u6708\u200b \u200b\u5236\u4f5c\u200b\u5c55\u200b \u305b\u3044\u3055\u304f\u3066\u3093 \u200b\u5236\u4f5c\u200b\u5c55\u200b \u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3 \u200b\u5c55\u793a\u200b \u3061\u3087\u3063\u3068 \u200b\u7a0d\u200b\u7b49\u200b \u3068\u3063\u3066\u3082 \u200b\u975e\u5e38\u200b \u200b\u53b3\u200b\u3057\u3044 \u304d\u3073\u3057\u3044 \u200b\u4e25\u683c\u200b \u200b\u7d30\u90e8\u200b \u3055\u3044\u3076 \u200b\u7ec6\u8282\u200b \u3053\u3060\u308f\u308b \u200b\u8bb2\u7a76\u200b \u3084\u306f\u308a \u200b\u4ecd\u65e7\u200b \u200b\u9811\u5f35\u200b\u308b \u304c\u3093\u3070\u308b \u200b\u52a0\u6cb9\u200b \u3088\u304b\u3063\u305f \u200b\u592a\u597d\u4e86\u200b \u3057\u304b\u3057 \u200b\u4f46\u662f\u200b \u3067\u3082 \u200b\u4f46\u662f\u200b \u301c\u304c \u200b\u4f46\u662f\u200b \u301c\u3051\u3069 \u200b\u4f46\u662f\u200b \u3060\u304b\u3089 \u200b\u6240\u4ee5\u200b \u301c\u304b\u3089 \u200b\u6240\u4ee5\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5143\u200b\u6c17\u200b \u3052\u3093\u304d \u200b\u7cbe\u795e\u200b \u200b\u5f7c\u6c0f\u200b \u304b\u308c\u3057 \u200b\u7537\u670b\u53cb\u200b \u200b\u6e05\u83ef\u200b\u5927\u5b66\u200b \u305b\u3044\u304b\u3060\u3044\u304c\u304f \u200b\u6e05\u534e\u5927\u5b66\u200b \u200b\u5408\u683c\u200b \u3054\u3046\u304b\u304f \u200b\u5408\u683c\u200b \u304a\u3081\u3066\u3068\u3046 \u200b\u606d\u559c\u200b \u200b\u9759\u200b\u304b \u3057\u305a\u304b \u200b\u5b89\u9759\u200b \u200b\u4eca\u6708\u200b \u3053\u3093\u3052\u3064 \u200b\u672c\u6708\u200b \u200b\u4f55\u65e5\u200b \u306a\u3093\u306b\u3061 \u200b\u51e0\u53f7\u200b \u200b\u6bce\u200b\u6708\u200b \u307e\u3044\u3064\u304d \u200b\u6bcf\u6708\u200b \u200b\u99c5\u200b\u524d\u200b \u3048\u304d\u307e\u3048 \u200b\u8f66\u7ad9\u200b\u524d\u200b \u200b\u65b0\u200b\u3057\u3044 \u3042\u305f\u3089\u3057\u3044 \u200b\u65b0\u200b\u7684\u200b \u200b\u5c45\u9152\u200b\u5c4b\u200b \u3044\u3056\u304b\u3084 \u200b\u5c45\u9152\u200b\u5c4b\u200b \u200b\u7f8e\u5473\u200b\u3057\u3044 \u304a\u3044\u3057\u3044 \u200b\u597d\u5403\u200b \u200b\u8a95\u200b\u751f\u65e5\u200b \u305f\u3093\u3058\u3087\u3046\u3073 \u200b\u751f\u65e5\u200b \u3042\u307e\u308a \u200b\u4e0d\u592a\u200b \u200b\u4e0a\u200b\u624b\u200b \u3058\u3087\u3046\u305a \u200b\u64c5\u957f\u200b \u200b\u597d\u200b\u304d \u3059\u304d \u200b\u559c\u6b22\u200b \u200b\u512a\u200b\u3057\u3044 \u3084\u3055\u3057\u3044 \u200b\u6e29\u67d4\u200b \u200b\u5fa1\u852d\u200b \u304a\u304b\u3052 \u200b\u591a\u4e8f\u200b \u200b\u7559\u5b66\u200b \u308a\u3085\u3046\u304c\u304f \u200b\u7559\u5b66\u200b \u200b\u6700\u8fd1\u200b \u3055\u3044\u304d\u3093 \u200b\u6700\u8fd1\u200b \u200b\u5927\u200b\u304d\u3044 \u304a\u304a\u304d\u3044 \u200b\u5927\u200b \u200b\u9ad8\u200b\u3044 \u305f\u304b\u3044 \u200b\u9ad8\u200b \u304b\u304b\u308b \u200b\u82b1\u8d39\u200b \u200b\u9762\u767d\u200b\u3044 \u304a\u3082\u3057\u308d\u3044 \u200b\u6709\u8da3\u200b \u200b\u96e3\u200b\u3057\u3044 \u3080\u305a\u304b\u3057\u3044 \u200b\u96be\u200b \u200b\u5bbf\u984c\u200b \u3057\u3085\u304f\u3060\u3044 \u200b\u4f5c\u4e1a\u200b \u200b\u8ab2\u984c\u200b \u304b\u3060\u3044 \u200b\u8bfe\u9898\u200b \u200b\u767a\u200b\u8868\u200b \u306f\u3063\u3074\u3087\u3046 \u200b\u53d1\u8a00\u200b \u200b\u4eca\u5ea6\u200b \u3053\u3093\u3069 \u200b\u4e0b\u6b21\u200b \u200b\u9031\u672b\u200b \u3057\u3085\u3046\u307e\u3064 \u200b\u5468\u672b\u200b \u200b\u6a21\u64ec\u200b\u30c6\u30b9\u30c8 \u3082\u304e\u30c6\u30b9\u30c8 \u200b\u6a21\u62df\u8003\u8bd5"},{"location":"japanese/japanese-1-vocab/#10","title":"\u7b2c\u200b10\u200b\u8bfe","text":"\u91cd\u70b9\u200b\u5355\u8bcd\u200b\u5176\u4ed6\u200b\u5355\u8bcd\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5168\u54e1\u200b \u305c\u3093\u3044\u3093 \u200b\u5168\u5458\u200b \u200b\u9577\u200b\u3044 \u306a\u304c\u3044 \u200b\u957f\u200b \u30b3\u30e1\u30f3\u30c8 \u200b\u8bc4\u8bba\u200b \u3042\u3063\u3068\u3044\u3046\u200b\u9593\u200b \u3042\u3063\u3068\u3044\u3046\u307e \u200b\u4e00\u4e0b\u5b50\u200b \u200b\u898b\u200b\u308b \u307f\u308b \u200b\u770b\u200b \u200b\u884c\u200b\u304f \u3044\u304f \u200b\u53bb\u200b \u200b\u7a7a\u200b\u304f \u3042\u304f \u200b\u7a7a\u200b \u200b\u4f5c\u54c1\u200b \u3055\u304f\u3072\u3093 \u200b\u4f5c\u54c1\u200b \u200b\u697d\u200b\u3057\u307f \u305f\u306e\u3057\u307f \u200b\u671f\u5f85\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5e2d\u200b \u305b\u304d \u200b\u5ea7\u4f4d\u200b \u200b\u98df\u4e8b\u4f1a\u200b \u3057\u3087\u304f\u3058\u304b\u3044 \u200b\u996d\u5c40\u200b \u200b\u5f01\u200b\u5f53\u200b \u3079\u3093\u3068\u3046 \u200b\u4fbf\u5f53\u200b \u200b\u5b66\u98df\u200b \u304c\u304f\u3057\u3087\u304f \u200b\u5b66\u6821\u98df\u5802\u200b \u200b\u89aa\u5207\u200b \u3057\u3093\u305b\u3064 \u200b\u4eb2\u5207\u200b \u200b\u98df\u8cbb\u200b \u3057\u3087\u304f\u3072 \u200b\u996d\u94b1\u200b \u200b\u590f\u4f11\u200b\u307f \u306a\u3064\u3084\u3059\u307f \u200b\u6691\u5047\u200b \u200b\u51ac\u4f11\u200b\u307f \u3075\u3086\u3084\u3059\u307f \u200b\u5bd2\u5047\u200b \u200b\u4f1a\u793e\u200b \u304b\u3044\u3057\u3083 \u200b\u516c\u53f8\u200b \u200b\u5b66\u6821\u200b \u304c\u3063\u3053\u3046 \u200b\u5b66\u6821\u200b \u200b\u5f85\u200b\u3061\u200b\u5408\u200b\u308f\u305b \u307e\u3061\u3042\u308f\u305b \u200b\u7ea6\u4f1a\u200b \u200b\u7d50\u69cb\u200b \u3051\u3063\u3053\u3046 \u200b\u53ef\u4ee5\u200b\u7684\u200b \u200b\u591c\u200b \u3088\u308b \u200b\u665a\u4e0a\u200b \u200b\u7f8e\u8853\u9928\u200b \u3073\u3058\u3085\u3064\u304b\u3093 \u200b\u7f8e\u672f\u9986\u200b \u200b\u6b8b\u5ff5\u200b \u3056\u3093\u306d\u3093 \u200b\u9057\u61be\u200b \u200b\u4f1a\u8b70\u200b \u304b\u3044\u304e \u200b\u4f1a\u8bae\u200b \u200b\u6691\u200b\u3044 \u3042\u3064\u3044 \u200b\u70ed\u200b \u200b\u6599\u7406\u200b \u308a\u3087\u3046\u308a \u200b\u6599\u7406\u200b \u304a\u200b\u6d12\u843d\u200b \u304a\u3057\u3083\u308c \u200b\u65f6\u9ae6\u200b \u200b\u7dba\u9e97\u200b \u304d\u308c\u3044 \u200b\u6f02\u4eae\u200b \u200b\u6697\u200b\u3044 \u304f\u3089\u3044 \u200b\u9ed1\u6697\u200b \u200b\u72ed\u200b\u3044 \u305b\u307e\u3044 \u200b\u72ed\u7a84\u200b \u200b\u771f\u9762\u76ee\u200b \u307e\u3058\u3081 \u200b\u8ba4\u771f\u200b \u200b\u98df\u4e8b\u200b \u3057\u3087\u304f\u3058 \u200b\u5403\u996d\u200b \u3059\u3054\u3044 \u200b\u5389\u5bb3\u200b \u200b\u53e3\u982d\u200b \u3053\u3046\u3068\u3046 \u200b\u53e3\u5934\u200b \u3081\u3093\u305b\u3064 \u200b\u9762\u8bd5\u200b \u200b\u7f8e\u8853\u5c55\u200b \u3073\u3058\u3085\u3064\u3066\u3093 \u200b\u7f8e\u672f\u200b\u5c55\u200b \u200b\u5fd8\u5e74\u200b\u4f1a\u200b \u307c\u3046\u306d\u3093\u304b\u3044 \u200b\u5e74\u7ec8\u200b\u4f1a"},{"location":"japanese/japanese-1-vocab/#11","title":"\u7b2c\u200b11\u200b\u8bfe","text":"\u91cd\u70b9\u200b\u5355\u8bcd\u200b\u5176\u4ed6\u200b\u5355\u8bcd\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5168\u7136\u200b \u305c\u3093\u305c\u3093 \u200b\u5168\u7136\u200b \u307a\u3089\u307a\u3089 \u200b\u6d41\u5229\u200b \u3060\u3063\u3066 \u200b\u56e0\u4e3a\u200b \u200b\u5358\u200b\u8a9e\u200b \u305f\u3093\u3054 \u200b\u5355\u8bcd\u200b \u200b\u91cf\u200b \u308a\u3087\u3046 \u200b\u91cf\u200b \u200b\u52e4\u52c9\u200b \u304d\u3093\u3079\u3093 \u200b\u52e4\u594b\u200b \u30c6\u30f3\u30b7\u30e7\u30f3 \u200b\u6c14\u6c1b\u200b\u70ed\u70c8\u200b\u7684\u200b\u6837\u5b50\u200b \u200b\u8a71\u200b \u306f\u306a\u3057 \u200b\u8bdd\u200b \u200b\u7fa8\u200b\u307e\u3057\u3044 \u3046\u3089\u3084\u307e\u3057\u3044 \u200b\u7fa1\u6155\u200b \u200b\u58f0\u200b \u3053\u3048 \u200b\u58f0\u97f3\u200b \u200b\u91cd\u8981\u200b \u3058\u3085\u3046\u3088\u3046 \u200b\u91cd\u8981\u200b \u200b\u8a9e\u5b66\u200b \u3054\u304c\u304f \u200b\u8bed\u8a00\u200b \u200b\u57fa\u672c\u200b \u304d\u307b\u3093 \u200b\u57fa\u672c\u200b \u3057\u3083\u3079\u308b \u200b\u8bf4\u200b \u200b\u6065\u200b\u305a\u304b\u3057\u3044 \u306f\u305a\u304b\u3057\u3044 \u200b\u5bb3\u7f9e\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u3068\u3053\u308d \u200b\u5730\u65b9\u200b \u200b\u6016\u200b\u3044 \u3053\u308f\u3044 \u200b\u53ef\u6015\u200b \u200b\u5185\u5bb9\u200b \u306a\u3044\u3088\u3046 \u200b\u5185\u5bb9\u200b \u200b\u5206\u200b\u304b\u308b \u308f\u304b\u308b \u200b\u61c2\u200b \u200b\u5b50\u200b \u3053 \u200b\u5b69\u5b50\u200b \u200b\u91ce\u83dc\u200b \u3084\u3055\u3044 \u200b\u852c\u83dc\u200b \u200b\u8089\u200b \u306b\u304f \u200b\u8089\u200b \u200b\u5acc\u200b\u3044 \u304d\u3089\u3044 \u200b\u8ba8\u538c\u200b \u200b\u98df\u200b\u3079\u308b \u305f\u3079\u308b \u200b\u5403\u200b \u3082\u306e \u200b\u4e1c\u897f\u200b \u200b\u5c11\u200b\u306a\u3044 \u3059\u304f\u306a\u3044 \u200b\u5c11\u200b \u200b\u904b\u52d5\u4f1a\u200b \u3046\u3093\u3069\u3046\u304b\u3044 \u200b\u8fd0\u52a8\u4f1a\u200b \u200b\u60aa\u200b\u3044 \u308f\u308b\u3044 \u200b\u574f\u200b \u200b\u5c02\u200b\u9580\u5e97\u200b \u305b\u3093\u3082\u3093\u3066\u3093 \u200b\u4e13\u5356\u5e97\u200b \u200b\u5bd2\u200b\u3044 \u3055\u3080\u3044 \u200b\u51b7\u200b \u200b\u80cc\u200b \u305b \u200b\u8eab\u9ad8\u200b \u200b\u624b\u200b\u6599\u7406\u200b \u3066\u308a\u3087\u3046\u308a \u200b\u81ea\u5df1\u200b\u505a\u200b\u7684\u200b\u996d\u200b \u200b\u52aa\u529b\u200b \u3069\u308a\u3087\u304f \u200b\u52aa\u529b\u200b \u200b\u5927\u4e8b\u200b \u3060\u3044\u3058 \u200b\u91cd\u8981\u200b \u200b\u6f2b\u753b\u200b \u307e\u3093\u304c \u200b\u6f2b\u753b\u200b \u200b\u8aad\u200b\u3080 \u3088\u3080 \u200b\u8bfb\u200b \u200b\u5927\u597d\u200b\u304d \u3060\u3044\u3059\u304d \u200b\u975e\u5e38\u200b\u559c\u6b22\u200b \u200b\u4fbf\u5229\u200b \u3079\u3093\u308a \u200b\u65b9\u4fbf\u200b \u200b\u4f7f\u200b\u3046 \u3064\u304b\u3046 \u200b\u4f7f\u7528\u200b \u200b\u96fb\u8eca\u200b \u3067\u3093\u3057\u3083 \u200b\u7535\u8f66\u200b \u200b\u9045\u200b\u308c\u308b \u304a\u304f\u308c\u308b \u200b\u8fdf\u5230\u200b \u200b\u65e9\u200b\u304f \u306f\u3084\u304f \u200b\u5feb\u200b \u200b\u982d\u200b \u3042\u305f\u307e \u200b\u5934\u200b \u200b\u75db\u200b\u3044 \u3044\u305f\u3044 \u200b\u75bc\u200b \u200b\u5730\u4e0b\u200b\u9244\u200b \u3061\u304b\u3066\u3064 \u200b\u5730\u94c1\u200b \u200b\u901f\u200b\u3044 \u306f\u3084\u3044 \u200b\u5feb\u200b \u200b\u4e2d\u83ef\u200b\u6599\u7406\u200b \u3061\u3085\u3046\u304b\u308a\u3087\u3046\u308a \u200b\u4e2d\u9910\u200b \u200b\u753a\u200b \u307e\u3061 \u200b\u8857\u9053\u200b \u200b\u793e\u4f1a\u200b\u4eba\u200b \u3057\u3083\u304b\u3044\u3058\u3093 \u200b\u793e\u4f1a\u200b\u4eba\u200b \u200b\u55ab\u200b\u8336\u5e97\u200b \u304d\u3063\u3055\u3066\u3093 \u200b\u5496\u5561\u5e97\u200b \u200b\u5916\u200b \u305d\u3068 \u200b\u5916\u9762\u200b \u200b\u5e83\u200b\u3044 \u3072\u308d\u3044 \u200b\u5bbd\u200b \u200b\u74b0\u5883\u200b \u304b\u3093\u304d\u3087\u3046 \u200b\u73af\u5883\u200b \u30ab\u30c4\u200b\u4e3c\u200b \u30ab\u30c4\u3069\u3093 \u200b\u732a\u6392\u200b\u996d\u200b \u200b\u5bcc\u58eb\u5c71\u200b \u3075\u3058\u3055\u3093 \u200b\u5bcc\u58eb\u5c71\u200b \u200b\u6210\u7e3e\u200b \u305b\u3044\u305b\u304d \u200b\u6210\u7ee9\u200b \u200b\u696d\u754c\u200b \u304e\u3087\u3046\u304b\u3044 \u200b\u884c\u4e1a\u200b \u200b\u6709\u540d\u200b \u3086\u3046\u3081\u3044 \u200b\u6709\u540d\u200b \u200b\u6570\u5b66\u200b \u3059\u3046\u304c\u304f \u200b\u6570\u5b66\u200b \u200b\u56fd\u8a9e\u200b \u3053\u304f\u3054 \u200b\u56fd\u8bed\u200b \u200b\u6b74\u200b\u53f2\u200b \u308c\u304d\u3057 \u200b\u5386\u53f2\u200b \u200b\u6587\u5b66\u200b \u3076\u3093\u304c\u304f \u200b\u6587\u5b66\u200b \u200b\u793e\u4f1a\u5b66\u200b \u3057\u3083\u304b\u3044\u304c\u304f \u200b\u793e\u4f1a\u5b66\u200b \u200b\u5316\u5b66\u200b \u304b\u304c\u304f \u200b\u5316\u5b66\u200b \u200b\u71b1\u5fc3\u200b \u306d\u3063\u3057\u3093 \u200b\u70ed\u5fc3\u200b \u200b\u6b4c\u200b \u3046\u305f \u200b\u6b4c\u200b \u200b\u7269\u77e5\u200b\u308a \u3082\u306e\u3057\u308a \u200b\u535a\u5b66\u200b \u200b\u4eba\u200b\u6c17\u200b \u306b\u3093\u304d \u200b\u4eba\u6c14"},{"location":"japanese/japanese-1-vocab/#12","title":"\u7b2c\u200b12\u200b\u8bfe","text":"\u91cd\u70b9\u200b\u5355\u8bcd\u200b\u5176\u4ed6\u200b\u5355\u8bcd\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u305d\u308d\u305d\u308d \u200b\u4e0d\u4e45\u200b \u304a\u200b\u663c\u200b \u304a\u3072\u308b \u200b\u4e2d\u5348\u200b \u3059\u308b \u200b\u505a\u200b \u200b\u671d\u200b\u3054\u200b\u98ef\u200b \u3042\u3055\u3054\u306f\u3093 \u200b\u65e9\u996d\u200b \u200b\u9045\u200b\u3044 \u304a\u305d\u3044 \u200b\u665a\u200b \u200b\u8efd\u200b\u3044 \u304b\u308b\u3044 \u200b\u8f7b\u200b \u200b\u5915\u98df\u200b \u3086\u3046\u3057\u3087\u304f \u200b\u665a\u996d\u200b \u200b\u6b8b\u200b\u308a \u306e\u3053\u308a \u200b\u5269\u4f59\u200b \u200b\u81ea\u708a\u200b \u3058\u3059\u3044 \u200b\u81ea\u5df1\u200b\u505a\u996d\u200b \u305f\u307e\u306b \u200b\u5076\u5c14\u200b \u200b\u4f5c\u200b\u308b \u3064\u304f\u308b \u200b\u505a\u200b \u200b\u52ff\u8ad6\u200b \u3082\u3061\u308d\u3093 \u200b\u5f53\u7136\u200b \u200b\u4e2d\u56fd\u200b\u4eba\u200b \u3061\u3085\u3046\u3054\u304f\u3058\u3093 \u200b\u4e2d\u56fd\u200b\u4eba\u200b \u200b\u548c\u200b\u98df\u200b \u308f\u3057\u3087\u304f \u200b\u65e5\u672c\u6599\u7406\u200b \u200b\u9903\u5b50\u200b \u304e\u3087\u3046\u3056 \u200b\u997a\u5b50\u200b \u200b\u9ebb\u5a46\u8c46\u8150\u200b \u307e\u30fc\u307c\u3069\u3046\u3075 \u200b\u9ebb\u5a46\u8c46\u8150\u200b \u200b\u751f\u7269\u200b \u306a\u307e\u3082\u306e \u200b\u751f\u200b\u7684\u200b\u4e1c\u897f\u200b \u200b\u82e6\u624b\u200b \u306b\u304c\u3066 \u200b\u4e0d\u200b\u64c5\u957f\u200b \u200b\u6642\u200b\u3005\u200b \u3068\u304d\u3069\u304d \u200b\u6709\u65f6\u5019\u200b \u200b\u604b\u200b\u3057\u3044 \u3053\u3044\u3057\u3044 \u200b\u7231\u6155\u200b \u200b\u4f5c\u200b\u308a\u200b\u65b9\u200b \u3064\u304f\u308a\u304b\u305f \u200b\u505a\u6cd5\u200b \u200b\u662f\u975e\u200b \u305c\u3072 \u200b\u4e00\u5b9a\u200b \u200b\u6559\u200b\u3048\u308b \u304a\u3057\u3048\u308b \u200b\u6559\u200b \u3068\u304b \u200b\u7b49\u7b49\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u307e\u3060 \u200b\u8fd8\u200b \u200b\u98df\u200b\u3079\u200b\u9803\u200b \u305f\u3079\u3054\u308d \u200b\u98df\u7269\u200b\u6700\u200b\u597d\u5403\u200b\u7684\u200b\u65f6\u5019\u200b \u200b\u6c34\u6cf3\u200b \u3059\u3044\u3048\u3044 \u200b\u6e38\u6cf3\u200b \u200b\u5c11\u200b\u3057 \u3059\u3053\u3057 \u200b\u4e00\u70b9\u70b9\u200b \u200b\u8cea\u554f\u200b \u3057\u3064\u3082\u3093 \u200b\u95ee\u9898\u200b \u3069\u3046\u3057\u3066 \u200b\u4e3a\u4ec0\u4e48\u200b \u200b\u672c\u5f53\u200b\u306b \u307b\u3093\u3068\u3046\u306b \u200b\u771f\u7684\u200b \u3060\u304b\u3089 \u200b\u6240\u4ee5\u200b \u200b\u7406\u7cfb\u200b \u308a\u3051\u3044 \u200b\u7406\u79d1\u200b \u200b\u79d1\u76ee\u200b \u304b\u3082\u304f \u200b\u79d1\u76ee\u200b \u200b\u7d0d\u8c46\u200b \u306a\u3063\u3068\u3046 \u200b\u7eb3\u8c46\u200b \u200b\u6620\u753b\u9928\u200b \u3048\u3044\u304c\u304b\u3093 \u200b\u7535\u5f71\u9662\u200b \u200b\u7518\u200b\u3044 \u3042\u307e\u3044 \u200b\u751c\u200b \u200b\u904b\u52d5\u200b \u3046\u3093\u3069\u3046 \u200b\u8fd0\u52a8\u200b \u3078\u305f \u200b\u4e0d\u200b\u64c5\u957f\u200b \u200b\u5f97\u610f\u200b \u3068\u304f\u3044 \u200b\u64c5\u957f\u200b \u200b\u5f8c\u200b\u308d \u3046\u3057\u308d \u200b\u540e\u9762\u200b \u200b\u7df4\u7fd2\u200b \u308c\u3093\u3057\u3085\u3046 \u200b\u7ec3\u4e60\u200b \u200b\u554f\u984c\u200b \u3082\u3093\u3060\u3044 \u200b\u95ee\u9898\u200b \u200b\u85ac\u200b \u304f\u3059\u308a \u200b\u836f\u200b \u200b\u60a3\u8005\u200b \u304b\u3093\u3058\u3083 \u200b\u75c5\u4eba\u200b \u200b\u99c5\u200b \u3048\u304d \u200b\u8f66\u7ad9\u200b \u200b\u904b\u200b\u8ee2\u200b\u624b\u200b \u3046\u3093\u3066\u3093\u3057\u3085 \u200b\u53f8\u673a\u200b \u200b\u64ae\u200b\u308b \u3068\u308b \u200b\u62cd\u7167\u200b \u200b\u904b\u200b\u8ee2\u200b \u3046\u3093\u3066\u3093 \u200b\u5f00\u8f66\u200b \u200b\u672c\u5c4b\u200b \u307b\u3093\u3084 \u200b\u4e66\u5e97\u200b \u301c\u200b\u5c4b\u200b \u3084 ~\u200b\u5e97\u200b \u200b\u5929\u5a66\u200b\u7f85\u200b \u3066\u3093\u3077\u3089 \u200b\u5929\u5987\u200b\u7f57\u200b \u200b\u96e8\u200b \u3042\u3081 \u200b\u96e8\u200b \u200b\u6dbc\u200b\u3057\u3044 \u3059\u305a\u3057\u3044 \u200b\u51c9\u723d\u200b \u200b\u6674\u200b\u308c \u306f\u308c \u200b\u6674\u5929\u200b \u200b\u5546\u54c1\u200b \u3057\u3087\u3046\u3072\u3093 \u200b\u5546\u54c1\u200b \u200b\u685c\u200b \u3055\u304f\u3089 \u200b\u6a31\u82b1\u200b \u200b\u5473\u200b \u3042\u3058 \u200b\u5473\u9053\u200b \u200b\u8272\u200b \u3044\u308d \u200b\u989c\u8272\u200b \u200b\u521d\u200b\u3081\u3066 \u306f\u3058\u3081\u3066 \u200b\u7b2c\u4e00\u6b21\u200b \u200b\u7389\u5b50\u200b\u713c\u200b\u304d \u305f\u307e\u3054\u3084\u304d \u200b\u714e\u86cb\u200b \u3064\u307e\u3089\u306a\u3044 \u200b\u65e0\u804a\u200b \u200b\u697d\u200b\u5668\u200b \u304c\u3063\u304d \u200b\u4e50\u5668\u200b \u200b\u9eba\u200b \u3081\u3093 \u200b\u9762\u6761\u200b \u200b\u9055\u200b\u3046 \u3061\u304c\u3046 \u200b\u4e0d\u200b\u4e00\u6837"},{"location":"japanese/japanese-1-vocab/#1311","title":"\u7b2c\u200b13\u200b\u8bfe\u200b\uff08\u200b\u65b0\u4e16\u7eaa\u200b\u521d\u7ea7\u200b\u7b2c\u200b11\u200b\u8bfe\u200b\uff09","text":"\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u7a7a\u6e2f\u200b \u304f\u3046\u3053\u3046 \u200b\u673a\u573a\u200b \u200b\u6c7a\u5b9a\u200b \u3051\u3063\u3066\u3044 \u200b\u51b3\u5b9a\u200b \u200b\u6765\u200b\u65e5\u200b \u3089\u3044\u306b\u3061 \u200b\u6765\u200b\u65e5\u672c\u200b \u200b\u5230\u200b\u7740\u200b \u3068\u3046\u3061\u3083\u304f \u200b\u5230\u8fbe\u200b \u200b\u4f55\u6642\u200b \u306a\u3093\u3058 \u200b\u51e0\u70b9\u200b \u200b\u4e88\u5b9a\u200b \u3088\u3066\u3044 \u200b\u9884\u5b9a\u200b \u200b\u8fce\u200b\u3048\u308b \u3080\u304b\u3048\u308b \u200b\u8fce\u63a5\u200b \u200b\u5e30\u200b\u308b \u304b\u3048\u308b \u200b\u56de\u5bb6\u200b \u200b\u5c31\u200b\u8077\u200b \u3057\u3085\u3046\u3057\u3087\u304f \u200b\u5c31\u804c\u200b \u200b\u8cbf\u6613\u200b \u307c\u3046\u3048\u304d \u200b\u8d38\u6613\u200b \u200b\u4f7f\u200b\u3046 \u3064\u304b\u3046 \u200b\u4f7f\u7528\u200b \u200b\u6b8b\u696d\u200b \u3056\u3093\u304e\u3087\u3046 \u200b\u52a0\u73ed\u200b \u200b\u65e5\u200b\u3005\u200b \u3072\u3073 \u200b\u65e5\u5b50\u200b \u200b\u61d0\u200b\u304b\u3057\u3044 \u306a\u3064\u304b\u3057\u3044 \u200b\u6000\u5ff5\u200b \u200b\u4f4f\u5c45\u200b \u3058\u3085\u3046\u304d\u3087 \u200b\u4f4f\u6240\u200b \u200b\u6c7a\u200b\u3057\u3066 \u3051\u3063\u3057\u3066 \u200b\u7edd\u4e0d\u200b \u200b\u5fc3\u914d\u200b \u3057\u3093\u3071\u3044 \u200b\u62c5\u5fc3\u200b \u3044\u308b \u200b\u9700\u8981\u200b \u200b\u5b89\u200b\u3044 \u3084\u3059\u3044 \u200b\u4fbf\u5b9c\u200b \u200b\u7d39\u4ecb\u200b \u3057\u3087\u3046\u304b\u3044 \u200b\u4ecb\u7ecd\u200b \u200b\u5b89\u5fc3\u200b \u3042\u3093\u3057\u3093 \u200b\u5b89\u5fc3\u200b \u3067\u306f \u200b\u90a3\u4e48\u200b \u200b\u5143\u200b\u6c17\u200b \u3052\u3093\u304d \u200b\u7cbe\u795e\u200b \u200b\u69d8\u200b \u3055\u307e \uff08\u200b\u7528\u4e8e\u200b\u656c\u79f0\u200b\uff09 \u200b\u5589\u200b \u306e\u3069 \u200b\u5589\u5499\u200b \u200b\u6e07\u200b\u304f \u304b\u308f\u304f \u200b\u6e34\u200b \u200b\u98f2\u200b\u3080 \u306e\u3080 \u200b\u559d\u200b \u200b\u5bcc\u58eb\u5c71\u200b \u3075\u3058\u3055\u3093 \u200b\u5bcc\u58eb\u5c71\u200b \u200b\u7d20\u6674\u200b\u3089\u3057\u3044 \u3059\u3070\u3089\u3057\u3044 \u200b\u7f8e\u597d\u200b \u200b\u7b11\u200b\u3046 \u308f\u3089\u3046 \u200b\u7b11\u200b \u3042\u306e \u200b\u90a3\u4e2a\u200b \u304a\u200b\u624b\u6d17\u200b\u3044 \u304a\u3066\u3042\u3089\u3044 \u200b\u6d17\u624b\u95f4\u200b \u307e\u3064 \u200b\u7b49"},{"location":"japanese/japanese-1-vocab/#1412","title":"\u7b2c\u200b14\u200b\u8bfe\u200b\uff08\u200b\u65b0\u4e16\u7eaa\u200b\u521d\u7ea7\u200b\u7b2c\u200b12\u200b\u8bfe\u200b\uff09","text":"\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u5355\u8bcd\u200b \u200b\u5047\u540d\u200b \u200b\u542b\u4e49\u200b \u200b\u6d77\u5916\u200b \u304b\u3044\u304c\u3044 \u200b\u6d77\u5916\u200b \u200b\u65c5\u884c\u200b \u308a\u3087\u3053\u3046 \u200b\u65c5\u884c\u200b \u200b\u73cd\u200b\u3057\u3044 \u3081\u305a\u3089\u3057\u3044 \u200b\u73cd\u8d35\u200b \u3053\u3068 \u200b\u4e8b\u60c5\u200b \u200b\u4f8b\u200b\u3048\u3070 \u305f\u3068\u3048\u3070 \u200b\u4f8b\u5982\u200b \u200b\u65b0\u5a5a\u200b \u3057\u3093\u3053\u3093 \u200b\u65b0\u5a5a\u200b \u200b\u56fd\u5185\u200b \u3053\u304f\u306a\u3044 \u200b\u56fd\u5185\u200b \u200b\u9078\u200b\u3076 \u3048\u3089\u3076 \u200b\u9009\u62e9\u200b \u200b\u5c11\u200b\u306a\u3044 \u3059\u304f\u306a\u3044 \u200b\u601d\u200b\u3046 \u304a\u3082\u3046 \u200b\u8ba4\u4e3a\u200b \u200b\u591a\u200b\u304f \u304a\u304a\u304f \u200b\u591a\u200b \u200b\u8a00\u200b\u3046 \u3044\u3046 \u200b\u8bf4\u200b \u200b\u5404\u5730\u200b \u304b\u304f\u3061 \u200b\u5404\u5730\u200b \u200b\u77ed\u671f\u200b \u305f\u3093\u304d \u200b\u77ed\u671f\u200b \u200b\u500b\u200b\u4eba\u200b \u3053\u3058\u3093 \u200b\u4e2a\u4eba\u200b \u200b\u5927\u52e2\u200b \u304a\u304a\u305c\u3044 \u200b\u5927\u591a\u6570\u200b \u200b\u56fd\u200b \u304f\u306b \u200b\u56fd\u5bb6\u200b \u200b\u65b9\u200b \u307b\u3046 \u200b\u65b9\u9762\u200b \u200b\u5024\u200b\u6bb5\u200b \u306d\u3060\u3093 \u200b\u4ef7\u683c\u200b \u200b\u5834\u5408\u200b \u3070\u3042\u3044 \u200b\u60c5\u51b5\u200b \u200b\u4e0d\u8981\u200b \u3075\u3088\u3046 \u200b\u4e0d\u200b\u9700\u8981\u200b \u200b\u7c21\u200b\u5358\u200b \u304b\u3093\u305f\u3093 \u200b\u7b80\u5355\u200b \u3057\u304b\u3057 \u200b\u4f46\u662f\u200b \u200b\u4e00\u751f\u200b\u61f8\u547d\u200b \u3044\u3063\u3057\u3087\u3046\u3051\u3093\u3081\u3044 \u200b\u52aa\u529b\u200b \u200b\u52c9\u5f37\u200b \u3079\u3093\u304d\u3087\u3046 \u200b\u5b66\u4e60\u200b \u200b\u8cb4\u91cd\u200b \u304d\u3061\u3087\u3046 \u200b\u8d35\u91cd\u200b \u200b\u9752\u6625\u200b \u305b\u3044\u3057\u3085\u3093 \u200b\u9752\u6625\u200b \u200b\u4e00\u65e5\u200b \u3044\u3061\u306b\u3061 \u200b\u4e00\u5929\u200b \u200b\u5927\u5207\u200b \u305f\u3044\u305b\u3064 \u200b\u91cd\u8981\u200b \u200b\u590f\u4f11\u200b\u307f \u306a\u3064\u3084\u3059\u307f \u200b\u6691\u5047\u200b \u200b\u904e\u200b\u3054\u3059 \u3059\u3054\u3059 \u200b\u5ea6\u8fc7\u200b \u200b\u6b8b\u200b\u308b \u306e\u3053\u308b \u200b\u5269\u4f59\u200b \u200b\u8a66\u200b\u9a13\u200b \u3057\u3051\u3093 \u200b\u8003\u8bd5\u200b \u200b\u53d7\u200b\u3051\u308b \u3046\u3051\u308b \u200b\u53c2\u52a0\u200b \u304a\u200b\u76c6\u200b \u304a\u307c\u3093 \u200b\u76c2\u200b\u5170\u76c6\u200b \u304f\u308b \u200b\u6765\u200b \u200b\u4e07\u91cc\u200b\u9577\u200b\u57ce\u200b \u3070\u3093\u308a\u3061\u3087\u3046\u3058\u3087\u3046 \u200b\u4e07\u91cc\u957f\u57ce\u200b \u200b\u6848\u5185\u200b \u3042\u3093\u306a\u3044 \u200b\u5bfc\u6e38\u200b \u305d\u3046 \u200b\u8fd9\u6837\u200b \u200b\u826f\u200b\u3044 \u3088\u3044 \u200b\u597d"},{"location":"latex/","title":"LaTeX","text":"<p>\u200b\u8bb0\u5f55\u200bLaTeX\u200b\u7684\u200b\u4f7f\u7528\u200b\u3002</p>"},{"location":"latex/#_1","title":"\u57fa\u672c\u200b\u6392\u7248","text":"<ul> <li>\u200b\u5b57\u4f53\u200b\u4e0e\u200b\u5b57\u53f7\u200b</li> <li>\u200b\u5217\u8868\u200b</li> </ul>"},{"location":"latex/#_2","title":"\u6570\u5b66\u516c\u5f0f\u200b\u6392\u7248","text":"<ul> <li>\u200b\u6570\u5b66\u200b\u7b26\u53f7\u200b</li> <li>\u200b\u7b26\u53f7\u200b\u5806\u53e0\u200b</li> <li>\u200b\u7279\u6b8a\u200b\u6280\u5de7\u200b</li> </ul>"},{"location":"latex/#_3","title":"\u56fe\u8868\u200b\u6392\u7248","text":""},{"location":"latex/#tikz","title":"tikz\u200b\u7ed8\u56fe","text":"<ul> <li>pgfplots\u200b\u56fe\u8868\u200b</li> </ul>"},{"location":"latex/#_4","title":"\u8868\u683c\u200b\u6392\u7248","text":"<ul> <li>tabular\u200b\u73af\u5883\u200b</li> </ul>"},{"location":"latex/#_5","title":"\u5176\u4ed6","text":"<ul> <li>musixtex</li> <li>\u200b\u4f7f\u7528\u200bLaTeX\u200b\u521b\u5efa\u200b\u5e7b\u706f\u7247\u200b</li> <li>\u200b\u9012\u5f52\u200b</li> </ul>"},{"location":"latex/advanced/recursion/","title":"\u9012\u5f52","text":"<p>LaTeX\u200b\u4e2d\u200b\u7684\u200b\u9012\u5f52\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b<code>\\def</code>\u200b\u547d\u4ee4\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u5728\u200b\u5b9a\u4e49\u200b\u7684\u200b\u5b8f\u4e2d\u200b\u5305\u542b\u200b\u81ea\u8eab\u200b\u5373\u53ef\u200b\u3002</p> <pre><code>\\def\\recursion#1{\n    \\ifx#1\\relax\n        \\relax\n    \\else\n        do something\n        \\expandafter\\recursion\n    \\fi\n}\n</code></pre> <p>\u200b\u5728\u200b\u5b8f\u200b\u7b2c\u4e00\u6b21\u200b\u5c55\u5f00\u200b\u540e\u200b\uff0c\u200b\u5982\u679c\u200b<code>#1</code>\u200b\u4e0d\u662f\u200b<code>\\relax</code>\uff0c\u200b\u5219\u200b\u4f1a\u200b\u8f6c\u5165\u200b<code>\\else</code>\u200b\u8bed\u53e5\u200b\u8fdb\u884c\u200b\u7b2c\u4e8c\u6b21\u200b\u5c55\u5f00\u200b\u3002</p> <ul> <li>\u200b\u5b8f\u200b\u5b9a\u4e49\u200b\u4e2d\u200b\u5f15\u7528\u200b\u7684\u200b\u5b8f\u200b\u540d\u79f0\u200b\u524d\u200b\u5fc5\u987b\u200b\u52a0\u200b<code>\\expandafter</code>\uff0c\u200b\u8868\u793a\u200b\u5728\u200b\u5c55\u5f00\u200b\u5f53\u524d\u200b\u5b8f\u540e\u200b\u624d\u200b\u5c55\u5f00\u200b<code>\\recursion</code>\uff1b</li> <li><code>\\relax</code>\u200b\u662f\u200b\u5b8f\u200b\u7684\u200b\u7ec8\u6b62\u200b\u6761\u4ef6\u200b\uff0c\u200b\u8f93\u5165\u200b\u5e8f\u5217\u200b\u9700\u8981\u200b\u4ee5\u200b<code>\\relax</code>\u200b\u7ed3\u5c3e\u200b\u3002</li> </ul>"},{"location":"latex/basics/fonts/","title":"LaTeX\u200b\u4e2d\u200b\u7684\u200b\u5b57\u4f53\u200b\u4e0e\u200b\u5b57\u53f7","text":""},{"location":"latex/basics/fonts/#_1","title":"\u5b57\u53f7","text":"<p>\\(\\LaTeX\\)\u200b\u4e2d\u5171\u200b\u6709\u200b<code>\\tiny</code>\u3001<code>\\scriptsize</code>\u3001<code>\\footnotesize</code>\u3001<code>\\small</code>\u3001<code>\\normalsize</code>\u3001<code>\\large</code>\u3001<code>\\Large</code>\u3001<code>\\LARGE</code>\u3001<code>\\huge</code>\u3001<code>\\Huge</code>\u200b\u7b49\u200b10\u200b\u79cd\u200b\u76f8\u5bf9\u200b\u5c3a\u5bf8\u200b\u7684\u200b\u5b57\u53f7\u200b\u8bbe\u7f6e\u200b\u3002\u200b\u6bcf\u6b21\u200b\u4fee\u6539\u200b\u5b57\u53f7\u200b\u540e\u200b\uff0c\u200b\u4f1a\u200b\u5bf9\u200b\u547d\u4ee4\u200b\u540e\u200b\u6240\u6709\u200b\u7684\u200b\u6587\u672c\u200b\u751f\u6548\u200b\u3002\u200b\u5982\u679c\u200b\u4ec5\u200b\u9700\u8981\u200b\u4fee\u6539\u200b\u4e00\u90e8\u5206\u200b\u6587\u5b57\u200b\u7684\u200b\u5b57\u53f7\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u9700\u8981\u200b\u8c03\u6574\u200b\u5b57\u53f7\u200b\u7684\u200b\u90e8\u5206\u200b\u4f7f\u7528\u200b\u82b1\u200b\u62ec\u53f7\u200b<code>{}</code>\u200b\u5305\u56f4\u200b\u3002</p> <p>LaTeX\u200b\u4e2d\u200b\u7684\u200b\u5b57\u53f7\u200b</p> tex\u200b\u4ee3\u7801\u200b\u6e32\u67d3\u200b\u7ed3\u679c\u200b <pre><code>\\centering\n\\tiny tiny \\\\\n\\scriptsize scriptsize \\\\\n\\footnotesize footnotesize \\\\\n\\small small \\\\\n\\normalsize normalsize \\\\\n\\large large \\\\\n\\Large Large \\\\\n\\LARGE LARGE \\\\\n\\huge huge \\\\\n\\Huge Huge \\\\\n</code></pre> <p></p>"},{"location":"latex/basics/lists/","title":"\u5217\u8868","text":"<p>\u200b\u5728\u200bLaTeX\u200b\u4e2d\u200b\uff0c<code>enumerate</code>\u200b\u73af\u5883\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u7f16\u53f7\u200b\u5217\u8868\u200b\uff0c<code>itemize</code>\u200b\u73af\u5883\u200b\u4e0e\u200b<code>description</code>\u200b\u73af\u5883\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u7b26\u53f7\u200b\u5217\u8868\u200b\u3002\u200b\u6240\u6709\u200b\u7684\u200b\u5217\u8868\u200b\u4f7f\u7528\u200b<code>\\item</code>\u200b\u547d\u4ee4\u200b\u5b9a\u4e49\u200b\u5217\u8868\u200b\u9879\u200b\u3002\u200b\u5217\u8868\u200b\u53ef\u4ee5\u200b\u81ea\u5b9a\u4e49\u200b\u4f7f\u7528\u200b\u7684\u200b\u7f16\u53f7\u200b\u4e0e\u200b\u7b26\u53f7\u200b\u3002</p> <p>\u200b\u5f53\u200b\u5217\u8868\u200b\u88ab\u200b\u5d4c\u5957\u200b\u65f6\u200b\uff0c\u200b\u4e0d\u540c\u200b\u5c42\u6b21\u200b\u7684\u200b\u5217\u8868\u200b\u4f1a\u200b\u4f7f\u7528\u200b\u4e0d\u540c\u200b\u7684\u200b\u7f16\u53f7\u200b\u4ee5\u200b\u907f\u514d\u200b\u6df7\u6dc6\u200b\u3002</p>"},{"location":"latex/basics/lists/#_2","title":"\u57fa\u672c\u200b\u4f7f\u7528","text":""},{"location":"latex/basics/lists/#enumerate","title":"<code>enumerate</code>\u200b\u73af\u5883","text":"<p><code>enumerate</code>\u200b\u73af\u5883\u200b\u7684\u200b\u4f7f\u7528\u200b\u65b9\u5f0f\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>\\begin{enumerate}\n    \\item This is an item.\n    \\item This is an item.\n    \\item This is an item.\n\\end{enumerate}\n</code></pre> <p>\u200b\u6e32\u67d3\u200b\u540e\u200b\u7684\u200b\u6548\u679c\u200b\uff1a</p> <ol> <li>This is an item.</li> <li>This is an item.</li> <li>This is an item.</li> </ol> <p><code>enumerate</code>\u200b\u73af\u5883\u200b\u9ed8\u8ba4\u200b\u4f7f\u7528\u200b<code>1. 2. 3. ...</code>\u200b\u8fdb\u884c\u200b\u7f16\u53f7\u200b\uff0c\u200b\u81ea\u5b9a\u4e49\u200b\u7f16\u53f7\u200b\u901a\u8fc7\u200b\u5728\u200b<code>\\begin{enumerate}</code>\u200b\u540e\u200b\u6dfb\u52a0\u200b\u53c2\u6570\u200b\u5b9e\u73b0\u200b\u3002</p> <pre><code>\\begin{enumerate}[A.]\n    \\item This is an item.\n    \\item This is an item.\n    \\item This is an item.\n\\end{enumerate}\n</code></pre> <p>\u200b\u6e32\u67d3\u200b\u540e\u200b\u7684\u200b\u6548\u679c\u200b\uff1a</p> <p>A. This is an item. B. This is an item. C. This is an item.</p> <p>\u200b\u5728\u200b<code>enumerate</code>\u200b\u4e0e\u200b<code>item</code>\u200b\u73af\u5883\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>\\setlength</code>\u200b\u8c03\u8282\u200b\u5217\u8868\u200b\u9879\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8ddd\u79bb\u200b\uff0c\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <pre><code>\\setlength{\\itemsep}{0pt}\n\\setlength{\\parskip}{0pt}\n\\setlength{\\itemindent}{1em}\n</code></pre> <p>\u200b\u81ea\u5b9a\u4e49\u200b\u7f16\u53f7\u200b\u5217\u8868\u200b\u9700\u8981\u200b\u5f15\u5165\u200b<code>enumerate</code>\u200b\u5305\u200b\uff1a<code>\\usepackage{enumerate}</code></p>"},{"location":"latex/basics/lists/#itemize","title":"<code>itemize</code>\u200b\u73af\u5883","text":"<p><code>itemize</code>\u200b\u73af\u5883\u200b\u7528\u4e8e\u200b\u751f\u6210\u200b\u7b26\u53f7\u200b\u5217\u8868\u200b\uff0c\u200b\u4f7f\u7528\u200b\u65b9\u5f0f\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>\\begin{itemize}\n    \\item This is an item.\n    \\item This is an item.\n    \\item This is an item.\n\\end{itemize}\n</code></pre> <p>\u200b\u6e32\u67d3\u200b\u540e\u200b\u7684\u200b\u6548\u679c\u200b\uff1a</p> <ul> <li>This is an item.</li> <li>This is an item.</li> <li>This is an item.</li> </ul> <p><code>\\item</code>\u200b\u547d\u4ee4\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4e2d\u62ec\u53f7\u200b\u6307\u5b9a\u200b\u5f53\u524d\u200b\u9879\u200b\u4f7f\u7528\u200b\u7684\u200b\u7b26\u53f7\u200b\uff0c\u200b\u5982\u200b<code>\\item[-]</code>\u200b\u4f7f\u7528\u200b<code>-</code>\u200b\u4f5c\u4e3a\u200b\u7b26\u53f7\u200b</p>"},{"location":"latex/floats/table/","title":"tabular\u200b\u73af\u5883","text":"<p><code>tabular</code>\u200b\u73af\u5883\u200b\u662f\u200b\\(\\LaTeX{}\\)\u200b\u7528\u4e8e\u200b\u521b\u5efa\u8868\u683c\u200b\u7684\u200b\u73af\u5883\u200b\u3002</p>"},{"location":"latex/floats/table/#_1","title":"\u57fa\u672c\u200b\u4f7f\u7528","text":"<p>\u200b\u5982\u4e0b\u200b\u4ee3\u7801\u200b\u6f14\u793a\u200b\u4e86\u200b<code>tabular</code>\u200b\u8bed\u53e5\u200b\u7684\u200b\u4f7f\u7528\u200b\u65b9\u6cd5\u200b,\u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b3\u200b\u884c\u200b3\u200b\u5217\u200b\u7684\u200b\u8868\u683c\u200b\u3002</p> <p>tabular\u200b\u57fa\u672c\u200b\u4f7f\u7528\u200b</p> tex\u200b\u4ee3\u7801\u200b\u6e32\u67d3\u200b\u7ed3\u679c\u200b <pre><code>\\begin{tabular}{|c|c|c|}\n    \\hline 2    &amp; 9     &amp; 4     \\\\\n    \\hline 7    &amp; 5     &amp; 3     \\\\\n    \\hline 6    &amp; 1     &amp; 8     \\\\\n    \\hline\n\\end{tabular}\n</code></pre> <p></p>"},{"location":"latex/floats/table/#_2","title":"\u5bfc\u8a00\u200b\u533a","text":"<p><code>\\begin{tabular}</code>\u200b\u5176\u540e\u200b\u7d27\u8ddf\u200b\u7684\u200b\u4e00\u5bf9\u200b\u62ec\u53f7\u200b\u5185\u200b\u662f\u200b\u5bfc\u8a00\u200b\u533a\u200b\uff0c\u200b\u5bfc\u8a00\u200b\u533a\u200b\u89c4\u5b9a\u200b\u4e86\u200b\u5355\u5143\u683c\u200b\u7684\u200b\u7eb5\u5411\u200b\u8fb9\u6846\u200b\u548c\u200b\u5355\u5143\u683c\u200b\u5185\u200b\u5143\u7d20\u200b\u7684\u200b\u5bf9\u9f50\u200b\u65b9\u5f0f\u200b\u3002</p> <ul> <li><code>l</code>\u3001<code>c</code>\u3001<code>r</code>\u200b\u5206\u522b\u200b\u5bf9\u5e94\u200b\u5de6\u200b\u5bf9\u9f50\u200b\uff0c\u200b\u5c45\u4e2d\u200b\uff0c\u200b\u53f3\u200b\u5bf9\u9f50\u200b</li> <li><code>|</code>\u3001<code>||</code>\u200b\u5bf9\u5e94\u200b\u8868\u683c\u200b\u7eb5\u5411\u200b\u6846\u7ebf\u200b\u7c7b\u578b\u200b\uff08\u200b\u5355\u7ebf\u200b\u6216\u200b\u53cc\u7ebf\u200b\uff09</li> <li><code>@{exp}</code>\u200b\u6307\u5b9a\u200b\u63d2\u5165\u200b\u5230\u200b\u5217\u4e2d\u200b\u7684\u200b\u6587\u672c\u200b</li> <li><code>*{n}{pre}</code>\u200b\u6307\u200b\u91cd\u590d\u200b<code>pre</code>\u200b\u5185\u5bb9\u200b<code>n</code>\u200b\u6b21\u200b</li> <li><code>p{len}</code>\u200b\u5c06\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5217\u200b\u653e\u5165\u200b\u4e00\u4e2a\u200bparbox\u200b\u4e2d\u200b</li> </ul> <p>\u200b\u6839\u636e\u200b\u5982\u200b\u4e0a\u200b\u8868\u8ff0\u200b\uff0c\u200b\u5bfc\u8a00\u200b\u533a\u200b<code>{|c|c|c|}</code>\u200b\u7b49\u4ef7\u200b\u4e8e\u200b<code>{*{3}{|c}|}</code></p> <p>\u200b\u5bfc\u8a00\u200b\u533a\u200b</p> tex\u200b\u4ee3\u7801\u200b\u6e32\u67d3\u200b\u7ed3\u679c\u200b <pre><code>\\begin{tabular}{||l|c|r||}\n    \\hline 2    &amp; 91    &amp; 4     \\\\\n    \\hline 71   &amp; 5     &amp; 32    \\\\\n    \\hline 652  &amp; 251   &amp; 89    \\\\\n    \\hline\n\\end{tabular}\n</code></pre> <p></p>"},{"location":"latex/floats/table/#_3","title":"\u5408\u5e76\u200b\u5355\u5143\u683c","text":"<p>\u200b\u6a2a\u5411\u200b\u5408\u5e76\u200b\u5355\u5143\u683c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>\\multicolumn</code>\u200b\u547d\u4ee4\u200b\uff0c\u200b\u7eb5\u5411\u200b\u5408\u5e76\u200b\u5355\u5143\u683c\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b<code>multirow</code>\u200b\u5b8f\u5305\u200b\u4e2d\u200b\u7684\u200b<code>\\multirow</code>\u200b\u547d\u4ee4\u200b\uff1a</p> <ul> <li><code>\\multicolumn</code>\u200b\u547d\u4ee4\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u6307\u5b9a\u200b\u5408\u5e76\u200b\u5217\u200b\u7684\u200b\u6570\u91cf\u200b\uff0c\u200b\u7b2c\u4e8c\u4e2a\u200b\u53c2\u6570\u200b\u662f\u200b\u5408\u5e76\u200b\u540e\u200b\u5355\u5143\u683c\u200b\u7684\u200b\u5bfc\u8a00\u200b\u5217\u200b</li> <li><code>\\multirow</code>\u200b\u547d\u4ee4\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u6307\u5b9a\u200b\u5408\u5e76\u200b\u884c\u200b\u7684\u200b\u6570\u91cf\u200b\uff0c\u200b\u7b2c\u4e8c\u4e2a\u200b\u53c2\u6570\u200b\u6307\u5b9a\u200bLaTeX\u200b\u81ea\u884c\u200b\u8bbe\u7f6e\u200b\u5bbd\u5ea6\u200b\uff0c\u200b\u7b2c\u4e09\u4e2a\u200b\u53c2\u6570\u200b\u4e3a\u200b\u5355\u5143\u683c\u200b\u5185\u5bb9\u200b</li> </ul> <p>\u200b\u5408\u5e76\u200b\u5355\u5143\u683c\u200b</p> tex\u200b\u4ee3\u7801\u200b\u6e32\u67d3\u200b\u7ed3\u679c\u200b <pre><code>\\begin{tabular}{|ccc|}\n    \\hline\n    2   &amp; 9     &amp; 4\\\\\n    7   &amp; \\multicolumn{2}{c|} {\\multirow{2}*{{?}}} \\\\\n    6   &amp;       &amp;\\\\\n    \\hline\n\\end{tabular}\n</code></pre> <p></p>"},{"location":"latex/floats/table/#_4","title":"\u4e09\u7ebf\u200b\u8868","text":"<p>LaTeX\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u4e09\u7ebf\u200b\u8868\u200b\u9700\u8981\u200b\u7528\u5230\u200b<code>booktabs</code>\u200b\u5b8f\u5305\u200b\uff0c\u200b\u52a0\u5165\u200b\u5b8f\u5305\u200b\u540e\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>\\toprule</code>\u3001<code>\\midrule</code>\u200b\u4e0e\u200b<code>\\bottomrule</code>\u200b\u753b\u7ebf\u200b\uff08\u200b\u4e0d\u5e94\u200b\u518d\u200b\u4f7f\u7528\u200b<code>\\hline</code>\u200b\u547d\u4ee4\u200b\uff09\u3002</p> <p>\u200b\u4e09\u7ebf\u200b\u8868\u200b</p> tex\u200b\u4ee3\u7801\u200b\u6e32\u67d3\u200b\u7ed3\u679c\u200b <pre><code>\\begin{tabular}{ccc}\n    \\toprule\n    2   &amp; 91    &amp; 4     \\\\\n    \\midrule\n    71  &amp; 5     &amp; 32    \\\\\n    652 &amp; 251   &amp; 89    \\\\\n    \\bottomrule\n\\end{tabular}\n</code></pre> <p></p>"},{"location":"latex/floats/table/#_5","title":"\u989c\u8272\u200b\u586b\u5145","text":"<p>\u200b\u989c\u8272\u200b\u586b\u5145\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b<code>colortbl</code>\u200b\u5b8f\u5305\u200b\uff0c\u200b\u4f7f\u7528\u200b<code>\\rowcolor</code>\u200b\u547d\u4ee4\u200b\u6307\u5b9a\u200b\u884c\u200b\u7684\u200b\u586b\u5145\u200b\u989c\u8272\u200b\uff0c\u200b\u6216\u200b<code>\\cellcolor</code>\u200b\u547d\u4ee4\u200b\u6307\u5b9a\u200b\u5355\u5143\u683c\u200b\u7684\u200b\u586b\u5145\u200b\u989c\u8272\u200b\u3002\u200b\u586b\u5145\u200b\u989c\u8272\u200b\u53ef\u4ee5\u200b\u9009\u62e9\u200b\u7070\u5ea6\u200b<code>[gray]</code>\u200b\u6216\u200b\u5f69\u8272\u200b<code>[rgb]</code>\u3002</p> <p>\u200b\u989c\u8272\u200b\u586b\u5145\u200b</p> tex\u200b\u4ee3\u7801\u200b\u6e32\u67d3\u200b\u7ed3\u679c\u200b <pre><code>\\begin{tabular}{ccc}\n    \\rowcolor[gray]{0.6} 2    &amp; 9     &amp; 4     \\\\\n    \\rowcolor[gray]{0.7} 7    &amp; 5     &amp; 3     \\\\\n    \\rowcolor[gray]{0.8} 6    &amp; 1     &amp; 8     \\\\\n\\end{tabular}\n</code></pre> <p></p>"},{"location":"latex/floats/table/#_6","title":"\u659c\u7ebf\u200b\u8868\u5934","text":"<p>\u200b\u659c\u7ebf\u200b\u8868\u5934\u200b\u7531\u200b<code>diagbox</code>\u200b\u5b8f\u5305\u200b\u63d0\u4f9b\u200b\uff0c\u200b\u4f7f\u7528\u200b\u65b9\u6cd5\u200b\u5982\u4e0b\u200b\uff1a</p> <p>\u200b\u659c\u7ebf\u200b\u8868\u5934\u200b</p> tex\u200b\u4ee3\u7801\u200b\u6e32\u67d3\u200b\u7ed3\u679c\u200b <pre><code>\\begin{tabular}{|l|ccc|}\n    \\hline\n    \\diagbox{Time}{Room}{Day} &amp; Mon &amp; Tue &amp; Wed \\\\\n    \\hline\n    Morning &amp; used &amp; used &amp; \\\\\n    Afternoon &amp; &amp; used &amp; used \\\\\n    \\hline\n\\end{tabular}\n</code></pre> <p></p>"},{"location":"latex/math/stack/","title":"LaTeX \u200b\u7b26\u53f7\u200b\u5806\u53e0","text":""},{"location":"latex/math/stack/#_1","title":"\u7b26\u53f7\u200b\u4e0a\u4e0b\u200b\u52a0\u200b\u6587\u672c","text":"<p>\u200b\u90e8\u5206\u200b\u5927\u578b\u200b\u8fd0\u7b97\u7b26\u200b\uff08\u200b\u53c2\u89c1\u200b\u6570\u5b66\u200b\u7b26\u53f7\u200b\uff09\u200b\u53ef\u4ee5\u200b\u52a0\u5165\u200b\u4e0a\u4e0b\u200b\u6807\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u884c\u95f4\u200b\u516c\u5f0f\u200b\uff0c\u200b\u8fd0\u7b97\u7b26\u200b\u7684\u200b\u4e0a\u4e0b\u200b\u6807\u6709\u200b\u4e24\u79cd\u200b\u4f4d\u7f6e\u200b\u9009\u62e9\u200b\uff1a</p> <ul> <li>\u200b\u4e0a\u4e0b\u200b\u6807\u5728\u200b\u7b26\u53f7\u200b\u4e0a\u4e0b\u200b\u4e24\u4fa7\u200b\uff0c\u200b\u5982\u200b   $$   \\sum_{i=0}^\\infty   $$</li> <li>\u200b\u4e0a\u4e0b\u200b\u6807\u5728\u200b\u7b26\u53f7\u200b\u53f3\u4fa7\u200b\uff0c\u200b\u5982\u200b   $$   \\int_0^\\infty   $$</li> </ul> <p>\u200b\u884c\u5185\u200b\u516c\u5f0f\u200b\u9ed8\u8ba4\u200b\u6240\u6709\u200b\u7684\u200b\u4e0a\u4e0b\u200b\u6807\u90fd\u200b\u5728\u200b\u7b26\u53f7\u200b\u53f3\u4fa7\u200b\uff0c\u200b\u5982\u200b\\(\\sum_{i=0}^\\infty\\)\u3002\u200b\u4f7f\u7528\u200b<code>\\limits</code>\u200b\u53ef\u4ee5\u200b\u5f3a\u5236\u200b\u4e0a\u4e0b\u200b\u6807\u51fa\u200b\u73b0\u5728\u200b\u8fd0\u7b97\u7b26\u200b\u4e0a\u4e0b\u200b\u4e24\u4fa7\u200b\uff0c\u200b\u5982\u200b</p> <p><code>\\limits</code>\u200b\u547d\u4ee4\u200b</p> LaTeX\u200b\u4ee3\u7801\u200b\u6e32\u67d3\u200b\u7ed3\u679c\u200b <pre><code>$\\sum\\limits_{i=0}^\\infty$\n</code></pre> <p>\\(\\sum\\limits_{i=0}^\\infty\\)</p> <p><code>\\overset</code>\u3001<code>\\underset</code>\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u5728\u200b\u7b26\u53f7\u200b\u4e0a\u4e0b\u200b\u63d2\u5165\u200b\u7b26\u53f7\u200b\u3002<code>\\stackrel</code>\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u4e0e\u200b<code>\\overset</code>\u200b\u76f8\u540c\u200b\u7684\u200b\u529f\u80fd\u200b\u3002</p> <p><code>\\overset</code>\u200b\u547d\u4ee4\u200b\u4e0e\u200b<code>\\underset</code>\u200b\u547d\u4ee4\u200b</p> LaTeX\u200b\u4ee3\u7801\u200b\u6e32\u67d3\u200b\u7ed3\u679c\u200b <pre><code>\\begin{equation*}\n    \\begin{aligned}\n        &amp;\\overset{above}{\\rightarrow} \\\\\n        &amp;\\underset{below}{\\rightarrow} \\\\\n    \\end{aligned}\n\\end{\\equation*}\n</code></pre> \\[ \\begin{aligned}     &amp;\\overset{above}{\\rightarrow} \\\\     &amp;\\underset{below}{\\rightarrow} \\\\ \\end{aligned} \\] <p>\u200b\u5982\u679c\u200b\u9700\u8981\u200b\u6362\u884c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>\\substack</code>\u200b\u547d\u4ee4\u200b\uff1a</p> <p><code>\\substack</code>\u200b\u547d\u4ee4\u200b</p> LaTeX\u200b\u4ee3\u7801\u200b\u6e32\u67d3\u200b\u7ed3\u679c\u200b <pre><code>\\begin{equation*}\n    \\begin{aligned}\n        &amp;\\overset{\\substack{above1 \\\\ above2}}{\\rightarrow} \\\\\n        &amp;\\underset{\\substack{below1 \\\\ below2}}{\\rightarrow} \\\\\n    \\end{aligned}\n\\end{\\equation*}\n</code></pre> \\[ \\begin{aligned}     &amp;\\overset{\\substack{above1 \\\\ above2}}{\\rightarrow} \\\\     &amp;\\underset{\\substack{below1 \\\\ below2}}{\\rightarrow} \\\\ \\end{aligned} \\]"},{"location":"latex/math/stack/#_2","title":"\u7bad\u5934\u200b\u4e0a\u4e0b\u200b\u52a0\u200b\u6587\u672c","text":"<p><code>\\overset</code>\u3001<code>\\stackrel</code>\u200b\u4e0e\u200b<code>\\underset</code>\u200b\u53ea\u80fd\u200b\u5b9e\u73b0\u200b\u7bad\u5934\u200b\u4e0a\u4e0b\u200b\u52a0\u200b\u6587\u672c\u200b\uff0c\u200b\u7bad\u5934\u200b\u7684\u200b\u957f\u5ea6\u200b\u4e0d\u80fd\u200b\u968f\u200b\u6587\u672c\u200b\u957f\u5ea6\u200b\u81ea\u52a8\u200b\u8c03\u6574\u200b\u3002<code>amsmath</code>\u200b\u5b8f\u5305\u200b\u63d0\u4f9b\u200b\u4e86\u200b<code>\\xleftarrow</code>\u200b\u4e0e\u200b<code>\\xrightarrow</code>\uff0c\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u7bad\u5934\u200b\u4e0a\u4e0b\u200b\u52a0\u200b\u6587\u672c\u200b\uff0c\u200b\u540c\u65f6\u200b\u7bad\u5934\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u9002\u5e94\u200b\u6587\u672c\u200b\u7684\u200b\u957f\u5ea6\u200b\u3002<code>extarrows</code>\u200b\u5b8f\u5305\u200b\u63d0\u4f9b\u200b\u4e86\u200b<code>\\xlongequal</code>\u200b\u547d\u4ee4\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u7b49\u200b\u53f7\u200b\u4e0a\u4e0b\u200b\u52a0\u200b\u6587\u672c\u200b\uff0c\u200b\u793a\u4f8b\u200b\u5982\u4e0b\u200b\uff1a</p> <p><code>\\xrightarrow</code>\u200b\u547d\u4ee4\u200b</p> LaTeX\u200b\u4ee3\u7801\u200b\u6e32\u67d3\u200b\u7ed3\u679c\u200b <pre><code>\\begin{itemize}\n    \\item $\\xleftarrow[\\text{below}]{\\text{above}}$\n    \\item $\\xrightarrow[\\text{very very long below}]{\\text{very very long above}}$\n    \\item $\\xlongequal[\\text{very very long below}]{\\text{very very long above}}$\n\\end{itemize}\n</code></pre> <p></p> <p>\u200b\u5b9a\u4e49\u200b\u7b26\u53f7\u200b\\(\\triangleq\\)\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b<code>\\triangleq</code>\u200b\u8f93\u5165\u200b\u3002</p>"},{"location":"latex/math/symbols/","title":"LaTeX \u200b\u6570\u5b66\u200b\u7b26\u53f7","text":"<p>\u200b\u6536\u96c6\u200b\\(\\LaTeX\\)\u200b\u5e38\u7528\u200b\u7684\u200b\u6570\u5b66\u200b\u7b26\u53f7\u200b\u547d\u4ee4\u200b</p>"},{"location":"latex/math/symbols/#_1","title":"\u5b57\u6bcd\u200b\u53d8\u4f53","text":"<p>\u200b\u5e38\u7528\u547d\u4ee4\u200b\u6709\u200b\uff1a<code>\\mathcal</code>\u3001<code>\\mathbb</code>\u3001<code>\\mathfrak</code>\u3001<code>\\mathsf</code>\u3001<code>\\mathbf</code>\u3001<code>\\boldsymbol</code>\u3001<code>\\mathit</code>\u3001<code>\\mathrm</code>\u200b\u7b49\u200b\u3002\u200b\u5176\u4e2d\u200b<code>\\mathcal</code>\u3001<code>\\mathbb</code>\u200b\u4ec5\u200b\u9002\u7528\u200b\u4e8e\u200b\u5927\u5199\u5b57\u6bcd\u200b\uff0c\u200b\u5176\u4f59\u200b\u547d\u4ee4\u200b\u5927\u5199\u200b\u3001\u200b\u5c0f\u5199\u5b57\u6bcd\u200b\u901a\u7528\u200b</p> <ul> <li><code>\\mathcal{A}</code>\uff1a\\(\\mathcal A\\)</li> <li><code>\\mathbb{A}</code>\uff1a\\(\\mathbb A\\)</li> <li><code>\\mathfrak{A}</code>\uff1a\\(\\mathfrak A\\)</li> <li><code>\\mathsf{A}</code>\uff1a\\(\\mathsf A\\)</li> <li><code>\\mathbf{A}</code>\uff1a\\(\\mathbf A\\)</li> <li><code>\\boldsymbol{A}</code>\uff1a\\(\\boldsymbol A\\)</li> <li><code>\\mathit{A}</code>\uff1a\\(\\mathit A\\)\uff08\u200b\u65e0\u200b\u6548\u679c\u200b\uff09</li> <li><code>\\mathrm{A}</code>\uff1a\\(\\mathrm A\\)</li> <li><code>\\mathscr{A}</code>\uff1a\\(\\mathscr A\\)\uff08\u200b\u9700\u8981\u200b\u5f15\u5165\u200b\u5b8f\u5305\u200b<code>mathrsfs</code>\uff09</li> </ul>"},{"location":"latex/math/symbols/#_2","title":"\u5e0c\u814a\u5b57\u6bcd","text":"\u5c0f\u5199\u200b \u200b\u547d\u4ee4\u200b \u200b\u5927\u5199\u200b \u200b\u547d\u4ee4\u200b \u200b\u53d8\u4f53\u200b \u200b\u547d\u4ee4\u200b \\(\\alpha\\) <code>\\alpha</code> \\(A\\) <code>A</code> \\(\\beta\\) <code>\\beta</code> \\(B\\) <code>B</code> \\(\\gamma\\) <code>\\gamma</code> \\(\\Gamma\\) <code>\\Gamma</code> \\(\\varGamma\\) <code>\\varGamma</code> \\(\\delta\\) <code>\\delta</code> \\(\\Delta\\) <code>\\Delta</code> \\(\\varDelta\\) <code>\\varDelta</code> \\(\\epsilon\\) <code>\\epsilonn</code> \\(E\\) <code>E</code> \\(\\varepsilon\\) <code>\\varepsilon</code> \\(\\zeta\\) <code>\\zeta</code> \\(Z\\) <code>Z</code> \\(\\eta\\) <code>\\eta</code> \\(H\\) <code>H</code> \\(\\theta\\) <code>\\theta</code> \\(\\Theta\\) <code>\\Theta</code> \\(\\vartheta,\\varTheta\\) <code>\\vartheta,\\varTheta</code> \\(\\iota\\) <code>\\iota</code> \\(I\\) <code>I</code> \\(\\kappa\\) <code>\\kappa</code> \\(K\\) <code>K</code> \\(\\varkappa\\) <code>\\varkappa</code> \\(\\lambda\\) <code>\\lambda</code> \\(\\Lambda\\) <code>\\Lambda</code> \\(\\varLambda\\) <code>\\varLambda</code> \\(\\mu\\) <code>\\mu</code> \\(M\\) <code>M</code> \\(\\nu\\) <code>\\nu</code> \\(N\\) <code>N</code> \\(\\xi\\) <code>\\xi</code> \\(\\Xi\\) <code>\\Xi</code> \\(\\varXi\\) <code>\\varXi</code> \\(o\\) <code>o</code> \\(O\\) <code>O</code> \\(\\pi\\) <code>\\pi</code> \\(\\Pi\\) <code>\\Pi</code> \\(\\varpi, \\varPi\\) <code>\\varpi,\\varPi</code> \\(\\rho\\) <code>\\rho</code> \\(P\\) <code>P</code> \\(\\varrho\\) <code>\\varrho</code> \\(\\sigma\\) <code>\\sigma</code> \\(\\Sigma\\) <code>\\Sigma</code> \\(\\varsigma, \\varSigma\\) <code>\\varsigma,\\varSigma</code> \\(\\tau\\) <code>\\tau</code> \\(T\\) <code>T</code> \\(\\upsilon\\) <code>\\upsilon</code> \\(\\Upsilon\\) <code>\\Upsilon</code> \\(\\varUpsilon\\) <code>\\varUpsilon</code> \\(\\phi\\) <code>\\phi</code> \\(\\Phi\\) <code>\\Phi</code> \\(\\varphi, \\varPhi\\) <code>\\varphi,\\varPhi</code> \\(\\chi\\) <code>\\chi</code> \\(X\\) <code>X</code> \\(\\psi\\) <code>\\psi</code> \\(\\Psi\\) <code>\\Psi</code> \\(\\varPsi\\) <code>\\varPsi</code> \\(\\omega\\) <code>\\omega</code> \\(\\Omega\\) <code>\\Omega</code> \\(\\varOmega\\) <code>\\varOmega</code>"},{"location":"latex/math/symbols/#_3","title":"\u8fd0\u7b97\u7b26","text":"<p>\u200b\u5e38\u89c1\u200b\u8fd0\u7b97\u7b26\u200b\u5217\u4e8e\u200b\u4e0b\u8868\u200b\uff1a</p>"},{"location":"latex/math/symbols/#_4","title":"\u6570\u5b66\u200b\u8fd0\u7b97","text":"\u8fd0\u7b97\u7b26\u200b \u200b\u547d\u4ee4\u200b \\(\\times\\) <code>\\times</code> \\(\\div\\) <code>\\div</code> \\(\\odot\\) <code>\\odot</code> \\(\\oplus\\) <code>\\oplus</code> \\(\\otimes\\) <code>\\otimes</code>"},{"location":"latex/math/symbols/#_5","title":"\u96c6\u5408\u200b\u8fd0\u7b97","text":"\u8fd0\u7b97\u7b26\u200b \u200b\u547d\u4ee4\u200b \\(\\in\\) <code>\\in</code> \\(\\ni\\) <code>\\ni</code> \\(\\subset\\) <code>\\subset</code> \\(\\subseteq\\) <code>\\subseteq</code> \\(\\subseteqq\\) <code>\\oplsubseteqqu</code> \\(\\subsetneq\\) <code>\\subsetneq</code> \\(\\subsetneqq\\) <code>\\subsetneqq</code> \\(\\supset\\) <code>\\subset</code> \\(\\supseteq\\) <code>\\subseteq</code> \\(\\supseteqq\\) <code>\\oplsubseteqqu</code> \\(\\supsetneq\\) <code>\\subsetneq</code> \\(\\supsetneqq\\) <code>\\subsetneqq</code> \\(\\cap\\) <code>\\cap</code> \\(\\cup\\) <code>\\cup</code>"},{"location":"latex/math/symbols/#_6","title":"\u5173\u7cfb\u200b\u8fd0\u7b97\u7b26","text":"\u8fd0\u7b97\u7b26\u200b \u200b\u547d\u4ee4\u200b \\(\\geq\\) <code>\\geq</code> \\(\\geqq\\) <code>\\geqq</code> \\(\\geqslant\\) <code>\\geqslant</code> \\(\\gg\\) <code>\\gg</code> \\(\\ggg\\) <code>\\ggg</code> \\(\\leq\\) <code>\\leq</code> \\(\\leqq\\) <code>\\leqq</code> \\(\\leqslant\\) <code>\\leqslant</code> \\(\\ll\\) <code>\\ll</code> \\(\\lll\\) <code>\\lll</code> \\(\\sim\\) <code>\\sim</code> \\(\\approx\\) <code>\\approx</code>"},{"location":"latex/math/symbols/#_7","title":"\u903b\u8f91\u200b\u8fd0\u7b97\u7b26","text":"\u8fd0\u7b97\u7b26\u200b \u200b\u547d\u4ee4\u200b \\(\\lnot\\) <code>\\lnot</code> \\(\\land\\) <code>\\land</code> \\(\\lor\\) <code>\\lor</code> \\(\\forall\\) <code>\\forall</code> \\(\\exists\\) <code>\\exists</code>"},{"location":"latex/math/symbols/#_8","title":"\u51fd\u6570\u200b\u4e0e\u200b\u590d\u6742\u200b\u8fd0\u7b97","text":"\u8fd0\u7b97\u7b26\u200b \u200b\u547d\u4ee4\u200b \\(\\frac ab\\) <code>\\frac{a}{b}</code> \\(\\sum_i^n f\\) <code>\\sum_{i}^{n} f</code> \\(\\prod_i^n f\\) <code>\\prod_{i}^{n} f</code> \\(\\sqrt[x]{y}\\) <code>\\sqrt[x]{y}</code> \\(\\int_a^bf(x)\\mathrm dx\\) <code>\\int_a^bf(x)\\mathrm dx</code> \\(\\oint_Df(x)\\mathrm dx\\) <code>\\oint_Df(x)\\mathrm dx</code> \\(\\iint_Df(x)\\mathrm dx\\) <code>\\iint_Df(x)\\mathrm dx</code> \\(\\iiint_Df(x)\\mathrm dx\\) <code>\\iiint_Df(x)\\mathrm dx</code> \\(\\partial\\) <code>\\partial</code> \\(\\log\\) <code>\\log</code> \\(\\ln\\) <code>\\ln</code> \\(\\lg\\) <code>\\lg</code> \\(\\exp\\) <code>\\exp</code> \\(a\\mod b\\) <code>a\\mod b</code> \\(\\max\\) <code>\\max</code> \\(\\min\\) <code>\\min</code> \\(\\arg\\) <code>\\arg</code> \\(\\sin\\) <code>\\sin</code> \\(\\cos\\) <code>\\cos</code> \\(\\tan\\) <code>\\tan</code> \\(\\cot\\) <code>\\cot</code> \\(\\sinh\\) <code>\\sinh</code> \\(\\cosh\\) <code>\\cosh</code> \\(\\tanh\\) <code>\\tanh</code> \\(\\coth\\) <code>\\coth</code> \\(\\arcsin\\) <code>\\arcsin</code> \\(\\arccos\\) <code>\\arccos</code> \\(\\arctan\\) <code>\\arctan</code> \\(\\ker\\) <code>\\ker</code> \\(\\dim\\) <code>\\dim</code> \\(\\det\\) <code>\\det</code> \\(\\lim\\) <code>\\lim</code> \\(\\inf\\) <code>\\inf</code>"},{"location":"latex/math/symbols/#_9","title":"\u62ec\u53f7","text":"\u8fd0\u7b97\u7b26\u200b \u200b\u547d\u4ee4\u200b \\(\\{\\) <code>\\{</code> \\(\\}\\) <code>\\}</code> \\(\\langle\\) <code>\\langle</code> \\(\\rangle\\) <code>\\rangle</code> \\(\\lceil\\) <code>\\lceil</code> \\(\\rceil\\) <code>\\rceil</code> \\(\\lfloor\\) <code>\\lfloor</code> \\(\\rfloor\\) <code>\\rfloor</code> \\(\\|\\) <code>\\|</code>"},{"location":"latex/math/tricks/","title":"\u7279\u6b8a\u200b\u6280\u5de7","text":""},{"location":"latex/math/tricks/#_2","title":"\u516c\u5f0f\u200b\u5185\u200b\u4e2d\u6587","text":"<p>\u200b\u4f7f\u7528\u200b\u547d\u4ee4\u200b<code>\\text</code>\u200b\u6216\u200b<code>\\mbox</code>\u200b\u53ef\u4ee5\u200b\u5728\u200b\u516c\u5f0f\u200b\u4e2d\u200b\u52a0\u5165\u200b\u4e2d\u6587\u200b\u6587\u672c\u200b\u3002\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b<code>\\mathrm</code>\uff0c\u200b\u5219\u200b\u4e0d\u4f1a\u200b\u663e\u793a\u200b\u4e2d\u6587\u200b\u3002</p>"},{"location":"latex/math/tricks/#_3","title":"\u9690\u5f62\u200b\u5b57\u7b26","text":"<p><code>\\phantom</code>\u200b\u547d\u4ee4\u200b\u53ef\u4ee5\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u5360\u636e\u200b\u4e00\u5b9a\u200b\u7a7a\u95f4\u200b\u7684\u200b\u7a7a\u767d\u200b\uff0c\u200b\u7a7a\u767d\u200b\u7684\u200b\u957f\u5bbd\u200b\u7531\u200b\u53c2\u6570\u200b\u7684\u200b\u5c3a\u5bf8\u200b\u51b3\u5b9a\u200b\uff1a</p> \\[ \\begin{aligned}     \\bbox[border: 2px solid magenta]{\\phantom{\\int_0^1 x\\mathrm dx}} \\; &amp; \\bbox[border: 2px solid magenta]{\\int_0^1 x\\mathrm dx} \\\\     \\bbox[border: 2px solid magenta]{\\int_0^1 x\\mathrm dx} \\; &amp; \\end{aligned} \\] <p>\u200b\u6b64\u5916\u200b\uff0c<code>\\phantom</code>\u200b\u6709\u200b\u4e24\u4e2a\u200b\u53d8\u79cd\u200b<code>\\vphantom</code>\u200b\u4e0e\u200b<code>\\hphantom</code>\uff0c\u200b\u524d\u8005\u200b\u521b\u9020\u200b\u4e00\u4e2a\u200b\u5bbd\u5ea6\u200b\u4e3a\u200b0\uff0c\u200b\u9ad8\u5ea6\u200b\u4e3a\u200b\u6307\u5b9a\u200b\u9ad8\u5ea6\u200b\u7684\u200b\u7a7a\u767d\u200b\uff1b\u200b\u540e\u8005\u200b\u521b\u9020\u200b\u4e00\u4e2a\u200b\u9ad8\u5ea6\u200b\u4e3a\u200b0\uff0c\u200b\u5bbd\u5ea6\u200b\u4e3a\u200b\u6307\u5b9a\u200b\u5bbd\u5ea6\u200b\u7684\u200b\u7a7a\u767d\u200b\u3002\u200b\u5728\u200b\u5c3a\u5bf8\u200b\u6839\u636e\u200b\u5185\u5bb9\u200b\u800c\u53d8\u200b\u7684\u200b\u5bb9\u5668\u200b\u4e2d\u200b\uff0c<code>\\phantom</code>\u200b\u7b49\u200b\u4e00\u7cfb\u5217\u200b\u547d\u4ee4\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u63a7\u5236\u200b\u5bb9\u5668\u200b\u7684\u200b\u5927\u5c0f\u200b\u3002</p> <p><code>\\vphantom</code>\u200b\u4f7f\u7528\u200b\u573a\u666f\u200b</p> <p>\u200b\u5728\u200b<code>\\left</code>\u3001<code>\\right</code>\u200b\u7b49\u200b\u547d\u4ee4\u200b\u53ea\u80fd\u200b\u5728\u200b\u4e00\u884c\u200b\u4e0a\u200b\u63a7\u5236\u200b\u5de6\u53f3\u200b\u4e24\u4fa7\u200b\u62ec\u53f7\u200b\u7684\u200b\u5927\u5c0f\u200b\uff0c\u200b\u800c\u200b\u5f53\u200b\u516c\u5f0f\u200b\u4e2d\u200b\u51fa\u73b0\u200b\u8de8\u884c\u200b\uff0c<code>\\left</code>\u3001<code>\\right</code>\u200b\u5219\u200b\u65e0\u6cd5\u200b\u6b63\u786e\u200b\u5339\u914d\u200b\u3002\u200b\u6b64\u65f6\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>\\vphantom</code>\u200b\u547d\u4ee4\u200b\u5c06\u200b\u62ec\u53f7\u200b\u6491\u5f00\u200b\u3002</p> \u200b\u4e0d\u200b\u4f7f\u7528\u200b<code>\\vphantom</code>\u200b\u4f7f\u7528\u200b<code>\\vphantom</code> <pre><code>\\begin{equation}\n    \\begin{aligned}\n        \\frac{\\partial ^2\\Pi(x, t)}{\\partial x\\partial t} =\n        &amp; -(p-s)\\mathbb E_{Q, B, L}\\left[D(t)|Q(t)\\leq x\\right]f_{Q(t)}(x) \\\\\n        &amp; + h\\mathbb P(t &lt; B + L) - h\\mathbb E_{B, L} \\\\\n        &amp; \\times \\left[\\int_{t}^\\mathbb{B+L}\\mathbb E_Q\\left[D(t)|Q(t) - Q(\\tau)\\leq x, B\\leq t, L\\right]\\right. \\\\\n        &amp; \\color{magenta} \\times \\left. f_{Q(t) - Q(\\tau) | B\\leq t}(x)\\mathbb P(B\\leq t)\\mathrm d \\tau\\right]\n    \\end{aligned}\n\\end{equation}\n</code></pre> \\[ \\begin{aligned}     \\frac{\\partial ^2\\Pi(x, t)}{\\partial x\\partial t} =     &amp; -(p-s)\\mathbb E_{Q, B, L}\\left[D(t)|Q(t)\\leq x\\right]f_{Q(t)}(x) \\\\     &amp; + h\\mathbb P(t &lt; B + L) - h\\mathbb E_{B, L} \\\\     &amp; \\times \\left[\\int_{t}^\\mathbb{B+L}\\mathbb E_Q\\left[D(t)|Q(t) - Q(\\tau)\\leq x, B\\leq t, L\\right]\\right. \\\\     &amp; \\color{magenta} \\times \\left. f_{Q(t) - Q(\\tau) | B\\leq t}(x)\\mathbb P(B\\leq t)\\mathrm d \\tau\\right] \\end{aligned} \\] <pre><code>\\begin{equation}\n    \\begin{aligned}\n        \\frac{\\partial ^2\\Pi(x, t)}{\\partial x\\partial t} =\n        &amp; -(p-s)\\mathbb E_{Q, B, L}\\left[D(t)|Q(t)\\leq x\\right]f_{Q(t)}(x) \\\\\n        &amp; + h\\mathbb P(t &lt; B + L) - h\\mathbb E_{B, L} \\\\\n        &amp; \\times \\left[\\int_{t}^\\mathbb{B+L}\\mathbb E_Q\\left[D(t)|Q(t) - Q(\\tau)\\leq x, B\\leq t, L\\right]\\right. \\\\\n        &amp; \\color{magenta} \\times \\left.\\vphantom{\\int_t^{B+L}} f_{Q(t) - Q(\\tau) | B\\leq t}(x)\\mathbb P(B\\leq t)\\mathrm d \\tau\\right]\n    \\end{aligned}\n\\end{equation}\n</code></pre> \\[ \\begin{aligned}     \\frac{\\partial ^2\\Pi(x, t)}{\\partial x\\partial t} =     &amp; -(p-s)\\mathbb E_{Q, B, L}\\left[D(t)|Q(t)\\leq x\\right]f_{Q(t)}(x) \\\\     &amp; + h\\mathbb P(t &lt; B + L) - h\\mathbb E_{B, L} \\\\     &amp; \\times \\left[\\int_{t}^\\mathbb{B+L}\\mathbb E_Q\\left[D(t)|Q(t) - Q(\\tau)\\leq x, B\\leq t, L\\right]\\right. \\\\     &amp; \\color{magenta} \\times \\left.\\vphantom{\\int_t^{B+L}} f_{Q(t) - Q(\\tau) | B\\leq t}(x)\\mathbb P(B\\leq t)\\mathrm d \\tau\\right] \\end{aligned} \\]"},{"location":"latex/misc/beamer/","title":"\u4f7f\u7528\u200bLaTeX\u200b\u521b\u5efa\u200b\u5e7b\u706f\u7247","text":"<p>\u200b\u9996\u5148\u200b\uff0c\u200b\u9700\u8981\u200b\u6307\u5b9a\u200b<code>documentclass</code>\u200b\u4e3a\u200b<code>beamer</code>\u200b\u7c7b\u578b\u200b\uff1a</p> <pre><code>\\documentclass{beamer}\n</code></pre> <p>\u200b\u6bcf\u200b\u4e00\u5f20\u200b\u5e7b\u706f\u7247\u200b\u4f7f\u7528\u200b<code>frame</code>\u200b\u73af\u5883\u200b\uff0c\u200b\u5982\u4e0b\u200b\u4ee3\u7801\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u7a7a\u767d\u200b\u5e7b\u706f\u7247\u200b\uff1a</p> <pre><code>\\begin{frame}\n\\end{frame}\n</code></pre> <p>\u200b\u7b2c\u4e00\u9875\u200bPPT\u200b\u901a\u5e38\u200b\u663e\u793a\u200bPPT\u200b\u7684\u200b\u6807\u9898\u200b\u3001\u200b\u4f5c\u8005\u200b\u7684\u200b\u4e2a\u4eba\u4fe1\u606f\u200b\u7b49\u200b\u5185\u5bb9\u200b\uff1a</p> <pre><code>\\title{\u200b\u6807\u9898\u200b}\n\\subtitle{\u200b\u526f\u6807\u9898\u200b}\n\\author{\u200b\u4f5c\u8005\u200b}\n\\institute{\u200b\u7ec4\u7ec7\u200b}\n\\date{\\today}  % \u200b\u663e\u793a\u200b\u65e5\u671f\u200b\n\\titlepage\n</code></pre>"},{"location":"latex/misc/musixtex/","title":"\u4e50\u8c31\u200b\u6392\u7248","text":"<p><code>musixtex</code>\u200b\u662f\u200bLaTeX\u200b\u4e2d\u200b\u7528\u6765\u200b\u6392\u7248\u200b\u4e50\u8c31\u200b\u7684\u200b\u5b8f\u5305\u200b\u3002\u200b\u4ee5\u4e0b\u5185\u5bb9\u200b\u9488\u5bf9\u200b\u9f13\u8c31\u200b\u6392\u7248\u200b\u3002</p> <pre><code>\\usepackage{musixtex}\n\\input{musixper} % \u200b\u52a0\u5165\u200b\u4e86\u200b\u9f13\u8c31\u200b\u6392\u7248\u200b\u7684\u200b\u4e00\u4e9b\u200b\u5185\u5bb9\u200b\n</code></pre>"},{"location":"latex/misc/musixtex/#_2","title":"\u97f3\u9ad8\u200b\u5bf9\u7167\u8868","text":"<p>\u200b\u4ece\u200b\u5de6\u5411\u53f3\u200b\u4f9d\u6b21\u200b\u4e3a\u200bA-Q</p> <p></p>"},{"location":"latex/misc/musixtex/#_3","title":"\u57fa\u672c\u200b\u4f7f\u7528","text":"<p><code>musixtex</code>\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u4e86\u200b<code>music</code>\u200b\u73af\u5883\u200b\uff0c\u200b\u5728\u200b<code>music</code>\u200b\u73af\u5883\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u5bf9\u200b\u4e50\u8c31\u200b\u8fdb\u884c\u200b\u8bbe\u7f6e\u200b\u3002\u200b\u7136\u540e\u200b\u5728\u200b\u547d\u4ee4\u200b<code>\\startextract</code>\u200b\u548c\u200b<code>\\zendextract</code>\u200b\u4e4b\u95f4\u200b\u8f93\u5165\u200b\u97f3\u7b26\u200b\u3002</p> <pre><code>\\begin{music}\n    \\instrumentnumber{1}        % \u200b\u4e50\u5668\u200b\n    \\setclefsymbol1\\empty       % \u200b\u8c31\u53f7\u200b\n    \\nobarnumbers               % \u200b\u53d6\u6d88\u200b\u5c0f\u8282\u200b\u7f16\u53f7\u200b\n    \\generalmeter{\\meterfrac44} % \u200b\u8282\u62cd\u200b\n    \\startextract\n        % Enter notes here\n    \\zendextract\n\\end{music}\n</code></pre> <p>\u200b\u5728\u200b\u672c\u200b\u5c0f\u8282\u200b\u4e2d\u200b\uff0c<code>p</code>\u200b\u8868\u793a\u200b\u97f3\u7b26\u200b\u5bf9\u5e94\u200b\u7684\u200b\u97f3\u9ad8\u200b\u3002</p>"},{"location":"latex/misc/musixtex/#_4","title":"\u786e\u5b9a\u200b\u97f3\u7b26\u200b\u5206\u5e03\u200b\u95f4\u8ddd","text":"<p>\u200b\u4f7f\u7528\u200b<code>\\notes</code>\u200b\u7684\u200b\u4e0d\u540c\u200b\u5927\u5c0f\u5199\u200b\u5f62\u5f0f\u200b\u6765\u200b\u786e\u5b9a\u200b\u97f3\u7b26\u200b\u7684\u200b\u5206\u5e03\u200b\u95f4\u8ddd\u200b\u3002</p> <pre><code>\\notes ... \\en % Suitable for sixteenth notes\n\\Notes ... \\en % Suitable for eighth notes\n\\NOtes ... \\en % Suitable for quarter notes\n</code></pre> <code>\\notes</code><code>\\Notes</code><code>\\NOtes</code> <p></p> <p></p> <p></p>"},{"location":"latex/misc/musixtex/#_5","title":"\u97f3\u7b26","text":"<p>\u200b\u97f3\u7b26\u200b\u547d\u4ee4\u200b\u7531\u200b\u4e24\u200b\u90e8\u5206\u200b\u7ec4\u6210\u200b\uff1a\u200b\u65f6\u503c\u200b+\u200b\u65b9\u5411\u200b\u3002\u200b\u4e0d\u540c\u200b\u97f3\u7b26\u200b\u7684\u200b\u65f6\u503c\u200b\u5bf9\u5e94\u200b\u7684\u200b\u547d\u4ee4\u200b\u5982\u4e0b\u200b\u8868\u200b\u6240\u793a\u200b</p> \u200b\u65f6\u503c\u200b \u200b\u5168\u97f3\u7b26\u200b \u200b\u4e8c\u5206\u200b \u200b\u56db\u5206\u200b \u200b\u516b\u5206\u200b \u200b\u5341\u516d\u5206\u200b \u200b\u547d\u4ee4\u200b <code>w</code> <code>h</code> <code>q</code> <code>c</code> <code>cc</code> <p><code>u</code>\u200b\u8868\u793a\u200b\u5411\u4e0a\u200b\u7684\u200b\u97f3\u7b26\u200b\uff0c<code>l</code>\u200b\u8868\u793a\u200b\u5411\u4e0b\u200b\u7684\u200b\u97f3\u7b26\u200b\uff0c<code>a</code>\u200b\u8868\u793a\u200b\u81ea\u52a8\u200b\u8bbe\u7f6e\u200b\u97f3\u7b26\u200b\u65b9\u5411\u200b\u3002\u200b\u5982\u200b<code>\\qu{p}</code>\u200b\u8868\u793a\u200b\u4e00\u4e2a\u200b\u5411\u4e0a\u200b\u7684\u200b\u56db\u5206\u97f3\u7b26\u200b\u3002\u200b\u5982\u679c\u200b\u4e0d\u200b\u52a0\u200b\u65b9\u5411\u200b\uff0c\u200b\u5219\u200b\u6ca1\u6709\u200b\u97f3\u7b26\u200b\u7684\u200b\u201c\u200b\u6746\u200b\u201d\u3002</p> <p>\u200b\u5728\u200b\u65b9\u5411\u200b\u540e\u9762\u200b\u52a0\u4e0a\u200b<code>p</code>\u200b\u8868\u793a\u200b\u9644\u70b9\u200b\uff0c<code>pp</code>\u200b\u8868\u793a\u200b\u53cc\u200b\u9644\u70b9\u200b\u3002</p> <p>\u200b\u6bcf\u200b\u8f93\u5165\u200b\u4e00\u4e2a\u200b\u97f3\u7b26\u200b\uff0c\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u547d\u4ee4\u200b\u8f93\u5165\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u4fbf\u4f1a\u200b\u5411\u200b\u540e\u200b\u79fb\u52a8\u200b\u3002\u200b\u5982\u679c\u200b\u8981\u200b\u8f93\u5165\u200b\u548c\u5f26\u200b\uff0c\u200b\u9700\u8981\u200b\u5728\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u97f3\u7b26\u200b\u4e4b\u524d\u200b\uff0c\u200b\u4f7f\u7528\u200b<code>z</code>+\u200b\u65f6\u503c\u200b\u8868\u793a\u200b\u8fd9\u4e2a\u200b\u97f3\u7b26\u200b\u4e0d\u5411\u200b\u540e\u200b\u79fb\u52a8\u200b\u8f93\u5165\u200b\u4f4d\u7f6e\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u4e24\u4e2a\u200b\u97f3\u7b26\u200b\u79bb\u5f97\u200b\u8fc7\u8fd1\u200b\uff0c\u200b\u4f7f\u7528\u200b<code>l</code>\u200b\u5c06\u200b\u97f3\u7b26\u200b\u5411\u200b\u5de6\u200b\u79fb\u52a8\u200b\u4e00\u4e2a\u200b\u97f3\u7b26\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c<code>r</code>\u200b\u5c06\u200b\u97f3\u7b26\u200b\u5411\u200b\u53f3\u200b\u79fb\u52a8\u200b\u4e00\u4e2a\u200b\u97f3\u7b26\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u3002</p> <pre><code>\\NOtes \\zq d\\qu g\\rq g\\qu f\\zq e\\qu h\\zq f\\qu k \\en\n</code></pre> <p></p>"},{"location":"latex/misc/musixtex/#_6","title":"\u7b26\u6760","text":"<p>\u200b\u5982\u679c\u200b\u516b\u5206\u200b\u6216\u200b\u66f4\u200b\u77ed\u200b\u7684\u200b\u97f3\u7b26\u200b\u8fde\u7eed\u200b\u51fa\u73b0\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u97f3\u7b26\u200b\u4e4b\u95f4\u200b\u4f7f\u7528\u200b\u7b26\u6760\u200b\u76f8\u8fde\u200b\uff0c\u200b\u901a\u5e38\u200b\u6bcf\u200b\u56db\u4e2a\u200b\u97f3\u7b26\u200b\u8fde\u6210\u200b\u4e00\u7ec4\u200b\u3002\u200b\u7b26\u6760\u200b\u7684\u200b\u5b9a\u4e49\u200b\u683c\u5f0f\u200b\u5982\u4e0b\u200b</p> <pre><code>% \u200b\u4e0a\u65b9\u200b\n\\ibu{n}{p}{s} &lt;notes-under-beam&gt; \\tbu{n} &lt;the-last-note&gt;\n% \u200b\u4e0b\u65b9\u200b\n\\ibl{n}{p}{s} &lt;notes-under-beam&gt; \\tbl{n} &lt;the-last-note&gt;\n</code></pre> <p>\u200b\u5176\u4e2d\u200b<code>n</code>\u200b\u4e3a\u200b\u7f16\u53f7\u200b\uff0c<code>p</code>\u200b\u4e3a\u200b\u5f00\u59cb\u200b\u7684\u200b\u97f3\u7b26\u200b\u9ad8\u5ea6\u200b\uff0c<code>s</code>\u200b\u4e3a\u200b\u659c\u5ea6\u200b\u3002\u200b\u547d\u4ee4\u200b\u91cc\u200b<code>b</code>\u200b\u7684\u200b\u4e2a\u6570\u200b\u7b49\u4e8e\u200b\u663e\u793a\u200b\u7684\u200b\u7b26\u200b\u6760\u6570\u200b\u3002\u200b\u4e0e\u200b\u7b26\u6760\u200b\u76f8\u8fde\u200b\u7684\u200b\u97f3\u7b26\u200b\u6807\u8bb0\u200b\u4e3a\u200b\u65f6\u503c\u200b+<code>b</code>+\u200b\u7f16\u53f7\u200b\uff0c\u200b\u5982\u679c\u200b\u540c\u4e00\u200b\u4f4d\u7f6e\u200b\u6709\u200b\u591a\u4e2a\u200b\u97f3\u7b26\u200b\uff0c\u200b\u9700\u8981\u200b\u5728\u200b\u65f6\u503c\u200b\u524d\u9762\u200b\u52a0\u200b<code>z</code>\u3002\u200b\u6ce8\u610f\u200b\u97f3\u7b26\u200b\u4e4b\u95f4\u200b\u4e0d\u8981\u200b\u52a0\u200b\u7a7a\u683c\u200b\u3002</p> <pre><code>\\Notes\\ibu0j0\\qb0j\\qb0j\\qb0j\\tbu0\\qb0j\\en\n\\notes\\ibbu0j0\\qb0j\\qb0j\\qb0j\\tbu0\\qb0j\\en\n\\NOtes\\qu j\\en\n</code></pre> <p></p> <p><code>\\tbu{n}\\qb{n}{p}</code>\u200b\u53ef\u4ee5\u200b\u7f29\u5199\u200b\u4e3a\u200b<code>\\tqu{n}{p}</code>\uff0c<code>\\tbl{n}{p}\\qb{n}{p}</code>\u200b\u53ef\u4ee5\u200b\u7f29\u5199\u200b\u4e3a\u200b<code>\\tql{n}{p}</code>\uff0c<code>\\tbu{n}\\zqb{n}{p}</code>\u200b\u53ef\u4ee5\u200b\u7f29\u5199\u200b\u4e3a\u200b<code>\\zqu{n}{p}</code>\uff0c<code>\\tbl{n}{p}\\zqb{n}{p}</code>\u200b\u53ef\u4ee5\u200b\u7f29\u5199\u200b\u4e3a\u200b<code>\\zql{n}{p}</code></p> <p><code>\\ibu</code>\u200b\u4e2d\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u786e\u5b9a\u200b\u659c\u7387\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u200b\u5bf9\u5e94\u200b\u7684\u200b<code>\\Ibu</code>\u200b\u547d\u4ee4\u200b\u81ea\u52a8\u200b\u786e\u5b9a\u200b\uff1a</p> <pre><code>\\Ibu{n}{p1}{p2}{np}\n</code></pre> <p>\u200b\u5176\u4e2d\u200b<code>{n}</code>\u200b\u4e3a\u200b\u7f16\u53f7\u200b\uff0c<code>p1</code>\u200b\u4e3a\u200b\u7b2c\u4e00\u4e2a\u200b\u97f3\u7b26\u200b\u9ad8\u5ea6\u200b\uff0c<code>p2</code>\u200b\u4e3a\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u97f3\u7b26\u200b\u9ad8\u5ea6\u200b\uff0c<code>np</code>\u200b\u4e3a\u200b\u97f3\u7b26\u200b\u4e2a\u6570\u200b\u3002</p> <pre><code>\\Notes\\Ibu0dk4\\qb0d\\qb0h\\qb0f\\tbu0\\qb0k\\en\n\\Notes\\Ibu0kd4\\qb0k\\qb0f\\qb0h\\tbu0\\qb0d\\en\n</code></pre> <p></p> <p>\u200b\u5f53\u200b\u4e0d\u200b\u5305\u542b\u200b\u548c\u5f26\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>D</code>\u3001<code>T</code>\u3001<code>Q</code>\u200b\u5feb\u901f\u200b\u8f93\u5165\u200b\u5305\u542b\u200b2\u30013\u30014\u200b\u4e2a\u200b\u97f3\u7b26\u200b\u7684\u200b\u7b26\u6760\u200b\u3002</p> <pre><code>\\Notes\\Qqbu dhfk\\en\n\\notes\\Qqbbu kfhd\\Qqbbl dhfk\\en\n</code></pre> <p></p> <p>\u200b\u5f53\u200b\u5728\u200b\u7b26\u6760\u200b\u4e2d\u200b\u9700\u8981\u200b\u6539\u53d8\u200b\u7b49\u7ea7\u200b\u65f6\u200b\uff0c\u200b\u4f7f\u7528\u200b<code>\\nbu</code>\u200b\u5c06\u200b\u7b49\u7ea7\u200b\u589e\u52a0\u200b\u5230\u200b<code>b</code>\u200b\u7684\u200b\u4e2a\u6570\u200b\u5bf9\u5e94\u200b\u7684\u200b\u7ea7\u6570\u200b\uff0c\u200b\u4f7f\u7528\u200b<code>\\ibu</code>\u200b\u5c06\u200b\u7b49\u7ea7\u200b\u51cf\u5c11\u200b\u5230\u200b<code>b</code>\u200b\u7684\u200b\u4e2a\u6570\u200b\u51cf\u4e00\u200b\u5bf9\u5e94\u200b\u7684\u200b\u7ea7\u6570\u200b\u3002</p> <pre><code>\\Notes\\ibu0k0\\qb0j\\en\\notes\\nbbu0\\qb0j\\tbu0\\qb0j\\en\n\\notes\\ibbu0j0\\qb0j\\tbbu0\\qb0j\\en\\Notes\\tbu0\\qb0j\\en\n</code></pre> <p>\u200b\u4f7f\u7528\u200b<code>\\roff{}</code>\u200b\u5728\u200b\u5f53\u524d\u200b\u97f3\u7b26\u200b\u53f3\u4fa7\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u5bf9\u5e94\u200b\u7b49\u7ea7\u200b\u7684\u200b\u77ed\u6760\u200b\uff0c\u200b\u5f53\u200b<code>\\tbbu</code>\u200b\u914d\u5408\u200b\u66f4\u200b\u9ad8\u7b49\u7ea7\u200b\u8f93\u5165\u200b\u65f6\u200b\uff0c\u200b\u5728\u200b\u5f53\u524d\u200b\u97f3\u7b26\u200b\u5de6\u4fa7\u200b\u4f4d\u7f6e\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u5bf9\u5e94\u200b\u7b49\u7ea7\u200b\u77ed\u6760\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u6765\u200b\u8f93\u5165\u200b\u5207\u5206\u97f3\u200b\u3002</p> <pre><code>\\notes\\ibbu0j0\\qb0j\\tbbu0\\qb0j\\en\n\\Notes\\tbu0\\qb0j\\en\n\n\\notes\\ibbu0j0\\roff{\\tbbu0}\\qb0j\\en\n\\Notes\\qb0j\\tbbu0\\en\n\\notes\\tbu0\\qb0j\\en\n</code></pre> <p></p>"},{"location":"latex/misc/musixtex/#_7","title":"\u4f11\u6b62\u7b26","text":"<p>\u200b\u4f11\u6b62\u7b26\u200b\u7684\u200b\u547d\u4ee4\u200b\u4e3a\u200b</p> \u200b\u65f6\u503c\u200b \u200b\u5168\u97f3\u7b26\u200b \u200b\u4e8c\u5206\u200b \u200b\u56db\u5206\u200b \u200b\u516b\u5206\u200b \u200b\u5341\u516d\u5206\u200b \u200b\u547d\u4ee4\u200b <code>\\pause</code> <code>\\hp</code> <code>\\qp</code> <code>\\ds</code> <code>\\qs</code> <p>\u200b\u5728\u200b\u547d\u4ee4\u200b\u524d\u200b\u4f7f\u7528\u200b<code>\\raise</code>\u200b\u8c03\u6574\u200b\u4f11\u6b62\u7b26\u200b\u9ad8\u5ea6\u200b\uff0c<code>\\Interligne</code>\u200b\u8868\u793a\u200b\u7ebf\u200b\u95f4\u8ddd\u200b\uff1b\u200b\u4f7f\u7528\u200b<code>\\rlap</code>\u200b\u4f7f\u4e0b\u200b\u4e00\u4e2a\u200b\u97f3\u7b26\u200b\u505c\u7559\u200b\u5728\u200b\u539f\u4f4d\u200b\u3002</p> <pre><code>\\NOtes\\qp\\en\n\\Notes\\ds\\ds\\en\n\\NOtes\\raise2\\Interligne\\rlap\\qp\\raise-2\\Interligne\\qp\\qp \\en \\doublebar\n</code></pre> <p></p>"},{"location":"latex/misc/musixtex/#_8","title":"\u6587\u672c","text":"<p>\u200b\u4f7f\u7528\u200b<code>charnote{p}{text}</code>\u200b\u524d\u9762\u200b\u52a0\u200b<code>\\z</code>\u3001<code>\\c</code>\u3001<code>\\l</code>\u200b\u5728\u200b\u8c31\u200b\u4e0a\u200b\u6dfb\u52a0\u200b\u6587\u5b57\u200b\uff0c<code>\\z</code>\u3001<code>\\c</code>\u3001<code>\\l</code>\u200b\u5206\u522b\u200b\u8868\u793a\u200b\u5de6\u200b\u3001\u200b\u4e2d\u200b\u3001\u200b\u53f3\u200b\u5bf9\u9f50\u200b\u5f53\u524d\u200b\u97f3\u7b26\u200b\u3002<code>char{num}{text}</code>\u200b\u548c\u200b<code>charnote</code>\u200b\u7528\u6cd5\u200b\u76f8\u540c\u200b\uff0c\u200b\u4f46\u200b\u4f7f\u7528\u200b\u6570\u5b57\u200b\u6765\u200b\u8868\u793a\u200b\u4f4d\u7f6e\u200b\uff1a\u200b\u4ece\u200b\u6700\u200b\u4e0b\u65b9\u200b\u7684\u200b\u7ebf\u200b\u5f00\u59cb\u200b\uff0c\u200b\u6587\u672c\u200b\u57fa\u7ebf\u200b\u5bf9\u9f50\u200b\u6570\u5b57\u200b\u8868\u793a\u200b\u7684\u200b\u7ebf\u200b\u3002</p> <p></p>"},{"location":"latex/misc/musixtex/#_9","title":"\u8282\u62cd","text":"<p>\u200b\u4f7f\u7528\u200b<code>\\metron{\\qu}{60}</code>\u200b\u6765\u200b\u8bbe\u7f6e\u200b\u8282\u62cd\u200b\uff0c\u200b\u8282\u62cd\u200b\u4e5f\u200b\u662f\u200b\u6587\u672c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u200b\u76f8\u5173\u200b\u547d\u4ee4\u200b\u653e\u5728\u200b\u8c31\u200b\u4e0a\u200b\u3002\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>\\smallnotesize</code>\u3001<code>\\tinynotesize</code>\u200b\u8c03\u8282\u200b\u97f3\u7b26\u200b\u5927\u5c0f\u200b\u3002</p> <p></p>"},{"location":"latex/misc/musixtex/#_10","title":"\u9f13\u8c31","text":"<p>\u200b\u9f13\u8c31\u200b\u4e2d\u200b\u4ee3\u8868\u200b\u51fb\u6253\u200b\u9572\u200b\u7247\u200b\u7684\u200b\u97f3\u7b26\u200b\u7531\u200b<code>musixper</code>\u200b\u6269\u5c55\u200b\u5305\u200b\u5f62\u5f0f\u200b\uff0c\u200b\u4f7f\u7528\u200b<code>\\input</code>\u200b\u547d\u4ee4\u200b\u5f15\u5165\u200b\u3002\u200b\u5982\u4e0b\u200b\u7b26\u53f7\u200b\u5206\u522b\u200b\u5bf9\u5e94\u200b<code>\\dc, \\dh, \\do, \\y, \\x, \\ox, \\ro, k</code>\uff0c\u200b\u52a0\u200b\u5728\u200b\u5bf9\u5e94\u200b\u7684\u200b\u97f3\u7b26\u200b\u65f6\u503c\u200b\u524d\u200b\u3002</p> <pre><code>\\Notes\\ibu0o0\\dcqb0o\\dhqb0o\\doqb0o\\tbu0\\yqb0o\\en\n\\Notes\\ibu0o0\\xqb0o\\oxqb0o\\roqb0o\\tbu0\\kqb0o\\en\n</code></pre> <p></p> <p>\u200b\u6253\u51fb\u4e50\u200b\u4f7f\u7528\u200b\u7684\u200b\u8c31\u53f7\u200b\u7528\u200b<code>\\setclefsymbol1{\\drumclef}</code>\u200b\u547d\u4ee4\u200b\u5f15\u5165\u200b\u3002\u200b\u97f3\u9ad8\u200b\u8bb0\u53f7\u200b\u548c\u200b\u9ad8\u97f3\u200b\u8c31\u53f7\u200b\u4e00\u81f4\u200b\uff0c\u200b\u7235\u58eb\u9f13\u200b\u4e2d\u200b\u7684\u200b\u4e0d\u540c\u200b\u58f0\u90e8\u200b\u5bf9\u5e94\u200b\u4e94\u7ebf\u8c31\u200b\u7684\u200b\u4e0d\u540c\u200b\u97f3\u9ad8\u200b\u5982\u4e0b\u200b\u56fe\u200b\u6240\u793a\u200b</p> <p></p>"},{"location":"latex/tikz/pgfplots/","title":"pgfplots","text":"<p>\u200b\u501f\u52a9\u200b\u5b8f\u5305\u200b<code>pgfplots</code>\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200bTikZ\u200b\u7ed8\u5236\u200b\u6298\u7ebf\u56fe\u200b\uff0c\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\u3002</p> <p>pgfplots\u200b\u7ed8\u5236\u200b\u6298\u7ebf\u56fe\u200b</p> tex\u200b\u4ee3\u7801\u200b\u6e32\u67d3\u200b\u7ed3\u679c\u200b <pre><code>\\begin{figure}[htbp]\n    \\begin{tikzpicture}\n        \\begin{axis}[sharp plot]\n            \\addplot coordinates{(0, 5)(1, 9)(2, 7)(3, 4)(4, 10)};\n        \\end{axis}\n    \\end{tikzpicture}\n\\end{figure}\n</code></pre> <p></p> <p><code>axis</code>\u200b\u63a7\u5236\u200b\u4e00\u4e2a\u200b\u56fe\u50cf\u200b\uff0c<code>\\begin{axis}</code>\u200b\u540e\u200b\u53ef\u4ee5\u200b\u52a0\u200b\u4e00\u5bf9\u200b\u65b9\u62ec\u53f7\u200b\uff0c\u200b\u7528\u4e8e\u200b\u8bbe\u5b9a\u200b\u56fe\u7247\u200b\u7684\u200b\u53c2\u6570\u200b\u3002<code>addplot</code>\u200b\u63a7\u5236\u200b\u56fe\u50cf\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5e8f\u5217\u200b\uff0c\u200b\u5176\u540e\u200b\u540c\u6837\u200b\u53ef\u4ee5\u200b\u52a0\u200b\u4e00\u5bf9\u200b\u65b9\u62ec\u53f7\u200b\u7528\u4e8e\u200b\u63a7\u5236\u53c2\u6570\u200b\u3002</p>"},{"location":"latex/tikz/pgfplots/#axis","title":"<code>axis</code>\u200b\u73af\u5883","text":"<p><code>axis</code>\u200b\u73af\u5883\u200b\u53ef\u7528\u200b\u7684\u200b\u53c2\u6570\u200b\u5982\u4e0b\u200b\u6240\u200b\u5217\u200b\uff1a</p> <ul> <li><code>[sharp plot, smooth]</code>\u200b\u7b49\u200b\uff0c\u200b\u8868\u660e\u200b\u6298\u7ebf\u56fe\u200b\u7684\u200b\u66f2\u7ebf\u200b\u662f\u5426\u200b\u7ecf\u8fc7\u200b\u5e73\u6ed1\u200b</li> <li><code>xlabel</code>\u200b\u4e0e\u200b<code>ylabel</code>\uff0c\u200b\u63a7\u5236\u200b\u5750\u6807\u8f74\u200b\u7684\u200b\u6807\u6ce8\u200b\u3002</li> <li><code>title</code>\u200b\u63a7\u5236\u200b\u56fe\u50cf\u200b\u7684\u200b\u6807\u9898\u200b</li> <li><code>xmode</code>\u200b\u4e0e\u200b<code>ymode</code>\u200b\u63a7\u5236\u200b\u5750\u6807\u8f74\u200b\u662f\u200b\u7ebf\u6027\u200b\u5750\u6807\u8f74\u200b\uff08<code>normal</code>\uff09\u200b\u8fd8\u662f\u200b\u5bf9\u6570\u200b\u5750\u6807\u8f74\u200b\uff08<code>log</code>\uff09</li> <li><code>xtick distance</code>\u200b\u4e0e\u200b<code>ytick distance</code>\u200b\u63a7\u5236\u200b\u5750\u6807\u8f74\u200b\u523b\u5ea6\u200b\u5927\u5c0f\u200b</li> <li><code>xmin, xmax</code>\u200b\u4e0e\u200b<code>ymin, ymax</code>\u200b\u63a7\u5236\u200b\u5750\u6807\u8f74\u200b\u7684\u200b\u8303\u56f4\u200b<ul> <li>\u200b\u5f53\u200b\u6307\u5b9a\u200b\u5750\u6807\u8f74\u200b\u8303\u56f4\u200b\u65f6\u200b\uff0c\u200b\u5982\u679c\u200b<code>enlargelimits</code>\u200b\u6307\u5b9a\u200b\u4e3a\u200b<code>true</code>\uff0c\u200b\u5219\u200b\u5750\u6807\u8f74\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u653e\u5927\u200b\u4ee5\u200b\u7b26\u5408\u200b\u8f93\u5165\u200b\u6570\u636e\u200b</li> </ul> </li> </ul> <p>\u200b\u5982\u4e0b\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u7a7a\u200b\u7684\u200b\u56fe\u50cf\u200b\uff0cx\u200b\u5750\u6807\u8f74\u200b\u4e3a\u200b\u7ebf\u6027\u200b\uff0cy\u200b\u5750\u6807\u8f74\u200b\u4e3a\u200b\u5bf9\u6570\u200b\uff1a</p> <p>axis\u200b\u53c2\u6570\u200b\u793a\u4f8b\u200b</p> tex\u200b\u4ee3\u7801\u200b\u6e32\u67d3\u200b\u7ed3\u679c\u200b <pre><code>\\begin{figure}[htbp]\n    \\begin{tikzpicture}\n        \\begin{axis}[\n            xlabel=Year,\n            ylabel=Inventory,\n            xmin=2019, xmax=2021,\n            ymin=100, ymax=1000,\n            xtick distance=1,\n            title=Inventory Graph,\n            xmode=normal, ymode=log\n        ]\n        \\end{axis}\n    \\end{tikzpicture}\n\\end{figure}\n</code></pre> <p></p> <p>\u200b\u6709\u5173\u200b\u66f4\u200b\u591a\u200b\u53c2\u6570\u200b\uff0c\u200b\u8bf7\u200b\u53c2\u89c1\u200bpgfplots \u200b\u624b\u518c\u200b</p>"},{"location":"latex/tikz/pgfplots/#addplot","title":"<code>\\addplot</code>","text":"<p><code>\\addplot</code>\u200b\u547d\u4ee4\u200b\u53ef\u4ee5\u200b\u5411\u200b\u56fe\u50cf\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u6298\u7ebf\u56fe\u200b\u6216\u200b\u51fd\u6570\u200b\u3002</p> <ol> <li><code>\\addplot coordinates{}</code> \u200b\u7528\u4e8e\u200b\u7ed8\u5236\u200b\u6298\u7ebf\u56fe\u200b\uff0c\u200b\u5176\u4e2d\u200b<code>coordinates</code>\u200b\u4e2d\u200b\u7684\u200b\u5750\u6807\u200b\u7528\u200b\u5706\u62ec\u53f7\u200b\u62ec\u8d77\u200b</li> <li><code>\\addplot [smooth] {f(x)}</code> \u200b\u7528\u4e8e\u200b\u7ed8\u5236\u200b\u5e73\u6ed1\u200b\u7684\u200b\u6298\u7ebf\u56fe\u200b\uff0c\u200b\u5176\u4e2d\u200b<code>f(x)</code>\u200b\u4e3a\u200b\u51fd\u6570\u200b\u8868\u8fbe\u5f0f\u200b</li> </ol> <p>axis\u200b\u53c2\u6570\u200b\u793a\u4f8b\u200b</p> tex\u200b\u4ee3\u7801\u200b\u6e32\u67d3\u200b\u7ed3\u679c\u200b <pre><code>\\begin{figure}[htbp]\n    \\begin{tikzpicture}\n        \\begin{axis}[\n            xlabel=$x$ variable,\n            ylabel=$y$ variable,\n            xmin=0, xmax=7,\n            title=Regression Example,\n        ]\n            \\addplot coordinates{(0, 5)(1, 9)(2, 7)(3, 4)(4, 10)};\n            \\addlegendentry{\\small Data}\n            \\addplot [smooth, red]{0.5*x + 6};\n            \\addlegendentry{\\small Regressor}\n        \\end{axis}\n    \\end{tikzpicture}\n\\end{figure}\n</code></pre> <p></p> <p><code>\\addplot</code>\u200b\u6709\u200b\u5982\u4e0b\u200b\u53c2\u6570\u200b\uff1a</p> <ul> <li><code>smooth</code>\u200b\u5982\u679c\u200b\u5b58\u5728\u200b\uff0c\u200b\u7ed8\u5236\u200b\u4e0d\u200b\u5305\u542b\u200b\u70b9\u200b\u5750\u6807\u200b\u7684\u200b\u5e73\u6ed1\u200b\u56fe\u50cf\u200b</li> <li><code>[color]</code>\u200b\u8bbe\u7f6e\u200b\u989c\u8272\u200b\u3002</li> </ul>"},{"location":"math/","title":"\u8bfe\u7a0b\u200b\u7b14\u8bb0","text":"<p>\u200b\u4ee5\u4e0b\u200b\u6574\u7406\u200b\u4e86\u200b\u8bfe\u4e0a\u200b\u7684\u200b\u5185\u5bb9\u200b</p> <ol> <li>\u200b\u79bb\u6563\u6570\u5b66\u200b</li> <li>\u200b\u8fd0\u7b79\u5b66\u200b\u4e0e\u200b\u7ebf\u6027\u89c4\u5212\u200b</li> <li>\u200b\u5bf9\u7b56\u200b\u3001\u200b\u51b3\u7b56\u200b\u4e0e\u200b\u6392\u961f\u200b\u8bba\u200b</li> <li>\u200b\u8fd0\u4f5c\u200b\u7ba1\u7406\u200b</li> <li>\u200b\u968f\u673a\u200b\u8fc7\u7a0b\u200b</li> <li>\u200b\u51f8\u200b\u4f18\u5316\u200b</li> <li>\u200b\u56e0\u679c\u200b\u63a8\u65ad\u200b</li> </ol>"},{"location":"math/#_2","title":"\u6269\u5c55\u200b\u9605\u8bfb","text":""},{"location":"math/#_3","title":"\u6570\u5b66\u5206\u6790","text":"<ul> <li>\u200b\u521d\u4e2d\u200b\u7ade\u8d5b\u200b:\\(x+y+z=1\\)\uff0c\u200b\u6c42\u200b\\(xy+2yz+3zx\\)\u200b\u7684\u200b\u6700\u5927\u503c\u200b? - \u200b\u4e88\u4e00\u4eba\u200b\u7684\u200b\u56de\u7b54\u200b - \u200b\u77e5\u4e4e\u200b</li> <li>\u200b\u628a\u200b\\([-0.5,0.5]\\)\u200b\u5185\u200b\u6240\u6709\u200b\u5b9e\u6570\u200b\u76f8\u52a0\u200b\uff0c\u200b\u5f97\u51fa\u200b\u7684\u200b\u7ed3\u679c\u200b\u662f\u200b\\(0\\)\u200b\u5417\u200b\uff1f - Be2SiO4\u200b\u7684\u200b\u56de\u7b54\u200b - \u200b\u77e5\u4e4e\u200b</li> <li>\u200b\u5982\u4f55\u200b\u6c42\u200b\u5fae\u5206\u65b9\u7a0b\u200b \\(y'' + y = 0\\) \u200b\u7684\u200b\u901a\u89e3\u200b\uff1f - \u200b\u4e88\u4e00\u4eba\u200b\u7684\u200b\u56de\u7b54\u200b - \u200b\u77e5\u4e4e\u200b</li> <li>\u200b\u4e3a\u4ec0\u4e48\u200b \\(\\ln x\\) \u200b\u6c42\u5bfc\u200b\u662f\u200b \\(1/x\\)\uff1f - \u200b\u8881\u8d85\u200b\u7684\u200b\u56de\u7b54\u200b - \u200b\u77e5\u4e4e\u200b</li> <li>\\(\\ln x (x&gt;1, x\\in \\mathbb Z)\\) \u200b\u53ef\u80fd\u200b\u662f\u200b\u6709\u7406\u6570\u200b\u5417\u200b\uff1f - \u200b\u4e88\u4e00\u4eba\u200b\u7684\u200b\u56de\u7b54\u200b - \u200b\u77e5\u4e4e\u200b</li> <li>\u200b\u79ef\u5206\u200b\u7b26\u53f7\u200b\u5185\u53d6\u200b\u5fae\u5206\u200b\u662f\u200b\u4e00\u79cd\u200b\u4ec0\u4e48\u200b\u65b9\u6cd5\u200b\uff1f - \u200b\u77e5\u4e4e\u200b</li> <li>\u200b\u4e00\u6761\u200b\u4ece\u200b\\((0,0)\\)\u200b\u51fa\u53d1\u200b\u7684\u200b\u957f\u5ea6\u200b\u4e3a\u200b\\(1\\)\u200b\u7684\u200b\u66f2\u7ebf\u200b\uff0c\u200b\u56f4\u7ed5\u200b\\(x\\)\u200b\u8f74\u200b\u65cb\u8f6c\u200b\u4ea7\u751f\u200b\u7684\u200b\u65cb\u8f6c\u4f53\u200b\u7684\u200b\u6700\u5927\u200b\u4f53\u79ef\u200b\u662f\u200b\u591a\u5c11\u200b\uff1f - \u200b\u865a\u200b\u8c03\u5b50\u200b\u7684\u200b\u56de\u7b54\u200b - \u200b\u77e5\u4e4e\u200b</li> </ul>"},{"location":"math/#_4","title":"\u6982\u7387\u8bba\u200b\u4e0e\u200b\u968f\u673a\u200b\u8fc7\u7a0b","text":"<ul> <li>\u200b\u6570\u5b66\u200b\u671f\u671b\u200b\u5927\u4e8e\u200b\u96f6\u200b\u7684\u200b\u6e38\u620f\u200b\u4e00\u5b9a\u200b\u80fd\u200b\u8d5a\u94b1\u200b\u5417\u200b - \u200b\u9648\u58a8\u77b3\u200bnono\u200b\u7684\u200b\u6587\u7ae0\u200b - \u200b\u77e5\u4e4e\u200b</li> <li>\u200b\u7532\u4e59\u200b\u4e24\u4eba\u200b\u4e0b\u56f4\u68cb\u200b\uff0c\u200b\u7532\u80dc\u200b\u7684\u200b\u6982\u7387\u200b\u4e3a\u200b\\(a\\)\uff0c\u200b\u4e59\u80dc\u200b\u7684\u200b\u6982\u7387\u200b\u4e3a\u200b\\(b\\)\uff0c\\(a+b=1\\)\uff0c\u200b\u6bd4\u200b\u5bf9\u65b9\u200b\u591a\u200b\u8d62\u200b\u4e24\u5c40\u200b\u8005\u200b\u83b7\u80dc\u200b\uff0c\u200b\u6c42\u7532\u200b\u8d62\u200b\u7684\u200b\u6982\u7387\u200b? - Dylaaan\u200b\u7684\u200b\u56de\u7b54\u200b - \u200b\u77e5\u4e4e\u200b</li> <li>\u200b\u5f3a\u5927\u200b\u6570\u5f8b\u200b\uff08SLLN) - \u200b\u4f55\u5bb6\u5fd7\u200b\u7684\u200b\u6587\u7ae0\u200b - \u200b\u77e5\u4e4e\u200b</li> <li>\u200b\u5982\u679c\u200b\u6211\u200b\u6709\u200b \\(2^{-n}\\) \u200b\u6982\u7387\u200b\u83b7\u5f97\u200b \\(2^n\\) \u200b\u5143\u200b\uff0c\u200b\u90a3\u200b\u83b7\u5f97\u200b\u94b1\u200b\u7684\u200b\u6570\u5b66\u200b\u671f\u671b\u503c\u200b\u5e94\u8be5\u200b\u662f\u200b\u65e0\u7a77\u200b\uff0c\u200b\u4f46\u200b\u5b9e\u9645\u200b\u4e0d\u662f\u200b\u8fd9\u6837\u200b\uff0c\u200b\u4e3a\u4ec0\u4e48\u200b\uff1f - ClefRybak\u200b\u7684\u200b\u56de\u7b54\u200b - \u200b\u77e5\u4e4e\u200b</li> </ul>"},{"location":"math/#_5","title":"\u7ebf\u6027\u4ee3\u6570","text":"<ul> <li>\u200b\u5982\u4f55\u200b\u5224\u5b9a\u200b\u4e0d\u53ef\u200b\u7ea6\u200b\u591a\u9879\u5f0f\u200b\uff1f - \u200b\u5982\u8564\u200b\u7684\u200b\u56de\u7b54\u200b - \u200b\u77e5\u4e4e\u200b</li> <li>\u200b\u8ba1\u7b97\u673a\u200b\u56fe\u5f62\u5b66\u200b\u4e00\u200b\uff1a\u200b\u57fa\u7840\u200b\u53d8\u6362\u200b\u77e9\u9635\u200b\u603b\u7ed3\u200b(\u200b\u7f29\u653e\u200b\uff0c\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u4f4d\u79fb\u200b)</li> </ul>"},{"location":"math/#_6","title":"\u79bb\u6563\u6570\u5b66\u200b\u4e0e\u200b\u6570\u8bba","text":"<ul> <li>\u200b\u4e00\u822c\u200b\u4e00\u5143\u200b\u4e94\u6b21\u200b\u65b9\u7a0b\u200b\u6ca1\u6709\u200b\u6839\u5f0f\u200b\u89e3\u200b\u7684\u200b\u79d8\u5bc6\u200b\u7a76\u7adf\u200b\u5728\u200b\u54ea\u91cc\u200b\uff1f\u200b\u82b1\u8d39\u200b\u4eba\u7c7b\u200b\u4e09\u767e\u5e74\u200b.? - Geometrie\u200b\u7684\u200b\u56de\u7b54\u200b - \u200b\u77e5\u4e4e\u200b</li> <li>\u200b\u7ec4\u5408\u200b\u6570\u5b66\u200b\u5b66\u4e60\u200b\u7b14\u8bb0\u200b\uff08\u200b\u5341\u200b\uff09 - sola\u200b\u7684\u200b\u6587\u7ae0\u200b - \u200b\u77e5\u4e4e\u200b</li> <li>ACM\u2014\u2014\u200b\u5e38\u89c1\u200b\u7684\u200b\u51e0\u79cd\u200b\u5206\u89e3\u200b\u8d28\u200b\u56e0\u5b50\u200b\u7684\u200b\u65b9\u6cd5\u200b - \u200b\u4e25\u683c\u200b\u9e3d\u200b\u7684\u200b\u6587\u7ae0\u200b - \u200b\u77e5\u4e4e\u200b</li> </ul>"},{"location":"math/#_7","title":"\u5176\u4ed6","text":"<ul> <li>\u200b\u4e94\u4e2a\u200b\u56da\u72af\u200b\u5148\u540e\u200b\u4ece\u200b100\u200b\u9897\u200b\u7eff\u8c46\u200b\u4e2d\u200b\u6293\u200b\u7eff\u8c46\u200b\u3002\u200b\u6293\u5f97\u200b\u6700\u200b\u591a\u200b\u548c\u200b\u6700\u5c11\u200b\u7684\u200b\u4eba\u200b\u5c06\u200b\u88ab\u200b\u5904\u6b7b\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u4ea4\u6d41\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6478\u200b\u51fa\u200b\u5269\u4e0b\u200b\u7eff\u8c46\u200b\u7684\u200b\u6570\u91cf\u200b\uff0c\u200b\u8c01\u200b\u7684\u200b\u5b58\u6d3b\u200b\u51e0\u7387\u200b\u6700\u5927\u200b\uff1f - \u200b\u66fe\u52a0\u200b\u7684\u200b\u56de\u7b54\u200b - \u200b\u77e5\u4e4e\u200b</li> <li>1000\u200b\u6876\u200b\u6c34\u200b\uff0c\u200b\u5176\u4e2d\u200b\u4e00\u6876\u200b\u6709\u6bd2\u200b\uff0c\u200b\u732a\u200b\u559d\u200b\u6bd2\u6c34\u200b\u540e\u4f1a\u200b\u5728\u200b15\u200b\u5206\u949f\u200b\u5185\u200b\u6b7b\u53bb\u200b\uff0c\u200b\u60f3\u200b\u7528\u200b\u4e00\u4e2a\u200b\u5c0f\u65f6\u200b\u627e\u5230\u200b\u8fd9\u6876\u200b\u6bd2\u6c34\u200b\uff0c\u200b\u81f3\u5c11\u200b\u9700\u8981\u200b\u51e0\u5934\u200b\u732a\u200b\uff1f - \u200b\u82d7\u534e\u680b\u200b\u7684\u200b\u56de\u7b54\u200b - \u200b\u77e5\u4e4e\u200b</li> <li>\u200b\u9664\u4e86\u200b 3\uff0c4\uff0c5 \u200b\u4ee5\u5916\u200b\u662f\u5426\u200b\u8fd8\u6709\u200b\u522b\u7684\u200b\u4e09\u89d2\u5f62\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b\u4e09\u6761\u200b\u8fb9\u200b\u662f\u200b\u8fde\u7eed\u200b\u81ea\u7136\u6570\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b\u9762\u79ef\u200b\u4e5f\u200b\u662f\u200b\u81ea\u7136\u6570\u200b\uff1f - Pandora Eartha\u200b\u7684\u200b\u56de\u7b54\u200b - \u200b\u77e5\u4e4e\u200b</li> <li>\u200b\u72b6\u6001\u200b\u7a7a\u95f4\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u89e3\u200b - Anonymity67\u200b\u7684\u200b\u6587\u7ae0\u200b - \u200b\u77e5\u4e4e\u200b</li> <li>\u200b\u5982\u4f55\u200b\u6c42\u200b\u6570\u5217\u200b\\(a_{n+1} = a_n^2 - 2a_n\\)? - Reuental\u200b\u7684\u200b\u56de\u7b54\u200b - \u200b\u77e5\u4e4e\u200b</li> </ul>"},{"location":"math/causal-inference/","title":"\u56e0\u679c\u200b\u63a8\u65ad","text":"<p>According to Causal Inference: What If.</p> <ol> <li>A definition of causal effect</li> <li>Randomized experiments</li> <li>Observational studies</li> <li>Effect modification</li> <li>Interaction</li> <li>Graphical representation of causal effects</li> <li>Confounding</li> <li>Selection bias</li> <li>Measurement bias and \"noncausal\" diagrams</li> </ol>"},{"location":"math/causal-inference/causal-inference-stale/","title":"\u56e0\u679c\u200b\u63a8\u65ad","text":"<p>Casual inference is about studying the consequence of doing one thing vs another.</p> <p>Simpson\u2019s Paradox</p> <p>\u200b\u67d0\u4e2a\u200b\u7edf\u8ba1\u200b\u5173\u8054\u200b\uff0c\u200b\u53ef\u80fd\u200b\u5728\u200b\u6240\u6709\u200b\u5b50\u200b\u7fa4\u4f53\u200b\u4e0a\u200b\u7684\u200b\u6548\u679c\u200b\u90fd\u200b\u662f\u200b\u76f8\u53cd\u200b\u7684\u200b\u3002</p> <p>A statistical association that holds for the entire population can be reversed in every subpopulation.</p> <p></p> <p>Berkson\u2019s Paradox</p> <p>Variables that have no relationships can appear to have strong associations in a selected subpopulation.</p> <p>\u200b\u56e0\u679c\u200b\u63a8\u65ad\u200b\u6709\u200b\u4e24\u4e2a\u200b\u4e3b\u8981\u200b\u7684\u200b\u7814\u7a76\u200b\u6846\u67b6\u200b\uff0c\u200b\u5373\u200b Potential outcome framework \u200b\u548c\u200b Causal graph \u3002</p>"},{"location":"math/causal-inference/causal-inference-stale/#potential-outcome-framework","title":"Potential Outcome Framework","text":""},{"location":"math/causal-inference/causal-inference-stale/#_2","title":"\u6846\u67b6\u200b\u8bbe\u5b9a","text":"<ul> <li>Unit of analysis\uff1a\u200b\u4e0d\u540c\u200b\u65f6\u95f4\u200b\u4e0b\u200b\u7684\u200b\u540c\u4e00\u4e2a\u200b\u4e2a\u4f53\u200b\u5e94\u5f53\u200b\u770b\u4f5c\u200b\u4e0d\u540c\u200b\u7684\u200b\u4e2a\u4f53\u200b</li> <li>Treatment \\(D\\)\uff1a\u200b\u901a\u5e38\u200b\u5212\u5206\u200b\u4e3a\u200b\u5b9e\u9a8c\u7ec4\u200b\uff08\\(D=1\\)\uff09\u200b\u4e0e\u200b\u5bf9\u7167\u7ec4\u200b\uff08\\(D=0\\)\uff09\uff0c\u200b\u4f46\u200b\\(D\\)\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u53d6\u591a\u503c\u200b\u6216\u200b\u8fde\u7eed\u200b</li> <li>Potential outcome \\(Y(d)\\)\uff1a\u200b\u5f53\u200b\u5e72\u9884\u200b\u6c34\u5e73\u200b\u4e3a\u200b\\(d\\)\u200b\u65f6\u200b\u5e94\u5f53\u200b\u51fa\u73b0\u200b\u7684\u200b\u7ed3\u679c\u200b\u3002</li> <li>Counterfactual outcome\uff1a\u200b\u5f53\u200b\u5e72\u9884\u200b\u6c34\u5e73\u200b\u4e3a\u200b\\(D\\)\u200b\u65f6\u200b\u6240\u6709\u200b\\(d\\not = D\\)\u200b\u7684\u200b\u7ed3\u679c\u200b\u2014\u2014\u200b\u5b58\u5728\u200b\u4f46\u200b\u65e0\u6cd5\u200b\u89c2\u6d4b\u200b\u5230\u200b</li> <li>Casual effect\uff1a\u200b\u6bd4\u8f83\u200b\u4e24\u4e2a\u200b\u5e73\u884c\u200b\u7ed3\u679c\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5dee\u5f02\u200b\uff0c\\(Y(1) - Y(0)\\)</li> </ul> <p>\u200b\u5f53\u200b\u4e00\u4e2a\u200b\u4e2a\u4f53\u200b\u63a5\u6536\u200b\u5230\u200b\\(d=D\\)\u200b\u4e4b\u540e\u200b\uff0c\u200b\u5176\u200b\u5e72\u9884\u200b\u72b6\u6001\u200b\u5c31\u200b\u4e0d\u4f1a\u200b\u518d\u200b\u6539\u53d8\u200b\u3002\u200b\u56e0\u6b64\u200b\u4e0d\u200b\u53ef\u80fd\u200b\u89c2\u6d4b\u200b\u5230\u200b\u4e00\u4e2a\u200b\u4e2a\u4f53\u6240\u6709\u200b\u53ef\u80fd\u200b\u51fa\u73b0\u200b\u7684\u200b\u5e72\u9884\u200b\u7ed3\u679c\u200b\u3002</p> <p>SUTVA assumption</p> <p>\u200b\u5047\u8bbe\u200b\u4e2a\u4f53\u200b\\(i\\)\u200b\u7684\u200b\u5e72\u9884\u200b\u72b6\u6001\u200b\\(D_i\\)\u3001\u200b\u5e72\u9884\u200b\u548c\u200b\u4e0d\u200b\u5e72\u9884\u200b\u7684\u200b\u6548\u679c\u200b\\(Y_i(0), Y_i(1)\\)\u200b\u72ec\u7acb\u200b\u540c\u200b\u5206\u5e03\u200b\uff0c\u200b\u5373\u200b</p> \\[ \\{D_i, Y_i(0), Y_i(1)\\}\\sim\\{D, Y(0), Y(1)\\} \\] <p>\u200b\u540c\u65f6\u200b\u5047\u8bbe\u200b</p> <ol> <li>\u200b\u6bcf\u4e2a\u200b\u4e2a\u4f53\u200b\u7684\u200b\u7ed3\u679c\u200b\u4e0d\u200b\u53d7\u5230\u200b\u5176\u4ed6\u200b\u4e2a\u4f53\u200b\u5e72\u9884\u200b\u6c34\u5e73\u200b\u7684\u200b\u5f71\u54cd\u200b\uff08\u200b\u4e0d\u200b\u5b58\u5728\u200b\u4e2a\u4f53\u200b\u4e4b\u95f4\u200b\u7684\u200b\u76f8\u4e92\u5f71\u54cd\u200b\uff0c\u200b\u4e2a\u4f53\u200b\u7684\u200b\u7ed3\u679c\u200b\u53ea\u53d7\u200b\u5e72\u9884\u200b\u6c34\u5e73\u200b\u7684\u200b\u5f71\u54cd\u200b\uff09</li> <li>\u200b\u4e0d\u200b\u5b58\u5728\u200b\u5e72\u9884\u200b\u6c34\u5e73\u200b\u7684\u200b\u9690\u85cf\u200b\u72b6\u6001\u200b\uff08\u200b\u5373\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5e72\u9884\u200b\u72b6\u6001\u200b\u90fd\u200b\u662f\u200b\u539f\u5b50\u200b\u7684\u200b\uff0c\u200b\u4e0d\u200b\u53ef\u4ee5\u200b\u8fdb\u4e00\u6b65\u200b\u5212\u5206\u200b\uff09</li> </ol> <p>\u200b\u8003\u8651\u200b\u603b\u4f53\u200b\u7684\u200b\u671f\u671b\u200b\u5e72\u9884\u200b\u6548\u679c\u200b\uff08 Average Treatment Effect, ATE\uff09</p> \\[ \\tau = \\mathbb E[Y(1) - Y(0)] \\] <p>\u200b\u7531\u4e8e\u200b\u5bf9\u4e8e\u200b\u4e2a\u4f53\u200b\\(i\\)\uff0c\u200b\u65e0\u6cd5\u200b\u540c\u65f6\u200b\u89c2\u6d4b\u200b\\(Y_i(1), Y_i(0)\\)\uff0c\u200b\u56e0\u6b64\u200b\\(\\tau\\)\u200b\u7684\u200b\u786e\u5207\u200b\u6570\u503c\u200b\u540c\u6837\u200b\u65e0\u6cd5\u200b\u89c2\u6d4b\u200b\u3002</p> \\[ \\begin{aligned}     \\hat\\tau &amp;= \\frac{1}{n_1} \\sum_{i;D_i = 1}Y_i - \\frac{1}{n_0} \\sum_{i;D_i = 0}Y_i \\\\     &amp;= \\mathbb E[Y(1) | D = 1] - \\mathbb E[Y(0) | D = 0] \\end{aligned} \\] <p>\u200b\u9700\u8981\u200b\u8003\u8651\u200b\\(D\\)\u200b\u7684\u200b\u5206\u5e03\u200b\uff0c\u200b\u5373\u200b\u5b9e\u9a8c\u7ec4\u200b\u4e0e\u200b\u5bf9\u7167\u7ec4\u200b\u5982\u4f55\u200b\u4ea7\u751f\u200b\uff0c\u200b\u6216\u200b\\(Y, D\\)\u200b\u7684\u200b\u72ec\u7acb\u6027\u200b\u3002</p> <p>\u200b\u5f53\u200b\\(Y, D\\)\u200b\u6ee1\u8db3\u200b</p> \\[ (Y(0), Y(1))\\perp D \\label{1} \\] <p>\u200b\u65f6\u200b\uff0c\u200b\u6709\u200b\\(\\hat\\tau = \\tau\\)</p>"},{"location":"math/causal-inference/causal-inference-stale/#_3","title":"\u6df7\u6dc6\u200b\u56e0\u5b50","text":"<p>\u200b\u8003\u8651\u200b\u5982\u4e0b\u200b\u573a\u666f\u200b\uff1a</p> <ol> <li>\u200b\u4e00\u7fa4\u200b\u88ab\u8bd5\u200b\u968f\u673a\u200b\u63a5\u53d7\u200b\u836f\u7269\u200b\u8bd5\u9a8c\u200b</li> <li>\u200b\u88ab\u200b\u8bd5\u4e2d\u200b\u75c7\u72b6\u200b\u6bd4\u8f83\u4e25\u91cd\u200b\u7684\u200b\u4e2a\u4f53\u200b\u63a5\u53d7\u200b\u836f\u7269\u200b\u5b9e\u9a8c\u200b</li> </ol> <ol> <li>\u200b\u968f\u673a\u200b\u8bd5\u9a8c\u200b\u6307\u200b\u5206\u914d\u673a\u5236\u200b\u7531\u200b\u7814\u7a76\u8005\u200b\u53ef\u63a7\u200b\u3002\u200b\u5982\u200b\u6309\u7167\u200b\\(p = 0.5\\)\u200b\u7684\u200b\u6982\u7387\u200b\u8fdb\u884c\u200b\u4f2f\u52aa\u5229\u200b\u5b9e\u9a8c\u200b\u968f\u673a\u200b\u5206\u914d\u200b\uff0c\u200b\u5219\u200b\\((Y(1)\uff0c Y(0))\\perp D\\)\uff0c\u200b\u6b64\u65f6\u200b\u6709\u200b\\(\\hat\\tau = \\tau\\)</li> <li>\u200b\u89c2\u6d4b\u200b\u7814\u7a76\u200b\u6307\u200b\u5206\u914d\u673a\u5236\u200b\u4e0d\u7531\u200b\u7814\u7a76\u8005\u200b\u63a7\u5236\u200b\u3002\u200b\u5982\u200b\u88ab\u200b\u8bd5\u200b\u6839\u636e\u200b\u4e2a\u4f53\u200b\u611f\u53d7\u200b\u81ea\u884c\u51b3\u5b9a\u200b\u5403\u836f\u200b\u3002\u200b\u6b64\u65f6\u200b\u5b58\u5728\u200b\uff08\u200b\u53ef\u4ee5\u200b\u89c2\u6d4b\u200b\u5230\u200b\u7684\u200b\uff09\u200b\u6df7\u6dc6\u200b\u56e0\u5b50\u200b\\(X\\)</li> </ol> <p>\u200b\u6df7\u6dc6\u200b\u56e0\u5b50\u200b</p> <p>\u200b\u53d8\u91cf\u200b\\(X\\)\u200b\u662f\u200b\u6df7\u6dc6\u200b\u56e0\u5b50\u200b\uff0c\u200b\u5982\u679c\u200b\uff1a</p> <ol> <li>\\(X\\)\u200b\u4f1a\u200b\u5f71\u54cd\u200b\u5206\u914d\u200b\uff0c\u200b\u5373\u200b\\(X\\not \\perp D\\)\uff0c\u200b\u6216\u200b</li> <li>\\(X\\)\u200b\u4f1a\u200b\u5f71\u54cd\u200b\u7ed3\u679c\u200b\uff0c\u200b\u5373\u200b\\(X\\not \\perp (Y(1)\uff0c Y(0))\\)</li> </ol> <p>\u200b\u901a\u5e38\u200b\u5c06\u200b\u53ef\u200b\u89c2\u6d4b\u200b\u5230\u200b\u7684\u200b\u6df7\u6dc6\u200b\u56e0\u5b50\u200b\u8bb0\u200b\u4e3a\u200b\\(X\\)\uff0c\u200b\u4e0d\u80fd\u200b\u89c2\u6d4b\u200b\u5230\u200b\u7684\u200b\u6df7\u6dc6\u200b\u56e0\u5b50\u200b\u8bb0\u200b\u4e3a\u200b\\(U\\)\u3002</p> <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u5f53\u200b\u5b58\u5728\u200b\u6df7\u6dc6\u200b\u56e0\u5b50\u200b\u65f6\u200b\uff0c\\(\\eqref{1}\\)\u200b\u4e0d\u518d\u200b\u6210\u7acb\u200b\uff0c\u200b\u5176\u4e2d\u200b\u7684\u200b\\(D\\)\u200b\u53d8\u4e3a\u200b\\(D|X\\)</p> <p>\u200b\u5f53\u200b\u6240\u6709\u200b\u7684\u200b\u6df7\u6dc6\u200b\u56e0\u5b50\u200b\u90fd\u200b\u88ab\u200b\u89c2\u6d4b\u200b\u5230\u200b\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u9002\u7528\u200b unconfoundedness assumption</p> <p>Unconfoundedness assumption</p> <p>\u200b\u5047\u8bbe\u200b\u6210\u7acb\u200b\u65f6\u200b\uff0c\u200b\u6709\u200b</p> \\[ (Y(1), Y(0)) \\perp D|X \\] <p>\u200b\u63a7\u5236\u200b\u6df7\u6dc6\u200b\u56e0\u5b50\u200b\uff0c\u200b\u6b64\u65f6\u200b\u6709\u200b</p> \\[\\begin{aligned}     &amp; \\mathbb E [\\mathbb E[Y | D = 1, X] - \\mathbb E[Y | D = 0, X]] \\\\     =&amp; \\mathbb E [\\mathbb E[Y(1) | D = 1, X] - \\mathbb E[Y(0) | D = 0, X]] \\\\     =&amp; \\mathbb E [\\mathbb E[Y(1) | X] - \\mathbb E[Y(0) | X]] \\\\     =&amp; \\mathbb E [\\mathbb E[Y(1) - Y(0) | X]] \\\\     =&amp; \\mathbb E[Y(1) - Y(0)] \\end{aligned} \\] <p>\u200b\u4f46\u200b\u5b9e\u9645\u4e0a\u200b\uff0c\u200b\u4e0d\u200b\u53ef\u80fd\u200b\u89c2\u6d4b\u200b\u5230\u200b\u6240\u6709\u200b\u7684\u200b\u6df7\u6dc6\u200b\u56e0\u5b50\u200b\u3002\u200b\u6b64\u65f6\u200b</p> \\[ \\begin{aligned}     &amp; \\bbE [Y | D = 1] - \\bbE [Y| D = 0] \\\\     =&amp; \\bbE[\\bbE[Y | D = 1, X] | D = 1] - \\bbE[\\bbE[Y | D = 0, X] | D = 0] \\end{aligned} \\] <p>\u200b\u4f46\u200b\u5b9e\u9645\u4e0a\u200b\uff0c\\(\\bbP(X|D = 1) \\not = \\bbP(X|D = 0)\\)\uff0c\u200b\u56e0\u6b64\u200b\u9020\u6210\u200b\u504f\u5dee\u200b\u3002</p> <p>\u200b\u5e72\u9884\u200b\u4e0e\u200b\u6761\u4ef6\u200b</p> <ul> <li>\\(\\bbE(Y|D = 0)\\)\u200b\u53cd\u6620\u200b\u6761\u4ef6\u200b\uff0c\u200b\u4f5c\u7528\u200b\u5728\u200b\u7fa4\u4f53\u200b\\(D = 0\\)\u200b\u4e0a\u200b\u3002</li> <li>\\(\\bbE(Y(0))\\)\u200b\u53cd\u6620\u200b\u5e72\u9884\u200b\uff0c\u200b\u4f5c\u7528\u200b\u5728\u200b\u5168\u4f53\u200b\u4e0a\u200b\u3002</li> </ul> <p>\u200b\u5f53\u200b\\((Y(1), Y(0))\\perp D | X\\)\u200b\u6210\u7acb\u200b\u65f6\u200b\uff0c\u200b\u6709\u200b</p> \\[ \\bbE(Y(1) | X) = \\bbE(Y | D = 1, X) \\] <p>\u200b\u524d\u63d0\u200b\u662f\u200b\uff0c overlap assumption \u200b\u6210\u7acb\u200b\u3002</p> <p>Overlap assumption</p> <p>\u200b\u5bf9\u4e8e\u200b\u6240\u6709\u200b\u7684\u200b\\(X\\)\uff0c\\(Y(0), Y(1)\\)\u200b\u5fc5\u987b\u200b\u90fd\u200b\u5b58\u5728\u200b\uff0c\u200b\u5373\u200b</p> \\[ \\bbP(D=1|X)\\in (0, 1) \\] <p>\u200b\u5b9a\u4e49\u200b\\(\\bbP(D=1|X)\\in (0, 1)\\)\u200b\u4e3a\u200bpropensity score\u3002</p>"},{"location":"math/causal-inference/causal-inference-stale/#_4","title":"\u5b9e\u8bc1\u200b\u7814\u7a76","text":"<p>\u200b\u5b9e\u9645\u4e0a\u200b\uff0c unconfoundedness \u200b\u548c\u200b overlap \u200b\u5047\u8bbe\u200b\u5747\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u6210\u7acb\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u6709\u200b\u8bb8\u591a\u200b\u9690\u85cf\u200b\u7684\u200b\u6df7\u6dc6\u200b\u56e0\u5b50\u200b\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u524d\u200b\u6587\u4e2d\u200b\u7684\u200b Simpson\u2019s Paradox \uff0c\u200b\u51fa\u73b0\u200b\u53cd\u200b\u76f4\u89c9\u200b\u73b0\u8c61\u200b\u7684\u200b\u539f\u56e0\u200b\u5728\u4e8e\u200b\uff0c\u200b\u6027\u522b\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6df7\u6dc6\u200b\u56e0\u5b50\u200b\uff1a</p> <ol> <li>\u200b\u5973\u6027\u200b\u7684\u200b\u88ab\u200b\u8bd5\u200b\u6bd4\u4f8b\u200b\u66f4\u9ad8\u200b\uff08\\(D\\not\\perp X\\)\uff09</li> <li>\u200b\u5973\u6027\u200b\u6574\u4f53\u200b\u7684\u200b\u5eb7\u590d\u200b\u7387\u200b\u66f4\u200b\u4f4e\u200b\uff08\\(Y\\not\\perp X\\)\uff09</li> </ol> <p>\u200b\u5728\u200b\u5b9e\u8bc1\u200b\u7814\u7a76\u200b\u4e2d\u200b\uff0c\u200b\u5f80\u5f80\u200b\u8fd8\u6709\u200b\u7814\u7a76\u8005\u200b\u672a\u80fd\u200b\u89c2\u6d4b\u200b\u5230\u200b\u7684\u200b\u6df7\u6dc6\u200b\u56e0\u5b50\u200b\u3002</p> <p>\u200b\u6df7\u6dc6\u200b\u56e0\u5b50\u200b\u65e2\u200b\u662f\u200b\u969c\u788d\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200b\u5de5\u5177\u200b\u3002\u200b\u5728\u200b\u7406\u60f3\u5316\u200b\u7684\u200b\u7edf\u8ba1\u200b\u63a8\u65ad\u200b\u4e2d\u200b\uff0c\u200b\u76f8\u5173\u6027\u200b\u4e0d\u80fd\u200b\u63a8\u51fa\u200b\u56e0\u679c\u6027\u200b\u3002\u200b\u4f46\u200b\u5728\u200b\u5b9e\u8bc1\u200b\u7814\u7a76\u200b\u4e2d\u200b\uff0c\u200b\u7531\u4e8e\u200b\u6df7\u6dc6\u200b\u56e0\u5b50\u200b\u7684\u200b\u5b58\u5728\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u533a\u5206\u200b\u76f8\u5173\u6027\u200b\u4e2d\u200b\u7684\u200b\u56e0\u679c\u5173\u7cfb\u200b\u3002</p> <p>\u200b\u4e00\u4e9b\u200b\u8861\u91cf\u200b\u5e72\u9884\u200b\u6548\u679c\u200b\u7684\u200b\u6307\u6807\u200b\uff08\u200b\u53c2\u6570\u200b\uff09</p> <p>ATE</p> \\[ \\tau = \\bbE[Y(1) - Y(0)] \\] <p>\u200b\u88ab\u8bd5\u200b\u7684\u200b ATE</p> \\[ \\tau_1 = \\bbE[Y(1) - Y(0) | D = 1] \\] <p>\u200b\u6761\u4ef6\u200b ATE\uff08 CATE \uff09</p> \\[ \\tau_C = \\bbE[Y(1) - Y(0) | (D, X)\\in \\text{subgroup}] \\] <p>QTE\uff08 Quantile treatment effect \uff09</p> \\[ \\begin{gathered}     \\text{QTE} = F_1^{-1}(\\gamma) - F_0^{-1}(\\gamma) \\\\     F_d^{-1}(\\gamma) = \\inf\\{y|\\bbP(Y(d)\\leq y)\\geq \\gamma\\} \\end{gathered} \\] <p>Causal risk ratio\uff08\u200b\u53ea\u200b\u9002\u7528\u200b\u4e8e\u200b\u7ed3\u679c\u200b\u4e8c\u5206\u200b\u7684\u200b\u60c5\u51b5\u200b\uff09</p> \\[ \\text{CRR} = \\bbP(Y(1) = 1) / \\bbP(Y(0) = 1) \\] <p>\u200b\u4ee5\u4e0a\u200b\u8fd9\u4e9b\u200b\u53c2\u6570\u200b\u90fd\u200b\u53d7\u5230\u200b\u6df7\u6dc6\u200b\u53d8\u91cf\u200b\uff08\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u80fd\u200b\u88ab\u200b\u89c2\u6d4b\u200b\u5230\u200b\uff09\u200b\u7684\u200b\u5f71\u54cd\u200b\u3002\u200b\u76f8\u5bf9\u200b\u5e94\u200b\u7684\u200b\uff0c\u200b\u4ece\u200b\u5b9e\u9a8c\u200b\u7ed3\u679c\u200b\u7684\u200b\u7edf\u8ba1\u200b\u6307\u6807\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u8fd9\u4e9b\u200b\u6307\u6807\u200b\u7684\u200b\u4e00\u4e2a\u200b\u4f30\u8ba1\u200b\u3002</p> <p>\u200b\u5982\u200b\u5bf9\u4e8e\u200b ATE \u200b\u6307\u6807\u200b\\(\\tau = \\bbE[Y(1) - Y(0)]\\)\uff0c\\(\\tilde \\tau = \\bbE[Y | D = 1] - \\bbE[Y | D = 0]\\)\u200b\u5c31\u662f\u200b\\(\\tau\\)\u200b\u7684\u200b\u4e00\u4e2a\u200b\u4f30\u8ba1\u200b\u3002</p> <p>\\(\\tau\\)\u200b\u662f\u200b\u4e00\u4e2a\u200b\u56e0\u679c\u200b\u53c2\u6570\u200b\uff0c\u200b\u53d7\u5230\u200b\\(X, D, Y(0), Y(1)\\)\u200b\u7684\u200b\u5171\u540c\u200b\u5f71\u54cd\u200b\u3002\\(\\tilde\\tau\\)\u200b\u662f\u200b\u4e00\u4e2a\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u7edf\u8ba1\u6570\u636e\u200b\u4e2d\u200b\u89c2\u6d4b\u200b\u5230\u200b\u7684\u200b\u6307\u6807\u200b\uff0c\u200b\u53d7\u5230\u200b\\(X, D, Y\\)\u200b\u7684\u200b\u5171\u540c\u200b\u5f71\u54cd\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u67d0\u4e2a\u200b\u53c2\u6570\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u7edf\u8ba1\u6570\u636e\u200b\u4e2d\u200b\u89c2\u6d4b\u200b\u5230\u200b\u4e00\u4e2a\u200b\u552f\u4e00\u200b\u7684\u200b\u65e0\u504f\u200b\u4f30\u8ba1\u200b\uff0c\u200b\u5219\u200b\u79f0\u4e3a\u200b identifiable \u3002\u200b\u7531\u4e8e\u200b\u53cd\u200b\u4e8b\u5b9e\u200b\u7684\u200b\u5b58\u5728\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ea\u80fd\u200b\u89c2\u6d4b\u200b\u5230\u200b\\(Y = Y(D)\\)\uff0c\u200b\u56e0\u6b64\u200b\u5373\u4f7f\u200b\u6709\u200b\u65e0\u9650\u200b\u591a\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u200b\uff0c\u200b\u4e5f\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u80fd\u200b\u5b9e\u73b0\u200b identification \u3002\u200b\u5728\u200b unconfoundedness \u200b\u5047\u8bbe\u200b\u6210\u7acb\u200b\u7684\u200b\u6761\u4ef6\u200b\u4e0b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b identification \u3002</p> <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u9a8c\u8bc1\u200b\u4e00\u4e2a\u200b\u56e0\u679c\u5173\u7cfb\u200b\u662f\u5426\u200b\u6210\u7acb\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u4e24\u200b\u65b9\u9762\u200b\u7684\u200b\u4fe1\u606f\u200b</p> <ol> <li>\u200b\u5145\u8db3\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u4ee5\u200b\u53cd\u6620\u200b\\(X, D, Y\\)\u200b\u7684\u200b\u5206\u5e03\u200b\u3002</li> <li>\u200b\u5173\u4e8e\u200b\\(X, D, Y(0), Y(1)\\)\u200b\u7684\u200b\u4e00\u4e9b\u200b\u5047\u8bbe\u200b\uff0c\u200b\u5982\u200b\u968f\u673a\u200b\u8bd5\u9a8c\u200b\u5047\u8bbe\u200b\u6216\u200b unconfoundedness \u200b\u5047\u8bbe\u200b\u3002</li> </ol>"},{"location":"math/causal-inference/causal-inference-stale/#causal-graph","title":"Causal Graph","text":"<p>\u200b\u4e00\u7cfb\u5217\u200b\u53d8\u91cf\u200b\u7684\u200b\u56e0\u679c\u5173\u7cfb\u200b\u53ef\u4ee5\u200b\u6784\u6210\u200b\u56e0\u679c\u200b\u56fe\u200b\u3002\u200b\u56e0\u679c\u200b\u56fe\u662f\u200b\u4e00\u4e2a\u200b\u6709\u200b\u5411\u200b\u65e0\u200b\u73af\u56fe\u200b\uff08 DAG \uff09\uff0c\u200b\u5176\u4e2d\u200b\u7684\u200b\u8282\u70b9\u200b\u8868\u793a\u200b\u53d8\u91cf\u200b\uff0c\u200b\u6bcf\u6761\u200b\u8fb9\u200b\u4ece\u7236\u200b\u53d8\u91cf\u200b\uff08\u200b\u8282\u70b9\u200b\uff09\u200b\u51fa\u53d1\u200b\uff0c\u200b\u6307\u5411\u200b\u5b50\u200b\u53d8\u91cf\u200b\uff08\u200b\u8282\u70b9\u200b\uff09\u3002</p> <ul> <li>\u200b\u76f8\u90bb\u200b\uff1a\u200b\u5982\u679c\u200b\u4e24\u4e2a\u200b\u8282\u70b9\u200b\u4e4b\u95f4\u200b\u6709\u200b\u4e00\u6761\u200b\u8fb9\u200b\uff0c\u200b\u79f0\u200b\u4e24\u4e2a\u200b\u8282\u70b9\u200b\u76f8\u90bb\u200b</li> <li>\uff08\u200b\u56e0\u679c\u200b\uff09\u200b\u8def\u5f84\u200b\uff1a\u200b\u4e00\u7cfb\u5217\u200b\u76f8\u90bb\u200b\u7684\u200b\u8282\u70b9\u200b\u7ec4\u6210\u200b\u4e00\u6761\u200b\u8def\u5f84\u200b\uff08\u200b\u65e0\u89c6\u200b\u8fb9\u200b\u7684\u200b\u65b9\u5411\u200b\uff09</li> <li>\u200b\u6709\u200b\u5411\u200b\u8def\u5f84\u200b\uff1a\u200b\u65b9\u5411\u200b\u76f8\u540c\u200b\u7684\u200b\u4e00\u7cfb\u5217\u200b\u8def\u5f84\u200b\u6240\u200b\u8fde\u63a5\u200b\u7684\u200b\u8282\u70b9\u200b\u5f62\u6210\u200b\u7684\u200b\u8def\u5f84\u200b</li> </ul> <p>\u200b\u8def\u5f84\u200b\u6709\u200b\u5982\u4e0b\u200b\u5f62\u5f0f\u200b\uff1a</p> <ul> <li>\u200b\u94fe\u200b\uff1a\\(A\\ra B\\ra C\\)</li> <li>\u200b\u6c47\u805a\u200b\uff1a\\(A\\ra B\\la C\\)</li> <li>\u200b\u5206\u652f\u200b\uff1a\\(A\\la B\\ra C\\)</li> </ul> <p>\u200b\u5728\u200b\u56e0\u679c\u200b\u56fe\u4e2d\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u90fd\u200b\u662f\u200b\u5176\u5b50\u200b\u8282\u70b9\u200b\uff08\u200b\u540e\u4ee3\u200b\uff09\u200b\u7684\u200b\u76f4\u63a5\u200b\u539f\u56e0\u200b\uff08\u200b\u7956\u5148\u200b\uff09\uff08\u200b\u5373\u200b\uff0c\u200b\u4e0d\u200b\u5b58\u5728\u200b\u4e2d\u95f4\u200b\u7684\u200b\u53d8\u91cf\u200b\u5f71\u54cd\u200b\u5b50\u200b\u8282\u70b9\u200b\uff09\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u5982\u4e0b\u200b\u56fe\u200b\u6240\u793a\u200b\u7684\u200b\u56e0\u679c\u200b\u56fe\u200b</p> <p></p> <ol> <li>\\(X_1\\)\u200b\u5f71\u54cd\u200b\u53d8\u91cf\u200b\\(X_4\\)\uff0c\u200b\u4f46\u200b\u4e0d\u662f\u200b\u76f4\u63a5\u200b\u5f71\u54cd\u200b\u3002</li> <li> <p>\u200b\u5982\u679c\u200b\u56fa\u5b9a\u200b\\(X_3\\)\uff0c\u200b\u5219\u200b\\(X_1\\)\u200b\u7684\u200b\u53d8\u5316\u200b\u4e0d\u4f1a\u200b\u5f71\u54cd\u200b\\(X_4\\)\uff0c\u200b\u5373\u200b</p> \\[ X_4\\perp (X_1, X_2) | X_3 \\] </li> <li> <p>\u200b\u4f46\u200b\\(X_4\\)\u200b\u4ecd\u7136\u200b\u4e0e\u200b\\(X_5\\)\u200b\u6709\u5173\u200b\u3002</p> </li> </ol> <p>\u200b\u8fdb\u4e00\u6b65\u200b\u5730\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e0d\u59a8\u200b\u5047\u8bbe\u200b\uff0c\u200b\u5982\u679c\u200b\u63a7\u5236\u200b\u4e86\u200b\u67d0\u4e2a\u200b\u53d8\u91cf\u200b\\(X_i\\)\u200b\u5168\u90e8\u200b\u7684\u200b\u76f4\u63a5\u200b\u7956\u5148\u200b\uff0c\u200b\u5219\u200b\\(X_i\\)\u200b\u53ea\u200b\u4e0e\u5176\u200b\u540e\u4ee3\u200b\u6709\u5173\u200b\uff08\u200b\u56e0\u679c\u200bMarkov\u200b\u5047\u8bbe\u200b\uff09\u3002</p> <p>Markov\u200b\u56e0\u5b50\u200b\u5206\u89e3\u200b</p> <p>\u200b\u5f53\u200bMarkov\u200b\u5047\u8bbe\u200b\u6210\u7acb\u200b\u65f6\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\\(n\\)\u200b\u4e2a\u200b\u53d8\u91cf\u200b\\(X_1, \\ldots, X_n\\)\uff0c\u200b\u6709\u200b</p> \\[ \\bbP(X_1, \\ldots, X_n) = \\prod_{i=1}^n \\bbP(X_i | A_i) \\] <p>\u200b\u5f0f\u200b\u4e2d\u200b\uff0c\\(A_i\\)\u200b\u4e3a\u200b\\(X_i\\)\u200b\u5168\u90e8\u200b\u7684\u200b\u7956\u5148\u200b\u3002</p>"},{"location":"math/causal-inference/causal-inference-stale/#d-","title":"d-\u200b\u5206\u5272","text":"<p>\u200b\u5bf9\u4e8e\u200b\u6709\u200b\u4e24\u4e2a\u200b\u8282\u70b9\u200b\u7684\u200b\u56e0\u679c\u200b\u56fe\u200b\uff0c\\(X_1\\la X_2\\)\u200b\u548c\u200b\\(X_1\\ra X_2\\)\u200b\u662f\u200b\u4e24\u4e2a\u200b\u4e0d\u540c\u200b\u7684\u200b\u56e0\u679c\u5173\u7cfb\u200b\uff0c\u200b\u4f46\u200b\u5728\u200b\u76f8\u5173\u6027\u200b\u4e0a\u200b\u6709\u200b\u76f8\u540c\u200b\u7684\u200b\u8868\u73b0\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u533a\u5206\u200b\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u6709\u200b\u4e09\u4e2a\u200b\u8282\u70b9\u200b\u7684\u200b\u56e0\u679c\u200b\u56fe\u200b\uff1a</p> <ul> <li>\\(X_1\\ra X_2\\ra X_3\\)\u200b\u548c\u200b\\(X_1\\la X_2\\ra X_3\\)\u200b\u662f\u200b\u4e24\u4e2a\u200b\u4e0d\u540c\u200b\u7684\u200b\u56e0\u679c\u5173\u7cfb\u200b\uff0c\u200b\u4f46\u200b\u5b83\u4eec\u200b\u90fd\u200b\u6ee1\u8db3\u200b\\(X_1\\perp X_3 | X_2, X_1\\not\\perp X_3\\)\uff0c\u200b\u4ecd\u7136\u200b\u65e0\u6cd5\u200b\u533a\u5206\u200b\u3002\u200b\u5e76\u4e14\u200b\u7531\u4e8e\u200b\u53d8\u91cf\u200b\\(X_2\\)\u200b\u7684\u200b\u5b58\u5728\u200b\uff0c\u200b\u5373\u4f7f\u200b\\(X_1, X_3\\)\u200b\u5b58\u5728\u200b\u76f8\u5173\u200b\u5173\u7cfb\u200b\uff0c\u200b\u4e5f\u200b\u4e0d\u80fd\u200b\u8bf4\u660e\u200b\u5176\u200b\u5b58\u5728\u200b\u76f4\u63a5\u200b\u6216\u200b\u95f4\u63a5\u200b\u7684\u200b\u56e0\u679c\u5173\u7cfb\u200b\u3002\u200b\u63a7\u5236\u200b\\(X_2\\)\u200b\u53ef\u4ee5\u200b\u963b\u65ad\u200b\\(X_1, X_3\\)\u200b\u7684\u200b\u56e0\u679c\u200b\u94fe\u200b\u3002</li> <li>\u200b\u5bf9\u4e8e\u200b\\(\\X_1\\ra X_2\\la X_3\\)\uff0c\u200b\u5982\u679c\u200b\u63a7\u5236\u200b\\(X_2\\)\uff0c\u200b\u5219\u200b\u6709\u200b\\(X_1\\not \\perp X_3 | X_2\\)\uff0c\u200b\u4f46\u200b\\(X_1\\perp X_3\\)\u3002\\(X_2\\)\u200b\u963b\u65ad\u200b\u4e86\u200b\\(X_1, X_3\\)\u200b\u7684\u200b\u56e0\u679c\u200b\u94fe\u200b\u3002<ul> <li>\u200b\u5982\u679c\u200b\u6709\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b\\(X_4\\)\u200b\u6ee1\u8db3\u200b\\(X_2\\ra X_4\\)\uff0c\u200b\u5219\u200b\u63a7\u5236\u200b\\(X_4\\)\u200b\u4e5f\u200b\u4f1a\u200b\u4f7f\u200b\\(X_1, X_3\\)\u200b\u8868\u73b0\u200b\u51fa\u200b\u76f8\u5173\u200b\uff0c\u200b\u5373\u200b\\(X_1\\not \\perp X_3 | X_4\\)\u3002</li> </ul> </li> </ul> <p>\u200b\u963b\u65ad\u200b\u56e0\u679c\u200b\u94fe\u200b</p> <p>\u200b\u4e24\u4e2a\u200b\u53d8\u91cf\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8def\u5f84\u200b\u5982\u679c\u200b\u6ee1\u8db3\u200b\u4e0b\u5217\u200b\u4e4b\u4e00\u200b\uff0c\u200b\u5219\u200b\u56e0\u679c\u5173\u7cfb\u200b\u4e0d\u80fd\u200b\u901a\u8fc7\u200b\u8fd9\u200b\u6761\u200b\u8def\u5f84\u200b\uff08\u200b\u88ab\u200b\u963b\u65ad\u200b\uff09\u3002</p> <ol> <li>\u200b\u5b58\u5728\u200b\u4e00\u4e2a\u200b\u6ca1\u6709\u200b\u88ab\u200b\u63a7\u5236\u200b\u7684\u200b\u6c47\u805a\u200b\u8282\u70b9\u200b\uff1b</li> <li>\u200b\u5b58\u5728\u200b\u4e00\u4e2a\u200b\u88ab\u200b\u63a7\u5236\u200b\u7684\u200b\u975e\u200b\u6c47\u805a\u200b\u8282\u70b9\u200b\u3002</li> </ol> <p>\u200b\u5982\u679c\u200b\u4e24\u4e2a\u200b\u53d8\u91cf\u200b\u4e4b\u95f4\u200b\u7684\u200b\u6240\u6709\u200b\u8def\u5f84\u200b\u90fd\u200b\u88ab\u200b\u963b\u65ad\u200b\uff0c\u200b\u5219\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u53d8\u91cf\u200b\u88ab\u200b\u5206\u5272\u200b\u3002</p> <p>\u200b\u4e00\u822c\u200b\u5b9a\u4e49\u200b\u88ab\u200b\u63a7\u5236\u200b\u7684\u200b\u53d8\u91cf\u200b\u96c6\u5408\u200b\u4e3a\u200b\\(Z\\)\u3002\u200b\u5982\u679c\u200b\u56e0\u679c\u200b\u56fe\u200b\\(\\calG\\)\u200b\u4e2d\u200b\uff0c\u200b\u63a7\u5236\u53d8\u91cf\u200b\\(Z\\)\u200b\u5c06\u200b\u56e0\u679c\u200b\u56fe\u200b\u5206\u4e3a\u200b\u4e86\u200b\u4e24\u4e2a\u200b\u90e8\u5206\u200b\uff0c\u200b\u5219\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u90e8\u5206\u200b\\(X, Y\\)\u200b\u6784\u6210\u200b\u4e86\u200b\u56e0\u679c\u200b\u56fe\u200b\u7684\u200b\u4e00\u4e2a\u200bd-\u200b\u5206\u5272\u200b\uff0c\u200b\u5373\u200b\\(X\\perp_\\calG Y | Z\\)\u3002\u200b\u8fdb\u4e00\u6b65\u200b\u5730\u200b\uff0c\u200b\u5982\u679c\u200b\u6ee1\u8db3\u200b Markov \u200b\u5047\u8bbe\u200b\uff0c\u200b\u5219\u200b\\(X\\)\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u53d8\u91cf\u200b\u548c\u200b\\(Y\\)\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u53d8\u91cf\u200b\u72ec\u7acb\u200b\u3002</p> <p>\u200b\u4f46\u662f\u200b\u53d8\u91cf\u200b\u72ec\u7acb\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u80fd\u200b\u5bfc\u51fa\u200bd-\u200b\u5206\u5272\u200b\uff0c\u200b\u7531\u6b64\u200b\u5f97\u5230\u200b faithfulness assumption</p> <p>faithfulness assumption</p> <p>\u200b\u5bf9\u4e8e\u200b\u56e0\u679c\u200b\u56fe\u200b\\(\\calG\\)\uff0c\u200b\u82e5\u200b\u5bf9\u4e8e\u200b\u4efb\u610f\u200b\u4e92\u4e0d\u200b\u76f8\u4ea4\u200b\u7684\u200b\\(X, Y, Z\\)\u200b\u4e14\u200b\\(X\\perp Y | Z\\)\uff0c\u200b\u5219\u200b\\(X, Y\\)\u200b\u6784\u6210\u200b\u4e00\u4e2a\u200bd-\u200b\u5206\u5272\u200b\u3002</p> <p>\u200b\u5728\u200b Markov \u200b\u5047\u8bbe\u200b\u548c\u200b faithfulness \u200b\u5047\u8bbe\u200b\u6210\u7acb\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0cd-\u200b\u5206\u5272\u200b\u7b49\u4ef7\u200b\u4e8e\u200b\u53d8\u91cf\u200b\u72ec\u7acb\u200b\u3002</p>"},{"location":"math/causal-inference/causal-inference-stale/#_5","title":"\u76f8\u5173\u6027\u200b\u4e0e\u200b\u56e0\u679c\u6027\u200b\u7684\u200b\u8def\u5f84","text":"<p>\u200b\u5728\u200b\u56e0\u679c\u200b\u56fe\u4e0a\u200b\uff1a</p> <ul> <li>\u200b\u76f8\u5173\u6027\u200b\u6cbf\u200b\u8def\u5f84\u200b\u6d41\u52a8\u200b</li> <li>\u200b\u56e0\u679c\u6027\u200b\u6cbf\u6709\u200b\u5411\u200b\u8def\u5f84\u200b\u6d41\u52a8\u200b</li> </ul> <p>\u200b\u5982\u679c\u200b\u963b\u65ad\u200b\u4e86\u200b\u6240\u6709\u200b\u975e\u200b\u56e0\u679c\u6027\u200b\u7684\u200b\u8def\u5f84\u200b\uff0c\u200b\u5219\u200b\u4e24\u4e2a\u200b\u53d8\u91cf\u200b\u4e4b\u95f4\u200b\u5b58\u5728\u200b\u56e0\u679c\u5173\u7cfb\u200b\u3002</p> <p>do\u200b\u7b97\u5b50\u200b</p> <p>\u200b\u5728\u200b\u56e0\u679c\u200b\u56fe\u4e2d\u200b\uff0c\u200b\u5bf9\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b\u7684\u200b\u5e72\u9884\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u963b\u65ad\u200b\u6240\u6709\u200b\u6307\u5411\u200b\u8be5\u200b\u53d8\u91cf\u200b\u7684\u200b\u8fb9\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u8bb0\u200b\u4f5c\u200b\\(\\mathrm {do}(\\cdot)\\)</p> <p>\u200b\u975e\u200b\u56e0\u679c\u200b\u7684\u200b\u8def\u5f84\u200b\u6709\u200b\u4e24\u4e2a\u200b\u6765\u6e90\u200b\uff1a</p> <ul> <li>\u200b\u6ca1\u6709\u200b\u63a7\u5236\u200b\u5206\u652f\u200b\u53d8\u91cf\u200b\uff0c\u200b\u5373\u200b confounding bias</li> <li>\u200b\u63a7\u5236\u200b\u4e86\u200b\u6c47\u805a\u200b\u53d8\u91cf\u200b\uff0c\u200b\u5373\u200b selection bias</li> </ul>"},{"location":"math/causal-inference/causal-inference-stale/#confounding","title":"Confounding \u200b\u4e0e\u200b\u540e\u95e8\u200b\u8c03\u6574","text":"<p>Confounding \u200b\u6307\u200b\u56e0\u679c\u200b\u8def\u5f84\u200b\u7684\u200b\u8d77\u59cb\u200b\u548c\u200b\u7ec8\u7ed3\u200b\u53d8\u91cf\u200b\u90fd\u200b\u53d7\u5230\u200b\u540c\u4e00\u4e2a\u200b\u6df7\u6dc6\u200b\u56e0\u5b50\u200b\u7684\u200b\u5f71\u54cd\u200b\u3002\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u540e\u95e8\u200b\u8c03\u6574\u200b\u6d88\u9664\u200b\u5f71\u54cd\u200b\u3002</p>"},{"location":"math/causal-inference/chapter-1/","title":"A Definition of Causal Effect","text":"<p>Key concepts: treatment, outcome, average causal effect, potential outcome, consistency, causation-association difference, identifiability</p>"},{"location":"math/causal-inference/chapter-1/#treatment-and-outcome","title":"Treatment and Outcome","text":"<p>We want to compare the result when a specified action is or is not applied to an individual. The action is called a treatment, and the result is called an outcome, which are denoted by \\(A\\) and \\(Y\\) respectively. Usually we take \\(A\\) and \\(Y\\) to be both binary.</p> <p>The outcome under a specified treatment \\(A = a\\) is denoted by \\(Y^{A = a}\\). In reality, we can only observe one value of \\(Y^{A = 1}\\) or \\(Y^{A = 0}\\) for each individual. Each \\(Y^{A = a}\\) is called a potential outcome. If \\(A = a\\) is observed, \\(Y^{A = a}\\) is factual, and \\(Y^{A = 1 - a}\\) is counterfactual. The probability of potential outcome \\(Y = 1\\) is called risk.</p> <p>Consistency assumption</p> <p>If \\(A = a\\) is observed, then \\(Y = Y^{A = a}\\).</p>"},{"location":"math/causal-inference/chapter-1/#causal-effects","title":"Causal Effects","text":"<p>Identifiability</p> <p>A quantity is identifiable if it can be expressed (unbiasedly) as a function of the distribution of the observed data.</p> <p>Before we clarify the definition of causal effect, we need to make some assumptions on individual outcome.</p> <p>No interference assumption</p> <p>The potential outcome under \\(A = a\\) does not depend on the treatment of other individuals (i.e. no interference).</p>"},{"location":"math/causal-inference/chapter-1/#individual-causal-effect","title":"Individual Causal Effect","text":"<p>If for individual \\(i\\), \\(Y_i^{A = 1} \\not = Y_i^{A = 0}\\), then we say that the treatment has a causal effect for individual \\(i\\).</p>"},{"location":"math/causal-inference/chapter-1/#average-causal-effect","title":"Average Causal Effect","text":"<p>The average causal effect is defined as</p> \\[ P(Y^{A = 1} = 1) - P(Y^{A = 0} = 1) \\] <p>or</p> \\[ E(Y^{A = 1}) - E(Y^{A = 0}) \\] <p>The two forms of average causal effect are equivalent. We can test average causal effect by testing the causal null hypothesis \\(H_0: P(Y^{A = 1} = 1) = P(Y^{A = 0} = 1)\\). However, the absence of average causal effect does not imply the absence of individual causal effect. We call the null hypothesis \\(H_0: \\forall i, Y_i^{a = 1} = Y_i^{a = 0}\\) as sharp causal null hypothesis.</p>"},{"location":"math/causal-inference/chapter-1/#functional-causal-effect","title":"Functional Causal Effect","text":"<p>We can measure the outcome \\(Y\\) over a function \\(f(y)\\). For example \\(V(Y^{a = 1}) - V(Y^{a = 0})\\) as the causal effect on sample variance. Notice that \\(V(Y^{a = 1}) - V(Y^{a = 0})\\) usually does not equal to \\(V(Y^{a = 1} - Y^{a = 0})\\).</p>"},{"location":"math/causal-inference/chapter-1/#measuring-causal-effects","title":"Measuring Causal Effects","text":"<p>The causal null hypothesis can be written as</p> <ol> <li>Difference: \\(H_0: P(Y^{a = 1} = 1) - P(Y^{a = 0} = 1) = 0\\)</li> <li>Ratio: \\(H_0: \\frac{P(Y^{a = 1} = 1)}{P(Y^{a = 0} = 1)} = 1\\)</li> <li>Odds ratio: \\(H_0: \\frac{P(Y^{a = 1} = 1) / P(Y^{a = 1} = 0)}{P(Y^{a = 0} = 1) / P(Y^{a = 0} = 0)} = 1\\)</li> </ol> <p>When \\(H_0\\) is rejected, we can use number needed to treat (NNT) to measure the strength of causal effect. NNT is defined as the number of individuals needed to be treated to prevent one additional bad outcome. NNT is given by:</p> \\[ \\text{NNT} = \\frac{-1}{P(Y^{a = 1} = 1) - P(Y^{a = 0} = 1)} \\]"},{"location":"math/causal-inference/chapter-1/#random-variability","title":"Random Variability","text":"<p>In reality, we can only collect a sample of individuals in the population, and our estimate on causal effect suffers from random variability.</p> <ol> <li>Sampling variablility: We use \\(\\hat P(Y^{a = 1} = 1) = N(Y^{a = 1}) / N(Y)\\) as an estimator of \\(P(Y^{a = 1} = 1)\\). The estimator suffers from random variability.</li> <li>Potential outcomes are usually not deterministic, which makes another source of random variability.</li> </ol>"},{"location":"math/causal-inference/chapter-1/#causation-and-association","title":"Causation and Association","text":"<p>In the real world, we can only observe one potential outcome for each individual. Therefore, we cannot directly measure the outcome \\(P(Y^{a = 1} = 1)\\) and \\(P(Y^{a = 0} = 1)\\). Instead, we can only use \\(P(Y = 1 | A = 1)\\) and \\(P(Y = 1 | A = 0)\\) as estimators.</p> <p>Like the causal null hypothesis, we can also define the independent (\\(A\\perp Y\\)) null hypothesis in three forms:</p> <ol> <li>Risk difference: \\(H_0: P(Y = 1 | A = 1) - P(Y = 1 | A = 0) = 0\\)</li> <li>Risk ratio: \\(H_0: \\frac{P(Y = 1 | A = 1)}{P(Y = 1 | A = 0)} = 1\\)</li> <li>Odds ratio: \\(H_0: \\frac{P(Y = 1 | A = 1) / P(Y = 0 | A = 1)}{P(Y = 1 | A = 0) / P(Y = 0 | A = 0)} = 1\\)</li> </ol> <p>Notice that any terms in the form of conditional probability or expectation are associations. Only marginal probability or expectation can be causal effects, since the marginal probability takes all other factors into consideration.</p> <p></p>"},{"location":"math/causal-inference/chapter-2/","title":"Randomized Experiments","text":"<p>Key concepts: random experiment, exchangeability, effect modification</p>"},{"location":"math/causal-inference/chapter-2/#randomized-experiments_1","title":"Randomized Experiments","text":"<p>Consider the following treatment assignment:</p> <p></p> <p>Assume that the treatment assignment is determined by a random procedure, the experiment is called a random experiment. Then exchanging the individual in treated group with those in control group will not affect the association measure.</p> <p>If a random experiment satisfies the following conditions, it is called an ideal randomized experiment:</p> <ol> <li>Full adherence: All individuals follow the treatment assignment.</li> <li>No loss to follow-up: All individuals are followed up and their outcomes are observed.</li> <li>Single treatment: Each individual is assigned to one treatment only.</li> <li>Double-blind assignment: The treatment assignment is unknown to both the individuals and the researchers.</li> </ol> <p>If all the possible values of treatment variable \\(A = a\\) are sequentially assigned to individuals, the experiment is called crossover experiment. Individual causal effects can be estimated using crossover experiments if the following conditions are met:</p> <ol> <li>No carryover effect: The treatment effect of \\(a\\) does not depend on the previous treatments.</li> <li>The individual causal effect \\(\\alpha_i = Y^{a_t = 1}_{it} - Y^{a_t = 0}_{it}\\) does not depend on time.</li> <li>The potential outcome under no treatment does not depend on time.</li> </ol> <p>By assigning the treatment value sequence randomly, we can remove the required conditiona 3. In such case:</p> \\[ (Y_{i1} - Y_{i0})A_{i1} - (Y_{i0} - Y_{i1})A_{i0} \\] <p>estimates the individual causal effect \\(E(\\alpha_i)\\) under condition 2. If condition 2 is not met, the estimator estimates \\(E(\\alpha_{i0} + \\alpha_{i1}) / 2\\).</p>"},{"location":"math/causal-inference/chapter-2/#exchangeability","title":"Exchangeability","text":"<p>Exchangeability</p> <ul> <li>(Full) exchangeability indicates that swapping the treatment assignment of two individuals does not affect the association measure, or \\(Y^a \\perp A\\).</li> <li>Mean exchangeability indicates that \\(\\forall a', E(Y^a | A = a') = E(Y^a)\\), or the expectation of switched potential outcome is the same as the original one.</li> </ul> <p>When \\(Y\\) and \\(A\\) are binary, full exchangeability is equivalent to mean exchangeability. Mean exchangeability is sufficient for deriving \\(E(Y^a) = E(Y | A = a)\\).</p> <p>Exchangeability indicates that all the potential outcome and the treatment assignment are independent, i.e. \\(\\forall a, Y^{A = a} \\perp A\\), or the treatment assignment is exogenous. Under exchangeability, \\(P(Y = 1 | A = a)\\) is an unbiased estimator of \\(P(Y^{a} = 1)\\).</p> <p>\\(Y^a\\perp A\\) and \\(Y\\perp A\\)</p> <p>Notice that \\(Y^a \\perp A\\) is not equivalent to \\(Y \\perp A\\). The latter indicates that treatment \\(A\\) does not have any causal effect on the outcome \\(Y\\). If \\(\\forall a, E(Y^a) = E(Y)\\), then \\(Y\\perp A\\).</p> <p>Notice that a randomized experiment could be unexchangeable even if infinite samples are collected.</p>"},{"location":"math/causal-inference/chapter-2/#conditional-randomization","title":"Conditional Randomization","text":"<p>Consider an additional factor \\(L\\) affects the assignment of treatments, i.e., when \\(L\\) takes different values, the distribution of \\(A\\) is different. Such a randomized experiment is called conditional randomized experiment. In a conditional randomized experiment, the corresponding randomized experiment using the overall distribution of \\(A\\) is called marginally randomized experiment.</p> <p>Although the marginally randomized experiment is exchangeable, the conditional randomized experiment is not exchangeable in general. Only conditional exchangeability holds in such randomized experiments, i.e. \\(\\forall a, Y^a \\perp A | L\\).</p> <p>We can measure the causal effects on sub-groups \\(P(Y^{a = 1} = 1 | L = l) - P(Y^{a = 0} = 1 | L = l)\\) using conditional exchangeability (stratification) or directly measure the overall causal effect \\(P(Y^{a = 1} = 1) - P(Y^{a = 0} = 1)\\) on the population using marginal exchangeability. For different sub-groups, the causal effects may be different, which is called effect modification or treatment effect heterogeneity.</p> <p>Stratification</p> <p>Stratification is to split the population into mutually exclusive sub-groups in which the treatment assignment is exchangeable. The causal effect can be estimated in each sub-group.</p>"},{"location":"math/causal-inference/chapter-2/#standardization","title":"Standardization","text":"<p>We can view the marginal risk as a weighted average of the conditional risks:</p> \\[ P(Y^a = 1) = \\sum_{l\\in \\calL} P(Y^a = 1 | L = l) P(L = l) \\] <p>With conditional exchangeability holds, we can derive that \\(P(Y^a = 1) = \\sum_{l\\in \\calL} P(Y = 1 | A = a, L = l) P(L = l)\\), which is called standardization, making the unobserved potential outcome \\(P(Y^a = 1)\\) to be identifiable.</p>"},{"location":"math/causal-inference/chapter-2/#inverse-probability-weighting","title":"Inverse Probability Weighting","text":"<p>Notice that</p> \\[ P(A = a | L = l) = \\frac{P(A = a, L = l)}{P(L = l)} \\] <p>We can assign the weight \\(w_l = \\frac{1}{P(A = a | L = l)}\\) to each individual with \\(L = l\\) to construct a pseudo-population. The pseudo-population satisfies exchangeability, and we can use the pseudo-population to estimate the causal effect. The IP weighted mean of outcome \\(Y\\) is \\(E\\left( I(A = a) Y / P(A = a | L)\\right)\\), where \\(I(A = a)\\) is the indicator function.</p> <p>Assuming that \\(\\forall l, P(A = a | L = l) &gt; 0\\), we can derive that</p> \\[ \\begin{aligned}     &amp; E\\left( \\frac{I(A = a) Y}{P(A = a | L)}\\right) \\\\     =&amp; \\sum_{l} \\frac{E\\left( I(A = a) Y | L = l\\right) P(L = l)}{P(A = a | L = l)} \\\\     =&amp; \\sum_{l} \\frac{E\\left( Y | A = a, L = l\\right) P(A = a | L = l)P(L = l)}{P(A = a | L = l)} \\\\     =&amp; \\sum_{l} E\\left( Y | A = a, L = l\\right) P(L = l) \\\\     =&amp; \\sum_{l} E(Y^a | L = l) P(L = l) \\\\     =&amp; E(Y^a) \\end{aligned} \\] <p>Therefore, under positivity assumption, IP weighting is equivalent to standardization.</p> <p>Positivity</p> <p>For any individual in any sub-group \\(l\\) has a non-zero probability of receiving treatment \\(a\\), i.e. \\(\\forall l, \\forall a, P(A = a | L = l) &gt; 0\\).</p>"},{"location":"math/causal-inference/chapter-3/","title":"Observational Studies","text":"<p>In an observational study, the variables are neither assigned nor controlled by the researcher. The researcher only observes the values of the variables. Compared with randomized experiments, observational studies are more limited to the researchers.</p>"},{"location":"math/causal-inference/chapter-3/#identifiability-conditions","title":"Identifiability Conditions","text":"<p>If the following identifiability conditions are met, the observational study can be regarded as a conditionally randomized experiment.</p> <p>Identifiability condition</p> <ol> <li>Consistency: The values of treatment under comparison correspond to well-defined interventions that, in turn, correspond to the versions of treatment in the data.</li> <li>Exchangeability: The conditional probability of receiving any value of treatment depends only on observed covariates \\(L\\).</li> <li>Positivity: The probability of receiving any value of treatment is strictly positive for all combinations of covariates \\(L\\).</li> </ol> <p>If the identifiability conditions are not met, we can use other methods including instrumental variable to establish another group of identifiability condition.</p>"},{"location":"math/causal-inference/chapter-3/#exchangeability","title":"Exchangeability","text":"<p>In observational studies, the exchangeablitiy condition may or may not hold, as the observed \\(L\\) may not be the only predictor of the treatment. The true predictor may even be unobserved or unobservable.</p> <p>Exchangeability is given by</p> \\[ Y^a \\perp A \\mid L \\Longleftrightarrow \\forall a, P(Y^a  = 1 \\mid A = a, L = l) = P(Y^a = 1\\mid A \\not = a, L = l) \\] <p>However, in observational studies, \\(P(Y^a = 1\\mid A\\not = a, L = l)\\) is unidentifiable. Thus, the exchangeablitiy cannot be empirically verified.</p>"},{"location":"math/causal-inference/chapter-3/#positivity","title":"Positivity","text":"<p>To measure causal effects, we need to measure the distribution of outcome under treatment and under no treatment. That is, in the whole sample or any observed subgroup, the probability of receiving any value of treatment should be strictly positive, which is called positivity. Notice that positivity is only required for these observed covariates that requires exchangeability.</p> <p>Standardization and IP weighting are meaningful only if positivity holds.</p> <p>IP weighting without positivity</p> <p>If positivity does not hold, IP weighting is undefined since the denominator in</p> \\[ E\\left[\\frac{I(A = a)Y}{P(A = a | L)}\\right] \\] <p>is zero. However, the IP weighted mean is still defined.</p> \\[ E\\left[\\frac{I(A = a)Y}{N(A = a, L) / N(L)}\\right] \\] <p>Notice that \\(N(A = a, L) / N(L)\\) is defined on observed data. Let \\(Q(a) = \\{l | N(A = a, L) / N(L) &gt; 0\\}\\). Now, \\(E\\left[\\frac{I(A = a)Y}{N(a, L) / N(L)}\\right] = E[Y^a | L \\in Q(a)]P(L\\in Q(a))\\) is a biased estimator of \\(E[Y^a]\\).</p> <p>When positivity does not hold, then \\(Q(0) \\not = Q(1)\\), under this condition, the difference between IP weighted means (\\(E\\left[\\frac{I(A = 1)Y}{N(A = 1, L) / N(L)}\\right] - E\\left[\\frac{I(A = 0)Y}{N(A = 0, L) / N(L)}\\right]\\)) cannot be interpreted causally.</p>"},{"location":"math/causal-inference/chapter-3/#consistency","title":"Consistency","text":"<p>Consider the following examples in heart transplant studies:</p> <ol> <li>Two patients received heart transplants performed by different surgeons.</li> <li>Two patients received heart transplants performed under different procedures.</li> </ol> <p>Due to the complexity of real-world situations, we always need to aggregate the different treatments into a single treatment value. The map between discrete values of the treatment variable and real-world intervention is called treatment protocol. The first step for investigating the causal effect is to precisely specify the treatment protocol, so that any variation regarded as treatment will lead to the same outcome, or treatment variation irrelevance. Under this condition can we define the potential outcome under the specified treatment value. In addition, the treatment protocol of interest and the treatment protocol of the observed data should be the same.</p> <p>Under the treatment variation irrelevance, we can define the potential outcome \\(Y^a\\).</p> <p>Treatment variation irrelevance</p> <p>Suppose that receiving heart transplant is denoted as \\(a\\), the heart transplant is performed by Alex and Bob. But the treatment protocol is observed as the heart transplant is performed by Alex. Then, the treatment variation irrelevance is violated and consistency assumption \\(Y = Y^{a = 1}\\) does not hold.</p>"},{"location":"math/causal-inference/chapter-3/#target-trial","title":"Target Trial","text":"<p>Under the identifiability conditions, we can regard the observational study as a conditionally randomized experiment. The equivalent hypothetical, randomized experiment is called target trial.</p>"},{"location":"math/causal-inference/chapter-4/","title":"Effect Modification","text":"<p>A null average causal effect does not imply a null average causal effect for a subset of the population. A variable \\(V\\) is an effect modifier if the average causal effect of \\(A\\) on \\(Y\\) differs across levels of \\(V\\).</p> <p>An effect modifier does need to directly have causal relationship with the different causal effect. If the difference in causal effects can be interpreted causally, the variable is a causal effect modifier, otherwise it is a surrogate effect modifier.</p> <p>Effects in the treated</p> <p>Notice the treatment variable itself can be regarded as a subgroup. The average causal effect in the treated is measured on subgroup \\(A = 1\\).</p> \\[ P(Y^{a = 1} = 1 | A = 1) - P(Y^{a = 0} = 1 | A = 1) \\] <ol> <li>If the distribution of individual causal effects varies between the treated and untreated, the average causal effect in the treated is not equal to the average causal effect in the population.</li> <li>\\(P(Y^{a = 0} = 1 | A = 1)\\) is unidentifiable. Estimating \\(P(Y^{a = 0} = 1 | A = 1)\\) requires partial exchangeability \\(Y^{a = 0} \\perp A \\mid L\\).</li> <li>Following the definition of effects in the treated, we can define effects in the untreated, which is defined on subgroup \\(a = 0\\). Effects in the untreated requires partial exchangeability \\(Y^{a = 1} \\perp A \\mid L\\).</li> </ol> <p>The counterfactual \\(P(Y^{a} = 1 | A = a')\\) can be estimated using standardization or IP weighting.</p> <ol> <li>Standardization: \\(P(Y^{a} = 1 | A = a') = \\sum_{l} P(Y = 1 | A = a, L = l) P(L = l | A = a')\\)</li> <li>IP weighting: \\(P(Y^{a} = 1 | A = a') = E\\left[\\frac{I(A = a)Y}{f(A | L)P(A = a' | L)}\\right]/E\\left[\\frac{I(A = a)}{f(A | L)P(A = a' | L)}\\right]\\)</li> </ol> <p>The extrapolation of computed causal effects across populations are called transportability. Transportability is an unverifiable assumption. If the effect modification measure, version of treatment and the in-group interference are similar, we can assume transportability.</p> <p>From effect modification, we can identify the subgroup that benefits most from the treatment or intervention. Moreover, effect modification helps us to learn underlying mechanisms of the outcome.</p>"},{"location":"math/causal-inference/chapter-4/#effect-modification-vs-prognostic-factor","title":"Effect Modification v.s. Prognostic Factor","text":"<p>When marginal randomization does not hold, there exists a prognostic factor \\(L\\) is a variable that affect the treatment assignment, while an effect modifier \\(V\\) affects the effect. To estimate causal effects in such conditions, extra adjustments are required</p>"},{"location":"math/causal-inference/chapter-4/#stratification","title":"Stratification","text":"<p>Stratification can be used to adjust the marginal causal effect of \\(A\\) on \\(V\\). However, it requires to take all the combinations of \\(V\\) and \\(L\\) into account. And stratification requires positivity condition to be met on \\(L\\).</p> <p>Using stratification, we can yield the conditional causal effect of \\(A\\) on \\(Y\\) for each stratum. The per-stratum causal effect can be further weighted to get a pooled causal effect.</p> <p>Notice that stratification will introduce sampling variability when the stratification is getting finer.</p>"},{"location":"math/causal-inference/chapter-4/#matching","title":"Matching","text":"<p>Matching strategy is similar but inversed approach to IP weighting.</p> <p>The goal of matching is to construct a subset of the population in which the distribution of \\(L\\) is similar between the treated and untreated by sampling in the treated part or untreated part. Stratas with only treated or untreated individuals are excluded.</p> <p>Usually, the group with more individuals between the treated and untreated is sampled to match the other group. The subgroup being matched is used to calculate the average effect in the treated or untreated.</p> <p>However, as matching changes the distribution of \\(L\\), the distribution of causal modifier \\(V\\) will also be changed.</p>"},{"location":"math/causal-inference/chapter-4/#overview-of-adjustment-methods","title":"Overview of Adjustment Methods","text":"<p>There are 4 methods to adjust the causal effect of \\(A\\) on \\(Y\\), including standardization, IP weighting, matching and stratification.</p> <ol> <li>Standardization and IP weighting can be used to compute marginal or conditional causal effects.</li> <li>Matching and stratification can be used to compute conditional causal effects in subgroups.</li> <li>With effect modification, the causal effect of different adjustment methods may be different.</li> </ol>"},{"location":"math/causal-inference/chapter-5/","title":"Interaction","text":"<p>This chapter considers a system that consists multiple treatment variables.</p>"},{"location":"math/causal-inference/chapter-5/#from-joint-intervention-to-interaction","title":"From Joint Intervention to Interaction","text":"<p>Intervention is to manually set the value of treatment variable ignoring the original distribution of the variable. Intervention on multiple variables are called joint intervention.</p> <p>Let the treatment variable be \\(A\\) and \\(B\\). If the causal effect (measured in risk difference) of treatment \\(A\\) is different with different values of \\(B\\), then \\(B\\) has an additive interaction on \\(A\\). Notice that \\(B\\) has an interaction on \\(A\\) is equivalent to \\(A\\) has an interaction on \\(B\\).</p> \\[ P(Y^{a = 1, b = 1} = 1) - P(Y^{a = 0, b = 1} = 1) \\not = P(Y^{a = 1, b = 0} = 1) - P(Y^{a = 0, b = 0} = 1) \\] <p>Superadditive and subadditive</p> <p>Rewrite the above inequality as</p> \\[ \\begin{aligned}     P(Y^{a = 1, b = 1} = 1) - P(Y^{a = 0, b = 0} = 1) &amp;\\not = [P(Y^{a = 1, b = 1} = 1) - P(Y^{a = 0, b = 1} = 1)] \\\\     &amp;+ [P(Y^{a = 1, b = 0} = 1) - P(Y^{a = 0, b = 0} = 1)] \\end{aligned} \\] <p>If the \\(\\not =\\) can be replaced by \\(&gt;\\) or \\(&lt;\\), then the interaction is called superadditive or subadditive, respectively.</p> <p>Similarly, if the causal effect (measured in risk ratio) of treatment \\(A\\) is different with different values of \\(B\\), or vice versa, then there is a multiplicative interaction between \\(A\\) and \\(B\\). If the \\(\\not =\\) can be replaced by \\(&gt;\\) or \\(&lt;\\), then the interaction is called supermultiplicative or submultiplicative, respectively.</p> \\[ \\frac{P(Y^{a = 1, b = 1} = 1)}{P(Y^{a = 0, b = 0} = 1)} \\not = \\frac{P(Y^{a = 1, b = 0} = 1)}{P(Y^{a = 0, b = 0} = 1)} \\times \\frac{P(Y^{a = 1, b = 1} = 1)}{P(Y^{a = 0, b = 1} = 1)} \\]"},{"location":"math/causal-inference/chapter-5/#idenfication-of-interactions","title":"Idenfication of Interactions","text":"<p>To identify the interaction between \\(A\\) and \\(B\\), we need make sure that consistency, exchangeability, positivity for \\(A\\) is satisfied for all values of both \\(A\\) and \\(B\\).</p> <p>Notice the difference between effect modification and interaction. If \\(B\\) is randomly assigned, then \\(B\\) interacts with \\(A\\) is equivalent to that \\(B\\) serves as an effect modifier for \\(A\\).</p> <p>Effect modification v.s. interaction</p> <p>In an interaction, the two variables are of equal status, we can intervene on either or both of them. In effect modification, one variable is the treatment and the other is the modifier, we can only intervene on the treatment variable.</p> <p>For treatment variables, we need consistency, exchangeability, positivity. But such conditions are not required for modifier variables.</p>"},{"location":"math/causal-inference/chapter-5/#response-type","title":"Response Type","text":"<p>For each individual, the potential outcome pattern for receiving different levels of treatment is called response type.</p> <p></p> <p>For binary outcome and one binary treatment, there are \\(2^{2^1} = 4\\) response types. For binary outcome and two binary treatments, there are \\(2^{2 ^ 2} = 16\\) response types.</p> <p>Monotonicity</p> <p>For a response type, when treatment variables except \\(A\\) are fixed, if \\(Y^{a = 1} \\geq Y^{a = 0}\\), then the causal effect of \\(A\\) on \\(Y\\) is monotonic.</p>"},{"location":"math/causal-inference/chapter-5/#sufficient-cause-interaction","title":"Sufficient Cause Interaction","text":"<p>Consider the mechanism of yielding certain outcome by controlling one binary treatment variable \\(A\\). There are three types of mechanisms to inevitably yield the outcome.</p> <ol> <li>With treatment \\(A\\).</li> <li>Without treatment \\(A\\).</li> <li>\\(A\\) is irrelevant to the outcome.</li> </ol> <p>Since the outcome is stochastic, there exists some unknown factors \\(U_1, U_2, U_0\\) that leads to the outcome, respectively. For example, we can say \\(\\{A = 1, U_1 = 1\\}, \\{A = 0, U_2 = 1\\}\\) or \\(\\{U_3 = 1\\}\\) are sufficient-component causes for the outcome.</p> <p>For models with \\(k\\) binary treatment variables, there are \\(3^k\\) possible mechanisms. If any individual \\(U_i = 1\\) corresponds to multiple variables exists, then there exists sufficient cause interaction among these variables.</p> <p>Let \\(k = 2\\) and the treatment variables be \\(A, B\\), respectively. The sufficient cause interaction is synergistic if \\(A = 1, B = 1\\) is a sufficient-component cause for the outcome. The sufficient cause interaction is antagonistic if \\(A = 1, B = 0\\) or \\(A = 0, B = 1\\) are sufficient-component causes for the outcome.</p> <p>When monotonicity holds, some sufficient causes are not possible.</p>"},{"location":"math/causal-inference/chapter-5/#summary","title":"Summary","text":"<p>Sufficient-component-cause framework and the counterfactual framework focus on different interaction questions:</p> <ol> <li>Sufficient-component-cause framework focuses on the causal mechanism (reason) of the outcome.</li> <li>Counterfactual framework focuses on the causal effect of the treatment.</li> </ol>"},{"location":"math/causal-inference/chapter-6/","title":"Graphical Representation of Causal Effects","text":"<p>A causal graph consists the following elements:</p> <ul> <li>Nodes in causal graphs represent random variables.</li> <li>Edges in causal graphs represent direct causal effects.<ul> <li>A trail is a sequence of edges that does not meet the same node twice.</li> <li>A path is a trail that all the edges are pointing in the same direction.</li> </ul> </li> <li>Conventionally, time flows from left to right in causal graphs.</li> <li>Causal graphs follow the properties of Bayesian networks (acyclic, markov factorization).</li> </ul> <p>Markov Factorization</p> <p>The joint distribution of a set of random variables can be factorized into a product of conditional distributions of each variable given its parents in the graph.</p> \\[ P(X_1, \\dots, X_n) = \\prod_{i=1}^n P(X_i \\mid \\text{Pa}(X_i)) \\] <p>where \\(\\text{Pa}(X_i)\\) is the set of parents of \\(X_i\\).</p> <p>Markov factorization is equivalent to the following local independence property:</p> \\[ X_i \\perp \\text{ND}(X_i) \\mid \\text{Pa}(X_i) \\] <p>where \\(\\text{ND}(X_i)\\) is the set of non-descendants of \\(X_i\\).</p> <p>A causal graph contains the following building blocks: fork, chain, collider.</p> <p></p>"},{"location":"math/causal-inference/chapter-6/#d-seperation-and-independence","title":"D-seperation and Independence","text":"<p>Conditional independence relations are encoded in the graph structure.</p>"},{"location":"math/causal-inference/chapter-6/#blocked-trails-and-d-seperation","title":"Blocked Trails and D-seperation","text":"<p>Trails in causal graphs are regarded as blocked or open according to the following rules:</p> <ol> <li>If there are no nodes being observed, a path is blocked if and only if there exists one or more colliders on the path.</li> <li>If the trail contains a non-collider that is observed, the trail is blocked.</li> <li>A collider which is observed does not block the trail.</li> <li>A collider which any of its descendants is observed does not block the trail.</li> </ol> <p>A trail is blocked if it satisfies any of the following conditions:</p> <ol> <li>There exists a collider on the trail that itself or all of its descendants are not observed.</li> <li>There exists a non-collider on the trail that is observed.</li> </ol> <p>If all possible trails between two nodes \\(X, Y\\) are blocked \\(Z\\), the two nodes are d-separated. D-separated nodes are conditionally independent given the observed nodes, i.e., \\(X \\perp Y \\mid Z\\).</p> <p>Faithfulness assumption</p> <p>Faithfulness assumptions states that the observed conditional independence relations are consistent with the graph structure. That is: observed conditional independence \\(X \\perp Y \\mid Z\\) implies that \\(X\\) and \\(Y\\) are d-separated given \\(Z\\) in the graph.</p>"},{"location":"math/causal-inference/chapter-6/#flows-of-association-and-causation","title":"Flows of Association and Causation","text":"<p>If two nodes are not d-separated, there exists at least one open trail between the nodes.</p> <ul> <li>Association flows along open trails.</li> <li>Causation flows along open paths.</li> </ul> <p>There may be multiple trails and paths between two nodes, each trail provides a flow of association or causation. The overall observed association is affected by all the flows of association and causation. Existence of undesired flows of association may lead to lack of exchangeability and biased estimation of causal effects. If there are no flow of association between two nodes, the association is causal.</p> <p>There two types of flows of association:</p> <ol> <li> <p>Common cause: two nodes are associated because they are both affected by a common cause.</p> <p></p> </li> <li> <p>Condition on common effect: two nodes are associated because they are both affecting an observed common effect.</p> <p></p> </li> </ol> <p>Blocking a trail can be regarded as blocking the flow of association or causation on the graph.</p>"},{"location":"math/causal-inference/chapter-6/#hidden-properties","title":"Hidden Properties","text":"<p>Causal graphs only encode conditional independence relations and flows of causation or association. Some properties or assumptions cannot be represent in causal graphs.</p> <ul> <li>Positivity: Positivity in causal graphs can be represented that all of the edges in the graph are not deterministic.</li> <li>Consistency: Consistency is implicitly assumed in causal graphs.</li> </ul> <p>In a causal graph, the treatment node should lead to well-defined treatment.\\</p>"},{"location":"math/causal-inference/chapter-7/","title":"Confounding","text":"<p>Confounding is a situation in which the effect of an exposure on an outcome is distorted by the presence of another variable that is associated with both the exposure and the outcome. The confounding effect is a non-causal association that leads to biased estimation of causal effect.</p> <p>In a causal graph, the confounding effect is caused by an open backdoor path. A backdoor path is a non-path trail from treatment variable \\(A\\) to outcome variable \\(Y\\) that points to \\(A\\). The simplest structure of confounding contains a variable \\(L\\) pointing to treatment \\(A\\) and outcome \\(Y\\).</p> <p></p> <p>Suppose the causal graph is the true causal graph and satisfies faithfulness.</p>"},{"location":"math/causal-inference/chapter-7/#exchangeability","title":"Exchangeability","text":"<p>Following the definition of backdoor path, the definition of confounding can be alternatively expressed as</p> <p>Alternative definition of confounding</p> <p>Confounding is any systematic bias that can be removed by randomized assignment of treatment \\(A\\) (eliminating the backdoor path).</p> <p>When backdoor criterion is satisfied, exchangeability stands. The backdoor criterion requires on of the following:</p> <ol> <li>No confounding: no common cause of treatment \\(A\\) and outcome \\(Y\\).</li> <li>No unmeasured confounding: common cause of \\(A\\) and \\(Y\\) exists but a subset \\(L\\) of measured (observed) non-descendants of \\(A\\) blocks all the backdoor paths. The corresponding set \\(L\\) is called a sufficient set for confounding adjustment. Variable \\(L\\) is also called a confounder.</li> </ol> <p>Unconditional causal effect can be measured when unconditional exchangeability is satisfied. Conditional causal effect can be measured when conditional exchangeability is satisfied. The following table shows causal graph structures holding different exchangeability. The conditioned variable is \\(L\\).</p> Causal identifiability table Unconditional exchangeable Not unconditional exchangeable Conditional exchangeable Not conditional exchangeable <p>To identify conditional or unconditional causal effect, we can apply standardization on measured variables when conditional or unconditional exchangeability is satisfied. Take the following graph as an example.</p> <p></p> <p>When either \\(L_2\\) or \\(L\\) is observed, neither unconditional nor conditional exchangeability is satisfied. However, when both \\(L_2\\) and \\(L\\) are observed, both unconditional and conditional exchangeability is satisfied. We can identify the following causal effect based on observation.</p> <ol> <li>Conditional causal effect within strata of \\(L\\) and \\(L_2\\): \\(E[Y | A = a, L = l, L_2 = l_2]\\)</li> <li>Unconditional causal effect: \\(E[Y | A = a, L = l, L_2 = l_2]P(L_2 = l_2, L = l)\\)</li> <li>Conditional causal effect within strata of \\(L_2\\): \\(E[Y | A = a, L_2 = l_2, L = l]P(L = l | L_2 = l_2)\\)</li> <li>Conditional causal effect within strata of \\(L\\): \\(E[Y | A = a, L = l, L_2 = l_2]P(L_2 = l_2 | L = l)\\)</li> </ol>"},{"location":"math/causal-inference/chapter-7/#confounders","title":"Confounders","text":"<p>The sufficient set for identifying confounder depends on variables observed or measured. For a causal graph, there may also exist multiple sufficient sets for confounding adjustment.</p>"},{"location":"math/causal-inference/chapter-7/#traditional-confounder","title":"Traditional Confounder","text":"<p>A confounder satisfies the following conditions, which is the definition of a traditional confounder.</p> <ol> <li>The variable associates with the treatment.</li> <li>Condition on the treatment, the variable associates with the outcome.</li> <li>The variable is not on the causal path from the treatment to the outcome.</li> </ol> <p>However, a variable that satisfies the above conditions is not necessarily a confounder. Variable \\(L\\) in the following graph is a traditional confounder. When \\(L\\) is not adjusted, unconditional causal effect can be directly identified, adjusting for \\(L\\) will introduce extra selection bias.</p> <p></p>"},{"location":"math/causal-inference/chapter-7/#surrogate-confounder","title":"Surrogate Confounder","text":"<p>A surrogate confounder is a variable that is the result of an unobserved common cause of the treatment and the outcome. The surrogate confounder itself does not lie on a backdoor path. The following graph shows a surrogate confounder \\(L\\).</p> <p></p> <p>Although \\(L\\) does not lie on the backdoor path, observing distribution of \\(L\\) may provide information about the unobserved common cause \\(U\\). In this case, adjusting for \\(L\\) can partially reduce the confounding bias.</p>"},{"location":"math/causal-inference/chapter-7/#single-world-intervention-graph","title":"Single-world Intervention Graph","text":"<p>A single-world intervention graph (SWIG) is a causal graph that explicitly include the conterfactual variables on the graph. Unlike the causal graph that represents the real world, the SWIG represents a counterfactual world created by an intervention.</p> Causal graph Single-world intervention graph <p>In a SWIG, the original treatment variable \\(A\\) is now regarded as two distinct nodes \\(A\\) and \\(a\\). \\(A\\) encodes the possible value of \\(A\\) under no intervention, \\(a\\) is the value of intervened treatment variable. Any descendant \\(X\\) of \\(A\\) is replaced by \\(X^a\\), which is the value of \\(X\\) under intervention \\(A = a\\). From the SWIG, we can see that after conditioning on \\(L\\), the trail \\(A\\leftarrow L\\leftarrow U\\rightarrow Y^a\\) is blocked, indicating that exchangeability \\(A \\perp Y^a | L\\) holds.</p> <p>Confounder cannot be descendants of treatment</p> <p>A confounder cannot be a descendant of the treatment variable. Suppose \\(L\\) is a descendant of \\(A\\), and \\(L\\) connects to \\(Y\\) through some trail. If the trail is a path from \\(L\\) to \\(Y\\), then the whole path through \\(L\\) is a causal path, adjustment on \\(L\\) will block such path. Otherwise, there should be a collider on the path. If the collider is \\(L\\), adjustment on \\(L\\) will open the non-causal trail, introducing extra selection bias. If the collider is not \\(L\\), adjustment on \\(L\\) have no effect.</p>"},{"location":"math/causal-inference/chapter-7/#confounding-adjustment","title":"Confounding Adjustment","text":"<p>Methods adjust for confounder \\(L\\) can be classified into two categories:</p> <ol> <li>G-methods: methods that adjust for \\(L\\) by conditioning on \\(L\\) - IP weighting, G-estimation, standardization.</li> <li>Stratification methods: methods that adjust for \\(L\\) by stratifying on \\(L\\) - stratification, matching.</li> <li>Other methods: difference-in-difference, instrumental variable, front-door adjustment. These methods does not rely on conditional exchangeability.</li> </ol>"},{"location":"math/causal-inference/chapter-7/#difference-in-difference","title":"Difference-in-Difference","text":"<p>Consider the following causal graph. We want to measure causal effect on treated \\(E(Y^1 | A = 1) - E(Y^0 | A = 1)\\). But there exists some unknown factors \\(U\\) that affects both treatment \\(A\\) and outcome \\(Y\\). For example, \\(U\\) can be the severity of disease, which affects both the treatment decision and the outcome.</p> <p></p> <p>Notice that</p> \\[ \\begin{aligned} &amp;&amp;&amp; \\underbrace{E(Y | A = 1) - E(Y | A = 0)}_{\\text{Measured association}} \\\\ &amp;=&amp;&amp; E(Y^1 | A = 1) - E(Y^0 | A = 0) \\\\ &amp;=&amp;&amp; \\underbrace{(E(Y^1 | A = 1) - E(Y^0 | A = 1))}_{\\text{Causal effect on treated}} + \\underbrace{(E(Y^0 | A = 1) - E(Y^0 | A = 0))}_{\\text{Confounding effect}} \\end{aligned} \\] <p>To estimate confounding effect \\(E(Y^0 | A = 1) - E(Y^0 | A = 0)\\) we can measure a pre-treatment outcome \\(C\\) before the treatment is applied. There is no direct causal relationship between pre-treatment outcome \\(C\\) and treatment \\(A\\), but \\(C\\) and \\(A\\) show some association since backdoor \\(C\\leftarrow U\\rightarrow A\\) presents, that is, \\(E(C | A = 1) - E(C | A = 0) \\neq 0\\). The metric \\(E(C | A = 1) - E(C | A = 0) \\neq 0\\) measures the strength of confounding effect of \\(A\\) on \\(C\\). If the confounding effect of \\(A\\) on \\(Y\\) caused by \\(Y\\leftarrow U\\rightarrow A\\) is the same as the confounding effect of \\(A\\) on \\(C\\) (additive equi-confounding assumption), then the confounding effect of \\(A\\) on \\(Y\\) can be removed by difference-in-difference.</p> \\[ E(Y^0 | A = 1) - E(Y^0 | A = 0) = E(C | A = 1) - E(C | A = 0) \\] <p>The causal effect can be measured in</p> \\[ \\begin{aligned} &amp;&amp;&amp; E(Y^1 | A = 1) - E(Y^0 | A = 1) \\\\ &amp;=&amp;&amp; (E(Y | A = 1) - E(Y | A = 0)) - (E(C | A = 1) - E(C | A = 0)) \\end{aligned} \\]"},{"location":"math/causal-inference/chapter-7/#front-door-criterion","title":"Front-door Criterion","text":"<p>Consider a causal graph with a treatment \\(A\\), a mediator \\(M\\) and an outcome \\(Y\\). The causal effect of \\(A\\) on \\(Y\\) is confounded by an unobserved variable \\(U\\). The mediator fully mediates the effect of \\(A\\) on \\(Y\\), i.e. all the causal path from \\(A\\) to \\(Y\\) passes through \\(M\\).</p> <p></p> <p>First we have</p> \\[ P(Y^a = 1) = \\sum_{m} P(Y^a = 1 | M^a = m) P(M^a = m) \\] <p>\\(M\\) is not confounded, so</p> \\[ P(M^a = m) = P(M = m | A = a) \\] <p>Notice that</p> \\[ P(Y^a = 1 | M^a = m) = P(Y^m = 1) = P(Y = 1 | M = m) \\] <p>and</p> \\[ P(Y = 1 | M = m) = \\sum_{a'} P(Y^m = 1 | M = m, A = a')P(A = a') \\] <p>by conditional exchangeability \\(Y^m \\perp M \\mid A\\). Under this case, \\(P(Y^a)\\) can be identified by</p> \\[ P(Y^a = 1) = \\sum_{m} P(M = m | A = a)\\sum_{a'} P(Y = 1 | M = m, A = a')P(A = a') \\]"},{"location":"math/causal-inference/chapter-8/","title":"Selection bias","text":"<p>Selection bias is caused by extra association caused by only part of the population is selected for analysis. Selection bias is caused by conditioning on a common effect of treatment and outcome, even if the treatment actually has no individual causal effect on the outcome.</p> <p>On the causal graph, selection bias is caused by either condition on a collider or descendant of a collider. In reality, selection bias can both appear in observational studies or randomized experiments since participants may be removed from the study before the outcome is observed. If participants are removed not in random, selection bias is introduced.</p> <p></p> \\[ \\frac{P(Y = 1 | A = 1)}{P(Y = 1 | A = 0)} = \\frac{P(Y^{a = 1} = 1)}{P(Y^{a = 0} = 1)} \\not = \\frac{P(Y = 1 | A = 1, L = 0)}{P(Y = 0 | A = 1, L = 0)} \\] <p>Selection bias and hazard ratio</p> <p>Hazards is defined as the probability of a participant to die at a certain time. Following the definition of risk, the hazard ratio is the same as risk ratio. Consider the following causal graph.</p> <p></p> <p>In the graph, treatment \\(A\\) denote the heart transplant. The outcome \\(Y_1\\) and \\(Y_2\\) denote the death of the patient. Unmeasured variable \\(U\\) affect the overall death rate of the patient. For each time, we can define the associational hazard ratio as</p> \\[ \\begin{aligned}     aRR_{AY_1} &amp;= \\frac{P(Y_1 = 1 | A = 1)}{P(Y_1 = 1 | A = 0)} \\\\     aRR_{AY_2} &amp;= \\frac{P(Y_2 = 1 | A = 1)}{P(Y_2 = 1 | A = 0)} \\end{aligned} \\] <p>However, we can only measure the hazard ratio among the patients who are still alive at that time, that is:</p> \\[ aRR_{AY_2 \\mid Y_1 = 0} = \\frac{P(Y_1 = 1 | A = 1, Y_1 = 0)}{P(Y_1 = 1 | A = 0, Y_1 = 0)} \\] <p>However, condition on \\(Y_1\\) opens a trail \\(A \\ra Y_1 \\la U\\ra Y_2\\). Therefore, unless \\(U\\) is measured, from the data collected we cannot distinguish the existence of the path \\(A \\ra Y_2\\).</p>"},{"location":"math/causal-inference/chapter-8/#selection-without-bias","title":"Selection without Bias","text":"<p>Selection will cause bias within the study, but in some cases such bias can be restricted to some strata of the study. Consider the following causal graph. \\(Y = 0\\) if and only if \\(Y_A = Y_E = Y_O = 0\\).</p> <p></p> <ol> <li>\\(Y = 0\\) is equivalent to \\(Y_A = 0\\) and \\(Y_E = 0\\). In such case, \\(A\\) is independent of \\(E\\).</li> <li>Consider the case when \\(Y = 1\\) and \\(Y_O = 0\\), then \\(Y_A = 0\\) indicates \\(Y_E = 1\\) and vice versa. In such case, \\(A\\) is dependent of \\(E\\).</li> </ol>"},{"location":"math/causal-inference/chapter-8/#adjustment-for-selection-bias","title":"Adjustment for Selection Bias","text":"<p>Assume that positivity holds for \\(C = 0\\) and consistency holds for the analysis. Selection bias arises when the participants are not randomly removed from the study, causing the distribution of remaining participants to be different from the original population, i.e. the joint distribution \\(P'(A, L) = P(A, L | C = 0)\\) is no longer identical to \\(P(A, L)\\).</p> <p>Selection bias is often unavoidable. IP weighting and standardization can be used to adjust for selection bias. The inverse probability weight \\(W^C\\) is defined as</p> \\[ W^C = \\frac{1}{P(C = 0 | \\cdot)} \\] <p>where \\(\\cdot\\) denote all the variable that directly affects \\(C\\). Since we can only observed variables for uncensored (\\(C = 0\\)) individuals, the IP weight only uses \\(C = 0\\). IP weighting assigns different weight to the probability distribution of each pair of \\((A, L)\\), so that the distribution of the weighted sample is identical to the original population.</p> \\[ \\begin{aligned} &amp;&amp;&amp; \\frac{P(A = a, L = l, C = 0)}{P(C = 0 | A = a, L = l)} \\\\ &amp;=&amp;&amp; \\frac{P(A = a, L = l, C = 0)}{P(A = a, L = l, C = 0) / P(A = a, L = l)} \\\\ &amp;=&amp;&amp; P(A = a, L = l) \\end{aligned} \\] <p>Difference in confounding bias and selection bias</p> <p>In confounding bias, IP weighting is applied on the treatment variable \\(A\\), while in selection bias, IP weighting is applied on the censoring variable \\(C\\).</p> <p>When there are measured variable \\(L\\) on the trail through \\(C\\) that is able to block the trail causing selection bias, we can use stratification to adjust for selection bias by conditioning on \\(L\\).</p>"},{"location":"math/causal-inference/chapter-9/","title":"Measurement bias and \"noncausal\" diagrams","text":""},{"location":"math/causal-inference/chapter-9/#measurement-bias","title":"Measurement Bias","text":"<p>Measurement bias is caused by errors in measuring values of variables, i.e. \\(A^* \\not = A\\). Measurement error is defined as the difference between the measured value and the true value of a variable, \\(e_A = A^* - A\\). Taken measurement error into consideration, the causal diagram is modified as follows:</p> <p></p> <p>Measurement error follow two properties:</p> <ol> <li>Indepedence: \\(e_A \\perp e_Y\\).     </li> <li>Nondifferentiality: \\(e_A \\perp Y\\) and \\(e_Y \\perp A\\).     </li> </ol> <p>Lack of either property will bring extra association and lead to bias.</p> <ul> <li>Edge \\(Y\\ra U_A\\) will introduce recall bias.</li> <li>Edge \\(A\\ra U_Y\\) will introduce reverse causation bias.</li> <li>Edge \\(U_A\\la U_{AY}\\ra U_Y\\) will introduce independent measurement error.</li> </ul> <p>Correcting for measurement error usually requires additional validated non-biased samples.</p>"},{"location":"math/causal-inference/chapter-9/#noncausal-diagrams","title":"\"Noncausal\" Diagrams","text":"<p>A causal graph requires that all of the edges in the graph can be interpreted causally, together with well-defined intervention. For graphs with non-causal edges, adjustments might fail to remove bias, as the adjusted variable is not on the true causal path.</p> <p></p>"},{"location":"math/convex-optimization/","title":"\u51f8\u200b\u4f18\u5316","text":""},{"location":"math/convex-optimization/#_2","title":"\u76ee\u5f55","text":"<ul> <li>\u200b\u51f8\u96c6\u200b</li> <li>\u200b\u51f8\u51fd\u6570\u200b</li> </ul>"},{"location":"math/convex-optimization/#notations-and-definitions","title":"Notations and Definitions","text":"<p>\u200b\u672c\u200b\u8282\u200b\u5217\u4e3e\u200b\u51f8\u200b\u4f18\u5316\u200b\u4e2d\u200b\u6240\u7528\u200b\u7b26\u53f7\u200b\u7684\u200b\u8868\u8ff0\u200b\uff0c\u200b\u5e76\u200b\u501f\u6b64\u200b\u56de\u987e\u200b\u76f8\u5173\u200b\u7684\u200b\u6570\u5b66\u200b\u6982\u5ff5\u200b</p>"},{"location":"math/convex-optimization/#_3","title":"\u6570\u57df","text":"<ul> <li>\\(\\mathbb R, \\mathbb N, \\mathbb Z, \\mathbb C\\)\uff1a\u200b\u5b9e\u6570\u200b\u57df\u200b\u3001\u200b\u81ea\u7136\u6570\u200b\u57df\u200b\u3001\u200b\u6574\u6570\u200b\u57df\u200b\u3001\u200b\u590d\u6570\u200b\u57df\u200b</li> <li>\u200b\u4e0b\u6807\u200b \\({}_\\plus, {}_{\\plus\\plus}\\) \u200b\u5728\u200b\u5b9e\u6570\u200b\u57df\u548c\u5b9e\u200b\u5411\u91cf\u200b\u57df\u200b\u4e0a\u200b\u5206\u522b\u200b\u8868\u793a\u200b\u975e\u8d1f\u200b\u3001\u200b\u4e25\u683c\u200b\u6b63\u200b\uff0c\u200b\u5728\u200b\u5b9e\u77e9\u9635\u200b\u57df\u200b\u4e0a\u200b\u8868\u793a\u200b\u534a\u200b\u6b63\u5b9a\u200b\u3001\u200b\u6b63\u5b9a\u200b\u3002</li> </ul>"},{"location":"math/convex-optimization/#_4","title":"\u77e9\u9635\u200b\u4e0e\u200b\u5411\u91cf","text":"<p>\\(A\\in \\mathbb R^{m\\times n}\\)\u200b\u8868\u793a\u200b\\(A\\)\u200b\u662f\u200b\u4e00\u4e2a\u200b\\(m\\)\u200b\u884c\u200b\\(n\\)\u200b\u5217\u200b\u7684\u200b\u5b9e\u77e9\u9635\u200b\uff0c\u200b\u5176\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u4e3a\u200b\\(a_{ij}\\)\uff0c\u200b\u67d0\u5217\u200b\uff08\u200b\u6216\u200b\u67d0\u884c\u200b\uff09\u200b\u7684\u200b\u5207\u7247\u200b\u4e3a\u200b\\(A_{\\cdot j}\\)</p> <p>\\(\\boldsymbol x\\in \\mathbb R^m\\)\u200b\u8868\u793a\u200b\\(\\boldsymbol x\\)\u200b\u662f\u200b\u4e00\u4e2a\u200b\\(m\\)\u200b\u7ef4\u7684\u5b9e\u200b\u5411\u91cf\u200b\uff0c\\(\\boldsymbol 1\\)\u200b\u8868\u793a\u200b\u6240\u6709\u200b\u5206\u91cf\u200b\u5747\u200b\u4e3a\u200b\\(1\\)\u200b\u7684\u200b\u5411\u91cf\u200b\u3002</p> <p>\u200b\u65b9\u9635\u200b\u662f\u200b\u884c\u6570\u200b\u4e0e\u200b\u5217\u6570\u200b\u76f8\u7b49\u200b\u7684\u200b\u77e9\u9635\u200b\uff0c\\(A\\in \\mathbb R^{n\\times n}\\)\u3002\u200b\u5bf9\u79f0\u200b\u77e9\u9635\u200b\u6ee1\u8db3\u200b\\(A^\\top = A\\)\uff0c\u200b\u53cd\u5bf9\u200b\u79f0\u200b\u77e9\u9635\u200b\u6ee1\u8db3\u200b\\(A^\\top = - A\\)\u3002\u200b\u6b63\u5b9a\u200b\u77e9\u9635\u200b\u6ee1\u8db3\u200b\\(\\forall x\\in \\mathbb R^n, x^\\top Ax &gt; 0\\)\uff0c\u200b\u8bb0\u200b\u4f5c\u200b\\(A\\succ 0\\)\uff1b\u200b\u534a\u200b\u6b63\u5b9a\u200b\u77e9\u9635\u200b\u6ee1\u8db3\u200b\\(\\forall x\\in \\mathbb R^n, x^\\top Ax \\geq 0\\)\uff0c\u200b\u8bb0\u200b\u4f5c\u200b\\(A\\succeq 0\\)\u3002\u200b\u5bf9\u4e8e\u200b\u590d\u200b\u65b9\u9635\u200b\\(A\\in \\mathbb C^{n\\times n}\\)\uff0c\u200b\u5b9a\u4e49\u200b\u5171\u8f6d\u200b\u8f6c\u7f6e\u200b\uff08Hermitian\uff09\u200b\u77e9\u9635\u200b\u4e3a\u200b\\(A^* = \\overline {A^\\top}\\)\u3002\u200b\u5168\u4f53\u200b\\(k\\)\u200b\u9636\u200b\u5bf9\u79f0\u200b\u77e9\u9635\u200b\u7684\u200b\u96c6\u5408\u200b\u4e3a\u200b\\(\\mathbb S^k\\)\u3002</p> <p>\u200b\u77e9\u9635\u7684\u8ff9\u200b\u662f\u200b\u5bf9\u89d2\u7ebf\u200b\u4e0a\u200b\u5404\u4e2a\u200b\u5143\u7d20\u200b\u4e4b\u200b\u548c\u200b</p> \\[ \\mathrm {tr}(A) = \\sum_{i=1}^n a_{ii} \\] \u200b\u8ff9\u200b\u7684\u200b\u6027\u8d28\u200b <ol> <li>\\(\\mathrm {tr}(A) = \\mathrm {tr}(A^\\top)\\)</li> <li>\\(\\mathrm {tr}(A+B) = \\mathrm {tr}(A) + \\mathrm {tr}(B)\\)</li> <li>\\(\\mathrm {tr}(t\\cdot A) = t\\cdot \\mathrm {tr}(A)\\)</li> <li>\\(\\mathrm {tr}(AB) = \\mathrm {tr}(BA)\\)\uff08\u200b\u4e0d\u200b\u8981\u6c42\u200b\\(A, B, \\cdots\\)\u200b\u4e3a\u200b\u65b9\u9635\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u6ee1\u8db3\u200b\u8fd0\u7b97\u200b\u7ed3\u679c\u200b\u4e3a\u200b\u65b9\u9635\u200b\u5373\u53ef\u200b\uff1b\u200b\u5bf9\u4e8e\u200b\u591a\u4e2a\u200b\u5143\u7d20\u200b\uff0c\u200b\u4e58\u6cd5\u200b\u987a\u5e8f\u200b\u9700\u8981\u200b\u6ee1\u8db3\u200b\u8f6e\u6362\u200b\u5bf9\u79f0\u6027\u200b\u624d\u80fd\u200b\u4fdd\u8bc1\u200b\u7b49\u5f0f\u200b\u6210\u7acb\u200b\uff09</li> </ol> <p>\u200b\u5b9a\u4e49\u200b\u4e24\u4e2a\u200b\u77e9\u9635\u200b\\(X, Y\\)\u200b\u7684\u200b\u5185\u79ef\u200b\u4e3a\u200b\u5176\u200b\u4e58\u79ef\u200b\u7684\u200b\u8ff9\u200b\\(\\mathrm{tr}(XY)\\)</p>"},{"location":"math/convex-optimization/#_5","title":"\u8303\u6570","text":"<p>\u200b\u8303\u6570\u200b\u662f\u200b\u6ee1\u8db3\u200b\u4ee5\u4e0b\u200b\u6027\u8d28\u200b\u7684\u200b\u51fd\u6570\u200b\\(f\\)</p> <ol> <li>\u200b\u975e\u200b\u8d1f\u6027\u200b\uff1a\\(f(\\boldsymbol{x}) \\geq 0\\)</li> <li>\u200b\u89c4\u8303\u6027\u200b\uff1a\\(f(\\boldsymbol{x}) = 0 \\Leftrightarrow \\boldsymbol x = 0\\)</li> <li>\u200b\u9f50\u6b21\u200b\u6027\u200b\uff1a\\(f(t\\cdot \\boldsymbol{x}) = t\\cdot f(\\boldsymbol{x})\\)</li> <li>\u200b\u4e09\u89d2\u200b\u4e0d\u7b49\u5f0f\u200b\uff1a\\(f(\\boldsymbol x + \\boldsymbol y)\\leq f(\\boldsymbol x) + f(\\boldsymbol y)\\)</li> </ol> \u200b\u5e38\u89c1\u200b\u7684\u200b\u8303\u6570\u200b <ol> <li>1-\u200b\u8303\u6570\u200b\uff1a\\(f(\\boldsymbol{x}) = \\sum_{i=1}^n \\left|x_i\\right|\\)</li> <li>2-\u200b\u8303\u6570\u200b\uff1a\\(f(\\boldsymbol{x}) = \\sqrt{\\sum_{i=1}^n \\left|x_i^2\\right|}\\)</li> <li>\\(\\infty\\)-\u200b\u8303\u6570\u200b\uff1a\\(f(\\boldsymbol{x}) = \\sqrt[\\infty]{\\sum_{i=1}^n \\left|x_i^\\infty\\right|}\\)</li> <li>0-\u200b\u8303\u6570\u200b\uff08\u200b\u4e0d\u200b\u6ee1\u8db3\u200b\u5b9a\u4e49\u200b3\uff0c\u200b\u56e0\u6b64\u200b\u4e0d\u662f\u200b\u8303\u6570\u200b\uff09\uff1a\\(f(\\boldsymbol{x}) = \\sum_{i=1}^n \\boldsymbol{1}_{\\{x_i \\not = 0\\}}\\)</li> <li>\\(l_p\\)-\u200b\u8303\u6570\u200b\uff1a\\(f(\\boldsymbol{x}) = \\sqrt[p]{\\sum_{i=1}^n \\left|x_i^p\\right|}\\)</li> <li>Frobenius\u200b\u8303\u6570\u200b\uff1a\\(f(A) = \\sqrt{\\sum_i\\sum_j a_{ij}^2} = \\sqrt{\\mathrm{tr}(A^\\top A)}\\)</li> </ol> <p>\u200b\u8303\u6570\u200b\u7b49\u4ef7\u200b\u5b9a\u7406\u200b\uff1a\u200b\u5bf9\u4e8e\u200b\u4e24\u4e2a\u200b\u8303\u6570\u200b\\(f, g\\)\uff0c\u200b\u5b58\u5728\u200b\u6b63\u5e38\u200b\u6570\u200b\\(c\\)\u200b\u4f7f\u5f97\u200b\\(\\forall \\boldsymbol{x}, f(\\boldsymbol{x}) \\leq cg(\\boldsymbol{x})\\)</p> <p>\u200b\u8bbe\u200b\\(f\\)\u200b\u4e3a\u200b\\(\\mathbb R^n\\)\u200b\u4e0a\u200b\u7684\u200b\u8303\u6570\u200b\uff0c\u200b\u5bf9\u5076\u200b\u8303\u6570\u200b\\(f_*\\)\u200b\u5b9a\u4e49\u200b\u5982\u4e0b\u200b</p> \\[ f_*(\\boldsymbol{z}) = \\sup_{\\boldsymbol{x}} \\{\\boldsymbol{z^\\top x} | f(\\boldsymbol{x}) \\leq 1\\} \\] \u200b\u5bf9\u5076\u200b\u8303\u6570\u200b <ul> <li>\u200b\u5bf9\u5076\u200b\u8303\u6570\u200b\u7684\u200b\u5bf9\u5076\u200b\u8303\u6570\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u662f\u200b\u539f\u200b\u8303\u6570\u200b\u3002</li> <li> <p>\\(p\\)-\u200b\u8303\u6570\u200b\u7684\u200b\u5bf9\u5076\u200b\u8303\u6570\u200b\u662f\u200b\\(q\\)-\u200b\u8303\u6570\u200b\uff0c\u200b\u6ee1\u8db3\u200b</p> \\[ \\frac{1}{p} + \\frac{1}{q} = 1\\qquad p, q\\geq 1 \\] </li> </ul> <p>\u200b\u6839\u636e\u200b\u8303\u6570\u200b\u53ef\u4ee5\u200b\u5b9a\u4e49\u200b\u7403\u200b\u7684\u200b\u6982\u5ff5\u200b</p> \u200b\u7403\u200b <p>\u200b\u7ed9\u5b9a\u200b\\(\\mathbb R^n\\)\u200b\u7a7a\u95f4\u200b\u4e2d\u200b\u7684\u200b\u8303\u6570\u200b\\(\\Vert\\cdot\\Vert\\)\uff0c\\(B(x, r)\\)\u200b\u8868\u793a\u200b\u8303\u6570\u200b\\(\\Vert \\cdot\\Vert\\)\u200b\u4e2d\u200b\u7684\u200b\uff08\u200b\u5f00\u200b\uff09\u200b\u7403\u200b\uff0c\u200b\u5373\u200b</p> \\[ B(x, r) = \\{y | \\Vert y - x\\Vert &lt; r\\} \\] <p>\\(\\bar B(x, r)\\)\u200b\u8868\u793a\u200b\u4e00\u4e2a\u200b\u95ed\u7403\u200b</p> \\[ \\bar B(x, r) = \\{y | \\Vert y - x\\Vert \\leq r\\} \\]"},{"location":"math/convex-optimization/#_6","title":"\u96c6\u5408","text":"<p>\u200b\u8bbe\u200b\u96c6\u5408\u200b\\(C\\subseteq \\mathbb R^n, x\\in C\\)\uff0c\u200b\u4f7f\u7528\u200b2-\u200b\u8303\u6570\u200b\u5ea6\u91cf\u200b\u8ddd\u79bb\u200b\u3002</p> <ul> <li>\u200b\u82e5\u200b\\(\\exists r \\in \\mathbb R_{\\plus\\plus}, B(x, r)\\subseteq C\\)\uff0c\u200b\u79f0\u200b\\(x\\)\u200b\u4e3a\u200b\u5185\u70b9\u200b\u3002\u200b\u5168\u4f53\u200b\u5185\u70b9\u200b\u6784\u6210\u200b\u96c6\u5408\u200b\u7684\u200b\u5185\u90e8\u200b\\(C^\\circ\\)\uff0c\u200b\u663e\u7136\u200b\\(C^\\circ \\subseteq C\\)\u3002</li> <li>\u200b\u82e5\u200b\\(\\forall r\\in \\mathbb R_{+}, B(x, r)\\cap C \\not = \\varnothing, B(x, r) \\cap C^C \\not = \\varnothing\\)\uff0c\u200b\u79f0\u200b\\(x\\)\u200b\u4e3a\u200b\u8fb9\u754c\u70b9\u200b\u3002\u200b\u5168\u4f53\u200b\u8fb9\u754c\u70b9\u200b\u6784\u6210\u200b\u96c6\u5408\u200b\u7684\u200b\u8fb9\u754c\u200b\\(\\partial C\\)\u3002<ul> <li>\u200b\u6839\u636e\u200b\u8fb9\u754c\u70b9\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u6709\u200b\\(\\partial C = \\partial C^C\\)\u3002</li> </ul> </li> <li>\u200b\u82e5\u200b\\(x\\)\u200b\u4e0d\u662f\u200b\u5185\u70b9\u200b\uff0c\u200b\u5219\u200b\\(x\\)\u200b\u4e3a\u200b\u8fb9\u754c\u70b9\u200b\uff0c\u200b\u5373\u200b\\(\\partial C \\cup C^\\circ = C, \\partial C\\cap C^\\circ = \\varnothing\\)\u3002</li> </ul> <p>\u200b\u82e5\u200b\u96c6\u5408\u200b\\(C\\)\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u70b9\u200b\u90fd\u200b\u662f\u200b\u5185\u70b9\u200b\uff0c\u200b\u5373\u200b\\(C^\\circ = C\\)\uff0c\u200b\u79f0\u200b\\(C\\)\u200b\u4e3a\u200b\u5f00\u96c6\u200b\u3002\u200b\u82e5\u200b\\(C\\)\u200b\u4e0d\u662f\u200b\u5f00\u96c6\u200b\uff0c\u200b\u5219\u200b\\(C\\)\u200b\u4e3a\u200b\u95ed\u96c6\u200b\u3002\u200b\u5f00\u96c6\u200b\u7684\u200b\u8865\u96c6\u200b\u662f\u200b\u95ed\u96c6\u200b\u3002</p> <p>\u200b\u5b9a\u4e49\u200b\u95ed\u5305\u200b\u4e3a\u200b</p> \\[ \\mathbf{cl}C = \\{x \\in \\mathbb R^n| \\forall r\\in \\mathbb R_{++}, B(x, r)\\cap C\\not = \\varnothing\\} \\] <p>\u200b\u76f4\u89c2\u200b\u4e0a\u200b\uff0c\u200b\u95ed\u5305\u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u4e3a\u200b\\(C\\cup \\partial C^C\\)\uff0c\u200b\u5373\u200b\u96c6\u5408\u200b\u4e0e\u5176\u200b\u8865\u96c6\u200b\u7684\u200b\u8fb9\u754c\u200b\u7684\u200b\u5e76\u200b\u3002</p> <p>\\(\\varnothing, \\mathbb R^n\\)\u200b\u65e2\u200b\u662f\u200b\u5f00\u96c6\u200b\u4e5f\u200b\u662f\u200b\u95ed\u96c6\u200b\uff1a</p> <ul> <li>\\(\\varnothing\\)\u200b\u7684\u200b\u95ed\u5305\u200b\u4ecd\u200b\u4e3a\u200b\\(\\varnothing\\)\uff0c\u200b\u6240\u4ee5\u200b\u662f\u200b\u95ed\u96c6\u200b\uff1b\u200b\u7136\u800c\u200b\\(\\varnothing^\\circ = \\varnothing\\)\uff0c\u200b\u6240\u4ee5\u200b\u662f\u200b\u5f00\u96c6\u200b\u3002</li> <li>\\(\\varnothing^C = \\mathbb R^n\\)\uff0c\u200b\u6240\u4ee5\u200b\\(\\mathbb R^n\\)\u200b\u65e2\u200b\u662f\u200b\u5f00\u96c6\u200b\u4e5f\u200b\u662f\u200b\u95ed\u96c6\u200b\u3002</li> </ul>"},{"location":"math/convex-optimization/convex-function/","title":"\u51f8\u51fd\u6570\u200b\u53ca\u5176\u200b\u6027\u8d28","text":"<p>\u200b\u51f8\u51fd\u6570\u200b\u662f\u200b\u4e00\u7c7b\u200b\u51fd\u6570\u200b\u4e0a\u65b9\u200b\uff08\u200b\u4e0a\u5883\u200b\u56fe\u200b\uff0cepigraph\uff09\u200b\u662f\u200b\u51f8\u96c6\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u5373\u200b\u51fd\u6570\u200b\u66f2\u7ebf\u200b\u4e0a\u200b\u4efb\u610f\u200b\u4e24\u70b9\u200b\u8fde\u6210\u200b\u7684\u200b\u7ebf\u6bb5\u200b\u90fd\u200b\u5728\u200b\u51fd\u6570\u200b\u66f2\u7ebf\u200b\u7684\u200b\u4e0a\u65b9\u200b\u3002</p> <p>\u200b\u82e5\u200b\u51fd\u6570\u200b\\(f: \\mathbb R^n\\rightarrow \\mathbb R\\)\u200b\u6ee1\u8db3\u200b\u7434\u751f\u200b\u4e0d\u7b49\u5f0f\u200b\uff1a</p> \\[ f(\\theta x + (1 - \\theta)y)\\leq \\theta f(x) + (1 - \\theta)f(y), 0\\leq \\theta\\leq 1 \\] <p>\uff0c\u200b\u5219\u200b\u79f0\u200b\\(f\\)\u200b\u4e3a\u200b\u51f8\u51fd\u6570\u200b\u3002</p> \u200b\u7434\u751f\u200b\u4e0d\u7b49\u5f0f\u200b\u7684\u200b\u6269\u5c55\u200b <p>\u200b\u7434\u751f\u200b\u4e0d\u7b49\u5f0f\u200b\u53ef\u4ee5\u200b\u6269\u5c55\u200b\u5230\u200b\u66f4\u200b\u591a\u70b9\u200b\u7684\u200b\u51f8\u200b\u7ec4\u5408\u200b\u4e0a\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u51f8\u51fd\u6570\u200b\\(f\\)\uff0c\u200b\u8bbe\u200b\\(\\theta_1, \\ldots, \\theta_k\\geq 0, \\theta_1 + \\cdots + \\theta_k = 1\\)\uff0c\u200b\u5219\u200b</p> \\[ f(\\theta_1 x_1 + \\cdots + \\theta_k x_k)\\leq \\theta_1 f(x_1) + \\cdots + \\theta_k f(x_k) \\] <p>\u200b\u8be5\u5f0f\u200b\u53ef\u4ee5\u200b\u8fdb\u4e00\u6b65\u200b\u62d3\u5c55\u200b\u81f3\u200b\u7ea7\u6570\u200b\u3001\u200b\u79ef\u5206\u200b\u3001\u200b\u671f\u671b\u200b\u7b49\u200b\u5f62\u5f0f\u200b\u3002</p> <p>\u200b\u82e5\u200b\\(f(\\theta x + (1 - \\theta)y)&lt; \\theta f(x) + (1 - \\theta)f(y), 0\\leq \\theta\\leq 1\\)\uff0c\u200b\u5219\u200b\u4e3a\u200b\u4e25\u683c\u200b\u51f8\u51fd\u6570\u200b\u3002\u200b\u51f8\u51fd\u6570\u200b\u7684\u200b\u4e0a\u200b\u5883\u56fe\u200b\uff08\\(\\mathbf{epi}f\\)\uff09\u200b\u662f\u200b\u51f8\u96c6\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\\(-f\\)\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\uff0c\u200b\u5219\u200b\\(f\\)\u200b\u4e3a\u200b\u51f9\u200b\u51fd\u6570\u200b\uff0c\u200b\u82e5\u200b\\(-f\\)\u200b\u662f\u200b\u4e25\u683c\u200b\u51f8\u51fd\u6570\u200b\uff0c\u200b\u5219\u200b\\(f\\)\u200b\u4e3a\u200b\u4e25\u683c\u200b\u51f9\u200b\u51fd\u6570\u200b\u3002\u200b\u51f9\u200b\u51fd\u6570\u200b\u7684\u200b\u4e9a\u56fe\u200b\uff08\\(\\mathbf{hypo}f\\)\uff09\u200b\u662f\u200b\u51f8\u96c6\u200b\u3002</p> <p>\u200b\u6240\u6709\u200b\u7684\u200b\u7ebf\u6027\u200b\u51fd\u6570\u200b\u90fd\u200b\u65e2\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\u4e5f\u200b\u662f\u200b\u51f9\u200b\u51fd\u6570\u200b\u3002</p> <p>\\(f\\)\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(f\\)\u200b\u5728\u200b\u5b9a\u4e49\u57df\u200b\u5185\u200b\u4efb\u4f55\u200b\u76f4\u7ebf\u200b\u4e0a\u200b\u90fd\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\uff0c\u200b\u5373\u200b</p> \\[ \\forall v,\\forall x, g(t; v, x) = f(x + tv) \\] <p>\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\u3002</p> <p>\u200b\u8bb0\u200b\\(f\\)\u200b\u7684\u200b\u5ef6\u4f38\u200b\\(\\tilde f\\)\u200b\u4e3a\u200b\u5206\u6bb5\u200b\u51fd\u6570\u200b</p> \\[ \\tilde f(x) = \\left\\{\\begin{aligned}     &amp; f(x) &amp; x\\in \\mathbf{dom}f \\\\     &amp; \\infty &amp; x\\not\\in \\mathbf{dom}f \\end{aligned}\\right. \\] <p>\u200b\u7c7b\u4f3c\u200b\u5730\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u51f9\u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5176\u200b\u5b9a\u4e49\u57df\u200b\u5916\u200b\u7684\u200b\u90e8\u5206\u200b\u5ef6\u4f38\u200b\u81f3\u200b\\(-\\infty\\)\u3002 \u200b\u5728\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u4e2d\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u793a\u6027\u200b\u51fd\u6570\u200b\\(\\tilde I_C(x) = 0, x\\in C\\)\u200b\u6765\u200b\u5c06\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u7684\u200b\u89e3\u200b\u9650\u5b9a\u200b\u5230\u200b\u51f8\u96c6\u200b\\(C\\)\u200b\u4e0a\u200b\u3002\\(\\tilde I_C(x)\\)\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\u3002</p> <p>\u200b\u5176\u4ed6\u200b\u7684\u200b\u51f8\u51fd\u6570\u200b\u8fd8\u6709\u200b</p> <ul> <li>\u200b\u6307\u6570\u51fd\u6570\u200b\\(f: \\mathbb R\\rightarrow\\mathbb R = e^{ax}, a\\in \\mathbb R\\)</li> <li>\u200b\u5e42\u51fd\u6570\u200b\\(f: \\mathbb R_{ + + }\\rightarrow\\mathbb R = x^a, a\\geq 1\\)\u200b\u6216\u200b\\(a\\leq 0\\)</li> <li>\u200b\u7edd\u5bf9\u503c\u200b\u5e42\u51fd\u6570\u200b\\(f: \\mathbb R\\rightarrow\\mathbb R = |x|^p, p\\geq 1\\)</li> <li>\u200b\u8d1f\u200b\u5bf9\u6570\u51fd\u6570\u200b\\(f: \\mathbb R_{\\plus\\plus}\\rightarrow \\mathbb R = -\\log x\\)</li> <li>\u200b\u8d1f\u71b5\u200b\\(f: \\mathbb R_{\\plus\\plus}\\rightarrow \\mathbb R = x\\log x\\)</li> <li>\u200b\u8303\u6570\u200b\uff08\u200b\u4e09\u89d2\u200b\u4e0d\u7b49\u5f0f\u200b\uff09<ul> <li>\u200b\u6700\u5927\u503c\u200b\u51fd\u6570\u200b\u76f8\u5f53\u4e8e\u200b\u65e0\u7a77\u200b\u9636\u200b\u8303\u6570\u200b\\(\\Vert\\cdot\\Vert_\\infty\\)\uff0c\u200b\u56e0\u6b64\u200b\u4e5f\u200b\u662f\u200b\u51f8\u200b\u7684\u200b\u3002</li> </ul> </li> <li>\u200b\u6307\u6570\u200b\u548c\u200b\u7684\u200b\u5bf9\u6570\u200b\\(f: \\mathbb R^n\\rightarrow \\mathbb R = \\log \\sum_{i=1}^n e^{x_i}\\)</li> </ul> <p>\u200b\u5bf9\u4e8e\u200b\u4efb\u610f\u200b\\(\\alpha\\)\uff0c\u200b\u51f8\u51fd\u6570\u200b\u7684\u200b\u4e0b\u200b\u6c34\u5e73\u200b\u96c6\u200b\\(\\{x\\in \\mathbf{dom} f | f(x) \\leq \\alpha\\}\\)\u200b\u662f\u200b\u51f8\u96c6\u200b\u3002\u200b\u6216\u8005\u8bf4\u200b\uff0c\u200b\u51f8\u51fd\u6570\u200b\u7684\u200b\u7b49\u9ad8\u7ebf\u200b\u662f\u200b\u51f8\u96c6\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-function/#_2","title":"\u4e00\u9636\u200b\u6761\u4ef6\u200b\u4e0e\u200b\u4e8c\u9636\u200b\u6761\u4ef6","text":""},{"location":"math/convex-optimization/convex-function/#_3","title":"\u4e00\u9636\u200b\u6761\u4ef6","text":"<p>\u200b\u82e5\u200b\\(f\\)\u200b\u7684\u200b\u5b9a\u4e49\u57df\u200b\u4e3a\u200b\u51f8\u200b\u96c6\u4e14\u200b\u53ef\u5fae\u200b\uff0c\u200b\u5219\u200b\\(f\\)\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\u7b49\u4ef7\u200b\u4e8e\u200b</p> \\[ f(y) \\geq f(x) + (\\nabla f(x))^\\top (y - x) \\] <p>\u200b\u51f8\u51fd\u6570\u200b\u7684\u200b\u4e00\u9636\u200b\u8fd1\u4f3c\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\u503c\u200b\u7684\u200b\u5168\u5c40\u200b\u4e0b\u200b\u4f30\u8ba1\u200b\u3002</p> <p></p> <p>\u200b\u4e00\u9636\u200b\u6761\u4ef6\u200b\u540c\u6837\u200b\u4e5f\u200b\u80fd\u200b\u7528\u6765\u200b\u53cd\u6620\u200b\u4e25\u683c\u200b\u51f8\u51fd\u6570\u200b\u3001\u200b\u51f9\u200b\u51fd\u6570\u200b\u548c\u200b\u4e25\u683c\u200b\u51f9\u200b\u51fd\u6570\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-function/#_4","title":"\u4e8c\u9636\u200b\u6761\u4ef6","text":"<p>\u200b\u82e5\u200b\\(f\\)\u200b\u7684\u200b\u5b9a\u4e49\u57df\u200b\u4e3a\u200b\u51f8\u200b\u96c6\u4e14\u200b\u4e8c\u9636\u200b\u53ef\u5fae\u200b\uff0c\u200b\u5219\u200b\\(f\\)\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\u7b49\u4ef7\u200b\u4e8e\u200b</p> \\[ \\nabla ^2f(x)\\succeq 0 \\] <p>\u200b\u4e8c\u9636\u200b\u6761\u4ef6\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7528\u6765\u200b\u53cd\u6620\u200b\u4e25\u683c\u200b\u51f8\u51fd\u6570\u200b\u3001\u200b\u51f9\u200b\u51fd\u6570\u200b\u548c\u200b\u4e25\u683c\u200b\u51f9\u200b\u51fd\u6570\u200b\u3002\u200b\u6ce8\u610f\u200b\u4e25\u683c\u200b\u51f8\u51fd\u6570\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u6ee1\u8db3\u200b\\(\\nabla^2 f(x)\\succ 0\\)\uff0c\u200b\u4e25\u683c\u200b\u51f9\u200b\u51fd\u6570\u200b\u540c\u7406\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-function/#_5","title":"\u4fdd\u51f8\u200b\u8fd0\u7b97","text":"<p>\u200b\u5bf9\u4e8e\u200b\u51fd\u6570\u200b\\(f, g, f_1, \\ldots f_k: \\bbR^n\\rightarrow \\bbR\\)\uff08\u200b\u5982\u672a\u200b\u6307\u660e\u200b\uff0c\u200b\u5219\u200b\u5047\u5b9a\u200b\u4e3a\u200b\u51f8\u51fd\u6570\u200b\uff09\uff0c\u200b\u4ee5\u4e0b\u200b\u51fd\u6570\u200b\u4ecd\u4e3a\u200b\u51f8\u51fd\u6570\u200b\uff1a</p> <ul> <li> <p>\u200b\u51f8\u51fd\u6570\u200b\u7684\u200b\u7ebf\u6027\u7ec4\u5408\u200b\uff1a\\(f'(x) = \\sum_{i=1}^k \\theta_i f_i(x)\\)</p> \u200b\u6269\u5c55\u200b\u5230\u200b\u79ef\u5206\u200b\u5f62\u5f0f\u200b <p>\u200b\u8bbe\u200b\\(f(x, y)\\)\u200b\u5bf9\u4e8e\u200b\u4efb\u610f\u200b\\(y\\)\uff0c\u200b\u5173\u4e8e\u200b\\(x\\)\u200b\u90fd\u200b\u4e3a\u200b\u51f8\u51fd\u6570\u200b\uff0c\u200b\u51fd\u6570\u200b\\(w(y)\\)\u200b\u6ee1\u8db3\u200b\\(w(y)\\geq 0\\)\uff0c\u200b\u5219\u200b</p> \\[ g(x) = \\int_{\\mathcal A} w(y)f(x, y)\\dd y \\] <p>\u200b\u4e3a\u200b\u51f8\u51fd\u6570\u200b\u3002</p> </li> <li> <p>\u200b\u4eff\u5c04\u53d8\u6362\u200b\uff1a\\(f'(x): \\bbR^m\\rightarrow \\bbR = f(Ax + b)\\)\uff0c\u200b\u5176\u4e2d\u200b\\(A\\in \\bbR^{m\\times n}, b\\in \\bbR^n\\)</p> </li> <li> <p>\u200b\u9010\u70b9\u200b\u6700\u5927\u200b\uff1a\\(f'(x) = \\max\\{f_1(x), \\ldots, f_k(x)\\}\\)</p> <p>\u200b\u9010\u70b9\u200b\u6700\u5927\u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u4e3a\u200b\u4e00\u7cfb\u5217\u200b\u51fd\u6570\u200b\u4e0a\u5883\u200b\u56fe\u200b\u7684\u200b\u4ea4\u96c6\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\\(f'\\)\uff0c\u200b\u6709\u200b</p> \\[ \\mathbf{epi} f' = \\bigcap_{i=1}^k \\mathbf{epi} f_k \\] <p>\u200b\u6839\u636e\u200b\u51f8\u96c6\u200b\u7684\u200b\u4fdd\u51f8\u200b\u6027\u8d28\u200b\u53ef\u77e5\u200b\uff0c\\(\\mathbf{epi} f'\\)\u200b\u662f\u200b\u51f8\u96c6\u200b\u3002</p> \u200b\u6269\u5c55\u200b\u5230\u200b\u65e0\u9650\u200b\u4e2a\u200b\u51fd\u6570\u200b\u7684\u200b\u5f62\u5f0f\u200b <p>\u200b\u8bbe\u200b\\(f(x, y)\\)\u200b\u5bf9\u4e8e\u200b\u4efb\u610f\u200b\\(y\\)\uff0c\u200b\u5173\u4e8e\u200b\\(x\\)\u200b\u90fd\u200b\u4e3a\u200b\u51f8\u51fd\u6570\u200b\uff0c\u200b\u5219\u200b</p> \\[ g(x) = \\sup_{y\\in \\calA} f(x, y) \\] <p>\u200b\u4e5f\u200b\u4e3a\u200b\u51f8\u51fd\u6570\u200b\u3002</p> </li> <li> <p>\u200b\u590d\u5408\u200b\u51fd\u6570\u200b\uff1a\\(g\\circ f\\)</p> <ul> <li>\u200b\u5f53\u200b\\(g: \\bbR\\rightarrow \\bbR\\)\u200b\u65f6\u200b\uff0c\\(f' = g\\circ f = g(f(x))\\)\u200b\u6ee1\u8db3\u200b<ol> <li>\u200b\u82e5\u200b\\(g\\)\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\u4e14\u200b\u975e\u51cf\u200b\uff0c\\(f\\)\u200b\u4e3a\u200b\u51f8\u51fd\u6570\u200b\uff0c\u200b\u5219\u200b\\(f'\\)\u200b\u4e3a\u200b\u51f8\u51fd\u6570\u200b</li> <li>\u200b\u82e5\u200b\\(g\\)\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\u4e14\u200b\u975e\u589e\u200b\uff0c\\(f\\)\u200b\u4e3a\u200b\u51f9\u200b\u51fd\u6570\u200b\uff0c\u200b\u5219\u200b\\(f'\\)\u200b\u4e3a\u200b\u51f8\u51fd\u6570\u200b</li> </ol> </li> <li>\u200b\u5f53\u200b\\(g: \\bbR^k\\rightarrow \\bbR\\)\u200b\u65f6\u200b\uff0c\\(f' = g\\circ f = g(f_1(x), \\ldots, f_k(x))\\)\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\u3002<ol> <li>\u200b\u82e5\u200b\\(g\\)\u200b\u4e3a\u200b\u51f8\u51fd\u6570\u200b\uff0c\u200b\u4e14\u200b\u5728\u200b\u5404\u4e2a\u200b\u5206\u91cf\u200b\u4e0a\u200b\u975e\u51cf\u200b\uff0c\\(f_i\\)\u200b\u4e3a\u200b\u51f8\u51fd\u6570\u200b\uff0c\u200b\u5219\u200b\\(f'\\)\u200b\u4e3a\u200b\u51f8\u51fd\u6570\u200b</li> <li>\u200b\u82e5\u200b\\(g\\)\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\uff0c\u200b\u4e14\u200b\u5728\u200b\u5404\u4e2a\u200b\u5206\u91cf\u200b\u4e0a\u200b\u975e\u589e\u200b\uff0c\\(f_i\\)\u200b\u4e3a\u200b\u51f9\u200b\u51fd\u6570\u200b\uff0c\u200b\u5219\u200b\\(f'\\)\u200b\u4e3a\u200b\u51f8\u51fd\u6570\u200b</li> </ol> </li> </ul> </li> <li> <p>\u200b\u6700\u5c0f\u5316\u200b\uff1a\u200b\u82e5\u200b\\(f(x, y): \\bbR^m\\times \\bbR^n\\rightarrow \\bbR\\)\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\uff0c\u200b\u5219\u200b\u5bf9\u4e8e\u200b\u975e\u7a7a\u200b\u51f8\u96c6\u200b\\(C\\)\uff0c\\(\\inf_{y\\in C}f(x, y)\\)\u200b\u4e3a\u200b\u51f8\u51fd\u6570\u200b\u3002</p> </li> <li>\u200b\u900f\u89c6\u200b\u51fd\u6570\u200b\uff1a\\(g(x, t) = tf(x / t)\\)\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\u3002</li> </ul>"},{"location":"math/convex-optimization/convex-function/#_6","title":"\u5171\u8f6d\u200b\u51fd\u6570","text":"<p>\u200b\u51fd\u6570\u200b\\(f: \\bbR^n\\rightarrow \\bbR\\)\u200b\u7684\u200b\u5171\u8f6d\u200b\u51fd\u6570\u200b\\(f^*: \\bbR^n\\rightarrow\\bbR\\)\u200b\u4e3a\u200b</p> \\[ f^*(y)\\triangleq \\sup_{x\\in \\mathbf{dom}f} (y^\\top x - f(x)) \\] <p>\u200b\u5171\u8f6d\u200b\u51fd\u6570\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\u3002\\(f^{**}\\)\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u548c\u200b\\(f\\)\u200b\u76f8\u7b49\u200b\uff0c\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(f\\)\u200b\u4e3a\u200b\u51f8\u51fd\u6570\u200b\u65f6\u200b\uff0c\\(f^{**} = f\\)\u3002</p> \u200b\u5171\u8f6d\u200b\u51fd\u6570\u200b\u7684\u200b\u51f8\u6027\u200b <p>\u200b\u5bf9\u4e8e\u200b\u4efb\u610f\u200b\u51fd\u6570\u200b\\(f: \\bbR^n\\rightarrow \\bbR\\)\u200b\u548c\u200b\\(x\\in \\bbR^n\\)\uff0c\\(g(y, x) = y^\\top x - f(x)\\)\u200b\u4e3a\u200b\u7ebf\u6027\u200b\u51fd\u6570\u200b\uff08\u200b\u4e5f\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\uff09</p> <p>\\(f^*(y)\\)\u200b\u4e3a\u200b\\(g(y, x)\\)\u200b\u5173\u4e8e\u200b\\(x\\)\u200b\u7684\u200b\u9010\u70b9\u200b\u4e0a\u200b\u786e\u754c\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4e3a\u200b\u51f8\u51fd\u6570\u200b\u3002</p> <p>\u200b\u6839\u636e\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u51fd\u6570\u200b\\(f\\)\u200b\u53ca\u5176\u200b\u5171\u8f6d\u200b\u6ee1\u8db3\u200b</p> \\[ f(x) + f^*(y)\\geq x^\\top y \\] \u200b\u4e8c\u6b21\u200b\u51fd\u6570\u200b\u7684\u200b\u5171\u8f6d\u200b <p>\u200b\u5bf9\u4e8e\u200b\u4e8c\u6b21\u200b\u51fd\u6570\u200b\\(f(x) = \\frac{1}{2} x^\\top Qx, Q\\in \\bbS_{\\plus\\plus}^n\\)\uff0c\u200b\u5176\u200b\u5171\u8f6d\u200b\u51fd\u6570\u200b\u4e3a\u200b</p> \\[ f^*(y) = \\frac{1}{2} y^\\top Q^{-1}y \\] \u200b\u8303\u6570\u200b\u7684\u200b\u5171\u8f6d\u200b <p>\u200b\u5bf9\u4e8e\u200b\u4efb\u610f\u200b\u8303\u6570\u200b\\(\\Vert\\cdot\\Vert\\)\uff0c\u200b\u5176\u200b\u5bf9\u5076\u200b\u8303\u6570\u200b\u4e3a\u200b\\(\\Vert\\cdot\\Vert_*\\)\uff0c\u200b\u5219\u200b\\(f(x) = \\Vert x\\Vert\\)\u200b\u7684\u200b\u5171\u8f6d\u200b\u51fd\u6570\u200b\u4e3a\u200b</p> \\[ f^*(y) = \\left\\{ \\begin{aligned}     &amp; 0 &amp; \\Vert y\\Vert_* \\leq 1 \\\\     &amp; \\infty &amp; \\text{otherwise} \\end{aligned} \\right. \\] <p>\u200b\u51fd\u6570\u200b\u548c\u200b\u7684\u200b\u5171\u8f6d\u200b\u7b49\u4e8e\u200b\u5176\u200b\u5171\u8f6d\u200b\u7684\u200b\u548c\u200b</p> \\[ (f + g)^* = f^* + g^* \\] <p>\u200b\u5bf9\u4e8e\u200b\u53ef\u5fae\u200b\u51fd\u6570\u200b\\(f\\)\uff0c\u200b\u6709\u200b</p> \\[ \\begin{gather*}     f(y) = z^\\top \\nabla f(z) - f(z) \\\\     \\nabla f(z) = y \\end{gather*} \\] \u200b\u7ebf\u6027\u53d8\u6362\u200b\u7684\u200b\u5171\u8f6d\u200b <p>\u200b\u8bbe\u200b\\(g(x) = f(Ax + b)\\)\uff0c\u200b\u5176\u4e2d\u200b\\(A\\in \\bbR^{n\\times n}\\)\u200b\u4e14\u200b\u6ee1\u200b\u79e9\u200b\uff0c\u200b\u5219\u200b</p> \\[ \\begin{aligned} g^*(y) &amp;= \\sup_{x} (x^\\top y - f(Ax + b)) \\\\ &amp;= \\sup_{x} [A^{-1}[(Ax + b) - b]]^\\top y - f(Ax + b) \\\\ &amp;= \\sup_x [(A^{-1}(Ax + b))^\\top y - f(Ax + b)] - b^\\top A^{-\\top}y \\\\ &amp;= \\sup_x [(Ax+b)^\\top (A^{-\\top}y) - f(Ax + b)] - b^\\top A^{-\\top}y \\\\ &amp;= f^*(A^{-\\top}y) - b^\\top A^{-\\top}y \\end{aligned} \\] <p>\u200b\u8bbe\u200b\\(h(x) = af(x) + b\\)\uff0c\u200b\u5219\u200b\uff1a</p> \\[ \\begin{aligned} h^*(y) &amp;= \\sup_x y^\\top x - af(x) - b \\\\ &amp;= \\sup_{x} a(a^{-1}y^\\top x - f(x)) - b \\\\ &amp;= af^*(a^{-1}y) - b \\end{aligned} \\]"},{"location":"math/convex-optimization/convex-function/#_7","title":"\u62df\u51f8\u51fd\u6570","text":"<p>\u200b\u82e5\u200b\u51fd\u6570\u200b\\(f\\)\u200b\u7684\u200b\u4e0b\u200b\u6c34\u5e73\u200b\u96c6\u200b\\(\\{x|f(x)\\leq \\alpha\\}\\)\u200b\u5bf9\u4e8e\u200b\u4efb\u610f\u200b\\(\\alpha\\)\u200b\u90fd\u200b\u4e3a\u200b\u51f8\u96c6\u200b\uff0c\u200b\u5219\u200b\\(f\\)\u200b\u4e3a\u200b\u62df\u51f8\u51fd\u6570\u200b\u3002\u200b\u82e5\u200b\\(-f\\)\u200b\u4e3a\u200b\u62df\u51f8\u51fd\u6570\u200b\uff0c\u200b\u5219\u200b\\(f\\)\u200b\u4e3a\u200b\u62df\u51f9\u51fd\u6570\u200b\u3002\u200b\u82e5\u200b\\(f\\)\u200b\u65e2\u200b\u662f\u200b\u62df\u51f8\u51fd\u6570\u200b\uff0c\u200b\u53c8\u200b\u662f\u200b\u62df\u51f9\u51fd\u6570\u200b\uff0c\u200b\u5219\u200b\\(f\\)\u200b\u4e3a\u200b\u62df\u200b\u7ebf\u6027\u200b\u51fd\u6570\u200b\u3002</p> <p>\u200b\u6240\u6709\u200b\u7684\u200b\u51f8\u51fd\u6570\u200b\u90fd\u200b\u662f\u200b\u62df\u51f8\u51fd\u6570\u200b\u3002\u200b\u4f46\u200b\u62df\u51f8\u51fd\u6570\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\uff0c\\(\\nabla f(x_0) = 0\\not \\Rightarrow f(x)\\geq f(x_0)\\)</p>"},{"location":"math/convex-optimization/convex-function/#_8","title":"\u6027\u8d28","text":"<p>\u200b\u62df\u51f8\u51fd\u6570\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6027\u8d28\u200b</p> <ul> <li> <p>\u200b\u51fd\u6570\u200b\\(f\\)\u200b\u662f\u200b\u62df\u51f8\u51fd\u6570\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(\\mathbf{dom} f\\)\u200b\u662f\u200b\u51f8\u96c6\u200b\uff0c\u200b\u4e14\u200b\\(f\\)\u200b\u6ee1\u8db3\u200b</p> \\[ f(\\theta x + (1 - \\theta)y)\\leq \\max\\{f(x), f(y)\\} \\] </li> <li> <p>\u200b\u5bf9\u4e8e\u200b\u5b9a\u4e49\u200b\u5728\u200b\\(\\bbR\\)\u200b\u4e0a\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\\(f\\)\u200b\u662f\u200b\u62df\u51f8\u51fd\u6570\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(f\\)\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6761\u4ef6\u200b\u5176\u4e2d\u200b\u4e4b\u4e00\u200b</p> <ul> <li>\\(f\\)\u200b\u662f\u200b\u5355\u8c03\u200b\u51fd\u6570\u200b</li> <li>\\(\\exists x_0\\)\uff0c\u200b\u5bf9\u4e8e\u200b\\(x\\geq x_0, f\\)\u200b\u975e\u51cf\u200b\uff0c\\(x\\leq x_0, f\\)\u200b\u975e\u589e\u200b</li> </ul> </li> <li>\u200b\u5bf9\u4e8e\u200b\\(\\bbR\\rightarrow \\bbR\\)\u200b\u4e0a\u200b\u7684\u200b\u4efb\u610f\u200b\u5355\u8c03\u200b\u51fd\u6570\u200b\\(f\\)\uff0c\\(-f\\)\u200b\u4e5f\u200b\u662f\u200b\u5355\u8c03\u200b\u51fd\u6570\u200b\uff0c\u200b\u56e0\u6b64\u200b\\(f\\)\u200b\u662f\u200b\u62df\u200b\u7ebf\u6027\u200b\u51fd\u6570\u200b\u3002</li> </ul>"},{"location":"math/convex-optimization/convex-function/#_9","title":"\u4e00\u9636\u200b\u6761\u4ef6\u200b\u4e0e\u200b\u4e8c\u9636\u200b\u6761\u4ef6","text":"<p>\uff08\u200b\u4e00\u9636\u200b\u6761\u4ef6\u200b\uff09\u200b\u5bf9\u4e8e\u200b\u5b9a\u4e49\u200b\u5728\u200b\u51f8\u96c6\u200b\u4e0a\u200b\u7684\u200b\u53ef\u5fae\u200b\u51fd\u6570\u200b\\(f: \\bbR^n\\rightarrow \\bbR, f\\)\u200b\u662f\u200b\u62df\u51f8\u51fd\u6570\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(f\\)\u200b\u6ee1\u8db3\u200b</p> \\[ \\forall x, y\\in \\mathbf{dom}f, f(y) \\leq f(x)\\Longrightarrow \\nabla f(x)^\\top (y - x)\\leq 0 \\] \u200b\u4e00\u9636\u200b\u6761\u4ef6\u200b\u7684\u200b\u51e0\u4f55\u200b\u89e3\u91ca\u200b <p>\u200b\u6839\u636e\u200b\u62df\u51f8\u51fd\u6570\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u82e5\u200b\u5bf9\u4e8e\u200b\u4efb\u610f\u200b\\(x\\)\uff0c\u200b\u5176\u4e0b\u200b\u6c34\u5e73\u200b\u96c6\u200b\\(S_x = \\{y | f(y)\\leq f(x)\\}\\)\u200b\u5747\u200b\u4e3a\u200b\u51f8\u96c6\u200b\u3002</p> <p>\u200b\u6839\u636e\u200b\u51f8\u96c6\u200b\u7684\u200b\u6027\u8d28\u200b\uff0c\u200b\u4efb\u4f55\u200b\u51f8\u96c6\u200b\u90fd\u200b\u80fd\u200b\u8868\u793a\u200b\u6210\u200b\u652f\u6491\u200b\u8d85\u5e73\u9762\u200b\u5bf9\u5e94\u200b\u534a\u200b\u7a7a\u95f4\u200b\u7684\u200b\u4ea4\u96c6\u200b\u3002\u200b\u96c6\u5408\u200b\\(\\{y | \\nabla f(x)^\\top (y - x)\\leq 0\\}\\)\u200b\u662f\u200b\u4e0b\u200b\u6c34\u5e73\u200b\u96c6\u200b\\(S_x\\)\u200b\u5728\u200b\\(x\\)\u200b\u5904\u200b\u652f\u6491\u200b\u8d85\u5e73\u9762\u200b\u5bf9\u5e94\u200b\u7684\u200b\u534a\u200b\u7a7a\u95f4\u200b\u3002</p> <p>\uff08\u200b\u4e8c\u9636\u200b\u6761\u4ef6\u200b\uff09\u200b\u5bf9\u4e8e\u200b\u5b9a\u4e49\u200b\u5728\u200b\u51f8\u96c6\u200b\u4e0a\u200b\u7684\u200b\u4e8c\u6b21\u200b\u53ef\u5fae\u200b\u51fd\u6570\u200b\\(f: \\bbR^n\\rightarrow \\bbR, f\\)\u200b\u662f\u200b\u62df\u51f8\u51fd\u6570\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(f\\)\u200b\u6ee1\u8db3\u200b</p> \\[ \\forall x\\in \\mathbf{dom} f, \\nabla f(x) = 0\\Longrightarrow \\nabla^2 f(x)\\succeq 0 \\] <p>\u200b\u5373\u200b\\(f\\)\u200b\u5728\u200b\u68af\u5ea6\u200b\u4e3a\u200b\\(0\\)\u200b\u7684\u200b\u5730\u65b9\u200b\uff0c\u200b\u4e8c\u9636\u200b\u68af\u5ea6\u200b\u6b63\u5b9a\u200b\uff08\u200b\u975e\u8d1f\u200b\uff09\u3002</p> <p>\u200b\u62df\u51f8\u51fd\u6570\u200b\u7684\u200b\u4e8c\u9636\u200b\u68af\u5ea6\u200b\u6700\u200b\u591a\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u8d1f\u200b\u7279\u5f81\u503c\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-function/#_10","title":"\u4fdd\u62df\u200b\u51f8\u200b\u8fd0\u7b97","text":"<p>\u200b\u8bbe\u200b\\(f, g, f_1,\\ldots, f_k\\)\u200b\u4e3a\u200b\u62df\u51f8\u51fd\u6570\u200b\u3002\u200b\u5982\u672a\u200b\u6307\u660e\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u51fd\u6570\u200b\u5b9a\u4e49\u200b\u5728\u200b\\(\\bbR^n \\rightarrow \\bbR\\)\u200b\u4e0a\u200b\u3002\u200b\u4ee5\u4e0b\u200b\u51fd\u6570\u200b\u4e3a\u200b\u62df\u51f8\u51fd\u6570\u200b\uff1a</p> <ul> <li>\u200b\u975e\u8d1f\u200b\u52a0\u6743\u200b\u6700\u5927\u503c\u200b\uff1a\u200b\u8bbe\u200b\\(w_1, \\ldots, w_k\\geq 0, f' = \\max\\{w_1f_1(x), \\ldots, w_kf_k(x)\\}\\)\u200b\u4e3a\u200b\u62df\u51f8\u51fd\u6570\u200b\u3002</li> <li>\u200b\u590d\u5408\u200b\u51fd\u6570\u200b\uff1a\\(f' = g\\circ f\\)\u200b\u662f\u200b\u62df\u51f8\u51fd\u6570\u200b\uff0c\u200b\u5176\u4e2d\u200b\\(g: \\bbR\\rightarrow \\bbR\\)\u200b\u5355\u8c03\u200b\u975e\u51cf\u200b\u3002</li> <li>\u200b\u6700\u5c0f\u503c\u200b\uff1a\\(f(x, y): \\bbR^m\\times \\bbR^n\\rightarrow \\bbR\\)\u200b\u5173\u4e8e\u200b\\(x, y\\)\u200b\u662f\u200b\u62df\u51f8\u51fd\u6570\u200b\uff0c\u200b\u5219\u200b\u5bf9\u4e8e\u200b\u4efb\u610f\u200b\u51f8\u96c6\u200b\\(C, g(x) = \\inf_{y\\in C}f(x, y)\\)\u200b\u662f\u200b\u62df\u51f8\u51fd\u6570\u200b\u3002</li> </ul>"},{"location":"math/convex-optimization/convex-function/#-","title":"\u5bf9\u6570\u200b-\u200b\u51f8\u51fd\u6570","text":"<p>\u200b\u5b9a\u4e49\u200b\\(\\log 0 = -\\infty\\)\u3002\u200b\u82e5\u200b\u5bf9\u4e8e\u200b\u51fd\u6570\u200b\\(f: \\bbR^n\\rightarrow \\bbR_{\\plus}\\)\uff0c\u200b\u6709\u200b\\(\\log f\\)\u200b\u4e3a\u200b\u51f8\u51fd\u6570\u200b\uff0c\u200b\u5219\u200b\u79f0\u200b\\(f\\)\u200b\u4e3a\u200b\u5bf9\u6570\u200b-\u200b\u51f8\u51fd\u6570\u200b\u3002\u200b\u82e5\u200b\\(1 / f\\)\u200b\u4e3a\u200b\u5bf9\u6570\u200b-\u200b\u51f8\u51fd\u6570\u200b\uff0c\u200b\u5219\u200b\\(f\\)\u200b\u4e3a\u200b\u5bf9\u6570\u200b-\u200b\u51f9\u200b\u51fd\u6570\u200b\u3002</p> <p>\u200b\u5bf9\u6570\u200b-\u200b\u51f8\u51fd\u6570\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\uff08\u200b\u6307\u6570\u51fd\u6570\u200b\\(e^x\\)\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\uff09\uff0c\u200b\u975e\u8d1f\u200b\u7684\u200b\u51f9\u200b\u51fd\u6570\u200b\u662f\u200b\u5bf9\u6570\u200b-\u200b\u51f9\u200b\u51fd\u6570\u200b\uff0c\u200b\u5bf9\u6570\u200b-\u200b\u51f9\u200b\u51fd\u6570\u200b\u662f\u200b\u62df\u51f9\u51fd\u6570\u200b\u3002</p> \u200b\u5bf9\u6570\u200b-\u200b\u51f9\u200b\u51fd\u6570\u200b\u7684\u200b\u5145\u8981\u6761\u4ef6\u200b <p>\\(f: \\bbR^n \\rightarrow \\bbR\\)\u200b\u662f\u200b\u5bf9\u6570\u200b-\u200b\u51f9\u200b\u51fd\u6570\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b</p> \\[ f(\\theta x + (1 - \\theta)y)\\geq f^\\theta(x)f^{1 - \\theta}(y) \\] <p>\u200b\u5bf9\u4e8e\u200b\u4efb\u610f\u200b\\(x, y\\in \\mathbf{dom} f, 0\\leq\\theta\\leq 1\\)\u200b\u6210\u7acb\u200b\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u4e8c\u6b21\u200b\u53ef\u5fae\u200b\u7684\u200b\u5bf9\u6570\u200b-\u200b\u51f9\u200b\u51fd\u6570\u200b\\(f\\)\uff0c\u200b\u6709\u200b</p> \\[ f(x)\\nabla^2 f(x)\\preceq \\nabla f(x)^\\top \\nabla f(x) \\] <p>\u200b\u5bf9\u4e8e\u200b\u4efb\u610f\u200b\\(x\\in \\mathbf{dom} f\\)\u200b\u6210\u7acb\u200b\uff0c\u200b\u53cd\u4e4b\u4ea6\u7136\u200b\u3002</p> <p>\u200b\u5bf9\u6570\u200b-\u200b\u51f8\u51fd\u6570\u200b\u4e4b\u200b\u548c\u200b\u4ecd\u200b\u662f\u200b\u5bf9\u6570\u200b-\u200b\u51f8\u51fd\u6570\u200b\uff08\u200b\u5bf9\u6570\u200b-\u200b\u51f9\u200b\u51fd\u6570\u200b\u4e4b\u200b\u548c\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u662f\u200b\u5bf9\u6570\u200b-\u200b\u51f9\u200b\u51fd\u6570\u200b\uff09\uff0c\u200b\u5bf9\u6570\u200b-\u200b\u51f8\u200b\uff08\u200b\u51f9\u200b\uff09\u200b\u51fd\u6570\u200b\u7684\u200b\u4e58\u79ef\u200b\u662f\u200b\u5bf9\u6570\u200b-\u200b\u51f8\u200b\uff08\u200b\u51f9\u200b\uff09\u200b\u51fd\u6570\u200b\u3002</p> \u200b\u5bf9\u6570\u200b-\u200b\u51f8\u51fd\u6570\u200b\u4e4b\u200b\u548c\u200b\u6027\u8d28\u200b\u7684\u200b\u62d3\u5c55\u200b <p>\u200b\u8bbe\u200b\\(f(x, y): \\bbR^n\\times \\bbR^m\\rightarrow \\bbR\\)\u200b\u6ee1\u8db3\u200b\u5bf9\u4e8e\u200b\u4efb\u610f\u200b\\(y\\)\uff0c\\(f(x, y)\\)\u200b\u5173\u4e8e\u200b\\(x\\)\u200b\u662f\u200b\u5bf9\u6570\u200b-\u200b\u51f8\u51fd\u6570\u200b\uff0c\u200b\u5219\u200b</p> \\[ \\int_{y} f(x, y)\\dd y \\] <p>\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-function/#_11","title":"\u5e7f\u4e49\u200b\u4e0d\u7b49\u5f0f\u200b\u5b9a\u4e49\u200b\u7684\u200b\u51f8\u6027","text":"<p>\u200b\u8bbe\u200b\\(K\\)\u200b\u4e3a\u200b\u6b63\u5e38\u200b\u9525\u200b\uff0c\u200b\u5b9a\u4e49\u200b\\(f(x)\\)\u200b\u7684\u200b\u589e\u51cf\u200b\u6027\u200b\u5982\u4e0b\u200b\u3002</p> <ul> <li>\\(f\\)\u200b\u4e3a\u200b\\(K\\)-\u200b\u589e\u200b\uff0c\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(f\\)\u200b\u6ee1\u8db3\u200b\\(x\\succeq_K y, x\\not = y\\Longrightarrow f(x)\\succ_K f(y)\\)\uff0c\u200b\u82e5\u200b\\(-f\\)\u200b\u4e3a\u200b\\(K\\)-\u200b\u589e\u51fd\u6570\u200b\uff0c\u200b\u5219\u200b\\(f\\)\u200b\u4e3a\u200b\\(K\\)-\u200b\u975e\u200b\u589e\u51fd\u6570\u200b\u3002</li> <li>\\(f\\)\u200b\u4e3a\u200b\\(K\\)-\u200b\u975e\u51cf\u200b\uff0c\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(f\\)\u200b\u6ee1\u8db3\u200b\\(x\\succeq_K y\\Longrightarrow f(x)\\succeq_K f(y)\\)</li> </ul> <p>\\(f\\)\u200b\u662f\u200b\\(K\\)-\u200b\u975e\u51cf\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(\\nabla f\\succeq_{K^*} 0\\)\uff0c\\(f\\)\u200b\u662f\u200b\\(K\\)-\u200b\u589e\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(\\nabla f\\succ_{K^*} 0\\)\u3002</p> <p>\\(f\\)\u200b\u662f\u200b\\(K\\)-\u200b\u51f8\u51fd\u6570\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(\\forall x, y, \\theta f(x) + (1 - \\theta) f(y)\\succeq_K f(\\theta x + (1 - \\theta) y)\\)</p> <p>\\(f\\)\u200b\u662f\u200b\u4e25\u683c\u200b\\(K\\)-\u200b\u51f8\u51fd\u6570\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(\\forall x\\not = y, \\theta f(x) + (1 - \\theta) f(y)\\succ_K f(\\theta x + (1 - \\theta) y)\\)</p> <p>\\(f\\)\u200b\u662f\u200b\\(K\\)-\u200b\u51f8\u51fd\u6570\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(\\forall w\\succeq_{K^*} 0, w^\\top f(x)\\)\u200b\u4e3a\u200b\u51f8\u51fd\u6570\u200b\uff1b\\(f\\)\u200b\u662f\u200b\u4e25\u683c\u200b\\(K\\)-\u200b\u51f8\u51fd\u6570\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(\\forall w\\succeq_{K^*} 0, w\\not = 0, w^\\top f\\)\u200b\u662f\u200b\u4e25\u683c\u200b\u51f8\u51fd\u6570\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-optimization/","title":"\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898","text":"<p>\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u662f\u200b\u6307\u200b\u5728\u200b\u4e00\u5b9a\u200b\u7684\u200b\u7ea6\u675f\u6761\u4ef6\u200b\uff08\u200b\u7b49\u5f0f\u200b\u6216\u200b\u4e0d\u7b49\u5f0f\u200b\uff09\u200b\u4e0b\u200b\u4f7f\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u53d6\u5f97\u200b\u6700\u5927\u200b\uff08\u200b\u6700\u5c0f\u200b\uff09\u200b\u503c\u200b\u7684\u200b\u95ee\u9898\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-optimization/#_2","title":"\u4e00\u822c\u200b\u4f18\u5316\u200b\u95ee\u9898","text":"<p>\\(\\eqref{1}\\)\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u3002</p> \\[ \\label{1} \\optim{\\min}{f_0(x)}{\\cases{     \\begin{aligned}     &amp; f_i(x)\\leq 0 &amp; i = \\oneto m\\\\     &amp; h_i(x) = 0 &amp; i = \\oneto p     \\end{aligned} }} \\] <p>\u200b\u5f0f\u200b\\(\\eqref{1}\\)\u200b\u4e2d\u200b\uff0c\\(x\\in \\bbR^n\\)\u200b\u4e3a\u200b\u4f18\u5316\u200b\u53d8\u91cf\u200b\uff0c\\(f_0(x): \\bbR^n \\ra \\bbR\\)\u200b\u4e3a\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\uff0c\u200b\u4e0d\u7b49\u5f0f\u200b\\(f_i(x)\\leq 0\\)\u200b\u79f0\u4e3a\u200b\u4e0d\u7b49\u5f0f\u200b\u7ea6\u675f\u200b\uff0c\\(h_0(x) = 0\\)\u200b\u79f0\u4e3a\u200b\u7b49\u5f0f\u200b\u7ea6\u675f\u200b\u3002\\(m = p = 0\\)\u200b\u7684\u200b\u95ee\u9898\u200b\u79f0\u4e3a\u200b\u65e0\u7ea6\u675f\u200b\u95ee\u9898\u200b\u3002</p> <p>\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u548c\u200b\u5168\u4f53\u200b\u7ea6\u675f\u200b\u51fd\u6570\u200b\u7684\u200b\u5b9a\u4e49\u57df\u200b\u4ea4\u96c6\u200b\u662f\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u7684\u200b\u5b9a\u4e49\u57df\u200b\\(\\calD\\)\uff0c\u200b\u5f53\u200b\u5b58\u5728\u200b\\(x\\)\u200b\u6ee1\u8db3\u200b\u6240\u6709\u200b\u7684\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u65f6\u200b\uff0c\u200b\u79f0\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u662f\u200b\u53ef\u884c\u200b\u7684\u200b\uff0c\u200b\u5426\u5219\u200b\u662f\u200b\u4e0d\u200b\u53ef\u884c\u200b\u7684\u200b\u3002\u200b\u5b9a\u4e49\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u7684\u200b\u53ef\u884c\u200b\u57df\u200b\u4e3a\u200b\u5168\u4f53\u200b\u53ef\u884c\u200b\u70b9\u200b\u7684\u200b\u96c6\u5408\u200b\u3002</p> \\[ X = \\{x | f_i(x)\\leq 0, h_j(x) = 0, i = \\oneto m, j = \\oneto p\\} \\] <p>\u200b\u5bf9\u4e8e\u200b\u6700\u5c0f\u5316\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u7684\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\uff0c\u200b\u5176\u200b\u6700\u4f18\u200b\u503c\u4e3a\u200b</p> \\[ p^\\ast = \\inf\\{f_0(x) | x\\in X\\} \\] <p>\u200b\u53ef\u884c\u200b\u57df\u200b\u4e3a\u200b\u7a7a\u96c6\u200b\u7684\u200b\u60c5\u51b5\u200b</p> <p>\u200b\u6211\u4eec\u200b\u5141\u8bb8\u200b\\(p^*\\)\u200b\u53d6\u200b\\(\\pm\\infty\\)\uff0c\u200b\u5e76\u4e14\u200b\u5b9a\u4e49\u200b</p> \\[ \\begin{aligned} \\inf\\varnothing &amp;= \\infty \\\\ \\sup\\varnothing &amp;= -\\infty \\end{aligned} \\] <p>\u200b\u5982\u679c\u200b\u5b58\u5728\u200b\u4e00\u7ec4\u200b\u53ef\u884c\u200b\u89e3\u200b\\(x_1, \\ldots, x_k\\)\u200b\u6ee1\u8db3\u200b\\(k\\ra\\infty\\)\u200b\u65f6\u200b\\(f_0(x_k)\\ra -\\infty\\)\uff0c\u200b\u79f0\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u65e0\u200b\u4e0b\u754c\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u5b58\u5728\u200b\\(x^*\\in X, f_0(x^*) = p^*\\)\uff0c\u200b\u5219\u200b\u79f0\u200b\\(x^*\\)\u200b\u4e3a\u200b\u6700\u4f18\u200b\u89e3\u200b\uff0c\u200b\u5168\u4f53\u200b\u6700\u4f18\u200b\u89e3\u200b\u7684\u200b\u96c6\u5408\u200b\u4e3a\u200b\u6700\u4f18\u200b\u96c6\u200b\u3002\u200b\u82e5\u200b\u6700\u4f18\u200b\u96c6\u975e\u7a7a\u200b\uff0c\u200b\u79f0\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u53ef\u89e3\u200b\u3002\u200b\u5f53\u200b\u95ee\u9898\u200b\u4e0d\u53ef\u200b\u89e3\u65f6\u200b\uff0c\u200b\u96c6\u5408\u200b\\(\\{x | x\\in X, f_0(x) \\leq p^* + \\varepsilon\\}\\)\u200b\u79f0\u4e3a\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u7684\u200b\\(\\varepsilon\\)-\u200b\u6b21\u4f18\u200b\u96c6\u200b\u3002</p> <p>\u200b\u6700\u4f18\u200b\u503c\u200b\u4e0d\u53ef\u200b\u8fbe\u200b\u7684\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b</p> <p>\u200b\u8bbe\u200b\u7ea6\u675f\u200b\u95ee\u9898\u200b\u4e3a\u200b\\(\\eqref{2}\\)\uff0c\u200b\u4ee5\u4e0b\u200b\u95ee\u9898\u200b\u90fd\u200b\u662f\u200b\u6700\u4f18\u200b\u503c\u200b\u4e0d\u53ef\u200b\u8fbe\u200b\u7684\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\uff1a</p> \\[ \\optim{\\min}{f_0(x)}{x &gt; 0} \\label{2} \\] <ul> <li>\u200b\u5f53\u200b\\(f_0(x) = 1/x\\)\u200b\u65f6\u200b\uff0c\\(p^* = 0\\)\uff0c\u200b\u4f46\u200b\u6700\u4f18\u200b\u96c6\u4e3a\u200b\u7a7a\u200b\u3002</li> <li>\u200b\u5f53\u200b\\(f_0(x) = -\\log x\\)\u200b\u65f6\u200b\uff0c\\(p^* = -\\infty\\)\uff0c\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u65e0\u200b\u4e0b\u754c\u200b\u3002</li> </ul> <p>\u200b\u5982\u679c\u200b\\(x_0\\)\u200b\u6ee1\u8db3\u200b\\(\\eqref{3}\\)\uff0c\u200b\u79f0\u4e3a\u200b\u5c40\u90e8\u200b\u6700\u4f18\u200b\u3002</p> \\[ \\begin{gathered}     &amp; x_0\\in X \\\\     &amp; \\forall z\\in X, \\Vert z - x_0\\Vert_2\\leq R, f_0(z)\\geq f_0(x_0) \\end{gathered} \\label{3} \\] <p>\u200b\u82e5\u200b\\(f_i(x^*) = 0\\)\uff0c\u200b\u79f0\u200b\u4e0d\u7b49\u5f0f\u200b\u7ea6\u675f\u200b\\(f_i\\)\u200b\u5728\u200b\u6700\u4f18\u200b\u503c\u5904\u200b\u8d77\u200b\u4f5c\u7528\u200b\uff0c\u200b\u5426\u5219\u200b\u4e0d\u8d77\u4f5c\u7528\u200b\u3002\u200b\u5982\u679c\u200b\u4ece\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u4e2d\u200b\u5220\u9664\u200b\u67d0\u4e2a\u200b\u7ea6\u675f\u200b\u4e0d\u4f1a\u200b\u5f71\u54cd\u200b\u53ef\u884c\u200b\u57df\u200b\uff0c\u200b\u79f0\u200b\u7ea6\u675f\u200b\u5197\u4f59\u200b\u3002</p> <p>\u200b\u53ef\u884c\u6027\u200b\u95ee\u9898\u200b</p> <p>\u200b\u5f53\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\\(f_0(x) = 0\\)\u200b\u65f6\u200b\uff0c\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u662f\u200b\u4e00\u4e2a\u200b\u53ef\u884c\u6027\u200b\u95ee\u9898\u200b\uff0c\u200b\u6b64\u65f6\u200b\u6709\u200b</p> \\[ \\begin{gathered} p^* = -\\infty \\Lolra X = \\varnothing \\\\ p^* = 0 \\Lolra X \\not = \\varnothing \\end{gathered} \\] <p>\u200b\u6807\u51c6\u200b\u5f62\u5f0f\u200b\u7684\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6761\u4ef6\u200b\uff1a</p> <ul> <li>\u200b\u7ea6\u675f\u200b\u7684\u200b\u53f3\u7aef\u200b\u9879\u4e3a\u200b\u96f6\u200b</li> <li>\u200b\u4f18\u5316\u200b\u76ee\u6807\u200b\u4e3a\u200b\u6781\u5c0f\u200b\u5316\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b</li> <li>\u200b\u9664\u4e86\u200b\u975e\u8d1f\u200b\u7ea6\u675f\u200b\u4ee5\u5916\u200b\uff0c\u200b\u4e0d\u200b\u5305\u542b\u200b\\(\\geq\\)\u200b\u7ea6\u675f\u200b</li> </ul>"},{"location":"math/convex-optimization/convex-optimization/#_3","title":"\u95ee\u9898\u200b\u7684\u200b\u7b49\u4ef7\u200b\u53d8\u6362","text":"<p>\u200b\u4e00\u4e9b\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u7684\u200b\u6027\u8d28\u200b\u53ef\u80fd\u200b\u4e0d\u591f\u200b\u5f3a\u200b\u5bfc\u81f4\u200b\u96be\u4ee5\u200b\u8fdb\u884c\u200b\u4f18\u5316\u200b\uff0c\u200b\u6b64\u65f6\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4e00\u4e9b\u200b\u7b49\u4ef7\u200b\u53d8\u6362\u200b\uff0c\u200b\u5c06\u200b\u539f\u672c\u200b\u7684\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u8f6c\u53d8\u200b\u4e3a\u200b\u6027\u8d28\u200b\u8f83\u5f3a\u200b\u7684\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-optimization/#_4","title":"\u53d8\u91cf\u200b\u4ee3\u6362","text":"<p>\u200b\u8bbe\u200b\u51fd\u6570\u200b\\(\\phi: \\bbR^n\\ra\\bbR^n\\)\u200b\u662f\u200b\u53cc\u5c04\u200b\uff0c\u200b\u4e14\u200b\u51fd\u6570\u200b\u7684\u200b\u503c\u57df\u200b\u5305\u542b\u200b\u95ee\u9898\u200b\u7684\u200b\u5b9a\u4e49\u57df\u200b\uff0c\u200b\u5219\u200b\u5982\u4e0b\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u4e0e\u200b\u539f\u200b\u95ee\u9898\u200b\\(\\eqref{1}\\)\u200b\u7b49\u4ef7\u200b\uff1a</p> \\[ \\optim{\\min}{f_0(\\phi(z))}{\\cases{     \\begin{aligned}         &amp; f_i(\\phi(z))\\leq 0 &amp; i = \\oneto m \\\\         &amp; h_i(\\phi(z)) = 0 &amp; i = \\oneto p     \\end{aligned} }} \\]"},{"location":"math/convex-optimization/convex-optimization/#_5","title":"\u51fd\u6570\u200b\u4ee3\u6362","text":"<p>\u200b\u8bbe\u200b\u51fd\u6570\u200b\\(\\psi_0: \\bbR\\ra\\bbR\\)\u200b\u5355\u8c03\u200b\u9012\u589e\u200b\uff0c\\(\\psi_{1}, \\ldots, \\psi_{m}\\)\u200b\u6ee1\u8db3\u200b\\(u\\leq 0\\Lora \\psi_{i}(u) = 0\\)\uff0c\\(\\phi_{1}, \\ldots, \\psi_{p}\\)\u200b\u6ee1\u8db3\u200b\\(u = 0\\Lora \\phi_i(u) = 0\\)\uff0c\u200b\u5219\u200b\u5982\u4e0b\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u4e0e\u200b\u539f\u200b\u95ee\u9898\u200b\\(\\eqref{1}\\)\u200b\u7b49\u4ef7\u200b\uff1a</p> \\[ \\optim{\\min}{\\psi_0(f_0(x))}{\\cases{     \\begin{aligned}         &amp; \\psi_i(f_i(z))\\leq 0 &amp; i = \\oneto m \\\\         &amp; \\phi_i(h_i(z)) = 0 &amp; i = \\oneto p     \\end{aligned} }} \\]"},{"location":"math/convex-optimization/convex-optimization/#_6","title":"\u6d88\u9664\u200b\u4e0d\u7b49\u5f0f\u200b\u7ea6\u675f","text":"<p>\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u52a0\u5165\u200b\u975e\u8d1f\u200b\u53d8\u91cf\u200b\u7684\u200b\u65b9\u5f0f\u200b\u5c06\u200b\u4e0d\u7b49\u5f0f\u200b\u7ea6\u675f\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u7b49\u5f0f\u200b\u7ea6\u675f\u200b\u548c\u200b\u975e\u8d1f\u200b\u7ea6\u675f\u200b\u3002</p> \\[ \\optim{\\min}{f_0(x)}{\\cases{     \\begin{aligned}         &amp; s_i\\geq 0 &amp; i = \\oneto m \\\\         &amp; f_i(x) + s_i 0 &amp; i = \\oneto m \\\\         &amp; h_i(x) = 0 &amp; i = \\oneto p     \\end{aligned} }} \\] <p>\u200b\u79f0\u200b\\(s_i\\)\u200b\u4e3a\u200b\u677e\u5f1b\u200b\u53d8\u91cf\u200b\uff0c\u200b\u6b64\u65f6\u200b\u7684\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u5171\u6709\u200b\\(n + m\\)\u200b\u4e2a\u200b\u4f18\u5316\u200b\u53d8\u91cf\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-optimization/#_7","title":"\u6d88\u9664\u200b\u7b49\u5f0f\u200b\u7ea6\u675f","text":"<p>\u200b\u8bbe\u200b\u7b49\u5f0f\u200b\u7ea6\u675f\u200b\u7684\u200b\u89e3\u96c6\u200b\u53ef\u4ee5\u200b\u7528\u200b\u53cc\u5c04\u200b\\(\\phi: \\bbR^k\\ra\\bbR^n\\)\u200b\u8868\u793a\u200b\uff0c\u200b\u5219\u200b\u539f\u200b\u95ee\u9898\u200b\\(\\eqref{1}\\)\u200b\u4e0e\u200b\u5982\u4e0b\u200b\u95ee\u9898\u200b\u7b49\u4ef7\u200b\uff1a</p> \\[ \\optim{\\min}{f_0(\\phi(z))}{f_i(\\phi(z))\\leq 0} \\] <p>\u200b\u5bf9\u4e8e\u200b\u7ebf\u6027\u200b\u7b49\u5f0f\u200b\u7ea6\u675f\u200b\\(Ax - b = 0\\)\uff0c\u200b\u5b58\u5728\u200b\u4e00\u4e2a\u200b\u7ebf\u6027\u200b\u51fd\u6570\u200b\\(\\phi(z) = Fz + x_0\\)\uff0c\u200b\u5176\u4e2d\u200b\\(x_0\\)\u200b\u4e3a\u200b\\(Ax - b = 0\\)\u200b\u7684\u200b\u4e00\u4e2a\u200b\u7279\u89e3\u200b\uff0c\\(F\\)\u200b\u4e3a\u200b\u77e9\u9635\u200b\\(A\\)\u200b\u7684\u200b\u96f6\u7a7a\u95f4\u200b\u7684\u200b\u4e00\u7ec4\u200b\u57fa\u200b\u6784\u6210\u200b\u7684\u200b\u77e9\u9635\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-optimization/#_8","title":"\u4f18\u5316\u200b\u90e8\u5206\u200b\u53d8\u91cf","text":"<p>\u200b\u6ce8\u610f\u200b\u5230\u200b\\(\\inf_{x}\\inf{y} f(x, y) = \\inf_{(x, y)}f(x, y) = \\inf_{y}\\inf_x f(x, y)\\)\uff0c\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u5148\u200b\u4f18\u5316\u200b\u4e00\u90e8\u5206\u200b\u53d8\u91cf\u200b\uff0c\u200b\u518d\u200b\u4f18\u5316\u200b\u53e6\u200b\u4e00\u90e8\u5206\u200b\u53d8\u91cf\u200b\uff0c\u200b\u7531\u6b64\u200b\u5f97\u5230\u200b\u7684\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u4e0e\u200b\u539f\u200b\u95ee\u9898\u200b\\(\\eqref{1}\\)\u200b\u7b49\u4ef7\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-optimization/#_9","title":"\u4e0a\u5883\u200b\u56fe\u200b\u95ee\u9898","text":"<p>\u200b\u5982\u4e0b\u200b\u95ee\u9898\u200b\u4e0e\u200b\u539f\u200b\u95ee\u9898\u200b\\(\\eqref{1}\\)\u200b\u7b49\u4ef7\u200b\uff1a</p> \\[ \\optim{\\min}{t}{\\cases{     \\begin{aligned}         &amp; f_0(x) - t\\leq 0 \\\\         &amp; f_i(x)\\leq 0 &amp; i = \\oneto m \\\\         &amp; h_i(x) = 0 &amp; i= \\oneto p     \\end{aligned} }} \\]"},{"location":"math/convex-optimization/convex-optimization/#_10","title":"\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u53ca\u5176\u200b\u6027\u8d28","text":"<p>\\(\\eqref{4}\\)\u200b\u662f\u200b\u6807\u51c6\u200b\u5f62\u5f0f\u200b\u7684\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\uff1a</p> \\[ \\optim{\\min}{f_0(x)}{\\cases{     \\begin{aligned}         &amp; f_i(x)\\leq 0 &amp; i = \\oneto m \\\\         &amp; A^\\top x = b     \\end{aligned} }} \\label{4} \\] <p>\u200b\u5e76\u4e14\u200b\uff0c\u200b\u6709\u200b</p> <ul> <li>\\(A\\in \\bbR^{p\\times n}, b\\in \\bbR^p\\)</li> <li>\\(f_i, i\\in 0, \\ldots, m\\)\u200b\u662f\u200b\u51f8\u51fd\u6570\u200b\u3002</li> </ul> <p>\u200b\u5982\u679c\u200b\\(f_0(x)\\)\u200b\u662f\u200b\u62df\u51f8\u51fd\u6570\u200b\uff0c\u200b\u5219\u200b\u4e3a\u200b\u62df\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-optimization/#_11","title":"\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u7684\u200b\u6027\u8d28","text":"<p>\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6027\u8d28\u200b</p> <ul> <li>\u200b\u53ef\u884c\u200b\u57df\u200b\u662f\u200b\u51f8\u96c6\u200b</li> <li>\u200b\u4efb\u610f\u200b\u5c40\u90e8\u200b\u6700\u4f18\u200b\u89e3\u90fd\u200b\u662f\u200b\u5168\u5c40\u200b\u6700\u4f18\u200b\u89e3\u200b</li> <li>\u200b\u5982\u679c\u200b\\(f_0\\)\u200b\u53ef\u5fae\u200b\uff0c\u200b\u5219\u200b\\(\\forall x\\in X, \\nabla f_0(x)^\\top (x - x^*)\\geq 0\\)<ul> <li>\u200b\u5bf9\u4e8e\u200b\u65e0\u7ea6\u675f\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\uff0c\u200b\u65b9\u7a0b\u200b\\(\\nabla f_0(x) = 0\\)\u200b\u7684\u200b\u89e3\u5373\u200b\u4e3a\u200b\u6700\u4f18\u200b</li> <li>\u200b\u5bf9\u4e8e\u200b\u4ec5\u200b\u5305\u542b\u200b\u7ebf\u6027\u200b\u7b49\u5f0f\u200b\u7ea6\u675f\u200b\\(Ax - b = 0\\)\u200b\u7684\u200b\u95ee\u9898\u200b\uff0c\u200b\u65b9\u7a0b\u200b\\(\\nabla f_0(x)^\\top v = 0, v\\in \\ker A\\)\u200b\u7684\u200b\u89e3\u4e3a\u200b\u6700\u4f18\u200b</li> <li>\u200b\u5bf9\u4e8e\u200b\u4ec5\u200b\u5305\u542b\u200b\u7b26\u53f7\u200b\u7ea6\u675f\u200b\\(x\\succeq 0\\)\u200b\u7684\u200b\u95ee\u9898\u200b\uff0c\\(\\nabla f_0(x)\\succeq 0, \\nabla f_0(x)^\\top x = 0\\)\u200b\u7684\u200b\u89e3\u5373\u200b\u4e3a\u200b\u6700\u4f18\u200b\uff08\u200b\u89e3\u200b\u548c\u200b\u6b64\u5904\u200b\u7684\u200b\u68af\u5ea6\u200b\u81f3\u5c11\u200b\u6709\u200b\u4e00\u4e2a\u200b\u5206\u91cf\u200b\u4e3a\u200b\u96f6\u200b\uff09\u3002</li> </ul> </li> </ul>"},{"location":"math/convex-optimization/convex-optimization/#_12","title":"\u4fdd\u51f8\u200b\u8fd0\u7b97","text":"<p>\u200b\u5bf9\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u8fdb\u884c\u200b\u5982\u4e0b\u200b\u53d8\u6362\u200b\uff0c\u200b\u5f97\u5230\u200b\u7684\u200b\u95ee\u9898\u200b\u4ecd\u7136\u200b\u662f\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b</p> <ul> <li>\u200b\u6d88\u9664\u200b\u7b49\u5f0f\u200b\u7ea6\u675f\u200b</li> <li>\u200b\u5f15\u5165\u200b\uff08\u200b\u7ebf\u6027\u200b\uff09\u200b\u7b49\u5f0f\u200b\u7ea6\u675f\u200b</li> <li>\u200b\u5f15\u5165\u200b\u677e\u5f1b\u200b\u53d8\u91cf\u200b</li> <li>\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u4e0a\u200b\u5883\u56fe\u200b\u95ee\u9898\u200b</li> <li>\u200b\u5206\u6b65\u200b\u4f18\u5316\u200b\u53d8\u91cf\u200b</li> </ul>"},{"location":"math/convex-optimization/convex-optimization/#_13","title":"\u62df\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u7684\u200b\u6027\u8d28","text":"<p>\u200b\u62df\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u5b58\u5728\u200b\uff08\u200b\u4e0d\u662f\u200b\u5168\u5c40\u200b\u6700\u4f18\u200b\u7684\u200b\uff09\u200b\u5c40\u90e8\u200b\u6700\u4f18\u200b\u89e3\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u53ef\u5fae\u200b\u7684\u200b\u62df\u51f8\u51fd\u6570\u200b\\(f_0\\)\uff0c\u200b\u5982\u4e0b\u200b\u6027\u8d28\u200b\u4ecd\u7136\u200b\u6210\u7acb\u200b\uff1a</p> \\[ \\forall x\\in X, \\nabla f_0(x)^\\top (x - x^*)\\geq 0 \\] <p>\u200b\u4f46\u200b\u4f7f\u5f97\u200b\\(\\forall x\\in X, \\nabla f_0(x)^\\top (x - y)\\geq 0\\)\u200b\u6210\u7acb\u200b\u7684\u200b\\(y\\)\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u662f\u200b\u5168\u5c40\u200b\u6700\u4f18\u200b\u89e3\u200b\u3002\u200b\u62df\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u6700\u4f18\u200b\u89e3\u200b\u7684\u200b\u5145\u8981\u6761\u4ef6\u200b\u4e3a\u200b</p> \\[ \\nabla f_0(x)^\\top (y - x) &gt; 0, y\\in X - \\{x\\} \\] <p>\u200b\u62df\u51f8\u51fd\u6570\u200b\u7684\u200b\u4e0b\u200b\u6c34\u5e73\u200b\u96c6\u662f\u200b\u51f8\u96c6\u200b\uff0c\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4e00\u7ec4\u200b\u51f8\u51fd\u6570\u200b\u7ec4\u6210\u200b\u7684\u200b\u4e0d\u7b49\u5f0f\u200b\u6761\u4ef6\u200b\u8868\u793a\u200b\u5176\u4e0b\u200b\u6c34\u5e73\u200b\u96c6\u200b\u3002\u200b\u7531\u6b64\u200b\uff0c\u200b\u62df\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u53ef\u4ee5\u200b\u5bf9\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u503c\u200b\u8fdb\u884c\u200b\u4e8c\u5206\u200b\u4ee5\u200b\u6784\u9020\u200b\u76f8\u5e94\u200b\u7684\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u6c42\u89e3\u200b\u6700\u4f18\u200b\u503c\u200b\\(p^*\\)\u3002\u200b\u5bf9\u4e8e\u200b\u5f62\u200b\u5982\u200b\\(\\eqref{4}\\)\u200b\u7684\u200b\u62df\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\uff0c\u200b\u6784\u9020\u200b\u53ef\u884c\u6027\u200b\u95ee\u9898\u200b\\(\\eqref{5}\\)\uff1a</p> \\[ \\optim{\\min}{0}{\\cases{     \\begin{aligned}         &amp; \\phi(x; t)\\leq 0 \\\\         &amp; f_i(x)\\leq 0 &amp; i = \\oneto m \\\\         &amp; Ax=b     \\end{aligned} }} \\label{5} \\] <p>\u200b\u5176\u4e2d\u200b\\(\\phi(x, t): \\bbR^n\\times \\bbR\\ra\\bbR\\)\u200b\u662f\u200b\u6ee1\u8db3\u200b\\(f_0(x) \\leq t\\Lolra \\phi(x, t)\\leq 0\\)\u200b\u7684\u200b\u51f8\u51fd\u6570\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u5bf9\u4e8e\u200b\u67d0\u4e2a\u200b\\(t\\)\uff0c\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\\(\\eqref{5}\\)\u200b\u53ef\u884c\u200b\uff0c\u200b\u5219\u200b\u5728\u200b\\(f_0(x) \\geq t\\)\u200b\u7684\u200b\u533a\u95f4\u200b\u5185\u200b\u5bfb\u627e\u200b\u6700\u4f18\u200b\u503c\u200b\uff0c\u200b\u5426\u5219\u200b\u5728\u200b\\(f_0(x) &lt; t\\)\u200b\u7684\u200b\u533a\u95f4\u200b\u5185\u200b\u5bfb\u627e\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-optimization/#-","title":"\u51e0\u4f55\u200b\u89c4\u5212\u200b - \u200b\u8f6c\u5316\u200b\u4e3a\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898","text":"<p>\u200b\u5f62\u200b\u5982\u200b\\(\\eqref{5}\\)\u200b\u7684\u200b\u51fd\u6570\u200b\u79f0\u4e3a\u200b\u5355\u9879\u5f0f\u200b\uff0c\u200b\u5355\u9879\u5f0f\u200b\u7684\u200b\u548c\u200b\u79f0\u4e3a\u200b\u6b63\u9879\u200b\u5f0f\u200b\u3002</p> \\[ f(x) = c\\prod_{i=1}^n x_i^{a_i} \\label{5} \\] <p>\u200b\u5f0f\u200b\u4e2d\u200b\uff0c\\(x\\in \\bbR^n_{\\plus\\plus}, c &gt; 0\\)\u3002</p> <p>\u200b\u5f62\u200b\u5982\u200b\\(\\eqref{6}\\)\u200b\u7684\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u4e3a\u200b\u51e0\u4f55\u200b\u89c4\u5212\u200b\uff08GP\uff09</p> \\[ \\optim{\\min}{f_0(x)}{\\cases{     \\begin{aligned}         &amp; f_i(x)\\leq 1 &amp; i = \\oneto m \\\\         &amp; h_i(x) = 1 &amp; i = \\oneto p     \\end{aligned} }} \\label{6} \\] <p>\u200b\u5176\u4e2d\u200b\\(f_i\\)\u200b\u4e3a\u200b\u6b63\u200b\u9879\u5f0f\u200b\uff0c\\(h_i\\)\u200b\u4e3a\u200b\u5355\u9879\u5f0f\u200b\u3002</p> <p>\u200b\u51e0\u4f55\u200b\u89c4\u5212\u200b\u95ee\u9898\u200b\u4e0d\u662f\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\uff0c\u200b\u4f46\u662f\u200b\u53ef\u4ee5\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u7b49\u4ef7\u200b\u7684\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-optimization/#_14","title":"\u4e00\u4e9b\u200b\u5e38\u89c1\u200b\u7684\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898","text":""},{"location":"math/convex-optimization/convex-optimization/#_15","title":"\u7ebf\u6027\u89c4\u5212\u200b\u95ee\u9898","text":"<p>\u200b\u5982\u679c\u200b\\(\\eqref{4}\\)\u200b\u4e2d\u200b\u7684\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u548c\u200b\u4e0d\u7b49\u5f0f\u200b\u7ea6\u675f\u200b\u90fd\u200b\u662f\u200b\u7ebf\u6027\u200b\u51fd\u6570\u200b\u65f6\u200b\uff0c\u200b\u6b64\u65f6\u200b\u7684\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u4e3a\u200b\u7ebf\u6027\u89c4\u5212\u200b\uff08LP\uff09\u3002</p> \\[ \\optim{\\min}{c^\\top x + d}{\\cases{     \\begin{aligned}         &amp; Gx\\preceq h \\\\         &amp; Ax = b     \\end{aligned} }} \\] <p>\u200b\u6d88\u9664\u200b\u7ebf\u6027\u89c4\u5212\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u4e2d\u200b\u7684\u200b\u5e38\u6570\u200b\u9879\u200b\u3001\u200b\u5f15\u5165\u200b\u677e\u5f1b\u200b\u53d8\u91cf\u200b\u4ee5\u200b\u6d88\u9664\u200b\u4e0d\u7b49\u5f0f\u200b\u7ea6\u675f\u200b\u3001\u200b\u4f7f\u7528\u200b\u975e\u8d1f\u200b\u53d8\u91cf\u200b\u8868\u793a\u200b\u65e0\u7ea6\u675f\u200b\u53d8\u91cf\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u7ebf\u6027\u89c4\u5212\u200b\u7684\u200b\u6807\u51c6\u200b\u5f62\u5f0f\u200b\uff1a</p> \\[ \\optim{\\min}{c^\\top x}{\\cases{     \\begin{aligned}         &amp; A^\\top x = b \\\\         &amp; x\\succeq 0     \\end{aligned} }} \\label{7} \\] <p>\u200b\u5982\u679c\u200b\\(\\eqref{4}\\)\u200b\u4e2d\u200b\u7684\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u662f\u200b\u7ebf\u6027\u200b\u51fd\u6570\u200b\u4e4b\u200b\u6bd4\u200b\uff0c\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u65f6\u200b\u7ebf\u6027\u200b\u51fd\u6570\u200b\uff0c\u200b\u6b64\u65f6\u200b\u5f97\u5230\u200b\u7ebf\u6027\u200b\u5206\u5f0f\u200b\u89c4\u5212\u200b\u95ee\u9898\u200b\u3002</p> \\[ \\optim{\\min}{\\frac{c^\\top x + d}{e^\\top x + f}}{\\cases{     \\begin{aligned}         &amp; Gx\\preceq h \\\\         &amp; Ax = b     \\end{aligned} }} \\] <p>\u200b\u7ebf\u6027\u200b\u5206\u5f0f\u200b\u89c4\u5212\u200b\u95ee\u9898\u200b\u662f\u200b\u62df\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8f6c\u5316\u200b\u5982\u4e0b\u200b\u7684\u200b\u7ebf\u6027\u89c4\u5212\u200b\u95ee\u9898\u200b</p> \\[ \\optim{\\min}{c^\\top y + dz}{\\cases{     \\begin{aligned}         &amp; Gy - hz\\preceq 0 \\\\         &amp; Ay - bz = 0 \\\\         &amp; e^\\top y + fz = 1 \\\\         &amp; z\\geq 0     \\end{aligned} }} \\] <p>\u200b\u7531\u4e8e\u200b\u4e00\u7ec4\u200b\u62df\u51f8\u51fd\u6570\u200b\u7684\u200b\u6700\u5927\u503c\u200b\u4ecd\u200b\u662f\u200b\u62df\u51f8\u51fd\u6570\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u7ebf\u6027\u200b\u5206\u5f0f\u200b\u89c4\u5212\u200b\u95ee\u9898\u200b\u7684\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u66ff\u6362\u200b\u4e3a\u200b\u4e00\u200b\u7ec4\u5206\u200b\u5f0f\u200b\u51fd\u6570\u200b\u7684\u200b\u6700\u5927\u503c\u200b\uff0c\u200b\u6b64\u65f6\u200b\u7684\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u4ecd\u7136\u200b\u662f\u200b\u62df\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-optimization/#_16","title":"\u4e8c\u6b21\u200b\u4f18\u5316\u200b\u95ee\u9898","text":"<p>\u200b\u5982\u679c\u200b\\(\\eqref{4}\\)\u200b\u4e2d\u200b\u7684\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u548c\u200b\u4e0d\u7b49\u5f0f\u200b\u7ea6\u675f\u200b\u90fd\u200b\u662f\u200b\u51f8\u200b\u4e8c\u6b21\u200b\u578b\u200b\uff0c\u200b\u6b64\u65f6\u200b\u7684\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u4e3a\u200b\u4e8c\u6b21\u200b\u7ea6\u675f\u200b\u4e8c\u6b21\u200b\u89c4\u5212\u200b\uff08QCQP\uff09\u200b\u95ee\u9898\u200b\u3002</p> \\[ \\optim{\\min}{\\frac 12x^\\top P_0x + q_0^\\top x + r}{\\cases{     \\begin{aligned}         &amp; \\frac 12x^\\top P_ix + q_i^\\top x + r_i\\leq 0 &amp; i = \\oneto m \\\\         &amp; Ax = b     \\end{aligned} }} \\label{8} \\] <p>\u200b\u5f0f\u200b\u4e2d\u200b\\(P_i\\in \\bbS^n_\\plus, q_i\\in \\bbR^n, A\\in \\bbR^{p\\times n}\\)\u3002</p> <p>\u200b\u5982\u679c\u200b\\(\\eqref{8}\\)\u200b\u4e2d\u200b\u7684\u200b\u4e0d\u7b49\u5f0f\u200b\u7ea6\u675f\u200b\u662f\u200b\u7ebf\u6027\u200b\u7684\u200b\uff0c\u200b\u5219\u200b\u79f0\u4e3a\u200b\u4e8c\u6b21\u200b\u89c4\u5212\u200b\u95ee\u9898\u200b\uff08QP\uff09\u3002</p> \\[ \\optim{\\min}{\\frac 12x^\\top Px + q^\\top x + r}{\\cases{     \\begin{aligned}         &amp; Gx\\preceq h \\\\         &amp; Ax = b     \\end{aligned} }} \\label{9} \\] <p>\u200b\u5f0f\u200b\u4e2d\u200b\\(G\\in \\bbR^{m\\times n}\\)</p>"},{"location":"math/convex-optimization/convex-optimization/#_17","title":"\u4e8c\u9636\u200b\u9525\u200b\u89c4\u5212","text":"<p>\u200b\u5f53\u200b\\(\\eqref{4}\\)\u200b\u4e2d\u200b\u7684\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u4e3a\u200b\u7ebf\u6027\u200b\u51fd\u6570\u200b\uff0c\u200b\u4e0d\u7b49\u5f0f\u200b\u7ea6\u675f\u200b\u6784\u6210\u200b\u4e8c\u9636\u200b\u51f8\u9525\u200b\uff0c\u200b\u6b64\u65f6\u200b\u7684\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u662f\u200b\u4e8c\u9636\u200b\u9525\u200b\u89c4\u5212\u200b\uff08SOCP\uff09\u3002</p> \\[ \\optim{\\min}{f^\\top x}{\\cases{     \\begin{aligned}         &amp; \\Vert A_ix + b\\Vert_2\\leq c_i^\\top x + d_i &amp; i = \\oneto m \\\\         &amp; Fx = g     \\end{aligned} }} \\label{10} \\] <p>\u200b\u79f0\u200b\\(\\Vert A_ix + b\\Vert_2\\leq c_i^\\top x + d_i\\)\u200b\u4e3a\u200b\u4e8c\u9636\u200b\u9525\u200b\u7ea6\u675f\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-optimization/#_18","title":"\u5e7f\u4e49\u200b\u4e0d\u7b49\u5f0f\u200b\u4e0b\u200b\u7684\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898","text":"<p>\u200b\u672c\u200b\u8282\u200b\u8ba8\u8bba\u200b\\(f_i: \\bbR^n\\ra\\bbR^{k_i}\\)\u200b\u5728\u200b\\(\\preceq_{K_i}\\)\u200b\u60c5\u5f62\u200b\u4e0b\u200b\u7684\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-optimization/#_19","title":"\u5e7f\u4e49\u200b\u4e0d\u7b49\u5f0f\u200b\u7ea6\u675f","text":"<p>\u200b\u5f62\u200b\u5982\u4e0b\u200b\u5f0f\u200b\u7684\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u79f0\u4e3a\u200b\u5e7f\u4e49\u200b\u4e0d\u7b49\u5f0f\u200b\u7ea6\u675f\u200b\u7684\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u3002</p> \\[ \\optim{\\min}{f_0(x)}{\\cases{     \\begin{aligned}         &amp; f_i\\preceq_{K_i} 0 &amp; i = \\oneto m \\\\         &amp; Ax = b     \\end{aligned} }} \\] <p>\u200b\u5f0f\u200b\u4e2d\u200b\\(f_0: \\bbR^n\\ra\\bbR\\)\uff0c\\(K_i\\subseteq \\bbR^{k_i}\\)\u200b\u4e3a\u200b\u6b63\u5e38\u200b\u9525\u200b\uff0c\\(f_i: \\bbR^n\\ra\\bbR^{k_i}\\)\u200b\u4e3a\u200b\\(K_i\\)-\u200b\u51f8\u51fd\u6570\u200b\u3002\u200b\u5927\u591a\u6570\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u7684\u200b\u7ed3\u8bba\u200b\u5728\u200b\u5e7f\u4e49\u200b\u4e0d\u7b49\u5f0f\u200b\u4e0b\u200b\u4ecd\u7136\u200b\u6210\u7acb\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-optimization/#_20","title":"\u9525\u200b\u89c4\u5212","text":"<p>\u200b\u9525\u200b\u89c4\u5212\u200b\u662f\u200b\u5177\u6709\u200b\u5982\u4e0b\u200b\u5f62\u5f0f\u200b\u7684\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b</p> \\[ \\optim{\\min}{c^\\top x}{\\cases{     \\begin{aligned}         &amp; Fx + g\\preceq_K 0 \\\\         &amp; Ax = b     \\end{aligned} }} \\] <p>\u200b\u5f53\u200b\\(K = \\bbR^n_{\\plus\\plus}\\)\u200b\u65f6\u200b\uff0c\u200b\u9525\u200b\u89c4\u5212\u200b\u9000\u5316\u200b\u4e3a\u200bLP\u3002\u200b\u4eff\u7167\u200bLP\u200b\u53ef\u4ee5\u200b\u5b9a\u4e49\u200b\u6807\u51c6\u200b\u5f62\u5f0f\u200b\u7684\u200b\u9525\u200b\u89c4\u5212\u200b\u95ee\u9898\u200b\u3002</p> \\[ \\optim{\\min}{c^\\top x}{\\cases{     \\begin{aligned}         &amp; x\\succeq_K 0 \\\\         &amp; Ax = b     \\end{aligned} }} \\]"},{"location":"math/convex-optimization/convex-optimization/#_21","title":"\u534a\u5b9a\u200b\u89c4\u5212","text":"<p>\u200b\u5f53\u200b\\(K\\in \\bbS^k_{\\plus}\\)\u200b\u65f6\u200b\uff0c\u200b\u76f8\u5e94\u200b\u7684\u200b\u9525\u200b\u89c4\u5212\u200b\u4e3a\u200b\u534a\u5b9a\u200b\u89c4\u5212\u200b\uff08SDP\uff09\u3002</p> \\[ \\optim{\\min}{c^\\top x}{\\cases{     \\begin{aligned}         &amp; \\sum_{i=1}^n x_iF_i + G\\preceq 0 \\\\         &amp; Ax = b     \\end{aligned} }} \\] <p>\u200b\u5f0f\u200b\u4e2d\u200b\\(G, F_i\\in \\bbS^k\\)\u3002\u200b\u82e5\u200b\u8fd9\u4e9b\u200b\u77e9\u9635\u200b\u90fd\u200b\u662f\u200b\u5bf9\u89d2\u200b\u77e9\u9635\u200b\uff0cSDP\u200b\u9000\u5316\u200b\u4e3a\u200bLP\u3002\u200b\u4e0d\u7b49\u5f0f\u200b\u7ea6\u675f\u200b\\(\\sum_{i=1}^n x_iF_i\\preceq G\\)\u200b\u79f0\u4e3a\u200b\u7ebf\u6027\u200b\u77e9\u9635\u200b\u4e0d\u7b49\u5f0f\u200b\uff08LMI\uff09\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5206\u5757\u200b\u5bf9\u89d2\u200b\u77e9\u9635\u200b\u5c06\u200b\u591a\u4e2a\u200bLMI\u200b\u7ec4\u5408\u200b\u5728\u200b\u4e00\u8d77\u200b\u3002</p> <p>\u200b\u6807\u51c6\u200b\u5f62\u5f0f\u200b\u7684\u200b\u534a\u5b9a\u200b\u89c4\u5212\u200b\u4e3a\u200b</p> \\[ \\optim{\\min}{\\mathbf{tr}(CX)}{\\cases{     \\begin{aligned}         &amp; \\mathbf{tr(A_iX)} = b_i &amp; i = \\oneto p \\\\         &amp; X\\succeq 0     \\end{aligned} }} \\]"},{"location":"math/convex-optimization/convex-optimization/#_22","title":"\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u7684\u200b\u5305\u542b\u200b\u5173\u7cfb","text":"<ul> <li>\u200b\u5f53\u200bQP\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u4e2d\u200b\u7684\u200b\\(P = 0\\)\u200b\u65f6\u200b\uff0cQP\u200b\u9000\u5316\u200b\u4e3a\u200bLP\u200b\u95ee\u9898\u200b</li> <li>\u200b\u5f53\u200bQCQP\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u4e2d\u200b\u7684\u200b\\(P_i = 0\\)\u200b\u65f6\u200b\uff0cQCQP\u200b\u9000\u5316\u200b\u4e3a\u200bQP\u200b\u95ee\u9898\u200b</li> <li>\u200b\u5f53\u200bSOCP\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u4e2d\u200b\u7684\u200b\\(c_i = 0\\)\u200b\u65f6\u200b\uff0cSOCP\u200b\u9000\u5316\u200b\u4e3a\u200bQCQP</li> <li>\u200b\u5f62\u200b\u5982\u200b\\(\\eqref{10}\\)\u200b\u7684\u200bSOCP\u200b\u4e0e\u200b\u5982\u4e0b\u200bSDP\u200b\u95ee\u9898\u200b\u7b49\u4ef7\u200b</li> </ul> \\[ \\optim{\\min}{f^\\top x}{\\cases{     \\begin{bmatrix}         (c_i^\\top x + d_i)I &amp; A_ix + b_i \\\\         (A_ix + b_i)I &amp; (c_i^\\top + d_i)     \\end{bmatrix}\\succeq_{\\bbS_\\plus^n} 0 }} \\] <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6709\u200b</p> \\[ \\text{LP}\\subseteq \\text{QP}\\subseteq \\text{QCQP}\\subseteq \\text{SOCP}\\subseteq \\text{SDP} \\]"},{"location":"math/convex-optimization/convex-set/","title":"\u51f8\u96c6\u200b\u53ca\u5176\u200b\u6027\u8d28","text":"<p>\u200b\u4ece\u200b\u76f4\u89c2\u200b\u610f\u4e49\u200b\u4e0a\u200b\u8bb2\u200b\uff0c\u200b\u51f8\u96c6\u200b\u5c31\u662f\u200b\u6ca1\u6709\u200b\u51f9\u200b\u8fdb\u53bb\u200b\u7684\u200b\u90e8\u5206\u200b\u7684\u200b\u96c6\u5408\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-set/#_2","title":"\u5b9a\u4e49","text":""},{"location":"math/convex-optimization/convex-set/#_3","title":"\u76f4\u7ebf","text":"<p>\u200b\u8bbe\u200b\\(x_1 \\not = x_2\\)\u200b\u4e3a\u200b\\(\\mathbb R^n\\)\u200b\u4e0a\u200b\u7684\u200b\u4e24\u4e2a\u200b\u70b9\u200b\uff0c\u200b\u5219\u200b</p> <ul> <li>\\(y = \\theta x_1 + (1 - \\theta) x_2\\) \u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4e00\u6761\u200b\u76f4\u7ebf\u200b\u3002</li> <li>\\(y = \\theta x_1 + (1 - \\theta) x_2, 0\\leq\\theta\\leq 1\\) \u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4e00\u6761\u200b\u7ebf\u6bb5\u200b\u3002</li> </ul> <p>\u200b\u76f4\u7ebf\u200b\\(y = \\theta x_1 + (1 - \\theta) x_2\\)\u200b\u662f\u200b\u4e00\u6761\u200b\u4ece\u200b\\(x_2\\)\u200b\u51fa\u53d1\u200b\uff0c\u200b\u6cbf\u200b\u5411\u91cf\u200b\\(x_1 - x_2\\)\u200b\u65b9\u5411\u200b\u5ef6\u4f38\u200b\u7684\u200b\u76f4\u7ebf\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-set/#_4","title":"\u4eff\u5c04\u200b\u96c6\u5408","text":"<p>\u200b\u5bf9\u4e8e\u200b\\(\\mathbb R^n\\)\u200b\u4e2d\u200b\u7684\u200b\\(m\\)\u200b\u4e2a\u70b9\u200b\\(x_1, \\ldots, x_m\\)\uff0c\u200b\u82e5\u200b\\(\\sum_{i = 1}^m \\theta_i = 1\\)\uff0c\u200b\u5219\u200b\u79f0\u200b\\(\\sum_{i=1}^m \\theta_ix_i\\)\u200b\u4e3a\u200b\\(x_1, \\ldots, x_m\\)\u200b\u7684\u200b\u4eff\u5c04\u200b\u7ec4\u5408\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u4e00\u7ec4\u200b\u5411\u91cf\u200b\\(x_1, \\ldots, x_m\\)\u200b\u4e2d\u200b\u7684\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u5411\u91cf\u200b\u90fd\u200b\u4e0d\u80fd\u200b\u7531\u200b\u5176\u4ed6\u200b\u5411\u91cf\u200b\u7ecf\u200b\u4eff\u5c04\u200b\u7ec4\u5408\u200b\u5f97\u5230\u200b\uff0c\u200b\u79f0\u200b\u8fd9\u7ec4\u200b\u5411\u91cf\u200b\u4eff\u5c04\u200b\u65e0\u5173\u200b\u3002</p> \u200b\u4eff\u5c04\u200b\u65e0\u5173\u200b\u4e0e\u200b\u7ebf\u6027\u200b\u65e0\u5173\u200b <p>\u200b\u4e00\u7ec4\u200b\u5411\u91cf\u200b\\(x_0, x_1, \\ldots, x_m\\)\u200b\u4eff\u5c04\u200b\u65e0\u200b\uff08\u200b\u76f8\u200b\uff09\u200b\u5173\u200b\u7b49\u4ef7\u200b\u4e8e\u200b\u5411\u91cf\u200b\\(x_1 - x_0, \\ldots, x_m - x_0\\)\u200b\u7ebf\u6027\u200b\u65e0\u200b\uff08\u200b\u76f8\u200b\uff09\u200b\u5173\u200b\u3002</p> <p>\u200b\u8bbe\u200b\u96c6\u5408\u200b\\(C \\subseteq \\mathbb R^n\\)\uff0c\u200b\u82e5\u200b\u96c6\u5408\u200b\\(C\\)\u200b\u4e2d\u200b\u7684\u200b\u4efb\u610f\u200b\u4e24\u4e2a\u200b\u4e0d\u540c\u70b9\u200b\u6784\u6210\u200b\u7684\u200b\u76f4\u7ebf\u200b\uff08\u200b\u5373\u200b\u5b83\u4eec\u200b\u7684\u200b\u4eff\u5c04\u200b\u7ec4\u5408\u200b\uff09\u200b\u4ecd\u7136\u200b\u4f4d\u4e8e\u200b\u96c6\u5408\u200b\u4e2d\u200b\uff0c\u200b\u5219\u200b\\(C\\)\u200b\u4e3a\u200b\u4eff\u5c04\u200b\u96c6\u5408\u200b\u3002</p> \\[ \\forall x_1, x_2 \\in C, x_1 \\not = x_2, \\forall \\theta\\in \\mathbb R, y = \\theta x_1 + (1 - \\theta) x_2\\in C \\] <p>\u200b\u4eff\u5c04\u200b\u96c6\u5408\u200b\\(C\\)\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6027\u8d28\u200b</p> <ul> <li>\\(C\\)\u200b\u4e2d\u200b\u5305\u542b\u200b\u5176\u4e2d\u200b\u4efb\u610f\u200b\u4e2a\u70b9\u200b\u7684\u200b\u4eff\u5c04\u200b\u7ec4\u5408\u200b\u3002</li> <li>\u200b\u96c6\u5408\u200b\\(V = \\{x - x_0 | x \\in C\\}\\)\u200b\u4e3a\u200b\\(\\mathbb R^n\\)\u200b\u7684\u200b\u5b50\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u4e14\u200b\u5176\u7ef4\u6570\u200b\u4e0e\u200b\u504f\u79fb\u200b\\(x_0\\)\u200b\u65e0\u5173\u200b\u3002\u200b\u5b9a\u4e49\u200b\u4eff\u5c04\u200b\u96c6\u5408\u200b\u7684\u200b\u7ef4\u6570\u200b\u4e3a\u200b\\(V\\)\u200b\u7684\u200b\u7ef4\u6570\u200b\u3002</li> </ul> <p>\u200b\u8bbe\u200b\\(C\\)\u200b\u4e3a\u200b\u4efb\u610f\u200b\u96c6\u5408\u200b\uff0c\u200b\u5219\u200b\\(C\\)\u200b\u4e2d\u200b\u6240\u6709\u200b\u70b9\u200b\u7684\u200b\u4eff\u5c04\u200b\u7ec4\u5408\u200b\u79f0\u4e3a\u200b\\(C\\)\u200b\u7684\u200b\u4eff\u5c04\u200b\u5305\u200b\uff0c\u200b\u8bb0\u200b\u4f5c\u200b\\(\\mathbf{aff} C\\)\uff0c\u200b\u4eff\u5c04\u200b\u5305\u662f\u200b\u5305\u542b\u200b\u96c6\u5408\u200b\\(C\\)\u200b\u7684\u200b\u6700\u5c0f\u200b\uff08\u200b\u5373\u7ef4\u6570\u200b\u6700\u4f4e\u200b\u7684\u200b\uff09\u200b\u4eff\u5c04\u200b\u96c6\u5408\u200b\uff0c\u200b\u5176\u7ef4\u6570\u200b\u79f0\u4e3a\u200b\u4eff\u5c04\u200b\u7ef4\u6570\u200b\u3002</p> <p>\u200b\u5f53\u200b\u4e00\u4e2a\u200b\u96c6\u5408\u200b\\(C\\)\u200b\u7684\u200b\u4eff\u5c04\u200b\u7ef4\u6570\u200b\\(\\dim \\mathbf{aff} C &lt; n\\)\u200b\u65f6\u200b\uff0c\\(C^\\circ = \\varnothing\\)\u3002\u200b\u6b64\u65f6\u200b\u9700\u8981\u200b\u5b9a\u4e49\u200b\u76f8\u5bf9\u200b\u5185\u90e8\u200b\u4e0e\u200b\u76f8\u5bf9\u200b\u8fb9\u754c\u200b\u3002</p> <ul> <li>\u200b\u96c6\u5408\u200b\\(C\\)\u200b\u7684\u200b\u76f8\u5bf9\u200b\u5185\u90e8\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\\(\\mathbf{relint}C = \\{x\\in C | \\exists r\\in \\mathbb R_{ + + }, B(x, r)\\cap \\mathbf{aff} C \\subseteq C\\}\\)</li> <li>\u200b\u96c6\u5408\u200b\\(C\\)\u200b\u7684\u200b\u76f8\u5bf9\u200b\u8fb9\u754c\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\\(\\mathbf{cl} C - \\mathbf{relint}C\\)\u3002</li> </ul>"},{"location":"math/convex-optimization/convex-set/#_5","title":"\u51f8\u96c6","text":"<p>\u200b\u5bf9\u4e8e\u200b\u96c6\u5408\u200b\\(C\\subseteq \\mathbb R^n\\)\u200b\u4e2d\u200b\u7684\u200b\\(m\\)\u200b\u4e2a\u70b9\u200b\\(x_1, \\ldots, x_m\\)\uff0c\u200b\u82e5\u200b\\(\\sum_{i=1}^m \\theta_i = 1, \\theta_i \\geq 0\\)\uff0c\u200b\u5219\u200b\u79f0\u200b\\(\\sum_{i=1}^m \\theta_i x_i\\)\u200b\u4e3a\u200b\\(x_1, \\ldots, x_m\\)\u200b\u7684\u200b\u51f8\u200b\u7ec4\u5408\u200b\u3002</p> <p>\u200b\u82e5\u200b\u4e00\u4e2a\u200b\u96c6\u5408\u200b\u5185\u200b\u4efb\u610f\u200b\u4e24\u70b9\u200b\u7684\u200b\u51f8\u200b\u7ec4\u5408\u200b\u90fd\u200b\u5728\u200b\u8be5\u200b\u96c6\u5408\u200b\u4e2d\u200b\uff0c\u200b\u79f0\u8be5\u200b\u96c6\u5408\u200b\u4e3a\u200b\u51f8\u96c6\u200b\u3002</p> \\[ \\forall x_1, x_2\\in C, \\forall 0\\leq \\theta\\leq 1, \\theta x_1 + (1 - \\theta) x_2\\in C \\] <p>\u200b\u96c6\u5408\u200b\\(C\\)\u200b\u7684\u200b\u6240\u6709\u200b\u70b9\u200b\u7684\u200b\u51f8\u200b\u7ec4\u5408\u200b\u79f0\u4e3a\u200b\u51f8\u5305\u200b\uff0c\u200b\u8bb0\u200b\u4f5c\u200b\\(\\mathbf{conv}C\\)\uff0c\\(C\\)\u200b\u7684\u200b\u51f8\u200b\u5305\u662f\u200b\u5305\u542b\u200b\\(C\\)\u200b\u7684\u200b\u6700\u5c0f\u200b\u51f8\u96c6\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-set/#_6","title":"\u9525","text":"<p>\u200b\u5bf9\u4e8e\u200b\u96c6\u5408\u200b\\(C\\)\uff0c\u200b\u82e5\u200b\\(\\forall x\\in C, \\forall \\theta\\geq 0, \\theta x\\in C\\)\uff0c\u200b\u5219\u200b\u79f0\u200b\\(C\\)\u200b\u4e3a\u200b\u9525\u200b\u3002\u200b\u82e5\u200b\\(C\\)\u200b\u8fd8\u662f\u200b\u51f8\u96c6\u200b\uff0c\u200b\u5219\u200b\u79f0\u4e3a\u200b\u51f8\u9525\u200b\u3002\u200b\u51f8\u9525\u200b\u6ee1\u8db3\u200b</p> \\[ \\forall x_1, x_2\\in C, \\forall \\theta_1, \\theta_2 \\geq 0, \\theta_1x_1 + \\theta_2x_2 \\in C \\] <p>\u200b\u5bf9\u4e8e\u200b\u96c6\u5408\u200b\\(C\\subseteq \\mathbb R^n\\)\u200b\u4e2d\u200b\u7684\u200b\\(m\\)\u200b\u4e2a\u70b9\u200b\\(x_1, \\ldots, x_m\\)\uff0c\u200b\u82e5\u200b\\(\\theta_i \\geq 0\\)\uff0c\u200b\u5219\u200b\u79f0\u200b\\(\\sum_{i=1}^m \\theta_i x_i\\)\u200b\u4e3a\u200b\\(x_1, \\ldots, x_m\\)\u200b\u7684\u200b\u9525\u200b\u7ec4\u5408\u200b\u3002</p> <p>\u200b\u96c6\u5408\u200b\\(C\\)\u200b\u4e2d\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u7ec4\u6210\u200b\u7684\u200b\u6240\u6709\u200b\u9525\u200b\u7ec4\u5408\u200b\u79f0\u4e3a\u200b\u9525\u5305\u200b\uff0c\\(C\\)\u200b\u7684\u200b\u9525\u200b\u5305\u662f\u200b\u5305\u542b\u200b\\(C\\)\u200b\u7684\u200b\u6700\u5c0f\u200b\u51f8\u9525\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-set/#_7","title":"\u5e38\u89c1\u200b\u7684\u200b\u51f8\u96c6","text":"<p>\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u4e00\u4e9b\u200b\u5e73\u51e1\u200b\u51f8\u96c6\u200b\uff1a</p> <ul> <li>\u200b\u7a7a\u96c6\u200b\\(\\varnothing\\)\u3001\u200b\u5355\u70b9\u200b\u96c6\u200b\\(\\{x_0\\}\\)\u3001\u200b\u5168\u7a7a\u95f4\u200b\\(\\mathbb R^n\\)\u200b\u53ca\u5176\u200b\u5b50\u200b\u7a7a\u95f4\u200b\u90fd\u200b\u662f\u200b\u4eff\u5c04\u200b\u96c6\u200b\uff08\u200b\u4e5f\u200b\u662f\u200b\u51f8\u96c6\u200b\uff09\u3002</li> <li>\u200b\u4efb\u610f\u200b\u76f4\u7ebf\u200b\u90fd\u200b\u662f\u200b\u51f8\u96c6\u200b\uff1b\u200b\u8fc7\u200b\u539f\u70b9\u200b\u7684\u200b\u76f4\u7ebf\u200b\u662f\u200b\u4eff\u5c04\u200b\u96c6\u200b\uff1b\u200b\u7ebf\u6bb5\u200b\u662f\u200b\u51f8\u96c6\u200b\uff1b\u200b\u5c04\u7ebf\u200b\u662f\u200b\u51f8\u96c6\u200b\uff1b\u200b\u8d77\u70b9\u200b\u5728\u200b\u539f\u70b9\u200b\u7684\u200b\u5c04\u7ebf\u200b\u662f\u200b\u51f8\u200b\u9525\u200b\u3002</li> </ul>"},{"location":"math/convex-optimization/convex-set/#_8","title":"\u8d85\u5e73\u9762\u200b\u4e0e\u200b\u534a\u200b\u7a7a\u95f4","text":"<p>\u200b\u8bbe\u200b\\(a\\in \\mathbb R^n, a \\not = 0, b\\in \\mathbb R\\)\uff0c\u200b\u65b9\u7a0b\u200b\\(a^\\top x = b\\)\u200b\u786e\u5b9a\u200b\u4e86\u200b\u7ebf\u6027\u200b\u7a7a\u95f4\u200b\\(\\mathbb R^n\\)\u200b\u5185\u200b\u7684\u200b\u4e00\u4e2a\u200b\u8d85\u5e73\u9762\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u8d85\u5e73\u9762\u200b\u5c06\u200b\u7a7a\u95f4\u200b\u5206\u4e3a\u200b\u4e24\u200b\u90e8\u5206\u200b\uff0c\u200b\u79f0\u4e3a\u200b\u5f00\u534a\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u6bcf\u200b\u4e00\u90e8\u5206\u200b\u52a0\u4e0a\u200b\u8d85\u5e73\u9762\u200b\u79f0\u4e3a\u200b\u534a\u200b\u7a7a\u95f4\u200b\u3002</p> <ul> <li>\u200b\u8d85\u5e73\u9762\u200b\u53ef\u4ee5\u200b\u8868\u793a\u200b\u4e3a\u200b\\(\\{x | a^\\top x = b\\}\\)</li> <li>\u200b\u534a\u200b\u7a7a\u95f4\u200b\u53ef\u4ee5\u200b\u8868\u793a\u200b\u4e3a\u200b\\(\\{x | a^\\top x\\leq b\\}\\)</li> </ul> <p>\u200b\u5411\u91cf\u200b\\(a\\)\u200b\u4e3a\u200b\u8d85\u5e73\u9762\u200b\u7684\u200b\u6cd5\u7ebf\u200b\u65b9\u5411\u200b\uff0c\u200b\u8d85\u5e73\u9762\u200b\u4e0a\u200b\u7684\u200b\u6240\u6709\u200b\u70b9\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u7531\u200b\u4e00\u4e2a\u200b\u8d77\u70b9\u200b\\(x_0\\)\u200b\u52a0\u4e0a\u200b\u4e0e\u200b\\(a\\)\u200b\u6b63\u4ea4\u200b\u7684\u200b\u6240\u6709\u200b\u5411\u91cf\u200b\u5f97\u5230\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-set/#_9","title":"\u7403","text":"<p>\\(\\mathbb R^n\\)\u200b\u4e2d\u200b\u7684\u200b\u6b27\u6c0f\u200b\u7403\u4e3a\u200b2-\u200b\u8303\u6570\u200b\u4e0b\u200b\u7684\u200b\u7403\u200b\uff0c\u200b\u5373\u200b</p> \\[ B(x, r) = \\{y | \\Vert y - x\\Vert_2\\leq r\\} \\] <p>\u200b\u5176\u4e2d\u200b\\(x\\in \\mathbb R^n\\)\u200b\u4e3a\u200b\u6b27\u6c0f\u200b\u7403\u200b\u7684\u200b\u7403\u5fc3\u200b\uff0c\\(r\\in \\mathbb R_}\\)\u200b\u4e3a\u200b\u5176\u200b\u534a\u5f84\u200b\u3002 <p>\u200b\u692d\u7403\u200b\u662f\u200b\u5404\u4e2a\u200b\u65b9\u5411\u200b\u5ef6\u4f38\u200b\u7a0b\u5ea6\u200b\u4e0d\u540c\u200b\u7684\u200b\u6b27\u6c0f\u200b\u7403\u200b\uff0c\u200b\u5ef6\u4f38\u200b\u7a0b\u5ea6\u200b\u7531\u200b\u77e9\u9635\u200b\\(P\\in \\mathbb S_{\\)\u200b\u786e\u5b9a\u200b\uff0c\u200b\u534a\u8f74\u200b\u957f\u5ea6\u200b\u4e3a\u200b\\(\\sqrt{\\lambda_i}\\)\u3002</p> \\[ \\mathcal E = \\{y | (x - y)^\\top P^{-1}(x - y)\\leq 1\\} \\] <p>\u200b\u5f53\u200b\\(P = r^2I\\)\u200b\u65f6\u200b\uff0c\\(\\mathcal E = B(x, r)\\)\u3002</p> <p>\u200b\u5c06\u200b\u6b27\u6c0f\u200b\u7403\u4e2d\u200b\u7684\u200b2-\u200b\u8303\u6570\u200b\u6362\u6210\u200b\u5176\u4ed6\u200b\u7684\u200b\u8303\u6570\u200b\uff0c\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u8303\u6570\u200b\u7403\u200b\uff1a</p> \\[ B_*(x, r) = \\{y | \\Vert y - x\\Vert_* \\leq r\\} \\]"},{"location":"math/convex-optimization/convex-set/#_10","title":"\u9525","text":"<p>\u200b\u65b9\u7a0b\u200b\\(\\Vert x\\Vert_2 \\leq t\\)\u200b\u5728\u200b\\(R^{n+1}\\)\u200b\u4e0a\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u9525\u200b\uff0c\u200b\u79f0\u4e3a\u200b\u4e8c\u9636\u200b\u9525\u200b\u3002\u200b\u9525\u200b\u53ef\u4ee5\u200b\u89c6\u4e3a\u200b\u7531\u200b\u4f4e\u200b\u4e00\u7ef4\u200b\u7684\u200b\u7403\u200b\u5806\u79ef\u200b\u5f97\u5230\u200b\u3002</p> <p>\u200b\u5c06\u200b2-\u200b\u8303\u6570\u200b\u66ff\u6362\u200b\u4e3a\u200b\u5176\u4ed6\u200b\u8303\u6570\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u8303\u6570\u200b\u9525\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-set/#_11","title":"\u591a\u9762\u4f53","text":"<p>\u200b\u6709\u9650\u200b\u4e2a\u200b\u7ebf\u6027\u200b\u7b49\u5f0f\u200b\u548c\u200b\u4e0d\u7b49\u5f0f\u200b\u7684\u200b\u89e3\u96c6\u200b\u6784\u6210\u200b\u591a\u9762\u4f53\u200b\u3002</p> \\[ \\begin{aligned}     \\mathcal P &amp;= \\{x | a_i^\\top x\\leq b_i, i = 1, \\ldots, m, c_j^\\top x = d_j, j = 1, \\ldots, p\\} \\\\     &amp;= \\{x | Ax\\preceq b, Cx = d\\} \\end{aligned} \\] <p>\u200b\u591a\u9762\u4f53\u200b\u53ef\u4ee5\u200b\u662f\u200b\u9525\u200b\uff0c\u200b\u5982\u975e\u200b\u8d1f\u200b\u8c61\u9650\u200b\u3002</p> <p>\u200b\u5355\u7eaf\u5f62\u200b\u662f\u200b\u4e00\u79cd\u200b\u7279\u6b8a\u200b\u7684\u200b\u591a\u9762\u4f53\u200b\uff0c\u200b\u4e00\u7ec4\u200b\u4eff\u5c04\u200b\u65e0\u5173\u200b\u7684\u200b\u70b9\u200b\\(x_0, x_1, \\ldots, x_m\\)\u200b\u7684\u200b\u51f8\u200b\u7ec4\u5408\u200b\u786e\u5b9a\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5355\u7eaf\u5f62\u200b\uff0c\u200b\u7528\u200b\\(\\mathbf{conv}\\{x_0, \\ldots, x_m\\}\\)\u200b\u8868\u793a\u200b\uff0c\u200b\u5176\u200b\u4eff\u5c04\u200b\u7ef4\u5ea6\u200b\u4e3a\u200b\\(m\\)\u3002</p> \\[ \\mathbf{conv}\\{x_0, \\ldots, x_m\\} = \\left\\{\\theta_0x_0 + \\theta_1x_1 + \\cdots + \\theta_mx_m \\middle| \\theta_i \\geq 0, \\sum_{i=1}^m \\theta_i = 1\\right\\} \\] <ul> <li>\u200b\u5355\u4f4d\u200b\u5355\u7eaf\u5f62\u200b\u662f\u200b\u96f6\u200b\u5411\u91cf\u200b\u548c\u200b\u5355\u4f4d\u5411\u91cf\u200b\u786e\u5b9a\u200b\u7684\u200b\\(n\\)\u200b\u7ef4\u200b\u5355\u7eaf\u5f62\u200b\uff0c\u200b\u5373\u200b\\(\\{x | x\\geq 0, \\mathbf{1}^\\top x \\leq 1\\}\\)\u3002</li> <li>\u200b\u6982\u7387\u200b\u5355\u7eaf\u5f62\u200b\u662f\u200b\u5355\u4f4d\u5411\u91cf\u200b\u786e\u5b9a\u200b\u7684\u200b\\(n-1\\)\u200b\u7ef4\u200b\u5355\u7eaf\u5f62\u200b\uff0c\u200b\u5373\u200b\\(\\{x | \\mathbf 1^\\top x = 1\\}\\)\u3002</li> </ul> \u200b\u5355\u7eaf\u5f62\u200b\u4e0e\u200b\u591a\u9762\u4f53\u200b <p>\u200b\u5355\u7eaf\u5f62\u200b\u662f\u200b\u4e00\u79cd\u200b\u7279\u6b8a\u200b\u7684\u200b\u591a\u9762\u4f53\u200b\u3002\u200b\u8bbe\u200b\u5355\u7eaf\u5f62\u200b\\(C\\)\u200b\u7531\u200b\u4eff\u5c04\u200b\u65e0\u5173\u200b\u7684\u200b\u5411\u91cf\u200b\\(x_0, \\ldots, x_m\\)\u200b\u786e\u5b9a\u200b\uff0c\u200b\u5219\u200b</p> \\[ B = \\begin{bmatrix}     x_1 - x_0 &amp; \\cdots &amp; x_m - x_0 \\end{bmatrix} \\] <p>\\(B\\)\u200b\u662f\u200b\u4e00\u4e2a\u200b\\(n\\times m\\)\u200b\u7ef4\u200b\u7684\u200b\u6ee1\u200b\u79e9\u200b\u77e9\u9635\u200b\u3002\u200b\u4ee4\u200b\\(\\theta = \\begin{pmatrix}\\theta_0 &amp; \\theta_1 &amp; \\cdots &amp; \\theta_m\\end{pmatrix}, \\theta' = \\begin{pmatrix}\\theta_1 &amp; \\cdots &amp; \\theta_m\\end{pmatrix}\\)\u3002\u200b\u5f53\u200b\u7a7a\u95f4\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u70b9\u200b\\(x\\)\u200b\u6ee1\u8db3\u200b\\(x\\in C\\)\u200b\u65f6\u200b\uff0c\u200b\u6709\u200b</p> \\[ \\exists \\theta\\succeq 0, \\mathbf 1^\\top \\theta = 1, x = \\sum_{i=0}^m \\theta_i x_i \\Longleftrightarrow \\exists \\theta'\\succeq 0, \\mathbf 1^\\top \\theta' \\leq 1, x = x_0 + B\\theta' \\] <p>\u200b\u800c\u200b\\(B\\)\u200b\u662f\u200b\u6ee1\u200b\u79e9\u200b\u77e9\u9635\u200b\uff0c\u200b\u5219\u200b\u5b58\u5728\u200b\u6ee1\u200b\u79e9\u200b\u77e9\u9635\u200b\\(A\\)\u200b\u4f7f\u5f97\u200b</p> \\[ AB = \\begin{bmatrix}     A_1 \\\\ A_2 \\end{bmatrix}B = \\begin{bmatrix}     I \\\\ 0 \\end{bmatrix} \\] <p>\u200b\u5219\u200b</p> \\[ Ax = \\begin{bmatrix}     A_1 \\\\ A_2 \\end{bmatrix}x = \\begin{bmatrix}     A_1x \\\\ A_2x \\end{bmatrix} = \\begin{bmatrix}     A_1x_0 + \\theta' \\\\ A_2x_0 \\end{bmatrix} \\] <p>\u200b\u8be5\u200b\u5355\u7eaf\u5f62\u200b\u7684\u200b\u591a\u9762\u4f53\u200b\u8868\u793a\u200b\u4e3a\u200b\uff1a</p> \\[ C = \\{x | A_1x\\succeq A_1x_0, A_2x = A_2x_0, \\mathbf 1^\\top A_1x - \\mathbf 1^\\top A_1x_0\\leq 1\\} \\]"},{"location":"math/convex-optimization/convex-set/#_12","title":"\u534a\u200b\u6b63\u5b9a\u200b\u9525","text":"<p>\u200b\u8bbe\u200b\\(\\mathbb S^n_{+}\\)\u200b\u8868\u793a\u200b\u5168\u4f53\u200b\\(n\\)\u200b\u9636\u200b\u5bf9\u79f0\u200b\u534a\u200b\u6b63\u5b9a\u200b\u77e9\u9635\u200b\u7684\u200b\u96c6\u5408\u200b\uff0c\u200b\u5219\u200b\\(\\mathbb S^n_+\\)\u200b\u662f\u200b\u4e00\u4e2a\u200b\u51f8\u9525\u200b\u3002\uff08\u200b\u6ce8\u610f\u200b\u6b64\u5904\u200b\u5bf9\u200b\u9525\u200b\u7684\u200b\u7406\u89e3\u200b\u548c\u200b\u8303\u6570\u200b\u9525\u200b\u4e0d\u540c\u200b\uff09\u3002</p> \\[ A\\succeq 0, B\\succeq 0\\Longrightarrow x^\\top (\\theta_1 A + \\theta_2 B)x \\geq 0\\Longrightarrow (\\theta_1A + \\theta_2B)\\succeq 0 \\]"},{"location":"math/convex-optimization/convex-set/#_13","title":"\u4fdd\u51f8\u200b\u8fd0\u7b97","text":"<p>\u200b\u4fdd\u51f8\u200b\u8fd0\u7b97\u200b\u662f\u200b\u5728\u200b\u8fd0\u7b97\u200b\u524d\u540e\u200b\u4fdd\u6301\u200b\u96c6\u5408\u200b\u51f8\u6027\u200b\u7684\u200b\u8fd0\u7b97\u200b\u3002</p> <ol> <li>\u200b\u90e8\u5206\u200b\u548c\u200b\\(\\{(x, y_1 + y_2) | (x, y_1) \\in A, (x, y_2)\\in B\\}\\)\uff0c\u200b\u6709\u200b\u4e24\u79cd\u200b\u6781\u7aef\u200b\u60c5\u51b5\u200b</li> <li>\\(\\dim y_1 = \\dim y_2 = 0\\)\u200b\u65f6\u200b\u9000\u5316\u200b\u4e3a\u4ea4\u200b\u8fd0\u7b97\u200b\\(\\cap\\)\uff1a\u200b\u4e00\u4e2a\u200b\u51f8\u96c6\u200b\u53ef\u4ee5\u200b\u8868\u793a\u200b\u4e3a\u200b\u4e00\u7cfb\u5217\u200b\u534a\u200b\u7a7a\u95f4\u200b\u7684\u200b\u4ea4\u96c6\u200b\u3002</li> <li>\\(\\dim x = 0\\)\u200b\u65f6\u200b\u9000\u5316\u200b\u4e3a\u200b\u548c\u200b\\(+: A + B = \\{x + y | x\\in A, y\\in B\\}\\)\u3002</li> <li>\u200b\u7ebf\u6027\u53d8\u6362\u200b\\(f: \\mathbb R^n\\rightarrow \\mathbb R^m = Ax + b\\)\u3002</li> <li>\u200b\u76f4\u79ef\u200b\\(\\times, A\\times B = \\{(x, y) | x\\in A, y\\in B\\}\\)\u3002</li> <li>\u200b\u6295\u5f71\u200b\u51fd\u6570\u200b\\(P: \\mathbb R^n\\times \\mathbb R_}\\rightarrow \\mathbb R^n\\)\uff0c\\(P(z, t) = z / t\\)\u3002\u200b\u6295\u5f71\u200b\u51fd\u6570\u200b\u5c06\u200b\\(\\mathbb R^{n}\\times \\mathbb R_{\\)\u200b\u7a7a\u95f4\u200b\u4e2d\u200b\u7684\u200b\u70b9\u200b\u6295\u5f71\u200b\u5230\u200b\u5e73\u9762\u200b\\(x_{n+1} = 1\\)\u200b\u4e0a\u200b\u3002 <li>\u200b\u7ebf\u6027\u53d8\u6362\u200b\u548c\u200b\u6295\u5f71\u200b\u51fd\u6570\u200b\u7684\u200b\u7ec4\u5408\u200b\uff0c\u200b\u79f0\u4e3a\u200b\u7ebf\u6027\u200b\u5206\u5f0f\u200b\u51fd\u6570\u200b\u3002</li>"},{"location":"math/convex-optimization/convex-set/#_14","title":"\u5e7f\u4e49\u200b\u4e0d\u7b49\u5f0f","text":"<p>\u200b\u5b9a\u4e49\u200b\u6b63\u5e38\u200b\u9525\u4e3a\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6761\u4ef6\u200b\u7684\u200b\u9525\u200b\uff1a</p> <ul> <li>\u200b\u662f\u200b\u51f8\u200b\u9525\u200b\u3002</li> <li>\u200b\u662f\u200b\u95ed\u96c6\u200b\uff08\u200b\u5b58\u5728\u200b\u8fb9\u754c\u200b\uff09</li> <li>\u200b\u5b58\u5728\u200b\u5185\u90e8\u200b\u3002</li> <li>\u200b\u4e0d\u200b\u5305\u542b\u200b\u76f4\u7ebf\u200b\uff08\\(x\\in K, -x\\in K\\Longleftrightarrow x = 0\\)\uff09</li> </ul> <p>\u200b\u6b63\u5e38\u200b\u9525\u200b\\(K\\)\u200b\u53ef\u4ee5\u200b\u5728\u200b\u7a7a\u95f4\u200b\\(\\mathbb R^n\\)\u200b\u4e0a\u200b\u5b9a\u4e49\u200b\u5e7f\u4e49\u200b\u4e0d\u7b49\u5f0f\u200b\uff1a</p> \\[ \\begin{gathered}     x \\preceq_K y \\triangleq y - x\\in K \\\\     x \\prec_K y \\triangleq y - x\\in K^\\circ \\end{gathered} \\] <ul> <li>\u200b\u82e5\u200b\\(K = \\mathbb R_+\\)\uff0c\u200b\u5e7f\u4e49\u200b\u4e0d\u7b49\u5f0f\u200b\u7b49\u4ef7\u200b\u4e8e\u200b\u5b9e\u6570\u200b\u57df\u200b\u4e0a\u200b\u7684\u200b\u4e0d\u7b49\u5f0f\u200b\u3002</li> <li>\u200b\u82e5\u200b\\(K = \\mathbb R^n_+\\)\uff0c\u200b\u5e7f\u4e49\u200b\u4e0d\u7b49\u5f0f\u200b\u7b49\u4ef7\u200b\u4e8e\u200b\\(\\mathbb R^n\\)\u200b\u7a7a\u95f4\u200b\u4e2d\u200b\u5411\u91cf\u200b\u7684\u200b\u5206\u91cf\u200b\u4e0d\u7b49\u5f0f\u200b\u3002</li> <li>\u200b\u82e5\u200b\\(K = \\mathbb S^n_+\\)\uff0c\u200b\u5e7f\u4e49\u200b\u4e0d\u7b49\u5f0f\u200b\u7b49\u4ef7\u200b\u4e8e\u200b\u77e9\u9635\u200b\u4e0d\u7b49\u5f0f\u200b\u3002</li> </ul> <p>\u200b\u5e7f\u4e49\u200b\u4e0d\u7b49\u5f0f\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6027\u8d28\u200b</p> <ul> <li>\\(x\\preceq_K y, u\\preceq_K v\\Longrightarrow x + u\\preceq_K y + v\\)\uff0c\u200b\u5bf9\u200b\\(\\prec_K\\)\u200b\u4e5f\u200b\u6210\u7acb\u200b\u3002</li> <li>\\(x\\preceq_K y, y\\preceq_K z\\Longrightarrow x\\preceq_K z\\)\uff0c\u200b\u5bf9\u200b\\(\\prec_K\\)\u200b\u4e5f\u200b\u6210\u7acb\u200b\u3002</li> <li>\\(x\\preceq_K y, \\alpha\\geq 0\\Longrightarrow \\alpha x\\preceq_K \\alpha y\\)\uff0c\u200b\u5f53\u200b\\(\\alpha &gt; 0\\)\u200b\u65f6\u200b\u5bf9\u200b\\(\\prec_K\\)\u200b\u4e5f\u200b\u6210\u7acb\u200b\u3002</li> <li>\\(x\\prec_K y\\Longrightarrow x\\preceq_K y\\)</li> <li>\\(x\\preceq_K x, x\\not\\prec_K x\\)</li> <li>\\(x\\preceq_K y, y\\preceq_K x\\Longrightarrow x = y\\)</li> <li>\\(\\forall i\\in \\mathbb N, x_i\\preceq_K y_i, \\lim_{i\\rightarrow\\infty} x_i = x, \\lim_{i\\rightarrow\\infty} y_i = y\\Longrightarrow x\\preceq_K y\\)</li> <li>\\(x\\preceq_K y\\Longrightarrow \\exists u, \\exists v, x + u\\prec_K y+ v\\)</li> </ul> <p>\u200b\u5e7f\u4e49\u200b\u4e0d\u7b49\u5f0f\u200b\u4e0d\u662f\u200b\u7ebf\u6027\u200b\u7684\u200b\uff0c\u200b\u5373\u200b\\(\\exists x, \\exists y, x\\not \\preceq_K y, y\\not \\preceq_K x\\)\uff0c\u200b\u6b64\u65f6\u200b\u79f0\u200b\\(x, y\\)\u200b\u4e0d\u53ef\u200b\u6bd4\u200b\u3002</p> <p>\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u504f\u5e8f\u200b\u5173\u7cfb\u200b\u540e\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5728\u200b\u6b64\u57fa\u7840\u200b\u4e0a\u200b\u5b9a\u4e49\u200b\u6781\u5c0f\u503c\u200b\u4e0e\u200b\u6700\u5c0f\u503c\u200b\u3002</p> <ul> <li>\\(x\\in S\\)\u200b\u662f\u200b\u6700\u5c0f\u200b\u5143\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(S\\subseteq \\{y | y\\succeq_K x\\}\\)\uff0c\u200b\u5373\u200b\\(S\\)\u200b\u4e2d\u200b\u5143\u7d20\u200b\u5168\u90e8\u200b\u4e0e\u200b\\(x\\)\u200b\u53ef\u6bd4\u200b\u4e14\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b\\(x\\)\u3002</li> <li>\\(x\\in S\\)\u200b\u662f\u200b\u6781\u5c0f\u200b\u5143\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(S\\cap \\{y | y\\preceq_K x\\} = \\{x\\}\\)\uff0c\u200b\u5373\u200b\\(S\\)\u200b\u4e2d\u200b\u4e0d\u200b\u5b58\u5728\u200b\u548c\u200b\\(x\\)\u200b\u53ef\u6bd4\u200b\u4e14\u200b\u6bd4\u200b\\(x\\)\u200b\u66f4\u200b\u5c0f\u200b\u7684\u200b\u5143\u7d20\u200b\u3002</li> </ul>"},{"location":"math/convex-optimization/convex-set/#_15","title":"\u8d85\u5e73\u9762\u200b\u4e0e\u200b\u51f8\u96c6","text":""},{"location":"math/convex-optimization/convex-set/#_16","title":"\u5206\u79bb\u200b\u8d85\u5e73\u9762","text":"<p>\u200b\u7ed9\u5b9a\u200b\u51f8\u96c6\u200b\\(A, B\\)\u200b\u6ee1\u8db3\u200b\\(A\\cap B = \\varnothing\\)\uff0c\u200b\u5219\u200b\u5b58\u5728\u200b\\(a\\in \\mathbb R^n, b\\in \\mathbb R, a\\not = 0\\)\u200b\u4f7f\u5f97\u200b</p> \\[ \\forall x\\in A, \\forall y\\in B, a^\\top x - b\\leq 0, a^\\top y - b\\geq 0 \\] <p>\u200b\u79f0\u200b\\(\\{x | a^\\top x = b\\}\\)\u200b\u4e3a\u200b\u96c6\u5408\u200b\\(A, B\\)\u200b\u7684\u200b\u5206\u79bb\u200b\u8d85\u5e73\u9762\u200b\u3002</p> <p>\u200b\u82e5\u200b\u8d85\u5e73\u9762\u200b\\(\\{x | a^\\top x = b\\}\\)\u200b\u6ee1\u8db3\u200b</p> \\[ \\forall x\\in A, \\forall y\\in B, a^\\top x - b &lt; 0, a^\\top y - b &gt; 0 \\] <p>\u200b\u79f0\u200b\\(\\{x | a^\\top x = b\\}\\)\u200b\u4e25\u683c\u200b\u5206\u79bb\u200b\\(A, B\\)\uff0c\u200b\u4e25\u683c\u200b\u5206\u79bb\u200b\u7684\u200b\u8d85\u5e73\u9762\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u5b58\u5728\u200b\u3002</p> \u200b\u4e0d\u200b\u5b58\u5728\u200b\u4e25\u683c\u200b\u5206\u79bb\u200b\u7684\u200b\u4f8b\u5b50\u200b <p>\u200b\u8bbe\u200b\u96c6\u5408\u200b\\(A = \\{(x, y) | xy\\geq 1\\}, B = \\{(x, y) | x\\leq 0, y\\geq 0\\}\\)\uff0c\u200b\u5219\u200b\u96c6\u5408\u200b\\(A, B\\)\u200b\u88ab\u200b\u8d85\u5e73\u9762\u200b\\(\\{(x, y) | x = 0\\}\\)\u200b\u548c\u200b\\(\\{(x, y) | y = 0\\}\\)\u200b\u5206\u79bb\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u200b\u5b58\u5728\u200b\u4e25\u683c\u200b\u5206\u79bb\u200b\u4e24\u4e2a\u200b\u96c6\u5408\u200b\u7684\u200b\u8d85\u5e73\u9762\u200b\u3002</p> <p></p> <p>\u200b\u540c\u7406\u200b\uff0c\\(\\{(x, y) | y\\leq \\ln x\\}\\)\u200b\u548c\u200b\\(\\{(x, y) | x\\leq 0\\}\\)\u200b\u4e4b\u95f4\u200b\u4e5f\u200b\u4e0d\u200b\u5b58\u5728\u200b\u4e25\u683c\u200b\u5206\u79bb\u200b\u7684\u200b\u8d85\u5e73\u9762\u200b</p> <p>\u200b\u8d85\u5e73\u9762\u200b\u5206\u79bb\u200b\u7684\u200b\u9006\u5b9a\u7406\u200b\u4e0d\u200b\u6210\u7acb\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-set/#_17","title":"\u652f\u6491\u200b\u8d85\u5e73\u9762","text":"<p>\u200b\u8bbe\u200b\u96c6\u5408\u200b\\(C\\subseteq \\mathbb R^n\\)\uff0c\u200b\u5bf9\u4e8e\u200b\\(x_0\\in \\partial C\\)\uff0c\u200b\u82e5\u200b\u5b58\u5728\u200b\\(a\\not = 0\\)\u200b\u6ee1\u8db3\u200b</p> \\[ \\forall x\\in C, a^\\top x\\leq a^\\top x_0 \\] <p>\u200b\u79f0\u200b\\(\\{x| a^\\top x = a^\\top x_0\\}\\)\u200b\u4e3a\u200b\\(C\\)\u200b\u5728\u200b\\(x_0\\)\u200b\u5904\u200b\u7684\u200b\u652f\u6491\u200b\u8d85\u5e73\u9762\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u8fb9\u754c\u200b\u4e0a\u200b\u7684\u200b\u67d0\u4e2a\u200b\u70b9\u200b\uff0c\u200b\u652f\u6491\u200b\u8d85\u5e73\u9762\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u552f\u4e00\u200b\u3002</p> <p>\u200b\u82e5\u200b\u96c6\u5408\u200b\\(C\\)\u200b\u662f\u200b\u51f8\u96c6\u200b\uff0c\u200b\u5219\u200b\u5176\u200b\u8fb9\u754c\u200b\u4e0a\u200b\u6240\u6709\u200b\u70b9\u200b\u90fd\u200b\u5b58\u5728\u200b\u4e00\u4e2a\u200b\u652f\u6491\u200b\u8d85\u5e73\u9762\u200b\u3002\u200b\u7ed9\u5b9a\u200b\\(C\\)\u200b\u662f\u200b\u95ed\u96c6\u4e14\u200b\\(C^\\circ\\not =\\varnothing\\)\uff0c\u200b\u5219\u200b\u9006\u5b9a\u7406\u200b\u4e5f\u200b\u6210\u7acb\u200b\u3002</p>"},{"location":"math/convex-optimization/convex-set/#_18","title":"\u5bf9\u5076\u200b\u9525","text":"<p>\u200b\u7ed9\u5b9a\u200b\u9525\u200b\\(K\\)\uff0c\u200b\u82e5\u200b\\(K^*\\)\u200b\u6ee1\u8db3\u200b</p> \\[ y\\in K^* \\Longleftrightarrow \\forall x\\in K, x^\\top y\\geq 0 \\] <p>\u200b\u79f0\u200b\\(K^*\\)\u200b\u4e3a\u200b\\(K\\)\u200b\u7684\u200b\u5bf9\u5076\u200b\u9525\u200b\u3002\u200b\u5bf9\u5076\u200b\u9525\u200b\u5fc5\u5b9a\u200b\u662f\u200b\u51f8\u200b\u9525\u200b\u3002</p> \u200b\u5bf9\u5076\u200b\u9525\u200b\u7684\u200b\u51f8\u6027\u200b <p>\u200b\u7ed9\u5b9a\u200b\u9525\u200b\\(K\\)\uff0c\u200b\u6709\u200b\\(\\forall x\\in K, \\forall \\theta\\geq 0, \\theta x \\in K\\)\uff0c\u200b\u5219\u200b\u5bf9\u4e8e\u200b\u4efb\u610f\u200b\\(y\\in K^*\\)</p> \\[ \\theta x^\\top y = x^\\top (\\theta y)\\geq 0\\Longrightarrow \\theta y\\in K^* \\] <p>\u200b\u56e0\u6b64\u200b\\(K^*\\)\u200b\u662f\u200b\u9525\u200b\u3002\u200b\u8bbe\u200b\\(y_1, y_2\\in K^*, x\\in K, 0\\leq \\theta\\leq 1\\)\uff0c\u200b\u5219\u200b</p> \\[ x^\\top (\\theta y_1)\\geq 0, x^\\top(1 - \\theta)y_2\\geq 0\\Longrightarrow x^\\top (\\theta y_1 + (1 - \\theta)y_2)\\geq 0 \\] <p>\u200b\u56e0\u6b64\u200b\\(K^*\\)\u200b\u662f\u200b\u51f8\u200b\u7684\u200b\u3002</p> <p>\u200b\u5bf9\u5076\u200b\u9525\u200b\u53ef\u80fd\u200b\u548c\u200b\u539f\u9525\u200b\u76f8\u7b49\u200b\uff0c\u200b\u5982\u200b\\(\\mathbb R^n_{+}, \\mathbb S^n_{+}\\)\u200b\u7684\u200b\u5bf9\u5076\u200b\u5206\u522b\u200b\u662f\u200b\u5176\u200b\u672c\u8eab\u200b\u3002</p> <ul> <li>\\(K^*\\)\u200b\u662f\u200b\u95ed\u51f8\u200b\u9525\u200b\u3002</li> <li>\\(K_1\\subseteq K_2\\Longrightarrow K_2^*\\subseteq K_1^*\\)</li> <li>\u200b\u82e5\u200b\\(K^\\circ\\not = \\varnothing\\)\uff0c\u200b\u5219\u200b\\(K^*\\)\u200b\u662f\u200b\u5c16\u200b\u7684\u200b\u3002</li> <li>\u200b\u82e5\u200b\\(\\mathbf{cl}K\\)\u200b\u662f\u200b\u5c16\u200b\u7684\u200b\uff0c\u200b\u5219\u200b\\((K^*)^\\circ\\not = \\varnothing\\)</li> <li>\\(K^{**} = \\mathbf{cl}K\\)</li> </ul> <p>\u200b\u5bf9\u4e8e\u200b\u6b63\u5e38\u200b\u9525\u200b\\(K\\)\uff0c\u200b\u5b58\u5728\u200b\u4e00\u4e2a\u200b\u5bf9\u5076\u200b\u9525\u200b\\(K^*\\)\uff0c\u200b\u4e24\u8005\u200b\u90fd\u200b\u80fd\u200b\u7528\u4e8e\u200b\u5b9a\u4e49\u200b\u5e7f\u4e49\u200b\u4e0d\u7b49\u5f0f\u200b\\(\\preceq_K\\)\uff0c\u200b\u79f0\u200b\\(\\preceq_{K^*}\\)\u200b\u4e3a\u200b\\(\\preceq_K\\)\u200b\u7684\u200b\u5bf9\u5076\u200b\u3002</p> <p>\u200b\u5e7f\u4e49\u200b\u4e0d\u7b49\u5f0f\u200b\u7684\u200b\u5bf9\u5076\u200b\\(\\preceq_{K^*}\\)\u200b\u6ee1\u8db3\u200b</p> <ul> <li>\\(x\\preceq_K y\\Longleftrightarrow \\forall \\lambda\\succeq_{K^*}0, \\lambda^\\top x\\leq \\lambda^\\top y\\)</li> <li>\\(x\\prec_K y\\Longleftrightarrow \\forall \\lambda\\succeq_{K^*}0, \\lambda\\not = 0, \\lambda^\\top x &lt; \\lambda^\\top y\\)</li> </ul> <p>\u200b\u5bf9\u4e8e\u200b\u96c6\u5408\u200b\\(S\\)\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\\(x\\in S\\)\uff1a</p> <ul> <li>\\(x\\)\u200b\u5173\u4e8e\u200b\\(\\preceq_K\\)\u200b\u662f\u200b\u6700\u5c0f\u200b\u5143\u200b\u7b49\u4ef7\u200b\u4e8e\u200b\\(\\forall \\lambda \\succeq_{K^\\ast}0\\)\uff0c\\(x\\)\u200b\u662f\u200b\u6781\u5c0f\u200b\u5316\u200b\\(\\lambda^\\top z, z\\in S\\)\u200b\u7684\u200b\u552f\u4e00\u200b\u6700\u4f18\u200b\u89e3\u200b\uff0c\u200b\u5373\u200b\\(\\forall \\lambda \\succeq_{K^\\ast}0, \\{z | \\lambda^\\top x = \\lambda^\\top z\\}\\)\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e25\u683c\u200b\u652f\u6491\u200b\u8d85\u5e73\u9762\u200b\u3002</li> <li>\u200b\u82e5\u200b\\(x\\)\u200b\u5173\u4e8e\u200b\\(\\preceq_K\\)\u200b\u662f\u200b\u6781\u5c0f\u200b\u5143\u200b\uff0c\u200b\u5219\u200b\u5b58\u5728\u200b\\(\\lambda\\succ_{K^*} 0\\)\uff0c\\(\\forall z\\in S, \\lambda^\\top z\\geq \\lambda^\\top x\\)\uff0c\u200b\u4e5f\u200b\u5373\u200b\u5b58\u5728\u200b\u4e00\u4e2a\u200b\u4e25\u683c\u200b\u652f\u6491\u200b\u8d85\u5e73\u9762\u200b\u3002\u200b\u5f53\u200b\\(S\\)\u200b\u4e3a\u200b\u51f8\u200b\u96c6\u65f6\u200b\uff0c\u200b\u9006\u5b9a\u7406\u200b\u5bf9\u4e8e\u200b\u5b58\u5728\u200b\\(\\lambda\\succeq_{K^*}0\\)\u200b\u6210\u7acb\u200b\u3002</li> </ul>"},{"location":"math/convex-optimization/duality/","title":"\u5bf9\u5076","text":""},{"location":"math/convex-optimization/duality/#_2","title":"\u62c9\u683c\u6717\u200b\u65e5\u200b\u5bf9\u200b\u5076\u51fd\u6570","text":"\\[ \\optim{\\min}{f_0(x)}{\\cases{\\begin{aligned}     &amp; f_i(x)\\leq 0 &amp; i = \\oneto m \\\\     &amp; h_i(x) = 0 &amp; i = \\oneto p \\end{aligned}}} \\label{1} \\] <p>\u200b\u5bf9\u4e8e\u200b\u4e00\u4e2a\u200b\u5f62\u200b\u5982\u200b\\(\\eqref{1}\\)\u200b\u7684\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\uff08\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u662f\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\uff09\uff0c\u200b\u5176\u200b\u62c9\u683c\u6717\u200b\u65e5\u200b\u51fd\u6570\u200b\u4e3a\u200b\\(L: \\bbR^n\\times \\bbR^m\\times \\bbR^p\\)\uff0c\u200b\u5176\u4e2d\u200b\\(\\lambda, \\nu\\)\u200b\u4e3a\u200b\u5411\u91cf\u200b\uff0c\u200b\u79f0\u4e3a\u200b\u62c9\u683c\u6717\u200b\u65e5\u200b\u4e58\u5b50\u200b\u5411\u91cf\u200b\u3002</p> \\[ L(x, \\lambda, \\nu) = f_0(x) + \\sum_{i=1}^m \\lambda_if_i(x) + \\sum_{i=1}^p\\nu_i h_i(x) \\label{2} \\] <p>\\(\\eqref{2}\\)\u200b\u5173\u4e8e\u200b\\(x\\)\u200b\u7684\u200b\u6700\u5c0f\u503c\u200b\\(g(\\lambda, \\nu)\\)\u200b\u79f0\u4e3a\u200b\u62c9\u683c\u6717\u200b\u65e5\u200b\u5bf9\u200b\u5076\u51fd\u6570\u200b\u3002</p> \\[ g(\\lambda, \\nu) = \\inf_{x\\in \\calD}\\left(f_0(x) + \\sum_{i=1}^m \\lambda_if_i(x) + \\sum_{i=1}^p\\nu_i h_i(x)\\right) \\label{3} \\] <p>\u200b\u62c9\u683c\u6717\u200b\u65e5\u200b\u5bf9\u200b\u5076\u51fd\u6570\u200b\u662f\u200b\u539f\u200b\u95ee\u9898\u200b\u6700\u4f18\u200b\u503c\u200b\u7684\u200b\u4e0b\u754c\u200b\uff1a\\(\\forall \\lambda \\succeq 0, \\forall \\nu, g(\\lambda, \\nu)\\leq p^*\\)\uff0c\u200b\u5e76\u4e14\u200b\u662f\u200b\u51f9\u200b\u51fd\u6570\u200b\u3002\u200b\u62c9\u683c\u6717\u200b\u65e5\u200b\u5bf9\u200b\u5076\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u7531\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\\(f_0\\)\u200b\u7684\u200b\u5171\u8f6d\u200b\u51fd\u6570\u200b\u8868\u793a\u200b\u3002</p>"},{"location":"math/convex-optimization/duality/#_3","title":"\u62c9\u683c\u6717\u200b\u65e5\u200b\u5bf9\u5076\u200b\u95ee\u9898","text":"<p>\u200b\u8bb0\u200b\\(\\eqref{1}\\)\u200b\u7684\u200b\uff08\u200b\u62c9\u683c\u6717\u200b\u65e5\u200b\uff09\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u4e3a\u200b\uff1a</p> \\[ \\optim{\\max}{g(\\lambda, \\nu)}{\\lambda \\succeq 0} \\] <p>\u200b\u5176\u200b\u6700\u4f18\u200b\u89e3\u200b\\((\\lambda^*, \\nu^*)\\)\u200b\u79f0\u4e3a\u200b\u5176\u200b\u5bf9\u5076\u200b\u6700\u4f18\u200b\u89e3\u200b\u3002\u200b\u62c9\u683c\u6717\u200b\u65e5\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u662f\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u3002</p> <p>\u200b\u6807\u51c6\u200b\u7ebf\u6027\u89c4\u5212\u200b\u7684\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b</p> <p>\u200b\u8003\u8651\u200b\u6807\u51c6\u200b\u5f62\u5f0f\u200b\u7684\u200b\u7ebf\u6027\u89c4\u5212\u200b\u95ee\u9898\u200b</p> \\[ \\optim{\\min}{c^\\top x}{\\cases{\\begin{aligned}     &amp; Ax = b \\\\     &amp; x\\succeq 0 \\end{aligned}}} \\] <p>\u200b\u62c9\u683c\u6717\u200b\u65e5\u200b\u5bf9\u200b\u5076\u51fd\u6570\u200b\u4e3a\u200b</p> \\[ \\begin{aligned}     g(\\lambda, \\nu) &amp;= \\inf_{x}(c^\\top x - \\lambda^\\top x + \\nu^\\top (Ax - b)) \\\\     &amp;= \\inf_{x}(-\\nu^\\top b + (c - \\lambda + A^\\top \\nu)^\\top x) \\\\     &amp;= \\cases{\\begin{aligned}         &amp; -\\nu^\\top b &amp; c - \\lambda + A^\\top\\nu = 0 \\\\         &amp; -\\infty &amp; \\otherwise     \\end{aligned}} \\end{aligned} \\] <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u62c9\u683c\u6717\u200b\u65e5\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u4e3a\u200b</p> \\[ \\optim{\\max}{\\nu^\\top b}{\\cases{\\begin{aligned}     &amp; c - \\lambda + A^\\top \\nu = 0 \\\\     &amp; \\lambda \\succeq 0 \\end{aligned}}} \\] <p>\u200b\u5373\u200b</p> \\[ \\optim{\\max}{\\nu^\\top b}{     c + A^\\top \\nu \\succeq 0 } \\] <p>\u200b\u7ebf\u6027\u89c4\u5212\u200b\u95ee\u9898\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u7684\u200b\u5bf9\u5076\u200b\u7b49\u4ef7\u200b\u4e8e\u539f\u200b\u95ee\u9898\u200b\u3002</p>"},{"location":"math/convex-optimization/duality/#_4","title":"\u5f31\u200b\u5bf9\u5076\u6027","text":"<p>\u200b\u8bb0\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u7684\u200b\u6700\u4f18\u200b\u503c\u4e3a\u200b\\(d^*\\)\u3002\u200b\u6839\u636e\u200b\u5bf9\u200b\u5076\u51fd\u6570\u200b\u7684\u200b\u6027\u8d28\u200b\uff0c\u200b\u6709\u200b\\(d^*\\leq p^*\\)\uff0c\u200b\u6b64\u4e3a\u200b\u5f31\u200b\u5bf9\u5076\u6027\u200b\u3002</p> <ul> <li>\u200b\u82e5\u539f\u200b\u95ee\u9898\u200b\u65e0\u200b\u4e0b\u754c\u200b\uff0c\u200b\u5219\u200b\\(p^* = -\\infty\\)\uff0c\u200b\u6b64\u65f6\u200b\u6709\u200b\\(d^* = -\\infty\\)\uff0c\u200b\u5373\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u4e0d\u200b\u53ef\u884c\u200b\u3002</li> <li>\u200b\u82e5\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u65e0\u4e0a\u754c\u200b\uff0c\u200b\u5219\u200b\\(d^* = \\infty\\)\uff0c\u200b\u6b64\u65f6\u200b\\(p^* = \\infty\\)\uff0c\u200b\u5373\u539f\u200b\u95ee\u9898\u200b\u4e0d\u200b\u53ef\u884c\u200b\u3002</li> </ul> <p>\u200b\u8bb0\u200b\\(p^* - d^*\\geq 0\\)\u200b\u4e3a\u200b\u5bf9\u5076\u200b\u6700\u4f18\u200b\u95f4\u9699\u200b\u3002</p>"},{"location":"math/convex-optimization/duality/#_5","title":"\u5f3a\u200b\u5bf9\u5076\u6027","text":"<p>\u200b\u5f3a\u200b\u5bf9\u5076\u6027\u200b\u5373\u200b\\(p^* - d^* = 0\\)\u3002\u200b\u5f3a\u200b\u5bf9\u5076\u6027\u200b\u5e76\u200b\u4e0d\u662f\u200b\u603b\u200b\u6210\u7acb\u200b\uff0c\u200b\u9700\u8981\u200b\u5bf9\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u65bd\u52a0\u200b\u7ea6\u675f\u200b\u51c6\u5219\u200b\u3002</p> <p>\u200b\u82e5\u200b\uff08\u200b\u4efb\u610f\u200b\uff09\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u6ee1\u8db3\u200bSlater\u200b\u6761\u4ef6\u200b\uff0c\u200b\u5373\u200b\\(\\exists x\\in \\mathbf{relint} \\calD\\)\u200b\u4f7f\u5f97\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u4e25\u683c\u200b\u6210\u7acb\u200b\uff0c\u200b\u5373\u200b</p> \\[ \\cases{\\begin{aligned}     &amp; f_i(x)\\leq 0 &amp; i = \\oneto m \\\\     &amp; Ax = b \\end{aligned}} \\] <p>\u200b\u65f6\u200b\uff0c\u200b\u5f3a\u200b\u5bf9\u5076\u6027\u200b\u6210\u7acb\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u539f\u200b\u95ee\u9898\u200b\u4e2d\u200b\u7684\u200b\u67d0\u4e2a\u200b\u4e0d\u7b49\u5f0f\u200b\u7ea6\u675f\u200b\u662f\u200b\u7ebf\u6027\u200b\u7684\u200b\uff0c\u200b\u5219\u200b\u8fd9\u4e2a\u200b\u7ea6\u675f\u200b\u4e0d\u200b\u9700\u8981\u200b\u6ee1\u8db3\u200b\u4e25\u683c\u200b\u6210\u7acb\u200b\u7684\u200b\u6761\u4ef6\u200b\u3002</p>"},{"location":"math/convex-optimization/duality/#_6","title":"\u51e0\u4f55\u200b\u89e3\u91ca","text":"<p>\u200b\u8bbe\u200b\u96c6\u5408\u200b\\(\\calG = \\{(f_1(x), \\ldots, f_m(x), h_1(x), \\ldots, h_p(x), f_0(x))\\in \\bbR^m\\times \\bbR^p\\times\\bbR | x\\in \\calD\\}\\)\uff0c\u200b\u5219\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u7684\u200b\u6700\u4f18\u200b\u503c\u4e3a\u200b</p> \\[ p^* = \\inf_t\\{(u, v, t)\\in \\calG | u\\preceq 0, v = 0\\} \\] <p>\u200b\u62c9\u683c\u6717\u200b\u65e5\u200b\u5bf9\u200b\u5076\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u8868\u793a\u200b\u4e3a\u200b\\(g(\\lambda, \\nu) = \\inf\\{ (\\lambda, \\nu, 1)^\\top (u, v, t) | (u, v, t)\\in \\calG\\}\\leq (\\lambda, \\nu, 1)^\\top (u, v, t)\\)\uff0c\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u8d85\u5e73\u9762\u200b\uff0c\u200b\u5176\u6cd5\u200b\u5411\u91cf\u200b\u4e3a\u200b\\((\\lambda, \\nu, 1)\\)\uff0c\u200b\u4e0e\u200b\u76f4\u7ebf\u200b\\(u=v=0\\)\u200b\u76f8\u4ea4\u200b\u4e8e\u200b\\((0, 0, g(\\lambda, \\nu))\\)\u3002\u200b\u4e5f\u200b\u5373\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u7684\u200b\u89e3\u200b\u90fd\u200b\u662f\u200b\u96c6\u5408\u200b\\(\\calG\\)\u200b\u7684\u200b\u4e00\u4e2a\u200b\u652f\u6491\u200b\u8d85\u5e73\u9762\u200b\u3002</p> <p>\u200b\u5b9a\u4e49\u200b\\(\\calG\\)\u200b\u7684\u200b\u4e0a\u200b\u5883\u56fe\u200b\\(\\calA = \\calG + \\bbR_\\plus^m\\times\\{0\\}^p\\times \\bbR_\\plus\\)\uff0c\u200b\u5373\u200b</p> \\[ \\calA = \\{(u_0 + x, v_0, t_0 + z) | (u_0, v_0, t_0)\\in \\calG, x\\in \\bbR_\\plus^m, z\\in \\bbR_\\plus\\} \\] <p>\u200b\u5219\u200b\u5bf9\u5e94\u200b\u7684\u200b\u539f\u200b\u95ee\u9898\u200b\u6700\u4f18\u200b\u503c\u4e3a\u200b</p> \\[ p^* = \\inf\\{t | (0, 0, t)\\in \\calA\\} \\] <p>\u200b\u5f3a\u200b\u5bf9\u5076\u6027\u200b\u6210\u7acb\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(\\calA\\)\u200b\u4e2d\u200b\u5b58\u5728\u200b\u4e00\u7ec4\u200b\\((u, v, t)\\in \\mathbf{bd}\\calA\\)\u200b\u4f7f\u5f97\u200b\u5728\u200b\u8be5\u5904\u200b\u7684\u200b\u652f\u6491\u200b\u8d85\u5e73\u9762\u200b\u4e0e\u200b\u5750\u6807\u8f74\u200b\\(u=v=0\\)\u200b\u76f8\u4ea4\u200b\u4e8e\u200b\\((0, 0, p^*)\\)\uff0c\u200b\u4e5f\u200b\u5373\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(\\calA\\)\u200b\u662f\u200b\u51f8\u96c6\u200b\u3002</p>"},{"location":"math/convex-optimization/duality/#_7","title":"\u6700\u5927\u200b\u6700\u5c0f\u200b\u89e3\u91ca","text":"<p>\u200b\u8bbe\u200b\\(p = 0\\)\u3002\u200b\u5219\u200b\u539f\u200b\u95ee\u9898\u200b\u53ef\u4ee5\u200b\u5199\u4f5c\u200b\u5982\u4e0b\u200b\u5f62\u5f0f\u200b\u7684\u200b\u65e0\u7ea6\u675f\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\uff1a</p> \\[ \\optim{\\min}{\\sup_{\\lambda\\succeq 0}L(x, \\lambda)}{x\\in \\bbR^n} \\] <p>\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u53ef\u4ee5\u200b\u5199\u4f5c\u200b\u5982\u4e0b\u200b\u5f62\u5f0f\u200b\u7684\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\uff1a</p> \\[ \\optim{\\max}{\\inf_{x} L(x, \\lambda)}{\\lambda\\succeq 0} \\] <p>\u200b\u56e0\u6b64\u200b\u5f31\u200b\u5bf9\u5076\u6027\u200b\u53ef\u4ee5\u200b\u5199\u4f5c\u200b</p> \\[ \\sup_{\\lambda\\succeq 0}\\inf_{x}L(x, \\lambda) \\leq \\inf_{x}\\sup_{\\lambda\\succeq 0}L(x, \\lambda) \\] <p>\u200b\u5f3a\u200b\u5bf9\u5076\u6027\u200b\u53ef\u4ee5\u200b\u5199\u4f5c\u200b</p> \\[ \\sup_{\\lambda\\succeq 0}\\inf_{x}L(x, \\lambda) = \\inf_{x}\\sup_{\\lambda\\succeq 0}L(x, \\lambda) \\] <p>\u200b\u5373\u200b\\(L(x, \\lambda)\\)\u200b\u6ee1\u8db3\u200b\u978d\u70b9\u200b\u6027\u8d28\u200b\u3002</p>"},{"location":"math/convex-optimization/duality/#_8","title":"\u6700\u4f18\u6027\u200b\u6761\u4ef6","text":"<p>\u200b\u5982\u679c\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u5b58\u5728\u200b\u4e00\u4e2a\u200b\u53ef\u884c\u200b\u89e3\u200b\\((\\lambda, \\nu)\\)\uff0c\u200b\u5219\u200b\u8bf4\u660e\u200b\u539f\u200b\u95ee\u9898\u200b\u7684\u200b\u6700\u4f18\u200b\u503c\u200b\u6ee1\u8db3\u200b\\(p^*\\geq g(\\lambda, \\nu)\\)\u3002\u200b\u6b64\u65f6\u200b\u5bf9\u4e8e\u200b\u4e00\u4e2a\u200b\u53ef\u884c\u200b\u89e3\u200b\\(x\\)\uff0c\\(x\\)\u200b\u662f\u200b\u4e00\u4e2a\u200b\\(\\varepsilon = f_0(x) - g(\\lambda, \\nu)\\)-\u200b\u6b21\u4f18\u200b\u89e3\u200b\u3002\u200b\u79f0\u200b\u6b64\u5904\u200b\u7684\u200b\\(f_0(x) - g(\\lambda, \\nu)\\)\u200b\u4e3a\u200b\u5bf9\u5076\u200b\u95f4\u9699\u200b\u3002</p> <p>\u200b\u539f\u200b\u95ee\u9898\u200b\u548c\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u7684\u200b\u6700\u4f18\u200b\u503c\u200b\u6ee1\u8db3\u200b</p> \\[ p^*\\in [g(\\lambda, \\nu), f_0(x)]\\qquad d^*\\in [g(\\lambda, \\nu), f_0(x)] \\] <p>\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u5f97\u51fa\u200b\u63a8\u8bba\u200b\uff1a\u200b\u82e5\u200b\\(f_0(x) = g(\\lambda, \\nu)\\)\uff0c\u200b\u5219\u200b\u6709\u200b\\(p^*=d^*=f_0(x)\\)</p>"},{"location":"math/convex-optimization/duality/#_9","title":"\u4e92\u8865\u200b\u677e\u5f1b\u200b\u6027","text":"<p>\u200b\u5f53\u5f3a\u200b\u5bf9\u5076\u6027\u200b\u6210\u7acb\u200b\u65f6\u200b\uff0c\u200b\u4e92\u8865\u200b\u677e\u5f1b\u200b\u6027\u6307\u200b\u5bf9\u4e8e\u200b\u539f\u200b\u95ee\u9898\u200b\u6700\u4f18\u200b\u89e3\u200b\\(x^*\\)\u200b\u53ca\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u6700\u4f18\u200b\u89e3\u200b\\(\\lambda^* = (\\lambda_1^*, \\ldots, \\lambda_m^*)\\)\uff0c\u200b\u6ee1\u8db3\u200b</p> \\[ \\lambda_i^* &gt; 0 \\Lora f_i(x^*) = 0 \\] <p>\u200b\u5373\u200b\u5bf9\u5076\u200b\u6700\u4f18\u200b\u89e3\u4e2d\u200b\u7684\u200b\u975e\u200b\u96f6\u200b\u5206\u91cf\u200b\u5bf9\u5e94\u200b\u539f\u200b\u95ee\u9898\u200b\u4e2d\u200b\u7684\u200b\u7d27\u200b\u7ea6\u675f\u200b\u3002</p>"},{"location":"math/convex-optimization/duality/#kkt","title":"KKT\u200b\u6700\u4f18\u200b\u6761\u4ef6","text":"<p>\u200b\u8bbe\u539f\u200b\u95ee\u9898\u200b\u7684\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u548c\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u5747\u200b\u53ef\u5fae\u200b\uff0c\\(x^*\\)\u200b\u4e3a\u539f\u200b\u95ee\u9898\u200b\u6700\u4f18\u200b\u89e3\u200b\uff0c\\(\\lambda^*, \\nu^*\\)\u200b\u4e3a\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u6700\u4f18\u200b\u89e3\u200b\uff0c\u200b\u4e14\u200b\u5f3a\u200b\u5bf9\u5076\u6027\u200b\u6210\u7acb\u200b\uff0c\u200b\u5219\u200b\u62c9\u683c\u6717\u200b\u65e5\u200b\u51fd\u6570\u200b\\(L(x, \\lambda^*, \\nu^*)\\)\u200b\u5728\u200b\\(x^*\\)\u200b\u5904\u200b\u53d6\u5f97\u200b\u6700\u5c0f\u503c\u200b\uff0c\u200b\u5219\u200b</p> \\[ \\nabla L(x^*, \\lambda^*, \\nu^*) = 0 \\] <p>\u200b\u7efc\u5408\u200b\u5176\u5b83\u200b\u7ea6\u675f\u6761\u4ef6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200bKKT\u200b\u6700\u4f18\u200b\u6761\u4ef6\u200b\u3002</p> \\[ \\cases{ \\begin{aligned}     f_i(x^*) &amp; \\leq 0 &amp; \\text{\uff08\u200b\u4e0d\u7b49\u5f0f\u200b\u7ea6\u675f\u200b\uff09} \\\\     h_i(x^*) &amp; = 0 &amp; \\text{\uff08\u200b\u7b49\u5f0f\u200b\u7ea6\u675f\u200b\uff09} \\\\     \\lambda_i^* &amp; \\geq 0 &amp; \\text{\uff08\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u7ea6\u675f\u200b\uff09} \\\\     \\lambda_i^* f_i(x^*) &amp;= 0 &amp; \\text{\uff08\u200b\u4e92\u8865\u200b\u677e\u5f1b\u200b\u6027\u200b\uff09} \\\\     \\nabla L(x^*, \\lambda^*, \\nu^*) &amp;= 0 &amp; \\text{\uff08\u200b\u6700\u4f18\u200b\u6761\u4ef6\u200b\uff09}\\\\ \\end{aligned} } \\] <p>\u200b\u5bf9\u4e8e\u200b\u4efb\u610f\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\uff0c\u200b\u82e5\u5f3a\u200b\u5bf9\u5076\u6027\u200b\u6210\u7acb\u200b\uff0c\u200b\u5219\u200b\u6700\u4f18\u200b\u89e3\u200b\u5fc5\u987b\u200b\u6ee1\u8db3\u200bKKT\u200b\u6761\u4ef6\u200b\uff08\u200b\u53cd\u8fc7\u6765\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u6210\u7acb\u200b\uff09\u3002\u200b\u5bf9\u4e8e\u200b\u6ee1\u8db3\u200b\u5f3a\u200b\u5bf9\u5076\u6027\u200b\u7684\u200b\u51f8\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\uff0c\u200b\u6ee1\u8db3\u200bKKT\u200b\u6761\u4ef6\u200b\u7684\u200b\u70b9\u200b\u662f\u200b\u539f\u200b\u95ee\u9898\u200b\u548c\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u7684\u200b\u6700\u4f18\u200b\u89e3\u200b\u3002</p>"},{"location":"math/convex-optimization/duality/#_10","title":"\u5e7f\u4e49\u200b\u4e0d\u7b49\u5f0f\u200b\u7ea6\u675f\u200b\u7684\u200b\u5bf9\u5076\u200b\u95ee\u9898","text":"<p>\u200b\u8bbe\u539f\u200b\u95ee\u9898\u200b\u4e3a\u200b</p> \\[ \\optim{\\min}{f_0(x)}{\\cases{     \\begin{aligned}         &amp; f_i(x)\\preceq_{K_i} 0 \\\\         &amp; h_i(x) = 0     \\end{aligned} }} \\] <p>\u200b\u62c9\u683c\u6717\u200b\u65e5\u200b\u51fd\u6570\u200b\u4e3a\u200b</p> \\[ L(x, \\lambda, \\nu) = f_0(x) + \\sum_{i=1}^m \\lambda_i^\\top f_i(x) + \\sum_{j=1}^p \\nu_j^\\top h_j(x) \\] <p>\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u4e3a\u200b</p> \\[ \\optim{\\max}{g(\\lambda, \\nu) = \\inf_{x}L(x, \\lambda, \\nu)}{\\lambda_i\\succeq_{K_i^*}0} \\] <p>\u200b\u5728\u200b\u5e7f\u4e49\u200b\u4e0d\u7b49\u5f0f\u200b\u4e0b\u200b\uff0c\u200b\u5f31\u200b\u5bf9\u5076\u6027\u200b\u603b\u662f\u200b\u6210\u7acb\u200b\u3002\u200b\u6ee1\u8db3\u200b\uff08\u200b\u5e7f\u4e49\u200b\uff09Slater\u200b\u6761\u4ef6\u200b\\(\\eqnref{4}\\)\u200b\u65f6\u200b\uff0c\u200b\u5f3a\u200b\u5bf9\u5076\u6027\u200b\u6210\u7acb\u200b\u3002</p> \\[ \\forall i=1,\\ldots, m,\\exists x\\in \\mathbf{relint}\\calD, Ax=b, f_i(x)\\prec_{K_i}0 \\label{4} \\] <p>\u200b\u5f3a\u200b\u5bf9\u5076\u6027\u200b\u6210\u7acb\u200b\u65f6\u200b\uff0c\u200b\u4e92\u8865\u200b\u677e\u5f1b\u200b\u6027\u200b\u548c\u200bKKT\u200b\u6761\u4ef6\u200b\u6210\u7acb\u200b\u3002</p>"},{"location":"math/convex-optimization/unconstrained-optimization/","title":"\u65e0\u7ea6\u675f\u200b\u4f18\u5316","text":"<p>\u200b\u65e0\u7ea6\u675f\u200b\u4f18\u5316\u200b\u662f\u200b\u6307\u200b\u5728\u200b\\(\\bbR^n\\)\u200b\u4e0a\u200b\u6700\u5c0f\u5316\u200b\\(f(x)\\)\u200b\u7684\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u3002\u200b\u4e00\u822c\u6765\u8bf4\u200b\uff0c\\(f: \\bbR^n\\ra \\bbR\\)\u200b\u662f\u200b\u4e8c\u6b21\u200b\u53ef\u5fae\u200b\u7684\u200b\u51f8\u51fd\u6570\u200b\uff0c\u200b\u4e14\u200b\u5728\u200b\\(\\mathbf{dom} f\\)\u200b\u4e0a\u200b\u5b58\u5728\u200b\u6700\u5c0f\u503c\u200b\\(p^*\\)\uff0c\u200b\u4e14\u200b\u552f\u4e00\u200b\u5bf9\u5e94\u200b\u4e00\u4e2a\u200b\u89e3\u4e3a\u200b\\(x^*\\)\u3002\u200b\u6839\u636e\u200b\u6700\u4f18\u6027\u200b\u6761\u4ef6\u200b\uff0c\u200b\u6709\u200b</p> \\[ \\nabla f(x^*) = 0 \\label{1} \\] <p>\\(\\eqref{1}\\)\u200b\u6709\u200b\u4e24\u79cd\u200b\u6c42\u89e3\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5373\u200b\u8fed\u4ee3\u6cd5\u200b\u6c42\u200b\u6570\u503c\u200b\u89e3\u200b\u6216\u200b\u76f4\u63a5\u200b\u6c42\u89e3\u200b\u65b9\u7a0b\u200b\u7684\u200b\u89e3\u6790\u200b\u89e3\u200b\u3002\u200b\u5728\u200b\u90e8\u5206\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\\(\\nabla f\\)\u200b\u53ef\u80fd\u200b\u96be\u4ee5\u200b\u8ba1\u7b97\u200b\uff0c\u200b\u6b64\u65f6\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u8fed\u4ee3\u6cd5\u200b\\(\\eqref{2}\\)\u3002\\(x^{(0)}, x^{(1)}, \\ldots\\)\u200b\u79f0\u4e3a\u200b\\(\\eqref{1}\\)\u200b\u7684\u200b\u6781\u5c0f\u200b\u5316\u70b9\u5217\u200b\u3002</p> \\[ x^{(0)}, x^{(1)}, \\ldots \\qquad \\lim_{k\\ra \\infty} f\\left(x^{(k)}\\right) = p^* \\label{2} \\] <p>\u200b\u5bf9\u4e8e\u200b\u8fed\u4ee3\u6cd5\u200b\uff0c\u200b\u7b97\u6cd5\u200b\u4e0d\u4f1a\u200b\u5728\u200b\u6709\u9650\u200b\u65f6\u95f4\u200b\u5185\u200b\u7ed3\u675f\u200b\u3002\u200b\u4f46\u200b\u5f53\u200b\\(f\\left(x^{(k)}\\right) - p^*\\leq \\varepsilon\\)\u200b\u65f6\u200b\uff0c\u200b\u5373\u53ef\u200b\u8ba4\u4e3a\u200b\u8fbe\u5230\u200b\u6700\u4f18\u200b\u503c\u200b\uff0c\u200b\u7b97\u6cd5\u200b\u7ec8\u6b62\u200b\u3002\u200b\u8fed\u4ee3\u200b\u7b97\u6cd5\u200b\u5bf9\u200b\u521d\u59cb\u200b\u70b9\u200b\\(x_0\\)\u200b\u6709\u200b\u4e00\u5b9a\u200b\u8981\u6c42\u200b\uff0c\u200b\u5373\u200b\\(f\\)\u200b\u5728\u200b\\(x_0\\)\u200b\u5904\u200b\u7684\u200b\u4e0b\u200b\u6c34\u5e73\u200b\u96c6\u662f\u200b\u95ed\u96c6\u200b\u3002</p>"},{"location":"math/convex-optimization/unconstrained-optimization/#_2","title":"\u5f3a\u51f8\u6027","text":"<p>\u200b\u51fd\u6570\u200b\\(f\\)\u200b\u5982\u679c\u200b\u6ee1\u8db3\u200b\u4e00\u9636\u200b\u6761\u4ef6\u200b</p> \\[ f(y)\\geq f(x) + \\nabla f(x)^\\top (y - x) + \\frac{\\gamma}{2} \\Vert y - x\\Vert^2 \\label{3} \\] <p>\u200b\u6216\u200b\u4e8c\u9636\u200b\u6761\u4ef6\u200b</p> \\[ \\nabla^2 f(x)\\succeq \\gamma I \\label{4} \\] <p>\u200b\u5219\u200b\u79f0\u200b\\(f\\)\u200b\u4e3a\u200b\\(\\gamma\\)-\u200b\u5f3a\u200b\u51f8\u51fd\u6570\u200b\u3002\u200b\u5f3a\u200b\u51f8\u51fd\u6570\u200b\u76f8\u8f83\u200b\u4e8e\u200b\u51f8\u51fd\u6570\u200b\uff0c\u200b\u5728\u200b\u6700\u4f18\u200b\u503c\u5904\u200b\u6709\u200b\u66f4\u597d\u200b\u7684\u200b\u6027\u8d28\u200b\u3002</p> \u200b\u6b21\u4f18\u200b\u6027\u200b\u6761\u4ef6\u200b <p>\u200b\u5bf9\u4e8e\u200b\u7ed9\u5b9a\u200b\\(x\\)\uff0c\\(\\eqref{3}\\)\u200b\u662f\u200b\\(y\\)\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u5bf9\u200b\u5176\u6c42\u200b\u68af\u5ea6\u200b\u5f97\u5230\u200b</p> \\[ \\nabla f(y) = \\nabla f(x) + \\gamma(y - x) \\] <p>\u200b\u4ee4\u200b\\(\\nabla f(\\tilde y) = 0\\)\uff0c\u200b\u5219\u200b\\(\\tilde y = x - \\nabla f(x) / \\gamma\\)\u3002\u200b\u6b64\u65f6\u200b\uff0c\u200b\u6709\u200b</p> \\[ f(y)\\geq f(\\tilde y)\\geq f(x) + \\nabla f(x)^\\top (\\tilde y - x) + \\frac{\\gamma}{2} \\Vert\\tilde y - x\\Vert^2 = f(x) - \\frac{1}{2\\gamma}\\Vert \\nabla f(x)\\Vert^2 \\] <p>\u200b\u56e0\u6b64\u200b\uff0c\\(f(x) - p^*\\leq \\frac{1}{2\\gamma}\\Vert \\nabla f(x)\\Vert^2\\)\u3002\u200b\u5373\u200b\u4efb\u4f55\u200b\u68af\u5ea6\u200b\u8db3\u591f\u200b\u5c0f\u200b\u7684\u200b\u70b9\u200b\u90fd\u200b\u662f\u200b\u8fd1\u4f3c\u200b\u6700\u4f18\u200b\u89e3\u200b\u3002</p> \\[ \\Vert\\nabla f(x)\\Vert\\leq \\sqrt{2\\gamma\\varepsilon}\\Lora f(x) - p^*\\leq \\varepsilon \\] <p>\u200b\u6216\u200b</p> \\[ \\Vert x - x^*\\Vert\\leq \\frac{2}{m}\\Vert\\nabla f(x)\\Vert \\] <p>\u200b\u663e\u7136\u200b\uff0c\\(x^*\\)\u200b\u662f\u200b\u552f\u4e00\u200b\u7684\u200b\u3002</p> <p>\u200b\u5728\u200b\u4e0b\u200b\u6c34\u5e73\u200b\u96c6\u200b\\(S\\)\u200b\u4e0a\u200b\uff0c\u200b\u4e8c\u9636\u200b\u68af\u5ea6\u200b\\(\\nabla^2 f\\)\u200b\u5b58\u5728\u200b\u4e0a\u200b\u754c\u200b\\(\\Gamma I\\)\uff0c\u200b\u5b9a\u4e49\u200b\\(\\kappa = \\Gamma / \\gamma\\)\u200b\u4e3a\u200b\\(\\nabla^2 f(x)\\)\u200b\u7684\u200b\u6761\u4ef6\u200b\u6570\u200b\u3002</p>"},{"location":"math/convex-optimization/unconstrained-optimization/#_3","title":"\u4e0b\u964d\u200b\u65b9\u6cd5","text":"<p>\u200b\u53ef\u4ee5\u200b\u6309\u7167\u200b\\(\\eqref{5}\\)\u200b\u7684\u200b\u65b9\u6cd5\u200b\u6784\u9020\u200b\u70b9\u5217\u200b\uff1a</p> \\[ x^{(k+1)} = x^{(k)} + t^{(k)}\\Delta x^{(k)} \\label{5} \\] <p>\u200b\u5176\u4e2d\u200b\u6b65\u957f\u200b\\(t^{(k)} &gt; 0\\)\uff0c\\(\\Delta x\\)\u200b\u4e3a\u200b\u524d\u8fdb\u65b9\u5411\u200b\u3002\u200b\u82e5\u200b\u6ee1\u8db3\u200b\\(f{(k+1)} &lt; f{(k)}\\)\uff0c\u200b\u5219\u200b\u70b9\u5217\u200b\u6784\u6210\u200b\u4e00\u79cd\u200b\u4e0b\u964d\u200b\u65b9\u6cd5\u200b\u3002\u200b\u6839\u636e\u200b\uff08\u200b\u5f3a\u200b\uff09\u200b\u51f8\u51fd\u6570\u200b\u7684\u200b\u6027\u8d28\u200b\uff0c\\(\\Delta x^{(k)}\\)\u200b\u5fc5\u987b\u200b\u6ee1\u8db3\u200b</p> \\[ \\nabla f(x^{(k)})^\\top \\Delta x^{(k)} &lt; 0 \\] <p>\u200b\u5373\u200b\u524d\u8fdb\u65b9\u5411\u200b\u5fc5\u987b\u200b\u80cc\u5bf9\u200b\u68af\u5ea6\u65b9\u5411\u200b\u3002</p>"},{"location":"math/convex-optimization/unconstrained-optimization/#_4","title":"\u7b97\u6cd5\u200b\u8868\u8ff0","text":""},{"location":"math/discrete-mathematics/","title":"\u79bb\u6563\u6570\u5b66","text":"<p>\u200b\u6839\u636e\u200b\u300a\u200b\u6570\u7406\u903b\u8f91\u200b\u4e0e\u200b\u96c6\u5408\u8bba\u200b\u300b\uff0c\u200b\u77f3\u200b\u7eaf\u4e00\u200b\u7b49\u200b\uff0c\u200b\u6e05\u534e\u5927\u5b66\u51fa\u7248\u793e\u200b\u4e0e\u200b\u6e05\u534e\u5927\u5b66\u200b\u8ba1\u7b97\u673a\u7cfb\u200b\u201c\u200b\u79bb\u6563\u6570\u5b66\u200b\u201d\u200b\u8bfe\u7a0b\u200b\u6574\u7406\u200b\u3002</p> <ul> <li>\u200b\u7b2c\u4e00\u7ae0\u200b \u200b\u547d\u9898\u903b\u8f91\u200b\u7684\u200b\u57fa\u672c\u6982\u5ff5\u200b</li> <li>\u200b\u7b2c\u4e8c\u7ae0\u200b \u200b\u547d\u9898\u903b\u8f91\u200b\u7684\u200b\u7b49\u503c\u200b\u548c\u200b\u63a8\u7406\u200b\u6f14\u7b97\u200b</li> <li>\u200b\u7b2c\u4e09\u7ae0\u200b \u200b\u547d\u9898\u903b\u8f91\u200b\u7684\u200b\u516c\u7406\u5316\u200b</li> <li>\u200b\u7b2c\u56db\u7ae0\u200b \u200b\u8c13\u8bcd\u200b\u903b\u8f91\u200b\u7684\u200b\u57fa\u672c\u6982\u5ff5\u200b</li> <li>\u200b\u7b2c\u4e94\u7ae0\u200b \u200b\u8c13\u8bcd\u200b\u903b\u8f91\u200b\u7684\u200b\u7b49\u503c\u200b\u548c\u200b\u63a8\u7406\u200b\u6f14\u7b97\u200b</li> <li>\u200b\u7b2c\u4e5d\u7ae0\u200b \u200b\u96c6\u5408\u200b</li> </ul>"},{"location":"math/discrete-mathematics/chapter-1/","title":"\u547d\u9898\u903b\u8f91\u200b\u7684\u200b\u57fa\u672c\u6982\u5ff5","text":"<p>\u200b\u547d\u9898\u200b\u662f\u200b\u4e00\u4e2a\u200b\u975e\u771f\u200b\u5373\u200b\u5047\u200b\u7684\u200b\u9648\u8ff0\u53e5\u200b\u3002</p> <ul> <li>\u200b\u547d\u9898\u200b\u4e0d\u200b\u53ef\u80fd\u200b\u975e\u771f\u200b\u975e\u5047\u200b\uff0c\u200b\u4e5f\u200b\u4e0d\u200b\u53ef\u80fd\u200b\u65e2\u200b\u771f\u200b\u53c8\u200b\u5047\u200b</li> <li>\u200b\u547d\u9898\u200b\u7684\u200b\u771f\u5047\u200b\u6027\u200b\u53ef\u4ee5\u200b\u5f85\u5b9a\u200b</li> </ul> <p>\u200b\u547d\u9898\u200b\u7684\u200b\u771f\u5047\u200b\u53ef\u4ee5\u200b\u7528\u200bTrue\u200b\u6216\u200bFalse\u200b\u8868\u793a\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7528\u200b1\u200b\u6216\u200b0\u200b\u8868\u793a\u200b</p> <p>\u200b\u547d\u9898\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4e0e\u200b\u3001\u200b\u6216\u200b\u3001\u200b\u975e\u200b\u7b49\u200b\u903b\u8f91\u200b\u8054\u7ed3\u8bcd\u200b\u8fde\u63a5\u200b\uff0c\u200b\u5f97\u5230\u200b\u590d\u5408\u200b\u547d\u9898\u200b</p> <p>\u200b\u5f53\u200b\u4e0d\u200b\u6307\u5b9a\u200b\u547d\u9898\u200b\u7684\u200b\u5177\u4f53\u5185\u5bb9\u200b\u65f6\u200b\uff0c\u200b\u79f0\u8be5\u200b\u547d\u9898\u200b\u4e3a\u200b\u547d\u9898\u200b\u53d8\u9879\u200b\uff0c\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5177\u4f53\u200b\u547d\u9898\u200b\u79f0\u4e3a\u200b\u8be5\u200b\u547d\u9898\u200b\u53d8\u9879\u200b\u7684\u200b\u4e00\u4e2a\u200b\u89e3\u91ca\u200b\u3002\u200b\u547d\u9898\u200b\u53d8\u9879\u200b\u7684\u200b\u89e3\u91ca\u200b\u53ef\u4ee5\u200b\u662f\u200b\u4efb\u610f\u200b\u547d\u9898\u200b\u3002</p>"},{"location":"math/discrete-mathematics/chapter-1/#_2","title":"\u903b\u8f91\u200b\u8054\u7ed3\u8bcd","text":"<p>\u200b\u547d\u9898\u903b\u8f91\u200b\u4e2d\u200b\u5e38\u7528\u200b\u7684\u200b\u903b\u8f91\u200b\u8054\u7ed3\u8bcd\u200b\u4e3a\u200b\u4e0e\u200b\uff08\\(\\land\\)\uff0c\u200b\u5408\u53d6\u200b\uff09\u3001\u200b\u6216\u200b\uff08\\(\\lor\\)\uff0c\u200b\u6790\u53d6\u200b\uff09\u3001\u200b\u975e\u200b\uff08\\(\\lnot\\)\uff0c\u200b\u5426\u5b9a\u200b\uff09\u3001\u200b\u8574\u542b\u200b\uff08\\(\\rightarrow\\)\uff09\u3001\u200b\u53cc\u200b\u8574\u542b\u200b\uff08\\(\\leftrightarrow\\)\uff09\u200b\u7b49\u200b\u3002\u200b\u9664\u200b\\(\\lnot\\)\u200b\u4e3a\u200b\u4e00\u5143\u200b\u8fd0\u7b97\u7b26\u200b\u4ee5\u5916\u200b\uff0c\u200b\u5176\u4f59\u200b\u903b\u8f91\u200b\u8fd0\u7b97\u7b26\u200b\u5747\u200b\u4e3a\u200b\u4e8c\u5143\u200b\u8fd0\u7b97\u7b26\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u8fd0\u7b97\u7b26\u200b\u7684\u200b\u771f\u503c\u8868\u200b\u5982\u4e0b\u200b\u6240\u200b\u5217\u200b\uff1a</p> <ul> <li>\u200b\u4e0e\u200b</li> </ul> \\(P\\) \\(Q\\) \\(P\\land Q\\) 0 0 0 0 1 0 1 0 0 1 1 1 <ul> <li>\u200b\u6216\u200b</li> </ul> \\(P\\) \\(Q\\) \\(P\\lor Q\\) 0 0 0 0 1 1 1 0 1 1 1 1 <ul> <li>\u200b\u975e\u200b</li> </ul> \\(P\\) \\(\\lnot P\\) 0 1 1 0 <ul> <li>\u200b\u8574\u542b\u200b</li> </ul> \\(P\\) \\(Q\\) \\(P\\rightarrow Q\\) 0 0 1 0 1 1 1 0 0 1 1 1 <ul> <li>\u200b\u53cc\u200b\u8574\u542b\u200b</li> </ul> \\(P\\) \\(Q\\) \\(P\\leftrightarrow Q\\) 0 0 1 0 1 0 1 0 0 1 1 1 <p>\u200b\u6b64\u5916\u200b\uff0c\u200b\u5982\u4e0b\u200b\u903b\u8f91\u200b\u8054\u7ed3\u8bcd\u200b\u4e5f\u200b\u8f83\u4e3a\u200b\u5e38\u7528\u200b\uff1a</p> <ul> <li>\u200b\u4e0e\u975e\u200b\uff1a\\(A\\uparrow B = \\lnot (A\\land B)\\)</li> <li>\u200b\u6216\u975e\u200b\uff1a\\(A\\downarrow B = \\lnot (A\\lor B)\\)</li> <li>\u200b\u5f02\u6216\u200b\uff1a\\(A\\overline \\lor B = (A\\lor B)\\land (\\lnot A\\lor \\lnot B)\\)</li> </ul>"},{"location":"math/discrete-mathematics/chapter-1/#_3","title":"\u5408\u5f0f\u516c\u5f0f","text":"<p>\u200b\u5408\u5f0f\u516c\u5f0f\u200b\uff08\u200b\u7b80\u79f0\u200b\u516c\u5f0f\u200b\uff09\u200b\u6309\u7167\u200b\u5982\u4e0b\u200b\u89c4\u5219\u200b\u5b9a\u4e49\u200b\u5982\u4e0b\u200b\uff1a</p> <ul> <li>\u200b\u7b80\u5355\u200b\u547d\u9898\u200b\u662f\u200b\u5408\u5f0f\u516c\u5f0f\u200b</li> <li>\u200b\u82e5\u200b\\(A\\)\u200b\u4e3a\u200b\u5408\u5f0f\u516c\u5f0f\u200b\uff0c\\(\\lnot A\\)\u200b\u4e3a\u200b\u5408\u5f0f\u516c\u5f0f\u200b</li> <li>\u200b\u82e5\u200b\\(A, B\\)\u200b\u4e3a\u200b\u5408\u5f0f\u516c\u5f0f\u200b\uff0c\\(A\\land B, A\\lor B, A\\rightarrow B, A\\leftrightarrow B\\)\u200b\u5747\u200b\u4e3a\u200b\u5408\u5f0f\u516c\u5f0f\u200b</li> <li>\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\u7ecf\u8fc7\u200b\u6709\u9650\u200b\u6b21\u200b\u5e94\u7528\u200b\u524d\u200b\u4e09\u6761\u200b\u89c4\u5219\u200b\u6240\u200b\u5f97\u5230\u200b\u7684\u200b\u516c\u5f0f\u200b\u79f0\u4e3a\u200b\u5408\u5f0f\u516c\u5f0f\u200b</li> </ul> <p>\u200b\u5408\u5f0f\u516c\u5f0f\u200b\u4e2d\u200b\u8fd0\u7b97\u7b26\u200b\u7684\u200b\u4f18\u5148\u7ea7\u200b\u6392\u5217\u200b\u5982\u4e0b\u200b\uff1a</p> \\[ \\lnot &gt; \\land &gt; \\lor &gt; \\rightarrow &gt; \\leftrightarrow \\] <p>\u200b\u5982\u679c\u200b\u5408\u5f0f\u516c\u5f0f\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u547d\u9898\u200b\u53d8\u9879\u200b\u5728\u200b\u4efb\u610f\u200b\u89e3\u91ca\u200b\u4e0b\u200b\u90fd\u200b\u4e3a\u200b\u771f\u200b\uff0c\u200b\u79f0\u200b\u5408\u5f0f\u516c\u5f0f\u200b\u4e3a\u200b\u91cd\u8a00\u5f0f\u200b\u6216\u6c38\u771f\u5f0f\u200b\u3002\u200b\u5982\u679c\u200b\u5408\u5f0f\u516c\u5f0f\u200b\u5728\u200b\u67d0\u4e2a\u200b\u89e3\u91ca\u200b\u4e0b\u4e3a\u200b\u771f\u200b\uff0c\u200b\u79f0\u200b\u5408\u5f0f\u516c\u5f0f\u200b\u53ef\u200b\u6ee1\u8db3\u200b\u3002\u200b\u5982\u679c\u200b\u5408\u5f0f\u516c\u5f0f\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u547d\u9898\u200b\u53d8\u9879\u200b\u5728\u200b\u4efb\u610f\u200b\u89e3\u91ca\u200b\u4e0b\u200b\u90fd\u200b\u4e3a\u200b\u5047\u200b\uff0c\u200b\u79f0\u200b\u5408\u5f0f\u516c\u5f0f\u200b\u4e3a\u200b\u77db\u76fe\u200b\u5f0f\u200b\u6216\u200b\u6c38\u5047\u5f0f\u200b\u3002\u200b\u4e24\u4e2a\u200b\u91cd\u8a00\u5f0f\u200b\u4f7f\u7528\u200b\\(\\land, \\lor, \\rightarrow, \\leftrightarrow\\)\u200b\u8fde\u63a5\u200b\u540e\u200b\u5f97\u5230\u200b\u7684\u200b\u5408\u5f0f\u516c\u5f0f\u200b\u4ecd\u4e3a\u200b\u91cd\u8a00\u5f0f\u200b\u3002</p>"},{"location":"math/discrete-mathematics/chapter-1/#_4","title":"\u91cd\u8a00\u5f0f\u200b\u7684\u200b\u4ee3\u5165\u200b\u89c4\u5219","text":"<p>\u200b\u82e5\u200b\\(A\\)\u200b\u4e3a\u200b\u91cd\u8a00\u5f0f\u200b\uff0c\u200b\u5c06\u200b\\(A\\)\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u547d\u9898\u200b\u53d8\u9879\u200b\\(C\\)\u200b\u66ff\u6362\u200b\u4e3a\u200b\u5408\u5f0f\u516c\u5f0f\u200b\\(D\\)\uff0c\u200b\u5219\u200b\u66ff\u6362\u200b\u540e\u200b\u7684\u200b\u5408\u5f0f\u516c\u5f0f\u200b\u4ecd\u4e3a\u200b\u91cd\u8a00\u5f0f\u200b\u3002\u200b\u8bb0\u200b\u4f5c\u200b\\(\\frac CD\\)</p> <ul> <li>\u200b\u4ee3\u5165\u200b\u89c4\u5219\u200b\u53ea\u80fd\u200b\u5bf9\u200b\u516c\u5f0f\u200b\u4e2d\u200b\u7684\u200b\u547d\u9898\u200b\u53d8\u9879\u200b\u8fdb\u884c\u200b\u66ff\u4ee3\u200b\uff0c\u200b\u800c\u200b\u4e0d\u80fd\u200b\u66ff\u4ee3\u200b\u516c\u5f0f\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u590d\u5408\u200b\u547d\u9898\u200b</li> <li>\u200b\u5bf9\u200b\u516c\u5f0f\u200b\u4e2d\u200b\u7684\u200b\u67d0\u4e2a\u200b\u547d\u9898\u200b\u53d8\u9879\u200b\u8fdb\u884c\u200b\u4ee3\u5165\u200b\u65f6\u200b\uff0c\u200b\u5fc5\u987b\u200b\u4ee3\u5165\u200b\u516c\u5f0f\u200b\u4e2d\u200b\u51fa\u73b0\u200b\u7684\u200b\u6240\u6709\u200b\u547d\u9898\u200b\u53d8\u9879\u200b</li> </ul>"},{"location":"math/discrete-mathematics/chapter-2/","title":"\u547d\u9898\u903b\u8f91\u200b\u7684\u200b\u7b49\u503c\u200b\u548c\u200b\u63a8\u7406\u200b\u6f14\u7b97","text":"<p>\u200b\u7b49\u503c\u200b\uff1a\u200b\u8bbe\u200b\\(A, B\\)\u200b\u4e3a\u200b\u516c\u5f0f\u200b\uff0c\\(P_1, \\dots, P_n\\)\u200b\u662f\u200b\u51fa\u73b0\u200b\u5728\u200b\\(A, B\\)\u200b\u4e2d\u200b\u6240\u6709\u200b\u7684\u200b\u547d\u9898\u200b\u53d8\u9879\u200b\uff0c\u200b\u82e5\u200b\u5bf9\u4e8e\u200b\u4efb\u610f\u200b\u7684\u200b\u4e00\u7ec4\u200b\\(\\left\\langle P_1, \\dots, P_n\\right\\rangle\\)\uff0c\u200b\u90fd\u200b\u6709\u200b\\(A=B\\)\uff0c\u200b\u5219\u200b\u79f0\u200b\u516c\u5f0f\u200b\\(A\\)\u200b\u4e0e\u200b\u516c\u5f0f\u200b\\(B\\)\u200b\u7b49\u503c\u200b\uff08\u200b\u7b49\u4ef7\u200b\uff09\uff0c\u200b\u8bb0\u200b\u4e3a\u200b\\(A\\Leftrightarrow B\\)\u200b\u6216\u200b\\(A=B\\)\u3002</p> <p>\u200b\u7b49\u503c\u200b\u5173\u7cfb\u200b\u6ee1\u8db3\u200b\u81ea\u53cd\u6027\u200b\u3001\u200b\u5bf9\u79f0\u6027\u200b\u4e0e\u200b\u4f20\u9012\u6027\u200b\uff1a</p> <ul> <li>\\(A=A\\)</li> <li>\u200b\u82e5\u200b\\(A=B\\)\uff0c\u200b\u5219\u200b\\(B=A\\)</li> <li>\u200b\u82e5\u200b\\(A=B, B=C\\)\uff0c\u200b\u5219\u200b\\(A=C\\)</li> </ul> <p>\\(A=B\\)\u200b\u7684\u200b\u5145\u5206\u200b\u5fc5\u8981\u6761\u4ef6\u200b\u662f\u200b\\(A\\leftrightarrow B\\)\u200b\u4e3a\u200b\u91cd\u8a00\u5f0f\u200b\u3002</p>"},{"location":"math/discrete-mathematics/chapter-2/#_2","title":"\u7b49\u503c\u200b\u516c\u5f0f","text":"<p>\u200b\u57fa\u672c\u200b\u7684\u200b\u7b49\u503c\u200b\u516c\u5f0f\u200b\u5217\u4e3e\u5982\u4e0b\u200b\uff1a</p> <ul> <li>\u200b\u53cc\u91cd\u200b\u5426\u5b9a\u200b\u5f8b\u200b</li> <li>\\(P = \\lnot \\lnot P\\)</li> <li>\u200b\u7ed3\u5408\u5f8b\u200b</li> <li>\\((P\\lor Q)\\lor R = P \\lor (Q\\lor R)\\)</li> <li>\\((P\\land Q)\\land R = P \\land (Q\\land R)\\)</li> <li>\\((P\\leftrightarrow Q)\\leftrightarrow R = P \\leftrightarrow (Q\\leftrightarrow R)\\)</li> <li>\u200b\u8fd0\u7b97\u7b26\u200b\\(\\rightarrow\\)\u200b\u4e0d\u200b\u6ee1\u8db3\u200b\u7ed3\u5408\u5f8b\u200b</li> <li>\u200b\u4ea4\u6362\u5f8b\u200b</li> <li>\\(P\\lor Q = Q\\lor P\\)</li> <li>\\(P\\land Q = Q\\land P\\)</li> <li>\\(P\\leftrightarrow Q = Q\\leftrightarrow P\\)</li> <li>\u200b\u8fd0\u7b97\u7b26\u200b\\(\\rightarrow\\)\u200b\u4e0d\u200b\u6ee1\u8db3\u200b\u4ea4\u6362\u5f8b\u200b</li> <li>\u200b\u5206\u914d\u5f8b\u200b</li> <li>\\(P\\lor (Q\\land R) = (P\\lor Q)\\land (P\\lor R)\\)</li> <li>\\(P\\land (Q\\lor R) = (P\\land Q)\\lor (P\\land R)\\)</li> <li>\\(P\\rightarrow (Q\\rightarrow R) = (P\\rightarrow Q)\\rightarrow (P\\rightarrow R)\\)</li> <li>\u200b\u8fd0\u7b97\u7b26\u200b\\(\\leftrightarrow\\)\u200b\u4e0d\u200b\u6ee1\u8db3\u200b\u5206\u914d\u5f8b\u200b</li> <li>\u200b\u6052\u7b49\u200b\u5f8b\u200b</li> <li>\\(P\\lor P = P\\)</li> <li>\\(P\\land P = P\\)</li> <li>\\(P\\rightarrow P = T\\)</li> <li>\\(P\\leftrightarrow P = T\\)</li> <li>\u200b\u5438\u6536\u7387\u200b</li> <li>\\(P\\lor (P\\land Q) = P\\)</li> <li>\\(P\\land (P\\lor Q) = P\\)</li> <li>\u200b\u6469\u6839\u200b\u5f8b\u200b</li> <li>\\(\\lnot (P\\lor Q) = \\lnot P\\land \\lnot Q\\)</li> <li>\\(\\lnot (P\\land Q) = \\lnot P\\lor \\lnot Q\\)</li> <li>\\(\\lnot (P\\rightarrow Q) = P\\land \\lnot Q\\)</li> <li>\\(\\lnot (P\\leftrightarrow Q) = (P\\land \\lnot Q) \\lor (\\lnot P\\land Q)\\)</li> <li>\u200b\u540c\u4e00\u5f8b\u200b</li> <li>\\(P\\lor F = P\\)</li> <li>\\(P\\land P = T\\)</li> <li>\\(T\\rightarrow P = P\\)</li> <li>\\(T\\leftrightarrow P = P\\)</li> <li>\\(P\\rightarrow F = \\lnot P\\)</li> <li>\\(P\\leftrightarrow F = \\lnot P\\)</li> <li>\u200b\u96f6\u5f8b\u200b</li> <li>\\(P\\lor T = T\\)</li> <li>\\(P\\land F = F\\)</li> <li>\\(P\\rightarrow T = T\\)</li> <li>\\(F\\rightarrow P = T\\)</li> <li>\u200b\u8865\u4f59\u5f8b\u200b</li> <li>\\(P\\lor \\lnot P = T\\)</li> <li>\\(P\\land \\lnot P = F\\)</li> <li>\\(P\\rightarrow \\lnot P = \\lnot P\\)</li> <li>\\(P\\leftrightarrow \\lnot P = F\\)</li> <li>\u200b\u5176\u4ed6\u200b\u5e38\u7528\u200b\u7684\u200b\u7b49\u503c\u200b\u516c\u5f0f\u200b</li> <li>\\(P\\rightarrow Q = \\lnot Q\\rightarrow \\lnot P\\)\uff08\u200b\u9006\u5426\u547d\u9898\u200b\uff09</li> <li>\\(P\\rightarrow (Q\\rightarrow R) = (P\\land Q)\\rightarrow R\\)</li> <li>\\((P\\rightarrow R)\\land (Q\\rightarrow R) = (P\\lor Q) \\rightarrow R\\)</li> </ul> <p>\u200b\u7531\u200b\u516c\u5f0f\u200b2\u200b\u7684\u200b\u76f4\u63a5\u200b\u63a8\u8bba\u200b\uff1a\\(P\\rightarrow (Q\\rightarrow R) = Q\\rightarrow (P\\rightarrow R)\\)</p> <p>\u200b\u7f6e\u6362\u200b\uff1a\u200b\u5bf9\u200b\u516c\u5f0f\u200b\\(A\\)\u200b\u7684\u200b\u5b50\u200b\u516c\u5f0f\u200b\\(B\\)\uff0c\u200b\u4f7f\u7528\u200b\u4e0e\u200b\u4e4b\u200b\u7b49\u503c\u200b\u7684\u200b\u516c\u5f0f\u200b\u8fdb\u884c\u200b\u4ee3\u6362\u200b\u79f0\u4e3a\u200b\u7f6e\u6362\u200b</p> <p>\u200b\u8bbe\u7f6e\u200b\u6362\u540e\u200b\u7684\u200b\u516c\u5f0f\u200b\u4e3a\u200b\\(C\\)\uff0c\u200b\u5219\u200b\u5fc5\u6709\u200b\\(A=C\\)</p>"},{"location":"math/discrete-mathematics/chapter-2/#_3","title":"\u4ece\u200b\u771f\u503c\u8868\u200b\u8ba1\u7b97\u200b\u751f\u6210\u200b\u547d\u9898\u200b\u516c\u5f0f","text":"<p>\u200b\u4ece\u200b\u771f\u503c\u8868\u200b\u751f\u6210\u200b\u547d\u9898\u200b\u516c\u5f0f\u200b\u6709\u200b\u4e24\u79cd\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u65e2\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u503c\u4e3a\u200b\\(T\\)\u200b\u7684\u200b\u884c\u200b\u751f\u6210\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u503c\u4e3a\u200b\\(F\\)\u200b\u7684\u200b\u884c\u200b\u751f\u6210\u200b</p>"},{"location":"math/discrete-mathematics/chapter-2/#t","title":"\u4ece\u503c\u200b\u4e3a\u200bT\u200b\u7684\u200b\u884c\u200b\u751f\u6210","text":"<p>\u200b\u5bf9\u4e8e\u200b\u5305\u542b\u200b\\(n\\)\u200b\u4e2a\u200b\u547d\u9898\u200b\u53d8\u5143\u200b\\(P_1, \\dots, P_n\\)\u200b\u7684\u200b\u547d\u9898\u200b\u516c\u5f0f\u200b\uff0c\u200b\u5199\u51fa\u200b\u5982\u4e0b\u200b\u5408\u53d6\u200b\u5f0f\u200b\uff1a</p> \\[ P_1\\land P_2\\land \\dots \\land P_n \\] <p>\u200b\u5bf9\u4e8e\u200b\u771f\u503c\u8868\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u53d6\u503c\u200b\u4e3a\u200b\\(T\\)\u200b\u7684\u200b\u884c\u200b\uff0c\u200b\u82e5\u200b\u5bf9\u5e94\u200b\u7684\u200b\\(P_i\\)\u200b\u4e3a\u200b\\(F\\)\uff0c\u200b\u5219\u200b\u5c06\u200b\u5408\u53d6\u200b\u5f0f\u200b\u4e2d\u200b\u7684\u200b\u5bf9\u5e94\u200b\\(P_i\\)\u200b\u66ff\u6362\u200b\u4e3a\u200b\\(\\lnot P_i\\)\u3002\u200b\u5c06\u200b\u6240\u5f97\u200b\u7684\u200b\u516c\u5f0f\u200b\u4f7f\u7528\u200b\u6790\u53d6\u200b\u8fd0\u7b97\u7b26\u200b\u8fde\u63a5\u200b\u5373\u5f97\u200b\u7b26\u5408\u200b\u771f\u503c\u8868\u200b\u7684\u200b\u547d\u9898\u200b\u516c\u5f0f\u200b\u3002</p>"},{"location":"math/discrete-mathematics/chapter-2/#f","title":"\u4ece\u503c\u200b\u4e3a\u200bF\u200b\u7684\u200b\u884c\u200b\u751f\u6210","text":"<p>\u200b\u5bf9\u4e8e\u200b\u5305\u542b\u200b\\(n\\)\u200b\u4e2a\u200b\u547d\u9898\u200b\u53d8\u5143\u200b\\(P_1, \\dots, P_n\\)\u200b\u7684\u200b\u547d\u9898\u200b\u516c\u5f0f\u200b\uff0c\u200b\u5199\u51fa\u200b\u5982\u4e0b\u200b\u6790\u53d6\u200b\u5f0f\u200b\uff1a</p> \\[ P_1\\lor P_2\\lor \\dots \\lor P_n \\] <p>\u200b\u5bf9\u4e8e\u200b\u771f\u503c\u8868\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u53d6\u503c\u200b\u4e3a\u200b\\(F\\)\u200b\u7684\u200b\u884c\u200b\uff0c\u200b\u82e5\u200b\u5bf9\u5e94\u200b\u7684\u200b\\(P_i\\)\u200b\u4e3a\u200b\\(T\\)\uff0c\u200b\u5219\u200b\u5c06\u200b\u6790\u53d6\u200b\u5f0f\u200b\u4e2d\u200b\u7684\u200b\u5bf9\u5e94\u200b\\(P_i\\)\u200b\u66ff\u6362\u200b\u4e3a\u200b\\(\\lnot P_i\\)\u3002\u200b\u5c06\u200b\u6240\u5f97\u200b\u7684\u200b\u516c\u5f0f\u200b\u4f7f\u7528\u200b\u5408\u53d6\u200b\u8fd0\u7b97\u7b26\u200b\u8fde\u63a5\u200b\u5373\u5f97\u200b\u7b26\u5408\u200b\u771f\u503c\u8868\u200b\u7684\u200b\u547d\u9898\u200b\u516c\u5f0f\u200b\u3002</p>"},{"location":"math/discrete-mathematics/chapter-2/#_4","title":"\u8054\u7ed3\u8bcd\u200b\u7684\u200b\u5b8c\u5907\u200b\u96c6","text":"<p>\u200b\u8bbe\u200b\u96c6\u5408\u200b\\(A\\)\u200b\u4e3a\u200b\u7531\u200b\u8054\u7ed3\u8bcd\u200b\u7ec4\u6210\u200b\u7684\u200b\u96c6\u5408\u200b\uff0c\u200b\u82e5\u200b\u4efb\u610f\u200b\u547d\u9898\u200b\u516c\u5f0f\u200b\u90fd\u200b\u6709\u200b\u901a\u8fc7\u200b\u547d\u9898\u200b\u516c\u5f0f\u200b\u4f7f\u7528\u200b\\(A\\)\u200b\u4e2d\u200b\u7684\u200b\u8054\u7ed3\u8bcd\u200b\u7ec4\u5408\u800c\u6210\u200b\u7684\u200b\u516c\u5f0f\u200b\u4e0e\u200b\u4e4b\u200b\u7b49\u503c\u200b\uff0c\u200b\u5219\u200b\\(A\\)\u200b\u662f\u200b\u8054\u7ed3\u8bcd\u200b\u7684\u200b\u5b8c\u5907\u200b\u96c6\u200b</p> <p>\u200b\u901a\u8fc7\u200b\u5982\u4e0a\u200b\u5bf9\u200b\u771f\u503c\u8868\u200b\u7684\u200b\u5206\u6790\u200b\uff0c\u200b\u4efb\u4f55\u200b\u771f\u503c\u8868\u200b\u90fd\u200b\u80fd\u200b\u4f7f\u7528\u200b\\(\\{\\land, \\lor, \\lnot\\}\\)\u200b\u4e09\u4e2a\u200b\u8fd0\u7b97\u7b26\u200b\u8868\u793a\u200b\u51fa\u200b\u4e00\u4e2a\u200b\u547d\u9898\u200b\u516c\u5f0f\u200b\u3002\u200b\u5047\u8bbe\u200b\u5b58\u5728\u200b\u4e00\u4e2a\u200b\u516c\u5f0f\u200b\\(P\\)\uff0c\u200b\u4e0d\u200b\u5b58\u5728\u200b\\(\\{\\land, \\lor, \\lnot\\}\\)\u200b\u7ec4\u6210\u200b\u7684\u200b\u516c\u5f0f\u200b\u4e0e\u200b\u4e4b\u200b\u7b49\u503c\u200b\u3002\u200b\u4f46\u200b\u901a\u8fc7\u200b\\(P\\)\u200b\u7684\u200b\u771f\u503c\u8868\u200b\u53ef\u4ee5\u200b\u6784\u9020\u200b\u51fa\u200b\u4e00\u4e2a\u200b\u547d\u9898\u200b\u516c\u5f0f\u200b\\(Q\\)\uff0c\u200b\u5219\u200b\\(Q\\)\u200b\u4e0e\u200b\\(P\\)\u200b\u7684\u200b\u771f\u503c\u8868\u200b\u76f8\u540c\u200b\uff0c\\(P=Q\\)\uff0c\u200b\u77db\u76fe\u200b\u3002\u200b\u56e0\u6b64\u200b\\(\\{\\land, \\lor, \\lnot\\}\\)\u200b\u662f\u200b\u5b8c\u5907\u200b\u7684\u200b\u3002</p> <p>\u200b\u4ee5\u4e0b\u200b\u5217\u51fa\u200b\u4e86\u200b\u4e00\u90e8\u5206\u200b\u8054\u7ed3\u8bcd\u200b\u7684\u200b\u6700\u5c0f\u200b\u5b8c\u5907\u200b\u96c6\u200b\uff1a</p> <ul> <li>\\(\\{\\lor, \\lnot\\}\\)</li> <li>\\(\\{\\land, \\lnot\\}\\)</li> <li>\\(\\{\\uparrow\\}\\)</li> <li>\\(\\{\\downarrow\\}\\)</li> <li>\\(\\{\\lnot, \\rightarrow\\}\\)</li> </ul> <p>\u200b\u5982\u679c\u200b\\(A\\)\u200b\u662f\u200b\u8054\u7ed3\u8bcd\u200b\u7684\u200b\u5b8c\u5907\u200b\u96c6\u200b\uff0c\u200b\u96c6\u5408\u200b\\(B\\)\u200b\u4e2d\u200b\u7684\u200b\u8054\u7ed3\u8bcd\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u7ec4\u5408\u200b\u5f97\u5230\u200b\u4e0e\u200b\\(A\\)\u200b\u4e2d\u200b\u8054\u7ed3\u8bcd\u200b\u7b49\u4ef7\u200b\u7684\u200b\u8054\u7ed3\u8bcd\u200b\uff0c\u200b\u5219\u200b\\(B\\)\u200b\u4e5f\u200b\u662f\u200b\u8054\u7ed3\u8bcd\u200b\u7684\u200b\u5b8c\u5907\u200b\u96c6\u200b\u3002</p> <p>\u200b\u8bc1\u660e\u200b\uff1a\\(\\{\\lor, \\lnot\\}\\)\u200b\u662f\u200b\u8054\u7ed3\u8bcd\u200b\u7684\u200b\u5b8c\u5907\u200b\u96c6\u200b\uff1a</p> \\[ P\\land Q = \\lnot (\\lnot P\\lor \\lnot Q) \\] <p>\u200b\u8bc1\u660e\u200b\uff1a\\(\\{\\land, \\lnot\\}\\)\u200b\u662f\u200b\u8054\u7ed3\u8bcd\u200b\u7684\u200b\u5b8c\u5907\u200b\u96c6\u200b\uff1a</p> \\[ P\\lor Q = \\lnot (\\lnot P\\land \\lnot Q) \\] <p>\u200b\u8bc1\u660e\u200b\uff1a\\(\\{\\uparrow\\}\\)\u200b\u662f\u200b\u8054\u7ed3\u8bcd\u200b\u7684\u200b\u5b8c\u5907\u200b\u96c6\u200b\uff1a</p> <ul> <li>\u200b\u8bc1\u660e\u200b\\(\\lnot P\\)\u200b\u53ef\u4ee5\u200b\u4ec5\u200b\u4f7f\u7528\u200b\\(\\uparrow\\)\u200b\u8fd0\u7b97\u7b26\u200b\u8868\u793a\u200b\uff1a</li> </ul> <p>$$   \\begin{aligned}   \\lnot P &amp;= \\lnot (P\\land P) \\   &amp;= P\\uparrow P   \\end{aligned}   $$</p> <ul> <li>\u200b\u8bc1\u660e\u200b\\(P\\land Q\\)\u200b\u53ef\u4ee5\u200b\u4ec5\u200b\u4f7f\u7528\u200b\\(\\uparrow\\)\u200b\u8fd0\u7b97\u7b26\u200b\u8868\u793a\u200b\uff1a</li> </ul> <p>$$   \\begin{aligned}   P\\land Q&amp;= \\lnot \\lnot (P\\land Q) \\   &amp;= \\lnot (P\\uparrow Q) \\   &amp;= (P\\uparrow Q) \\uparrow (P\\uparrow Q)   \\end{aligned}   $$</p> <p>\u200b\u8bc1\u660e\u200b\uff1a\\(\\{\\downarrow\\}\\)\u200b\u662f\u200b\u8054\u7ed3\u8bcd\u200b\u7684\u200b\u5b8c\u5907\u200b\u96c6\u200b\uff1a</p> <ul> <li>\u200b\u8bc1\u660e\u200b\\(\\lnot P\\)\u200b\u53ef\u4ee5\u200b\u4ec5\u200b\u4f7f\u7528\u200b\\(\\downarrow\\)\u200b\u8fd0\u7b97\u7b26\u200b\u8868\u793a\u200b\uff1a</li> </ul> <p>$$   \\begin{aligned}   \\lnot P &amp;= \\lnot (P\\lor P) \\   &amp;= P\\downarrow P   \\end{aligned}   $$</p> <ul> <li>\u200b\u8bc1\u660e\u200b\\(P\\lor Q\\)\u200b\u53ef\u4ee5\u200b\u4ec5\u200b\u4f7f\u7528\u200b\\(\\downarrow\\)\u200b\u8fd0\u7b97\u7b26\u200b\u8868\u793a\u200b\uff1a</li> </ul> <p>$$   \\begin{aligned}   P\\lor Q&amp;= \\lnot \\lnot (P\\lor Q) \\   &amp;= \\lnot (P\\downarrow Q) \\   &amp;= (P\\downarrow Q) \\downarrow (P\\downarrow Q)   \\end{aligned}   $$</p> <p>\u200b\u8bc1\u660e\u200b\uff1a\\(\\{\\rightarrow, \\lnot\\}\\)\u200b\u662f\u200b\u8054\u7ed3\u8bcd\u200b\u7684\u200b\u5b8c\u5907\u200b\u96c6\u200b\uff1a</p> <p>\\(P\\lor Q = \\lnot \\lnot P\\lor Q = \\lnot P\\rightarrow Q\\)</p>"},{"location":"math/discrete-mathematics/chapter-2/#_5","title":"\u5bf9\u5076\u200b\u5f0f","text":"<p>\u200b\u8bbe\u200b\\(A\\)\u200b\u4e3a\u200b\u547d\u9898\u200b\u516c\u5f0f\u200b\uff0c\u200b\u5c06\u200b\\(A\\)\u200b\u4e2d\u200b\u51fa\u73b0\u200b\u7684\u200b\\(\\lor, \\land, T, F\\)\u200b\u5206\u522b\u200b\u4f7f\u7528\u200b\\(\\land, \\lor, F, T\\)\u200b\u8fdb\u884c\u200b\u66ff\u6362\u200b\uff0c\u200b\u6240\u200b\u5f97\u5230\u200b\u7684\u200b\u516c\u5f0f\u200b\u79f0\u4e3a\u200b\\(A\\)\u200b\u7684\u200b\u5bf9\u5076\u200b\u5f0f\u200b\uff0c\u200b\u8bb0\u200b\u4e3a\u200b\\(A^*\\)</p> <p>\u200b\u8bbe\u200b\\(A\\)\u200b\u4e3a\u200b\u547d\u9898\u200b\u516c\u5f0f\u200b\uff0c\u200b\u5c06\u200b\\(A\\)\u200b\u4e2d\u200b\u51fa\u73b0\u200b\u7684\u200b\u6240\u6709\u200b\u547d\u9898\u200b\u53d8\u9879\u200b\\(P_1,\\dots, P_n\\)\u200b\u66ff\u6362\u200b\u4e3a\u200b\\(\\lnot P_1, \\dots, \\lnot P_n\\)\uff0c\u200b\u6240\u200b\u5f97\u5230\u200b\u7684\u200b\u516c\u5f0f\u200b\u79f0\u4e3a\u200b\\(A\\)\u200b\u7684\u200b\u5426\u200b\u547d\u9898\u200b\uff0c\u200b\u8bb0\u200b\u4e3a\u200b\\(A^-\\)</p> <p>\u200b\u5219\u200b\u53d6\u200b\u5bf9\u5076\u200b\u5f0f\u200b\u8fd0\u7b97\u200b\u3001\u200b\u53d6\u5426\u200b\u547d\u9898\u200b\u8fd0\u7b97\u200b\u6709\u200b\u5982\u4e0b\u200b\u6027\u8d28\u200b\uff1a</p> <ol> <li>\\(\\lnot (A^*) = (\\lnot A)^*, \\lnot (A^-) = (\\lnot A)^-\\)</li> <li>\\((A^*)^*=A, (A^-)^- =A\\)</li> <li>\\(A^{*-}=\\lnot A\\)</li> <li>\\(A=B\\Rightarrow A^*=B^*\\)</li> <li>\u200b\u5bf9\u200b\\(A\\rightarrow B\\)\u200b\u53d6\u200b\u5bf9\u5076\u200b\u5f0f\u200b\u53ef\u5f97\u200b\\(A\\rightarrow B=T\\Rightarrow B^*\\rightarrow A^*=T\\)</li> </ol> <p>\u200b\u6839\u636e\u200b\u5bf9\u5076\u200b\u5f0f\u200b\u548c\u200b\u5426\u200b\u547d\u9898\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff0c2\u200b\u5f0f\u200b\u81ea\u7136\u200b\u6210\u7acb\u200b\u30021\u200b\u5f0f\u200b\u548c\u200b3\u200b\u5f0f\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u6570\u5b66\u200b\u5f52\u7eb3\u6cd5\u200b\u8fdb\u884c\u200b\u8bc1\u660e\u200b\u3002</p>"},{"location":"math/discrete-mathematics/chapter-2/#_6","title":"\u8303\u5f0f","text":"<p>\u200b\u5b9a\u4e49\u200b\u5982\u4e0b\u200b\u6982\u5ff5\u200b\uff1a</p> <ul> <li>\u200b\u6587\u5b57\u200b\uff1a\u200b\u7b80\u5355\u200b\u547d\u9898\u200b\\(P\\)\u200b\u53ca\u5176\u200b\u5426\u5b9a\u200b\u5f62\u5f0f\u200b</li> <li>\u200b\u5408\u53d6\u200b\u5f0f\u200b\uff1a\u200b\u4e00\u4e9b\u200b\u6587\u5b57\u200b\u7684\u200b\u5408\u53d6\u200b\uff0c\u200b\u5f62\u200b\u5982\u200b\\(P_1\\land \\dots \\land P_n\\)</li> <li>\u200b\u6790\u53d6\u200b\u5f0f\u200b\uff08\u200b\u5b50\u53e5\u200b\uff09\uff1a\u200b\u4e00\u4e9b\u200b\u6587\u5b57\u200b\u7684\u200b\u6790\u53d6\u200b\uff0c\u200b\u5f62\u200b\u5982\u200b\\(P_1\\lor \\dots\\lor P_n\\)</li> <li>\u200b\u4e92\u8865\u200b\u5bf9\u200b\uff1a\u200b\u6587\u5b57\u200b\u4e0e\u5176\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5426\u5b9a\u200b\u5f62\u5f0f\u200b</li> <li>\u200b\u6790\u53d6\u8303\u5f0f\u200b\uff1a\u200b\u5408\u53d6\u200b\u5f0f\u200b\u901a\u8fc7\u200b\u6790\u53d6\u200b\u8054\u7ed3\u8bcd\u200b\u8fde\u63a5\u200b\u7684\u200b\u516c\u5f0f\u200b\uff0c\u200b\u5f62\u200b\u5982\u200b\\(A_1\\lor \\dots\\lor A_n\\)\uff0c\u200b\u5176\u4e2d\u200b\\(A_i\\)\u200b\u4e3a\u200b\u5408\u53d6\u200b\u5f0f\u200b</li> <li>\u200b\u5408\u53d6\u8303\u5f0f\u200b\uff1a\u200b\u6790\u53d6\u200b\u5f0f\u200b\u901a\u8fc7\u200b\u5408\u53d6\u200b\u8054\u7ed3\u8bcd\u200b\u8fde\u63a5\u200b\u7684\u200b\u516c\u5f0f\u200b\uff0c\u200b\u5f62\u200b\u5982\u200b\\(A_1\\land \\dots \\land A_n\\)\uff0c\u200b\u5176\u4e2d\u200b\\(A_i\\)\u200b\u4e3a\u200b\u6790\u53d6\u200b\u5f0f\u200b</li> </ul> <p>\u200b\u7531\u6b64\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5bfc\u51fa\u200b\u8303\u5f0f\u200b\u5b9a\u7406\u200b\uff0c\u200b\u5373\u200b\u4efb\u4e00\u200b\u547d\u9898\u200b\u516c\u5f0f\u200b\u90fd\u200b\u5b58\u5728\u200b\u6709\u200b\u4e0e\u200b\u4e4b\u200b\u7b49\u503c\u200b\u7684\u200b\u5408\u53d6\u8303\u5f0f\u200b\u4e0e\u200b\u6790\u53d6\u8303\u5f0f\u200b\u3002\u200b\u8303\u5f0f\u200b\u5b9a\u7406\u200b\u7684\u200b\u6b63\u786e\u6027\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5217\u5199\u200b\u547d\u9898\u200b\u516c\u5f0f\u200b\u7684\u200b\u771f\u503c\u8868\u200b\u4e0e\u200b\u4ece\u200b\u771f\u503c\u8868\u200b\u5217\u5199\u200b\u547d\u9898\u200b\u516c\u5f0f\u200b\u8bc1\u660e\u200b\u3002</p> <p>\u200b\u8ba1\u7b97\u200b\u5408\u53d6\u8303\u5f0f\u200b\u4e0e\u200b\u6790\u53d6\u8303\u5f0f\u200b\uff1a</p> <ol> <li>\u200b\u6d88\u200b\u53bb\u200b\u903b\u8f91\u200b\u8054\u7ed3\u8bcd\u200b\\(A\\rightarrow B\\)\u200b\u4e0e\u200b\\(A\\leftrightarrow B\\)\uff0c\u200b\u66ff\u6362\u200b\u4e3a\u200b\\(\\lnot A\\lor B\\)\u200b\u4e0e\u200b\\((\\lnot A\\lor B)\\land (A\\lor \\lnot B)\\)</li> <li>\u200b\u4f7f\u7528\u200b\u6469\u6839\u200b\u5f8b\u200b\u4e0e\u200b\u53cc\u91cd\u200b\u5426\u5b9a\u200b\u5f8b\u200b\u6d88\u9664\u200b\\(\\lor\\)\u200b\u6216\u200b\\(\\land\\)\uff0c\u200b\u5e76\u200b\u6d88\u9664\u200b\u591a\u4f59\u200b\u7684\u200b\\(\\lnot\\)</li> <li>\u200b\u5c06\u200b\u6240\u6709\u200b\u7684\u200b\\(\\lnot\\)\u200b\u79fb\u52a8\u200b\u5230\u200b\u547d\u9898\u200b\u53d8\u9879\u200b\\(P_i\\)\u200b\u524d\u200b</li> <li>\u200b\u4f7f\u7528\u200b\u5206\u914d\u5f8b\u200b\u5c06\u200b\u516c\u5f0f\u5316\u200b\u4e3a\u200b\u8303\u5f0f\u200b</li> </ol>"},{"location":"math/discrete-mathematics/chapter-2/#_7","title":"\u4e3b\u200b\u8303\u5f0f","text":"<p>\u200b\u5bf9\u4e8e\u200b\u516c\u5f0f\u200b\\(Q = Q_1\\land \\dots \\land Q_n\\)\uff0c\u200b\u5f0f\u200b\u4e2d\u200b\\(Q_i=P_i\\)\u200b\u6216\u200b\\(Q_i=\\lnot P_i\\)\u3002\u200b\u5219\u200b\\(Q\\)\u200b\u4e3a\u200b\u6781\u5c0f\u200b\u9879\u200b\uff0c\u200b\u8bb0\u200b\u4e3a\u200b\\(m_i\\)\u3002</p> <ul> <li>\u200b\u6781\u5c0f\u200b\u9879\u4e2d\u200b\u5fc5\u987b\u200b\u51fa\u73b0\u200b\u6240\u6709\u200b\u7684\u200b\u547d\u9898\u200b\u53d8\u9879\u200b</li> <li>\\(n\\)\u200b\u4e2a\u200b\u547d\u9898\u200b\u53d8\u9879\u200b\u53ef\u4ee5\u200b\u7ec4\u6210\u200b\\(2^n\\)\u200b\u4e2a\u200b\u6781\u5c0f\u200b\u9879\u200b\uff0c\u200b\u4f9d\u6b21\u200b\u8868\u793a\u200b\u4e3a\u200b\\(m_1, \\dots m_{2^n}\\)</li> </ul> <p>\u200b\u5bf9\u4e8e\u200b\u516c\u5f0f\u200b\\(R = R_1\\lor \\dots \\lor R_n\\)\uff0c\u200b\u5f0f\u200b\u4e2d\u200b\\(R_i = P_i\\)\u200b\u6216\u200b\\(R_i = \\lnot P_i\\)\u3002\u200b\u5219\u200b\\(R\\)\u200b\u4e3a\u200b\u6781\u5927\u200b\u9879\u200b\uff0c\u200b\u8bb0\u200b\u4e3a\u200b\\(M_i\\)</p> <p>\u200b\u4e0e\u200b\u6781\u5c0f\u200b\u9879\u200b\u76f8\u540c\u200b\uff0c\u200b\u6240\u6709\u200b\u7684\u200b\u547d\u9898\u200b\u53d8\u9879\u200b\u5fc5\u987b\u200b\u90fd\u200b\u51fa\u73b0\u200b\u5728\u200b\u6781\u5927\u200b\u9879\u4e2d\u200b\uff0c\u200b\u4e14\u200b\\(n\\)\u200b\u4e2a\u200b\u547d\u9898\u200b\u53d8\u9879\u200b\u53ef\u4ee5\u200b\u7ec4\u6210\u200b\\(2^n\\)\u200b\u4e2a\u200b\u6781\u5927\u200b\u9879\u200b\u3002</p> <p>\u200b\u4efb\u610f\u200b\u516c\u5f0f\u200b\\(A\\)\u200b\u7684\u200b\u8303\u5f0f\u200b\u4e2d\u200b\uff0c\u200b\u4ec5\u200b\u7531\u200b\u6781\u5c0f\u200b\u9879\u200b\u6784\u6210\u200b\u7684\u200b\u6790\u53d6\u8303\u5f0f\u200b\u4e3a\u4e3b\u200b\u6790\u53d6\u8303\u5f0f\u200b\uff0c\u200b\u4ec5\u200b\u7531\u200b\u6781\u5927\u200b\u9879\u200b\u6784\u6210\u200b\u7684\u200b\u5408\u53d6\u8303\u5f0f\u200b\u4e3a\u4e3b\u200b\u5408\u53d6\u8303\u5f0f\u200b\u3002\u200b\u4e3b\u200b\u6790\u53d6\u8303\u5f0f\u200b\u4e0e\u200b\u4e3b\u200b\u5408\u53d6\u8303\u5f0f\u200b\u90fd\u200b\u662f\u200b\u552f\u4e00\u200b\u7684\u200b\u3002</p> <p>\u200b\u6781\u5927\u200b\u9879\u200b\u3001\u200b\u6781\u5c0f\u200b\u9879\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6027\u8d28\u200b</p> <ol> <li>\u200b\u6781\u5927\u200b\u9879\u200b\u3001\u200b\u6781\u5c0f\u200b\u9879\u200b\u7684\u200b\u6570\u91cf\u200b\u7b49\u4e8e\u200b\u516c\u5f0f\u200b\u53ef\u80fd\u200b\u7684\u200b\u89e3\u91ca\u200b\u6570\u91cf\u200b\uff0c\u200b\u5373\u200b\\(2^n\\)</li> <li>\u200b\u6bcf\u4e2a\u200b\u6781\u5c0f\u200b\u9879\u4ec5\u200b\u5728\u200b\u516c\u5f0f\u200b\u7684\u200b\u4e00\u4e2a\u200b\u89e3\u91ca\u200b\u4e0b\u200b\u4e3a\u200b\\(T\\)\uff0c\u200b\u6bcf\u4e2a\u200b\u6781\u5927\u200b\u9879\u4ec5\u200b\u5728\u200b\u516c\u5f0f\u200b\u7684\u200b\u4e00\u4e2a\u200b\u89e3\u91ca\u200b\u4e0b\u200b\u4e3a\u200b\\(F\\)</li> <li>\u200b\u6781\u5c0f\u200b\u9879\u200b\u3001\u200b\u6781\u5927\u200b\u9879\u200b\u4e24\u200b\u4e24\u200b\u4e0d\u200b\u7b49\u503c\u200b\uff0c\u200b\u6709\u200b\\(m_i\\land m_j\\leftrightarrow i=j, M_i\\lor M_j\\leftrightarrow i\\not= j\\)\u3002</li> <li>\u200b\u4efb\u4e00\u200b\u542b\u6709\u200b\\(n\\)\u200b\u4e2a\u200b\u547d\u9898\u200b\u53d8\u9879\u200b\u7684\u200b\u516c\u5f0f\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u7528\u200b\\(k\\leq n\\)\u200b\u4e2a\u200b\u6781\u5c0f\u200b\u9879\u200b\u6216\u200b\\(k\\leq n\\)\u200b\u4e2a\u200b\u6781\u5927\u200b\u9879\u200b\u8868\u793a\u200b\u3002</li> <li>\\(\\bigwedge _{i=0} ^{2^n-1} M_i=F, \\bigvee _{i=0}^{2^n-1} m_i = T\\)</li> </ol>"},{"location":"math/discrete-mathematics/chapter-2/#_8","title":"\u63a8\u7406\u200b\u5f62\u5f0f","text":"<p>\u200b\u5c06\u200b\u81ea\u7136\u200b\u8bed\u53e5\u200b\u63cf\u8ff0\u200b\u7684\u200b\u63a8\u7406\u200b\u5173\u7cfb\u200b\u7ecf\u200b\u62bd\u8c61\u5316\u200b\u540e\u200b\u4f7f\u7528\u200b\u6761\u4ef6\u200b\u5f0f\u200b\u7684\u200b\u8868\u793a\u200b</p> <p>\u200b\u82e5\u200b\\(A\\rightarrow B=T\\)\uff0c\u200b\u79f0\u200b\\(A\\)\u200b\u91cd\u8a00\u200b\u8574\u542b\u200b\\(B\\)\uff0c\u200b\u8bb0\u200b\u4f5c\u200b\\(A\\Rightarrow B\\)\u3002\u200b\u91cd\u8a00\u200b\u8574\u542b\u200b\u5173\u7cfb\u200b\u5177\u6709\u200b\u5982\u4e0b\u200b\u6027\u8d28\u200b\uff1a</p> <ol> <li>\u200b\u82e5\u200b\\(A=T\\)\uff0c\u200b\u4e14\u200b\\(A\\Rightarrow B\\)\uff0c\u200b\u5219\u200b\\(B=T\\)</li> <li>\u200b\u82e5\u200b\\(A\\Rightarrow B\\land B\\Rightarrow A\\)\uff0c\u200b\u5219\u200b\\(A=B\\)</li> <li>\u200b\u82e5\u200b\\(A\\Rightarrow B\\land B\\Rightarrow C\\)\uff0c\u200b\u5219\u200b\\(A\\Rightarrow C\\)</li> <li>\u200b\u82e5\u200b\\(A\\Rightarrow B\\land A\\Rightarrow C\\)\uff0c\u200b\u5219\u200b\\(A\\Rightarrow (B\\land C)\\)</li> <li>\u200b\u82e5\u200b\\(A\\Rightarrow C\\land B\\Rightarrow C\\)\uff0c\u200b\u5219\u200b\\((A\\lor B)\\Rightarrow C\\)</li> </ol> <p>\u200b\u8981\u200b\u8bc1\u660e\u200b\u4e00\u4e2a\u200b\u5f0f\u5b50\u200b\u4e3a\u91cd\u200b\u8a00\u200b\u8574\u542b\u200b\u5f0f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8bc1\u660e\u200b\\(A\\rightarrow B\\)\u200b\u4e3a\u200b\u91cd\u8a00\u5f0f\u200b\u6216\u200b\\(\\lnot A\\land B\\)\u200b\u4e3a\u200b\u77db\u76fe\u200b\u5f0f\u200b\u3002</p>"},{"location":"math/discrete-mathematics/chapter-2/#_9","title":"\u57fa\u672c\u200b\u7684\u200b\u63a8\u7406\u200b\u516c\u5f0f","text":"<p>\u200b\u5982\u4e0b\u200b\u5217\u51fa\u200b\u4e00\u4e9b\u200b\u57fa\u672c\u200b\u7684\u200b\u63a8\u7406\u200b\u516c\u5f0f\u200b\uff0c\u200b\u5f0f\u200b\u4e2d\u200b\\(P,Q,R,S\\)\u200b\u5747\u200b\u4e3a\u200b\u4efb\u610f\u200b\u547d\u9898\u200b\u53d8\u9879\u200b</p> <ul> <li>\\(P\\land Q\\Rightarrow P\\)</li> <li>\\(\\lnot(P\\rightarrow Q)\\Rightarrow P\\)</li> <li>\\(\\lnot(P\\rightarrow Q)\\Rightarrow \\lnot Q\\)</li> <li>\\(P\\Rightarrow P\\lor Q\\)</li> <li>\\(\\lnot P\\Rightarrow P\\rightarrow Q\\)</li> <li>\\(Q\\Rightarrow P\\rightarrow Q\\)</li> <li>\\(\\lnot P \\land(P\\lor Q)\\Rightarrow Q\\)</li> <li>\\(P\\land (P\\rightarrow Q) \\Rightarrow Q\\)\uff0c\u200b\u5206\u79bb\u200b\u89c4\u5219\u200b</li> <li>\\(\\lnot Q\\land (P\\rightarrow Q)\\Rightarrow \\lnot P\\)</li> <li>\\((P\\rightarrow Q)\\land (Q\\rightarrow R)\\Rightarrow P\\rightarrow R\\)\uff0c\u200b\u4e09\u6bb5\u8bba\u200b</li> <li>\\((P\\leftrightarrow Q)\\land (Q\\leftrightarrow R)\\Rightarrow P\\leftrightarrow R\\)</li> <li>\\((P\\rightarrow R)\\land (Q\\rightarrow R)\\land (P\\lor Q)\\Rightarrow R\\)</li> <li>\\((R\\rightarrow Q)\\land (R\\rightarrow S)\\land (P\\lor R)\\Rightarrow Q\\lor S\\)</li> <li>\\((P\\rightarrow Q)\\land (R\\rightarrow S)\\land (\\lnot Q\\lor \\lnot S)\\Rightarrow (\\lnot P\\lor \\lnot R)\\)</li> <li>\\(Q\\rightarrow R\\Rightarrow ((P\\lor Q)\\rightarrow (P\\lor R))\\)</li> <li>\\(Q\\rightarrow R\\Rightarrow ((P\\rightarrow Q)\\rightarrow (P\\rightarrow R))\\)</li> </ul>"},{"location":"math/discrete-mathematics/chapter-2/#_10","title":"\u63a8\u7406\u200b\u6f14\u7b97","text":"<p>\u200b\u63a8\u7406\u200b\u6f14\u7b97\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u6709\u200b\u5982\u4e0b\u200b\u89c4\u5219\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\uff1a</p> <ul> <li>\u200b\u524d\u63d0\u200b\u5f15\u5165\u200b\u89c4\u5219\u200b\uff1a\u200b\u63a8\u7406\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u968f\u65f6\u200b\u5f15\u5165\u200b\u524d\u63d0\u200b</li> <li>\u200b\u7ed3\u8bba\u200b\u5f15\u7528\u200b\u89c4\u5219\u200b\uff1a\u200b\u63a8\u7406\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u4e2d\u95f4\u200b\u7ed3\u8bba\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u540e\u7eed\u200b\u63a8\u7406\u200b\u7684\u200b\u524d\u63d0\u200b</li> <li>\u200b\u4ee3\u5165\u200b\u89c4\u5219\u200b\uff1a\u200b\u63a8\u7406\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u5bf9\u200b\u91cd\u8a00\u5f0f\u200b\u7684\u200b\u547d\u9898\u200b\u53d8\u9879\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4ee3\u5165\u200b\u89c4\u5219\u200b</li> <li>\u200b\u7f6e\u6362\u200b\u89c4\u5219\u200b\uff1a\u200b\u63a8\u7406\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u4efb\u4f55\u200b\u90e8\u5206\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u7528\u200b\u4e0e\u200b\u4e4b\u200b\u7b49\u503c\u200b\u7684\u200b\u547d\u9898\u200b\u516c\u5f0f\u200b\u8fdb\u884c\u200b\u66ff\u6362\u200b</li> <li>\u200b\u5206\u79bb\u200b\u89c4\u5219\u200b\uff1a\u200b\u82e5\u200b\\(A\\)\u200b\u4e14\u200b\\(A\\rightarrow B\\)\u200b\u5219\u200b\\(B\\)</li> <li>\u200b\u6761\u4ef6\u200b\u8bc1\u660e\u200b\u89c4\u5219\u200b\uff1a\\(A_1\\land A_2\\Rightarrow B \\Leftrightarrow A_1\\Rightarrow A_2\\rightarrow B\\)</li> </ul>"},{"location":"math/discrete-mathematics/chapter-2/#_11","title":"\u5f52\u7ed3\u200b\u63a8\u7406","text":"<p>\u200b\u601d\u8def\u200b\uff1a\u200b\u8981\u200b\u8bc1\u660e\u200b\\(A\\Rightarrow B\\)\uff0c\u200b\u53ef\u200b\u8bc1\u660e\u200b\\(A\\land \\lnot B=F\\)\u3002</p> <ul> <li>\u200b\u5c06\u200b\\(C = A\\land \\lnot B\\)\u200b\u5316\u4e3a\u200b\u5408\u53d6\u8303\u5f0f\u200b\\(Q_1\\land \\dots \\land Q_n\\)\uff0c\u200b\u5f0f\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u6790\u53d6\u200b\u5f0f\u200b\u6784\u6210\u200b\u5b50\u53e5\u200b\u96c6\u5408\u200b\\(\\{Q_1,\\dots, Q_n\\}\\)</li> <li>\u200b\u6d88\u200b\u53bb\u200b\u5b50\u53e5\u200b\u96c6\u5408\u200b\u4e2d\u200b\u7684\u200b\u4e92\u8865\u200b\u5bf9\u200b\uff0c\u200b\u5982\u200b\\(P\\lor R\\)\u200b\u4e0e\u200b\\(\\lnot P\\lor \\lnot Q\\)\u200b\u5f52\u7ed3\u200b\u5f97\u5230\u200b\\(R\\lor \\lnot Q\\)\u3002\u200b\u4e0d\u65ad\u200b\u91cd\u590d\u200b\u6d88\u200b\u53bb\u200b\u8fc7\u7a0b\u200b\u3002</li> <li>\u200b\u76f4\u5230\u200b\u5b50\u53e5\u200b\u96c6\u5408\u200b\u4e3a\u7a7a\u200b\uff0c\u200b\u5f97\u5230\u200b\u7a7a\u5b50\u200b\u53e5\u200b\\(\\square\\)\uff0c\u200b\u8bc1\u660e\u200b\\(A\\land \\lnot B\\)\u200b\u662f\u200b\u77db\u76fe\u200b\u5f0f\u200b</li> </ul>"},{"location":"math/discrete-mathematics/chapter-3/","title":"\u547d\u9898\u903b\u8f91\u200b\u7684\u200b\u516c\u7406\u5316","text":"<p>\u200b\u516c\u7406\u200b\u7cfb\u7edf\u200b\u5305\u542b\u200b\u5982\u4e0b\u200b\u7ed3\u6784\u200b\uff1a</p> <ul> <li>\u200b\u521d\u59cb\u200b\u7b26\u53f7\u200b\uff1a\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u516c\u7406\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u5141\u8bb8\u200b\u51fa\u73b0\u200b\u7684\u200b\u7b26\u53f7\u200b\u96c6\u5408\u200b</li> <li>\u200b\u5f62\u6210\u200b\u89c4\u5219\u200b\uff1a\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u7b26\u53f7\u200b\u5e8f\u5217\u200b\u7684\u200b\u5408\u6cd5\u6027\u200b</li> <li>\u200b\u516c\u7406\u200b\uff1a\u200b\u516c\u7406\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u6700\u200b\u57fa\u672c\u200b\u7684\u200b\u91cd\u8a00\u5f0f\u200b\uff0c\u200b\u662f\u200b\u63a8\u6f14\u200b\u5176\u4ed6\u200b\u6240\u6709\u200b\u91cd\u8a00\u5f0f\u200b\u7684\u200b\u4f9d\u636e\u200b</li> <li>\u200b\u53d8\u5f62\u200b\u89c4\u5219\u200b\uff1a\u200b\u516c\u7406\u200b\u7cfb\u7edf\u200b\u6240\u200b\u89c4\u5b9a\u200b\u7684\u200b\u63a8\u6f14\u200b\u89c4\u5219\u200b\uff0c\u200b\u516c\u7406\u200b\u901a\u8fc7\u200b\u53d8\u5f62\u200b\u89c4\u5219\u200b\u5f97\u5230\u200b\u7684\u200b\u516c\u5f0f\u200b\u4e3a\u200b\u91cd\u8a00\u5f0f\u200b\uff0c\u200b\u79f0\u4e3a\u200b\u5b9a\u7406\u200b</li> </ul>"},{"location":"math/discrete-mathematics/chapter-3/#_2","title":"\u547d\u9898\u903b\u8f91\u200b\u7684\u200b\u516c\u7406\u200b\u7cfb\u7edf","text":"<p>\u200b\u4f9d\u636e\u200b\u516c\u7406\u200b\u7cfb\u7edf\u200b\u7684\u200b\u7ed3\u6784\u200b\u5efa\u7acb\u200b\u547d\u9898\u903b\u8f91\u200b\u7684\u200b\u516c\u7406\u200b\u7cfb\u7edf\u200b\u3002\u200b\u5e94\u5f53\u200b\u6ce8\u610f\u200b\u5230\u200b\uff0c\u200b\u547d\u9898\u903b\u8f91\u200b\u7684\u200b\u516c\u7406\u200b\u7cfb\u7edf\u200b\u4e0d\u662f\u200b\u552f\u4e00\u200b\u7684\u200b\u3002</p>"},{"location":"math/discrete-mathematics/chapter-3/#_3","title":"\u521d\u59cb\u200b\u7b26\u53f7","text":"<p>\u200b\u5927\u5199\u200b\u82f1\u6587\u5b57\u6bcd\u200b\\(A,\\dots ,Z\\)\u200b\u8868\u793a\u200b\u547d\u9898\u200b \\(\\lnot, \\lor\\)\u200b\u8868\u793a\u200b\u8054\u7ed3\u8bcd\u200b \\((, )\\)\u200b\u4e00\u5bf9\u200b\u62ec\u53f7\u200b\u89c4\u5b9a\u200b\u4e86\u200b\u8054\u7ed3\u8bcd\u200b\u8fd0\u7b97\u200b\u7684\u200b\u4f18\u5148\u200b\u987a\u5e8f\u200b \\(\\vdash\\)\u200b\u8868\u660e\u200b\u4e00\u4e2a\u200b\u516c\u5f0f\u200b\u662f\u200b\u6c38\u771f\u5f0f\u200b</p>"},{"location":"math/discrete-mathematics/chapter-3/#_4","title":"\u5f62\u6210\u200b\u89c4\u5219","text":"<p>\u200b\u79f0\u200b\u521d\u59cb\u200b\u7b26\u53f7\u200b\u6784\u6210\u200b\u7684\u200b\u7b26\u53f7\u200b\u5e8f\u5217\u200b\u4e3a\u200b\u516c\u5f0f\u200b\uff0c\u200b\u53ea\u6709\u200b\u7b26\u5408\u200b\u4ee5\u4e0b\u200b\u6761\u4ef6\u200b\u7684\u200b\u7b26\u53f7\u200b\u5e8f\u5217\u200b\u662f\u200b\u5408\u5f0f\u516c\u5f0f\u200b\uff1a</p> <ol> <li>\u200b\u5355\u4e2a\u200b\u7b26\u53f7\u200b\\(\\pi\\)\uff0c\\(\\pi\\)\u200b\u662f\u200b\u5927\u5199\u200b\u82f1\u6587\u5b57\u6bcd\u200b</li> <li>\u200b\u82e5\u200b\\(A\\)\u200b\u4e3a\u200b\u5408\u5f0f\u516c\u5f0f\u200b\uff0c\\(\\lnot A\\)\u200b\u662f\u200b\u5408\u5f0f\u516c\u5f0f\u200b</li> <li>\u200b\u82e5\u200b\\(A, B\\)\u200b\u4e3a\u200b\u5408\u5f0f\u516c\u5f0f\u200b\uff0c\\((A\\lor B)\\)\u200b\u662f\u200b\u5408\u5f0f\u516c\u5f0f\u200b</li> </ol> <p>\u200b\u4e3a\u200b\u7b80\u5316\u200b\u5176\u4ed6\u200b\u5408\u5f0f\u516c\u5f0f\u200b\u7684\u200b\u8868\u8fbe\u200b\uff0c\u200b\u5f15\u5165\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\u7684\u200b\u516c\u5f0f\u200b\uff1a</p> <ul> <li>\\((A\\rightarrow B):= (\\lnot A\\lor B)\\)</li> <li>\\((A\\land B):= \\lnot (\\lnot A\\lor \\lnot B)\\)</li> <li>\\((A\\leftrightarrow B):= ((A\\rightarrow B)\\land (B\\rightarrow A))\\)</li> </ul>"},{"location":"math/discrete-mathematics/chapter-3/#_5","title":"\u516c\u7406","text":"<p>\u200b\u5728\u200b\u516c\u7406\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u5f15\u5165\u200b\u5982\u4e0b\u200b\u516c\u7406\u200b\uff1a</p> <ul> <li>\\(\\vdash ((P\\lor P)\\rightarrow P)\\)</li> <li>\\(\\vdash (P\\rightarrow (P\\lor Q))\\)</li> <li>\\(\\vdash ((P\\lor Q) \\rightarrow (Q\\lor P))\\)</li> <li>\\(\\vdash ((Q\\rightarrow R)\\rightarrow ((P\\lor Q)\\rightarrow (P\\lor R)))\\)</li> </ul>"},{"location":"math/discrete-mathematics/chapter-3/#_6","title":"\u63a8\u7406\u200b\u89c4\u5219","text":"<p>\u200b\u4ee3\u5165\u200b\u89c4\u5219\u200b\u3001\u200b\u5206\u79bb\u200b\u89c4\u5219\u200b\u3001\u200b\u7f6e\u6362\u200b\u89c4\u5219\u200b\u662f\u200b\u547d\u9898\u903b\u8f91\u200b\u516c\u7406\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u7684\u200b\u63a8\u7406\u200b\u89c4\u5219\u200b</p>"},{"location":"math/discrete-mathematics/chapter-3/#_7","title":"\u738b\u6d69\u200b\u7b97\u6cd5","text":""},{"location":"math/discrete-mathematics/chapter-3/#_8","title":"\u521d\u59cb\u200b\u7b26\u53f7","text":"<p>\u200b\u5927\u5199\u5b57\u6bcd\u200b\\(A, \\dots, Z\\)\u200b\u8868\u793a\u200b\u547d\u9898\u200b \\(\\lnot, \\land, \\lor, \\rightarrow, \\leftrightarrow\\)\u200b\u8868\u793a\u200b\u8054\u7ed3\u8bcd\u200b \\((, ), ,\\)\u200b\u8868\u793a\u200b\u5706\u62ec\u53f7\u200b\u4e0e\u200b\u9017\u53f7\u200b \\(\\alpha, \\beta, \\dots, \\omega\\)\u200b\u8868\u793a\u200b\u516c\u5f0f\u200b\u4e32\u200b</p>"},{"location":"math/discrete-mathematics/chapter-3/#_9","title":"\u5f62\u6210\u200b\u89c4\u5219","text":"<p>\u200b\u7b26\u5408\u200b\u4ee5\u4e0b\u200b\u6761\u4ef6\u200b\u7684\u200b\u7b26\u53f7\u200b\u5e8f\u5217\u200b\u79f0\u4e3a\u200b\u5408\u5f0f\u516c\u5f0f\u200b\uff1a</p> <ol> <li>\u200b\u5355\u4e2a\u200b\u7b26\u53f7\u200b\\(\\pi\\)\uff0c\\(\\pi\\)\u200b\u662f\u200b\u5927\u5199\u200b\u82f1\u6587\u5b57\u6bcd\u200b</li> <li>\u200b\u82e5\u200b\\(A\\)\u200b\u4e3a\u200b\u5408\u5f0f\u516c\u5f0f\u200b\uff0c\u200b\u5219\u200b\\(\\lnot A\\)\u200b\u4e3a\u200b\u5408\u5f0f\u516c\u5f0f\u200b</li> <li>\u200b\u82e5\u200b\\(A, B\\)\u200b\u4e3a\u200b\u5408\u5f0f\u516c\u5f0f\u200b\uff0c\u200b\u5219\u200b\\((A\\lnot B), (A\\lor B), (A\\rightarrow B), (A\\leftrightarrow B)\\)\u200b\u662f\u200b\u5408\u5f0f\u516c\u5f0f\u200b</li> </ol> <p>\u200b\u6ee1\u8db3\u200b\u4ee5\u4e0b\u200b\u6761\u4ef6\u200b\u7684\u200b\u79f0\u4e3a\u200b\u516c\u5f0f\u200b\u4e32\u200b\uff1a</p> <ol> <li>\u200b\u7a7a\u200b\u7b26\u53f7\u4e32\u200b\u662f\u200b\u516c\u5f0f\u200b\u4e32\u200b</li> <li>\u200b\u5408\u5f0f\u516c\u5f0f\u200b\u662f\u200b\u516c\u5f0f\u200b\u4e32\u200b</li> <li>\u200b\u5982\u679c\u200b\\(\\alpha\\)\u200b\u548c\u200b\\(\\beta\\)\u200b\u662f\u200b\u516c\u5f0f\u200b\u4e32\u200b\uff0c\u200b\u5219\u200b\\(\\alpha, \\beta\\)\u200b\u662f\u200b\u516c\u5f0f\u200b\u4e32\u200b</li> </ol> <p>\u200b\u516c\u5f0f\u200b\u4e32\u200b\u4e0e\u200b\u7ec4\u6210\u200b\u516c\u5f0f\u200b\u4e32\u200b\u7684\u200b\u5408\u5f0f\u516c\u5f0f\u200b\u7684\u200b\u987a\u5e8f\u200b\u65e0\u5173\u200b\u3002</p>"},{"location":"math/discrete-mathematics/chapter-3/#_10","title":"\u5b9a\u4e49","text":"<ol> <li>\u200b\u5b9a\u4e49\u200b\u76f8\u7ee7\u200b\u5f0f\u200b\u4e3a\u200b\\(\\alpha\\stackrel s\\rightarrow\\beta\\)\uff0c\u200b\u5176\u4e2d\u200b\\(\\alpha, \\beta\\)\u200b\u90fd\u200b\u662f\u200b\u516c\u5f0f\u200b\u4e32\u200b</li> <li>\u200b\u524d\u4ef6\u200b\u4e2d\u200b\u7684\u200b\\(,\\)\u200b\u89e3\u91ca\u200b\u4e3a\u200b\\(\\land\\)\uff0c\u200b\u540e\u4ef6\u200b\u4e2d\u200b\u7684\u200b\\(,\\)\u200b\u89e3\u91ca\u200b\u4e3a\u200b\\(\\lor\\)</li> <li>\u200b\u82e5\u200b\\(\\alpha\\stackrel s\\rightarrow \\beta\\)\u200b\u4e3a\u200b\u91cd\u8a00\u5f0f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8bb0\u200b\u4f5c\u200b\\(\\alpha\\stackrel s\\Rightarrow \\beta\\)</li> </ol>"},{"location":"math/discrete-mathematics/chapter-3/#_11","title":"\u516c\u7406","text":"<p>\u200b\u82e5\u200b\\(\\alpha\\)\u200b\u548c\u200b\\(\\beta\\)\u200b\u7684\u200b\u516c\u5f0f\u200b\u4ec5\u4e3a\u200b\u547d\u9898\u200b\u53d8\u9879\u200b\uff0c\u200b\u4e0d\u200b\u5305\u542b\u200b\u8054\u7ed3\u8bcd\u200b\uff0c\u200b\u5219\u200b\\(\\alpha\\stackrel s\\rightarrow \\beta\\)\u200b\u4e3a\u200b\u91cd\u8a00\u5f0f\u200b\u7b49\u4ef7\u200b\u4e8e\u200b\\(\\alpha\\)\u200b\u4e0e\u200b\\(\\beta\\)\u200b\u4e2d\u200b\u81f3\u5c11\u200b\u542b\u6709\u200b\u4e00\u4e2a\u200b\u76f8\u540c\u200b\u7684\u200b\u547d\u9898\u200b\u53d8\u9879\u200b</p>"},{"location":"math/discrete-mathematics/chapter-3/#_12","title":"\u63a8\u7406\u200b\u89c4\u5219","text":"<p>\u200b\u5bf9\u4e8e\u200b\u5b58\u5728\u200b\u4e8e\u200b\u524d\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u8fd0\u7b97\u7b26\u200b\uff0c\u200b\u63a8\u7406\u200b\u89c4\u5219\u200b\u5982\u4e0b\u200b\uff1a</p> <ul> <li>\\(\\lnot\\)\uff1a\u200b\u82e5\u200b\\(\\alpha, \\beta \\stackrel s\\Rightarrow X, \\gamma\\)\uff0c\u200b\u5219\u200b\\(\\alpha, \\lnot X, \\beta \\stackrel x\\Rightarrow \\gamma\\)</li> <li>\\(\\land\\)\uff1a\u200b\u82e5\u200b\\(X, Y, \\alpha, \\beta\\stackrel s\\Rightarrow \\gamma\\)\uff0c\u200b\u5219\u200b\\(\\alpha, X\\land Y, \\beta\\stackrel s\\Rightarrow Y\\)</li> <li>\\(\\lor\\)\uff1a\u200b\u82e5\u200b\\(X, \\alpha, \\beta \\stackrel s\\Rightarrow \\gamma\\)\u200b\u4e14\u200b\\(Y, \\alpha, \\beta \\stackrel s\\Rightarrow X, \\gamma\\)\uff0c\u200b\u5219\u200b\\(\\alpha, X\\lor Y, \\beta\\stackrel s\\Rightarrow \\gamma\\)</li> <li>\\(\\rightarrow\\)\uff1a\u200b\u82e5\u200b\\(Y, \\alpha, \\beta\\stackrel s\\Rightarrow \\gamma\\)\u200b\u4e14\u200b\\(\\alpha, \\beta\\stackrel s\\Rightarrow X, \\gamma\\)\uff0c\u200b\u5219\u200b\\(\\alpha, X\\rightarrow Y, \\beta\\stackrel s\\Rightarrow \\gamma\\)</li> <li>\\(\\leftrightarrow\\)\uff1a\u200b\u82e5\u200b\\(X, Y, \\alpha, \\beta\\stackrel s\\Rightarrow \\gamma\\)\u200b\u4e14\u200b\\(\\alpha, \\beta\\stackrel s\\Rightarrow X, Y, \\gamma\\)\uff0c\u200b\u5219\u200b\\(\\alpha, X\\leftrightarrow Y, \\beta\\stackrel s\\Rightarrow \\gamma\\)</li> </ul> <p>\u200b\u5bf9\u4e8e\u200b\u5b58\u5728\u200b\u4e8e\u200b\u540e\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u8fd0\u7b97\u7b26\u200b\uff0c\u200b\u63a8\u7406\u200b\u89c4\u5219\u200b\u5982\u4e0b\u200b\uff1a</p> <ul> <li>\\(\\lnot\\)\uff1a\u200b\u82e5\u200b\\(X, \\alpha\\stackrel s\\Rightarrow \\beta, \\gamma\\)\uff0c\u200b\u5219\u200b\\(\\alpha\\stackrel s\\Rightarrow\\beta, \\lnot X, \\gamma\\)</li> <li>\\(\\land\\)\uff1a\u200b\u82e5\u200b\\(\\alpha\\stackrel s\\Rightarrow X, \\beta, \\gamma\\)\u200b\u4e14\u200b\\(\\alpha\\stackrel s\\Rightarrow\\)</li> <li>\\(\\land\\)\uff1a\u200b\u82e5\u200b\\(\\alpha\\stackrel s\\Rightarrow X, \\beta, \\gamma\\)\u200b\u4e14\u200b\\(\\alpha\\stackrel s\\Rightarrow Y, \\beta, \\gamma\\)\uff0c\u200b\u5219\u200b\\(\\alpha \\stackrel s\\Rightarrow\\beta, X\\land Y, \\gamma\\)</li> <li>\\(\\lor\\)\uff1a\u200b\u82e5\u200b\\(\\alpha\\stackrel s\\Rightarrow X, Y, \\beta, \\gamma\\)\uff0c\u200b\u5219\u200b\\(\\alpha\\stackrel s\\Rightarrow \\beta, X\\lor Y, \\gamma\\)</li> <li>\\(\\rightarrow\\)\uff1a\u200b\u82e5\u200b\\(X, \\alpha\\stackrel s\\Rightarrow Y, \\beta, \\gamma\\)\uff0c\u200b\u5219\u200b\\(\\alpha\\stackrel s\\Rightarrow \\beta, X\\rightarrow Y, \\gamma\\)</li> <li>\\(\\leftrightarrow\\)\uff1a\u200b\u82e5\u200b\\(X, \\alpha\\stackrel s\\Rightarrow Y, \\beta, \\gamma\\)\u200b\u4e14\u200b\\(Y, \\alpha\\stackrel s\\Rightarrow X, \\beta, \\gamma\\)\uff0c\u200b\u5219\u200b\\(\\alpha \\stackrel s\\Rightarrow \\beta, X\\leftrightarrow Y, \\gamma\\)</li> </ul> <p>\u200b\u5b9a\u7406\u200b\u7684\u200b\u63a8\u6f14\u200b\u8fc7\u7a0b\u200b\uff1a</p> <ol> <li>\u200b\u5c06\u8981\u200b\u8bc1\u660e\u200b\u7684\u200b\u5b9a\u7406\u200b\u5199\u6210\u200b\u76f8\u7ee7\u200b\u5f0f\u200b\u5f62\u5f0f\u200b</li> <li>\u200b\u4ece\u200b\u76f8\u7ee7\u200b\u5f0f\u200b\u51fa\u53d1\u200b\u4f7f\u7528\u200b\u53d8\u5f62\u200b\u89c4\u5219\u200b\u6d88\u200b\u53bb\u200b\u76f8\u7ee7\u200b\u5f0f\u200b\u4e24\u4fa7\u200b\u7684\u200b\u6240\u6709\u200b\u903b\u8f91\u200b\u8054\u7ed3\u8bcd\u200b</li> <li>\u200b\u82e5\u200b\u5f97\u5230\u200b\u7684\u200b\u6240\u6709\u200b\u76f8\u7ee7\u200b\u5f0f\u200b\u90fd\u200b\u662f\u200b\u516c\u7406\u200b\uff0c\u200b\u5219\u200b\u5b9a\u7406\u200b\u6210\u7acb\u200b</li> </ol>"},{"location":"math/discrete-mathematics/chapter-3/#_13","title":"\u547d\u9898\u903b\u8f91\u200b\u7684\u200b\u81ea\u7136\u200b\u6f14\u7ece\u200b\u7cfb\u7edf","text":""},{"location":"math/discrete-mathematics/chapter-3/#_14","title":"\u521d\u59cb\u200b\u7b26\u53f7","text":"<p>\u200b\u547d\u9898\u903b\u8f91\u200b\u7684\u200b\u81ea\u7136\u200b\u6f14\u7ece\u200b\u7cfb\u7edf\u200b\u7684\u200b\u4e00\u90e8\u5206\u200b\u521d\u59cb\u200b\u7b26\u53f7\u200b\u7ee7\u627f\u200b\u81ea\u200b\u547d\u9898\u903b\u8f91\u200b\u7684\u200b\u516c\u7406\u200b\u7cfb\u7edf\u200b\u3002\u200b\u6b64\u5916\u200b\uff0c\u200b\u547d\u9898\u903b\u8f91\u200b\u7684\u200b\u81ea\u7136\u200b\u6f14\u7ece\u200b\u7cfb\u7edf\u200b\u8fd8\u200b\u5305\u542b\u200b\u5982\u4e0b\u200b\u521d\u59cb\u200b\u7b26\u53f7\u200b\uff1a</p> \\[ \\varGamma = \\{A_1, \\dots, A_n\\}=A_1, \\dots, A_n \\] <p>\u200b\u8868\u793a\u200b\u6709\u9650\u200b\u4e2a\u200b\u547d\u9898\u200b\u516c\u5f0f\u200b\u96c6\u5408\u200b\uff0c\u200b\u5b9a\u4e49\u200b\\(\\varGamma \\vdash A\\)\u200b\u8868\u793a\u200b\\(\\varGamma, A\\)\u200b\u4e4b\u95f4\u200b\u6709\u200b\u5f62\u5f0f\u200b\u63a8\u7406\u200b\u5173\u7cfb\u200b\uff0c\\(\\varGamma\\)\u200b\u4e3a\u200b\u5f62\u5f0f\u200b\u524d\u63d0\u200b\uff0c\\(A\\)\u200b\u4e3a\u200b\u5f62\u5f0f\u200b\u7ed3\u8bba\u200b\u3002</p>"},{"location":"math/discrete-mathematics/chapter-3/#_15","title":"\u5f62\u6210\u200b\u89c4\u5219","text":"<p>\u200b\u547d\u9898\u903b\u8f91\u200b\u7684\u200b\u81ea\u7136\u200b\u6f14\u7ece\u200b\u7cfb\u7edf\u200b\u7684\u200b\u5f62\u6210\u200b\u89c4\u5219\u200b\u4e0e\u200b\u547d\u9898\u903b\u8f91\u200b\u7684\u200b\u516c\u7406\u200b\u7cfb\u7edf\u200b\u7684\u200b\u5f62\u6210\u200b\u89c4\u5219\u200b\u76f8\u540c\u200b</p>"},{"location":"math/discrete-mathematics/chapter-3/#_16","title":"\u53d8\u5f62\u200b\u89c4\u5219","text":"<p>\u200b\u547d\u9898\u903b\u8f91\u200b\u7684\u200b\u81ea\u7136\u200b\u6f14\u7ece\u200b\u7cfb\u7edf\u200b\u6709\u200b\u5982\u4e0b\u200b\u53d8\u5f62\u200b\u89c4\u5219\u200b\uff1a</p> <ol> <li>\\(A_1, \\dots, A_n\\vdash A_i(i=1, \\dots, n)\\)\uff0c\u200b\u5373\u200b\u524d\u63d0\u200b\u4e2d\u200b\u7684\u200b\u4efb\u4f55\u200b\u547d\u9898\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u7ed3\u8bba\u200b\u51fa\u73b0\u200b</li> <li>\u200b\u4f20\u9012\u200b\u5f8b\u200b\uff1a\u200b\u82e5\u200b\\(\\varGamma \\vdash A\\)\u200b\u4e14\u200b\\(A\\vdash B\\)\uff0c\u200b\u5219\u200b\\(\\varGamma\\vdash B\\)</li> <li>\u200b\u53cd\u8bc1\u200b\u5f8b\u200b\uff1a\u200b\u82e5\u200b\\(\\varGamma, \\lnot A\\vdash B\\)\u200b\u4e14\u200b\\(\\varGamma, \\lnot A\\vdash \\lnot B\\)\uff0c\u200b\u5219\u200b\\(\\varGamma \\vdash A\\)\uff08\u200b\u7b49\u4ef7\u200b\u4e8e\u200b\u8bc1\u660e\u200b\\(\\varGamma \\land \\lnot A=F\\)\uff09</li> <li>\u200b\u5206\u79bb\u200b\u89c4\u5219\u200b\uff1a\\(A, A\\rightarrow B\\vdash B\\)</li> <li>\u200b\u8574\u542b\u200b\u8bcd\u200b\u5f15\u5165\u200b\uff1a\u200b\u82e5\u200b\\(\\varGamma, A\\vdash B\\)\uff0c\u200b\u5219\u200b\\(\\varGamma\\vdash A\\rightarrow B\\)</li> </ol>"},{"location":"math/discrete-mathematics/chapter-3/#_17","title":"\u5b9a\u7406","text":"<p>\u200b\u547d\u9898\u903b\u8f91\u200b\u7684\u200b\u81ea\u7136\u200b\u6f14\u7ece\u200b\u7cfb\u7edf\u200b\u5305\u542b\u200b\u7684\u200b\u5b9a\u7406\u200b\u4e0e\u200b\u547d\u9898\u903b\u8f91\u200b\u7684\u200b\u516c\u7406\u200b\u7cfb\u7edf\u200b\u5305\u542b\u200b\u7684\u200b\u5b9a\u7406\u200b\u76f8\u540c\u200b</p>"},{"location":"math/discrete-mathematics/chapter-3/#_18","title":"\u975e\u6807\u51c6\u200b\u903b\u8f91","text":"<ol> <li>\u200b\u591a\u503c\u903b\u8f91\u200b\uff0c\u200b\u82e5\u200b\\(P\\)\u200b\u53d6\u503c\u200b\u4e8e\u200b\\([0,1]\\)\uff0c\u200b\u53ef\u4ee5\u200b\u89e3\u91ca\u200b\u4e3a\u200b<ul> <li>\\(P=0\\)\u200b\u8868\u793a\u200b\\(P\\)\u200b\u771f\u200b</li> <li>\\(P=1\\)\u200b\u8868\u793a\u200b\\(P\\)\u200b\u5047\u200b</li> <li>\\(0&lt;P&lt;1\\)\u200b\u8868\u793a\u200b\\(P\\)\u200b\u4e3a\u200b\u771f\u7684\u200b\u6982\u7387\u200b\u4e3a\u200b\\(1-P\\) </li> </ul> </li> <li>\u200b\u4e09\u503c\u200b\u903b\u8f91\u200b<ul> <li>Kleene\u200b\u903b\u8f91\u200b\uff1a\\(T, F, U\\)\uff0c\\(U\\)\u200b\u8868\u793a\u200b\u672a\u77e5\u200b</li> <li>Lukasiewicz\u200b\u903b\u8f91\u200b\uff1a\\(T, F, I\\)\uff0c\\(I\\)\u200b\u8868\u793a\u200b\u5c06\u6765\u200b\u53ef\u80fd\u200b\uff0c\u200b\u76ee\u524d\u200b\u4e0d\u200b\u5177\u5907\u200b\u771f\u503c\u200b</li> <li>Bochvar\u200b\u903b\u8f91\u200b\uff1a\\(T, F, M\\)\uff0c\\(M\\)\u200b\u8868\u793a\u200b\u6096\u8bba\u200b</li> </ul> </li> </ol>"},{"location":"math/discrete-mathematics/chapter-4/","title":"\u8c13\u8bcd\u200b\u903b\u8f91\u200b\u7684\u200b\u57fa\u672c\u6982\u5ff5","text":"<p>\u200b\u8c13\u8bcd\u200b\u8868\u793a\u200b\u4e86\u200b\u591a\u4e2a\u200b\u4e2a\u4f53\u200b\u8bcd\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5173\u7cfb\u200b\u3002\u200b\u8fdb\u4e00\u6b65\u200b\u5730\u200b\u8bb2\u200b\u662f\u200b\u7ed9\u5b9a\u200b\u7684\u200b\u4e2a\u4f53\u200b\u8bcd\u5230\u200b\u96c6\u5408\u200b\\(\\{T, F\\}\\)\u200b\u4e0a\u200b\u7684\u200b\u4e00\u4e2a\u200b\u6620\u5c04\u200b\uff0c\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5176\u200b\u5199\u200b\u4e3a\u200b\u51fd\u6570\u200b\u7684\u200b\u5f62\u5f0f\u200b\uff0c\u200b\u5982\u200b\\(P(x, y)\\)</p> <p>\u200b\u51fd\u6570\u200b\u8868\u793a\u200b\u4ece\u200b\u4e00\u4e2a\u200b\u96c6\u5408\u200b\u5230\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u96c6\u5408\u200b\u7684\u200b\u6620\u5c04\u200b\uff0c\u200b\u901a\u5e38\u200b\u4f7f\u7528\u200b\u5c0f\u5199\u5b57\u6bcd\u200b\u8fdb\u884c\u200b\u8868\u793a\u200b\u3002</p> <p>\u200b\u6709\u200b\u4e24\u79cd\u200b\u91cf\u8bcd\u200b\uff0c\u200b\u5373\u200b\u5168\u79f0\u200b\u91cf\u8bcd\u200b\u4e0e\u200b\u5b58\u5728\u200b\u91cf\u8bcd\u200b\u3002\u200b\u53d7\u5230\u200b\u91cf\u8bcd\u200b\u7ea6\u675f\u200b\u7684\u200b\u53d8\u5143\u200b\u79f0\u4e3a\u200b\u7ea6\u675f\u200b\u53d8\u5143\u200b\uff0c\u200b\u5426\u5219\u200b\u79f0\u4e3a\u200b\u81ea\u7531\u200b\u53d8\u5143\u200b\u3002\u200b\u91cf\u8bcd\u200b\u53ea\u80fd\u200b\u4f5c\u7528\u200b\u4e8e\u200b\u53d8\u5143\u200b\u800c\u200b\u4e0d\u80fd\u200b\u4f5c\u7528\u200b\u4e8e\u200b\u547d\u9898\u200b\u53d8\u9879\u200b\u4e0e\u200b\u8c13\u8bcd\u200b\u53d8\u9879\u200b\u3002\u200b\u53d8\u5143\u200b\u4f7f\u7528\u200b\u5c0f\u5199\u5b57\u6bcd\u200b\u8868\u793a\u200b\u3002</p>"},{"location":"math/discrete-mathematics/chapter-4/#_2","title":"\u5408\u5f0f\u516c\u5f0f","text":"<p>\u200b\u5408\u5f0f\u516c\u5f0f\u200b\u5b9a\u4e49\u200b\u5982\u4e0b\u200b\uff1a</p> <ol> <li>\u200b\u547d\u9898\u200b\u5e38\u9879\u200b\u3001\u200b\u547d\u9898\u200b\u53d8\u9879\u200b\u548c\u200b\u539f\u5b50\u200b\u8c13\u8bcd\u200b\u516c\u5f0f\u200b\u90fd\u200b\u662f\u200b\u5408\u5f0f\u516c\u5f0f\u200b</li> <li>\u200b\u82e5\u200b\\(A\\)\u200b\u4e3a\u200b\u5408\u5f0f\u516c\u5f0f\u200b\uff0c\u200b\u5219\u200b\\(\\lnot A\\)\u200b\u4e3a\u200b\u5408\u5f0f\u516c\u5f0f\u200b</li> <li>\u200b\u82e5\u200b\\(A, B\\)\u200b\u4e3a\u200b\u5408\u5f0f\u516c\u5f0f\u200b\uff0c\u200b\u4e14\u200b\\(A, B\\)\u200b\u4e2d\u65e0\u53d8\u200b\u5143\u200b\u5728\u200b\u4e00\u4e2a\u200b\u4e2d\u200b\u7ea6\u675f\u200b\u800c\u200b\u5728\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u4e2d\u200b\u81ea\u7531\u200b\uff0c\u200b\u5219\u200b\\((A\\land B), (A\\lor B), (A\\rightarrow B), (A\\leftrightarrow B)\\)\u200b\u4e3a\u200b\u5408\u5f0f\u516c\u5f0f\u200b\u3002</li> <li>\u200b\u82e5\u200b\\(A\\)\u200b\u4e3a\u200b\u5408\u5f0f\u516c\u5f0f\u200b\uff0c\\(x\\)\u200b\u5728\u200b\\(A\\)\u200b\u4e2d\u4e3a\u200b\u81ea\u7531\u200b\u53d8\u5143\u200b\uff0c\u200b\u5219\u200b\\((\\forall x)A, (\\exists x)A\\)\u200b\u4e3a\u200b\u5408\u5f0f\u516c\u5f0f\u200b</li> </ol> <p>\u200b\u5728\u200b\u6709\u9650\u200b\u8bba\u57df\u200b\u4e0b\u200b\uff0c\u200b\u5168\u79f0\u200b\u91cf\u8bcd\u200b\u4e0e\u200b\u7279\u79f0\u200b\u91cf\u8bcd\u200b\u53ef\u200b\u4e0e\u200bi\u200b\u8868\u793a\u200b\u4e3a\u200b\u547d\u9898\u903b\u8f91\u200b\u4e0b\u200b\u7684\u200b\u5408\u5f0f\u516c\u5f0f\u200b\uff1a</p> <ul> <li>\\((\\forall x)P(x) = P(1)\\land P(2)\\land \\dots \\land P(k)\\)</li> <li>\\((\\exists x)P(x) = P(1)\\lor P(2)\\lor \\dots \\lor P(k)\\)\\</li> </ul> <p>\u200b\u5bf9\u4e8e\u200b\u8c13\u8bcd\u200b\u516c\u5f0f\u200b\uff0c\u200b\u82e5\u200b\u5728\u200b\u4efb\u4f55\u200b\u89e3\u91ca\u200b\u4e0b\u200b\u771f\u503c\u200b\u90fd\u200b\u4e3a\u200b\u771f\u200b\uff0c\u200b\u79f0\u8c13\u200b\u8bcd\u200b\u516c\u5f0f\u200b\u4e3a\u200b\u666e\u904d\u200b\u6709\u6548\u200b\u7684\u200b\u8c13\u8bcd\u200b\u516c\u5f0f\u200b\uff1b\u200b\u82e5\u200b\u5728\u200b\u67d0\u4e2a\u200b\u89e3\u91ca\u200b\u4e0b\u200b\u771f\u503c\u200b\u4e3a\u200b\u771f\u200b\uff0c\u200b\u79f0\u8c13\u200b\u8bcd\u200b\u516c\u5f0f\u200b\u4e3a\u200b\u53ef\u200b\u6ee1\u8db3\u200b\u7684\u200b\u8c13\u8bcd\u200b\u516c\u5f0f\u200b\uff0c\u200b\u5426\u5219\u200b\u79f0\u4e3a\u200b\u4e0d\u53ef\u200b\u6ee1\u8db3\u200b\u7684\u200b\u8c13\u8bcd\u200b\u516c\u5f0f\u200b\u3002</p> <ul> <li>\u200b\u8c13\u8bcd\u200b\u903b\u8f91\u200b\u662f\u200b\u4e0d\u53ef\u5224\u5b9a\u200b\u7684\u200b</li> <li>\u200b\u53ea\u200b\u542b\u6709\u200b\u4e00\u5143\u200b\u8c13\u8bcd\u200b\u53d8\u9879\u200b\u7684\u200b\u8c13\u8bcd\u200b\u516c\u5f0f\u200b\u662f\u200b\u53ef\u200b\u5224\u5b9a\u200b\u7684\u200b</li> <li>\u200b\u4e2a\u4f53\u200b\u57df\u200b\u6709\u9650\u200b\u7684\u200b\u8c13\u8bcd\u200b\u516c\u5f0f\u200b\u662f\u200b\u53ef\u200b\u5224\u5b9a\u200b\u7684\u200b</li> </ul>"},{"location":"math/discrete-mathematics/chapter-5/","title":"\u8c13\u8bcd\u200b\u903b\u8f91\u200b\u7684\u200b\u7b49\u503c\u200b\u548c\u200b\u63a8\u7406\u200b\u6f14\u7b97","text":"<p>\u200b\u5bf9\u4e8e\u200b\u4e24\u4e2a\u200b\u8c13\u8bcd\u200b\u516c\u5f0f\u200b\\(A, B\\)\uff0c\u200b\u82e5\u200b\u5728\u200b\\(A, B\\)\u200b\u7684\u200b\u4efb\u4e00\u200b\u89e3\u91ca\u200b\u4e0b\u200b\uff0c\\(A, B\\)\u200b\u90fd\u200b\u6709\u200b\u76f8\u540c\u200b\u7684\u200b\u771f\u503c\u200b\uff0c\u200b\u5373\u200b\\(A\\leftrightarrow B\\)\uff0c\u200b\u79f0\u200b\\(A, B\\)\u200b\u7b49\u503c\u200b\u3002\u200b\u8bb0\u200b\u4e3a\u200b\\(A=B\\)\u200b\u6216\u200b\\(A\\Leftrightarrow B\\)\u3002</p>"},{"location":"math/discrete-mathematics/chapter-5/#_2","title":"\u7b49\u503c\u200b\u5f0f","text":"<ol> <li>\u200b\u5c06\u200b\u8c13\u8bcd\u200b\u516c\u5f0f\u200b\u4ee3\u5165\u200b\u547d\u9898\u903b\u8f91\u200b\u4e0b\u200b\u7684\u200b\u7b49\u503c\u200b\u516c\u5f0f\u200b\u5373\u53ef\u200b\u5f97\u5230\u200b\u8c13\u8bcd\u200b\u903b\u8f91\u200b\u7684\u200b\u7b49\u503c\u200b\u516c\u5f0f\u200b</li> <li>\u200b\u5426\u5b9a\u200b\u578b\u200b\u7b49\u503c\u200b\u5f0f\u200b</li> <li>\\(\\lnot (\\forall x)P(x) = (\\exists x)\\lnot P(x)\\)</li> <li>\\(\\lnot (\\exists x)P(x) = (\\forall x)\\lnot P(x)\\)</li> <li>\u200b\u91cf\u8bcd\u200b\u5206\u914d\u200b\u7b49\u503c\u200b\u5f0f\u200b\uff08\\(q\\)\u200b\u4e3a\u200b\u547d\u9898\u200b\u53d8\u9879\u200b\uff0c\\(x\\)\u200b\u4e3a\u200b\u53d8\u5143\u200b\uff09</li> <li>\\((\\forall x)(P(x)\\lor q) = (\\forall x)P(x)\\lor q\\)</li> <li>\\((\\exists x)(P(x)\\lor q) = (\\exists x)P(x)\\lor q\\)</li> <li>\\((\\forall x)(P(x)\\land q) = (\\forall x)P(x)\\land q\\)</li> <li>\\((\\exists x)(P(x)\\land q) = (\\forall x)P(x)\\land q\\)</li> <li>\u200b\u5bf9\u200b\\(\\rightarrow\\)\u200b\u7684\u200b\u5206\u914d\u5f8b\u200b</li> <li>\\((\\forall x)(P(x)\\rightarrow q) = (\\exists x)P(x)\\rightarrow q\\)</li> <li>\\((\\exists x)(P(x)\\rightarrow q) = (\\forall x)P(x)\\rightarrow q\\)</li> <li>\\((\\forall x)(p\\rightarrow Q(x)) = p\\rightarrow (\\forall x)Q(x)\\)</li> <li>\\((\\exists x)(p\\rightarrow Q(x)) = p\\rightarrow (\\exists x)Q(x)\\)</li> <li>\u200b\u91cf\u8bcd\u200b\\(\\forall\\)\u200b\u5bf9\u200b\\(\\land\\)\u3001\u200b\u91cf\u8bcd\u200b\\(\\exists\\)\u200b\u5bf9\u200b\\(\\lor\\)\u200b\u7684\u200b\u5206\u914d\u5f8b\u200b</li> <li>\\((\\forall x)(P(x)\\land Q(x)) = (\\forall x)P(x) \\land (\\forall x)Q(x)\\)</li> <li>\\((\\exists x)(P(x)\\lor Q(x)) = (\\exists x)P(x) \\lor (\\exists x)Q(x)\\)</li> <li>\u200b\u53d8\u5143\u200b\u6613\u540d\u200b\u7684\u200b\u5206\u914d\u5f8b\u200b</li> <li>\\((\\forall x)(\\forall y)(P(x)\\lor Q(y)) = (\\forall x)P(x) \\lor (\\forall x)Q(x)\\)</li> <li>\\((\\exists x)(\\exists y)(P(x)\\land Q(y)) = (\\forall x)P(x) \\land (\\forall x)Q(x)\\)</li> </ol>"},{"location":"math/discrete-mathematics/chapter-5/#_3","title":"\u8303\u5f0f","text":"<p>\u200b\u82e5\u200b\u8c13\u8bcd\u200b\u516c\u5f0f\u200b\\(A\\)\u200b\u4e2d\u200b\u7684\u200b\u4e00\u5207\u200b\u91cf\u8bcd\u200b\u90fd\u200b\u4f4d\u4e8e\u200b\u516c\u5f0f\u200b\u7684\u200b\u6700\u200b\u5de6\u4fa7\u200b\uff0c\u200b\u4e14\u200b\u91cf\u8bcd\u200b\u7684\u200b\u4f5c\u7528\u57df\u200b\u5ef6\u4f38\u200b\u5230\u200b\u516c\u5f0f\u200b\u7684\u200b\u672b\u7aef\u200b\uff0c\u200b\u5219\u200b\u79f0\u8c13\u200b\u8bcd\u200b\u516c\u5f0f\u200b\\(A\\)\u200b\u4e3a\u200b\u524d\u675f\u200b\u8303\u5f0f\u200b\u3002\u200b\u524d\u675f\u200b\u8303\u5f0f\u200b\u7684\u200b\u4e00\u822c\u200b\u5f62\u5f0f\u200b\u5982\u4e0b\u200b\uff1a</p> \\[ (Q_1x_1)\\dots (Q_nx_n)M(x_1, \\dots, x_n) \\] <p>\u200b\u5176\u4e2d\u200b\\(Q_i\\)\u200b\u4e3a\u200b\u5168\u79f0\u200b\u91cf\u8bcd\u200b\\(\\forall\\)\u200b\u6216\u200b\u7279\u79f0\u200b\u91cf\u8bcd\u200b\\(\\exists\\)\uff0c\\(M\\)\u200b\u79f0\u4e3a\u200b\u6bcd\u5f0f\u200b\uff0c\u200b\u4e0d\u200b\u542b\u6709\u200b\u91cf\u8bcd\u200b\u3002</p> <p>\u200b\u4efb\u4f55\u200b\u8c13\u8bcd\u200b\u516c\u5f0f\u200b\u90fd\u200b\u6709\u200b\u4e0e\u200b\u4e4b\u200b\u7b49\u503c\u200b\u7684\u200b\u524d\u675f\u200b\u8303\u5f0f\u200b\uff0c\u200b\u4f46\u200b\u524d\u675f\u200b\u8303\u5f0f\u200b\u4e0d\u200b\u552f\u4e00\u200b\u3002\u200b\u901a\u8fc7\u200b\u5982\u4e0b\u200b\u6d41\u7a0b\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u8c13\u8bcd\u200b\u516c\u5f0f\u5316\u200b\u4e3a\u200b\u524d\u675f\u200b\u8303\u5f0f\u200b\uff1a</p> <ul> <li>\u200b\u5c06\u200b\u8c13\u8bcd\u200b\u516c\u5f0f\u200b\u4e2d\u200b\u7684\u200b\\(\\rightarrow\\)\u200b\u8054\u7ed3\u8bcd\u200b\u4e0e\u200b\\(\\leftrightarrow\\)\u200b\u8054\u7ed3\u8bcd\u200b\u6d88\u200b\u53bb\u200b</li> <li>\u200b\u4f7f\u7528\u200b\u6469\u6839\u200b\u5f8b\u200b\uff0c\u200b\u5c06\u200b\\(\\lnot\\)\u200b\u5185\u79fb\u200b\u5230\u200b\u547d\u9898\u200b\u53d8\u9879\u200b\u6216\u200b\u8c13\u8bcd\u200b\u4e4b\u524d\u200b</li> <li>\u200b\u4f7f\u7528\u200b\u91cf\u8bcd\u200b\u5206\u914d\u200b\u7b49\u503c\u200b\u5f0f\u200b\u5c06\u200b\u91cf\u8bcd\u200b\u79fb\u52a8\u200b\u5230\u200b\u5de6\u4fa7\u200b</li> <li>\u200b\u4f7f\u7528\u200b\u53d8\u5143\u200b\u6613\u540d\u200b\u5206\u914d\u200b\u7b49\u503c\u200b\u5f0f\u200b\u5408\u5e76\u200b\u8c13\u8bcd\u200b</li> </ul>"},{"location":"math/discrete-mathematics/chapter-5/#skolem","title":"Skolem\u200b\u6807\u51c6\u578b","text":"<p>\u200b\u79f0\u200b\u4e00\u4e2a\u200b\u8c13\u8bcd\u200b\u516c\u5f0f\u200b\u4e3a\u200b\\(\\exists\\)\u200b\u524d\u675f\u200b\u8303\u5f0f\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\u8c13\u8bcd\u200b\u516c\u5f0f\u200b\u4e2d\u200b\u7684\u200b\u5b58\u5728\u200b\u91cf\u8bcd\u200b\u90fd\u200b\u5728\u200b\u5168\u79f0\u200b\u91cf\u8bcd\u200b\u7684\u200b\u5de6\u8fb9\u200b\uff0c\u200b\u5e76\u4e14\u200b\u53ef\u4ee5\u200b\u4fdd\u6301\u200b\u516c\u5f0f\u200b\u4e2d\u200b\u81f3\u5c11\u200b\u5b58\u5728\u200b\u4e00\u4e2a\u200b\u5b58\u5728\u200b\u91cf\u8bcd\u200b\u3002\u200b\u6bcd\u5f0f\u200b\u4e2d\u200b\u4e0d\u200b\u542b\u6709\u200b\u4efb\u4f55\u200b\u91cf\u8bcd\u200b\uff0c\u200b\u4e5f\u200b\u4e0d\u200b\u542b\u200b\u81ea\u7531\u200b\u4e2a\u4f53\u200b\u53d8\u9879\u200b\u3002 \u200b\u79f0\u200b\u4e00\u4e2a\u200b\u8c13\u8bcd\u200b\u516c\u5f0f\u200b\u4e3a\u200b\u4ec5\u200b\u4fdd\u7559\u200b\u5168\u79f0\u200b\u91cf\u8bcd\u200b\u7684\u200b\u524d\u675f\u200b\u578b\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\u8c13\u8bcd\u200b\u516c\u5f0f\u200b\u4e2d\u200b\u53ea\u200b\u5305\u542b\u200b\u5168\u79f0\u200b\u91cf\u8bcd\u200b\u800c\u200b\u4e0d\u200b\u5305\u542b\u200b\u5b58\u5728\u200b\u91cf\u8bcd\u200b\u3002\u200b\u6bcd\u5f0f\u200b\u4e2d\u200b\u4e0d\u200b\u542b\u6709\u200b\u4efb\u4f55\u200b\u91cf\u8bcd\u200b\uff0c\u200b\u4e5f\u200b\u4e0d\u200b\u542b\u200b\u81ea\u7531\u200b\u4e2a\u4f53\u200b\u53d8\u9879\u200b\u3002</p> <ul> <li>\u200b\u4e00\u4e2a\u200b\u8c13\u8bcd\u200b\u516c\u5f0f\u200b\\(A\\)\u200b\u53ef\u4ee5\u200b\u5316\u6210\u200b\u76f8\u5e94\u200b\u7684\u200b\\(\\exists\\)\u200b\u524d\u675f\u200b\u8303\u5f0f\u200b\uff0c\\(A\\)\u200b\u666e\u904d\u200b\u6709\u6548\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(\\exists\\)\u200b\u524d\u675f\u200b\u8303\u5f0f\u200b\u666e\u904d\u200b\u6709\u6548\u200b</li> <li>\u200b\u4e00\u4e2a\u200b\u8c13\u8bcd\u200b\u516c\u5f0f\u200b\\(A\\)\u200b\u53ef\u4ee5\u200b\u5316\u6210\u200b\u76f8\u5e94\u200b\u7684\u200b\u4ec5\u200b\u4fdd\u7559\u200b\u5168\u79f0\u200b\u91cf\u8bcd\u200b\u7684\u200b\u524d\u675f\u200b\u578b\u200b\uff0c\\(A\\)\u200b\u4e0d\u53ef\u200b\u6ee1\u8db3\u200b\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u4ec5\u200b\u4fdd\u7559\u200b\u5168\u79f0\u200b\u91cf\u8bcd\u200b\u7684\u200b\u524d\u675f\u200b\u578b\u200b\u4e0d\u53ef\u200b\u6ee1\u8db3\u200b</li> </ul>"},{"location":"math/discrete-mathematics/chapter-9/","title":"\u96c6\u5408","text":"<p>\u200b\u96c6\u5408\u200b\u662f\u200b\u4e00\u4e9b\u200b\u786e\u5b9a\u200b\u7684\u200b\u3001\u200b\u53ef\u4ee5\u200b\u533a\u5206\u200b\u7684\u200b\u4e8b\u7269\u200b\u6c47\u805a\u200b\u5728\u200b\u4e00\u8d77\u200b\u7ec4\u6210\u200b\u7684\u200b\u4e00\u4e2a\u200b\u6574\u4f53\u200b\uff0c\u200b\u7ec4\u6210\u200b\u4e00\u4e2a\u200b\u96c6\u5408\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u4e8b\u7269\u200b\u79f0\u4e3a\u200b\u8be5\u200b\u96c6\u5408\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u3002</p> <ul> <li>\u200b\u96c6\u5408\u200b\u7684\u200b\u5143\u7d20\u200b\u53ef\u4ee5\u200b\u662f\u200b\u4efb\u4f55\u4e8b\u7269\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u662f\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u96c6\u5408\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u80fd\u200b\u662f\u200b\u81ea\u8eab\u200b</li> <li>\u200b\u96c6\u5408\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u6ee1\u8db3\u200b\u552f\u4e00\u6027\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u51fa\u73b0\u200b\u76f8\u540c\u200b\u7684\u200b\u5143\u7d20\u200b</li> <li>\u200b\u96c6\u5408\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u6ca1\u6709\u200b\u987a\u5e8f\u200b\u5173\u7cfb\u200b</li> <li>\u200b\u5143\u7d20\u200b\u4e0e\u200b\u96c6\u5408\u200b\u7684\u200b\u5173\u7cfb\u200b\u662f\u200b\u786e\u5b9a\u200b\u7684\u200b\uff0c\u200b\u5373\u200b\u5c5e\u4e8e\u200b\uff08\\(\\in\\)\uff09\u200b\u4e0e\u200b\u4e0d\u200b\u5c5e\u4e8e\u200b\uff08\\(\\not\\in\\)\uff09</li> </ul>"},{"location":"math/discrete-mathematics/chapter-9/#_2","title":"\u96c6\u5408\u200b\u7684\u200b\u8868\u793a","text":"<p>\u200b\u4ee5\u4e0b\u200b\u5217\u4e3e\u200b\u51fa\u200b\u5e38\u89c1\u200b\u7684\u200b\u96c6\u5408\u200b\uff1a</p> <ul> <li>\\(\\mathbf N\\)\u200b\u8868\u793a\u200b\u5168\u4f53\u200b\u81ea\u7136\u6570\u200b\u7ec4\u6210\u200b\u7684\u200b\u96c6\u5408\u200b</li> <li>\\(\\mathbf Z\\)\u200b\u8868\u793a\u200b\u5168\u4f53\u200b\u6574\u6570\u200b\u7ec4\u6210\u200b\u7684\u200b\u96c6\u5408\u200b</li> <li>\\(\\mathbf Q\\)\u200b\u8868\u793a\u200b\u5168\u4f53\u200b\u6709\u7406\u6570\u200b\u7ec4\u6210\u200b\u7684\u200b\u96c6\u5408\u200b</li> <li>\\(\\mathbf R\\)\u200b\u8868\u793a\u200b\u5168\u4f53\u200b\u5b9e\u6570\u200b\u7ec4\u6210\u200b\u7684\u200b\u96c6\u5408\u200b</li> <li>\\(\\mathbf C\\)\u200b\u8868\u793a\u200b\u5168\u4f53\u200b\u590d\u6570\u200b\u7ec4\u6210\u200b\u7684\u200b\u96c6\u5408\u200b</li> </ul> <p>\u200b\u53ef\u4ee5\u200b\u7528\u200b\u5916\u5ef6\u200b\u8868\u793a\u6cd5\u200b\u6216\u200b\u5185\u6db5\u200b\u8868\u793a\u6cd5\u200b\u8868\u793a\u200b\u4e00\u4e2a\u200b\u96c6\u5408\u200b\uff1a</p> <ul> <li>\u200b\u5916\u5ef6\u200b\u8868\u793a\u6cd5\u200b\uff1a\u200b\u4e00\u4e00\u5217\u4e3e\u200b\u51fa\u200b\u96c6\u5408\u200b\u7684\u200b\u5168\u4f53\u200b\u5143\u7d20\u200b</li> <li>\u200b\u5185\u6db5\u200b\u8868\u793a\u6cd5\u200b\uff1a\u200b\u4f7f\u7528\u200b\u8c13\u8bcd\u200b\u8868\u8ff0\u200b\u96c6\u5408\u200b\u4e2d\u200b\u5143\u7d20\u200b\u7684\u200b\u6027\u8d28\u200b</li> </ul>"},{"location":"math/discrete-mathematics/chapter-9/#_3","title":"\u96c6\u5408\u200b\u7684\u200b\u8fd0\u7b97","text":""},{"location":"math/discrete-mathematics/chapter-9/#_4","title":"\u96c6\u5408\u200b\u7684\u200b\u5173\u7cfb\u200b\u8fd0\u7b97","text":"<p>\u200b\u96c6\u5408\u200b\u4e0e\u200b\u5143\u7d20\u200b\u5b58\u5728\u200b\u5c5e\u4e8e\u200b\u4e0e\u200b\u4e0d\u200b\u5c5e\u4e8e\u200b\u5173\u7cfb\u200b\uff0c\u200b\u8bb0\u200b\u4f5c\u200b\\(\\in, \\not\\in\\)</p> <p>\u200b\u96c6\u5408\u200b\u4e4b\u95f4\u200b\u53ef\u4ee5\u200b\u5b9a\u4e49\u200b\u5173\u7cfb\u200b\\(=, \\subseteq, \\subset, \\supseteq, \\supset\\)\u3002</p> <ul> <li>\\(A=B\\Leftrightarrow (\\forall x)(x\\in A\\leftrightarrow x\\in B)\\)</li> <li>\\(A\\subseteq B\\Leftrightarrow (\\forall x)(x\\in A\\rightarrow x\\in B)\\)</li> <li>\\(A\\subset B\\Leftrightarrow (\\forall x)(x\\in A\\rightarrow x\\in B)\\land A\\not =B\\)</li> <li>\\(A\\supseteq B\\Leftrightarrow B\\subseteq A\\)</li> <li>\\(A\\supset B\\Leftrightarrow B\\subset A\\)</li> </ul> <p>\\(\\subseteq, \\supseteq, =\\)\u200b\u5173\u7cfb\u200b\u6ee1\u8db3\u200b\u81ea\u53cd\u6027\u200b\u3001\u200b\u4f20\u9012\u6027\u200b\uff0c\\(=\\)\u200b\u5173\u7cfb\u200b\u6ee1\u8db3\u200b\u5bf9\u79f0\u6027\u200b\u3002</p> <p>\\(A\\subseteq B\\land B\\subseteq A\\Leftrightarrow A=B\\)</p> <p>\u200b\u5b9a\u4e49\u200b\u7a7a\u96c6\u200b\u4e3a\u200b\u4e0d\u200b\u542b\u200b\u4efb\u4f55\u200b\u5143\u7d20\u200b\u7684\u200b\u96c6\u5408\u200b\uff0c\u200b\u8bb0\u200b\u4f5c\u200b\\(\\varnothing\\)\uff0c\u200b\u5176\u200b\u5185\u6db5\u200b\u8868\u793a\u200b\u4e3a\u200b\\(\\varnothing = \\{x|x\\not= x\\}\\)\uff0c\u200b\u7a7a\u96c6\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6027\u8d28\u200b\uff1a</p> <ul> <li>\u200b\u7a7a\u96c6\u200b\u662f\u200b\u4efb\u4f55\u200b\u96c6\u5408\u200b\u7684\u200b\u5b50\u96c6\u200b</li> <li>\u200b\u7a7a\u96c6\u200b\u662f\u200b\u552f\u4e00\u200b\u7684\u200b</li> </ul> <p>\u200b\u5b9a\u4e49\u200b\u5168\u96c6\u200b\u4e3a\u200b\u6240\u6709\u200b\u4e8b\u7269\u200b\u7684\u200b\u96c6\u5408\u200b\uff0c\u200b\u8bb0\u200b\u4f5c\u200b\\(E\\)\uff0c\u200b\u5176\u200b\u5185\u6db5\u200b\u8868\u793a\u200b\u4e3a\u200b\\(E=\\{x|x=x\\}\\)</p>"},{"location":"math/discrete-mathematics/chapter-9/#_5","title":"\u96c6\u5408\u200b\u7684\u200b\u57fa\u672c\u200b\u8fd0\u7b97","text":"<p>\u200b\u96c6\u5408\u200b\u5305\u542b\u200b\u5982\u4e0b\u200b\u57fa\u672c\u200b\u8fd0\u7b97\u200b\uff1a</p> <ul> <li>\u200b\u5e76\u96c6\u200b\uff1a\\(A\\cup B = \\{x\\in A\\lor x\\in B\\}\\)</li> <li>\u200b\u4ea4\u96c6\u200b\uff1a\\(A\\cap B = \\{x\\in A\\land x\\in B\\}\\)</li> <li>\u200b\u5dee\u96c6\u200b\uff1a\\(A-B = \\{x\\in A\\land x\\not \\in B\\}\\)</li> <li>\u200b\u8865\u96c6\u200b\uff1a\\(-A=E-A=\\{x|x\\not\\in A\\}\\)</li> <li>\u200b\u5bf9\u79f0\u200b\u5dee\u200b\uff1a\\(A\\oplus B=(A-B)\\cup (B-A) = \\{x| x\\in A\\overline\\lor x\\in B\\}\\)</li> </ul> <p>\u200b\u57fa\u4e8e\u200b\u5e76\u96c6\u200b\u4e0e\u200b\u4ea4\u96c6\u200b\u8fd0\u7b97\u200b\u53ef\u4ee5\u200b\u62d3\u5c55\u200b\u51fa\u200b\u5e7f\u4e49\u200b\u5e76\u200b\u548c\u200b\u5e7f\u4e49\u200b\u4ea4\u200b\u7684\u200b\u6982\u5ff5\u200b\uff0c\u200b\u8bbe\u200b\u96c6\u5408\u200b\\(A\\)\u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u90fd\u200b\u662f\u200b\u96c6\u5408\u200b\uff0c\u200b\u5b9a\u4e49\u200b$A\u200b\u7684\u200b\u5e7f\u4e49\u200b\u5e76\u200b\u3001\u200b\u5e7f\u4e49\u200b\u4ea4\u200b\u5982\u4e0b\u200b\uff1a</p> <ul> <li>\u200b\u5e7f\u4e49\u200b\u5e76\u200b\uff1a\\(\\cup A=\\{x| (\\exists z)(z\\in A\\land x\\in z)\\}\\)</li> <li>\u200b\u5e7f\u4e49\u200b\u4ea4\u200b\uff1a\\(\\cap A=\\{x| (\\forall z)(z\\in A\\rightarrow x\\in z)\\}\\)</li> </ul> <p>\u200b\u5373\u200b\uff1a\u200b\u96c6\u5408\u200b\\(A\\)\u200b\u7684\u200b\u5e7f\u4e49\u200b\u5e76\u200b\u662f\u200b\u96c6\u5408\u200b\u4e2d\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u7684\u200b\u5e76\u200b\u96c6\u200b\uff0c\u200b\u96c6\u5408\u200b\\(A\\)\u200b\u7684\u200b\u5e7f\u4e49\u200b\u4ea4\u662f\u200b\u96c6\u5408\u200b\u4e2d\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u7684\u200b\u4ea4\u96c6\u200b\u3002</p> <p>\u200b\u5b9a\u4e49\u200b\u5e42\u96c6\u200b\u4e3a\u200b\u96c6\u5408\u200b\u6240\u6709\u200b\u5b50\u96c6\u200b\uff08\u200b\u5305\u62ec\u200b\u81ea\u8eab\u200b\uff09\u200b\u7ec4\u6210\u200b\u7684\u200b\u96c6\u5408\u200b\uff0c\u200b\u8bb0\u200b\u4f5c\u200b\\(P(A)\\)</p> <p>\u200b\u5b9a\u4e49\u200b\u7b1b\u5361\u5c14\u200b\u79ef\u200b\\(A\\times B\\)\u200b\u4e3a\u200b\u4e8c\u5143\u200b\u7ec4\u200b\uff08\u200b\u6709\u5e8f\u200b\u5bf9\u200b\uff09\\(\\langle x, y\\rangle\\)\u200b\u7684\u200b\u96c6\u5408\u200b\uff0c\u200b\u5176\u4e2d\u200b\\(x\\in A, y\\in B\\)\u3002\u200b\u6709\u5e8f\u200b\u5bf9\u200b\u7684\u200b\u5b9a\u4e49\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u552f\u4e00\u200b\uff0c\u200b\u5982\u200b\u96c6\u5408\u200b\\(\\{x, \\{x, y\\}\\}\\)\u200b\u5373\u53ef\u200b\u8868\u793a\u200b\u4e00\u4e2a\u200b\u6709\u5e8f\u200b\u5bf9\u200b\u3002\u200b\u6709\u5e8f\u200b\u5bf9\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6027\u8d28\u200b\uff1a</p> <ul> <li>\\(x\\not = y\\Rightarrow \\langle x,y\\rangle \\not =\\langle y,x\\rangle\\)</li> <li>\\(\\langle x,y\\rangle = \\langle u,v\\rangle\\Leftrightarrow x=u\\land y=v\\)</li> </ul> <p>\u200b\u53ef\u4ee5\u200b\u5728\u200b\u4e8c\u5143\u200b\u7ec4\u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u200b\u62d3\u5c55\u200b\\(n\\)\u200b\u5143\u7ec4\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff1a\\(\\langle x_1, \\dots, x_n\\rangle =\\langle\\dots\\langle x_1, x_2\\rangle, \\dots, x_n\\rangle\\)\u3002\u200b\u7531\u6b64\u200b\\(n\\)\u200b\u9636\u200b\u7b1b\u5361\u5c14\u200b\u79ef\u200b\\(A_1\\times A_2\\times\\dots\\times A_n\\)\u200b\u5373\u200b\u4e3a\u200b\\(\\{\\langle x_1, \\dots, x_n\\rangle|x_1\\in A_1\\land \\dots\\land x_n\\in A_n\\}\\)</p>"},{"location":"math/discrete-mathematics/chapter-9/#_6","title":"\u96c6\u5408\u200b\u8fd0\u7b97\u200b\u7684\u200b\u4f18\u5148\u7ea7","text":"<p>\u200b\u96c6\u5408\u200b\u8fd0\u7b97\u200b\u7684\u200b\u4f18\u5148\u7ea7\u200b\u5217\u4e3e\u5982\u4e0b\u200b\uff1a</p> \\[ \\begin{aligned}     &amp;-A, P(A), \\cap A, \\cup A \\\\     &amp;-, \\cap, \\cup, \\oplus, \\times \\\\     &amp;=, \\subseteq , \\subset, \\in \\\\     &amp;\\lnot \\\\     &amp;\\land, \\lor, \\rightarrow, \\leftrightarrow \\\\     &amp;\\Leftrightarrow, \\Rightarrow \\end{aligned} \\]"},{"location":"math/discrete-mathematics/chapter-9/#_7","title":"\u96c6\u5408\u200b\u8fd0\u7b97\u200b\u7684\u200b\u6027\u8d28","text":"<p>\u200b\u96c6\u5408\u200b\u7684\u200b\u57fa\u672c\u200b\u8fd0\u7b97\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6027\u8d28\u200b\uff1a</p> <ol> <li>\u200b\u4ea4\u6362\u5f8b\u200b</li> <li>\\(A\\cap B=B\\cap A\\)</li> <li>\\(A\\cup B=B\\cup A\\)</li> <li>\u200b\u7ed3\u5408\u5f8b\u200b</li> <li>\\((A\\cup B)\\cup C = A\\cup (B\\cup C)\\)</li> <li>\\((A\\cap B)\\cap C = A\\cap (B\\cap C)\\)</li> </ol>"},{"location":"math/discrete-mathematics/chapter-9/#_8","title":"\u96c6\u5408\u200b\u7684\u200b\u56fe\u793a\u200b\u6cd5","text":"<ul> <li>\u200b\u5bf9\u4e8e\u200b\u96c6\u5408\u200b\u7684\u200b\u57fa\u672c\u200b\u8fd0\u7b97\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u6587\u6c0f\u56fe\u200b\u8868\u793a\u200b</li> <li>\u200b\u5bf9\u4e8e\u200b\u5e42\u96c6\u200b\u8fd0\u7b97\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u7f51\u7edc\u56fe\u200b\u8868\u793a\u200b</li> <li>\u200b\u5bf9\u4e8e\u200b\u7b1b\u5361\u5c14\u200b\u79ef\u200b\u8fd0\u7b97\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4e8c\u7ef4\u200b\u5750\u6807\u7cfb\u200b\u8868\u793a\u200b</li> </ul>"},{"location":"math/operating-research/","title":"\u8fd0\u7b79\u5b66","text":"<ul> <li>\u200b\u7ebf\u6027\u89c4\u5212\u200b</li> <li>\u200b\u8fd0\u8f93\u200b\u95ee\u9898\u200b</li> <li>\u200b\u76ee\u6807\u200b\u89c4\u5212\u200b</li> </ul>"},{"location":"math/operating-research/chapter-1/","title":"\u7ebf\u6027\u89c4\u5212","text":"<p>\u200b\u5b9a\u4e49\u200b</p> <p>\u200b\u89c4\u5212\u200b\u95ee\u9898\u200b\uff1a\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\\(f(x_1, \\dots, x_n)\\)\u200b\u548c\u200b\u4e00\u7cfb\u5217\u200b\u7ea6\u675f\u6761\u4ef6\u200b\uff0c\u200b\u6c42\u200b\u6ee1\u8db3\u200b\u6240\u6709\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u6539\u53d8\u200b\u51b3\u7b56\u200b\u53d8\u91cf\u200b\\(x_1, x_2, \\cdots, x_n\\)\u200b\u4f7f\u5f97\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u6240\u200b\u80fd\u200b\u8fbe\u5230\u200b\u7684\u200b\u6700\u5927\u503c\u200b\u6216\u200b\u6700\u5c0f\u503c\u200b\u3002\u200b\u5f53\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u53d6\u200b\u6700\u5927\u200b\uff08\u200b\u6700\u5c0f\u200b\uff09\u200b\u503c\u65f6\u200b\uff0c\u200b\u51b3\u7b56\u200b\u53d8\u91cf\u200b\u7684\u200b\u503c\u79f0\u200b\u89c4\u5212\u200b\u95ee\u9898\u200b\u7684\u200b\u89e3\u200b\u3002</p> <p>\u200b\u7ebf\u6027\u89c4\u5212\u200b\uff1a\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u548c\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u5747\u200b\u4e3a\u200b \u200b\u7ebf\u6027\u200b \u200b\u7684\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b</p> <p>\u200b\u7ebf\u6027\u89c4\u5212\u200b\u6a21\u578b\u200b\u7684\u200b\u6807\u51c6\u200b\u5f62\u5f0f\u200b\u4e3a\u200b\uff1a</p> \\[ \\begin{aligned} &amp;\\max z = c_1x_1 + c_2x_2 + \\cdots + c_nx_n \\\\ s.t. &amp; \\left\\{     \\begin{aligned}         &amp; a_{11}x_1 + a_{12}x_2 + \\cdots + a_{1n}x_n = b_1 \\\\         &amp; a_{21}x_1 + a_{22}x_2 + \\cdots + a_{2n}x_n = b_2 \\\\         &amp; \\vdots \\\\         &amp; a_{m1}x_1 + a_{m2}x_2 + \\cdots + a_{mn}x_n = b_m \\\\         &amp; x_j \\in \\mathbb R \\land x_j \\geq 0, j = 1, \\cdots, n     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u200b\u5176\u4e2d\u200b\\(a_{ij}, b_i, c_i\\)\u200b\u4e3a\u200b\u5e38\u6570\u200b\uff0c\u200b\u5206\u522b\u200b\u4f7f\u7528\u200b\u77e9\u9635\u200b\\(A, b, c^T\\)\u200b\u8fdb\u884c\u200b\u8868\u793a\u200b\u3002\u200b\u51b3\u7b56\u200b\u53d8\u91cf\u200b\\((x_1, x_2, \\cdots, x_n)^T\\)\u200b\u4f7f\u7528\u200b\u5411\u91cf\u200b\\(x\\)\u200b\u8fdb\u884c\u200b\u8868\u793a\u200b\uff0c\u200b\u5219\u200b\u6807\u51c6\u578b\u200b\u53ef\u4ee5\u200b\u5199\u4f5c\u200b\uff1a</p> \\[ \\begin{aligned}     &amp; \\max z = CX \\\\     &amp; s.t. \\left\\{     \\begin{aligned}         &amp; Ax = b \\\\         &amp; x \\geq 0     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u200b\u5982\u679c\u200b\\(\\mathrm r(A) &lt; m\\)\uff0c\u200b\u5219\u200b\u90e8\u5206\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u53ef\u4ee5\u200b\u76f8\u4e92\u200b\u62b5\u6d88\u200b\uff0c\u200b\u4ee5\u4e0a\u200b\u53ea\u200b\u8ba8\u8bba\u200b\\(\\mathrm r(A) = m\\)\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u7ea6\u675f\u200b\u4e2d\u200b\u542b\u6709\u200b\u4e0d\u7b49\u5f0f\u200b\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u6dfb\u52a0\u200b\u677e\u5f1b\u200b\u53d8\u91cf\u200b\u4e0e\u200b\u5269\u4f59\u200b\u53d8\u91cf\u200b\u8f6c\u53d8\u200b\u4e3a\u200b\u7b49\u5f0f\u200b</p> <ul> <li>\u200b\u677e\u5f1b\u200b\u53d8\u91cf\u200b\uff1a\\(a_{i1}x_1 + a_{i2}x_2 + \\cdots + a_{in}x_n \\leq b_i\\)\u200b\u52a0\u5165\u200b\u677e\u5f1b\u200b\u53d8\u91cf\u200b\\(x_{n+1}\\)\u200b\u540e\u200b\u8f6c\u4e3a\u200b\\(a_{i1}x_1 + a_{i2}x_2 + \\cdots + a_{in}x_n + x_{n+1}= b_i\\)</li> <li>\u200b\u5269\u4f59\u200b\u53d8\u91cf\u200b\uff1a\\(a_{j1}x_1 + a_{j2}x_2 + \\cdots + a_{jn}x_n \\geq b_j\\)\u200b\u52a0\u5165\u200b\u5269\u4f59\u200b\u53d8\u91cf\u200b\\(x_{n+1}\\)\u200b\u540e\u200b\u8f6c\u4e3a\u200b\\(a_{j1}x_1 + a_{j2}x_2 + \\cdots + a_{jn}x_n - x_{n+1}= b_j\\)</li> </ul> <p>\u200b\u82e5\u200b\u67d0\u4e2a\u200b\u51b3\u7b56\u200b\u53d8\u91cf\u200b\\(x_i\\)\u200b\u7684\u200b\u53d6\u503c\u200b\u8303\u56f4\u200b\u4e3a\u200b\\(\\leq\\)\uff0c\u200b\u5219\u200b\u5c06\u200b\\(x_i\\)\u200b\u66ff\u6362\u200b\u4e3a\u200b\\(x_i' = -x_i\\)\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u7ebf\u6027\u89c4\u5212\u200b\u4e2d\u200b\u7684\u200b\u4e0d\u7b49\u5f0f\u200b\u7ea6\u675f\u200b\uff0c\u200b\u82e5\u200b\u5728\u200b\u6700\u4f18\u200b\u65f6\u8be5\u200b\u7ea6\u675f\u200b\u4e3a\u200b\u7b49\u5f0f\u200b\uff0c\u200b\u5219\u200b\u79f0\u4e3a\u200b\u7d27\u200b\u7ea6\u675f\u200b\uff0c\u200b\u5426\u5219\u200b\u79f0\u4e3a\u200b\u975e\u7d27\u200b\u7ea6\u675f\u200b\u3002</p>"},{"location":"math/operating-research/chapter-1/#_2","title":"\u6c42\u89e3\u200b\u7ebf\u6027\u89c4\u5212","text":"<p>\u200b\u7ebf\u6027\u89c4\u5212\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u56fe\u5f62\u200b\u6cd5\u200b\u3001\u200b\u5355\u7eaf\u5f62\u6cd5\u200b\u7b49\u200b\u65b9\u6cd5\u200b\u6c42\u89e3\u200b</p>"},{"location":"math/operating-research/chapter-1/#_3","title":"\u56fe\u5f62\u200b\u6cd5","text":"<p>\u200b\u56fe\u5f62\u200b\u6cd5\u200b\u53ea\u80fd\u200b\u7528\u4e8e\u200b\u6c42\u89e3\u200b\u5305\u542b\u200b\u4e24\u4e2a\u200b\u51b3\u7b56\u200b\u53d8\u91cf\u200b\u7684\u200b\u7ebf\u6027\u89c4\u5212\u200b\u95ee\u9898\u200b\u3002\u200b\u6b65\u9aa4\u200b\u53ef\u4ee5\u200b\u5217\u4e3e\u5982\u4e0b\u200b\uff1a</p> <ol> <li>\u200b\u5728\u200b\u5750\u6807\u8f74\u200b\u4e0a\u200b\u7ed8\u5236\u200b\u51fa\u200b\u6240\u6709\u200b\u7684\u200b\u7ea6\u675f\u6761\u4ef6\u200b\uff0c\u200b\u786e\u5b9a\u200b\u53ef\u884c\u200b\u57df\u200b</li> <li>\u200b\u5c06\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\\(z = c_1x_1 + c_2x_2\\)\u200b\u6539\u5199\u200b\u4e3a\u200b\\(x_2 = \\frac{z - c_1x_1}{c_2}\\)\uff0c\u200b\u5176\u200b\u659c\u7387\u200b\u4e3a\u200b\\(-\\frac{c_1}{c_2}\\)</li> <li>\u200b\u5728\u200b\u53ef\u884c\u200b\u57df\u200b\u4e2d\u200b\u5bfb\u627e\u200b\u4f7f\u5f97\u200b\u622a\u8ddd\u200b\u6700\u5927\u200b\uff08\u200b\u6700\u5c0f\u200b\uff09\u200b\u4e14\u200b\u659c\u7387\u200b\u4e3a\u200b\\(-\\frac{c_1}{c_2}\\)\u200b\u7684\u200b\u76f4\u7ebf\u200b\u3002\u200b\u8be5\u200b\u622a\u8ddd\u200b\u4e3a\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u7684\u200b\\(1/c_2\\)<ul> <li>\u200b\u82e5\u200b\u53ef\u884c\u200b\u57df\u200b\u4e3a\u200b\u7a7a\u200b\uff0c\u200b\u5219\u200b\u7ebf\u6027\u89c4\u5212\u200b\u65e0\u200b\u89e3\u200b</li> <li>\u200b\u82e5\u200b\u76f4\u7ebf\u200b\u53ef\u4ee5\u200b\u65e0\u9650\u200b\u5411\u200b\u4f18\u5316\u200b\u65b9\u5411\u200b\u5e73\u79fb\u200b\uff0c\u200b\u5219\u200b\u7ebf\u6027\u89c4\u5212\u200b\u65e0\u200b\u754c\u200b</li> <li>\u200b\u82e5\u200b\u6700\u4f18\u200b\u65f6\u200b\u76f4\u7ebf\u200b\u4e0e\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u7684\u200b\u659c\u7387\u200b\u76f8\u540c\u200b\uff0c\u200b\u5219\u200b\u7ebf\u6027\u89c4\u5212\u200b\u6709\u200b\u65e0\u6570\u200b\u89e3\u200b</li> <li>\u200b\u5426\u5219\u200b\u7ebf\u6027\u89c4\u5212\u200b\u6709\u200b\u552f\u4e00\u200b\u6700\u4f18\u200b\u89e3\u200b</li> </ul> </li> </ol>"},{"location":"math/operating-research/chapter-1/#_4","title":"\u5355\u7eaf\u5f62\u6cd5","text":"<p>\u200b\u5df2\u77e5\u200b\u77e9\u9635\u200b\\(A\\)\u200b\u6ee1\u200b\u79e9\u200b\uff0c\u200b\u6784\u6210\u200b\u77e9\u9635\u200b\\(A\\)\u200b\u7684\u200b\u5217\u200b\u5411\u91cf\u200b\u7684\u200b\u6781\u5927\u200b\u7ebf\u6027\u200b\u65e0\u5173\u200b\u7ec4\u200b\u5305\u542b\u200b\\(m\\)\u200b\u4e2a\u5217\u200b\u5411\u91cf\u200b\u3002\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u77e9\u9635\u200b\\(A\\)\u200b\u4f5c\u200b\u5982\u4e0b\u200b\u5212\u5206\u200b\uff1a</p> \\[ A = [B, N] \\] <p>\u200b\u76f8\u4f3c\u200b\u5730\u200b\uff0c\u200b\u5411\u91cf\u200b\\(x\\)\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4f5c\u200b\u5982\u4e0b\u200b\u5212\u5206\u200b\uff1a</p> \\[ x = \\begin{bmatrix}     x_B \\\\ x_N \\end{bmatrix} \\] <p>\u200b\u5176\u4e2d\u200b\\(B\\)\u200b\u4e3a\u200b\u53ef\u9006\u200b\u77e9\u9635\u200b\u3002\u200b\u82e5\u200b\u4e0d\u200b\u5b58\u5728\u200b\u8fd9\u6837\u200b\u7684\u200b\u77e9\u9635\u200b\uff0c\u200b\u5c06\u200b\u77e9\u9635\u200b\\(A\\)\u200b\u7684\u200b\u5404\u5217\u200b\u8fdb\u884c\u200b\u4ea4\u6362\u200b\u5373\u53ef\u200b\u3002</p> <p>\u200b\u57fa\u200b\u3001\u200b\u57fa\u200b\u5411\u91cf\u200b\u4e0e\u200b\u57fa\u200b\u53d8\u91cf\u200b</p> <p>\u200b\u77e9\u9635\u200b\\(B\\)\u200b\u79f0\u4e3a\u200b\u7ebf\u6027\u89c4\u5212\u200b\u7684\u200b \u200b\u57fa\u200b \u3002 \u200b\u57fa\u200b \u200b\u4e2d\u200b\u7684\u200b\u5404\u4e2a\u200b\u5217\u200b\u5411\u91cf\u200b\\(P_j\\)\u200b\u4e3a\u200b \u200b\u57fa\u200b\u5411\u91cf\u200b \uff0c\u200b\u5bf9\u5e94\u200b\u7684\u200b\u51b3\u7b56\u200b\u53d8\u91cf\u200b\u79f0\u4e3a\u200b \u200b\u57fa\u200b\u53d8\u91cf\u200b \u3002\u200b\u5206\u5272\u200b\u540e\u975e\u200b\u9f50\u6b21\u200b\u7ebf\u6027\u65b9\u7a0b\u7ec4\u200b\\(Ax=b\\)\u200b\u8f6c\u5316\u200b\u4e3a\u200b\uff1a</p> \\[ \\begin{bmatrix}     B &amp; N \\end{bmatrix}\\begin{bmatrix}     x_B \\\\ x_N \\end{bmatrix} = Bx_B + Nx_N = b \\] <p>\u200b\u7531\u4e8e\u200b\u65b9\u9635\u200b\\(B\\)\u200b\u6ee1\u200b\u79e9\u200b\uff0c\u200b\u6709\u200b\\(x_B = B^{-1}(b - Nx_N)\\)\u3002\u200b\u5176\u4e2d\u200b\\(x_N\\)\u200b\u4e3a\u200b\u81ea\u7531\u200b\u53d8\u91cf\u200b\u3002\\(-B^{-1}N\\)\u200b\u4e2d\u200b\u7684\u200b\u5217\u200b\u5411\u91cf\u200b\u4e3a\u200b\u65b9\u7a0b\u200b\\(Ax=b\\)\u200b\u7684\u200b\u57fa\u7840\u200b\u89e3\u7cfb\u200b\u3002\u200b\u4e0d\u59a8\u200b\u8bbe\u200b\\(x_N = 0\\)\uff0c\u200b\u5219\u200b\\(x_B = B^{-1}b\\)\u200b\u4e3a\u200b\u7ebf\u6027\u65b9\u7a0b\u7ec4\u200b\u7684\u200b\u4e00\u4e2a\u200b\u89e3\u200b\uff0c\u200b\u79f0\u4e3a\u200b\u57fa\u89e3\u200b\u3002</p> <p>\u200b\u53ef\u884c\u200b\u89e3\u4e0e\u200b\u53ef\u884c\u200b\u57fa\u200b</p> <p>\u200b\u82e5\u200b\\(x_B\\geq 0\\)\uff0c\u200b\u5219\u200b\u89e3\u200b\\(x = \\begin{bmatrix} x_B \\\\ x_N \\end{bmatrix}\\)\u200b\u6ee1\u8db3\u200b\u975e\u8d1f\u200b\u7ea6\u675f\u200b\uff0c\u200b\u4e3a\u200b \u200b\u57fa\u200b\u53ef\u884c\u200b\u89e3\u200b \uff0c\u200b\u5bf9\u5e94\u200b\u7684\u200b\u57fa\u200b\u79f0\u4e3a\u200b \u200b\u53ef\u884c\u200b\u57fa\u200b \u3002</p> <p>\u200b\u57fa\u89e3\u200b\u4e0e\u200b\u57fa\u200b\u53ef\u884c\u200b\u89e3\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6027\u8d28\u200b\uff1a</p> <ul> <li>\u200b\u7531\u4e8e\u200b\u77e9\u9635\u200b\\(A\\)\u200b\u5171\u200b\\(n\\)\u200b\u5217\u200b\uff0c\u200b\u4ece\u200b\u5176\u4e2d\u200b\u9009\u53d6\u200b\\(m\\)\u200b\u5217\u200b\uff0c\u200b\u6709\u200b\\(\\binom{n}{m}\\)\u200b\u79cd\u200b\u9009\u53d6\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u800c\u200b\u53ea\u6709\u200b\u7ec4\u6210\u200b\u7ebf\u6027\u200b\u65e0\u5173\u200b\u7684\u200b\\(m\\)\u200b\u4e2a\u200b\u5411\u91cf\u200b\u624d\u80fd\u200b\u6784\u6210\u200b\u4e00\u7ec4\u200b\u57fa\u200b\uff0c\u200b\u56e0\u6b64\u200b\u57fa\u89e3\u200b\u7684\u200b\u6570\u76ee\u200b\u4e0d\u4f1a\u200b\u8d85\u8fc7\u200b\\(\\binom nm\\)\u3002</li> <li>\\(X\\)\u200b\u4e3a\u57fa\u200b\u53ef\u884c\u200b\u89e3\u5f53\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(X\\)\u200b\u7684\u200b\u975e\u200b\u96f6\u200b\u5206\u91cf\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5217\u200b\u5411\u91cf\u200b\u7ebf\u6027\u200b\u65e0\u5173\u200b\u3002\u200b\u57fa\u200b\u53ef\u884c\u200b\u89e3\u662f\u200b\u53ef\u884c\u200b\u57df\u200b\u7684\u200b\u9876\u70b9\u200b\u3002</li> </ul>"},{"location":"math/operating-research/chapter-1/#_5","title":"\u539f\u7406","text":"<p>\u200b\u5982\u4e0b\u200b\u9488\u5bf9\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u6781\u5927\u200b\u5316\u200b\u7684\u200b\u7ebf\u6027\u89c4\u5212\u200b\u95ee\u9898\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u6781\u5c0f\u200b\u5316\u200b\u7684\u200b\u7ebf\u6027\u89c4\u5212\u200b\u95ee\u9898\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u53d6\u8d1f\u200b\uff0c\u200b\u5373\u200b\u5f97\u5230\u200b\u9700\u8981\u200b\u6781\u5927\u200b\u5316\u200b\u7684\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u3002</p> <p>\u200b\u5355\u7eaf\u5f62\u6cd5\u200b\u7684\u200b\u601d\u8def\u200b\uff1a</p> <ol> <li>\u200b\u5148\u200b\u627e\u51fa\u200b\u4e00\u4e2a\u200b\u57fa\u200b\u53ef\u884c\u200b\u89e3\u200b</li> <li>\u200b\u5224\u65ad\u200b\u5f53\u524d\u200b\u57fa\u200b\u53ef\u884c\u200b\u89e3\u200b\u662f\u5426\u200b\u6700\u4f18\u200b<ol> <li>\u200b\u82e5\u200b\u6700\u4f18\u200b\uff0c\u200b\u7ed3\u675f\u200b</li> <li>\u200b\u82e5\u200b\u4e0d\u662f\u200b\u6700\u4f18\u200b\uff0c\u200b\u5219\u200b\u8f6c\u5411\u200b\u76f8\u90bb\u200b\u7684\u200b\u57fa\u200b\u53ef\u884c\u200b\u89e3\u200b</li> </ol> </li> </ol>"},{"location":"math/operating-research/chapter-1/#_6","title":"\u72b6\u6001\u200b\u8f6c\u79fb","text":"<p>\u200b\u8bbe\u200b\u521d\u59cb\u200b\u57fa\u4e3a\u200b\\(B\\)\u3002\u200b\u5c06\u200b\u65b9\u7a0b\u200b\\(Ax=b\\)\u200b\u5de6\u53f3\u200b\u4e24\u8fb9\u200b\u540c\u65f6\u200b\u5de6\u4e58\u200b\\(B^{-1}\\)\uff0c\u200b\u6709\u200b\\((B^{-1}A)x = B^{-1}b\\)\uff0c\u200b\u5373\u200b\uff1a</p> \\[ \\begin{bmatrix}     I &amp; B^{-1}N \\end{bmatrix}\\begin{bmatrix}     x_B \\\\ x_N \\end{bmatrix} = B^{-1}b \\] <p>\u200b\u8bbe\u200b\\(B^{-1}N = \\{d_{ij}\\}_{m\\times(n-m)}\\)\u3002\u200b\u6839\u636e\u200b\\(x_B = B^{-1}b - B^{-1}Nx_N\\)\uff0c\u200b\u5bf9\u4e8e\u200b\u7b2c\u200b\\(i\\)\u200b\u4e2a\u200b\u5206\u91cf\u200b\uff0c\u200b\u6709\u200b\uff1a</p> \\[ x_i = b_i - \\sum_{j = 1}^{(n - m)}d_{ij}x_j, 1\\leq j\\leq (n-m) \\]"},{"location":"math/operating-research/chapter-1/#_7","title":"\u76ee\u6807\u200b\u51fd\u6570\u200b\u503c","text":"<p>\u200b\u5bf9\u200b\u7ebf\u6027\u89c4\u5212\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u8fdb\u884c\u200b\u53ef\u9006\u200b\u7ebf\u6027\u53d8\u6362\u200b\uff08\u200b\u53f3\u4e58\u200b\u53ef\u9006\u200b\u77e9\u9635\u200b\uff09\u200b\u4e0d\u4f1a\u200b\u6539\u53d8\u200b\u7ebf\u6027\u89c4\u5212\u200b\u7684\u200b\u89e3\u200b\u3002\u200b\u4e3a\u200b\u7b80\u5316\u200b\u8ba1\u7b97\u200b\uff0c\u200b\u4e0d\u59a8\u200b\u5047\u8bbe\u200b\u77e9\u9635\u200b\\(A\\)\u200b\u7684\u200b\u4e00\u4e2a\u200b\u57fa\u200b\u77e9\u9635\u200b\u4e3a\u200b\u5355\u4f4d\u77e9\u9635\u200b\uff0c\u200b\u5373\u200b\uff1a</p> \\[ A = \\begin{bmatrix}     1 &amp; 0 &amp; \\cdots &amp; 0 &amp; a_{1(m + 1)} &amp; a_{1(m + 2)} &amp; \\cdots &amp;  a_{1n} \\\\     0 &amp; 1 &amp; \\cdots &amp; 0 &amp; a_{2(m + 1)} &amp; a_{2(m + 2)} &amp; \\cdots &amp;  a_{2n} \\\\     \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\     0 &amp; 0 &amp; \\cdots &amp; 1 &amp; a_{m(m + 1)} &amp; a_{m(m + 2)} &amp; \\cdots &amp;  a_{mn} \\\\ \\end{bmatrix} \\] <p>\u200b\u663e\u7136\u200b\uff0c\u200b\u5355\u4f4d\u77e9\u9635\u200b\\(I\\)\u200b\u662f\u200b\\(A\\)\u200b\u7684\u200b\u57fa\u200b\uff0c\u200b\u5bf9\u5e94\u200b\u7684\u200b\u57fa\u89e3\u200b\\(x_B=b - Nx_N\\)\u3002\u200b\u5c06\u200b\u5411\u91cf\u200b\\(c\\)\u200b\u5206\u4e3a\u200b\\(c_B\\)\u200b\u4e0e\u200b\\(c_N\\)\uff0c\u200b\u5206\u522b\u200b\u5bf9\u5e94\u200b\\(x_B\\)\u200b\u4e0e\u200b\\(x_N\\)\uff0c\u200b\u6b64\u65f6\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u8ba1\u7b97\u200b\u4e3a\u200b\uff1a</p> \\[ \\begin{aligned}     z &amp;= c^Tx \\\\     &amp;= c_B^Tx_B + c_N^T x_N \\\\     &amp;= c_B^Tb + c_N^Tx_N - c_B^TNx_N \\\\     &amp;= c_B^Tb + (c_N - c_B^TN)x_N \\end{aligned} \\] <p>\u200b\u8bbe\u200b\u5411\u91cf\u200b\\(\\lambda = c_N - c_B^TN\\)\uff0c\u200b\u5219\u200b\\(\\frac{\\partial z}{\\partial x_N} = \\lambda\\)\u3002</p> <p>\u200b\u5b9a\u7406\u200b</p> <ul> <li>\u200b\u82e5\u200b\u5bf9\u4e8e\u200b\u67d0\u4e2a\u200b\u57fa\u200b\u53ef\u884c\u200b\u89e3\u200b\\(x\\)\uff0c\u200b\u6709\u200b\\(\\lambda &lt; 0\\)\uff0c\u200b\u8bf4\u660e\u200b\\(x\\)\u200b\u4e3a\u200b\u6700\u4f18\u200b\u89e3\u200b</li> <li>\u200b\u82e5\u200b\u5bf9\u4e8e\u200b\u67d0\u4e2a\u200b\u57fa\u200b\u53ef\u884c\u200b\u89e3\u200b\\(x\\)\uff0c\u200b\u6709\u200b\\(\\lambda \\leq 0\\)\u200b\u4e14\u200b\\(\\lambda\\)\u200b\u5b58\u5728\u200b\u4e3a\u200b\u96f6\u200b\u7684\u200b\u5206\u91cf\u200b\uff0c\u200b\u8bf4\u660e\u200b\u539f\u200b\u95ee\u9898\u200b\u6709\u200b\u65e0\u6570\u4e2a\u200b\u6700\u4f18\u200b\u89e3\u200b</li> <li>\u200b\u82e5\u200b\u5bf9\u4e8e\u200b\u67d0\u4e2a\u200b\u57fa\u200b\u53ef\u884c\u200b\u89e3\u200b\\(x\\)\uff0c\u200b\u5411\u91cf\u200b\\(\\lambda\\)\u200b\u5b58\u5728\u200b\u4e00\u4e2a\u200b\\(\\lambda_{m + i} &gt; 0\\)\uff0c\u200b\u4e14\u200b\u77e9\u9635\u200b\\(A\\)\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5217\u200b\u5411\u91cf\u200b\\(P_{m + i}\\leq 0\\)\uff0c\u200b\u5219\u200b\u539f\u200b\u95ee\u9898\u200b\u65e0\u200b\u754c\u200b</li> </ul>"},{"location":"math/operating-research/chapter-1/#_8","title":"\u57fa\u7684\u200b\u8fed\u4ee3","text":"<p>\u200b\u5728\u200b\u8fed\u4ee3\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u9700\u8981\u200b\u51b3\u5b9a\u200b\u6362\u5165\u200b\u7684\u200b\u57fa\u200b\u4e0e\u200b\u6362\u200b\u51fa\u200b\u7684\u200b\u57fa\u200b\uff1a</p> <ul> <li>\u200b\u4f7f\u7528\u200b\u8d2a\u5fc3\u200b\u7b97\u6cd5\u200b\u9009\u62e9\u200b\u6362\u5165\u200b\u7684\u200b\u57fa\u200b\uff0c\u200b\u9009\u62e9\u200b\u68af\u5ea6\u200b\u6700\u5927\u200b\uff08\u200b\u4e0e\u200b\\(\\lambda\\)\u200b\u6700\u5927\u200b\u6b63\u200b\u5206\u91cf\u200b\u5bf9\u5e94\u200b\uff09\u200b\u7684\u200b\u51b3\u7b56\u200b\u53d8\u91cf\u200b\u6362\u5165\u200b\uff0c\\(i = \\arg\\max \\lambda\\)</li> <li>\u200b\u5bf9\u4e8e\u200b\u6362\u5165\u200b\u53d8\u91cf\u200b\\(x_i\\)\uff0c\u200b\u6362\u51fa\u200b\u7684\u200b\u57fa\u200b\\(x_j\\)\u200b\u5e94\u5f53\u200b\u5c3d\u53ef\u80fd\u200b\u4fdd\u8bc1\u200b\u662f\u200b\u53ef\u884c\u200b\u89e3\u200b\u3002\u200b\u6839\u636e\u200b\\(x_B = b - Nx_N\\geq 0\\)\uff0c\u200b\u5f97\u200b\\(Nx_N \\leq b - x_B\\)\uff0c\u200b\u6709\u200b\\(j = \\arg\\min _{j} \\frac{b_j}{a_{ij}}\\)</li> </ul> <p>\u200b\u4e3e\u4f8b\u200b</p> <p>\u200b\u5bf9\u4e8e\u200b\u5982\u4e0b\u200b\u7ebf\u6027\u89c4\u5212\u200b\u95ee\u9898\u200b\uff1a</p> \\[ \\begin{aligned}     &amp; \\max z = 3x_1 - 3x_2 + 5x_4 - x_5 \\\\     &amp;s.t. \\left\\{     \\begin{aligned}         &amp;x_1 &amp; &amp; -2x_3 &amp; +2x_4 &amp; &amp;=12 \\\\         &amp;&amp; x_2 &amp;-2x_3 &amp; &amp; &amp;=1 \\\\         &amp;&amp;&amp; -4x_3 &amp;+3x_4 &amp;+x_5 &amp;=27     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u200b\u5217\u51fa\u200b\u5355\u7eaf\u5f62\u200b\u8868\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <p></p> <p>\u200b\u5c06\u200b\u53d8\u91cf\u200b\\(x_4\\)\u200b\u8f6c\u5165\u200b\u57fa\u200b\u53d8\u91cf\u200b\uff0c\\(x_1\\)\u200b\u8f6c\u51fa\u200b\u57fa\u200b\u53d8\u91cf\u200b\uff0c\u200b\u5f97\u5230\u200b\u5982\u4e0b\u200b\u5355\u7eaf\u5f62\u200b\u8868\u200b\uff1a</p> <p></p>"},{"location":"math/operating-research/chapter-1/#_9","title":"\u4e24\u200b\u9636\u6bb5\u200b\u6cd5","text":"<p>\u200b\u5f53\u200b\\(A\\)\u200b\u4e0d\u200b\u4fbf\u4e8e\u200b\u8ba1\u7b97\u200b\u51fa\u57fa\u200b\\(B\\)\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u4e2d\u200b\u5f15\u5165\u200b\u4eba\u5de5\u200b\u53d8\u91cf\u200b\u3002\u200b\u7b2c\u4e00\u9636\u6bb5\u200b\u7684\u200b\u5f00\u59cb\u200b\u72b6\u6001\u200b\uff0c\u200b\u6240\u6709\u200b\u7684\u200b\u57fa\u200b\u53d8\u91cf\u200b\u90fd\u200b\u662f\u200b\u4eba\u5de5\u200b\u53d8\u91cf\u200b\uff0c\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u4e3a\u200b\u4eba\u5de5\u200b\u53d8\u91cf\u200b\u4e4b\u200b\u548c\u200b\uff0c\u200b\u5411\u200b\u6700\u5c0f\u503c\u200b\u65b9\u5411\u200b\u4f18\u5316\u200b\u3002\u200b\u901a\u8fc7\u200b\u5355\u7eaf\u5f62\u6cd5\u200b\u9010\u6b65\u200b\u5c06\u200b\u4eba\u5de5\u200b\u53d8\u91cf\u200b\u6362\u200b\u51fa\u57fa\u200b\u53d8\u91cf\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b</p> <p>\u200b\u5982\u679c\u200b\u67d0\u4e2a\u200b\u4eba\u5de5\u200b\u53d8\u91cf\u200b\u5728\u200b\u57fa\u200b\u53d8\u91cf\u200b\u4e2d\u200b\uff0c\u200b\u4f46\u200b\\(\\lambda \\leq 0\\)\uff0c\u200b\u5219\u200b\u7ebf\u6027\u89c4\u5212\u200b\u65e0\u200b\u53ef\u884c\u200b\u89e3\u200b\u3002</p> <p>\u200b\u5c06\u200b\u6240\u6709\u200b\u7684\u200b\u4eba\u5de5\u200b\u53d8\u91cf\u200b\u6362\u200b\u51fa\u57fa\u200b\u53d8\u91cf\u200b\uff0c\u200b\u6b64\u65f6\u200b\u6240\u6709\u200b\u7684\u200b\u4eba\u5de5\u200b\u53d8\u91cf\u200b\u53d6\u200b\\(0\\)\u3002\u200b\u5220\u53bb\u200b\u4eba\u5de5\u200b\u53d8\u91cf\u200b\u5e76\u200b\u5c06\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u66ff\u6362\u200b\u4e3a\u539f\u200b\u95ee\u9898\u200b\u7684\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\uff0c\u200b\u5f97\u5230\u200b\u7b2c\u4e8c\u9636\u6bb5\u200b\u5f00\u59cb\u200b\u72b6\u6001\u200b\u7684\u200b\u5355\u7eaf\u5f62\u200b\u8868\u200b\u3002</p>"},{"location":"math/operating-research/chapter-1/#_10","title":"\u7ebf\u6027\u89c4\u5212\u200b\u89e3\u200b\u7684\u200b\u6027\u8d28","text":"<p>\u200b\u6839\u636e\u200b\u56fe\u89e3\u6cd5\u200b\uff0c\u200b\u6709\u5982\u200b\u4e0b\u7ed3\u8bba\u200b\uff1a</p> <ul> <li>\u200b\u53ef\u884c\u200b\u57df\u200b\u662f\u200b\u4e00\u4e2a\u200b\u51f8\u96c6\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u53ef\u884c\u200b\u57df\u200b\\(X\\)\u200b\u4e2d\u200b\u7684\u200b\u4efb\u610f\u200b\u4e24\u70b9\u200b\\(x = (x_1, x_2, \\cdots, x_n)\\in S\\)\u200b\u4e0e\u200b\\(y = (y_1, y_2, \\cdots, y_n)\\in S\\)\uff0c\u200b\u6709\u200b\\(\\alpha x + (1 - \\alpha) y \\in S, 0\\leq \\alpha \\leq 1\\)<ul> <li>\u200b\u51f8\u200b\u96c6\u4e2d\u200b\u7684\u200b\u4efb\u4f55\u200b\u4e00\u4e2a\u70b9\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u8868\u793a\u200b\u4e3a\u200b\u51f8\u96c6\u200b\u5404\u4e2a\u200b\u9876\u70b9\u200b\u7684\u200b\u51f8\u200b\u7ec4\u5408\u200b</li> </ul> </li> <li>\u200b\u6700\u4f18\u200b\u89e3\u200b\uff08\u200b\u5982\u679c\u200b\u5b58\u5728\u200b\uff09\u200b\u5728\u200b\u53ef\u884c\u200b\u57df\u200b\u7684\u200b\u8fb9\u754c\u200b\u4e0a\u200b\uff0c\u200b\u4e14\u200b\u53ef\u884c\u200b\u57df\u200b\u7684\u200b\u81f3\u5c11\u200b\u4e00\u4e2a\u200b\u9876\u70b9\u200b\u662f\u200b\u6700\u4f18\u200b\u89e3\u200b</li> </ul>"},{"location":"math/operating-research/chapter-1/#_11","title":"\u7ebf\u6027\u89c4\u5212\u200b\u7684\u200b\u5bf9\u5076\u200b\u95ee\u9898","text":"<p>\u200b\u6bcf\u4e2a\u200b\u539f\u200b\u95ee\u9898\u200b\u5bf9\u5e94\u200b\u4e14\u200b\u4ec5\u200b\u5bf9\u5e94\u200b\u4e00\u4e2a\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\uff0c\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u7684\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u662f\u200b\u539f\u200b\u95ee\u9898\u200b\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u5982\u4e0b\u200b\u5f62\u5f0f\u200b\u7684\u200b\u539f\u200b\u95ee\u9898\u200b\uff1a</p> \\[ \\begin{aligned}     &amp; \\max z = c_1x_1 + c_2x_2 + c_3x_3 \\\\     &amp; s.t. \\left\\{     \\begin{aligned}         &amp; a_{11}x_1 + a_{12}x_2 + a_{13}x_3 \\leq b_1 \\\\         &amp; a_{21}x_1 + a_{22}x_2 + a_{23}x_3 = b_2 \\\\         &amp; a_{31}x_1 + a_{32}x_2 + a_{33}x_3 \\geq b_3 \\\\         &amp; x_1 \\leq 0 \\\\         &amp; x_3 \\geq 0     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u200b\u5176\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u4e3a\u200b\uff1a</p> \\[ \\begin{aligned}     &amp; \\min w = b_1y_1 + b_2y_2 + b_3y_3 \\\\     &amp; s.t. \\left\\{     \\begin{aligned}         &amp; a_{11}y_1 + a_{21}y_2 + a_{31}y_3 \\leq c_1 \\\\         &amp; a_{12}y_1 + a_{22}y_2 + a_{32}y_3 = c_2 \\\\         &amp; a_{13}y_1 + a_{23}y_2 + a_{33}y_3 \\geq c_3 \\\\         &amp; y_1 \\geq 0 \\\\         &amp; y_3 \\leq 0     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u200b\u5047\u8bbe\u200b\u539f\u200b\u95ee\u9898\u200b\u5411\u200b\u6781\u5927\u503c\u200b\u4f18\u5316\u200b\uff0c\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u6709\u200b\u5982\u4e0b\u200b\u6027\u8d28\u200b</p> <ul> <li>\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u5411\u200b\u6781\u5c0f\u503c\u200b\u4f18\u5316\u200b</li> <li>\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u7684\u200b\u7cfb\u6570\u200b\u662f\u200b\u539f\u200b\u95ee\u9898\u200b\u7684\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u7cfb\u6570\u200b</li> <li>\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u7cfb\u6570\u200b\u662f\u200b\u539f\u200b\u95ee\u9898\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u7684\u200b\u7cfb\u6570\u200b</li> <li>\u200b\u539f\u200b\u95ee\u9898\u200b\u4e2d\u200b\\(\\geq 0\\)\u3001\\(\\leq 0\\)\u200b\u7684\u200b\u53d8\u91cf\u200b\u5206\u522b\u200b\u5bf9\u5e94\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u4e2d\u200b\\(\\geq\\)\u3001\\(\\leq\\)\u200b\u7c7b\u578b\u200b\u7684\u200b\u7ea6\u675f\u200b</li> <li>\u200b\u539f\u200b\u95ee\u9898\u200b\u4e2d\u200b\\(\\geq\\)\u3001\\(\\leq\\)\u200b\u7c7b\u578b\u200b\u7684\u200b\u7ea6\u675f\u200b\u5206\u522b\u200b\u5bf9\u5e94\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u4e2d\u200b\\(\\leq 0\\)\u3001\\(\\geq 0\\)\u200b\u7684\u200b\u53d8\u91cf\u200b</li> <li>\u200b\u4efb\u4f55\u200b\\(=\\)\u200b\u7c7b\u578b\u200b\u7684\u200b\u7ea6\u675f\u200b\u5bf9\u5e94\u200b\u81ea\u7531\u200b\u53d8\u91cf\u200b\uff0c\u200b\u53cd\u4e4b\u4ea6\u7136\u200b\u3002</li> </ul> <p>\u200b\u539f\u200b\u95ee\u9898\u200b\u7684\u200b\u6700\u4f18\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u7b49\u4e8e\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u7684\u200b\u6700\u4f18\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u3002\u200b\u4e14\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u6700\u4f18\u200b\u89e3\u4f1a\u200b\u4ee5\u200b\u8d1f\u503c\u200b\u7684\u200b\u5f62\u5f0f\u200b\u51fa\u73b0\u200b\u5728\u200b\u539f\u200b\u95ee\u9898\u200b\u6700\u4f18\u200b\u5355\u7eaf\u5f62\u200b\u8868\u200b\u7684\u200b\\(\\lambda\\)\u200b\u90e8\u5206\u200b\u3002\u200b\u5373\u200b\uff0c\\(\\lambda = -Y^*\\)</p>"},{"location":"math/operating-research/chapter-1/#_12","title":"\u7ebf\u6027\u89c4\u5212\u200b\u7684\u200b\u5bf9\u5076\u6027","text":"<p>\u200b\u8003\u8651\u200b\u5982\u4e0b\u200b\u5f62\u5f0f\u200b\u7684\u200b\u539f\u200b\u95ee\u9898\u200b\\((P)\\)\u200b\u4e0e\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\\((D)\\)</p> \\[ \\begin{aligned}     &amp; (P) &amp; \\begin{aligned}         &amp; \\max z=c^Tx \\\\         &amp; s.t. \\left\\{         \\begin{aligned}             &amp; AX \\leq b \\\\             &amp; X\\geq 0         \\end{aligned}         \\right .     \\end{aligned} \\\\     &amp; (D) &amp; \\begin{aligned}         &amp; \\min w=b^Ty \\\\         &amp; s.t. \\left\\{         \\begin{aligned}             &amp; A^Ty \\geq c \\\\             &amp; y\\geq 0         \\end{aligned}         \\right .     \\end{aligned} \\end{aligned} \\]"},{"location":"math/operating-research/chapter-1/#_13","title":"\u5bf9\u5076\u200b\u5b9a\u7406","text":""},{"location":"math/operating-research/chapter-1/#_14","title":"\u5f31\u200b\u5bf9\u5076\u200b\u5b9a\u7406","text":"<p>\u200b\u8bbe\u200b\\((P), (D)\\)\u200b\u7684\u200b\u4e00\u7ec4\u200b\u53ef\u884c\u200b\u89e3\u200b\u5206\u522b\u200b\u4e3a\u200b\\(x, y\\)\uff0c\u200b\u5219\u200b\u6709\u200b\\(c^Tx \\leq b^Ty\\)</p> <p>\u200b\u8bc1\u660e\u200b</p> <p>\u200b\u8003\u8651\u200b\\(y^TAx\\)\uff0c\u200b\u6709\u200b\uff1a</p> <ol> <li>\\(y^TAx = (A^Ty)^TX \\geq c^TX\\)</li> <li>\\(y^TAx \\leq y^Tb = b^T y\\)</li> </ol> <p>\u200b\u6839\u636e\u200b\u5f31\u200b\u5bf9\u5076\u200b\u5b9a\u7406\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5f97\u51fa\u200b\u5982\u4e0b\u200b\u7ed3\u8bba\u200b\uff1a</p> <ol> <li>\u200b\u539f\u200b\u95ee\u9898\u200b\u7684\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u503c\u200b\u662f\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u503c\u200b\u7684\u200b\u4e0b\u754c\u200b\uff0c\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u503c\u200b\u662f\u200b\u539f\u200b\u95ee\u9898\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u503c\u200b\u7684\u200b\u4e0a\u754c\u200b</li> <li>\u200b\u82e5\u539f\u200b\u95ee\u9898\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u503c\u200b\u65e0\u200b\u4e0a\u754c\u200b\u7b49\u4ef7\u200b\u4e8e\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u65e0\u200b\u89e3\u200b\uff0c\u200b\u82e5\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u503c\u200b\u65e0\u200b\u4e0b\u754c\u200b\u7b49\u4ef7\u200b\u4e8e\u539f\u200b\u95ee\u9898\u200b\u65e0\u200b\u89e3\u200b</li> </ol>"},{"location":"math/operating-research/chapter-1/#_15","title":"\u6700\u4f18\u6027\u200b\u5b9a\u7406","text":"<p>\u200b\u8bbe\u200b\\((P), (D)\\)\u200b\u7684\u200b\u4e00\u7ec4\u200b\u53ef\u884c\u200b\u89e3\u200b\u5206\u522b\u200b\u4e3a\u200b\\(x^*, y^*\\)\uff0c\u200b\u82e5\u200b\\(c^Tx^* = b^Ty^*\\)\uff0c\u200b\u5219\u200b\\(x^*, y^*\\)\u200b\u5206\u522b\u200b\u4e3a\u200b\u5404\u81ea\u200b\u95ee\u9898\u200b\u7684\u200b\u6700\u4f18\u200b\u89e3\u200b\u3002</p> <p>\u200b\u8bc1\u660e\u200b</p> <p>\u200b\u6839\u636e\u200b\u5f31\u200b\u5bf9\u5076\u200b\u5b9a\u7406\u200b\uff0c\u200b\u6709\u200b\\(c^Tx\\leq b^Ty^* = c^Tx^*\\leq b^Ty\\)</p>"},{"location":"math/operating-research/chapter-1/#_16","title":"\u6700\u4f18\u200b\u89e3\u200b\u7684\u200b\u5bf9\u5076\u6027","text":"<p>\u200b\u82e5\u200b\\(B\\)\u200b\u4e3a\u200b\\((P)\\)\u200b\u7684\u200b\u6700\u4f18\u200b\u57fa\u200b\uff0c\u200b\u5219\u200b\\((D)\\)\u200b\u7684\u200b\u6700\u4f18\u200b\u89e3\u4e3a\u200b\\(y^* = c_BB^{-1}\\)\u3002\u200b\u82e5\u200b\\((P)\\)\u200b\u548c\u200b\\((D)\\)\u200b\u5747\u200b\u6709\u200b\u53ef\u884c\u200b\u89e3\u200b\uff0c\u200b\u5219\u200b\u4e24\u8005\u200b\u5747\u200b\u6709\u200b\u6709\u754c\u200b\u6700\u4f18\u200b\u89e3\u200b\uff0c\u200b\u5e76\u4e14\u200b\u4e24\u8005\u200b\u7684\u200b\u6700\u4f18\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u503c\u200b\u76f8\u7b49\u200b\u3002</p>"},{"location":"math/operating-research/chapter-1/#_17","title":"\u4e92\u8865\u200b\u677e\u5f1b\u200b\u5b9a\u7406","text":"<p>\u200b\u5982\u679c\u200b\u539f\u200b\u95ee\u9898\u200b\\((P)\\)\u200b\u4e2d\u200b\u67d0\u200b\u4e00\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5bf9\u5076\u200b\u53d8\u91cf\u503c\u200b\u5927\u4e8e\u200b\\(0\\)\uff0c\u200b\u5219\u200b\u4e0e\u200b\u8be5\u200b\u5bf9\u5076\u200b\u53d8\u91cf\u200b\u5bf9\u5e94\u200b\u7684\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u53d6\u200b\u7b49\u5f0f\u200b\u3002\u200b\u76f8\u53cd\u200b\uff0c\u200b\u5982\u679c\u200b\u67d0\u4e00\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u53d6\u200b\u4e0d\u7b49\u5f0f\u200b\uff0c\u200b\u5219\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5bf9\u5076\u200b\u53d8\u91cf\u503c\u200b\u4e3a\u200b\\(0\\)\u3002</p> <p>\u200b\u6ce8\u610f\u200b</p> <p>\u200b\u8be5\u200b\u5b9a\u7406\u200b\u7684\u200b\u9006\u547d\u9898\u200b\u4e0d\u200b\u6210\u7acb\u200b\uff0c\u200b\u5373\u200b\u5f53\u539f\u200b\u95ee\u9898\u200b\u4e2d\u200b\u67d0\u200b\u4e00\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u53d6\u200b\u7b49\u5f0f\u200b\u65f6\u200b\uff0c\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5bf9\u5076\u200b\u53d8\u91cf\u503c\u200b\u65e0\u6cd5\u200b\u786e\u5b9a\u200b\u662f\u5426\u200b\u4e3a\u200b\\(0\\)</p> <p>\u200b\u5229\u7528\u200b\u4e92\u8865\u200b\u677e\u5f1b\u200b\u6027\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u6c42\u89e3\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u7684\u200b\u6700\u4f18\u200b\u89e3\u200b\u4ece\u800c\u200b\u7b80\u5316\u200b\u539f\u200b\u95ee\u9898\u200b\u7684\u200b\u6c42\u89e3\u200b</p>"},{"location":"math/operating-research/chapter-1/#_18","title":"\u5f71\u5b50\u200b\u4ef7\u683c","text":"<p>\u200b\u8003\u8651\u200b\u5f62\u200b\u5982\u200b\\((P)\\)\u200b\u7684\u200b\u7ebf\u6027\u89c4\u5212\u200b\u95ee\u9898\u200b\uff0c\u200b\u5f53\u200b\u67d0\u4e2a\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u7684\u200b\u6570\u503c\u200b\u53d8\u52a8\u200b\u4e00\u4e2a\u200b\u5355\u4f4d\u200b\u800c\u200b\u5176\u4ed6\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u4fdd\u6301\u200b\u4e0d\u53d8\u200b\u65f6\u200b\uff0c\u200b\u8be5\u200b\u53d8\u52a8\u200b\u5bf9\u200b\u6700\u4f18\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u9020\u6210\u200b\u7684\u200b\u5f71\u54cd\u200b\u3002\u200b\u5bf9\u5e94\u200b\u7ecf\u6d4e\u5b66\u200b\u4e2d\u200b\u8fb9\u9645\u200b\u6210\u672c\u200b\u7684\u200b\u6982\u5ff5\u200b\u3002</p> <ul> <li>\u200b\u6bcf\u4e2a\u200b\u7ea6\u675f\u200b\u5bf9\u5e94\u200b\u4e00\u4e2a\u200b\u5f71\u5b50\u200b\u4ef7\u683c\u200b</li> <li>\\(y = \\frac{\\partial z}{\\partial b}\\)</li> </ul> <p>\u200b\u5f71\u5b50\u200b\u4ef7\u683c\u200b\u53cd\u6620\u200b\u8d44\u6e90\u200b\u5728\u200b\u7cfb\u7edf\u200b\u5185\u200b\u7684\u200b\u7a00\u7f3a\u200b\u7a0b\u5ea6\u200b\uff0c\u200b\u5f53\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u4e3a\u200b\u4e0d\u200b\u6ee1\u8db3\u200b\u65f6\u200b\uff0c\u200b\u8be5\u200b\u8d44\u6e90\u200b\u7684\u200b\u91cf\u200b\u5728\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u5b9e\u9645\u4e0a\u200b\u4e0d\u200b\u53d7\u7ea6\u675f\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5f71\u5b50\u200b\u4ef7\u683c\u200b\u4e3a\u200b\\(0\\)\u3002</p>"},{"location":"math/operating-research/chapter-1/#_19","title":"\u5bf9\u5076\u200b\u5355\u7eaf\u5f62\u6cd5","text":"<p>\u200b\u6c42\u89e3\u200b\u5f62\u200b\u5982\u200b\\((P)\\)\u200b\u7684\u200b\u7ebf\u6027\u89c4\u5212\u200b\u95ee\u9898\u200b\u7684\u200b\u601d\u8def\u200b\u4e3a\u200b\u63a7\u5236\u200b\\(B^{-1}b \\geq 0\\)\u200b\u5bfb\u627e\u200b\u4f7f\u5f97\u200b\\(C-C_{B}B^{-1}A\\leq 0\\)\u200b\u7684\u200b\u57fa\u200b\u3002\u200b\u5bf9\u5076\u200b\u5355\u7eaf\u5f62\u6cd5\u200b\u4e0e\u200b\u4e4b\u200b\u76f8\u53cd\u200b\uff0c\u200b\u4fdd\u6301\u200b\\(C-C_{B}B^{-1}A\\leq 0\\)\uff0c\u200b\u5bfb\u627e\u200b\u4f7f\u5f97\u200b\\(B^{-1}b \\geq 0\\)\u200b\u7684\u200b\u4e00\u7ec4\u200b\u57fa\u200b\u3002</p> <p>\u200b\u6362\u5165\u200b\u53d8\u91cf\u200b\u7684\u200b\u786e\u5b9a\u200b\u4e0e\u200b\u5355\u7eaf\u5f62\u6cd5\u200b\u76f8\u540c\u200b</p>"},{"location":"math/operating-research/chapter-1/#_20","title":"\u7ebf\u6027\u89c4\u5212\u200b\u7684\u200b\u7075\u654f\u5ea6","text":"<p>\u200b\u7075\u654f\u5ea6\u200b\u8ba8\u8bba\u200b\u7ebf\u6027\u89c4\u5212\u200b\u4e2d\u200b\u53c2\u6570\u200b\u53d8\u5316\u200b\u5bf9\u200b\u7ebf\u6027\u89c4\u5212\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u503c\u200b\u7684\u200b\u5f71\u54cd\u200b\uff0c\u200b\u5e94\u5f53\u200b\u6ce8\u610f\u200b\uff0c\u200b\u5982\u679c\u200b\u53c2\u6570\u200b\u53d8\u52a8\u200b\u8fc7\u5927\u200b\uff0c\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u7ebf\u6027\u89c4\u5212\u200b\u89e3\u200b\u53d1\u751f\u53d8\u5316\u200b\u3002</p> <p>\u200b\u8003\u8651\u200b\u5f62\u200b\u5982\u4e0b\u200b\u5f0f\u200b\u7684\u200b\u7ebf\u6027\u89c4\u5212\u200b\uff1a</p> \\[ \\begin{aligned}     &amp; \\max Z = 5x_1 + 8x_2 + 6x_3 \\\\     s.t. &amp; \\left\\{     \\begin{aligned}         x_1 &amp; + &amp; x_2 + &amp; x_3 + &amp; x_4 &amp; &amp;= &amp; 12 \\\\         x_1 &amp; + &amp; 2x_2 + &amp; 2x_3 + &amp; &amp; x_5 &amp;= &amp; 20 \\\\         x_i &amp;\\geq 0     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u200b\u5176\u200b\u6700\u4f18\u200b\u5355\u7eaf\u5f62\u200b\u8868\u4e3a\u200b\uff1a</p> <p> </p> <p>\u200b\u4efb\u4f55\u200b\u7cfb\u6570\u200b\u7684\u200b\u53d8\u5316\u200b\u90fd\u200b\u4f1a\u200b\u9020\u6210\u200b\u4e24\u79cd\u200b\u60c5\u51b5\u200b\uff1a</p> <ol> <li>\u200b\u6700\u4f18\u200b\u89e3\u4e0d\u200b\u53d1\u751f\u53d8\u5316\u200b</li> <li>\u200b\u6700\u4f18\u200b\u89e3\u200b\u53d1\u751f\u53d8\u5316\u200b</li> </ol>"},{"location":"math/operating-research/chapter-1/#_21","title":"\u76ee\u6807\u200b\u51fd\u6570\u200b\u7cfb\u6570\u200b\u7684\u200b\u7075\u654f\u5ea6","text":"<p>\u200b\u5f53\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u7cfb\u6570\u200b\u53d1\u751f\u53d8\u5316\u200b\u65f6\u200b\uff0c\u200b\u5982\u679c\u200b\u6700\u4f18\u200b\u89e3\u4e0d\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u5219\u200b\\(\\frac{\\partial Z}{\\partial C} = X\\)\u3002</p> <ul> <li>\u200b\u4e00\u4e2a\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u7cfb\u6570\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u6700\u4f18\u200b\u89e3\u4e0d\u200b\u53d1\u751f\u53d8\u5316\u200b\u7684\u200b\u5145\u8981\u6761\u4ef6\u200b\u662f\u200b\u53d8\u5316\u200b\u540e\u200b\u7684\u200b\u68c0\u9a8c\u200b\u6570\u200b\u4ecd\u200b\u4e0d\u200b\u8d85\u8fc7\u200b\\(0\\)\u3002</li> <li>\u200b\u591a\u4e2a\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u7cfb\u6570\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u6700\u4f18\u200b\u89e3\u4e0d\u200b\u53d1\u751f\u53d8\u5316\u200b\u7684\u200b\u5145\u5206\u6761\u4ef6\u200b\u662f\u200b\u5404\u4e2a\u200b\u7cfb\u6570\u200b\u53d8\u5316\u200b\u7684\u200b\u5e45\u5ea6\u200b\u6ee1\u8db3\u200b\\(100\\%\\)\u200b\u6cd5\u5219\u200b\u3002</li> </ul> <p>100%\u200b\u6cd5\u5219\u200b</p> <p>\u200b\u5b9a\u4e49\u200b\\(r_i = |\\frac{\\Delta c_i}{u_i}|\\)\uff0c\u200b\u5176\u4e2d\u200b\\(u_i\\)\u200b\u4e3a\u200b\u7cfb\u6570\u200b\\(c_i\\)\u200b\u5141\u8bb8\u200b\u53d8\u5316\u200b\u7684\u200b\u6700\u200b\u5927\u5e45\u5ea6\u200b\u3002\u200b\u82e5\u200b\\(\\sum r_i &lt; 1\\)\uff0c\u200b\u5219\u200b\u6700\u4f18\u200b\u89e3\u4e0d\u200b\u53d1\u751f\u53d8\u5316\u200b\u3002</p>"},{"location":"math/operating-research/chapter-1/#_22","title":"\u7ea6\u675f\u6761\u4ef6\u200b\u7684\u200b\u7075\u654f\u5ea6","text":"<p>\u200b\u5f53\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u53d1\u751f\u53d8\u5316\u200b\u65f6\u200b\uff0c\u200b\u5982\u679c\u200b\u5355\u7eaf\u5f62\u200b\u8868\u4e2d\u200b\u7684\u200b\\(b' = B^{-1}b\\)\u200b\u4e0d\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u5219\u200b\u6700\u4f18\u200b\u57fa\u4e0d\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u5426\u5219\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u5bf9\u5076\u200b\u5355\u7eaf\u5f62\u6cd5\u200b\u6c42\u200b\u51fa\u65b0\u200b\u7684\u200b\u6700\u4f18\u200b\u57fa\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b</p> <p>\u200b\u5728\u200b\u67d0\u4e9b\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u5373\u4f7f\u200b\u6700\u4f18\u200b\u57fa\u4e0d\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u6700\u4f18\u200b\u89e3\u200b\u4e5f\u200b\u4f1a\u200b\u53d1\u751f\u53d8\u5316\u200b\u3002</p> <p>\u200b\u8bbe\u539f\u200b\u95ee\u9898\u200b\u4e2d\u200b\\(b_1\\)\u200b\u5141\u8bb8\u200b\u53d8\u5316\u200b\u7684\u200b\u8303\u56f4\u200b\u4e3a\u200b\\(\\lambda\\)\uff0c\u200b\u5219\u200b\uff1a</p> \\[ b' = B^{-1}b = \\begin{bmatrix}     1 &amp; 1 \\\\ 1 &amp; 2 \\end{bmatrix} ^{-1} \\begin{bmatrix}     \\lambda \\\\ 0 \\end{bmatrix} = \\begin{bmatrix}     4 + 2\\lambda \\\\ 8 - \\lambda \\end{bmatrix} \\] <p>\u200b\u5982\u679c\u200b\u6700\u4f18\u200b\u57fa\u200b\u4e0d\u53d8\u200b\uff0c\u200b\u5219\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u7684\u200b\u6700\u4f18\u200b\u89e3\u200b\u4e0d\u53d8\u200b\uff0c\u200b\u5373\u200b\u5f71\u5b50\u200b\u4ef7\u683c\u200b\u4e0d\u53d8\u200b\u3002\u200b\u5f71\u5b50\u200b\u4ef7\u683c\u200b\u7684\u200b\u53d8\u5316\u89c4\u5f8b\u200b\u4ecd\u200b\u6ee1\u8db3\u200b\\(100\\%\\)\u200b\u6cd5\u5219\u200b\u3002</p>"},{"location":"math/operating-research/chapter-1/#_23","title":"\u6dfb\u52a0\u200b\u65b0\u200b\u53d8\u91cf\u200b\u6216\u200b\u65b0\u200b\u7ea6\u675f\u200b\u7684\u200b\u7075\u654f\u5ea6","text":"<p>\u200b\u6dfb\u52a0\u200b\u65b0\u200b\u53d8\u91cf\u200b\u65f6\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u65b0\u200b\u53d8\u91cf\u200b\u7684\u200b\u68c0\u9a8c\u200b\u6570\u200b\uff0c\u200b\u5982\u679c\u200b\u68c0\u9a8c\u200b\u6570\u200b\u5c0f\u4e8e\u200b\u7b49\u4e8e\u200b\\(0\\)\uff0c\u200b\u5219\u200b\u65b0\u200b\u52a0\u5165\u200b\u7684\u200b\u53d8\u91cf\u200b\u7684\u200b\u6700\u4f18\u200b\u89e3\u4e3a\u200b\\(0\\)\uff0c\u200b\u4e0d\u4f1a\u200b\u5bf9\u539f\u200b\u6700\u4f18\u200b\u89e3\u200b\u4ea7\u751f\u200b\u5f71\u54cd\u200b\u3002</p> <p>\u200b\u6dfb\u52a0\u200b\u65b0\u200b\u7ea6\u675f\u200b\u65f6\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u7ea6\u675f\u200b\u5728\u200b\u5f53\u524d\u200b\u7ed3\u679c\u200b\u4e0b\u200b\u662f\u5426\u200b\u6ee1\u8db3\u200b\uff0c\u200b\u5982\u679c\u200b\u7ea6\u675f\u200b\u6ee1\u8db3\u200b\u5219\u200b\u6700\u4f18\u200b\u89e3\u200b\u4e0d\u53d8\u200b\uff0c\u200b\u5426\u5219\u200b\u6700\u4f18\u200b\u89e3\u200b\u6539\u53d8\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u5bf9\u5076\u200b\u5355\u7eaf\u5f62\u6cd5\u200b\u8fdb\u884c\u200b\u6c42\u89e3\u200b\u3002</p>"},{"location":"math/operating-research/chapter-1/#_24","title":"\u6539\u53d8\u200b\u7cfb\u6570\u200b\u77e9\u9635\u200b\u7684\u200b\u7075\u654f\u5ea6","text":"<p>\u200b\u8ba1\u7b97\u200b\\(A' = B^{-1}A\\)\uff0c\u200b\u7136\u540e\u200b\u4f7f\u7528\u200b\u5355\u7eaf\u5f62\u6cd5\u200b\u6216\u200b\u5bf9\u5076\u200b\u5355\u7eaf\u5f62\u6cd5\u200b\u8fdb\u884c\u200b\u6c42\u89e3\u200b\u3002</p>"},{"location":"math/operating-research/chapter-2/","title":"\u8fd0\u8f93\u200b\u95ee\u9898","text":"<p>\u200b\u8fd0\u8f93\u200b\u95ee\u9898\u200b\u662f\u200b\u4e00\u79cd\u200b\u7279\u6b8a\u200b\u7684\u200b\u7ebf\u6027\u89c4\u5212\u200b\u95ee\u9898\u200b\uff0c\u200b\u5177\u6709\u200b\u5982\u4e0b\u200b\u7684\u200b\u6570\u5b66\u200b\u5f62\u5f0f\u200b\uff1a</p> <ul> <li>\u200b\u7269\u8d44\u200b\u7684\u200b\u4ea7\u5730\u200b\u4e3a\u200b\\(A_i,\\; i=1, 2, \\dots m\\)\uff0c\u200b\u4ea7\u91cf\u200b\u4e3a\u200b\\(a_i\\)</li> <li>\u200b\u7269\u8d44\u200b\u7684\u200b\u9500\u5730\u200b\u4e3a\u200b\\(B_j,\\; j=1, 2, \\dots n\\)\uff0c\u200b\u9500\u91cf\u200b\u4e3a\u200b\\(b_j\\)</li> <li>\u200b\u4ece\u200b\\(i\\)\u200b\u5230\u200b\\(j\\)\u200b\u7684\u200b\u5355\u4f4d\u200b\u8fd0\u4ef7\u200b\\(c_{ij}\\)</li> <li>\u200b\u4f18\u5316\u200b\u8fd0\u8f93\u200b\u5b89\u6392\u200b\u4f7f\u5f97\u200b\u603b\u200b\u8fd0\u4ef7\u200b\u6700\u5c0f\u200b</li> </ul> <p>\u200b\u5176\u200b\u7ebf\u6027\u89c4\u5212\u200b\u5f62\u5f0f\u200b\u5982\u4e0b\u200b\uff1a</p> \\[ \\begin{aligned}     &amp; \\min Z = \\sum_{i=1}^m \\sum_{i=1}^n c_{ij}x_{ij} \\\\     s.t. &amp; \\left\\{     \\begin{aligned}         &amp; \\sum_{i = 1}^m x_{ij} = b_{j} \\\\         &amp; \\sum_{j = 1}^n x_{ij} = a_{i} \\\\         &amp; x_{ij} \\geq 0     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u4e3a\u200b\uff1a</p> \\[ \\begin{aligned}     &amp; \\max W = \\sum_{i=1}^m a_iu_i + \\sum_{j=1}^n b_jv_j \\\\     s.t. &amp; \\left\\{         \\begin{aligned}             &amp; u_j + v_j \\leq c_{ij} \\\\             &amp; u_i \\geq 0 \\\\             &amp; v_j \\geq 0 \\\\             &amp; i = 1, 2, \\dots m \\\\             &amp; j = 1, 2, \\dots n         \\end{aligned}     \\right . \\end{aligned} \\] <p>\u200b\u5982\u679c\u200b\u8fd0\u8f93\u200b\u95ee\u9898\u200b\u7684\u200b\u4ea7\u9500\u200b\u5e73\u8861\u200b\uff0c\u200b\u5373\u200b\\(\\sum a_i = \\sum b_j\\)\uff0c\u200b\u5219\u200b\u8fd0\u8f93\u200b\u95ee\u9898\u200b\u5fc5\u6709\u200b\u6709\u9650\u200b\u6700\u4f18\u200b\u89e3\u200b\u3002\u200b\u57fa\u200b\u53ef\u884c\u200b\u89e3\u4e2d\u57fa\u200b\u53d8\u91cf\u200b\u7684\u200b\u4e2a\u6570\u200b\u4e3a\u200b\\(m + n - 1\\)</p>"},{"location":"math/operating-research/chapter-2/#_2","title":"\u8868\u4e0a\u200b\u4f5c\u4e1a\u200b\u6cd5","text":"<p>\u200b\u8868\u683c\u200b\u7684\u200b\u901a\u5e38\u200b\u683c\u5f0f\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p> <ol> <li>\u200b\u8ba1\u7b97\u200b\u521d\u59cb\u200b\u57fa\u200b\u53ef\u884c\u200b\u89e3\u200b\uff0c\u200b\u5373\u200b\u5728\u200b\u8868\u683c\u200b\u4e0a\u200b\u586b\u5165\u200b\\(m + n - 1\\)\u200b\u4e2a\u200b\u6570\u5b57\u200b</li> <li>\u200b\u8ba1\u7b97\u200b\u8868\u4e2d\u200b\u5404\u200b\u7a7a\u683c\u200b\uff08\u200b\u975e\u57fa\u200b\u53d8\u91cf\u200b\uff09\u200b\u7684\u200b\u68c0\u9a8c\u200b\u6570\u200b\uff0c\u200b\u5224\u65ad\u200b\u5f53\u524d\u200b\u89e3\u200b\u662f\u5426\u200b\u6700\u4f18\u200b\u89e3\u200b</li> <li>\u200b\u82e5\u200b\u5f53\u524d\u200b\u89e3\u200b\u4e0d\u662f\u200b\u6700\u4f18\u200b\u89e3\u200b\uff0c\u200b\u5219\u200b\u8fed\u4ee3\u200b\u5230\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u57fa\u200b</li> </ol> <p>\u200b\u6ce8\u610f\u200b</p> <p>\u200b\u57fa\u200b\u53d8\u91cf\u200b\u4e0d\u80fd\u200b\u6784\u6210\u200b\u95ed\u200b\u56de\u8def\u200b\uff0c\u200b\u6784\u6210\u200b\u4e00\u7ec4\u200b\u95ed\u200b\u56de\u8def\u200b\u7684\u200b\u53d8\u91cf\u200b\u4e2d\u200b\u5fc5\u7136\u200b\u5305\u542b\u200b\u81f3\u5c11\u200b\u4e00\u4e2a\u200b\u975e\u57fa\u200b\u53d8\u91cf\u200b\u3002</p> <p>\u200b\u95ed\u200b\u56de\u8def\u200b\u793a\u610f\u56fe\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p> <p>\u200b\u4e00\u4e2a\u200b\u95ed\u200b\u56de\u8def\u200b\u4e2d\u200b\u542b\u6709\u200b\u5076\u6570\u200b\u4e2a\u200b\u5355\u5143\u683c\u200b\u3002</p> <p>\u200b\u5982\u4e0b\u200b\u4f7f\u7528\u200b \u200b\u7a7a\u683c\u200b \u200b\u8868\u793a\u200b\\(x_{ij} = 0\\)\u200b\u7684\u200b\u5355\u5143\u683c\u200b\uff0c\u200b\u4f7f\u7528\u200b \u200b\u6570\u5b57\u200b\u683c\u200b \u200b\u8868\u793a\u200b\\(x_{ij} &gt; 0\\)\u200b\u7684\u200b\u5355\u5143\u683c\u200b</p>"},{"location":"math/operating-research/chapter-2/#_3","title":"\u786e\u5b9a\u200b\u521d\u59cb\u200b\u57fa\u200b\u53ef\u884c\u200b\u89e3","text":"<p>\u200b\u6709\u200b\u4e09\u79cd\u200b\u65b9\u6cd5\u200b\u7528\u4e8e\u200b\u786e\u5b9a\u200b\u521d\u59cb\u200b\u57fa\u200b\u53ef\u884c\u200b\u89e3\u200b\uff1a</p> <ol> <li>\u200b\u6700\u5c0f\u200b\u5143\u7d20\u200b\u6cd5\u200b</li> <li>\u200b\u897f\u5317\u89d2\u200b\u6cd5\u200b</li> <li>Vogol\u200b\u6cd5\u200b</li> </ol>"},{"location":"math/operating-research/chapter-2/#_4","title":"\u6700\u5c0f\u200b\u5143\u7d20\u200b\u6cd5","text":"<p>\u200b\u6700\u5c0f\u200b\u5143\u7d20\u200b\u6cd5\u200b\u4f18\u5148\u200b\u5bfb\u627e\u200b\u8fd0\u4ef7\u200b\u8f83\u200b\u4f4e\u200b\u7684\u200b\u53d8\u91cf\u200b\u4f5c\u4e3a\u200b\u57fa\u200b\u53d8\u91cf\u200b\u3002\u200b\u5982\u679c\u200b\u9009\u53d6\u200b\u51fa\u200b\u7684\u200b\\(x_{ij}\\)\u200b\u6b63\u200b\u5206\u91cf\u200b\u4e0d\u200b\u5305\u542b\u200b\u95ed\u200b\u56de\u8def\u200b\uff0c\u200b\u5219\u200b\\(\\{x_{ij}\\}\\)\u200b\u4e3a\u57fa\u200b\u53ef\u884c\u200b\u89e3\u200b\u3002</p>"},{"location":"math/operating-research/chapter-2/#_5","title":"\u897f\u5317\u89d2\u200b\u6cd5","text":"<p>\u200b\u897f\u5317\u89d2\u200b\u6cd5\u4ece\u200b\u5de6\u4e0a\u200b\u5f00\u59cb\u200b\uff0c\u200b\u4f18\u5148\u200b\u6700\u5927\u5316\u200b\u6ee1\u8db3\u200b\u5de6\u4e0a\u89d2\u200b\u7684\u200b\u8fd0\u8f93\u200b\u9700\u6c42\u200b\u3002\u200b\u5982\u679c\u200b\u4f9b\u7ed9\u65b9\u200b\u9700\u6c42\u200b\u5df2\u7ecf\u200b\u6ee1\u8db3\u200b\uff0c\u200b\u5219\u200b\u5212\u53bb\u200b\u4f9b\u7ed9\u65b9\u200b\u6240\u5728\u200b\u7684\u200b\u884c\u200b\uff0c\u200b\u5426\u5219\u200b\u5212\u200b\u53bb\u200b\u9700\u6c42\u65b9\u200b\u6240\u5728\u200b\u7684\u200b\u5217\u200b\u3002\u200b\u91cd\u590d\u200b\u4ee5\u4e0a\u200b\u8fc7\u7a0b\u200b\u76f4\u5230\u200b\u53f3\u4e0b\u89d2\u200b\u3002</p>"},{"location":"math/operating-research/chapter-2/#vogol","title":"Vogol\u200b\u6cd5","text":"<p>Vogol\u200b\u6cd5\u200b\u8ba1\u7b97\u200b\u5404\u884c\u200b\u5404\u5217\u200b\u4e2d\u200b\u6700\u5c0f\u200b\\(c_{ij}\\)\u200b\u4e0e\u200b\u6b21\u200b\u5c0f\u200b\\(c_{ij}\\)\u200b\u7684\u200b\u5dee\u200b\u4f5c\u4e3a\u200b\u7f5a\u6570\u200b\uff0c\u200b\u4f18\u5148\u200b\u5b89\u6392\u200b\u7f5a\u6570\u200b\u6bd4\u8f83\u200b\u5927\u200b\u7684\u200b\u4ea7\u5730\u200b-\u200b\u9500\u5730\u200b\u3002\u200b\u9009\u53d6\u200b\u7f5a\u6570\u200b\u6700\u5927\u200b\u7684\u200b\u884c\u200b\u6216\u200b\u5217\u200b\uff0c\u200b\u5e76\u200b\u586b\u5165\u200b\u6700\u5c0f\u200b\u7684\u200b\\(c_{ij}\\)\uff0c\u200b\u7136\u540e\u200b\u5212\u200b\u53bb\u200b\u8be5\u884c\u200b\u6216\u5217\u200b\uff0c\u200b\u91cd\u65b0\u200b\u8ba1\u7b97\u200b\u7f5a\u6570\u200b\u3002</p> <p>Vogol\u200b\u6cd5\u200b\u901a\u5e38\u200b\u80fd\u591f\u200b\u5f97\u5230\u200b\u66f4\u4f18\u200b\u7684\u200b\u521d\u59cb\u200b\u57fa\u200b\u53ef\u884c\u200b\u89e3\u200b\u3002</p>"},{"location":"math/operating-research/chapter-2/#_6","title":"\u6700\u4f18\u6027\u200b\u68c0\u9a8c","text":""},{"location":"math/operating-research/chapter-2/#_7","title":"\u95ed\u200b\u56de\u8def\u200b\u6cd5","text":"<p>\u200b\u5b9a\u7406\u200b</p> <p>\u200b\u5bf9\u4e8e\u200b\u6bcf\u4e2a\u200b\u7a7a\u683c\u200b\uff0c\u200b\u90fd\u200b\u5b58\u5728\u200b\u4e00\u6761\u200b\u95ed\u200b\u56de\u8def\u200b\uff1a</p> <ol> <li>\u200b\u7a7a\u683c\u200b\u4f4d\u4e8e\u200b\u8be5\u95ed\u200b\u56de\u8def\u200b\u7684\u200b\u62d0\u70b9\u200b\u4e0a\u200b</li> <li>\u200b\u95ed\u200b\u56de\u8def\u200b\u7684\u200b\u5176\u4ed6\u200b\u62d0\u70b9\u200b\u662f\u200b\u6570\u5b57\u200b\u683c\u200b</li> </ol> <p>\u200b\u5c06\u200b\u4ece\u200b\u7a7a\u683c\u200b\u51fa\u53d1\u200b\uff0c\u200b\u5076\u6570\u200b\u5355\u5143\u683c\u200b\u7684\u200b\u8fd0\u4ef7\u200b\u548c\u200b\u4e0e\u200b\u5947\u6570\u200b\u5355\u5143\u683c\u200b\u7684\u200b\u8fd0\u4ef7\u200b\u548c\u200b\u4e4b\u200b\u5dee\u200b\u8bb0\u4e3a\u200b\\(\\lambda_{ij}\\)\uff0c\u200b\u82e5\u200b\u5bf9\u4e8e\u200b\u6240\u6709\u200b\u7a7a\u683c\u200b\uff0c\u200b\u90fd\u200b\u6709\u200b\\(\\lambda_{ij} \\leq 0\\)\uff0c\u200b\u5219\u200b\u5f53\u524d\u200b\u7684\u200b\\(\\{x_{ij}\\}\\)\u200b\u4e3a\u200b\u6700\u4f18\u200b\u89e3\u200b\u3002</p>"},{"location":"math/operating-research/chapter-2/#_8","title":"\u4f4d\u52bf\u200b\u6cd5","text":"<p>\u200b\u8bbe\u200b\\((u_{i}, v_{j})\\)\u200b\u4e3a\u200b\u5bf9\u5076\u200b\u95ee\u9898\u200b\u7684\u200b\u53ef\u884c\u200b\u89e3\u200b\uff0c\\(\\{x_{ij}\\}\\)\u200b\u4e3a\u539f\u200b\u95ee\u9898\u200b\u7684\u200b\u53ef\u884c\u200b\u89e3\u200b\u3002\u200b\u6839\u636e\u200b\u4e92\u8865\u200b\u677e\u5f1b\u200b\u6027\u200b\uff0c\u200b\u82e5\u200b\\(x_{ij}(c_{ij} - u_i - v_j) = 0\\)\uff0c\u200b\u5219\u200b\u4e24\u7ec4\u200b\u89e3\u200b\u5206\u522b\u200b\u4e3a\u200b\u5bf9\u5e94\u200b\u95ee\u9898\u200b\u7684\u200b\u6700\u4f18\u200b\u89e3\u200b\u3002</p> <p>\u200b\u5df2\u77e5\u200b\u5f53\u524d\u200b\u4e00\u7ec4\u200b\u57fa\u200b\u53ef\u884c\u200b\u89e3\u200b\\(\\{x_{ij}\\}\\)\uff1a</p> <ol> <li>\u200b\u5bf9\u4e8e\u200b\u57fa\u200b\u53d8\u91cf\u200b\\(\\{x_{ij}\\}\\)\uff0c\u200b\u5217\u51fa\u200b\u65b9\u7a0b\u200b\\(u_i + v_j = c_{ij}\\)\uff0c\u200b\u7ec4\u5408\u6210\u200b\u65b9\u7a0b\u7ec4\u200b</li> <li>\u200b\u8be5\u200b\u65b9\u7a0b\u7ec4\u200b\u6709\u200b\\(m+n\\)\u200b\u4e2a\u200b\u53d8\u91cf\u200b\u4f46\u200b\u53ea\u6709\u200b\\(m + n - 1\\)\u200b\u4e2a\u200b\u65b9\u7a0b\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6709\u200b\u65e0\u6570\u200b\u89e3\u200b\uff0c\u200b\u4efb\u9009\u200b\u4e00\u7ec4\u200b\u89e3\u200b\u5373\u53ef\u200b</li> <li>\u200b\u5bf9\u4e8e\u200b\u975e\u57fa\u200b\u53d8\u91cf\u200b\\(x_{ij}\\)\uff0c\u200b\u8ba1\u7b97\u200b\\(\\lambda_{ij} = c_{ij} - u_i - v_j\\)</li> <li>\u200b\u82e5\u200b\\(\\lambda _{ij}\\)\u200b\u5168\u90e8\u200b\\(\\geq 0\\)\uff0c\u200b\u5219\u200b\u5f53\u524d\u200b\u89e3\u4e3a\u200b\u6700\u4f18\u200b\u89e3\u200b</li> <li>\u200b\u5426\u5219\u200b\u8f6c\u200b\u51fa\u200b\\((i, j) = \\arg\\max_{(i, j)} -\\lambda_{ij}\\)\uff0c\u200b\u8c03\u6574\u200b\u8be5\u200b\u7a7a\u683c\u200b\u6240\u5728\u200b\u7684\u200b\u95ed\u200b\u56de\u8def\u200b</li> </ol>"},{"location":"math/operating-research/chapter-2/#_9","title":"\u8fd0\u8f93\u200b\u95ee\u9898\u200b\u7684\u200b\u53d8\u79cd","text":""},{"location":"math/operating-research/chapter-2/#_10","title":"\u4e24\u5730\u200b\u65e0\u200b\u8fde\u63a5","text":"<p>\u200b\u5982\u679c\u200b\u6a21\u578b\u200b\u4e2d\u200b\u5b58\u5728\u200b\u4e24\u4e2a\u200b\u5730\u70b9\u200b\u4e4b\u95f4\u200b\u4e0d\u80fd\u200b\u8fd0\u8f93\u200b\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u4e24\u5730\u200b\u95f4\u200b\u7684\u200b\u8fd0\u4ef7\u200b\u8bbe\u200b\u4e3a\u200b\u8db3\u591f\u200b\u9ad8\u200b\u7684\u200b\u6b63\u6570\u200b\u3002</p>"},{"location":"math/operating-research/chapter-2/#_11","title":"\u4ea7\u9500\u200b\u4e0d\u200b\u5e73\u8861","text":"<p>\u200b\u5f53\u200b\u95ee\u9898\u200b\u4e2d\u200b\u4ea7\u91cf\u200b\u4e0e\u200b\u9500\u91cf\u200b\u4e0d\u200b\u76f8\u7b49\u200b\u65f6\u200b\uff1a</p> <ul> <li>\u200b\u5982\u679c\u200b\u4ea7\u91cf\u200b\u5927\u4e8e\u200b\u9500\u552e\u91cf\u200b\uff0c\u200b\u5219\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u865a\u62df\u200b\u4e70\u65b9\u200b\uff0c\u200b\u589e\u52a0\u200b\\(m\\)\u200b\u4e2a\u200b\u677e\u5f1b\u200b\u53d8\u91cf\u200b</li> <li>\u200b\u5982\u679c\u200b\u9500\u552e\u91cf\u200b\u5927\u4e8e\u200b\u4ea7\u91cf\u200b\uff0c\u200b\u5219\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u865a\u62df\u200b\u5356\u65b9\u200b\uff0c\u200b\u589e\u52a0\u200b\\(n\\)\u200b\u4e2a\u200b\u677e\u5f1b\u200b\u53d8\u91cf\u200b</li> </ul>"},{"location":"math/operating-research/chapter-2/#_12","title":"\u9700\u6c42\u200b\u8303\u56f4","text":"<p>\u200b\u5982\u679c\u200b\u4e70\u65b9\u200b\u7684\u200b\u9700\u6c42\u200b\u5728\u200b\u4e00\u4e2a\u200b\u8303\u56f4\u200b\u4e2d\u200b\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5b58\u5728\u200b\u8303\u56f4\u200b\u9700\u6c42\u200b\u7684\u200b\u4e70\u65b9\u200b\u62c6\u200b\u5206\u4e3a\u200b\u4e24\u4e2a\u200b\u90e8\u5206\u200b\uff0c\u200b\u5373\u200b\u5fc5\u987b\u200b\u6ee1\u8db3\u200b\u7684\u200b\u9700\u6c42\u200b\u90e8\u5206\u200b\u4e0e\u200b\u53ef\u9009\u200b\u6ee1\u8db3\u200b\u7684\u200b\u9700\u6c42\u200b\u90e8\u5206\u200b\uff0c\u200b\u4e24\u200b\u90e8\u5206\u200b\u5230\u200b\u5356\u65b9\u200b\u7684\u200b\u8fd0\u4ef7\u200b\u76f8\u540c\u200b\u3002\u200b\u540c\u65f6\u200b\u52a0\u5165\u200b\u4e00\u4e2a\u200b\u865a\u62df\u200b\u5356\u65b9\u200b\uff0c\u200b\u865a\u62df\u200b\u5356\u65b9\u200b\u5230\u200b\u5fc5\u987b\u200b\u6ee1\u8db3\u200b\u7684\u200b\u865a\u62df\u200b\u4e70\u5bb6\u200b\u7684\u200b\u8fd0\u4ef7\u200b\u4e3a\u200b\u8db3\u591f\u200b\u5927\u200b\u7684\u200b\u6b63\u6570\u200b\uff0c\u200b\u865a\u62df\u200b\u5356\u65b9\u200b\u5230\u200b\u53ef\u9009\u200b\u6ee1\u8db3\u200b\u7684\u200b\u865a\u62df\u200b\u4e70\u5bb6\u200b\u7684\u200b\u8fd0\u4ef7\u200b\u4e3a\u200b\\(0\\)\u3002</p>"},{"location":"math/operating-research/chapter-2/#_13","title":"\u4f9b\u5e94\u200b\u95ee\u9898","text":"<p>\u200b\u8003\u8651\u200b\u6309\u200b\u6708\u200b\u751f\u4ea7\u200b\u7684\u200b\u5356\u65b9\u200b\u4e0e\u200b\u6309\u200b\u6708\u200b\u4ea7\u751f\u200b\u9700\u6c42\u200b\u7684\u200b\u4e70\u65b9\u200b\uff0c\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u5ef6\u671f\u200b\u4ea4\u8d27\u200b\u3002\u200b\u5356\u65b9\u200b\u751f\u4ea7\u200b\u7684\u200b\u4ea7\u54c1\u200b\u5f53\u6708\u200b\u53ef\u4ee5\u200b\u4e0d\u200b\u9500\u552e\u200b\u3002\u200b\u5219\u200b\u8be5\u200b\u95ee\u9898\u200b\u53ef\u4ee5\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u8fd0\u8f93\u200b\u95ee\u9898\u200b\u3002</p>"},{"location":"math/operating-research/chapter-2/#_14","title":"\u591a\u7ef4\u200b\u8fd0\u8f93\u200b\u95ee\u9898","text":"<p>\u200b\u5047\u8bbe\u200b\u4e24\u5730\u200b\u4e4b\u95f4\u200b\u5b58\u5728\u200b\\(k\\)\u200b\u4e2a\u200b\u4e2d\u95f4\u200b\u8282\u70b9\u200b\\(c_k\\)\uff0c\u200b\u4ece\u200b\\(A\\)\u200b\u5230\u200b\\(B\\)\u200b\u7684\u200b\u6240\u6709\u200b\u8def\u5f84\u200b\u90fd\u200b\u5fc5\u987b\u200b\u7ecf\u8fc7\u200b\u8282\u70b9\u200b\\(C\\)\uff0c\u200b\u6c42\u200b\u6700\u4f18\u200b\u8fd0\u8f93\u200b\u65b9\u6848\u200b\u3002</p>"},{"location":"math/operating-research/chapter-3/","title":"\u76ee\u6807\u200b\u89c4\u5212","text":"<p>\u200b\u76ee\u6807\u200b\u89c4\u5212\u200b\u89e3\u51b3\u200b\u73b0\u5b9e\u751f\u6d3b\u200b\u4e2d\u200b\u7684\u200b\u591a\u200b\u76ee\u6807\u200b\u51b3\u7b56\u95ee\u9898\u200b\u3002</p> <p>\u200b\u8bbe\u200b\u7ebf\u6027\u89c4\u5212\u200b\\((P)\\)\uff1a</p> \\[ \\begin{aligned}     &amp; \\max z=c^Tx \\\\     &amp; s.t. \\left\\{     \\begin{aligned}         &amp; AX \\leq b \\\\         &amp; X\\geq 0     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u200b\u5047\u8bbe\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u7684\u200b\u76ee\u6807\u200b\u8c03\u6574\u200b\u4e3a\u200b\uff1a</p> <p>\u200b\u5bfb\u627e\u200b\u4f7f\u5f97\u200b\\(z\\geq z_0\\)\u200b\u7684\u200b\\(X\\)\uff0c\u200b\u5176\u4e2d\u200b\\(z_0\\)\u200b\u4e3a\u200b\u6307\u5b9a\u200b\u7684\u200b\u76ee\u6807\u200b\u3002\u200b\u5141\u8bb8\u200b\\(z &gt; z_0\\)\u200b\u4f46\u200b\u4e0d\u200b\u5141\u8bb8\u200b\\(z &lt; z_0\\)</p> <p>\u200b\u6b64\u65f6\u200b\u7684\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u5373\u200b\u4e3a\u200b\u76ee\u6807\u200b\u89c4\u5212\u200b\uff0c\u200b\u5f15\u5165\u200b\u4e24\u4e2a\u200b\u677e\u5f1b\u200b\u53d8\u91cf\u200b\\(d^+, d^-\\)\uff0c\u200b\u5206\u522b\u200b\u8868\u793a\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u8d85\u51fa\u200b\u76ee\u6807\u503c\u200b\u7684\u200b\u90e8\u5206\u200b\u4e0e\u200b\u4e0d\u8db3\u200b\u76ee\u6807\u503c\u200b\u7684\u200b\u90e8\u5206\u200b\uff0c\u200b\u4e3a\u200b\u4fdd\u8bc1\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u8d85\u8fc7\u200b\u76ee\u6807\u503c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6309\u7167\u200b\u5982\u4e0b\u200b\u65b9\u5f0f\u200b\u5efa\u6a21\u200b\uff1a</p> \\[ \\begin{aligned}     &amp; \\max w = d^- \\\\     &amp; s.t. \\left\\{     \\begin{aligned}         &amp; c^Tx - d^+ + d^- = z_0 \\\\         &amp; AX \\leq b \\\\         &amp; X\\geq 0     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u200b\u7531\u6b64\u53ef\u89c1\u200b\uff0c\u200b\u76ee\u6807\u200b\u89c4\u5212\u200b\u76f8\u5f53\u4e8e\u200b\u5728\u200b\u7ebf\u6027\u89c4\u5212\u200b\u4e2d\u200b\u5f15\u5165\u200b\u4e00\u79cd\u200b\u65b0\u200b\u7684\u200b\u7ea6\u675f\u6761\u4ef6\u200b\uff0c\u200b\u5373\u200b\u76ee\u6807\u200b\u7ea6\u675f\u200b\u3002\u200b\u6bcf\u4e2a\u200b\u76ee\u6807\u200b\u7ea6\u675f\u200b\u90fd\u200b\u9700\u8981\u200b\u5f15\u5165\u200b\u4e00\u5bf9\u200b\u53d8\u91cf\u200b\\(d^+\\)\u200b\u4e0e\u200b\\(d^-\\)\u3002\u200b\u5982\u679c\u200b\u4f18\u5316\u200b\u95ee\u9898\u200b\u4e2d\u200b\u5b58\u5728\u200b\u591a\u4e2a\u200b\u76ee\u6807\u200b\u4e14\u200b\u4e4b\u95f4\u200b\u5b58\u5728\u200b\u4f18\u5148\u7ea7\u200b\u5173\u7cfb\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\\(P_i\\)\u200b\u4f5c\u4e3a\u200b\u9700\u8981\u200b\u4f18\u5316\u200b\u7684\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u7cfb\u6570\u200b\u3002\\(P_i\\)\u200b\u6ee1\u8db3\u200b\\(P_1 \\gg P_2 \\gg \\dots \\gg P_n\\)\u200b\u5e76\u4e14\u200b\u5404\u200b\\(P_i\\)\u200b\u4e3a\u200b\u8db3\u591f\u200b\u5927\u200b\u7684\u200b\u6b63\u6570\u200b\u3002</p> <p>\u200b\u76ee\u6807\u200b\u89c4\u5212\u200b\u7684\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u4e2d\u200b\u53ea\u6709\u200b\u504f\u5dee\u200b\u53d8\u91cf\u200b\uff0c\u200b\u76ee\u6807\u200b\u89c4\u5212\u200b\u7684\u200b\u4f18\u5316\u200b\u76ee\u6807\u200b\u662f\u200b\u6700\u5c0f\u5316\u200b\u504f\u5dee\u200b\u53d8\u91cf\u200b\u3002\u200b\u5982\u679c\u200b\u6700\u4f18\u200b\u6761\u4ef6\u200b\u4e0b\u200b\\(Z=0\\)\uff0c\u200b\u8bf4\u660e\u200b\u6240\u6709\u200b\u76ee\u6807\u200b\u53ef\u4ee5\u200b\u540c\u65f6\u200b\u6ee1\u8db3\u200b\u3002</p>"},{"location":"math/operating-research/chapter-3/#_2","title":"\u76ee\u6807\u200b\u89c4\u5212\u200b\u7684\u200b\u6c42\u89e3\u200b\u65b9\u6cd5","text":"<p>\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u56fe\u89e3\u6cd5\u200b\u6216\u200b\u5355\u7eaf\u5f62\u6cd5\u200b\u5bf9\u200b\u76ee\u6807\u200b\u89c4\u5212\u200b\u8fdb\u884c\u200b\u6c42\u89e3\u200b</p>"},{"location":"math/operating-research/chapter-3/#_3","title":"\u56fe\u89e3\u6cd5","text":"<p>\u200b\u4f7f\u7528\u200b\u56fe\u89e3\u6cd5\u200b\u6c42\u89e3\u200b\u76ee\u6807\u200b\u89c4\u5212\u200b\u65f6\u200b\uff0c\u200b\u9996\u5148\u200b\u9700\u8981\u200b\u753b\u51fa\u200b\u76ee\u6807\u200b\u7ea6\u675f\u200b\u4e2d\u200b\u7684\u200b\u786c\u200b\u7ea6\u675f\u200b\uff0c\u200b\u518d\u200b\u6309\u7167\u200b\u76ee\u6807\u200b\u7ea6\u675f\u200b\u7684\u200b\u4f18\u5148\u7ea7\u200b\u753b\u51fa\u200b\u8f6f\u200b\u7ea6\u675f\u200b\uff0c\u200b\u5e76\u200b\u6ce8\u660e\u200b\u7ea6\u675f\u200b\u504f\u5dee\u200b\u65b9\u5411\u200b\u3002\u200b\u6309\u7167\u200b\u7ea6\u675f\u200b\u7684\u200b\u4f18\u5148\u7ea7\u200b\u4f9d\u6b21\u200b\u5212\u5206\u200b\u80fd\u591f\u200b\u6ee1\u8db3\u200b\u7ea6\u675f\u200b\u7684\u200b\u53ef\u884c\u200b\u57df\u200b\u3002\u200b\u76f4\u5230\u200b\u53ef\u884c\u200b\u57df\u200b\u4e3a\u200b\u7a7a\u200b\u6216\u200b\u7ea6\u675f\u200b\u5168\u90e8\u200b\u6ee1\u8db3\u200b\u3002</p>"},{"location":"math/operating-research/chapter-3/#_4","title":"\u5355\u7eaf\u5f62\u6cd5","text":"<p>\u200b\u9996\u5148\u200b\u9700\u8981\u200b\u5c06\u200b\u5355\u7eaf\u5f62\u6cd5\u200b\u4e2d\u200b\u7684\u200b\u786c\u200b\u7ea6\u675f\u200b\u5316\u4e3a\u200b\u6807\u51c6\u578b\u200b\u3002\u200b\u5217\u51fa\u200b\u5355\u7eaf\u5f62\u200b\u8868\u540e\u200b\uff0c\u200b\u9010\u6b65\u200b\u5c06\u200b\u5305\u542b\u200b\u5728\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u4e2d\u200b\u7684\u200b\u504f\u5dee\u200b\u4ece\u200b\u57fa\u4e2d\u6362\u200b\u51fa\u200b\u3002\u200b\u5e76\u4e14\u200b\u5c3d\u53ef\u80fd\u200b\u4f7f\u5f97\u200b\u975e\u57fa\u200b\u53d8\u91cf\u200b\u7684\u200b\u68c0\u9a8c\u200b\u6570\u4e3a\u200b\u6b63\u200b\uff08\u200b\u56e0\u200b\u76ee\u6807\u200b\u89c4\u5212\u200b\u7684\u200b\u4f18\u5316\u200b\u65b9\u5411\u200b\u4e3a\u200b\u6700\u5c0f\u5316\u200b\uff09\u3002</p>"},{"location":"math/operating-research/chapter-4/","title":"\u6574\u6570\u200b\u89c4\u5212","text":"<p>\u200b\u6574\u6570\u200b\u89c4\u5212\u200b\u662f\u200b\u90e8\u5206\u200b\uff08\u200b\u6216\u200b\u5168\u90e8\u200b\uff09\u200b\u51b3\u7b56\u200b\u53d8\u91cf\u200b\u5747\u53d6\u200b\u6574\u6570\u200b\u7684\u200b\u7ebf\u6027\u89c4\u5212\u200b\u3002\u200b\u5168\u90e8\u200b\u51b3\u7b56\u200b\u53d8\u91cf\u200b\u5747\u53d6\u200b\u6574\u6570\u200b\u7684\u200b\u6574\u6570\u200b\u89c4\u5212\u200b\u79f0\u4e3a\u200b\u7eaf\u200b\u6574\u6570\u200b\u89c4\u5212\u200b\u3002\u200b\u5982\u679c\u200b\u6574\u6570\u200b\u53d8\u91cf\u200b\u53ea\u80fd\u200b\u53d6\u200b0-1\u200b\u4e24\u4e2a\u200b\u503c\u200b\uff0c\u200b\u5219\u200b\u79f0\u4e3a\u200b0-1\u200b\u6574\u6570\u200b\u89c4\u5212\u200b\u3002</p>"},{"location":"math/operating-research/chapter-4/#_2","title":"\u6574\u6570\u200b\u89c4\u5212\u200b\u7684\u200b\u6c42\u89e3\u200b\u65b9\u6cd5","text":"<p>\u200b\u6c42\u89e3\u200b\u6574\u6570\u200b\u89c4\u5212\u200b\u76ee\u524d\u200b\u6709\u200b\u5982\u4e0b\u200b\u7b97\u6cd5\u200b\uff1a</p> <ol> <li>\u200b\u5272\u200b\u5e73\u9762\u200b\u6cd5\u200b</li> <li>\u200b\u5206\u652f\u200b\u5b9a\u754c\u200b\u6cd5\u200b</li> <li>\u200b\u9690\u200b\u679a\u4e3e\u6cd5\u200b\uff08\u200b\u9002\u7528\u200b\u4e8e\u200b\u6c42\u89e3\u200b0-1\u200b\u6574\u6570\u200b\u89c4\u5212\u200b\uff09</li> <li>\u200b\u542f\u53d1\u5f0f\u200b\u7b97\u6cd5\u200b</li> </ol> <p>\u200b\u8003\u8651\u200b\u5982\u4e0b\u200b\u5f62\u5f0f\u200b\u7684\u200b\u7eaf\u200b\u6574\u6570\u200b\u89c4\u5212\u200b\u95ee\u9898\u200b\uff1a</p> \\[ \\begin{aligned}     &amp; \\max z=c^Tx \\\\     &amp; s.t. \\left\\{     \\begin{aligned}         &amp; AX \\leq b \\\\         &amp; X\\geq 0     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u200b\u5176\u4e2d\u200b\\(A, b, x\\)\u200b\u5747\u200b\u4e3a\u200b\u6574\u6570\u200b\u3002</p>"},{"location":"math/operating-research/chapter-4/#_3","title":"\u5272\u200b\u5e73\u9762\u200b\u6cd5","text":"<p>\u200b\u79f0\u200b\u6d88\u9664\u200b\u6574\u6570\u200b\u7ea6\u675f\u200b\u7684\u200b\u6574\u6570\u200b\u89c4\u5212\u200b\u4e3a\u200b\u677e\u5f1b\u200b\u95ee\u9898\u200b\uff0c\u200b\u5272\u200b\u5e73\u9762\u200b\u6cd5\u200b\u9996\u5148\u200b\u9700\u8981\u200b\u6c42\u89e3\u200b\u677e\u5f1b\u200b\u95ee\u9898\u200b\u7684\u200b\u6700\u4f18\u200b\u89e3\u200b\uff0c\u200b\u8bbe\u200b\u4e3a\u200b\\(X^*\\)\u3002\u200b\u901a\u5e38\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\\(X^*\\)\u200b\u4e0d\u662f\u200b\u6574\u6570\u200b\u6216\u200b\u4e0d\u5168\u662f\u200b\u6574\u6570\u200b\u3002\u200b\u5355\u7eaf\u5f62\u200b\u8868\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <p> </p> <p>\u200b\u8bbe\u200b\u5355\u7eaf\u5f62\u200b\u8868\u4e2d\u200b\u7684\u200b\u7b2c\u200b\\(i\\)\u200b\u884c\u200b\u5bf9\u5e94\u200b\u7684\u200b\\(b'_i\\)\u200b\u4e0d\u200b\u4e3a\u200b\u6574\u6570\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u8fd9\u200b\u4e00\u884c\u200b\uff0c\u200b\u6709\u200b\uff1a</p> \\[ x_i + \\sum_{j=m+1}^n a'_{ij}x_j = b'_i \\] <p>\u200b\u5c06\u200b\\(a'_{ij}, b'_i\\)\u200b\u5212\u5206\u200b\u4e3a\u200b\u6574\u6570\u200b\u90e8\u5206\u200b\u4e0e\u200b\u5c0f\u6570\u200b\u90e8\u5206\u200b\uff0c\u200b\u5373\u200b\uff1a</p> \\[ \\begin{aligned}     a'_{ij} &amp;= \\tilde a_{ij} + \\alpha_{ij}, \\; \\tilde a_{ij} = \\lfloor a'_{ij}\\rfloor \\\\     b'_{i} &amp;= \\tilde b_{i} + \\beta_{i}, \\; \\tilde b_{ij} = \\lfloor b'_{i}\\rfloor \\end{aligned} \\] <p>\u200b\u5c06\u200b\u8fd9\u200b\u4e00\u884c\u200b\u7b49\u5f0f\u200b\u53d8\u5f62\u200b\uff0c\u200b\u5f97\u5230\u200b\uff1a</p> \\[ \\beta_i - \\sum_{j=m+1}^n\\alpha_{ij}y_j = x_i - \\tilde b_i + \\sum_{j=m+1}^n \\tilde \\alpha_{ij}y_j \\] <p>\u200b\u6574\u6570\u200b\u89c4\u5212\u200b\u7684\u200b\u6761\u4ef6\u200b\u8981\u6c42\u200b\u7b49\u5f0f\u200b\u53f3\u4fa7\u200b\u4e3a\u200b\u6574\u6570\u200b\uff0c\u200b\u56e0\u6b64\u200b\u7b49\u5f0f\u200b\u5de6\u4fa7\u200b\u540c\u6837\u200b\u9700\u8981\u200b\u4e3a\u200b\u6574\u6570\u200b\uff0c\u200b\u5219\u200b\u6709\u200b\\(\\beta_i - \\sum_{j=m+1}^n\\alpha_{ij}y_j + s_i = 0\\)\uff0c\u200b\u5176\u4e2d\u200b\\(s_i\\)\u200b\u4e3a\u200b\u975e\u8d1f\u200b\u6574\u6570\u200b\u3002</p> <p>\u200b\u79f0\u200b\u65b9\u7a0b\u200b</p> \\[ \\beta_i - \\sum_{j=m+1}^n\\alpha_{ij}y_j + s_i = 0 \\] <p>\u200b\u4e3a\u200b\u5272\u200b\u5e73\u9762\u200b\u65b9\u7a0b\u200b\uff0c\u200b\u5272\u200b\u5e73\u9762\u200b\u65b9\u7a0b\u200b\u4f5c\u4e3a\u200b\u7ea6\u675f\u6761\u4ef6\u200b\uff0c\u200b\u6d88\u53bb\u200b\u4e86\u200b\u975e\u200b\u6574\u6570\u200b\u6700\u4f18\u200b\u89e3\u200b\uff0c\u200b\u7559\u4e0b\u200b\u6574\u6570\u200b\u89e3\u200b\u3002\u200b\u5411\u200b\u677e\u5f1b\u200b\u95ee\u9898\u200b\u7684\u200b\u6700\u4f18\u200b\u5355\u7eaf\u5f62\u200b\u8868\u4e2d\u200b\u52a0\u5165\u200b\u5272\u200b\u5e73\u9762\u200b\u65b9\u7a0b\u200b\u4f5c\u4e3a\u200b\u65b0\u200b\u7684\u200b\u7ea6\u675f\u6761\u4ef6\u200b\uff0c\u200b\u7ee7\u7eed\u200b\u6c42\u89e3\u200b\u7ebf\u6027\u89c4\u5212\u200b\u5373\u53ef\u200b\u5f97\u5230\u200b\u6574\u6570\u200b\u89c4\u5212\u200b\u7684\u200b\u6700\u4f18\u200b\u89e3\u200b\u3002</p>"},{"location":"math/operating-research/chapter-4/#_4","title":"\u5206\u652f\u200b\u5b9a\u754c\u200b\u6cd5","text":"<p>\u200b\u5148\u200b\u6c42\u89e3\u200b\u6574\u6570\u200b\u89c4\u5212\u200b\u5bf9\u5e94\u200b\u7684\u200b\u677e\u5f1b\u200b\u95ee\u9898\u200b\uff0c\u200b\u5e76\u200b\u4f30\u8ba1\u200b\u4e00\u4e2a\u200b\u975e\u200b\u6700\u4f18\u200b\u7684\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u503c\u200b\u4f5c\u4e3a\u200b\u8bb0\u5f55\u200b\u7684\u200b\u6700\u4f18\u200b\u503c\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u6700\u4f18\u200b\u89e3\u4e2d\u200b\u7684\u200b\u975e\u200b\u6574\u6570\u200b\u51b3\u7b56\u200b\u53d8\u91cf\u200b\uff0c\u200b\u9009\u62e9\u200b\u5176\u4e2d\u200b\u4e00\u4e2a\u200b\\(x_i\\)\u200b\u8fdb\u884c\u200b\u5206\u652f\u200b\uff1a</p> <ol> <li>\u200b\u6dfb\u52a0\u200b\u7ea6\u675f\u200b\\(x'_i \\leq \\lfloor x_i \\rfloor\\)</li> <li>\u200b\u6dfb\u52a0\u200b\u7ea6\u675f\u200b\\(x'_i \\geq \\lceil x_i \\rceil\\)</li> </ol> <p>\u200b\u6dfb\u52a0\u200b\u7ea6\u675f\u200b\u540e\u200b\u91cd\u65b0\u200b\u6c42\u89e3\u200b\u7ebf\u6027\u89c4\u5212\u200b\uff0c\u200b\u5982\u679c\u200b\u7ebf\u6027\u89c4\u5212\u200b\u7684\u200b\u89e3\u200b\u6ee1\u8db3\u200b\u6574\u6570\u200b\u7ea6\u675f\u200b\uff0c\u200b\u5219\u200b\u5c06\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u503c\u200b\u4e0e\u200b\u8bb0\u5f55\u200b\u7684\u200b\u6700\u4f18\u200b\u503c\u76f8\u200b\u6bd4\u8f83\u200b\u3002\u200b\u5982\u679c\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u66f4\u4f18\u200b\uff0c\u200b\u5219\u200b\u66f4\u65b0\u200b\u6700\u4f18\u200b\u503c\u200b\uff0c\u200b\u5426\u5219\u200b\u505c\u6b62\u200b\u5411\u4e0b\u200b\u63a2\u7d22\u200b\uff08\u200b\u526a\u679d\u200b\uff09\u3002</p> <p>\u200b\u5206\u652f\u200b\u53ef\u4ee5\u200b\u91c7\u53d6\u200b\u6df1\u5ea6\u200b\u4f18\u5148\u200b\u641c\u7d22\u200b\u6216\u200b\u5e7f\u5ea6\u200b\u4f18\u5148\u200b\u641c\u7d22\u200b\u3002</p>"},{"location":"math/operating-research/chapter-4/#_5","title":"\u9690\u200b\u679a\u4e3e\u6cd5","text":"<p>\u200b\u8003\u8651\u200b\u5982\u4e0b\u200b\u5f62\u5f0f\u200b\u7684\u200b0-1\u200b\u6574\u6570\u200b\u89c4\u5212\u200b\uff1a</p> \\[ \\begin{aligned}     &amp; \\max z=c^Tx \\\\     &amp; s.t. \\left\\{     \\begin{aligned}         &amp; AX \\leq b \\\\         &amp; x_i \\in \\{0, 1\\}     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u200b\u9996\u5148\u200b\u8bd5\u63a2\u200b\u51fa\u200b\u4e00\u4e2a\u200b\u53ef\u884c\u200b\u89e3\u200b\uff0c\u200b\u5bf9\u5e94\u200b\u7684\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u503c\u200b\u4f5c\u4e3a\u200b\u8bb0\u5f55\u200b\u7684\u200b\u6700\u4f18\u200b\u503c\u200b\\(Z_0\\)\uff0c\u200b\u518d\u200b\u679a\u4e3e\u200b\u6240\u6709\u200b\u7684\u200b\u53ef\u884c\u200b\u89e3\u200b\uff0c\u200b\u82e5\u89e3\u200b\u7684\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u503c\u200b\u8d85\u8fc7\u200b\u6700\u4f18\u200b\u503c\u5219\u200b\u66f4\u65b0\u200b\u6700\u4f18\u200b\u503c\u200b\u3002</p>"},{"location":"math/operating-research/chapter-4/#_6","title":"\u6307\u6d3e\u200b\u95ee\u9898","text":"<p>\u200b\u6307\u6d3e\u200b\u95ee\u9898\u200b\u662f\u200b\u7279\u6b8a\u200b\u7684\u200b0-1\u200b\u6574\u6570\u200b\u89c4\u5212\u200b\u95ee\u9898\u200b\uff0c\u200b\u5176\u200b\u76ee\u6807\u200b\u662f\u200b\u5c06\u200b\\(n\\)\u200b\u4e2a\u200b\u5de5\u4eba\u200b\u5728\u200b\\(n\\)\u200b\u4e2a\u200b\u5de5\u4f5c\u200b\u4e2d\u200b\u5206\u914d\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5de5\u4eba\u200b\\(i\\)\u200b\u5728\u200b\u8fdb\u884c\u200b\u5de5\u4f5c\u200b\\(j\\)\u200b\u65f6\u200b\uff0c\u200b\u90fd\u200b\u4f1a\u200b\u4ea7\u751f\u200b\u6210\u672c\u200b\\(c_{ij}\\)\uff0c\u200b\u51b3\u7b56\u95ee\u9898\u200b\u7684\u200b\u76ee\u6807\u200b\u662f\u200b\u6700\u5c0f\u5316\u200b\u603b\u6210\u672c\u200b\u3002\u200b\u8bb0\u200b\u6210\u672c\u200b\u77e9\u9635\u200b\u4e3a\u200b</p> \\[ A = \\begin{bmatrix}     c_{11} &amp; c_{12} &amp; \\cdots &amp; c_{1n} \\\\     c_{21} &amp; c_{22} &amp; \\cdots &amp; c_{2n} \\\\     \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\     c_{n1} &amp; c_{n2} &amp; \\cdots &amp; c_{nn} \\end{bmatrix} \\] <p>\u200b\u6027\u8d28\u200b</p> <p>\u200b\u82e5\u200b\u7cfb\u6570\u200b\u77e9\u9635\u200b\\(A\\)\u200b\u7684\u200b\u67d0\u200b\u4e00\u884c\u200b\u6216\u200b\u67d0\u200b\u4e00\u5217\u200b\u51cf\u53bb\u200b\u5206\u522b\u200b\u51cf\u53bb\u200b\u4e00\u4e2a\u200b\u5e38\u6570\u200b\\(k\\)\uff0c\u200b\u4e0d\u200b\u5f71\u54cd\u200b\u6307\u6d3e\u200b\u95ee\u9898\u200b\u7684\u200b\u89e3\u200b\u3002</p> <p>\u200b\u4f7f\u7528\u200b\u5308\u7259\u5229\u200b\u7b97\u6cd5\u200b\u6c42\u89e3\u200b\u6574\u6570\u200b\u89c4\u5212\u200b\u95ee\u9898\u200b\u3002\u200b\u9996\u5148\u200b\u5bf9\u200b\u7cfb\u6570\u200b\u77e9\u9635\u200b\u5148\u200b\u51cf\u53bb\u200b\u6bcf\u884c\u200b\u7684\u200b\u6700\u5c0f\u503c\u200b\uff0c\u200b\u518d\u200b\u51cf\u53bb\u200b\u6bcf\u5217\u200b\u7684\u200b\u6700\u5c0f\u503c\u200b\u3002\u200b\u4ece\u800c\u200b\u6bcf\u884c\u200b\u3001\u200b\u6bcf\u5217\u200b\u4e2d\u200b\u81f3\u5c11\u200b\u51fa\u73b0\u200b\u4e00\u4e2a\u96f6\u200b\u3002\u200b\u5b9a\u4e49\u200b\u201c\u200b\u72ec\u7acb\u200b\u96f6\u200b\u201d\u200b\u4e3a\u200b\u7cfb\u6570\u200b\u77e9\u9635\u200b\u4e2d\u200b\u65e2\u200b\u4e0d\u200b\u5904\u4e8e\u200b\u540c\u4e00\u200b\u884c\u200b\u3001\u200b\u4e5f\u200b\u4e0d\u200b\u5904\u4e8e\u200b\u540c\u4e00\u200b\u5217\u200b\u7684\u200b\\(0\\)\u200b\u7684\u200b\u6700\u5927\u200b\u4e2a\u6570\u200b\u3002</p> <ol> <li>\u200b\u82e5\u200b\u201c\u200b\u72ec\u7acb\u200b\u96f6\u200b\u201d\u200b\u7684\u200b\u4e2a\u6570\u200b\u7b49\u4e8e\u200b\u65b9\u9635\u200b\u7684\u200b\u7ef4\u5ea6\u200b\uff0c\u200b\u5219\u200b\u5f97\u5230\u200b\u6307\u6d3e\u200b\u95ee\u9898\u200b\u7684\u200b\u6700\u4f18\u200b\u89e3\u200b\uff0c\u200b\u6700\u4f18\u200b\u89e3\u200b\u7684\u200b\u6307\u6d3e\u200b\u65b9\u6848\u200b\u4e0e\u200b\u72ec\u7acb\u200b\u96f6\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u5206\u5e03\u200b\u76f8\u540c\u200b\u3002</li> <li>\u200b\u82e5\u200b\u201c\u200b\u72ec\u7acb\u200b\u96f6\u200b\u201d\u200b\u7684\u200b\u4e2a\u6570\u200b\u5c0f\u4e8e\u200b\u65b9\u9635\u200b\u7684\u200b\u7ef4\u5ea6\u200b\u3002\u200b\u9996\u5148\u200b\u627e\u51fa\u200b\u65b9\u9635\u200b\u4e2d\u200b\u80fd\u591f\u200b\u8986\u76d6\u200b\u6240\u6709\u200b\u96f6\u200b\u5143\u7d20\u200b\u7684\u200b\u6700\u5c11\u200b\u76f4\u7ebf\u200b\u6570\u200b\u3002\u200b\u5728\u200b\u4e0d\u200b\u88ab\u200b\u76f4\u7ebf\u200b\u8986\u76d6\u200b\u7684\u200b\u5143\u7d20\u200b\u4e2d\u200b\u5bfb\u627e\u200b\u6700\u5c0f\u503c\u200b\uff0c\u200b\u5c06\u200b\u6240\u5728\u200b\u884c\u6216\u5217\u200b\u51cf\u53bb\u200b\u8fd9\u4e2a\u200b\u6700\u5c0f\u503c\u200b\u3002\u200b\u7136\u540e\u200b\u5bf9\u200b\u4ea7\u751f\u200b\u7684\u200b\u8d1f\u503c\u200b\u8fdb\u884c\u200b\u8c03\u6574\u200b\uff0c\u200b\u76f4\u5230\u200b\u77e9\u9635\u200b\u4e2d\u200b\u4e0d\u200b\u5b58\u5728\u200b\u8d1f\u503c\u200b\u3002\u200b\u7ed3\u675f\u200b\u540e\u200b\u7ee7\u7eed\u200b\u68c0\u67e5\u200b\u72ec\u7acb\u200b\u96f6\u200b\u7684\u200b\u4e2a\u6570\u200b\u3002</li> </ol>"},{"location":"math/operations-mamagement/","title":"\u9ad8\u7b49\u200b\u8fd0\u4f5c\u200b\u7ba1\u7406","text":"<ul> <li>\u200b\u9884\u6d4b\u200b\u6280\u672f\u200b</li> <li>\u200b\u9884\u6d4b\u200b\u4e0e\u200b\u9700\u6c42\u200b\u5efa\u6a21\u200b</li> <li>\u200b\u7efc\u5408\u200b\u751f\u4ea7\u200b\u8ba1\u5212\u200b</li> <li>\u200b\u786e\u5b9a\u200b\u9700\u6c42\u200b\u4e0b\u200b\u7684\u200b\u5e93\u5b58\u200b\u63a7\u5236\u200b</li> <li>\u200b\u968f\u673a\u200b\u9700\u6c42\u200b\u4e0b\u200b\u7684\u200b\u5e93\u5b58\u200b\u63a7\u5236\u200b</li> </ul>"},{"location":"math/operations-mamagement/#todo","title":"TODO","text":"<ul> <li> \u200b\u5468\u671f\u200b\u68c0\u67e5\u200b\u6a21\u578b\u200b\u2014\u2014\\((s, S)\\)\u200b\u7b56\u7565\u200b</li> <li> \u200b\u591a\u7ea7\u200b\u7cfb\u7edf\u200b\u4e0e\u200b\u534f\u8c03\u200b\u8ba2\u8d27\u200b</li> </ul>"},{"location":"math/operations-mamagement/aggregrate-planning/","title":"\u7efc\u5408\u200b\u751f\u4ea7\u200b\u8ba1\u5212","text":""},{"location":"math/operations-mamagement/aggregrate-planning/#_2","title":"\u6a21\u578b\u200b\u8bbe\u5b9a","text":"<p>\u200b\u6a21\u578b\u200b\u4e2d\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u4f01\u4e1a\u200b\uff0c\u200b\u4f01\u4e1a\u200b\u901a\u8fc7\u200b\u96c7\u4f63\u5de5\u4eba\u200b\u751f\u4ea7\u200b\u5e76\u200b\u9500\u552e\u200b\u4ea7\u54c1\u200b\u4f5c\u4e3a\u200b\u6536\u5165\u200b\u3002\u200b\u76f8\u5173\u200b\u7684\u200b\u53c2\u6570\u200b\u5982\u4e0b\u200b\uff1a</p> <ul> <li>\u200b\u6210\u672c\u200b\u53c2\u6570\u200b</li> <li>\u200b\u5e93\u5b58\u200b\u76f8\u5173\u200b\uff1a\u200b\u539f\u6750\u6599\u200b\u6210\u672c\u200b\u3001\u200b\u6301\u6709\u200b\u6210\u672c\u200b\u3001\u200b\u7f3a\u8d27\u200b\u6210\u672c\u200b</li> <li>\u200b\u4eba\u5458\u200b\u76f8\u5173\u200b\uff1a\u200b\u96c7\u4f63\u200b\u6210\u672c\u200b\u3001\u200b\u89e3\u96c7\u200b\u6210\u672c\u200b\u3001\u200b\u5de5\u65f6\u200b\u6210\u672c\u200b\u3001\u200b\u95f2\u7f6e\u200b\u6210\u672c\u200b\u4e0e\u200b\u52a0\u73ed\u200b\u6210\u672c\u200b</li> <li>\u200b\u751f\u4ea7\u529b\u200b\u76f8\u5173\u200b\uff1a\u200b\u8f6c\u5305\u200b\u6210\u672c\u200b</li> <li>\u200b\u6536\u76ca\u200b\u53c2\u6570\u200b\uff1a\u200b\u5355\u4f4d\u200b\u4ea7\u54c1\u200b\u552e\u4ef7\u200b</li> <li>\u200b\u751f\u4ea7\u200b\u53c2\u6570\u200b</li> <li>\u200b\u5355\u4f4d\u200b\u4ea7\u54c1\u200b\u751f\u4ea7\u200b\u5de5\u65f6\u200b</li> <li>\u200b\u65e5\u5e38\u200b\u5de5\u4f5c\u200b\u5de5\u65f6\u200b</li> <li>\u200b\u5e93\u5b58\u200b\u53c2\u6570\u200b</li> <li>\u200b\u671f\u521d\u200b\u5b58\u91cf\u200b\u4e0e\u200b\u671f\u672b\u200b\u5b58\u91cf\u200b</li> <li>\u200b\u9700\u6c42\u91cf\u200b</li> </ul> \u200b\u53d8\u91cf\u200b \u200b\u8bf4\u660e\u200b \u200b\u53d8\u91cf\u200b \u200b\u8bf4\u660e\u200b \\(c_F\\) \u200b\u89e3\u96c7\u200b\u6210\u672c\u200b \\(c_H\\) \u200b\u96c7\u4f63\u200b\u6210\u672c\u200b \\(c_I\\) \u200b\u6301\u6709\u200b\u6210\u672c\u200b \\(c_P\\) \u200b\u7f3a\u8d27\u200b\u6210\u672c\u200b \\(c_R\\) \u200b\u65e5\u5e38\u200b\u751f\u4ea7\u6210\u672c\u200b \\(c_O\\) \u200b\u52a0\u73ed\u200b\u751f\u4ea7\u6210\u672c\u200b \\(c_S\\) \u200b\u8f6c\u5305\u200b\u6210\u672c\u200b \\(c_U\\) \u200b\u751f\u4ea7\u529b\u200b\u7684\u200b\u95f2\u7f6e\u200b\u6210\u672c\u200b \\(D_t\\) \\(t\\)\u200b\u5468\u671f\u200b\u7684\u200b\u9700\u6c42\u200b \\(n_t\\) \\(t\\)\u200b\u5468\u671f\u200b\u7684\u200b\u5de5\u200b\u65f6\u6570\u200b \\(F_t\\) \\(t\\)\u200b\u5468\u671f\u200b\u7684\u200b\u89e3\u96c7\u200b\u4eba\u6570\u200b \\(H_t\\) \\(t\\)\u200b\u5468\u671f\u200b\u7684\u200b\u96c7\u4f63\u200b\u4eba\u6570\u200b \\(K\\) \u200b\u5355\u4f4d\u200b\u5de5\u65f6\u200b\u4ea7\u91cf\u200b \\(W_t\\) \\(t\\)\u200b\u5468\u671f\u200b\u7684\u200b\u5458\u5de5\u200b\u4eba\u6570\u200b \\(P_t\\) \\(t\\)\u200b\u5468\u671f\u200b\u7684\u200b\u603b\u5de5\u200b\u65f6\u200b \\(O_t\\) \\(t\\)\u200b\u5468\u671f\u200b\u7684\u200b\u603b\u200b\u52a0\u73ed\u200b\u5de5\u65f6\u200b \\(U_t\\) \\(t\\)\u200b\u5468\u671f\u200b\u7684\u200b\u603b\u200b\u95f2\u7f6e\u200b\u5de5\u65f6\u200b \\(S_t\\) \\(t\\)\u200b\u5468\u671f\u200b\u7684\u200b\u5916\u5305\u200b\u4ea7\u91cf\u200b \\(I_t^+\\) \\(t\\)\u200b\u5468\u671f\u200b\u7684\u200b\u591a\u4f59\u200b\u5e93\u5b58\u200b \\(I_t^-\\) \\(t\\)\u200b\u5468\u671f\u200b\u7684\u200b\u7f3a\u8d27\u200b\u6c34\u5e73\u200b <p>\u200b\u4e0a\u8868\u200b\u4e2d\u200b\\(I_t^\\pm, W_t\\)\u200b\u5206\u522b\u200b\u6307\u7b2c\u200b\\(t\\)\u200b\u4e2a\u200b\u5468\u671f\u200b\u7ed3\u675f\u200b\u65f6\u200b\u7684\u200b\u6570\u503c\u200b\u3002\u200b\u7279\u522b\u200b\u5730\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u521d\u59cb\u72b6\u6001\u200b\uff0c\u200b\u6709\u200b</p> <ul> <li>\\(I_0\\)\u200b\u4e3a\u200b\u521d\u59cb\u200b\u5e93\u5b58\u200b</li> <li>\\(W_0\\)\u200b\u4e3a\u200b\u521d\u59cb\u200b\u5458\u5de5\u200b\u6570\u200b</li> </ul>"},{"location":"math/operations-mamagement/aggregrate-planning/#_3","title":"\u7b56\u7565\u200b\u5206\u7c7b","text":"<p>\u200b\u6839\u636e\u200b\u4e0d\u540c\u200b\u7684\u200b\u6210\u672c\u200b\u7b56\u7565\u200b\u4e0e\u200b\u98ce\u9669\u200b\u504f\u597d\u200b\uff0c\u200b\u7efc\u5408\u200b\u8ba1\u5212\u200b\u7c7b\u578b\u200b\u53ef\u4ee5\u200b\u5206\u4e3a\u200b\u591a\u79cd\u4e0d\u540c\u200b\u7684\u200b\u8ba1\u5212\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5982\u200b\uff1a</p> <ol> <li>\u200b\u8ffd\u9010\u200b\u7b56\u7565\u200b\uff08\u200b\u6700\u5c0f\u5316\u200b\u5e93\u5b58\u200b\uff09</li> <li>\u200b\u5e73\u7a33\u200b\u7b56\u7565\u200b\uff08\u200b\u6700\u5c0f\u5316\u200b\u5458\u5de5\u200b\u7684\u200b\u53d8\u52a8\u200b\uff09</li> <li>\u200b\u5f39\u6027\u200b\u5de5\u4f5c\u200b\u65f6\u95f4\u200b\u7b56\u7565\u200b</li> <li>\u200b\u6df7\u5408\u7b56\u7565\u200b</li> </ol>"},{"location":"math/operations-mamagement/aggregrate-planning/#_4","title":"\u6c42\u89e3\u200b\uff1a\u200b\u7ebf\u6027\u89c4\u5212","text":"<p>\u200b\u5bf9\u4e8e\u200b\u5e93\u5b58\u200b\uff0c\u200b\u6709\u200b\u5982\u4e0b\u200b\u7ea6\u675f\u200b\uff1a</p> \\[ \\begin{aligned}     I_t &amp;= I_t^+ - I_t^- \\\\     I_t &amp;= I_{t-1} + P_t + S_t - D_t \\end{aligned} \\] <p>\u200b\u5bf9\u4e8e\u200b\u5458\u5de5\u200b\u7684\u200b\u96c7\u4f63\u200b\u4e0e\u200b\u89e3\u96c7\u200b\uff0c\u200b\u6709\u200b\u5982\u4e0b\u200b\u7ea6\u675f\u200b\uff1a</p> \\[ \\begin{aligned}     W_t &amp;= W_{t-1} + H_t - F_t \\\\     0 &amp;= H_t\\cdot F_t \\end{aligned} \\] <p>\u200b\u5bf9\u4e8e\u200b\u5458\u5de5\u200b\u7684\u200b\u751f\u4ea7\u200b\u5de5\u65f6\u200b\uff0c\u200b\u6709\u200b\u5982\u4e0b\u200b\u7ea6\u675f\u200b\uff1a</p> \\[ \\begin{aligned}     P_t &amp;= Kn_t W_t + O_t - U_t \\\\     0 &amp;= O_t \\cdot U_t \\end{aligned} \\] <p>\u200b\u7ebf\u6027\u89c4\u5212\u200b\u7684\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\u4e3a\u200b\u6700\u5c0f\u5316\u200b\u5404\u9879\u200b\u6210\u672c\u200b\u3002</p>"},{"location":"math/operations-mamagement/fdm/","title":"\u9884\u6d4b\u200b\u4e0e\u200b\u9700\u6c42\u200b\u5efa\u6a21","text":"<p>\u200b\u7ecf\u5178\u200b\u6a21\u578b\u200b\uff08\u200b\u5982\u200b\u6ed1\u52a8\u200b\u5e73\u5747\u200b\u3001\u200b\u6307\u6570\u200b\u5e73\u6ed1\u200b\u7b49\u200b\uff09\u200b\u7684\u200b\u7f3a\u9677\u200b\u5728\u4e8e\u200b\uff1a</p> <ul> <li>\u200b\u7ecf\u5178\u200b\u6a21\u578b\u200b\u6301\u7eed\u200b\u4f9d\u8d56\u4e8e\u200b\u5386\u53f2\u200b\u89c2\u6d4b\u200b\u6570\u636e\u200b</li> <li>\u200b\u90e8\u5206\u200b\u6a21\u578b\u200b\uff08\u200b\u5982\u200b\u6ed1\u52a8\u200b\u5e73\u5747\u200b\uff09\u200b\u4ec5\u200b\u9002\u7528\u200b\u4e8e\u200b\u5e73\u7a33\u200b\u5e8f\u5217\u200b</li> <li>\u200b\u4ea7\u54c1\u200b\u7684\u200b\u751f\u547d\u5468\u671f\u200b\u4e0d\u540c\u200b\uff0c\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u4ea7\u54c1\u200b\u7684\u200b\u751f\u547d\u5468\u671f\u200b\u660e\u663e\u200b\u8f83\u200b\u77ed\u200b\uff0c\u200b\u610f\u5473\u7740\u200b\u6ca1\u6709\u200b\u5145\u8db3\u200b\u7684\u200b\u5386\u53f2\u6570\u636e\u200b\u5bf9\u200b\u8be5\u200b\u4ea7\u54c1\u200b\u8fdb\u884c\u200b\u9884\u6d4b\u200b\u3002</li> </ul> <p>\u200b\u672c\u7ae0\u200b\u8ba8\u8bba\u200b\u5982\u4e0b\u200b\u6a21\u578b\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u6a21\u578b\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u9884\u6d4b\u200b\u751f\u547d\u5468\u671f\u200b\u8f83\u200b\u77ed\u200b\u7684\u200b\u4ea7\u54c1\u200b\u3002</p> <ul> <li>Bass\u200b\u6269\u6563\u200b\u6a21\u578b\u200b</li> <li>\u200b\u9886\u5148\u200b\u6307\u6807\u200b\u6a21\u578b\u200b</li> <li>\u200b\u9009\u62e9\u200b\u6a21\u578b\u200b</li> </ul>"},{"location":"math/operations-mamagement/fdm/#bass","title":"Bass\u200b\u6269\u6563\u200b\u6a21\u578b","text":"<p>Bass\u200b\u6a21\u578b\u200b\u63d0\u51fa\u200b\u4e86\u200b\u6269\u6563\u200b\u8fc7\u7a0b\u200b\u7684\u200b\u6982\u5ff5\u200b\u3002\uff08\u200b\u67d0\u200b\u4e00\u7c7b\u200b\uff09\u200b\u65b0\u200b\u4ea7\u54c1\u200b\u9996\u6b21\u200b\u4e0a\u5e02\u200b\u540e\u200b\uff0c\u200b\u8be5\u200b\u4ea7\u54c1\u200b\u7684\u200b\u8bbe\u8ba1\u200b\u7406\u5ff5\u200b\u7b49\u200b\u5185\u5bb9\u200b\u4f1a\u200b\u5728\u200b\u5e02\u573a\u200b\u4e0a\u200b\u6269\u6563\u200b\uff08\u200b\u88ab\u200b\u6a21\u4eff\u200b\uff09\uff0c\u200b\u9020\u6210\u200b\u540c\u7c7b\u4ea7\u54c1\u200b\u7684\u200b\u4ea7\u91cf\u200b\u4e0a\u5347\u200b\u3002</p> <p>\u200b\u524d\u63d0\u200b\u5047\u8bbe\u200b\uff1a</p> <ul> <li>\u200b\u5e02\u573a\u200b\u4e0a\u200b\u7684\u200b\u7528\u6237\u6570\u91cf\u200b\u4e0d\u53d8\u200b</li> <li>\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u7b80\u5355\u200b\u5206\u4e3a\u200b\u521b\u65b0\u8005\u200b\u4e0e\u200b\u6a21\u4eff\u8005\u200b</li> <li>\u200b\u521b\u65b0\u8005\u200b\u8d2d\u4e70\u200b\u4ea7\u54c1\u200b\u7684\u200b\u51b3\u7b56\u200b\u4e0d\u200b\u53d7\u5230\u200b\u5176\u4ed6\u200b\u4e2a\u4f53\u200b\u7684\u200b\u5f71\u54cd\u200b</li> <li>\u200b\u6a21\u4eff\u8005\u200b\u8d2d\u4e70\u200b\u4ea7\u54c1\u200b\u7684\u200b\u51b3\u7b56\u200b\u53d7\u5230\u200b\u5176\u4ed6\u200b\u4e2a\u4f53\u200b\u7684\u200b\u5f71\u54cd\u200b\uff0c\u200b\u8fd9\u79cd\u200b\u5f71\u54cd\u200b\u65b9\u5f0f\u200b\u901a\u8fc7\u200b\u4e2a\u4f53\u200b\u95f4\u200b\u7684\u200b\u4ea4\u6d41\u200b\u5b9e\u73b0\u200b</li> </ul> <p>\u200b\u5b9a\u4e49\u200b\uff1a\\(P(t)\\)\u200b\u4e3a\u200b\u5e02\u573a\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u987e\u5ba2\u200b\u5728\u200b\\(t\\)\u200b\u65f6\u523b\u200b\u4f5c\u51fa\u200b\u8d2d\u4e70\u51b3\u7b56\u200b\u7684\u200b\u6982\u7387\u200b</p> \\[ P(t) = p + \\frac{q}{m} D(t) \\] <ul> <li>\\(p\\)\u200b\u4e3a\u200b\u521b\u65b0\u200b\u7cfb\u6570\u200b</li> <li>\\(q\\)\u200b\u4e3a\u200b\u6a21\u4eff\u200b\u7cfb\u6570\u200b\uff0c\\(p\\ll q\\)</li> <li>\\(m\\)\u200b\u4e3a\u200b\u6d88\u8d39\u8005\u200b\u7684\u200b\u603b\u91cf\u200b\uff0c\u200b\u4e5f\u200b\u5373\u200b\u5e02\u573a\u200b\u89c4\u6a21\u200b\uff0c\u200b\u5e38\u6570\u200b</li> <li>\\(D(t)\\)\u200b\u4e3a\u200b\u65f6\u95f4\u200b\u4ece\u200b\\(0\\)\u200b\u5230\u200b\\(t\\)\u200b\u7684\u200b\u7d2f\u79ef\u200b\u8d2d\u4e70\u91cf\u200b</li> </ul> <p>\u200b\u5373\u200b\uff0c\u200b\u5e02\u573a\u200b\u4e0a\u200b\u7684\u200b\u7d2f\u8ba1\u200b\u9700\u6c42\u200b\\(D(t)\\)\u200b\u8d8a\u5927\u200b\uff0c\u200b\u6d88\u8d39\u8005\u200b\u8d8a\u200b\u5bb9\u6613\u200b\u4f5c\u51fa\u200b\u8d2d\u4e70\u51b3\u7b56\u200b\u3002</p> <p>\u200b\u4e0d\u59a8\u200b\u8bbe\u200b\\(d(t) = \\frac{\\mathrm dD}{\\mathrm dt}\\)\uff0c\u200b\u5373\u200b\\(t\\)\u200b\u65f6\u523b\u200b\u5e02\u573a\u200b\u4e0a\u200b\u8d2d\u4e70\u200b\u4eba\u6570\u200b\uff0c\u200b\u6839\u636e\u200b\\(P(t)\\)\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u6709\u200b\uff1a</p> \\[ P(t) = \\frac{d(t)}{m - D(t)} \\] <p>\u200b\u8054\u7acb\u200b\u4e8c\u200b\u5f0f\u200b\uff0c\u200b\u5f97\u5230\u200b\uff1a</p> \\[ \\begin{aligned} p + \\frac{q}{m} D(t) &amp;= \\frac{d(t)}{m - D(t)} \\\\ d(t) &amp;= (m-D(t))\\left(p + \\frac qmD(t)\\right) \\\\ d(t) &amp;= -\\frac qmD^2(t) + (q-p)D(t) + pm \\end{aligned} \\] <p>\u200b\u89e3\u200b\u5fae\u5206\u65b9\u7a0b\u200b\\(\\frac{\\mathrm dD}{\\mathrm dt} = -\\frac qmD^2 + (q-p)D + pm\\)\uff0c\u200b\u5f97\u200b\\(D(t)\\)\uff1a</p> \\[ \\boxed{\\begin{aligned}D(t) &amp;= m\\frac{1-e^{-(p+q)t}}{1+\\frac qp e^{-(p+q)t}} \\\\ d(t) &amp;= m\\frac{p(p+q)^2e^{-(p+q)t}}{\\left(p+qe^{-(p+q)t}\\right)^2}\\end{aligned}} \\] <p>\u200b\u5bf9\u200b\\(d(t)\\)\u200b\u8fdb\u4e00\u6b65\u200b\u6c42\u5bfc\u200b\uff0c\u200b\u5f97\u5f53\u200b\u4e14\u200b\u4ec5\u200b\u5f53\u200b\\(t = \\frac{1}{p+q}\\log \\frac{q}{p}\\)\u200b\u65f6\u200b\uff0c\\(d(t)\\)\u200b\u53d6\u5f97\u200b\u6700\u5927\u503c\u200b\u3002</p> <p>\u200b\u6b64\u65f6\u200b\uff1a</p> \\[ \\boxed{\\begin{aligned}d(t) &amp;= \\frac{m(p+q)^2}{4q} \\\\ D(t) &amp;= \\frac{m(q-p)}{2q}\\end{aligned}} \\] <p>\u200b\u7ed3\u679c\u200b\u8bf4\u660e\u200b\uff1a</p> <ul> <li>\u200b\u5f53\u200b\\(p\\)\u200b\u5f88\u200b\u5c0f\u65f6\u200b\uff0c\u200b\u610f\u5473\u7740\u200b\u9500\u552e\u91cf\u200b\u7684\u200b\u589e\u957f\u200b\u7f13\u6162\u200b</li> <li>\u200b\u5f53\u200b\\(p, q\\)\u200b\u5f88\u5927\u200b\u65f6\u200b\uff0c\u200b\u610f\u5473\u7740\u200b\u9500\u552e\u91cf\u200b\u7684\u200b\u589e\u957f\u200b\u4e0e\u200b\u4e0b\u8dcc\u200b\u5747\u200b\u8fc5\u901f\u200b</li> <li>\u200b\u4ec5\u5f53\u200b\\(q&gt;p\\)\u200b\u65f6\u200b\uff0c\u200b\u4e0a\u5f0f\u200b\u624d\u200b\u6709\u200b\u610f\u4e49\u200b\uff0c\u200b\u5426\u5219\u200b\u610f\u5473\u7740\u200b\u9500\u552e\u91cf\u200b\u6301\u7eed\u200b\u4e0b\u8dcc\u200b</li> </ul>"},{"location":"math/operations-mamagement/forecast/","title":"\u9884\u6d4b\u200b\u6280\u672f","text":"<p>\u200b\u5e38\u89c1\u200b\u7684\u200b\u5ba2\u89c2\u200b\u9884\u6d4b\u200b\u65b9\u6cd5\u200b\u6709\u200b\u56e0\u679c\u200b\u6a21\u578b\u200b\u4e0e\u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b\u65b9\u6cd5\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u65b9\u6cd5\u200b\u7684\u200b\u524d\u63d0\u200b\u5047\u8bbe\u200b\u662f\u200b\u8fc7\u53bb\u200b\u7684\u200b\u53d8\u91cf\u200b\u53ca\u5176\u200b\u76f8\u4e92\u4f5c\u7528\u200b\u5173\u7cfb\u200b\u5728\u200b\u672a\u6765\u200b\u5c06\u200b\u7ee7\u7eed\u200b\u5b58\u5728\u200b\u5e76\u200b\u53d1\u6325\u4f5c\u7528\u200b\u3002</p>"},{"location":"math/operations-mamagement/forecast/#_2","title":"\u56e0\u679c\u200b\u6a21\u578b","text":"<p>\u200b\u56e0\u679c\u200b\u6a21\u578b\u200b\u5373\u200b\u627e\u5230\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u4f7f\u7528\u200b\u4e0e\u200b\u9884\u6d4b\u200b\u53d8\u91cf\u200b\u76f8\u5173\u200b\u7684\u200b\u5176\u4ed6\u200b\u53d8\u91cf\u200b\u8fdb\u884c\u200b\u9884\u6d4b\u200b\u3002</p> \\[ y = f(X_1, \\dots, X_n) \\] <p>\u200b\u5176\u4e2d\u200b\\(X_1, \\dots, X_n\\)\u200b\u662f\u200b\u4e0e\u200b\\(y\\)\u200b\u76f8\u5173\u200b\u7684\u200b\u5176\u4ed6\u200b\u53d8\u91cf\u200b\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u7ebf\u6027\u200b\u56e0\u679c\u200b\u6a21\u578b\u200b\uff0c\u200b\u51fd\u6570\u200b\\(f\\)\u200b\u662f\u200b\u5173\u4e8e\u200b\\(X_1, \\dots, X_n\\)\u200b\u7684\u200b\u7ebf\u6027\u200b\u51fd\u6570\u200b\uff0c\u200b\u5373\u200b\uff1a</p> <p>\\(f(X_1, \\dots, X_n) = \\alpha_0 + \\alpha_1X_1 + \\dots + \\alpha_nX_n\\)</p>"},{"location":"math/operations-mamagement/forecast/#_3","title":"\u65f6\u95f4\u200b\u5e8f\u5217\u200b\u65b9\u6cd5","text":"<p>\u200b\u6b64\u5904\u200b\u7684\u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b\u6307\u5f80\u671f\u200b\u5bf9\u200b\u67d0\u200b\u53d8\u91cf\u200b\u89c2\u6d4b\u200b\u503c\u200b\u7684\u200b\u96c6\u5408\u200b\u3002\u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b\u65b9\u6cd5\u200b\u4ec5\u4ec5\u200b\u4f9d\u9760\u200b\u8fd9\u4e9b\u200b\u89c2\u6d4b\u200b\u503c\u200b\u5bf9\u200b\u8be5\u200b\u53d8\u91cf\u200b\u7684\u200b\u672a\u6765\u200b\u8fdb\u884c\u200b\u9884\u6d4b\u200b\u3002</p> <p>\u200b\u5728\u200b\u73b0\u5b9e\u200b\u7684\u200b\u751f\u4ea7\u200b\u8fd0\u4f5c\u200b\u4e2d\u200b\uff0c\u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b\u901a\u5e38\u200b\u4f1a\u200b\u8868\u73b0\u200b\u51fa\u200b\u4ee5\u4e0b\u200b\u6a21\u5f0f\u200b\uff1a</p> <ul> <li>\u200b\u8d8b\u52bf\u200b\uff0c\u200b\u5373\u200b\u89c2\u6d4b\u200b\u503c\u200b\u5728\u200b\u6574\u4e2a\u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u6240\u200b\u8868\u73b0\u200b\u51fa\u200b\u7684\u200b\u8d8b\u52bf\u200b</li> <li>\u200b\u5b63\u8282\u200b\uff0c\u200b\u5373\u200b\u89c2\u6d4b\u200b\u503c\u200b\u5728\u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u7684\u200b\u4e00\u90e8\u5206\u200b\u6240\u200b\u8868\u73b0\u200b\u51fa\u200b\u7684\u200b\u8d8b\u52bf\u200b</li> <li>\u200b\u5468\u671f\u200b\uff0c\u200b\u5373\u200b\u89c2\u6d4b\u200b\u503c\u200b\u5728\u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u91cd\u590d\u200b\u591a\u6b21\u200b\u51fa\u73b0\u200b\u7684\u200b\u8d8b\u52bf\u200b</li> <li>\u200b\u968f\u673a\u200b\uff0c\u200b\u6307\u200b\u89c2\u6d4b\u200b\u503c\u200b\u65e0\u89c4\u5219\u200b\u7684\u200b\u53d8\u52a8\u200b</li> </ul> <p>\u200b\u5b9e\u9645\u200b\u7684\u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b\u53ef\u80fd\u200b\u540c\u65f6\u200b\u5305\u542b\u200b\u4ee5\u4e0a\u200b\u6240\u6709\u200b\u7279\u5f81\u200b\u3002</p>"},{"location":"math/operations-mamagement/forecast/#_4","title":"\u89c2\u6d4b\u200b\u4e0e\u200b\u9884\u6d4b","text":"<ol> <li>\\(\\{D_t\\}\\)\u200b\u4e3a\u200b\u89c2\u6d4b\u200b\u53d8\u91cf\u200b\u5728\u200b\\(1\\sim t\\)\u200b\u7684\u200b\u65f6\u95f4\u200b\u5185\u200b\u7684\u200b\u89c2\u6d4b\u200b\u503c\u200b\u7ec4\u6210\u200b\u7684\u200b\u5e8f\u5217\u200b\uff1b</li> <li>\\(F_{t-\\tau, t}\\)\u200b\u8868\u793a\u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b\u5728\u200b\\(t-\\tau\\)\u200b\u5468\u671f\u200b\u5185\u200b\u5bf9\u200b\\(t\\)\u200b\u5468\u671f\u200b\u7684\u200b\u89c2\u6d4b\u200b\u503c\u200b\u4f5c\u51fa\u200b\u7684\u200b\u9884\u6d4b\u200b\u3002\u200b\u7279\u6b8a\u200b\u5730\u200b\uff0c\\(F_t=F_{t-1, t}\\)\uff0c\u200b\u5373\u200b\u4e3a\u200b\u63d0\u524d\u200b\u4e00\u4e2a\u200b\u5468\u671f\u200b\u7684\u200b\u9884\u6d4b\u200b\u3002</li> </ol> <p>\u200b\u5982\u4e0b\u200b\u6307\u6807\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u8861\u91cf\u200b\u9884\u6d4b\u200b\u6548\u679c\u200b\uff0c\u200b\u5b9a\u4e49\u200b\u504f\u5dee\u200b\\(e_t = D_t - F_t\\)</p> <ul> <li>\u200b\u5e73\u5747\u200b\u7edd\u5bf9\u200b\u504f\u5dee\u200b\uff08MAD\uff09\uff1a\\(\\frac{1}{n}\\sum_{i=1}^n|e_i|\\)</li> <li>\u200b\u5747\u65b9\u200b\u8bef\u5dee\u200b\uff08MSE\uff09\uff1a\\(\\frac{1}{n}\\sum_{i=1}^ne_i^2\\)</li> <li>\u200b\u5e73\u5747\u200b\u7edd\u5bf9\u200b\u767e\u5206\u200b\u8bef\u5dee\u200b\uff08MAPE\uff09\uff1a\\(\\frac{1}{n}\\sum_{i=1}^n|e_i/D_i|\\times 100\\%\\)</li> </ul>"},{"location":"math/operations-mamagement/forecast/#_5","title":"\u5e73\u7a33\u200b\u5e8f\u5217\u200b\u7684\u200b\u9884\u6d4b","text":"<p>\u200b\u5e73\u7a33\u200b\u5e8f\u5217\u200b\u662f\u200b\u8054\u5408\u200b\u6982\u7387\u5206\u5e03\u200b\u4e0d\u968f\u200b\u65f6\u95f4\u200b\u6539\u53d8\u200b\uff0c\u200b\u5f62\u200b\u5982\u200b\\(D_t=\\mu + \\epsilon_t\\)\u200b\u7684\u200b\u5e8f\u5217\u200b\u3002</p> <p>\u200b\u5bf9\u200b\u5e73\u7a33\u200b\u5e8f\u5217\u200b\uff0c\u200b\u5e38\u7528\u200b\u4e24\u79cd\u200b\u9884\u6d4b\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5373\u200b\u79fb\u52a8\u200b\u5e73\u5747\u200b\u4e0e\u200b\u6307\u6570\u200b\u5e73\u6ed1\u200b\u3002</p>"},{"location":"math/operations-mamagement/forecast/#_6","title":"\u79fb\u52a8\u200b\u5e73\u5747","text":"<p>\u200b\u79fb\u52a8\u200b\u5e73\u5747\u200b\uff0c\\(MA(N)\\)\uff1a</p> \\[ F_t = \\frac{1}{N}\\sum_{i=t-N}^{t-1}\\alpha_{i-t+N+1}D_i \\] <p>\u200b\u5f53\u200b\\(\\alpha_i=1\\)\u200b\u65f6\u200b\uff0c\u200b\u79f0\u8be5\u200b\u79fb\u52a8\u200b\u5e73\u5747\u200b\u4e3a\u200b\u7b80\u5355\u200b\u79fb\u52a8\u200b\u5e73\u5747\u200b\uff0c\u200b\u5426\u5219\u200b\u4e3a\u200b\u52a0\u6743\u200b\u79fb\u52a8\u200b\u5e73\u5747\u200b\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u7b80\u5355\u200b\u79fb\u52a8\u200b\u5e73\u5747\u200b\uff0c\u200b\u6839\u636e\u200b\u524d\u200b\u4e00\u200b\u5468\u671f\u200b\u7684\u200b\u9884\u6d4b\u503c\u200b\u548c\u200b\u65b0\u200b\u7684\u200b\u89c2\u6d4b\u200b\u503c\u200b\u53ef\u4ee5\u200b\u8ba1\u7b97\u200b\u4e0b\u200b\u4e00\u200b\u5468\u671f\u200b\u7684\u200b\u9884\u6d4b\u503c\u200b\uff1a</p> \\[ \\begin{aligned} F_{t+1} &amp;= \\frac{1}{N}\\sum_{i=t-N+1}^{t}D_i \\\\ &amp;= \\frac{1}{N}\\sum_{i=t-N}^{t-1} - D_{t-N} + D_t \\\\ &amp;= F_{t} + \\frac 1N \\left(D_t - D_{t-N}\\right) \\end{aligned} \\] <p>\u200b\u5bf9\u4e8e\u200b\u5e73\u7a33\u200b\u5e8f\u5217\u200b\uff0c\u200b\u79fb\u52a8\u200b\u5e73\u5747\u200b\u7684\u200b\u9884\u6d4b\u200b\u901a\u5e38\u200b\u6ede\u540e\u200b\u4e8e\u200b\u8d8b\u52bf\u200b\u7684\u200b\u53d1\u5c55\u200b\u3002</p>"},{"location":"math/operations-mamagement/forecast/#_7","title":"\u6307\u6570\u200b\u5e73\u6ed1","text":"<p>\u200b\u5f53\u524d\u200b\u7684\u200b\u9884\u6d4b\u503c\u200b\u7b49\u4e8e\u200b\u4e0a\u200b\u4e00\u6b21\u200b\u9884\u6d4b\u503c\u200b\u4e0e\u200b\u5f53\u524d\u200b\u9700\u6c42\u200b\u5b9e\u9645\u200b\u503c\u200b\u7684\u200b\u52a0\u6743\u200b\u5e73\u5747\u200b\uff0c\u200b\u5373\u200b\uff1a</p> \\[ \\begin{aligned} F_t &amp;= \\alpha D_{t-1} + (1-\\alpha)F_{t-1} \\\\ &amp;= F_{t-1} + \\alpha e_{t-1} \\end{aligned} \\] <p>\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u4e3a\u200b\u5bf9\u200b\u4e0a\u200b\u4e00\u6b21\u200b\u9884\u6d4b\u200b\u7684\u200b\u504f\u5dee\u200b\u4f5c\u51fa\u200b\u7cfb\u6570\u200b\u4e3a\u200b\\(\\alpha\\)\u200b\u7684\u200b\u4fee\u6b63\u200b\u3002</p> <p>\u200b\u5df2\u77e5\u200b\\(t=0\\)\u200b\u65f6\u200b\u5bf9\u200b\\(D_1\\)\u200b\u7684\u200b\u9884\u6d4b\u200b\u4e3a\u200b\\(F_1\\)\uff0c\u200b\u5219\u200b\uff1a</p> \\[ \\begin{aligned}     F_2 &amp;= \\alpha D_1 + (1-\\alpha) F_1 \\\\     F_3 &amp;= \\alpha D_2 + (1-\\alpha) F_2 =\\alpha D_2 + (1-\\alpha)\\alpha D_1 + (1-\\alpha) ^ 2 F_1 \\\\     \\vdots \\\\     F_n &amp;= \\sum_{i=1} ^{n-1} \\alpha(1-\\alpha)^{i-1}D_{n-i} + (1-\\alpha)^{n-1}F_1 \\end{aligned} \\]"},{"location":"math/operations-mamagement/forecast/#_8","title":"\u8d8b\u52bf\u200b\u5e8f\u5217","text":"<p>\u200b\u5bf9\u200b\u8d8b\u52bf\u200b\u5e8f\u5217\u200b\u7684\u200b\u9884\u6d4b\u200b\u901a\u5e38\u200b\u4f7f\u7528\u200b\u56de\u5f52\u200b\u5206\u6790\u200b\uff0c\u200b\u5373\u200b\u5047\u8bbe\u200b\u89c2\u6d4b\u200b\u53d8\u91cf\u200b\u4e0e\u200b\u9884\u6d4b\u200b\u53d8\u91cf\u200b\u95f4\u200b\u5b58\u5728\u200b\u51fd\u6570\u200b\u5173\u7cfb\u200b\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u89c2\u6d4b\u200b\u53d8\u91cf\u200b\u548c\u200b\u9884\u6d4b\u200b\u53d8\u91cf\u200b\u7684\u200b\u89c2\u6d4b\u200b\u503c\u200b\u5bf9\u200b\u9884\u6d4b\u200b\u53d8\u91cf\u200b\u8fdb\u884c\u200b\u9884\u6d4b\u200b\u3002</p>"},{"location":"math/operations-mamagement/forecast/#_9","title":"\u7ebf\u6027\u200b\u56de\u5f52","text":"<p>\u200b\u5f53\u200b\u56de\u5f52\u200b\u4f7f\u7528\u200b\u5f62\u200b\u5982\u200b\\(\\hat Y=a+bX\\)\u200b\u7684\u200b\u7ebf\u6027\u200b\u51fd\u6570\u200b\u65f6\u200b\uff0c\u200b\u79f0\u4e3a\u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\u3002\u200b\u7531\u6b64\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u6700\u5c0f\u200b\u4e8c\u200b\u4e58\u6cd5\u200b\u8fdb\u884c\u200b\u62df\u5408\u200b\u3002</p> <p>\u200b\u6700\u5c0f\u200b\u4e8c\u200b\u4e58\u6cd5\u200b\u4f7f\u5f97\u200b\\(\\sum|Y-\\hat Y|^2\\)\u200b\u6700\u5c0f\u200b\uff0c\u200b\u5373\u200b\u9884\u6d4b\u200b\u70b9\u200b\u548c\u200b\u89c2\u6d4b\u70b9\u200b\u7684\u200b\u8ddd\u79bb\u200b\u5e73\u65b9\u548c\u200b\u6700\u5c0f\u200b\u3002\u200b\u5047\u8bbe\u200b\u89c2\u6d4b\u200b\u53d8\u91cf\u200b\u4e3a\u200b\\(X_1, \\dots, X_m\\)\uff0c\u200b\u9884\u6d4b\u200b\u53d8\u91cf\u200b\u4e3a\u200b\\(y\\)\uff0c\u200b\u5171\u200b\\(n\\)\u200b\u7ec4\u200b\u6570\u636e\u200b\u70b9\u200b\uff0c\u200b\u5219\u200b\u7ebf\u6027\u200b\u56de\u5f52\u200b\u6a21\u578b\u200b\u4e3a\u200b\uff1a</p> \\[ \\hat y = X\\vec a \\] <p>\u200b\u5176\u4e2d\u200b\\(\\vec a, , \\hat y\\)\u200b\u4e3a\u200b\\(m\\)\u200b\u7ef4\u5217\u200b\u5411\u91cf\u200b\uff0c\\(X\\)\u200b\u4e3a\u200b\\(n\\times m\\)\u200b\u77e9\u9635\u200b\u3002</p> <p>\u200b\u5219\u200b\u6b8b\u5dee\u200b\u5e73\u65b9\u548c\u200b\u5373\u200b\u4e3a\u200b\\(f(a; X, y) = (y - \\hat y)^T(y - \\hat y)=(y - Xa)^T(y - Xa)\\)\u3002</p> <p>\u200b\u5bf9\u200b\\(\\vec a, \\vec b\\)\u200b\u6c42\u5bfc\u200b\uff0c\u200b\u5f97\u200b\uff1a</p> \\[     \\frac{\\partial f}{\\partial \\vec a} = 0 \\] <p>\\(\\frac{\\partial f}{\\partial \\vec a} = 0\\)\u200b\u5373\u200b\uff1a</p> \\[ \\begin{aligned}     \\frac{\\partial f}{\\partial \\vec a} &amp;= 2X^T(X\\vec a - y) \\\\     &amp;= 2X^TX\\vec a + 2X^Ty \\\\     &amp;= \\vec 0 \\end{aligned} \\] <p>\u200b\u5f97\u200b\\(\\vec a = (X^TX)^{-1}X^Ty\\)</p>"},{"location":"math/operations-mamagement/forecast/#_10","title":"\u53cc\u91cd\u200b\u6307\u6570\u200b\u5e73\u6ed1","text":"<p>\u200b\u53cc\u91cd\u200b\u6307\u6570\u200b\u5e73\u6ed1\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u9884\u6d4b\u200b\u5177\u6709\u200b\u7ebf\u6027\u200b\u8d8b\u52bf\u200b\u7684\u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b\uff0c\u200b\u5176\u4e2d\u200b\u4f7f\u7528\u200b\u4e24\u4e2a\u200b\u5e73\u6ed1\u200b\u53c2\u6570\u200b\u5206\u522b\u200b\u9884\u6d4b\u200b\u5e8f\u5217\u200b\u503c\u200b\\(S_t\\)\u200b\u548c\u200b\u8d8b\u52bf\u200b\u503c\u200b\\(G_t\\)</p> <ul> <li>\u200b\u5e8f\u5217\u200b\u503c\u200b\u7b49\u4ef7\u200b\u4e8e\u200b\u66f2\u7ebf\u200b\u7684\u200b\u622a\u8ddd\u200b   $$   S_t = \\alpha D_t + (1 - \\alpha)(S_{t-1} + G_{t-1})   $$</li> <li>\u200b\u8d8b\u52bf\u200b\u503c\u200b\u7b49\u4ef7\u200b\u4e8e\u200b\u66f2\u7ebf\u200b\u7684\u200b\u659c\u7387\u200b   $$   G_t = \\beta(S_t - S_{t-1})+(1-\\beta)G_{t-1}   $$</li> <li>\u200b\u5728\u200b\\(t\\)\u200b\u65f6\u523b\u200b\u63d0\u524d\u200b\\(\\tau\\)\u200b\u6b65\u200b\u4f5c\u51fa\u200b\u7684\u200b\u9884\u6d4b\u200b\\(F_{t, t+\\tau} = S_t+\\tau G_t\\)</li> </ul>"},{"location":"math/operations-mamagement/forecast/#_11","title":"\u5b63\u8282\u6027\u200b\u5e8f\u5217","text":"<p>\u200b\u5b63\u8282\u6027\u200b\u5e8f\u5217\u200b\u662f\u200b\u6bcf\u200b\\(N\\)\u200b\u4e2a\u200b\u5468\u671f\u200b\u91cd\u590d\u200b\u4e00\u6b21\u200b\u7684\u200b\u5e8f\u5217\u200b\uff0c\u200b\u5176\u4e2d\u200b\\(N\\)\u200b\u88ab\u200b\u79f0\u4e3a\u200b\u5b63\u200b\u7684\u200b\u957f\u5ea6\u200b\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u5b63\u8282\u200b\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u5468\u671f\u200b\uff0c\u200b\u90fd\u200b\u6709\u200b\u4e00\u4e2a\u200b\u5b63\u8282\u200b\u56e0\u5b50\u200b\\(c_t\\)\uff0c\u200b\u6307\u200b\u5e73\u5747\u200b\u610f\u4e49\u200b\u4e0b\u200b\u7b2c\u200b\\(t\\)\u200b\u4e2a\u200b\u5468\u671f\u200b\u7684\u200b\u9700\u6c42\u200b\u4e0e\u200b\u6574\u4f53\u200b\u5e73\u5747\u200b\u9700\u6c42\u200b\u7684\u200b\u6bd4\u503c\u200b\uff0c\u200b\u6709\u200b\\(\\sum c_t = N\\)</p> <ul> <li>\u200b\u8ba1\u7b97\u200b\u6240\u6709\u200b\u6570\u636e\u200b\u7684\u200b\u6837\u672c\u5747\u503c\u200b</li> <li>\u200b\u5c06\u200b\u6bcf\u4e2a\u200b\u89c2\u6d4b\u200b\u503c\u200b\u9664\u4ee5\u200b\u6837\u672c\u5747\u503c\u200b\uff0c\u200b\u5373\u200b\u4e3a\u200b\u6bcf\u4e2a\u200b\u89c2\u6d4b\u200b\u5468\u671f\u200b\u7684\u200b\u5b63\u8282\u200b\u56e0\u5b50\u200b</li> <li>\u200b\u5c06\u200b\u6bcf\u5b63\u200b\u4e2d\u200b\u76f8\u540c\u200b\u5468\u671f\u200b\u7684\u200b\u5b63\u8282\u200b\u56e0\u5b50\u200b\u53d6\u200b\u5747\u503c\u200b\uff0c\u200b\u5f97\u5230\u200b\\(N\\)\u200b\u4e2a\u200b\u5b63\u8282\u200b\u56e0\u5b50\u200b</li> </ul> <p>\u200b\u5bf9\u4e8e\u200b\u540c\u65f6\u200b\u5177\u6709\u200b\u5b63\u8282\u6027\u200b\u6ce2\u52a8\u200b\u548c\u200b\u8d8b\u52bf\u200b\u7684\u200b\u5b63\u8282\u6027\u200b\u5e8f\u5217\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6309\u7167\u200b\u5982\u4e0b\u200b\u65b9\u5f0f\u200b\u8fdb\u884c\u200b\u9884\u6d4b\u200b\uff1a</p> <ul> <li>\u200b\u8ba1\u7b97\u200b\u5e8f\u5217\u200b\u7684\u200b\u5b63\u8282\u200b\u56e0\u5b50\u200b</li> <li>\u200b\u5c06\u200b\u89c2\u6d4b\u200b\u503c\u200b\u9664\u4ee5\u200b\u5b63\u8282\u200b\u56e0\u5b50\u200b\uff0c\u200b\u5f97\u5230\u200b\u6d88\u9664\u200b\u5b63\u8282\u6027\u200b\u6ce2\u52a8\u200b\u7684\u200b\u5e8f\u5217\u200b</li> <li>\u200b\u7528\u200b\u8d8b\u52bf\u200b\u5e8f\u5217\u200b\u7684\u200b\u9884\u6d4b\u200b\u65b9\u6cd5\u200b\u8fdb\u884c\u200b\u9884\u6d4b\u200b</li> <li>\u200b\u9884\u6d4b\u200b\u7ed3\u679c\u200b\u4e58\u4ee5\u200b\u5b63\u8282\u200b\u56e0\u5b50\u200b\uff0c\u200b\u5f97\u5230\u200b\u6700\u7ec8\u200b\u7684\u200b\u9884\u6d4b\u503c\u200b</li> </ul> <p>\u200b\u7f3a\u70b9\u200b\uff1a\u200b\u5728\u200b\u83b7\u5f97\u200b\u65b0\u200b\u7684\u200b\u89c2\u6d4b\u200b\u503c\u540e\u200b\uff0c\u200b\u9700\u8981\u200b\u91cd\u65b0\u200b\u8ba1\u7b97\u200b\u6240\u6709\u200b\u7684\u200b\u5b63\u8282\u200b\u56e0\u5b50\u200b\u3002</p>"},{"location":"math/operations-mamagement/forecast/#_12","title":"\u4e09\u91cd\u200b\u6307\u6570\u200b\u5e73\u6ed1","text":"<p>\u200b\u5047\u8bbe\u200b\u9700\u6c42\u200b\u4e3a\u200b\\(D_t = (\\mu +G_t)c_t + \\epsilon_t\\)\uff08\u200b\u4e58\u79ef\u200b\u578b\u200b\uff09\u3002\u200b\u8be5\u200b\u5f62\u5f0f\u200b\u4f7f\u7528\u200b\u4e09\u4e2a\u200b\u6307\u6570\u200b\u5e73\u6ed1\u200b\u5bf9\u200b\u5e8f\u5217\u200b\uff08\u200b\u622a\u8ddd\u200b\uff09\u3001\u200b\u8d8b\u52bf\u200b\uff08\u200b\u659c\u7387\u200b\uff09\u200b\u548c\u200b\u5b63\u8282\u200b\u56e0\u5b50\u200b\uff08\u200b\u5468\u671f\u200b\uff09\u200b\u5206\u522b\u200b\u8fdb\u884c\u200b\u62df\u5408\u200b\u3002</p> <ul> <li>\u200b\u5e8f\u5217\u200b\uff1a\\(S_t = \\alpha \\frac{D_t}{c_{t-N}} + (1-\\alpha) (S_{t-1} + G_{t-1})\\)\uff0c\\(c_{t-N}\\)\u200b\u7528\u4e8e\u200b\u6d88\u9664\u200b\u5b63\u8282\u200b\u56e0\u5b50\u200b\u7684\u200b\u5f71\u54cd\u200b\u3002</li> <li>\u200b\u8d8b\u52bf\u200b\uff1a\\(G_t = \\beta(S_t - S_{t-1}) + (1-\\beta) G_{t-1}\\)</li> <li>\u200b\u5b63\u8282\u200b\u56e0\u5b50\u200b\uff1a\\(c_t = \\gamma\\frac{D_t}{S_t} + (1-\\gamma) c_{t-N}\\)</li> </ul>"},{"location":"math/operations-mamagement/forecast/#box-jenkinsarima","title":"Box-Jenkins\u200b\u6a21\u578b\u200b\uff1aARIMA","text":"<p>ARIMA\u200b\u6a21\u578b\u200b\u662f\u200b\u5229\u7528\u200b\u65f6\u95f4\u200b\u5e8f\u5217\u200b\u7684\u200b\u81ea\u200b\u76f8\u5173\u200b\u7ed3\u6784\u200b\uff1a</p> <p>Auto Regressive Integrated Moving Average</p> <p>\u200b\u6784\u5efa\u200b\u6b65\u9aa4\u200b\uff1a</p> <ol> <li>\u200b\u6570\u636e\u200b\u8f6c\u6362\u200b</li> <li>\u200b\u6a21\u578b\u200b\u8bc6\u522b\u200b</li> <li>\u200b\u53c2\u6570\u4f30\u8ba1\u200b</li> <li>\u200b\u9884\u6d4b\u200b</li> <li>\u200b\u8bc4\u4ef7\u200b</li> </ol>"},{"location":"math/operations-mamagement/forecast/#arp","title":"\u81ea\u200b\u56de\u5f52\u200b\u8fc7\u7a0b\u200b\uff1aAR(p)","text":"<p>\u200b\u5bf9\u4e8e\u200b\u5e73\u7a33\u200b\u5e8f\u5217\u200b\uff1a</p> <ol> <li>\u200b\u95f4\u9694\u200b\u76f8\u540c\u200b\u7684\u200b\u4efb\u610f\u200b\u4e00\u7ec4\u200b\u9700\u6c42\u200b\u7684\u200b\u8054\u5408\u200b\u8fb9\u9645\u200b\u5206\u5e03\u200b\u76f8\u540c\u200b-&gt;\u200b\u534f\u65b9\u5dee\u200b\u76f8\u540c\u200b</li> <li>\u200b\u4efb\u610f\u200b\u4e24\u4e2a\u200b\u89c2\u6d4b\u200b\u7684\u200b\u534f\u65b9\u5dee\u200b\u4ec5\u200b\u53d6\u51b3\u4e8e\u200b\u76f8\u9694\u200b\u7684\u200b\u5468\u671f\u200b\u6570\u200b</li> </ol> \\[ \\mathrm{Cov}(D_{t+m}, D_{t+m+k}) = E(D_{t+m}D_{t+m+k}) - E(D_{t+m})E(D_{t+m+k}) \\] <p>\u200b\u76f8\u5173\u7cfb\u6570\u200b\uff1a\u200b\u6ede\u540e\u200b\\(k\\)\u200b\u671f\u200b\u7684\u200b\u81ea\u200b\u76f8\u5173\u7cfb\u6570\u200b</p> \\[ \\rho_k = \\frac{\\mathrm {Cov}(D_{t+m}, D_{t+m+k})}{\\sqrt{\\mathrm {Var}(D_{t+m})}\\sqrt{\\mathrm {Var}(D_{t+m+k})}} \\] <p>\u200b\u6837\u672c\u200b\u7684\u200b\u81ea\u200b\u76f8\u5173\u200b\u51fd\u6570\u200b\uff1a</p> \\[ r_k = \\frac{\\sum_{t=k+1} ^ n(D_t - \\overline D)(D_{t-k} - \\overline D)}{\\sum_{t=1} ^ n(D_t - \\overline D)^2} \\] \\[ D_t = a_0 + a_1D_{t-1} + \\dots + a_pD_{t-p} + \\epsilon_t \\] <p>\\(p\\)\u200b\u4e3a\u200b\u81ea\u200b\u56de\u5f52\u200b\u8fc7\u7a0b\u200b\u7684\u200b\u9636\u6570\u200b\uff0c\u200b\u4e00\u9636\u81ea\u200b\u56de\u5f52\u200b\u6a21\u578b\u200b\\(AR(1)\\)\uff1a</p> \\[ D_t = a_0 + a_1 D_{t-1} + \\epsilon_t \\] <p>\u200b\u81ea\u200b\u76f8\u5173\u200b\u51fd\u6570\u200b\u4e3a\u200b\uff1a\\(\\rho_j = a_1^j\\)</p> <p>\u200b\u5c06\u200b\u6837\u672c\u200b\u7684\u200b\u81ea\u200b\u76f8\u5173\u200b\u51fd\u6570\u200b\u4e0e\u200b\u7406\u8bba\u200b\u7684\u200b\u81ea\u200b\u76f8\u5173\u200b\u51fd\u6570\u200b\u8fdb\u884c\u200b\u6bd4\u8f83\u200b\uff0c\u200b\u5224\u65ad\u200bARIMA\u200b\u7684\u200b\u62df\u5408\u200b\u6548\u679c\u200b\u3002</p>"},{"location":"math/operations-mamagement/forecast/#maq","title":"\u79fb\u52a8\u200b\u5e73\u5747\u200b\u8fc7\u7a0b\u200b\uff1aMA(q)","text":"\\[ D_t = b_0 - b_1\\epsilon_{t-1} -\\dots - b_q\\epsilon{t-q} +\\epsilon_t \\] <p>\\(AR(1)\\)\u200b\u8fc7\u7a0b\u200b\u672c\u8d28\u200b\u4e0a\u200b\u662f\u200b\\(MA(\\infty)\\)\u200b\u8fc7\u7a0b\u200b\u3002</p> <p>\\(MA(1)\\)\u200b\u8fc7\u7a0b\u200b\uff1a\\(D_t = b_0 - b_1\\epsilon_{t-1} + \\epsilon_t\\)</p> <p>\u200b\u5bf9\u5e94\u200b\u4e8e\u200b\\(AR(1)\\)\u200b\u8fc7\u7a0b\u200b\u7684\u200b\u81ea\u200b\u76f8\u5173\u200b\u51fd\u6570\u200b\uff1a</p> \\[ \\left\\{\\begin{aligned}   \\rho_1 &amp;= \\frac{-b_1}{1+b_1^2} \\\\   \\rho_2 &amp;= \\rho_3 = \\dots = 0 \\end{aligned}\\right. \\]"},{"location":"math/operations-mamagement/forecast/#arma","title":"ARMA\u200b\u6a21\u578b","text":"<p>\\(ARMA(p, q)\\)\u200b\u6a21\u578b\u200b\u662f\u200b\\(AR(p)\\)\u200b\u6a21\u578b\u200b\u4e0e\u200b\\(MA(q)\\)\u200b\u6a21\u578b\u200b\u7684\u200b\u7ed3\u5408\u200b\uff0c\u200b\u5982\u200b\\(ARMA(1, 1)\\)\uff1a</p> \\[ D_t = c+a_1D_{t-1} - b_1\\epsilon_{t-1} + \\epsilon_t \\] <p>\u200b\u5982\u679c\u200b\u5e8f\u5217\u200b\u4e0d\u662f\u200b\u5e73\u7a33\u200b\u5e8f\u5217\u200b\uff0c\u200b\u800c\u200b\u5b58\u5728\u200b\u8d8b\u52bf\u6027\u200b\u548c\u200b/\u200b\u6216\u200b\u5b63\u8282\u6027\u200b\uff0c\u200b\u9700\u8981\u200b\u5c06\u200b\u975e\u200b\u5e73\u7a33\u200b\u8fc7\u7a0b\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u5e73\u7a33\u200b\u8fc7\u7a0b\u200b\u3002</p> <ul> <li>\u200b\u5f53\u200b\\(D_t\\)\u200b\u5b58\u5728\u200b\u7ebf\u6027\u200b\u8d8b\u52bf\u200b\u65f6\u200b\uff0c\u200b\u4f7f\u7528\u200b\u5dee\u5206\u200b\u65b9\u6cd5\u200b\u6d88\u9664\u200b\u8d8b\u52bf\u6027\u200b\uff1a\\(U_t = D_t - D_{t-1}\\)\uff0c\\(U_t\\)\u200b\u662f\u200b\u5e73\u7a33\u200b\u5e8f\u5217\u200b\u3002</li> <li>\u200b\u5f53\u200b\\(D_t\\)\u200b\u5b58\u5728\u200b\u5b63\u8282\u6027\u200b\u8d8b\u52bf\u200b\u65f6\u200b\uff0c\u200b\u4f7f\u7528\u200b\u5dee\u5206\u200b\u65b9\u6cd5\u200b\u6d88\u9664\u200b\u8d8b\u52bf\u6027\u200b\uff1a\\(U_t = D_t - D_{t-N}\\)</li> <li>\u200b\u5bf9\u200b\\(U_t\\)\u200b\u8fdb\u884c\u200b\u52a0\u200b\u548c\u200b\uff0c\u200b\u5f97\u5230\u200b\u521d\u59cb\u200b\u7684\u200b\\(D_t\\)</li> </ul>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/","title":"\u786e\u5b9a\u200b\u9700\u6c42\u200b\u4e0b\u200b\u7684\u200b\u5e93\u5b58\u200b\u63a7\u5236","text":"<p>\u200b\u5728\u200b\u6301\u6709\u200b\u6210\u672c\u200b\u4e0e\u200b\u56fa\u5b9a\u200b\u8ba2\u8d27\u200b\u6210\u672c\u200b\u4e4b\u95f4\u200b\u5e73\u8861\u200b\u2014\u2014\u200b\u5355\u6b21\u200b\u8ba2\u8d27\u91cf\u200b\\(\\bsQ\\)</p>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#eoq","title":"EOQ\u200b\u6a21\u578b","text":""},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_2","title":"\u8bb0\u53f7","text":"<ul> <li>\u200b\u9700\u6c42\u200b\u7387\u200b\\(\\lambda\\)\uff0c\u200b\u5468\u671f\u200b\u957f\u5ea6\u200b\\(T\\)</li> <li>\u200b\u6210\u672c\u200b\uff1a\u200b\u56fa\u5b9a\u200b\u8ba2\u8d27\u200b\u6210\u672c\u200b\\(K\\)\u3001\u200b\u8fb9\u9645\u200b\u8ba2\u8d27\u200b\u6210\u672c\u200b\\(c\\)\u3001\u200b\u8fb9\u9645\u200b\u6301\u6709\u200b\u6210\u672c\u200b\\(h\\)</li> </ul> <p>\u200b\u8fb9\u9645\u200b\u6301\u6709\u200b\u6210\u672c\u200b\\(h\\)\u200b\u901a\u5e38\u200b\u4ee5\u200b\u5229\u7387\u200b\\(I\\)\u200b\u7684\u200b\u5f62\u5f0f\u200b\u8868\u793a\u200b\uff0c\u200b\u6b64\u65f6\u200b\u6709\u200b\\(h = Ic\\)</p> <ul> <li>\u200b\u8ba2\u8d27\u200b\u63d0\u524d\u200b\u671f\u200b\\(\\tau = 0\\)</li> <li>\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u7f3a\u8d27\u200b</li> </ul>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_3","title":"\u63a8\u5bfc","text":"<p>\u200b\u8003\u8651\u200b\u4e00\u4e2a\u200b\u8ba2\u8d27\u200b\u5468\u671f\u200b\uff0c\u200b\u7531\u4e8e\u200b\u4e0d\u200b\u8003\u8651\u200b\u8ba2\u8d27\u200b\u63d0\u524d\u91cf\u200b\uff0c\u200b\u8ba2\u8d27\u200b\u540e\u200b\u4ea7\u54c1\u200b\u4f1a\u200b\u7acb\u5373\u200b\u5230\u8fbe\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4e3a\u200b\u964d\u4f4e\u200b\u6301\u6709\u200b\u6210\u672c\u200b\uff0c\u200b\u6700\u4f18\u200b\u8ba2\u8d27\u200b\u65b9\u5f0f\u200b\u4e3a\u200b\u5e93\u5b58\u200b\u4e3a\u200b\u96f6\u65f6\u200b\u91cd\u65b0\u200b\u8ba2\u8d27\u200b\u3002\u200b\u56e0\u6b64\u200b\u8ba2\u8d27\u200b\u5468\u671f\u200b\u6ee1\u8db3\u200b\\(Q = \\lambda T\\)\u3002\u200b\u4e00\u4e2a\u200b\u8ba2\u8d27\u200b\u5468\u671f\u200b\u4e2d\u200b\u7684\u200b\u6210\u672c\u200b\u4e3a\u200b\u8ba2\u8d27\u200b\u6210\u672c\u200b\u548c\u200b\u5e93\u5b58\u200b\u6210\u672c\u200b\u4e4b\u200b\u548c\u200b\uff0c\u200b\u5373\u200b\\(C = K + cQ + hQT/2\\)\u3002</p> <p></p> <p>\u200b\u5355\u4f4d\u200b\u65f6\u95f4\u200b\u7684\u200b\u6210\u672c\u200b</p> \\[ C(Q) = \\frac{C}{T} = \\frac{K\\lambda}{Q} + \\lambda c + \\frac{hQ}{2} \\] <p>\u200b\u5bf9\u200b\u5355\u4f4d\u200b\u65f6\u95f4\u200b\u6210\u672c\u200b\u6c42\u5bfc\u200b\uff0c\u200b\u5f97\u5230\u200b</p> \\[ C'(Q) = \\frac{h}{2} - \\frac{K\\lambda}{Q^2} \\] <p>\u200b\u5f53\u200b\u5355\u4f4d\u200b\u65f6\u95f4\u200b\u6210\u672c\u200b\u6700\u200b\u5c0f\u65f6\u200b\uff0c\\(C'(Q^\\ast) = 0\\)\uff0c\u200b\u89e3\u5f97\u200b</p> \\[ Q^\\ast = \\sqrt{\\frac{2K\\lambda}{h}} \\] <p>\u200b\u4e0e\u200b\u6b64\u5bf9\u5e94\u200b\u7684\u200b\u6700\u5c0f\u200b\u6210\u672c\u200b\u4e3a\u200b</p> \\[ C(Q^\\ast) = \\frac{K\\lambda}{Q^\\ast} + \\lambda c + \\frac{hQ^\\ast}{2} = \\lambda c + \\sqrt{2K\\lambda h} \\]"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_4","title":"\u6a21\u578b\u200b\u6269\u5145","text":""},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_5","title":"\u8ba2\u8d27\u200b\u63d0\u524d\u200b\u671f","text":"<p>\u200b\u8bbe\u200b\u8ba2\u8d27\u200b\u63d0\u524d\u200b\u671f\u4e3a\u200b\\(\\tau &gt; 0\\)\uff0c\u200b\u9996\u5148\u200b\u8003\u8651\u200b\\(\\tau \\leq T\\)\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u7531\u4e8e\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u7f3a\u8d27\u200b\uff0c\u200b\u5728\u200b\u5e93\u5b58\u200b\u63d0\u524d\u200b\u671f\u5185\u200b\u7684\u200b\u6700\u4f4e\u200b\u5e93\u5b58\u200b\u5e94\u5f53\u200b\u4e3a\u200b\u96f6\u200b\uff0c\u200b\u5373\u200b\\(R = \\lambda\\tau\\)\u200b\u65f6\u200b\u5e94\u5f53\u200b\u91cd\u65b0\u200b\u8ba2\u8d27\u200b\uff0c\\(R\\)\u200b\u79f0\u4e3a\u200b\u91cd\u200b\u8ba2\u8d27\u200b\u70b9\u200b\u3002</p> <p>\u200b\u5f53\u200b\\(\\tau &gt; T\\)\u200b\u65f6\u200b\uff0c\u200b\u7531\u4e8e\u200b\u6a21\u578b\u200b\u9762\u5bf9\u200b\u5468\u671f\u6027\u200b\u7684\u200b\u9700\u6c42\u200b\uff0c\u200b\u53ea\u200b\u9700\u200b\u6839\u636e\u200b\u63d0\u524d\u200b\u671f\u200b\\(\\tau' = \\tau\\mod T\\)\u200b\u8ba1\u7b97\u200b\u91cd\u200b\u8ba2\u8d27\u200b\u70b9\u200b\u3002</p>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_6","title":"\u654f\u611f\u6027\u200b\u5206\u6790","text":"<p>\u200b\u654f\u611f\u6027\u200b\u5206\u6790\u200b\u6307\u200b\\(Q^*\\)\u200b\u7684\u200b\u4f30\u8ba1\u200b\u504f\u5dee\u200b\u5bf9\u200b\u603b\u6210\u672c\u200b\u7684\u200b\u5f71\u54cd\u200b\u3002\u200b\u504f\u5dee\u200b\u4ee5\u200b\\(C(Q) / C(Q^\\ast)\\)\u200b\u8861\u91cf\u200b\uff0c\u200b\u4e3a\u200b\u4fbf\u4e8e\u200b\u5206\u6790\u200b\uff0c\u200b\u8bbe\u200b\u8fb9\u9645\u200b\u8ba2\u8d27\u200b\u6210\u672c\u200b\\(c = 0\\)\uff0c\u200b\u5219\u200b\u603b\u6210\u672c\u200b\u7684\u200b\u504f\u5dee\u200b\u91cf\u200b\\(C(Q) / C(Q^\\ast)\\)\u200b\u4e3a\u200b\uff1a</p> \\[ \\begin{aligned}     \\frac{C(Q)}{C(Q^\\ast)} &amp;= \\frac{\\frac{K\\lambda}{Q}  + \\frac{hQ}{2}}{\\sqrt{2K\\lambda h}} \\\\     &amp;= \\sqrt{\\frac{K\\lambda}{2h}}\\frac{1}{Q} + \\sqrt{\\frac{h}{2K\\lambda}}Q \\\\     &amp;= \\frac{1}{2}\\left(\\frac{Q}{Q^\\ast} + \\frac{Q^\\ast}{Q}\\right) \\end{aligned} \\]"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_7","title":"\u5141\u8bb8\u200b\u7f3a\u8d27","text":"<p>\u200b\u5f53\u200b\u5141\u8bb8\u200b\u7f3a\u8d27\u200b\u65f6\u200b\uff0c\u200b\u8bbe\u200b\u7f3a\u8d27\u200b\u6210\u672c\u200b\u4e3a\u200b\\(p\\)\uff0c\u200b\u6700\u5927\u200b\u7f3a\u8d27\u91cf\u200b\\(xQ\\)\uff0c\u200b\u4e00\u4e2a\u200b\u5468\u671f\u200b\u5185\u200b\u5e93\u5b58\u200b\u6c34\u5e73\u200b\u53d8\u5316\u200b\u5982\u4e0b\u200b\u56fe\u200b\u6240\u793a\u200b\uff1a</p> <p></p> <p>\u200b\u6210\u672c\u200b\u51fd\u6570\u200b\u4e3a\u200b</p> \\[ C(Q, x) = \\frac{C}{T} = \\frac{(1-x)^2 Qh + x^2Qp}{2} + \\frac{K\\lambda}{Q} + \\lambda c \\] <p>\u200b\u5206\u522b\u200b\u6c42\u200b\\(C\\)\u200b\u5173\u4e8e\u200b\\(Q, x\\)\u200b\u7684\u200b\u504f\u200b\u5bfc\u6570\u200b\uff0c\u200b\u6709\u200b</p> \\[ \\begin{aligned}   \\frac{\\partial C}{\\partial Q} &amp;= \\frac{(1-x)^2h + x^2p}{2} - \\frac{K\\lambda}{Q^2} \\\\   \\frac{\\partial C}{\\partial x} &amp;= xpQ + (x-1)hQ \\end{aligned} \\] <p>\u200b\u89e3\u65b9\u7a0b\u200b\\(\\partial C/\\partial x =0\\)\u200b\u5f97\u5230\u200b\\(x^* = h/(h+p)\\)\uff0c\u200b\u4ee3\u5165\u200b\u65b9\u7a0b\u200b\\(\\partial C/\\partial Q =0\\)\uff0c\u200b\u89e3\u5f97\u200b\uff1a</p> \\[ Q^* = \\sqrt{\\frac{2K\\lambda}{(1-x)^2h+x^2p}} = \\sqrt{\\frac{2K\\lambda(h+p)}{hp}} \\] <p>\u200b\u82e5\u200b\u5b9a\u4e49\u200b\\(h' = hp/(h+p)\\)\u3002\u200b\u5219\u200b\u6700\u4f18\u200b\u8ba2\u8d27\u91cf\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u7c7b\u4f3c\u200b\u4e8e\u200bEOQ\u200b\u7684\u200b\u5f62\u5f0f\u200b\uff0c\u200b\u5373\u200b\\(\\sqrt{\\frac{2K\\lambda}{h'}}\\)</p>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_8","title":"\u6709\u9650\u200b\u751f\u4ea7\u7387\u200b\u6a21\u578b","text":"<p>\u200b\u5728\u200b\u6709\u9650\u200b\u751f\u4ea7\u7387\u200b\u6a21\u578b\u200b\u4e2d\u200b\uff0c\u200b\u4ea7\u54c1\u200b\u901a\u8fc7\u200b\u751f\u4ea7\u200b\u800c\u200b\u4e0d\u662f\u200b\u8ba2\u8d2d\u200b\u83b7\u5f97\u200b\u3002\u200b\u4ea7\u54c1\u200b\u7684\u200b\u751f\u4ea7\u7387\u200b\u4e3a\u200b\\(P &gt; \\lambda\\)\uff0c\u200b\u751f\u4ea7\u7ebf\u200b\u7684\u200b\u542f\u52a8\u200b\u6210\u672c\u200b\u4e3a\u200b\\(K\\)\uff0c\u200b\u4ea7\u54c1\u200b\u7684\u200b\u5355\u4f4d\u200b\u751f\u4ea7\u6210\u672c\u200b\u4e3a\u200b\\(c\\)\u3002</p> <p>\u200b\u751f\u4ea7\u6210\u672c\u200b\uff08\u200b\u539f\u200b\u8ba2\u8d27\u200b\u6210\u672c\u200b\uff09\u200b\u90e8\u5206\u200b\u7684\u200b\u5904\u7406\u200b\u4e0e\u200bEOQ\u200b\u6a21\u578b\u200b\u76f8\u540c\u200b\u3002\u200b\u4f46\u200b\u6709\u9650\u200b\u751f\u4ea7\u7387\u200b\u6a21\u578b\u200b\u7684\u200b\u5e73\u5747\u200b\u5e93\u5b58\u200b\u6c34\u5e73\u200b\u4e0e\u200bEOQ\u200b\u6a21\u578b\u200b\u4e0d\u540c\u200b\u3002</p> <ul> <li>\u200b\u4e00\u4e2a\u200b\u5468\u671f\u200b\u4e2d\u200bEOQ\u200b\u6a21\u578b\u200b\u7684\u200b\u5e73\u5747\u200b\u5e93\u5b58\u200b\u6c34\u5e73\u200b\uff1a\\(Q/2\\)</li> <li>\u200b\u4e00\u4e2a\u200b\u5468\u671f\u200b\u4e2d\u200b\u6709\u9650\u200b\u751f\u4ea7\u7387\u200b\u6a21\u578b\u200b\u7684\u200b\u5e73\u5747\u200b\u5e93\u5b58\u200b\u6c34\u5e73\u200b\uff1a\\(Q(P-\\lambda)/2P\\)</li> </ul> <p></p> <p>\u200b\u56e0\u6b64\u200b\u6709\u9650\u200b\u751f\u4ea7\u7387\u200b\u6a21\u578b\u200b\u7684\u200b\u6210\u672c\u200b\u51fd\u6570\u200b\u4e3a\u200b</p> \\[ C(Q) = \\frac{C}{T} = \\frac{K\\lambda}{Q} + \\frac{hQ(P-\\lambda)}{2P} + \\lambda c \\] <p>\u200b\u6700\u4f18\u200b\u8ba2\u8d27\u91cf\u200b\u4e3a\u200b</p> \\[ Q^\\ast = \\sqrt{\\frac{2PK\\lambda}{h(P-\\lambda)}} \\] <p>\u200b\u82e5\u200b\u5b9a\u4e49\u200b\\(h' = (P-\\lambda) / P\\)\uff0c\u200b\u5219\u200b\u6700\u4f18\u200b\u8ba2\u8d27\u91cf\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u7c7b\u4f3c\u200b\u4e8e\u200bEOQ\u200b\u7684\u200b\u5f62\u5f0f\u200b\uff0c\u200b\u5373\u200b\\(\\sqrt{\\frac{2K\\lambda}{h'}}\\)</p>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_9","title":"\u6570\u91cf\u200b\u6298\u6263\u200b\u6a21\u578b","text":"<p>\u200b\u5728\u200b\u6570\u91cf\u200b\u6298\u6263\u200b\u6a21\u578b\u200b\u4e2d\u200b\uff0c\u200b\u5f53\u200b\u6bcf\u4e2a\u200b\u5468\u671f\u200b\u7684\u200b\u8ba2\u8d27\u91cf\u200b\u8fbe\u5230\u200b\u4e00\u5b9a\u200b\u6c34\u5e73\u200b\u65f6\u200b\uff0c\u200b\u4f1a\u200b\u83b7\u5f97\u200b\u8fb9\u9645\u200b\u8ba2\u8d27\u200b\u6210\u672c\u200b\u7684\u200b\u6298\u6263\u200b\uff0c\u200b\u6298\u6263\u200b\u5206\u4e3a\u200b\u4e24\u79cd\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5373\u200b\u5168\u91cf\u200b\u6298\u6263\u200b\u4e0e\u200b\u589e\u91cf\u200b\u6298\u6263\u200b\u3002</p> <ul> <li>\u200b\u5168\u91cf\u200b\u6298\u6263\u200b\u6307\u5f53\u200b\u8ba2\u8d2d\u200b\u91cf\u200b\u8d85\u8fc7\u200b\u4e34\u754c\u503c\u200b\u65f6\u200b\uff0c\u200b\u5c06\u200b\u6298\u6263\u200b\u5e94\u7528\u200b\u4e8e\u200b\u5168\u90e8\u200b\u7684\u200b\u8ba2\u8d2d\u200b\u6570\u91cf\u200b\u4e0a\u200b\u3002</li> <li>\u200b\u589e\u91cf\u200b\u6298\u6263\u200b\u6307\u5f53\u200b\u8ba2\u8d2d\u200b\u91cf\u200b\u8d85\u8fc7\u200b\u4e34\u754c\u503c\u200b\u65f6\u200b\uff0c\u200b\u5c06\u200b\u6298\u6263\u200b\u5e94\u7528\u200b\u4e8e\u200b\u8d85\u8fc7\u200b\u4e34\u754c\u503c\u200b\u7684\u200b\u90e8\u5206\u200b\u4e0a\u200b\u3002</li> </ul> <p>\u200b\u6570\u91cf\u200b\u6298\u6263\u200b\u6a21\u578b\u200b\u9488\u5bf9\u200b\u7684\u200b\u662f\u200b\u5e93\u5b58\u200b\u6210\u672c\u200b\u7684\u200b\u6539\u53d8\u200b\uff0c\u200b\u8fb9\u9645\u200b\u8ba2\u8d27\u200b\u6210\u672c\u200b\u7684\u200b\u6539\u53d8\u200b\u4e0d\u4f1a\u200b\u5f71\u54cd\u200bEOQ\u200b\u6a21\u578b\u200b\u7684\u200b\u6700\u4f18\u200b\u8ba2\u8d27\u91cf\u200b\u3002</p> <p>\u200b\u901a\u8fc7\u200b\u6570\u91cf\u200b\u6298\u6263\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8bf1\u5bfc\u200b\u96f6\u552e\u5546\u200b\u63d0\u9ad8\u200b\u8ba2\u8d27\u200b\u6279\u91cf\u200b\uff0c\u200b\u4ece\u800c\u200b\u5b9e\u73b0\u200b\u8d85\u91cf\u200b\u5e93\u5b58\u200b\u7684\u200b\u8f6c\u79fb\u200b\u3002</p>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_10","title":"\u5168\u91cf\u200b\u6298\u6263\u200b\u7684\u200b\u6c42\u89e3\u200b\u8fc7\u7a0b","text":"<p>\u200b\u6839\u636e\u200bEOQ\u200b\u6a21\u578b\u200b\u8ba1\u7b97\u200b\u51fa\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u6298\u6263\u200b\u4ef7\u683c\u200b\\(h_i\\)\u200b\u4e0b\u200b\u5bf9\u5e94\u200b\u7684\u200b\u6700\u4f18\u200b\u8ba2\u8d27\u91cf\u200b\\(Q^*_i\\)\uff0c\u200b\u786e\u5b9a\u200b\u6700\u5927\u200b\u53ef\u884c\u200b\u7684\u200b\u6700\u4f18\u200b\u8ba2\u8d27\u91cf\u200b\\(Q^\\ast = \\max Q^\\ast_i\\)\u3002\u200b\u53d6\u8be5\u200b\u6298\u6263\u200b\u70b9\u200b\u4ee5\u53ca\u200b\u9ad8\u4e8e\u200b\u8be5\u200b\u6298\u6263\u200b\u70b9\u200b\u7684\u200b\u6240\u6709\u200b\u6298\u6263\u200b\u70b9\u4e3a\u200b\u5019\u9009\u200b\uff0c\u200b\u5373\u200b\\(I = \\{i | i\\geq \\arg\\max_i Q^\\ast_i\\}\\)\u3002\u200b\u5206\u522b\u200b\u6bd4\u8f83\u200b\u6bcf\u4e2a\u200b\u6298\u6263\u200b\u70b9\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5e73\u5747\u200b\u6210\u672c\u200b\uff0c\u200b\u6210\u672c\u200b\u6700\u4f4e\u200b\u7684\u200b\\(Q\\)\u200b\u5373\u200b\u4e3a\u200b\u6700\u4f18\u200b\u8ba2\u8d27\u200b\u6279\u91cf\u200b\u3002</p> <p></p>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_11","title":"\u589e\u91cf\u200b\u6298\u6263\u200b\u7684\u200b\u6c42\u89e3\u200b\u8fc7\u7a0b","text":"<p>\u200b\u6839\u636e\u200bEOQ\u200b\u6a21\u578b\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u51fa\u200b\u6240\u6709\u200b\u6210\u672c\u200b\u66f2\u7ebf\u200b\u6700\u4f4e\u70b9\u200b\u5bf9\u5e94\u200b\u7684\u200b\\(Q\\)\u200b\u503c\u200b\uff0c\u200b\u5e76\u200b\u7b5b\u9009\u200b\u51fa\u200b\u6ee1\u8db3\u200b\u589e\u91cf\u200b\u6298\u6263\u200b\u7ea6\u675f\u200b\u7684\u200b\u8ba2\u8d27\u91cf\u200b\uff0c\u200b\u5e73\u5747\u200b\u6210\u672c\u200b\u6700\u4f4e\u200b\u7684\u200b\\(Q\\)\u200b\u5373\u200b\u4e3a\u200b\u6700\u4f18\u200b\u8ba2\u8d27\u200b\u6279\u91cf\u200b\u3002</p> <p></p>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_12","title":"\u77ed\u671f\u200b\u6298\u6263","text":"<p>\u200b\u77ed\u671f\u200b\u6298\u6263\u200b\u5373\u200b\u751f\u4ea7\u5546\u200b\u53ea\u200b\u5728\u200b\u4e00\u4e2a\u200b\u5468\u671f\u200b\u4e2d\u200b\u63d0\u4f9b\u200b\u6298\u6263\u200b\u3002\u200b\u4e3a\u200b\u7b80\u5316\u200b\u5904\u7406\u200b\uff0c\u200b\u6298\u6263\u200b\u65f6\u200b\u96f6\u552e\u5546\u200b\u7684\u200b\u8d2d\u4e70\u91cf\u200b\\(Q_d\\)\u200b\u4e3a\u200bEOQ\u200b\u6700\u4f18\u200b\u8ba2\u8d27\u91cf\u200b\\(Q^*\\)\u200b\u7684\u200b\u6574\u6570\u200b\\(k\\)\u200b\u500d\u200b\u3002</p>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#eoq_1","title":"\u8d44\u6e90\u200b\u7ea6\u675f\u200b\u4e0b\u200b\u7684\u200bEOQ\u200b\u6a21\u578b","text":"<p>EOQ\u200b\u6a21\u578b\u200b\u4ec5\u200b\u9002\u7528\u200b\u4e8e\u200b\u4e00\u79cd\u200b\u4ea7\u54c1\u200b\u7684\u200b\u6700\u4f18\u200b\u8ba2\u8d27\u200b\u60c5\u5f62\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u5904\u7406\u200b\u591a\u79cd\u4ea7\u54c1\u200b\u9700\u8981\u200b\u534f\u8c03\u200b\u8ba2\u8d2d\u200b\u7684\u200b\u95ee\u9898\u200b\u3002\u200b\u5728\u200b\u591a\u79cd\u4ea7\u54c1\u200b\u7684\u200b\u8ba2\u8d2d\u200b\u573a\u666f\u200b\u4e0b\u200b\uff0c\u200b\u4e0d\u540c\u200b\u7684\u200b\u4ea7\u54c1\u200b\u6709\u200b\u4e0d\u540c\u200b\u7684\u200b\u9700\u6c42\u200b\u7387\u200b\uff0c\u200b\u9700\u8981\u200b\u5728\u200b\u4e0d\u540c\u200b\u4ea7\u54c1\u200b\u7684\u200bEOQ\u200b\u6700\u4f18\u200b\u8ba2\u8d27\u91cf\u200b\u8fdb\u884c\u200b\u5e73\u8861\u200b\u3002</p> <p>\u200b\u6a21\u578b\u200b\u5047\u8bbe\u200b\uff1a\u200b\u90e8\u5206\u200b\u56fa\u5b9a\u200b\u8ba2\u8d27\u200b\u6210\u672c\u200b\u4e0e\u200b\u4ea7\u54c1\u79cd\u7c7b\u200b\u6709\u5173\u200b\u2014\u2014\\(K_i\\)\uff0c\u200b\u90e8\u5206\u200b\u56fa\u5b9a\u200b\u8ba2\u8d27\u200b\u6210\u672c\u200b\u4e0e\u200b\u4ea7\u54c1\u79cd\u7c7b\u200b\u65e0\u5173\u200b\u2014\u2014\\(K\\)\u3002</p> <p>\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u5206\u4e3a\u200b\u8d44\u91d1\u200b\u7ea6\u675f\u200b\u4e0e\u200b\u5e93\u5b58\u200b\u7a7a\u95f4\u200b\u7ea6\u675f\u200b\u3002\u200b\u5982\u200b</p> \\[ \\left\\{ \\begin{aligned}   C&amp;\\geq \\sum_{i=1}^n c_iQ_i \\\\   Q_i^{\\mathrm{EOQ}} &amp;= \\sqrt{\\frac{2K_i\\lambda_i}{h_i}} \\end{aligned} \\right. \\] <p>\u200b\u5bf9\u4e8e\u200b\u7d27\u200b\u7ea6\u675f\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u5c06\u200b\u7ea6\u675f\u200b\u5199\u4f5c\u200b\\(\\sum_{i=1}^n c_iQ_i = C\\)\uff0c\u200b\u5f15\u5165\u200b\u62c9\u683c\u6717\u200b\u65e5\u200b\u7b97\u5b50\u200b\\(\\theta\\)\uff0c\u200b\u5c06\u200b\u6b8b\u5dee\u200b\u9879\u200b\u4e0e\u200b\u4e58\u200b\u5b50\u9879\u200b\u76f8\u52a0\u200b\uff0c\u200b\u5f97\u5230\u200b\u62c9\u683c\u6717\u200b\u65e5\u200b\u4f18\u5316\u200b\u7684\u200b\u76ee\u6807\u200b\u51fd\u6570\u200b\\(C(Q_1, \\cdots, Q_n, \\theta)\\)</p> \\[ \\min C(Q_1, \\cdots, Q_n, \\theta) = \\sum_{i=1}^n \\left(\\frac{h_iQ_i}{2} + \\frac{K_i\\lambda_i}{Q_i}\\right) + \\theta\\left(\\sum_{i=1}^n c_iQ_i - C\\right) \\] <p>\u200b\u6700\u4f18\u200b\u6761\u4ef6\u200b\u4e0b\u200b\uff0c\u200b\u6709\u200b\\(\\partial C/\\partial \\theta = \\partial C/\\partial Q_i = 0\\)\uff0c\u200b\u5373\u200b</p> \\[ \\begin{aligned}   \\sum_{i=1}^n c_iQ_i^* - C &amp;= 0 \\\\   \\frac{h_i}{2} - \\frac{K_i\\lambda_i}{ {Q_i^*}^2} + \\theta c_i &amp;= 0 \\end{aligned} \\] <p>\u200b\u89e3\u5f97\u200b\\(Q_i^*\\)\uff0c\u200b\u4ee3\u5165\u200b\u7ea6\u675f\u6761\u4ef6\u200b\u5373\u53ef\u200b\u89e3\u5f97\u200b\u6700\u4f18\u200b\u7684\u200b\\(\\theta\\)</p> \\[ \\sum_{i=q}^n c_i\\sqrt{\\frac{2K_i\\lambda_i}{h_i + 2\\theta c_i}} = C \\] <p>\u200b\u4e0d\u59a8\u200b\u8bbe\u200b\\(h_i / c_i = I, \\forall i=1, \\cdots, n\\)\u3002\u200b\u5219\u200b\\(Q_i^* = \\sqrt{\\frac{2K_i\\lambda_i}{h_i}}\\sqrt{\\frac{1}{1 + 2\\theta / I}}\\)\uff0c\u200b\u6ce8\u610f\u200b\u5230\u200b\\(Q_{i}^{\\mathrm{EOQ}} = \\sqrt{\\frac{2K_i\\lambda_i}{h_i}}\\)\uff0c\u200b\u5219\u200b</p> \\[ \\left\\{ \\begin{aligned}   Q_i^* &amp;= \\sqrt{\\frac{1}{1 + 2\\theta / I}}Q_{i}^{\\mathrm{EOQ}} \\\\   C &amp;= \\sum_{i=1}^n c_iQ_i^* \\end{aligned} \\right. \\] <p>\u200b\u89e3\u5f97\u200b</p> \\[ \\theta = \\frac{\\sum_{i=1}^n \\left(c_iQ_i^{\\mathrm{EOQ}}\\right) - c}{2c / I} \\]"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#eoq_2","title":"\u591a\u200b\u4ea7\u54c1\u200bEOQ\u200b\u6a21\u578b","text":"<p>\u200b\u5728\u200b\u591a\u200b\u4ea7\u54c1\u200bEOQ\u200b\u6a21\u578b\u200b\u4e2d\u200b\uff0c\u200b\u7cfb\u7edf\u200b\u9700\u8981\u200b\u9762\u5bf9\u200b\\(U = \\{1, \\cdots, n\\}\\)\u200b\u4e2a\u200b\u4ea7\u54c1\u200b\u7684\u200b\u9700\u6c42\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u4ea7\u54c1\u200b\\(i\\)\u200b\u6709\u200b\u5982\u4e0b\u200b\u7684\u200b\u53c2\u6570\u200b\uff1a</p> <ul> <li>\u200b\u9644\u52a0\u200b\u8ba2\u8d27\u200b\u6210\u672c\u200b\\(K_i\\)\u3001\u200b\u8fb9\u9645\u200b\u8ba2\u8d27\u200b\u6210\u672c\u200b\\(c_i\\)</li> <li>\u200b\u4ee5\u200b\u5229\u7387\u200b\u5f62\u5f0f\u200b\u8868\u793a\u200b\u7684\u200b\u5e93\u5b58\u200b\u6210\u672c\u200b\\(h_i = I_ic_i\\)</li> <li>\u200b\u9700\u6c42\u200b\u7387\u200b\\(\\lambda_i\\)</li> <li>\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u7f3a\u8d27\u200b</li> </ul> <p>\u200b\u5411\u200b\u91cf\u5316\u200b\u8868\u793a\u200b\u7684\u200b\u5404\u4e2a\u200b\u53c2\u6570\u200b\u5206\u522b\u200b\u4e3a\u200b\\(\\boldsymbol{K}, \\boldsymbol{c}, \\boldsymbol{h}, \\boldsymbol{I}, \\boldsymbol{\\lambda}\\)\u3002\u200b\u53e6\u5916\u200b\uff0c\u200b\u6709\u200b\u5168\u5c40\u200b\u56fa\u5b9a\u200b\u8ba2\u8d27\u200b\u6210\u672c\u200b\\(K\\)\u3002\u200b\u5728\u200b\u591a\u200b\u4ea7\u54c1\u200bEOQ\u200b\u6a21\u578b\u200b\u4e2d\u200b\uff0c\u200b\u5047\u8bbe\u200b\u67d0\u6b21\u200b\u7684\u200b\u8ba2\u8d27\u91cf\u200b\u4e3a\u200b\\(\\boldsymbol Q = (Q_i)_{n}\\)\uff0c\u200b\u5219\u200b\u8ba2\u8d27\u200b\u6210\u672c\u200b\u4e3a\u200b</p> \\[ \\begin{aligned}   G(\\boldsymbol Q) =&amp; K + \\sum_{i=1}^n K_i\\boldsymbol{1}_{\\{Q_i &gt; 0\\}} &amp; \\text{Setup cost} \\\\   &amp;+\\sum_{i=1}^n c_iQ_i &amp; \\text{Marginal cost} \\end{aligned} \\] <p>\u200b\u73b0\u6709\u200b\u4e09\u79cd\u200b\u8ba2\u8d27\u200b\u65b9\u6cd5\u200b</p> <ol> <li>\u200b\u72ec\u7acb\u200b\u8ba2\u8d27\u200b\u2014\u2014\u200b\u6bcf\u6b21\u200b\u8ba2\u8d2d\u200b\u90fd\u200b\u9700\u8981\u200b\u591a\u200b\u82b1\u8d39\u200b\\(K\\)\u200b\u7684\u200b\u56fa\u5b9a\u200b\u8ba2\u8d27\u200b\u6210\u672c\u200b</li> <li>\u200b\u5b8c\u6574\u200b\u8ba2\u8d27\u200b\u2014\u2014\u200b\u5bf9\u4e8e\u200b\u9700\u6c42\u200b\u7387\u4e0d\u9ad8\u200b\u7684\u200b\u4ea7\u54c1\u200b\uff0c\u200b\u8ba2\u8d27\u200b\u8fc7\u4e8e\u200b\u9891\u7e41\u200b\u5bfc\u81f4\u200b\u989d\u5916\u200b\u82b1\u8d39\u200b\u4e86\u200b\\(K_i\\)\u200b\u7684\u200b\u9644\u52a0\u200b\u8ba2\u8d27\u200b\u6210\u672c\u200b</li> <li>\u200b\u8054\u5408\u200b\u8ba2\u8d27\u200b\uff1a\u200b\u4e0d\u200b\u9700\u8981\u200b\u8ba2\u8d2d\u200b\u6240\u6709\u200b\u7c7b\u578b\u200b\u7684\u200b\u4ea7\u54c1\u200b</li> </ol> <p>\u200b\u4ee5\u4e0b\u200b\u5bf9\u200b\u4e09\u79cd\u200b\u8ba2\u8d27\u200b\u65b9\u6cd5\u200b\u8fdb\u884c\u200b\u8ba8\u8bba\u200b</p>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_13","title":"\u72ec\u7acb\u200b\u8ba2\u8d27","text":"<p>\u200b\u72ec\u7acb\u200b\u8ba2\u8d27\u200b\u4e0b\u200b\uff0c\u200b\u6bcf\u79cd\u200b\u4ea7\u54c1\u200b\u6309\u200b\u5176\u200b\u5bf9\u5e94\u200b\u7684\u200bEOQ\u200b\u8ba2\u8d27\u91cf\u200b\u8fdb\u884c\u200b\u8ba2\u8d27\u200b\uff0c\u200b\u5219\u200b\u5e73\u5747\u200b\u6210\u672c\u200b</p> \\[ G^* = \\sum_{i=1}^nG_i^* = \\sum_{i=1}^n\\sqrt{2{K + K_i}\\lambda_i h_i} \\]"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_14","title":"\u5b8c\u6574\u200b\u8ba2\u8d27","text":"<p>\u200b\u5b8c\u6574\u200b\u8ba2\u8d27\u200b\u4e0b\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5468\u671f\u200b\u5185\u200b\u90fd\u200b\u9700\u8981\u200b\u8ba2\u8d2d\u200b\u6240\u6709\u200b\u4ea7\u54c1\u200b\uff0c\u200b\u8bbe\u200b\u8ba2\u8d27\u91cf\u200b\u4e3a\u200b\\(\\boldsymbol{Q} = T\\boldsymbol\\lambda\\)\uff0c\u200b\u7c7b\u6bd4\u200b\u4e8e\u200bEOQ\u200b\u6a21\u578b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u603b\u6210\u672c\u200b\u4e3a\u200b</p> \\[ G(Q) = \\frac{K + \\sum_{i} K_i}{T} + \\boldsymbol{c}^\\top\\boldsymbol{\\lambda} + \\frac{T\\boldsymbol{h}^\\top\\boldsymbol \\lambda}{2} \\] <p>\u200b\u8f6c\u5316\u200b\u4e3a\u5355\u200b\u4ea7\u54c1\u200bEOQ\u200b\u95ee\u9898\u200b\uff0c\u200b\u6700\u4f18\u200b\u89e3\u4e3a\u200b</p> \\[ \\begin{aligned}   T^* &amp;= \\sqrt{\\frac{2\\left(K + \\sum_{i} K_i\\right)}{\\boldsymbol{h}^\\top \\boldsymbol{\\lambda}}} \\\\   G^* &amp;= \\sqrt{2\\left(K + \\sum_{i} K_i\\right)\\boldsymbol{h}^\\top \\boldsymbol{\\lambda}} \\\\ \\end{aligned} \\]"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_15","title":"\u8054\u5408\u200b\u8ba2\u8d27","text":"<p>\u200b\u8054\u5408\u200b\u8ba2\u8d27\u200b\u6761\u4ef6\u200b\u4e0b\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u8ba2\u8d27\u200b\u4e0d\u9700\u200b\u5305\u542b\u200b\u6240\u6709\u200b\u7c7b\u578b\u200b\u7684\u200b\u4ea7\u54c1\u200b\uff0c\u200b\u4f46\u200b\u9700\u6c42\u91cf\u200b\u6700\u9ad8\u200b\u7684\u200b\u4ea7\u54c1\u200b\u5fc5\u7136\u200b\u5728\u200b\u6bcf\u4e2a\u200b\u8ba2\u5355\u200b\u4e2d\u200b\u90fd\u200b\u51fa\u73b0\u200b\uff0c\u200b\u56e0\u6b64\u200b\uff0c\u200b\u9996\u5148\u200b\u8003\u8651\u200bEOQ\u200b\u6a21\u578b\u200b\u4e0b\u200b\u4ea7\u54c1\u200b\u7684\u200b\u8ba2\u8d27\u200b\u9891\u7387\u200b\uff1a</p> \\[ n_i = \\frac{1}{T_i} = \\sqrt{\\frac{h_i\\lambda_i}{(K + K_i)}} \\] <p>\u200b\u4ee5\u200b\u8ba2\u8d27\u200b\u6700\u200b\u9891\u7e41\u200b\u7684\u200b\u4ea7\u54c1\u200b\\(i^\\ast = \\arg\\max\\limits_{i} n_i\\)\u200b\u5bf9\u5e94\u200b\u7684\u200b\u8ba2\u8d27\u200b\u9891\u7387\u200b\\(\\bar n = n_{i^\\ast}\\)\u3001\u200b\u8ba2\u8d27\u200b\u5468\u671f\u200b\\(\\bar T = T_{i^\\ast}\\)\u200b\u4e3a\u200b\u57fa\u51c6\u200b\uff0c\u200b\u8003\u8651\u200b\u5176\u4ed6\u200b\u7c7b\u578b\u200b\u4ea7\u54c1\u200b\u7684\u200b\u8ba2\u8d27\u200b\u9891\u7387\u200b\uff1a</p> \\[ m_i = \\left\\lceil\\frac{\\bar n}{n_i}\\right\\rceil \\] <p>\\(m_i\\)\u200b\u8868\u793a\u200b\u4ea7\u54c1\u200b\\(i\\)\u200b\u7684\u200b\u8ba2\u8d2d\u200b\u5468\u671f\u200b\u4e3a\u200b\\(m_i\\bar T_i\\)\uff0c\u200b\u5373\u200b\u6700\u200b\u9891\u7e41\u200b\u8ba2\u5355\u200b\u5468\u671f\u200b\u7684\u200b\\(m_i\\)\u200b\u500d\u200b\uff0c\u200b\u5219\u200b\u4e00\u4e2a\u200b\u8ba2\u8d27\u200b\u5468\u671f\u200b\u5185\u200b\u7684\u200b\u6210\u672c\u200b\u4e3a\u200b</p> \\[ \\begin{aligned}   G(\\boldsymbol Q) =&amp; \\frac{1}{T}\\left(K + \\sum_i\\frac{K_i}{m_i}\\right) &amp; \\text{Setup cost} \\\\   &amp;+\\frac{h}{2}\\sum_{i}\\lambda_i m_i &amp; \\text{Marginal cost} \\end{aligned} \\] <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6700\u4f18\u200b\u8ba2\u8d27\u200b\u5468\u671f\u200b\u4e0e\u200b\u6700\u4f18\u200b\u6210\u672c\u200b\u4e3a\u200b</p> \\[ \\begin{aligned}   T^* &amp;= \\sqrt{\\frac{\\sum_{i} \\lambda_i m_i h}{2\\left(K + \\sum_i\\frac{K_i}{m_i}\\right)}} \\\\   G^* &amp;= \\sqrt{2\\left(\\sum_{i} \\lambda_i m_i h\\right)\\left(K + \\sum_i\\frac{K_i}{m_i}\\right)} \\end{aligned} \\]"},{"location":"math/operations-mamagement/inventory-control-random-demand/","title":"\u968f\u673a\u200b\u9700\u6c42\u200b\u4e0b\u200b\u7684\u200b\u5e93\u5b58\u200b\u63a7\u5236","text":"<p>\u200b\u4f18\u5316\u200b\u76ee\u6807\u200b\uff1a\u200b\u6700\u5c0f\u5316\u200b\u6210\u672c\u200b\u7684\u200b\u6570\u5b66\u200b\u671f\u671b\u200b</p>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_2","title":"\u5355\u200b\u5468\u671f\u200b\u5355\u7ea7\u200b\u2014\u2014\u200b\u62a5\u7ae5\u200b\u6a21\u578b","text":"<p>\u200b\u62a5\u7ae5\u200b\u6a21\u578b\u200b\u662f\u200b\u5355\u200b\u5468\u671f\u200b\u4e0b\u200b\u7684\u200b\u5e93\u5b58\u200b\u63a7\u5236\u200b\u95ee\u9898\u200b</p>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_3","title":"\u8bb0\u53f7","text":"<ul> <li>\\(c_o\\)\u200b\u8868\u793a\u200b\u8d85\u989d\u200b\u8ba2\u8d27\u200b\u6210\u672c\u200b\uff0c\\(c_u\\)\u200b\u8868\u793a\u200b\u7f3a\u8d27\u200b\u6210\u672c\u200b</li> <li>\\(f(\\cdot), F(\\cdot)\\)\u200b\u5206\u522b\u200b\u4e3a\u200b\u9700\u6c42\u200b\u7684\u200b\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u200b\u4e0e\u200b\u6982\u7387\u5206\u5e03\u200b\u51fd\u6570\u200b</li> <li>\\(Q\\)\u200b\u4e3a\u200b\u8ba2\u8d27\u91cf\u200b</li> <li>\\(x^+ = \\max\\{x, 0\\}\\)</li> </ul>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_4","title":"\u63a8\u5bfc","text":"<p>\u200b\u62a5\u7ae5\u200b\u6a21\u578b\u200b\u7684\u200b\u6210\u672c\u200b\u51fd\u6570\u200b\u4e3a\u200b</p> \\[ G(Q, D) = c_o\\max\\{0, Q-D\\} + c_u\\max\\{0, D-Q\\} \\] <p>\\(G(Q, D)\\)\u200b\u662f\u200b\u968f\u673a\u53d8\u91cf\u200b\\(D\\)\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4e5f\u200b\u662f\u200b\u968f\u673a\u53d8\u91cf\u200b\uff0c\u200b\u5bf9\u200b\\(D\\)\u200b\u53d6\u200b\u671f\u671b\u200b\uff0c\u200b\u6709\u200b</p> \\[ \\begin{aligned}     C(Q) &amp;= E(G(Q, D) | Q) \\\\     &amp;= \\int_{0}^\\infty G(Q, D)f(x)\\mathrm dx \\\\     &amp;= \\int_{0}^Q c_o(Q-x)f(x)\\mathrm dx + \\int_Q^\\infty c_u(x-Q)f(x)\\mathrm dx \\\\ \\end{aligned} \\] <p>\u200b\u5f53\u200b\\(C(Q)\\)\u200b\u53d6\u200b\u6781\u5c0f\u503c\u200b\u65f6\u200b\uff0c\u200b\u6709\u200b\\(\\frac{\\mathrm dC}{\\mathrm dD} = 0\\)\uff0c\u200b\u5373\u200b</p> \\[ \\begin{aligned}     \\frac{\\mathrm dC}{\\mathrm dQ} &amp;= c_o\\int_0^Q f(x)\\mathrm dx + c_u\\int_Q^\\infty -f(x)\\mathrm dx \\\\     &amp;= c_oF(Q) - c_u(1-F(Q)) \\\\     &amp;= 0 \\end{aligned} \\] <p>\u200b\u9a8c\u8bc1\u200b\uff1a\\(\\frac{\\mathrm d^2 C}{\\mathrm dQ^2} = (c_o + c_u)f(Q) &gt; 0\\)\uff0c\u200b\u56e0\u6b64\u200b\u4e3a\u200b\u6781\u5c0f\u503c\u200b\u70b9\u200b\u3002\u200b\u6b64\u65f6\u200b\\(F(Q^*) = c_u / (c_o + c_u)\\)\u3002</p> <p>\u200b\u79f0\u200b\\(c_u / (c_o + c_u)\\)\u200b\u4e3a\u200b\u5173\u952e\u200b\u6bd4\u4f8b\u200b\uff08crucial ratio\uff09</p>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_5","title":"\u5355\u200b\u5468\u671f\u200b\u6a21\u578b\u200b\u6269\u5c55","text":""},{"location":"math/operations-mamagement/inventory-control-random-demand/#_6","title":"\u79bb\u6563\u200b\u9700\u6c42\u200b\u7684\u200b\u6700\u4f18\u200b\u7b56\u7565","text":"<p>\u200b\u786e\u5b9a\u200b\\(\\max_{Q_0}, \\min_{Q_1}\\)\u200b\u6ee1\u8db3\u200b\\(Q_1 &gt; Q_0\\)\u200b\u4e14\u200b\\(F(Q_0) &lt; c_u / (c_u + c_o) &lt; F(Q_1)\\)\uff0c\u200b\u6b64\u65f6\u200b\\(Q_1\\)\u200b\u5373\u200b\u4e3a\u200b\u6700\u4f18\u200b\u7684\u200b\\(Q^*\\)\u3002\u200b\u5373\u200b\u9ad8\u4e8e\u200b\u6700\u4f18\u200b\u5173\u952e\u200b\u6bd4\u4f8b\u200b\u7684\u200b\u6700\u5c0f\u200b\u5173\u952e\u200b\u6bd4\u4f8b\u200b\u5bf9\u5e94\u200b\u7684\u200b\\(Q\\)</p>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#u","title":"\u5b58\u5728\u200b\u521d\u59cb\u200b\u5e93\u5b58\u200b\\(u\\)","text":"<p>\\(u\\)\u200b\u7684\u200b\u5b58\u5728\u200b\u4e0d\u200b\u5f71\u54cd\u200b\\(Q^*\\)\uff0c\u200b\u56e0\u6b64\u200b\uff0c\u200b\u8ba2\u8d27\u91cf\u200b\\(Q'\\)\u200b\u6ee1\u8db3\u200b</p> \\[ Q^{*\\prime} = \\max\\{Q^*-u, 0\\} \\]"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_7","title":"\u591a\u7ea7\u200b\u7cfb\u7edf","text":"<p>\u200b\u591a\u7ea7\u200b\u5e93\u5b58\u200b\u7cfb\u7edf\u200b\u53ef\u4ee5\u200b\u5206\u4e3a\u200b\u4e32\u884c\u200b\u7cfb\u7edf\u200b\u3001\u200b\u88c5\u914d\u200b\u7cfb\u7edf\u200b\u548c\u200b\u914d\u9001\u200b\u7cfb\u7edf\u200b\u3002</p> <p>\u200b\u8003\u8651\u200b\u4e00\u4e2a\u200b\u4e32\u884c\u200b\u7684\u200b\u4f9b\u5e94\u94fe\u200b\uff0c\u200b\u4f9b\u5e94\u94fe\u200b\u4e0b\u6e38\u200b\u5411\u200b\u4f9b\u5e94\u94fe\u200b\u4e0a\u6e38\u200b\u91c7\u8d2d\u200b\u4ea7\u54c1\u200b\u3002\u200b\u901a\u5e38\u200b\u91c7\u7528\u200b\u5d4c\u5957\u200b\u7b56\u7565\u200b\u7684\u200b\u65b9\u5f0f\u200b\u8fdb\u884c\u200b\u8ba2\u8d27\u200b\uff0c\u200b\u5373\u5f53\u200b\u4e0b\u6e38\u200b\u8ba2\u8d27\u200b\u65f6\u200b\uff0c\u200b\u4e0a\u6e38\u200b\u624d\u200b\u53ef\u80fd\u200b\u8fdb\u884c\u200b\u8ba2\u8d27\u200b\u3002</p>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_8","title":"\u5468\u671f\u200b\u68c0\u67e5\u200b\u6a21\u578b","text":"<p>\u200b\u5728\u200b\u5468\u671f\u200b\u68c0\u67e5\u200b\u6a21\u578b\u200b\u4e2d\u200b\uff0c\u200b\u9996\u5148\u200b\u4e0d\u200b\u8003\u8651\u200b\u56fa\u5b9a\u200b\u8ba2\u8d27\u200b\u6210\u672c\u200b\\(K\\)\u200b\u7684\u200b\u5f71\u54cd\u200b\u3002\u200b\u9700\u6c42\u200b\u5206\u4e3a\u200b\u591a\u4e2a\u200b\u5468\u671f\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5468\u671f\u200b\u7684\u200b\u9700\u6c42\u200b\u72ec\u7acb\u200b\u540c\u200b\u5206\u5e03\u200b\u3002</p>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_9","title":"\u8bb0\u53f7","text":"<ul> <li>\u200b\u5269\u4f59\u200b\u5468\u671f\u200b\u6570\u4e3a\u200b\\(n\\)</li> <li>\u200b\u6bcf\u4e2a\u200b\u5468\u671f\u200b\u7684\u200b\u9700\u6c42\u200b\u72ec\u7acb\u200b\u540c\u200b\u5206\u5e03\u200b\uff0c\u200b\u9700\u6c42\u200b\u7684\u200b\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u200b\u4e3a\u200b\\(f(\\cdot)\\)\uff0c\u200b\u6982\u7387\u5206\u5e03\u200b\u51fd\u6570\u200b\u4e3a\u200b\\(F(\\cdot)\\)\u3002</li> <li>\u200b\u5468\u671f\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8d34\u73b0\u7387\u200b\\(\\alpha\\)\u200b\u8868\u793a\u200b</li> <li>\u200b\u4e0d\u200b\u8003\u8651\u200b\u8ba2\u8d27\u200b\u63d0\u524d\u200b\u671f\u200b\uff0c\\(L=0\\)</li> <li>\\(y_i\\)\u200b\u8868\u793a\u200b\u7b2c\u200b\\(i\\)\u200b\u671f\u200b\u7ed3\u675f\u200b\u65f6\u200b\u7684\u200b\u5e93\u5b58\u200b\uff0c\\(y_0\\)\u200b\u8868\u793a\u200b\u671f\u521d\u200b\u5e93\u5b58\u200b</li> <li>\\(C_n(y_0)\\)\u200b\u8868\u793a\u200b\u7b2c\u200b\\(n\\)\u200b\u671f\u200b\u603b\u200b\u671f\u671b\u200b\u8d34\u73b0\u200b\u6210\u672c\u200b\u7684\u200b\u6700\u5c0f\u503c\u200b</li> </ul> \\[ C_n(y_0) = \\min_{y\\geq y_0}\\left\\{L(y) - cy_0 + \\alpha\\int_{0}^\\infty C_{n-1}[t(y, x)]f(x)\\mathrm dx\\right\\} \\]"},{"location":"math/operations-mamagement/inventory-control-random-demand/#q-r","title":"\u8fde\u7eed\u200b\u68c0\u67e5\u200b\u6a21\u578b\u200b\uff1a(Q, R)\u200b\u6a21\u578b","text":"<p>\u200b\u5728\u200b\u8fde\u7eed\u200b\u68c0\u67e5\u200b\u6a21\u578b\u200b\u4e2d\u200b\uff0c\u200b\u9700\u8981\u200b\u533a\u5206\u200b\u5e93\u5b58\u200b\u4f4d\u7f6e\u200b\u4e0e\u200b\u5e93\u5b58\u200b\u6c34\u5e73\u200b\u7684\u200b\u6982\u5ff5\u200b</p> <ul> <li>\u200b\u5e93\u5b58\u200b\u4f4d\u7f6e\u200b\uff08Inventory Position\uff09\uff0c\u200b\u6307\u200b\u76ee\u524d\u200b\u6301\u6709\u200b\u7684\u200b\u5e93\u5b58\u200b\u603b\u91cf\u200b\u52a0\u4e0a\u200b\u5904\u4e8e\u200b\u8ba2\u8d27\u200b\u63d0\u524d\u200b\u671f\u200b\u7684\u200b\u5e93\u5b58\u91cf\u200b</li> <li>\u200b\u5e93\u5b58\u200b\u6c34\u5e73\u200b\uff08Inventory Level\uff09\uff0c\u200b\u6307\u200b\u76ee\u524d\u200b\u6301\u6709\u200b\u7684\u200b\u5e93\u5b58\u200b\u603b\u91cf\u200b</li> </ul>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_10","title":"\u6a21\u578b\u200b\u8bbe\u5b9a\u200b\u53ca\u200b\u63a8\u5bfc","text":"<p>\\((Q, R)\\)\u200b\u6a21\u578b\u200b\u6709\u200b\u5982\u4e0b\u200b\u8bbe\u5b9a\u200b</p> <ol> <li>\u200b\u6bcf\u6b21\u200b\u8ba2\u8d27\u200b\u7684\u200b\u56fa\u5b9a\u6210\u672c\u200b\u4e3a\u200b\\(K\\)\uff0c\u200b\u8fb9\u9645\u200b\u8ba2\u8d27\u200b\u6210\u672c\u200b\u4e3a\u200b\\(c\\)\uff0c\u200b\u8ba2\u8d27\u200b\u63d0\u524d\u200b\u671f\u4e3a\u200b\\(\\tau\\)\uff1b</li> <li>\u200b\u8ba2\u8d27\u200b\u63d0\u524d\u200b\u671f\u5185\u200b\u7684\u200b\u9700\u6c42\u200b\\(D\\)\u200b\u5728\u200b\u65f6\u95f4\u200b\u4e0a\u200b\u8fde\u7eed\u200b\uff0c\u200b\u5728\u200b\u6570\u91cf\u200b\u4e0a\u200b\u670d\u4ece\u200b\u5747\u503c\u200b\u4e3a\u200b\\(\\mu\\)\u3001\u200b\u6807\u51c6\u5dee\u200b\u4e3a\u200b\\(\\sigma\\)\u200b\u7684\u200b\u67d0\u4e2a\u200b\u6982\u7387\u5206\u5e03\u200b\\(f(\\cdot), F(\\cdot)\\)\uff1b\\(\\lambda\\)\u200b\u4e3a\u200b\u5355\u4f4d\u200b\u65f6\u95f4\u200b\u7684\u200b\u671f\u671b\u200b\u9700\u6c42\u200b\u7387\u200b\uff1b</li> <li>\u200b\u5355\u4f4d\u200b\u65f6\u95f4\u200b\u7684\u200b\u8fb9\u9645\u200b\u5e93\u5b58\u200b\u6210\u672c\u200b\u4e3a\u200b\\(h = Ic\\)\uff08\u200b\u5f0f\u200b\u4e2d\u200b\\(I\\)\u200b\u4e3a\u200b\u5229\u7387\u200b\uff09</li> <li>\u200b\u5141\u8bb8\u200b\u7f3a\u8d27\u200b\uff0c\u200b\u7f3a\u8d27\u200b\u6210\u672c\u200b\\(p\\)\uff08backorder\uff09\uff1b</li> <li>\u200b\u6a21\u578b\u200b\u7684\u200b\u51b3\u7b56\u200b\u53d8\u91cf\u200b\u4e3a\u91cd\u200b\u8ba2\u8d27\u200b\u70b9\u200b\\(R\\)\u3001\u200b\u4e0e\u200b\u8ba2\u8d27\u91cf\u200b\\(Q\\)\uff1a\u200b\u5f53\u200b\u5e93\u5b58\u200b\u6c34\u5e73\u200b\u964d\u4f4e\u200b\u81f3\u200b\\(R\\)\u200b\u65f6\u200b\uff0c\u200b\u8ba2\u8d2d\u200b\\(Q\\)\u200b\u5355\u4f4d\u200b\u7684\u200b\u5e93\u5b58\u200b\u3002\u200b\u53d7\u200b\u8ba2\u8d27\u91cf\u200b\\(Q\\)\u200b\u7684\u200b\u5f71\u54cd\u200b\uff0c\u200b\u8ba2\u8d27\u200b\u5468\u671f\u200b\\(T\\)\u200b\u6ee1\u8db3\u200b\\(Q = \\lambda T\\)</li> <li> <p>\u200b\u6a21\u578b\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u7684\u200b\u5176\u4ed6\u200b\u8bb0\u53f7\u200b\u6709\u200b\uff1a</p> <ul> <li>\\(\\mathrm{IP}\\)\uff1a\u200b\u5e93\u5b58\u200b\u4f4d\u7f6e\u200b</li> <li>\\(\\mathrm{IL}\\)\uff1a\u200b\u5e93\u5b58\u200b\u6c34\u5e73\u200b</li> <li>\\(\\mathrm{SS} = R - \\mu\\)\uff1a\u200b\u5b89\u5168\u200b\u5e93\u5b58\u200b</li> </ul> </li> </ol> <p>\\((Q, R)\\)\u200b\u6a21\u578b\u200b\u8003\u8651\u200b\u5982\u4e0b\u200b\u6765\u6e90\u200b\u7684\u200b\u6210\u672c\u200b\uff1a</p> <ol> <li> <p>\u200b\u8ba2\u8d27\u200b\u6210\u672c\u200b\uff1a\u200b\u6bcf\u6b21\u200b\u8ba2\u8d2d\u200b\\(Q\\)\u200b\u5355\u4f4d\u200b\u7684\u200b\u5e93\u5b58\u200b\uff0c\u200b\u603b\u6210\u672c\u200b\u4e3a\u200b\\(K + cQ\\)\uff1b</p> \\[ \\frac{K + cQ}{T} = \\frac{K\\lambda}{Q} + c\\lambda \\] </li> <li> <p>\u200b\u7f3a\u8d27\u200b\u6210\u672c\u200b\uff1a\u200b\u9996\u5148\u200b\u8ba1\u7b97\u200b\u6bcf\u4e2a\u200b\u5468\u671f\u200b\u5185\u200b\u7684\u200b\u671f\u671b\u200b\u7f3a\u8d27\u91cf\u200b\\(n(R)\\)\uff0c\u200b\u6709\u200b</p> \\[ n(R) = E(\\max(D - R, 0)) = \\int_R^\\infty (x-R)f(x)\\mathrm dx \\] <p>\u200b\u6839\u636e\u200b\\(n(R)\\)\uff0c\u200b\u5373\u53ef\u200b\u5f97\u5230\u200b\u4e00\u4e2a\u200b\u8ba2\u8d27\u200b\u5468\u671f\u200b\\(T\\)\u200b\u65f6\u95f4\u200b\u7684\u200b\u5e73\u5747\u200b\u7f3a\u8d27\u200b\u6210\u672c\u200b\\(\\lambda n(R)p/Q\\)</p> </li> <li> <p>\u200b\u5e93\u5b58\u200b\u6210\u672c\u200b\uff1a\u200b\u4e00\u4e2a\u200b\u5468\u671f\u200b\u5185\u200b\u671f\u671b\u200b\u7684\u200b\u5e93\u5b58\u200b\u6c34\u5e73\u200b\u53d8\u5316\u200b\u4e3a\u200b\u7ebf\u6027\u200b\uff0c\u200b\u5f53\u200b\u5e93\u5b58\u200b\u6c34\u5e73\u200b\u964d\u200b\u81f3\u200b\\(R\\)\u200b\u540e\u200b\u91cd\u65b0\u200b\u8ba2\u8d27\u200b\uff0c\u200b\u671f\u671b\u200b\u5e93\u5b58\u200b\u7ee7\u7eed\u200b\u4e0b\u964d\u200b\uff0c\u200b\u76f4\u81f3\u200b\u964d\u4f4e\u200b\u81f3\u200b\\(R - \\lambda\\tau\\)\u200b\u65f6\u200b\u8ba2\u5355\u200b\u5230\u8fbe\u200b\uff0c\u200b\u5355\u4f4d\u200b\u65f6\u95f4\u200b\u5185\u200b\u7684\u200b\u5e93\u5b58\u200b\u6210\u672c\u200b\u4e3a\u200b</p> \\[ h\\left(\\frac{Q}{2} + R - \\lambda\\tau\\right) \\] </li> </ol> <p>\u200b\u6839\u636e\u200b\u5982\u200b\u4e0a\u200b\u5206\u6790\u200b\uff0c\u200b\u5355\u4f4d\u200b\u65f6\u95f4\u200b\u5185\u200b\u7684\u200b\u671f\u671b\u200b\u6210\u672c\u200b\u4e3a\u200b</p> \\[ \\begin{aligned} G(Q, R) &amp;= h\\left(\\frac{Q}{2} + R - \\lambda\\tau\\right) + \\frac{K\\lambda}{Q} + \\frac{p\\lambda n(R)}{Q} \\\\ &amp;= \\frac{hQ}{2} + \\lambda(K + pn(R))\\frac{1}{Q} + hR - h\\lambda\\tau \\end{aligned} \\] <p>\\((Q, R)\\)\u200b\u6a21\u578b\u200b\u7684\u200b\u76ee\u6807\u200b\u5373\u200b\u4e3a\u200b\u6c42\u89e3\u200b\u51fa\u200b\u4f7f\u5f97\u200b\\(G(Q, R)\\)\u200b\u6700\u5c0f\u200b\u7684\u200b\\(Q, R\\)\u3002\u200b\u82e5\u200b\u8868\u793a\u200b\u4e3a\u200b\\((s, S)\\)\u200b\u7b56\u7565\u200b\u7684\u200b\u5f62\u5f0f\u200b\uff0c\u200b\u5373\u200b\u6709\u200b\\(s = R, S = Q + R\\)</p>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_11","title":"\u6c42\u89e3","text":"<p>\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u8fed\u4ee3\u200b\u7684\u200b\u65b9\u5f0f\u200b\u903c\u8fd1\u200b\\((Q, R)\\)\u200b\u6a21\u578b\u200b\u7684\u200b\u6700\u4f18\u200b\u89e3\u200b\uff0c\u200b\u5206\u522b\u200b\u5bf9\u200b\\(G\\)\u200b\u6c42\u200b\\(Q, R\\)\u200b\u7684\u200b\u504f\u200b\u5bfc\u6570\u200b\uff0c\u200b\u6709\u200b</p> \\[ \\begin{aligned}     \\frac{\\partial G}{\\partial Q} &amp;= \\frac{h}{2} - \\lambda (K + pn(R))\\frac{1}{Q^2} \\\\     \\frac{\\partial G}{\\partial R} &amp;= h + \\frac{\\lambda p n'(R)}{Q} \\\\     &amp;= h - \\frac{\\lambda p(1-F(R))}{Q} \\end{aligned} \\] <p>\u200b\u8fed\u4ee3\u200b\u8fc7\u7a0b\u200b\u4ece\u200bEOQ\u200b\u6a21\u578b\u200b\u7684\u200b\u6700\u4f18\u200b\u89e3\u200b\\(Q_{\\mathrm{EOQ}}^* = \\sqrt{\\frac{2K\\lambda}{h}}\\)\u200b\u5f00\u59cb\u200b\uff0c\u200b\u6c42\u200b\u51fa\u200b\u4f7f\u5f97\u200b\\(G\\)\u200b\u6700\u4f18\u200b\u7684\u200b\\(R\\)\u200b\u503c\u200b\uff0c\u200b\u518d\u200b\u5c06\u200b\\(R\\)\u200b\u4ee3\u5165\u200b\u6c42\u200b\u51fa\u200b\u6700\u4f18\u200b\u7684\u200b\\(Q\\)\u200b\u503c\u200b\uff0c\u200b\u5982\u6b64\u200b\u5faa\u73af\u200b\uff0c\\(Q, R\\)\u200b\u5373\u200b\u903c\u8fd1\u200b\u6700\u4f18\u200b\u7684\u200b\\(Q^*, R^*\\)\u200b\u53d6\u503c\u200b\uff0c\u200b\u6700\u4f18\u200b\u89e3\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u65b9\u7a0b\u200b\uff1a</p> \\[ \\begin{aligned}     Q &amp;= \\sqrt{\\frac{2\\lambda (K + pn(R))}{h}} \\\\     F(R) &amp;= 1 - \\frac{hQ}{\\lambda p} \\end{aligned} \\]"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_12","title":"\u670d\u52a1\u6c34\u5e73","text":"<p>\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\u5468\u671f\u200b\u68c0\u67e5\u200b\u6a21\u578b\u200b\uff0c\u200b\u5728\u200b\u8fde\u7eed\u200b\u68c0\u67e5\u200b\u6a21\u578b\u200b\u4e2d\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5b9a\u4e49\u200b\u7b2c\u4e00\u7c7b\u200b\u670d\u52a1\u6c34\u5e73\u200b\u4e0e\u200b\u7b2c\u4e8c\u7c7b\u200b\u670d\u52a1\u6c34\u5e73\u200b\u7b49\u200b\u6307\u6807\u200b\u3002\u200b\u82e5\u200b\u5047\u8bbe\u200b\u6bcf\u4e2a\u200b\u63d0\u524d\u200b\u671f\u5185\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u5728\u200b\u9014\u200b\u8ba2\u5355\u200b\uff1a</p>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_13","title":"\u7b2c\u4e00\u7c7b\u200b\u670d\u52a1\u6c34\u5e73","text":"<p>\u200b\u7b2c\u4e00\u7c7b\u200b\u670d\u52a1\u6c34\u5e73\u200b\u6307\u5728\u200b\u8ba2\u8d27\u200b\u63d0\u524d\u200b\u671f\u4e2d\u200b\u4e0d\u200b\u53d1\u751f\u200b\u7f3a\u8d27\u200b\u7684\u200b\u6982\u7387\u200b\uff0c\u200b\u7528\u200b\\(\\alpha\\)\u200b\u8868\u793a\u200b\u3002\u200b\u5219\u200b\u6709\u200b\\(\\alpha = F(R)\\)\u3002\u200b\u6c42\u89e3\u200b\u6ee1\u8db3\u200b\u7b2c\u4e00\u7c7b\u200b\u670d\u52a1\u6c34\u5e73\u200b\u6761\u4ef6\u200b\u7684\u200b\\((Q, R)\\)\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6309\u7167\u200b\u5982\u4e0b\u200b\u6b65\u9aa4\u200b\u8fdb\u884c\u200b</p> <ol> <li>\u200b\u6c42\u89e3\u200b\u6ee1\u8db3\u200b\\(F(R) = \\alpha\\)\u200b\u7684\u200b\\(R\\)\u200b\u503c\u200b</li> <li>\\(Q\\)\u200b\u503c\u53d6\u200bEOQ\u200b\u6700\u4f18\u200b\u503c\u200b\\(\\sqrt{\\frac{2K\\lambda}{h}}\\)\u200b\u5373\u53ef\u200b</li> </ol>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#fill-rate","title":"\u7b2c\u4e8c\u7c7b\u200b\u670d\u52a1\u6c34\u5e73\u200b\uff1aFill rate","text":"<p>\u200b\u7b2c\u4e8c\u7c7b\u200b\u670d\u52a1\u6c34\u5e73\u200b\u6307\u200b\u6ee1\u8db3\u200b\u7684\u200b\u9700\u6c42\u200b\u5360\u200b\u603b\u9700\u6c42\u200b\u7684\u200b\u6bd4\u4f8b\u200b\u6bd4\u4f8b\u200b\uff0c\u200b\u7528\u200b\\(\\beta\\)\u200b\u8868\u793a\u200b\uff0c\u200b\u7531\u4e8e\u200b\\(n(R)\\)\u200b\u4e3a\u200b\u8ba2\u8d27\u200b\u63d0\u524d\u200b\u671f\u4e2d\u200b\u7684\u200b\u671f\u671b\u200b\u7f3a\u8d27\u91cf\u200b\uff0c\u200b\u5219\u200b\u6709\u200b\\(n(R)/Q = 1 - \\beta\\)\u3002\u200b\u6839\u636e\u200b\\(F(R) = 1 - \\frac{hQ}{\\lambda p}\\)\uff0c\u200b\u53ef\u200b\u5f97\u200b</p> \\[ p = \\frac{Qh}{\\lambda(1 - F(R))} \\] <p>\u200b\u5c06\u200b\u5176\u200b\u4ee3\u5165\u200b\\(Q = \\sqrt{\\frac{2\\lambda (K + pn(R))}{h}}\\)\uff0c\u200b\u6574\u7406\u200b\u5f97\u5230\u200b</p> \\[ hQ^2 - \\frac{2hn(R)}{1-F(R)}Q - 2K\\lambda = 0 \\] <p>\u200b\u89e3\u5f97\u200b</p> \\[ Q = \\frac{n(R)}{1 - F(R)} + \\sqrt{\\frac{2K\\lambda}{h} + \\left(\\frac{n(R)}{1-F(R)}\\right)^2} \\] <p>\u200b\u53c8\u200b\u6839\u636e\u200b\u7b2c\u4e8c\u7c7b\u200b\u670d\u52a1\u6c34\u5e73\u200b\uff0c\u200b\u6709\u200b</p> \\[n(R) = (1-\\beta)Q\\] <p>\u200b\u8054\u200b\u7acb\u5373\u200b\u5f97\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u200b\u4f7f\u7528\u200b\u8fed\u4ee3\u200b\u65b9\u5f0f\u200b\u6c42\u89e3\u200b\u3002</p>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_14","title":"\u5e93\u5b58\u200b\u4f4d\u7f6e\u200b\u4e0e\u200b\u5e93\u5b58\u200b\u6c34\u5e73","text":"<p>\u200b\u5e93\u5b58\u200b\u4f4d\u7f6e\u200b\u4e0e\u200b\u5e93\u5b58\u200b\u6c34\u5e73\u200b\u7684\u200b\u5173\u7cfb\u200b\uff1a</p> \\[ \\mathrm{IL}(t+L) = \\mathrm{IP}(t) - D(t, t+L) \\] <p>\u200b\u5f0f\u200b\u4e2d\u200b\\(D(t, t+L)\\)\u200b\u4e3a\u200b\\([t, t+L]\\)\u200b\u65f6\u95f4\u200b\u5185\u200b\u7684\u200b\u9700\u6c42\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u82e5\u200b\u5df2\u77e5\u200b\\(\\mathrm{IP}(t), D(t, t+L)\\)\u200b\u7684\u200b\u5206\u5e03\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u636e\u6b64\u200b\u8ba1\u7b97\u200b\\(\\mathrm{IL}(t+L)\\)\u200b\u7684\u200b\u5206\u5e03\u200b\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u7a33\u6001\u200b\uff0c\u200b\u5728\u200b\u4efb\u610f\u200b\u65f6\u523b\u200b\\(t\\)\uff0c\u200b\u5e93\u5b58\u200b\u4f4d\u7f6e\u200b\\(\\mathrm{IP}(t), \\mathrm{IL}(t+L), D(t, t+L)\\)\u200b\u5206\u522b\u200b\u5bf9\u200b\u4e0d\u540c\u200b\u7684\u200b\\(t\\)\u200b\u72ec\u7acb\u200b\u540c\u200b\u5206\u5e03\u200b\u3002\u200b\u7531\u6b64\u200b\uff0c\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u968f\u673a\u53d8\u91cf\u200b\\(\\mathrm{IP}, \\mathrm{IL}, D(L)\\)\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5206\u5e03\u200b\u5173\u7cfb\u200b\u3002\u200b\u5df2\u77e5\u200b\\(\\mathrm{IP}\\)\u200b\u4e3a\u200b\u5747\u5300\u5206\u5e03\u200b\uff0c\u200b\u8bbe\u200b\\(D(L)\\)\u200b\u7684\u200b\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u200b\u4e3a\u200b\\(f(x;L)\\)\uff0c\u200b\u5219\u200b</p> \\[ \\begin{aligned}     F_{\\mathrm{IL}}(x) &amp;= P(\\mathrm{IL}\\leq x) \\\\     &amp;= \\int_{R}^{R+Q}P(\\mathrm{IP} = u)P(\\mathrm{IP} - \\mathrm{IL} \\geq u-x) \\mathrm du \\\\     &amp;= \\frac{1}{Q}\\int_{R}^{R+Q} P(D \\geq u-x) \\mathrm du \\\\     &amp;= \\frac{1}{Q}\\int_{R}^{R+Q} (1 - F(u-x;L)) \\mathrm du \\end{aligned} \\]"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_15","title":"\u6a21\u578b\u200b\u6269\u5c55","text":""},{"location":"math/operations-mamagement/inventory-control-random-demand/#_16","title":"\u6b63\u6001\u5206\u5e03\u200b\u9700\u6c42","text":"<p>\u200b\u5f53\u200b\u63d0\u524d\u200b\u671f\u5185\u200b\u9700\u6c42\u200b\\(D\\)\u200b\u670d\u4ece\u200b\u6b63\u6001\u5206\u5e03\u200b\\(N(\\mu, \\sigma)\\)\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u6b63\u6001\u5206\u5e03\u200b\u7684\u200b\u6807\u51c6\u200b\u635f\u5931\u200b\u51fd\u6570\u200b\\(L(z)\\)\u200b\u7b80\u5316\u200b\\(n(R)\\)\u200b\u7684\u200b\u8ba1\u7b97\u200b</p> \\[ n(R) = \\sigma L\\left(\\frac{R-\\mu}{\\sigma}\\right) = \\sigma L(z) \\] <p>\\(L(z)\\)\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\\(\\phi(z), \\varPhi(z)\\)\u200b\u8ba1\u7b97\u200b\u5f97\u5230\u200b\uff1a</p> \\[ L(z) = \\phi(z) - z + z\\varPhi(z) \\] <p>\u200b\u5c06\u200b\\(D(L) \\sim N(\\mu, \\sigma)\\)\u200b\u4ee3\u5165\u200b\u5e93\u5b58\u200b\u6c34\u5e73\u200b\u7684\u200b\u5206\u5e03\u200b\uff0c\u200b\u5f97\u5230\u200b</p> \\[ F_{\\mathrm{IL}}(x) = \\frac{1}{Q}\\int_{R}^{R+Q} \\left[1 - \\varPhi\\left(\\frac{u-x-\\mu}{\\sigma}\\right)\\right] \\mathrm du \\] <p>\u200b\u7531\u6b64\u200b\u53ef\u200b\u5f97\u200b\uff0c\u200b\u5e93\u5b58\u200b\u6c34\u5e73\u200b\u7684\u200b\u6982\u7387\u5206\u5e03\u200b\\(f_{\\mathrm{IL}}(x)\\)\u200b\u4e3a\u200b</p> \\[ f_{\\mathrm{IL}}(x) = \\frac{1}{Q}\\left[\\varPhi\\left(\\frac{R+Q-x-\\mu}{\\sigma}\\right) - \\varPhi\\left(\\frac{R-x-\\mu}{\\sigma}\\right)\\right] \\]"},{"location":"math/operations-mamagement/inventory-control-random-demand/#lost-sales","title":"Lost-sales","text":"<p>\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u7f3a\u8d27\u200b\uff0c\u200b\u5219\u200b\u5e93\u5b58\u200b\u6c34\u5e73\u200b\u4e0d\u200b\u4f4e\u4e8e\u200b0\uff0c\u200b\u6b64\u65f6\u200b\u5e73\u5747\u200b\u5e93\u5b58\u200b\u6210\u672c\u200b\u53d8\u4e3a\u200b</p> \\[ \\frac{Q}{2} + \\max(R-\\mu, 0) \\] <p>\u200b\u5176\u4f59\u200b\u6210\u672c\u200b\u4e0d\u53d8\u200b\u3002</p>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_17","title":"\u968f\u673a\u200b\u63d0\u524d\u200b\u671f","text":""},{"location":"math/operations-mamagement/inventory-control-random-demand/#one-for-one-policy","title":"One-for-one policy","text":"<p>\u200b\u5f53\u200b\u8ba2\u8d27\u200b\u6279\u91cf\u200b\\(Q = 1\\)\u200b\u65f6\u200b\uff0c\u200b\u79f0\u4e3a\u200bOne-for-one policy\uff0c\u200b\u901a\u5e38\u200b\u9002\u7528\u200b\u4e8e\u200b\u987e\u5ba2\u200b\u9700\u6c42\u200b\u7387\u200b\u8f83\u200b\u4f4e\u200b\u800c\u200b\u4ea7\u54c1\u200b\u4ef7\u503c\u200b\u8f83\u200b\u9ad8\u200b\uff0c\u200b\u5982\u200b\u6c7d\u8f66\u200b\u7b49\u200b\u5927\u5b97\u200b\u5546\u54c1\u200b\u3002\u200b\u8be5\u200b\u7b56\u7565\u200b\u4e00\u200b\u51fa\u73b0\u200b\u9700\u6c42\u200b\u5c31\u200b\u8ba2\u8d27\u200b\uff0c\u200b\u4ece\u800c\u200b\u4f7f\u5f97\u200b\u5e93\u5b58\u200b\u4f4d\u7f6e\u200b\u59cb\u7ec8\u200b\u5904\u4e8e\u200b\\(S = Q + R\\)\u3002\u200b\u4ee5\u4e0b\u200b\u8003\u8651\u200b\u9700\u6c42\u200b\u79bb\u6563\u200b\u7684\u200b\u60c5\u51b5\u200b\uff1a</p> <ol> <li>\u200b\u9700\u6c42\u200b\u670d\u4ece\u200b\u53c2\u6570\u200b\u4e3a\u200b\\(\\lambda\\)\u200b\u7684\u200b\u6cca\u677e\u200b\u5206\u5e03\u200b</li> <li>\u200b\u5141\u8bb8\u200b\u5ef6\u671f\u200b\u4ea4\u8d27\u200b</li> <li>\u200b\u5355\u4f4d\u200b\u65f6\u95f4\u200b\u7684\u200b\u5355\u4f4d\u200b\u6301\u6709\u200b\u6210\u672c\u200b\u4e0e\u200b\u5355\u4f4d\u200b\u7f3a\u8d27\u200b\u6210\u672c\u200b\u4e3a\u200b\\(h, p\\)</li> </ol> <p>\u200b\u5f53\u200b\u8ba2\u8d27\u200b\u63d0\u524d\u200b\u671f\u4e3a\u200b\u5e38\u6570\u200b\\(\\tau\\)\u200b\u65f6\u200b\uff0c\u200b\u5206\u6790\u200b\u6301\u6709\u200b\u6210\u672c\u200b\u4e0e\u200b\u7f3a\u8d27\u200b\u6210\u672c\u200b\u3002\u200b\u9996\u5148\u200b\u8003\u8651\u200b\u5e93\u5b58\u200b\u6c34\u5e73\u200b\u5904\u4e8e\u200b\u4e0d\u540c\u200b\u72b6\u6001\u200b\u7684\u200b\u6982\u7387\u200b\uff1a</p> \\[ P(\\mathrm{IL} = i) = P(D = S - i) = \\frac{e^{-\\lambda t}(\\lambda t)^{S-i}}{(S-i)!} \\] <p>\u200b\u5df2\u77e5\u200b\u5e93\u5b58\u200b\u6210\u672c\u200b\u4e3a\u200b\\(i\\)\uff0c\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5b58\u8d27\u91cf\u200b\u4e3a\u200b\\(\\max\\{S - D, 0\\}\\)\uff0c\u200b\u7f3a\u8d27\u91cf\u200b\u4e3a\u200b\\(\\max\\{D-S, 0\\}\\)\uff0c\u200b\u56e0\u6b64\u200b\u5e93\u5b58\u200b\u6210\u672c\u200b\u4e0e\u200b\u7f3a\u8d27\u200b\u6210\u672c\u200b\u5206\u522b\u200b\u4e3a\u200b</p> \\[ \\begin{aligned}     c_h &amp;= h\\sum_{D=0}^S (S-D)\\frac{e^{-\\lambda t}(\\lambda t)^{D}}{D!} \\\\     c_u &amp;= p\\sum_{D=S}^\\infty (D-S)\\frac{e^{-\\lambda t}(\\lambda t)^{D}}{D!} \\end{aligned} \\] <p>\u200b\u5f53\u200b\u8ba2\u8d27\u200b\u63d0\u524d\u200b\u671f\u200b\u968f\u673a\u200b\uff0c\u200b\u4e0d\u540c\u200b\u8ba2\u5355\u200b\u7684\u200b\u63d0\u524d\u200b\u671f\u200b\u72ec\u7acb\u200b\u540c\u200b\u5206\u5e03\u200b\u65f6\u200b\uff0c\u200b\u4e3a\u200b\u7b80\u5316\u200b\u5904\u7406\u200b\uff0c\u200b\u8bbe\u200b\u63d0\u524d\u200b\u671f\u200b\u670d\u4ece\u200b\u5747\u503c\u200b\u4e3a\u200b\\(\\tau\\)\u200b\u7684\u200b\u6307\u6570\u5206\u5e03\u200b\uff0c\u200b\u5219\u200b\u7cfb\u7edf\u200b\u7684\u200b\u72b6\u6001\u200b\u8f6c\u79fb\u200b\u56fe\u4e3a\u200b</p> <p></p> <p>\u200b\u8be5\u200b\u7cfb\u7edf\u200b\u4e3a\u751f\u200b\u706d\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u6bcf\u4e2a\u200b\u72b6\u6001\u200b\\(i &lt; S\\)\uff0c\u200b\u6709\u200b</p> \\[ \\left(\\lambda + \\frac{S-i}{\\tau}\\right)P(\\mathrm{IL} = i) = \\lambda P(\\mathrm{IL} = i+1) + \\frac{S-i+1}{\\tau} P(\\mathrm{IL} = i-1) \\] <p>\u200b\u5f53\u200b\\(i = S\\)\u200b\u65f6\u200b\uff0c\\(\\lambda P(\\mathrm{IL}  = S) = \\frac{1}{\\tau}P(\\mathrm{IL} = S-1)\\)\u3002\u200b\u7531\u6b64\u200b\u53ef\u4ee5\u200b\u63a5\u200b\u7684\u200b</p> \\[ \\begin{aligned}     P(\\mathrm{IL} = S) &amp;= e^{-\\lambda\\tau} \\\\     P(\\mathrm{IL} = i) &amp;= \\frac{(\\lambda\\tau)^{S-i}}{(S-i)!}P(\\mathrm{IL} = S) \\\\     &amp;= \\frac{(\\lambda\\tau)^{S-i}e^{-\\lambda\\tau}}{(S-i)!} \\end{aligned} \\] <p>\u200b\u5f53\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u5ef6\u671f\u200b\u4ea4\u8d27\u200b\u65f6\u200b\uff0c\\(\\mathrm{IL}\\geq 0\\)\uff0c\u200b\u60c5\u51b5\u200b\u4e0e\u200b\u5141\u8bb8\u200b\u5ef6\u671f\u200b\u4ea4\u8d27\u200b\u65f6\u200b\u53c8\u200b\u6709\u200b\u4e0d\u540c\u200b\uff0c\u200b\u4ece\u200b\u65e0\u9650\u200b\u72b6\u6001\u200b\u9a6c\u6c0f\u94fe\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u6709\u9650\u200b\u72b6\u6001\u200b\u9a6c\u6c0f\u94fe\u200b\u3002</p>"},{"location":"math/queue-theory/","title":"\u5bf9\u7b56\u200b\u3001\u200b\u51b3\u7b56\u200b\u4e0e\u200b\u6392\u961f\u200b\u8bba","text":"<p>\u200b\u8bfe\u7a0b\u200b\u76ee\u5f55\u200b\uff1a</p> <ol> <li>Chapter 1\uff0c</li> <li>Chapter 2\uff0c</li> <li>Chapter 3\uff0c</li> <li>Chapter 4\uff0c</li> <li>Chapter 5\uff0c</li> <li>Chapter 6\uff0c</li> <li>Chapter 7\uff0c</li> <li>Chapter 8\uff0c</li> <li>Chapter 9\uff0c</li> <li>Chapter 10\uff0c</li> <li>Chapter 11\uff0c</li> <li>Chapter 12\uff0c\u200b\u5e38\u89c1\u200b\u7684\u200b\u6392\u961f\u6a21\u578b\u200b</li> </ol>"},{"location":"math/queue-theory/chapter-12/","title":"\u5e38\u89c1\u200b\u6392\u961f\u6a21\u578b","text":"<p>\u200b\u4e00\u4e2a\u200b\u6392\u961f\u6a21\u578b\u200b\u4e3b\u8981\u200b\u7531\u200b\u4ee5\u4e0b\u200b\u90e8\u5206\u200b\u7ec4\u6210\u200b</p> <ul> <li>\u200b\u987e\u5ba2\u200b\uff08\u200b\u5b9e\u4f53\u200b\uff09\u200b\u5904\u7406\u200b</li> <li>\u200b\u5b9e\u4f53\u200b\u6392\u961f\u200b\u7b49\u5f85\u200b\u5904\u7406\u200b\uff08\u200b\u7cfb\u7edf\u200b\u7684\u200b\u6392\u961f\u200b\u7b56\u7565\u200b\u53ef\u80fd\u200b\u4e0d\u540c\u200b\uff0c\u200b\u635f\u5931\u200b\u5236\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u6392\u961f\u200b\u3001\u200b\u6df7\u5408\u5236\u200b\u5141\u8bb8\u200b\u6392\u200b\u6709\u9650\u200b\u957f\u5ea6\u200b\u7684\u200b\u961f\u5217\u200b\uff09</li> <li>\u200b\u5b9e\u4f53\u200b\u5904\u7406\u5b8c\u6bd5\u200b\uff0c\u200b\u79bb\u5f00\u200b\u7cfb\u7edf\u200b</li> </ul>"},{"location":"math/queue-theory/chapter-12/#_2","title":"\u6392\u961f\u6a21\u578b\u200b\u7684\u200b\u63cf\u8ff0","text":""},{"location":"math/queue-theory/chapter-12/#_3","title":"\u8fdb\u5165\u200b\u7cfb\u7edf","text":"<p>\u200b\u5047\u8bbe\u200b\u8fdb\u5165\u200b\u7cfb\u7edf\u200b\u7684\u200b\u5b9e\u4f53\u200b\u6570\u91cf\u200b\u65e0\u9650\u200b\u3002\u200b\u8003\u5bdf\u200b\u76f8\u90bb\u200b\u4e24\u4e2a\u200b\u5b9e\u4f53\u200b\u8fdb\u5165\u200b\u7cfb\u7edf\u200b\u7684\u200b\u65f6\u95f4\u5dee\u200b\uff1a</p> <ol> <li>\u200b\u5bf9\u4e8e\u200b\u5b9a\u200b\u957f\u200b\u5206\u5e03\u200b\uff0c\u200b\u5b9e\u4f53\u200b\u8fdb\u5165\u200b\u7cfb\u7edf\u200b\u7684\u200b\u65f6\u95f4\u5dee\u200b\u4e3a\u200b\u5e38\u91cf\u200b\\(t\\)\uff0c\\(t\\)\u200b\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u200b\u4e3a\u200b\uff1a</li> </ol> \\[ f(t; \\alpha)=\\left\\{ \\begin{aligned}     &amp; 1 &amp; t=\\alpha \\\\     &amp; 0 &amp; t\\not =\\alpha \\end{aligned} \\right . \\] <ol> <li>Poisson \u200b\u6d41\u200b\uff0c\u200b\u5b9e\u4f53\u200b\u8fdb\u5165\u200b\u7cfb\u7edf\u200b\u7684\u200b\u65f6\u95f4\u5dee\u200b\u72ec\u7acb\u200b\u540c\u200b\u5206\u5e03\u200b\uff0c\u200b\u670d\u4ece\u200b\u53c2\u6570\u200b\u4e3a\u200b\\(\\lambda\\)\u200b\u7684\u200b\u6307\u6570\u5206\u5e03\u200b</li> </ol> \\[ f_{\\xi_i}(t; \\lambda)=\\left\\{ \\begin{aligned}     &amp; \\lambda e^{-\\lambda t} &amp; t\\geq 0 \\\\     &amp; 0 &amp; t &lt; 0 \\end{aligned} \\right . \\] <ol> <li>Erlang \u200b\u5206\u5e03\u200b\uff0c\u200b\u5b9e\u4f53\u200b\u8fdb\u5165\u200b\u7cfb\u7edf\u200b\u7684\u200b\u65f6\u95f4\u5dee\u200b\u72ec\u7acb\u200b\u540c\u200b\u5206\u5e03\u200b\uff0c\u200b\u670d\u4ece\u200b\u5982\u4e0b\u200b\u516c\u5f0f\u200b\u6240\u793a\u200b\u7684\u200b\u5206\u5e03\u200b\u3002\u200b\u82e5\u200b\u67d0\u4e2a\u200b\u7cfb\u7edf\u200b\u4e2d\u6709\u200b\\(K\\)\u200b\u4e2a\u200b\u5e76\u8054\u200b\u7684\u200b\u670d\u52a1\u53f0\u200b\uff0c\u200b\u8f93\u5165\u200b\u5b9e\u4f53\u200b\u4e3a\u200b Poisson \u200b\u6d41\u200b\uff0c\u200b\u5219\u200b\u7b2c\u200b\\(K\\)\u200b\u4e2a\u200b\u670d\u52a1\u53f0\u200b\u7684\u200b\u987e\u5ba2\u200b\u6d41\u4e3a\u200b Erlang \u200b\u6d41\u200b\uff0c\u200b\u524d\u9762\u200b\u6240\u6709\u200b\\(K - 1\\)\u200b\u4e2a\u200b\u670d\u52a1\u53f0\u200b\u5728\u200b\u7b2c\u4e00\u4e2a\u200b\u5b9e\u4f53\u200b\u5230\u8fbe\u200b\u4ee5\u540e\u200b\u7684\u200b\u8f93\u5165\u200b\u6d41\u200b\u540c\u6837\u200b\u4e3a\u200b Erlang \u200b\u6d41\u200b\u3002</li> </ol> \\[ f(t; \\lambda, K)=\\left\\{ \\begin{aligned}     &amp; \\frac{\\lambda(\\lambda t)^{K-1}}{(K-1)!} &amp; t\\geq 0 \\\\     &amp; 0 &amp; t &lt; 0 \\end{aligned} \\right . \\]"},{"location":"math/queue-theory/chapter-12/#_4","title":"\u5b9e\u4f53\u200b\u6392\u961f\u200b\u4e0e\u200b\u5904\u7406","text":"<p>\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u53ef\u80fd\u200b\u6709\u200b\u4e00\u4e2a\u200b\u6216\u200b\u591a\u4e2a\u200b\u670d\u52a1\u53f0\u200b\u3002\u200b\u5728\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u670d\u52a1\u53f0\u200b\u90fd\u200b\u5904\u4e8e\u200b\u8fd0\u884c\u200b\u72b6\u6001\u200b\u65f6\u200b\uff0c\u200b\u65b0\u200b\u8fdb\u5165\u200b\u7684\u200b\u5b9e\u4f53\u200b\u65e0\u6cd5\u200b\u7acb\u5373\u200b\u8fdb\u884c\u200b\u5904\u7406\u200b\uff0c\u200b\u800c\u662f\u200b\u8fdb\u5165\u200b\u961f\u5217\u200b\u6216\u200b\u76f4\u63a5\u200b\u79bb\u5f00\u200b\uff0c\u200b\u53d6\u51b3\u4e8e\u200b\u7cfb\u7edf\u200b\u7684\u200b\u6392\u961f\u200b\u7b56\u7565\u200b\u3002\u200b\u6392\u961f\u200b\u7b56\u7565\u200b\u53ef\u4ee5\u200b\u5206\u4e3a\u200b\u635f\u5931\u200b\u5236\u200b\u3001\u200b\u7b49\u5f85\u200b\u5236\u200b\u4e0e\u200b\u6df7\u5408\u5236\u200b\u3002  </p> <p>\u200b\u5728\u200b\u635f\u5931\u200b\u5236\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\uff0c\u200b\u5982\u679c\u200b\u65b0\u200b\u8fdb\u5165\u200b\u7684\u200b\u5b9e\u4f53\u200b\u4e0d\u80fd\u200b\u88ab\u200b\u7acb\u5373\u200b\u5904\u7406\u200b\uff0c\u200b\u5219\u200b\u4f1a\u200b\u79bb\u5f00\u200b\u7cfb\u7edf\u200b\u3002 \u200b\u5728\u200b\u7b49\u5f85\u200b\u5236\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\uff0c\u200b\u5982\u679c\u200b\u65b0\u200b\u8fdb\u5165\u200b\u7684\u200b\u5b9e\u4f53\u200b\u4e0d\u80fd\u200b\u88ab\u200b\u7acb\u5373\u200b\u5904\u7406\u200b\uff0c\u200b\u5219\u200b\u4f1a\u200b\u5728\u200b\u961f\u5217\u200b\u4e2d\u200b\u7b49\u5f85\u200b\uff0c\u200b\u76f4\u5230\u200b\u88ab\u200b\u5904\u7406\u200b\u3002 \u200b\u5728\u200b\u6df7\u5408\u5236\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\uff0c\u200b\u5982\u679c\u200b\u65b0\u200b\u8fdb\u5165\u200b\u7684\u200b\u5b9e\u4f53\u200b\u4e0d\u80fd\u200b\u88ab\u200b\u7acb\u5373\u200b\u5904\u7406\u200b\u4e14\u200b\u6b64\u65f6\u200b\u7684\u200b\u961f\u5217\u200b\u957f\u5ea6\u200b\u5927\u4e8e\u200b\u67d0\u4e00\u5e38\u200b\u6570\u503c\u200b\uff0c\u200b\u5219\u200b\u4f1a\u200b\u79bb\u5f00\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u5426\u5219\u200b\u4f1a\u200b\u8fdb\u5165\u200b\u961f\u5217\u200b\u7b49\u5f85\u200b\u3002</p> <p>\u200b\u5b9e\u4f53\u200b\u5728\u200b\u6392\u961f\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u884c\u4e3a\u200b\u53ef\u4ee5\u200b\u5206\u4e3a\u200b\u5982\u4e0b\u200b\u7c7b\u578b\u200b\uff1a</p> <ul> <li>\u200b\u79bb\u5f00\u200b\uff1a\u200b\u5f53\u200b\u5b9e\u4f53\u200b\u5f97\u77e5\u200b\u9700\u8981\u200b\u7b49\u5f85\u200b\u6216\u200b\u6ca1\u6709\u200b\u8010\u5fc3\u200b\u7ee7\u7eed\u200b\u7b49\u5f85\u200b\u65f6\u200b\uff0c\u200b\u5b9e\u4f53\u200b\u53ef\u80fd\u200b\u9000\u51fa\u200b\u961f\u5217\u200b</li> <li>\u200b\u53d8\u6362\u200b\uff1a\u200b\u5373\u200b\u5b9e\u4f53\u200b\u4e3a\u200b\u51cf\u5c11\u200b\u6392\u961f\u200b\u65f6\u95f4\u200b\u800c\u200b\u5728\u200b\u4e0d\u540c\u200b\u670d\u52a1\u53f0\u200b\u7684\u200b\u961f\u5217\u200b\u4e4b\u95f4\u200b\u79fb\u52a8\u200b</li> </ul> <p>\u200b\u670d\u52a1\u53f0\u200b\u4f1a\u200b\u6309\u7167\u200b\u5982\u4e0b\u200b\u53ef\u80fd\u200b\u7684\u200b\u65b9\u5f0f\u200b\u8fdb\u884c\u200b\u670d\u52a1\u200b\uff1a</p> <ul> <li>FCFS\uff1a\u200b\u5148\u200b\u8fdb\u5165\u200b\u961f\u5217\u200b\u7684\u200b\u5148\u200b\u8fdb\u884c\u200b\u5904\u7406\u200b</li> <li>LCFS\uff1a\u200b\u540e\u200b\u8fdb\u5165\u200b\u961f\u5217\u200b\u7684\u200b\u5148\u200b\u8fdb\u884c\u200b\u5904\u7406\u200b</li> <li>\u200b\u968f\u673a\u200b\u5904\u7406\u200b</li> <li>PS\uff1a\u200b\u4f18\u5148\u7ea7\u200b\u9ad8\u200b\u7684\u200b\u5b9e\u4f53\u200b\u5148\u200b\u8fdb\u884c\u200b\u5904\u7406\u200b</li> <li>\u200b\u65ad\u7eed\u200b\u5904\u7406\u200b\uff1a\u200b\u5728\u200b\u5904\u7406\u200b\u67d0\u4e2a\u200b\u5b9e\u4f53\u200b\u4e00\u6bb5\u65f6\u95f4\u200b\u540e\u200b\uff0c\u200b\u8f6c\u800c\u200b\u5904\u7406\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5b9e\u4f53\u200b\uff0c\u200b\u4e0d\u65ad\u200b\u5faa\u73af\u200b\u76f4\u5230\u200b\u5b9e\u4f53\u200b\u5904\u7406\u200b\u5b8c\u6210\u200b</li> </ul> <p>\u200b\u5728\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u7684\u200b\u670d\u52a1\u53f0\u200b\u7684\u200b\u670d\u52a1\u200b\u65f6\u95f4\u200b\u662f\u200b\u4e00\u4e2a\u200b\u968f\u673a\u53d8\u91cf\u200b\uff0c\u200b\u6982\u7387\u5206\u5e03\u200b\u4e3a\u200b\u5e38\u6570\u200b\u3001\u200b\u6307\u6570\u5206\u5e03\u200b\u3001K\u200b\u7ea7\u200b Erlang \u200b\u5206\u5e03\u200b\u3001\u200b\u4e00\u822c\u200b\u5206\u5e03\u200b\u7b49\u200b\u3002</p>"},{"location":"math/queue-theory/chapter-12/#_5","title":"\u7cfb\u7edf\u200b\u7684\u200b\u7b26\u53f7\u200b\u8868\u793a","text":"<p>Kendall\u200b\u8bb0\u53f7\u200b\uff0c\u200b\u683c\u5f0f\u200b\u4e3a\u200b\\(X/Y/Z/A/B/C\\)</p> <ul> <li>\\(X\\)\u200b\u8868\u793a\u200b\u5b9e\u4f53\u200b\u5230\u8fbe\u200b\u95f4\u9694\u65f6\u95f4\u200b\u7684\u200b\u5206\u5e03\u200b<ul> <li>\\(M\\)\u200b\u8868\u793a\u200b\u5230\u8fbe\u200b\u8fc7\u7a0b\u200b\u4e3a\u200b Poisson \u200b\u8fc7\u7a0b\u200b\uff08\u200b\u95f4\u9694\u65f6\u95f4\u200b\u670d\u4ece\u200b\u6307\u6570\u5206\u5e03\u200b\uff09\u200b\u6216\u8d1f\u200b\u6307\u6570\u5206\u5e03\u200b</li> <li>\\(D\\)\u200b\u8868\u793a\u200b\u95f4\u9694\u65f6\u95f4\u200b\u4e3a\u200b\u5e38\u6570\u200b</li> <li>\\(E_k\\)\u200b\u8868\u793a\u200b\u95f4\u9694\u65f6\u95f4\u200b\u670d\u4ece\u200b\\(k\\)\u200b\u9636\u200b Erlang \u200b\u5206\u5e03\u200b</li> <li>\\(G\\)\u200b\u8868\u793a\u200b\u95f4\u9694\u65f6\u95f4\u200b\u670d\u4ece\u200b\u4e00\u822c\u200b\u3001\u200b\u76f8\u4e92\u200b\u72ec\u7acb\u200b\u7684\u200b\u968f\u673a\u200b\u5206\u5e03\u200b</li> </ul> </li> <li>\\(Y\\)\u200b\u8868\u793a\u200b\u670d\u52a1\u53f0\u200b\u5355\u6b21\u200b\u670d\u52a1\u200b\u65f6\u95f4\u200b\u7684\u200b\u5206\u5e03\u200b\uff0c\u200b\u8bb0\u53f7\u200b\u4e0e\u200b\\(X\\)\u200b\u7684\u200b\u542b\u4e49\u200b\u76f8\u540c\u200b</li> <li>\\(Z\\)\u200b\u8868\u793a\u200b\u670d\u52a1\u53f0\u200b\u4e2a\u6570\u200b</li> <li>\\(A\\)\u200b\u8868\u793a\u200b\u7cfb\u7edf\u200b\u7684\u200b\u7b49\u5f85\u200b\u7a7a\u95f4\u200b\u5bb9\u91cf\u200b\uff0c\\(0\\)\u200b\u4e3a\u200b\u635f\u5931\u200b\u5236\u200b\u7cfb\u7edf\u200b\uff0c\\(\\infty\\)\u200b\u4e3a\u200b\u7b49\u5f85\u200b\u5236\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u5426\u5219\u200b\u4e3a\u200b\u6df7\u5408\u5236\u200b\u7cfb\u7edf\u200b\u3002</li> <li>\\(B\\)\u200b\u8868\u793a\u200b\u5b9e\u4f53\u200b\u7684\u200b\u603b\u200b\u6570\u91cf\u200b\uff0c\\(\\infty\\)\u200b\u8868\u793a\u200b\u5b9e\u4f53\u200b\u6e90\u200b\u65e0\u9650\u200b</li> <li>\\(C\\)\u200b\u8868\u793a\u200b\u670d\u52a1\u200b\u89c4\u5219\u200b</li> </ul> <p>\\(A, B, C\\)\u200b\u53c2\u6570\u200b\u53ef\u4ee5\u200b\u7701\u7565\u200b\u3002\u200b\u5206\u522b\u200b\u7b49\u4ef7\u200b\u4e8e\u200b\\(\\infty, \\infty, \\mathit{FCFS}\\)</p>"},{"location":"math/queue-theory/chapter-12/#_6","title":"\u7cfb\u7edf\u200b\u7684\u200b\u89c2\u6d4b\u200b\u6307\u6807","text":"<p>\u200b\u8861\u91cf\u200b\u7cfb\u7edf\u200b\u6027\u80fd\u200b\u7684\u200b\u5e38\u7528\u200b\u89c2\u6d4b\u200b\u6307\u6807\u200b\u4e3a\u200b\uff1a</p> <ul> <li>\\(N(L)\\)\uff1a\u200b\u7a33\u6001\u200b\u7cfb\u7edf\u200b\u7684\u200b\u961f\u957f\u200b\uff08\u200b\u6307\u200b\u7cfb\u7edf\u200b\u5185\u200b\u6240\u6709\u200b\u7684\u200b\u5b9e\u4f53\u200b\u6570\u91cf\u200b\uff09</li> <li>\\(N_q(L_q)\\)\u200b\u7a33\u6001\u200b\u7cfb\u7edf\u200b\u7684\u200b\u6392\u961f\u200b\u957f\u200b</li> <li>\\(T(W)\\)\uff1a\u200b\u987e\u5ba2\u200b\u5728\u200b\u7a33\u6001\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u7684\u200b\u505c\u7559\u65f6\u95f4\u200b\uff08\u200b\u5904\u7406\u200b+\u200b\u7b49\u5f85\u200b\uff09</li> <li>\\(T_q(W_q)\\)\uff1a\u200b\u987e\u5ba2\u200b\u5728\u200b\u7a33\u6001\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u7684\u200b\u7b49\u5f85\u65f6\u95f4\u200b</li> <li>\\(p_n\\)\uff1a\u200b\u7a33\u6001\u200b\u7cfb\u7edf\u200b\u4efb\u610f\u200b\u65f6\u523b\u200b\u72b6\u6001\u200b\u4e3a\u200b\\(n\\)\u200b\u7684\u200b\u6982\u7387\u200b\uff0c\\(p_n=P(N=n)=\\lim_{t\\rightarrow \\infty}P(N(t) = n)\\)</li> <li>\\(\\rho\\)\uff1a\u200b\u5229\u7528\u7387\u200b</li> <li>\\(p_D\\)\uff1a\u200b\u5b9e\u4f53\u200b\u8fdb\u5165\u200b\u7cfb\u7edf\u200b\u65f6\u200b\u9700\u8981\u200b\u7b49\u5f85\u200b\u7684\u200b\u6982\u7387\u200b</li> </ul> <p>\u200b\u82e5\u200b\u5c06\u200b\u7cfb\u7edf\u200b\u89c6\u4e3a\u200b\u7ba1\u9053\u200b\uff0c\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u5b9e\u4f53\u200b\u7684\u200b\u6570\u91cf\u200b\u7b49\u4e8e\u200b\u5b9e\u4f53\u200b\u8fdb\u5165\u200b\u7cfb\u7edf\u200b\u7684\u200b\u901f\u5ea6\u200b\u4e0e\u200b\u7cfb\u7edf\u200b\u5e73\u5747\u200b\u54cd\u5e94\u200b\uff08\u200b\u5904\u7406\u200b\uff09\u200b\u65f6\u95f4\u200b\u4e4b\u79ef\u200b\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\\(M/M/s\\)\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u4ee4\u200b\\(\\lambda\\)\u200b\u4e3a\u200b\u5b9e\u4f53\u200b\u8fdb\u5165\u200b\u7cfb\u7edf\u200b\u7684\u200b\u901f\u5ea6\u200b\uff0c\\(\\mu\\)\u200b\u4e3a\u200b\u670d\u52a1\u53f0\u200b\u5904\u7406\u200b\u5b9e\u4f53\u200b\u7684\u200b\u901f\u5ea6\u200b\uff0c\\(s\\)\u200b\u4e3a\u200b\u670d\u52a1\u53f0\u200b\u7684\u200b\u6570\u91cf\u200b\uff0c\u200b\u5219\u200b\uff1a</p> \\[ \\begin{aligned} L &amp;= \\lambda_e W \\\\ L_q &amp;= \\lambda_e W_q \\end{aligned} \\]"},{"location":"math/queue-theory/chapter-12/#_7","title":"\u968f\u673a\u200b\u8fc7\u7a0b","text":"<p>\u200b\u5e38\u89c1\u200b\u7684\u200b\u968f\u673a\u200b\u8fc7\u7a0b\u200b\u6709\u200b Markov \u200b\u8fc7\u7a0b\u200b\u3001\u200b\u751f\u706d\u200b\u8fc7\u7a0b\u200b\u3001 Poisson \u200b\u8fc7\u7a0b\u200b\u7b49\u200b\u3002\u200b\u6240\u6709\u200b\u7684\u200b Poisson \u200b\u8fc7\u7a0b\u200b\u90fd\u200b\u662f\u200b\u751f\u706d\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u6240\u6709\u200b\u7684\u200b\u751f\u706d\u200b\u8fc7\u7a0b\u200b\u90fd\u200b\u662f\u200b Markov \u200b\u8fc7\u7a0b\u200b\u3002</p>"},{"location":"math/queue-theory/chapter-12/#markov","title":"Markov \u200b\u8fc7\u7a0b","text":"<p>\u200b\u7279\u70b9\u200b\uff1a\\(t_0\\)\u200b\u65f6\u523b\u200b\u7684\u200b\u72b6\u6001\u200b\u4e0e\u200b\u4efb\u610f\u200b\\(t&lt;t_0\\)\u200b\u65f6\u200b\u7684\u200b\u72b6\u6001\u200b\u65e0\u5173\u200b</p> <p>Markov \u200b\u94fe\u200b\u7531\u200b\u9a6c\u5c14\u53ef\u592b\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u79bb\u6563\u200b\u72b6\u6001\u200b\u7ec4\u5408\u200b\u3002\u200b\u5bf9\u4e8e\u200b Markov \u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u7cfb\u7edf\u200b\u65e0\u200b\u8bb0\u5fc6\u6027\u200b\uff0c\u200b\u5f53\u524d\u200b\u7684\u200b\u72b6\u6001\u200b\u4e0d\u4f1a\u200b\u5bf9\u200b\u540e\u9762\u200b\u7684\u200b\u72b6\u6001\u200b\u4ea7\u751f\u200b\u5f71\u54cd\u200b\u3002</p> <p>\\(M/M/s\\)\u200b\u7cfb\u7edf\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b Markov \u200b\u8fc7\u7a0b\u200b\u5efa\u6a21\u200b\u3002\u200b\u961f\u5217\u200b\u4e2d\u200b\u5b9e\u4f53\u200b\u7684\u200b\u6570\u91cf\u200b\u662f\u200b\u4e00\u4e2a\u200b Markov \u200b\u94fe\u200b\u3002</p>"},{"location":"math/queue-theory/chapter-12/#_8","title":"\u751f\u706d\u200b\u8fc7\u7a0b","text":"<p>\u200b\u751f\u706d\u200b\u8fc7\u7a0b\u200b\u6309\u200b\u5982\u4e0b\u200b\u56fe\u200b\u8fdb\u884c\u200b\u63cf\u8ff0\u200b\uff08\u200b\u72b6\u6001\u200b\u8f6c\u79fb\u200b\u56fe\u200b\uff09\uff1a</p> <p></p> <p>\u200b\u5047\u8bbe\u200b\u5b9e\u4f53\u200b\u79bb\u6563\u200b\u8fdb\u5165\u200b\u7684\u200b\\(M/M/s\\)\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u961f\u5217\u200b\u4e2d\u200b\u7684\u200b\u5b9e\u4f53\u200b\u6570\u91cf\u200b\u670d\u4ece\u200b\u751f\u706d\u200b\u8fc7\u7a0b\u200b</p>"},{"location":"math/queue-theory/chapter-12/#poisson","title":"Poisson \u200b\u8fc7\u7a0b","text":"<p>\u200b\u5b9e\u4f53\u200b\u8fdb\u5165\u200b\u7684\u200b\u65f6\u95f4\u5dee\u200b\u76f8\u4e92\u200b\u72ec\u7acb\u200b\u4e14\u200b\u670d\u4ece\u200b\u540c\u4e00\u200b\u6307\u6570\u5206\u5e03\u200b\u7684\u200b\u8fc7\u7a0b\u200b</p>"},{"location":"math/queue-theory/chapter-12/#_9","title":"\u751f\u706d\u200b\u8fc7\u7a0b","text":"<p>\u200b\u5bf9\u4e8e\u200b\u751f\u706d\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u6709\u200b\u5982\u4e0b\u200b\u5047\u8bbe\u200b</p> <ul> <li>\u200b\u6bcf\u4e2a\u200b\u65f6\u523b\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u5b9e\u4f53\u200b\u8fdb\u5165\u200b\u7cfb\u7edf\u200b</li> <li>\u200b\u5b9a\u4e49\u200b\u7cfb\u7edf\u200b\u7684\u200b\u72b6\u6001\u200b\u4e3a\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u7684\u200b\u5b9e\u4f53\u200b\u6570\u91cf\u200b\\(n\\)</li> <li>\u200b\u4e00\u4e2a\u200b\u5b9e\u4f53\u200b\u8fdb\u5165\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u7cfb\u7edf\u200b\u7684\u200b\u72b6\u6001\u200b\u7531\u200b\\(n-1\\)\u200b\u8f6c\u53d8\u200b\u4e3a\u200b\\(n\\)</li> <li>\u200b\u4e00\u4e2a\u200b\u5b9e\u4f53\u200b\u79bb\u5f00\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u7cfb\u7edf\u200b\u7684\u200b\u72b6\u6001\u200b\u7531\u200b\\(n\\)\u200b\u8f6c\u53d8\u200b\u4e3a\u200b\\(n+1\\)</li> <li>\u200b\u7cfb\u7edf\u200b\u5904\u4e8e\u200b\u72b6\u6001\u200b\\(n\\)\u200b\u65f6\u200b\uff0c\u200b\u5b9a\u4e49\u200b\u5b9e\u4f53\u200b\u8fdb\u5165\u200b\u7684\u200b\u901f\u5ea6\u200b\u4e3a\u200b\\(\\lambda _n\\)\uff0c\u200b\u7cfb\u7edf\u200b\u7684\u200b\u5904\u7406\u901f\u5ea6\u200b\u4e3a\u200b\\(\\mu_n\\)\u3002\u200b\u5bf9\u4e8e\u200b\\(\\lambda_n\\)\uff0c\\(n\\geq 0\\)\uff1b\u200b\u5bf9\u4e8e\u200b\\(\\mu_n\\)\uff0c\\(n&gt;0\\)</li> </ul> <p>\u200b\u95ee\u9898\u200b\uff1a\u200b\u7cfb\u7edf\u200b\u5904\u4e8e\u200b\u7a33\u5b9a\u200b\u72b6\u6001\u200b\u65f6\u200b\uff0c\u200b\u751f\u706d\u200b\u7cfb\u7edf\u200b\u5904\u4e8e\u200b\u72b6\u6001\u200b\\(n\\)\u200b\u7684\u200b\u6982\u7387\u200b\\(p_n\\)\uff1f</p> <p>\u200b\u5bf9\u4e8e\u200b\u5904\u4e8e\u200b\u72b6\u6001\u200b\\(j\\)\u200b\u7684\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u8003\u5bdf\u200b\u4e00\u4e2a\u200b\u6781\u77ed\u200b\u7684\u200b\u65f6\u95f4\u200b\u95f4\u9694\u200b\\(\\Delta t\\)\uff0c\u200b\u7531\u4e8e\u200b\\(\\Delta t\\)\u200b\u6781\u77ed\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5ffd\u7565\u200b\\(\\Delta t\\)\u200b\u65f6\u95f4\u200b\u5185\u200b\u4e24\u4e2a\u200b\u5b9e\u4f53\u200b\u540c\u65f6\u200b\u8fdb\u5165\u200b/\u200b\u79bb\u5f00\u200b\u7cfb\u7edf\u200b\u6216\u200b\u4e00\u4e2a\u200b\u5b9e\u4f53\u200b\u8fdb\u5165\u200b\u3001\u200b\u4e00\u4e2a\u200b\u5b9e\u4f53\u200b\u79bb\u5f00\u200b\u7cfb\u7edf\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002\\(\\Delta t\\)\u200b\u65f6\u95f4\u200b\u5185\u200b\u7cfb\u7edf\u200b\u53d1\u751f\u53d8\u5316\u200b\u7684\u200b\u6982\u7387\u200b\u5982\u4e0b\u200b\uff1a</p> <ul> <li>\u200b\u4e00\u4e2a\u200b\u5b9e\u4f53\u200b\u8fdb\u5165\u200b\u7cfb\u7edf\u200b\uff1a\\(P(n(t+\\Delta t)=j+1 | n(t) = j)=\\lambda_j\\Delta t\\)</li> <li>\u200b\u4e00\u4e2a\u200b\u5b9e\u4f53\u200b\u79bb\u5f00\u200b\u7cfb\u7edf\u200b\uff1a\\(P(n(t+\\Delta t)=j-1| n(t) = j) = \\mu_j\\Delta t\\)</li> <li>\u200b\u7cfb\u7edf\u200b\u5728\u200b\\(\\Delta t\\)\u200b\u65f6\u95f4\u200b\u5185\u200b\u6ca1\u6709\u200b\u53d1\u751f\u200b\u72b6\u6001\u200b\u6539\u53d8\u200b\uff1a\\(P(n(t+\\Delta t) = j | n(t)=j) = 1 - (\\lambda_j+\\mu_j)\\Delta t\\)</li> </ul> <p>\u200b\u6839\u636e\u200b\u5047\u8bbe\u200b\uff0c\u200b\u5904\u4e8e\u200b\u72b6\u6001\u200b\\(i\\)\u200b\u7684\u200b\u7cfb\u7edf\u200b\u5728\u200b\\(t+\\Delta t\\)\u200b\u65f6\u200b\u53ea\u200b\u53ef\u80fd\u200b\u5904\u4e8e\u200b\\(i-1, i, i+1\\)\u200b\u4e09\u79cd\u200b\u72b6\u6001\u200b\u4e2d\u200b\u7684\u200b\u4e00\u79cd\u200b\u3002\u200b\u4e5f\u200b\u5373\u200b\uff0c\u200b\u5904\u4e8e\u200b\u72b6\u6001\u200b\\(i\\)\u200b\u7684\u200b\u7cfb\u7edf\u200b\u5728\u200b\\(t-\\Delta t\\)\u200b\u65f6\u200b\u53ea\u200b\u53ef\u80fd\u200b\u5904\u4e8e\u200b\\(i-1, i, i+1\\)\u200b\u4e09\u79cd\u200b\u72b6\u6001\u200b\u4e2d\u200b\u7684\u200b\u4e00\u79cd\u200b\u3002\u200b\u7531\u6b64\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5217\u5f0f\u200b\u5982\u4e0b\u200b\uff1a</p> \\[ \\begin{aligned}   p_0(t+\\Delta t) &amp;= (1-\\lambda_0\\Delta t)p_0(t) + \\mu_1\\Delta tp_1(t) \\\\   p_j(t+\\Delta t) &amp;= \\lambda_{j-1}\\Delta tp_{j-1}(t)+(1-\\mu_j\\Delta t-\\lambda_j\\Delta t)p_j(t)+\\mu_{j+1}\\Delta tp_{j+1}(t) \\end{aligned} \\] <p>\u200b\u6574\u7406\u200b\u540e\u53d6\u200b\u6781\u9650\u200b\\(\\Delta t\\rightarrow 0\\)\uff0c\u200b\u4e0a\u200b\u5f0f\u200b\u53d8\u4e3a\u200b\u5bfc\u6570\u200b\u5f62\u5f0f\u200b\uff1a</p> \\[ \\begin{aligned}   &amp;\\lim_{\\Delta t\\rightarrow 0} \\frac{p_j(t+\\Delta t)-p_j(t)}{\\Delta t}=\\lambda_{j-1}p_{j-1}(t)+\\mu_{j+1}p_{j+1}(t) - (\\mu_j+\\lambda_j)p_j(t) \\\\   \\Rightarrow &amp;\\frac{\\mathrm dp_j(t)}{\\mathrm dt}=\\lambda_{j-1}p_{j-1}(t)+\\mu_{j+1}p_{j+1}(t) - (\\mu_j+\\lambda_j)p_j(t) \\end{aligned} \\] <p>\u200b\u5f53\u200b\\(t\\rightarrow \\infty\\)\u200b\u65f6\u200b\uff0c\u200b\u7cfb\u7edf\u200b\u8d8b\u4e8e\u200b\u7a33\u6001\u200b\uff0c\u200b\u5219\u200b\u6709\u200b\\(\\lim_{t\\rightarrow \\infty}p_j(t) = p_j\\)\uff0c\u200b\u6536\u655b\u200b\u7684\u200b\u5145\u5206\u200b\u5fc5\u8981\u6761\u4ef6\u200b\u4e3a\u200b\\(\\lim_{t\\rightarrow\\infty} \\frac{\\mathrm dp_j(t)}{\\mathrm dt}=0\\)\u3002\u200b\u5373\u200b\\(\\lambda_{j-1}p_{j-1}(t)+\\mu_{j+1}p_{j+1}(t) - (\\mu_j+\\lambda_j)p_j(t)=0\\)\u3002</p> <p>\u200b\u89e3\u200b\\(p_{j+1}\\)\uff0c\u200b\u89e3\u5f97\u200b\uff1a</p> \\[ p_{j+1} = \\left(\\frac{\\mu_j+\\lambda_j}{\\mu_{j+1}}\\right)p_j-\\frac{\\lambda_{j-1}}{\\mu_{j+1}}p_{j-1} \\] <p>\u200b\u5bf9\u4e8e\u200b\\(p_1\\)\uff0c\u200b\u6709\u200b\\(p_1=\\frac{\\lambda_0}{\\mu_1}p_0\\)\u3002</p> <p>\u200b\u6839\u636e\u200b\u9012\u63a8\u200b\u516c\u5f0f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u200b\\(p_0\\)\u200b\u8868\u793a\u200b\u51fa\u200b\\(p_j\\)\uff1a</p> \\[ \\begin{aligned}   p_2&amp;=\\left(\\frac{\\mu_1+\\lambda_1}{\\mu_2}\\right)p_1-\\frac{\\lambda _0}{\\mu_2}p_0 = \\frac{\\lambda_0(\\mu_1+\\lambda_1)}{\\mu_1\\mu_2}p_0-\\frac{\\lambda_0}{\\mu_2}p_0=\\frac{\\lambda_0\\lambda_1}{\\mu_1\\mu_2}p_0 \\\\   p_3&amp;=\\left(\\frac{\\mu_2+\\lambda_2}{\\mu_3}\\right)p_2-\\frac{\\lambda_1}{\\mu_3}p_1=\\frac{\\lambda_0\\lambda_1(\\mu_2+\\lambda_2)}{\\mu_1\\mu_2\\mu_3}p_0-\\frac{\\lambda_0\\lambda_1}{\\mu_1\\mu_3}p_0=\\frac{\\lambda_0\\lambda_1\\lambda_2}{\\mu_1\\mu_2\\mu_3}p_0 \\\\   &amp;\\vdots \\\\   &amp;p_j = \\frac{\\lambda_0\\lambda_1\\cdots\\lambda_{j-1}}{\\mu_1\\mu_2\\cdots\\mu_j}p_0=p_0\\prod_{i = 1}^{j}\\frac{\\lambda_{i-1}}{\\mu_i} \\end{aligned} \\] <p>\u200b\u7531\u4e8e\u200b\u7cfb\u7edf\u200b\u7684\u200b\u72b6\u6001\u200b\u53ea\u200b\u53ef\u80fd\u200b\u53d6\u200b\\(0\\sim\\infty\\)\u200b\u4e4b\u95f4\u200b\u7684\u200b\u6574\u6570\u200b\u503c\u200b\uff0c\u200b\u6982\u7387\u200b\u4e4b\u200b\u548c\u200b\u4e3a\u200b\\(1\\)\uff0c\u200b\u53ef\u4ee5\u200b\u8ba1\u7b97\u200b\u51fa\u200b\\(p_0\\)\uff1a</p> \\[ p_0=\\frac{1}{1+\\sum_{n=1}^\\infty \\prod_{i=0}^{n}\\frac{\\lambda_{i-1}}{\\mu_i}} \\]"},{"location":"math/queue-theory/chapter-12/#mm1","title":"M/M/1\u200b\u961f\u5217","text":"<p>\u200b\u5bf9\u4e8e\u200b\\(M/M/1\\)\u200b\u7cfb\u7edf\u200b\uff0c\\(\\lambda_0=\\lambda_1=\\cdots=\\lambda_n=\\lambda, \\mu_1=\\cdots=\\mu_n=\\mu\\)\u3002</p> <p>\u200b\u7531\u6b64\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u51fa\u200b\\(M/M/1\\)\u200b\u7cfb\u7edf\u200b\u5728\u200b\u7a33\u6001\u200b\u65f6\u200b\u5904\u4e8e\u200b\\(p_0\\)\u200b\u7684\u200b\u6982\u7387\u200b\uff1a</p> \\[ p_0=\\frac{1}{1+\\sum_{n=1}^\\infty \\prod_{i=0}^{n}\\frac{\\lambda}{\\mu}} = \\frac{1}{1+\\sum_{n=1}^\\infty \\rho^n}=\\frac{1}{\\sum_{n=0}^\\infty \\rho^n}=1-\\rho \\] <p>\u200b\u6982\u7387\u5206\u5e03\u200b\u4e3a\u200b\uff1a\\(P(N=n)=\\rho^n(1-\\rho)\\)</p>"},{"location":"math/queue-theory/chapter-12/#mms","title":"M/M/s\u200b\u961f\u5217","text":"<p>\u200b\u5bf9\u4e8e\u200b\\(M/M/s\\)\u200b\u7cfb\u7edf\u200b\uff0c\\(\\lambda_i, \\mu_i\\)\u200b\u670d\u4ece\u200b\u5982\u4e0b\u200b\u89c4\u5f8b\u200b\uff1a</p> <ul> <li>\\(\\lambda_i = \\lambda \\qquad i=0, 1\\cdots, \\infty\\)</li> <li>\\(\\mu_i = \\max\\{i, s\\}\\mu \\qquad i=1, 2, \\cdots, \\infty\\)</li> </ul> <p>\u200b\u8ba1\u7b97\u200b\u51fa\u200b\\(M/M/s\\)\u200b\u7cfb\u7edf\u200b\u5728\u200b\u7a33\u6001\u200b\u65f6\u200b\u5904\u4e8e\u200b\\(p_0\\)\u200b\u7684\u200b\u6982\u7387\u200b\uff0c\u200b\u4ee4\u200b\\(\\rho_0=\\frac{\\lambda}{\\mu}\\)\uff1a</p> \\[ \\begin{aligned}   p_0&amp;=\\frac{1}{1+\\sum_{n=1}^\\infty \\prod_{i=0}^{n}\\frac{\\lambda}{\\max\\{i, s\\}\\mu}} \\\\   &amp;= \\frac{1}{\\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}+\\sum_{i=s}^\\infty \\frac{\\rho_0^i}{s!s^{i-s}}} \\\\   &amp;=\\frac{1}{\\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}+\\frac{\\rho_0^s}{s!}\\sum_{i=0}^\\infty \\frac{\\rho_0^i}{s^i}} \\\\   &amp;=\\frac{1}{\\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}} \\end{aligned} \\] <p>\u200b\u8bbe\u200b\\(\\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}=T\\)\uff0c\\(p_i\\)\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\\(p_0\\)\u200b\u63a8\u5bfc\u200b\u5f97\u200b\uff1a</p> \\[ p_i=\\frac{\\lambda_0\\lambda_1\\cdots\\lambda_{i-1}}{\\mu_1\\mu_2\\cdots\\mu_i}p_0=\\left\\{ \\begin{aligned} &amp; \\frac{\\rho_0^i}{i!}p_0=\\frac{\\rho_0^i}{i!\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)} &amp; i\\leq s \\\\ &amp; \\frac{\\rho_0^i}{s!s^{i-s}}p_0=\\frac{\\rho_0^i}{s!s^{i-s}\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)} &amp; i &gt; s \\end{aligned} \\right. \\] <p>\u200b\u5f53\u200b\\(n \\geq s\\)\u200b\u65f6\u200b\uff0c\u200b\u987e\u5ba2\u200b\u5230\u8fbe\u200b\u7cfb\u7edf\u200b\u65f6\u200b\u9700\u8981\u200b\u7b49\u5f85\u200b\uff0c\u200b\u5219\u200b\u6709\u200b\uff1a</p> \\[ p_D=\\sum_{i=s}^\\infty p_i= \\sum_{i=s}^\\infty \\frac{\\rho^i_0}{s!s^{i-s}}p_0 = \\frac{\\rho^s_0p_0}{(s-1)!(s-\\rho_0)}=\\frac{\\rho^s_0}{(s-1)!(s-\\rho_0)T+\\rho_0^s} \\] <p>\u200b\u5f53\u200b\\(N\\leq s\\)\u200b\u65f6\u200b\uff0c\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u6ca1\u6709\u200b\u961f\u5217\u200b\uff0c\\(L_q=0\\)\uff0c\u200b\u5f53\u200b\\(N&gt;s\\)\u200b\u65f6\u200b\uff0c\u200b\u961f\u5217\u200b\u957f\u5ea6\u200b\u4e3a\u200b\\(N-s\\)\uff0c\u200b\u56e0\u6b64\u200b\u7a33\u6001\u200b\u65f6\u200b\u7684\u200b\u5e73\u5747\u200b\u6392\u961f\u200b\u957f\u4e3a\u200b\uff1a</p> \\[ \\begin{aligned}   L_q&amp;=\\sum_{i=s + 1}^\\infty (i - s)p_i \\\\   &amp;=\\sum_{i=s}^\\infty (i-s)\\frac{\\rho^i_0}{s!s^{i-s}}p_0 \\\\   &amp;= \\frac{\\rho^s_0p_0}{s!}\\sum_{i=0}^\\infty \\frac{i\\rho_0^i}{s^i} \\\\   &amp;= \\frac{\\rho^s_0p_0}{s!}\\sum_{i=1}^\\infty \\left(\\frac{\\rho_0}{s}\\right)^i\\frac{s}{s-\\rho_0} \\\\   &amp;= \\frac{\\rho^s_0p_0}{(s-1)!(s-\\rho)}\\frac{\\rho_0/s}{1-\\rho_0/s} \\\\   &amp;= \\frac{\\rho^{s+1}_0p_0}{(s-1)!(s-\\rho_0)^2} \\end{aligned} \\] <p>\u200b\u72b6\u6001\u200b\u4e3a\u200b\\(n\\)\u200b\u7684\u200b\u7a33\u6001\u200b\u65f6\u200b\u7cfb\u7edf\u200b\u63a5\u53d7\u200b\u670d\u52a1\u200b\u7684\u200b\u5b9e\u4f53\u200b\u6570\u91cf\u200b\u4e3a\u200b\uff1a</p> \\[ \\left\\{ \\begin{aligned} &amp;n &amp; n\\leq s \\\\ &amp;s &amp; n&gt; s \\end{aligned} \\right . \\] <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u7a33\u6001\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u63a5\u53d7\u200b\u670d\u52a1\u200b\u7684\u200b\u5b9e\u4f53\u200b\u5e73\u5747\u200b\u6570\u91cf\u200b\u4e3a\u200b\uff1a</p> \\[ \\begin{aligned}   L-L_q&amp;=\\sum_{i=0}^s ip_i+\\sum_{i=s+1}^\\infty sp_i \\\\   &amp;=\\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}p_0+s\\sum_{i=s+1}^\\infty \\frac{\\rho_0^i}{s!s^{i-s}}p_0 \\\\   &amp;= \\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}p_0 + \\frac{\\rho_0^sp_0}{(s-1)!}\\sum_{i=1}^\\infty \\frac{\\rho_0^i}{s^i} \\\\   &amp;= \\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}p_0 + \\frac{\\rho_0^{s+1}p_0}{(s-1)!(s-\\rho_0)} \\\\   &amp;= \\frac{\\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}}{\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)} + \\frac{\\rho_0^{s+1}p_0}{(s-1)!(s-\\rho_0)} \\\\   &amp;= \\frac{\\rho_0 T+1}{T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}} + \\frac{\\rho_0^{s+1}}{(s-1)!(s-\\rho_0)T+\\rho_0^s} \\\\   &amp;= \\frac{(\\rho_0 T+1)(s-1)!(s-\\rho_0) + \\rho_0^{s+1}}{(s-1)!(s-\\rho_0)T+\\rho_0^s}\\\\   &amp;= \\rho_0 + \\frac{(s-1)!(s-\\rho_0)}{(s-1)!(s-\\rho_0)T+\\rho_0^s} \\end{aligned} \\] <p>\u200b\u987e\u5ba2\u200b\u7684\u200b\u5e73\u5747\u200b\u9017\u7559\u200b\u65f6\u95f4\u200b\\(W=\\frac{L}{\\lambda}\\)\uff1a</p> \\[ \\begin{aligned}   W&amp;=\\frac{L}{\\lambda} \\\\   &amp;= \\frac{\\sum_{i=0}^\\infty ip_i}{\\lambda} \\\\   &amp;= \\frac{\\sum_{i=1}^s \\left(\\frac{\\rho_0^i}{(i-1)!\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)}\\right) + \\sum_{i=s+1}^\\infty \\left(i\\frac{\\rho_0^i}{s!s^{i-s}\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)}\\right) }{\\lambda} \\\\   &amp;= \\frac{\\frac{T(s-1)!(s-\\rho_0)}{T(s-1)!(s-\\rho_0) + \\rho_0^s} + \\frac{\\rho_0^{s+1}(s-\\rho_0+1)/(s-\\rho_0)}{T(s-1)!(s-\\rho_0) + \\rho_0^s}}{\\lambda} \\\\   &amp;= \\frac{T(s-1)!(s-\\rho_0) + \\rho_0^{s+1}(s-\\rho_0+1)/(s-\\rho_0)}{\\lambda(T(s-1)!(s-\\rho_0) + \\rho_0^s)} \\end{aligned} \\]"},{"location":"math/random-process/","title":"\u968f\u673a\u200b\u8fc7\u7a0b","text":"<ul> <li>\u200b\u9884\u5907\u200b\u77e5\u8bc6\u200b</li> <li>\u200b\u6cca\u677e\u200b\u8fc7\u7a0b\u200b</li> <li>\u200b\u8bb0\u53f7\u200b</li> </ul>"},{"location":"math/random-process/basics/","title":"\u9884\u5907\u200b\u77e5\u8bc6","text":""},{"location":"math/random-process/basics/#_2","title":"\u53ef\u6d4b\u200b\u7a7a\u95f4\u200b\u3001\u200b\u6982\u7387\u200b\u7a7a\u95f4\u200b\u4e0e\u200b\u6982\u7387\u200b\u6d4b\u5ea6","text":"<p>\\(\\renewcommand{\\geq}{\\geqslant}\\renewcommand{\\leq}{\\leqslant}\\) \u200b\u5f53\u200b\u4e00\u4e2a\u200b\u8bd5\u9a8c\u200b\u7684\u200b\u7ed3\u679c\u200b\u65e0\u6cd5\u200b\u9884\u5148\u786e\u5b9a\u200b\u65f6\u200b\uff0c\u200b\u79f0\u8be5\u200b\u5b9e\u9a8c\u200b\u4e3a\u200b\u968f\u673a\u200b\u8bd5\u9a8c\u200b\u3002\u200b\u968f\u673a\u200b\u8bd5\u9a8c\u200b\u53ef\u80fd\u200b\u51fa\u73b0\u200b\u7684\u200b\u6240\u6709\u200b\u7ed3\u679c\u200b\u96c6\u5408\u200b\u6784\u6210\u200b\u6837\u672c\u7a7a\u95f4\u200b\\(\\Omega\\)\uff0c\u200b\u6bcf\u4e2a\u200b\u53ef\u80fd\u200b\u7684\u200b\u7ed3\u679c\u200b\u79f0\u4e3a\u200b\u6837\u672c\u200b\u70b9\u200b\\(\\omega\\)\u3002\\(\\Omega\\)\u200b\u7684\u200b\u5b50\u96c6\u200b\u6784\u6210\u200b\u7684\u200b\u96c6\u5408\u200b\u79f0\u4e3a\u200b\u96c6\u7c7b\u200b\\(\\mathcal F\\)\u3002</p> <p>\u200b\u53ef\u6d4b\u200b\u7a7a\u95f4\u200b</p> <p>\u200b\u8bbe\u200b\\(\\mathcal F\\)\u200b\u4e3a\u200b\u7531\u200b\\(\\Omega\\)\u200b\u7684\u200b\u67d0\u4e9b\u200b\u5b50\u96c6\u200b\u6784\u6210\u200b\u7684\u200b\u975e\u200b\u7a7a\u96c6\u200b\u7c7b\u200b\uff0c\u200b\u82e5\u200b\u6ee1\u8db3\u200b\u4ee5\u4e0b\u200b\u6761\u4ef6\u200b\uff1a</p> <ol> <li>\u200b\u82e5\u200b\\(A\\in \\mathcal F\\)\uff0c\u200b\u5219\u200b\\(A^C = \\Omega - A\\in \\mathcal F\\)\u3002</li> <li>\u200b\u82e5\u200b\\(A_n\\in \\mathcal F\\)\uff0c\u200b\u5219\u200b\\(\\bigcup\\limits_{n=1}^\\infty A_n \\in \\mathcal F\\)</li> </ol> <p>\u200b\u79f0\u200b\\(\\mathcal F\\)\u200b\u4e3a\u200b\\(\\sigma\\)\u200b\u57df\u200b\uff0c\\((\\Omega, \\mathcal F)\\)\u200b\u4e3a\u200b\u53ef\u6d4b\u200b\u7a7a\u95f4\u200b\u3002</p> <p>\\(\\sigma\\)\u200b\u57df\u200b\\(\\mathcal F\\)\u200b\u5bf9\u200b\\(\\cap, \\cup, -\\)\u200b\u8fd0\u7b97\u200b\u5c01\u95ed\u200b\uff0c\u200b\u4efb\u4f55\u200b\u5143\u7d20\u200b\u7ecf\u8fc7\u200b\u53ef\u5217\u6b21\u200b\u8fd0\u7b97\u200b\u540e\u200b\u4ecd\u200b\u5c5e\u4e8e\u200b\\(\\mathcal F\\)\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u96c6\u7c7b\u200b\\(\\mathcal A\\)\uff0c\u200b\u5305\u542b\u200b\\(\\mathcal A\\)\u200b\u7684\u200b\\(\\sigma\\)\u200b\u57df\u200b\u7684\u200b\u4ea4\u200b\u79f0\u4e3a\u200b\\(\\mathcal A\\)\u200b\u751f\u6210\u200b\u7684\u200b\\(\\sigma\\)\u200b\u57df\u200b\uff0c\u200b\u8bb0\u200b\u4f5c\u200b\\(\\sigma(\\mathcal A)\\)\u3002\u200b\u5982\u200b\uff1a\\(\\sigma(\\{\\varnothing, A, \\Omega\\}) = \\{\\varnothing, A, A^C, \\Omega\\}\\)\u3002\u200b\u7279\u6b8a\u200b\u5730\u200b\uff0c\u200b\u8bb0\u200b\\(\\mathcal B = \\sigma(\\{(-\\infty, \\alpha], \\forall \\alpha \\in \\mathbb R\\})\\)\u200b\u4e3a\u200bBorel\u200b\u57df\u200b\u3002Borel\u200b\u57df\u200b\u89e3\u51b3\u200b\u4e86\u200b\u6837\u672c\u7a7a\u95f4\u200b\u5728\u200b\\(\\mathbb R\\)\u200b\u4e0a\u200b\u8fde\u7eed\u200b\u7684\u200b\u95ee\u9898\u200b\u3002\u200b\u53ef\u4ee5\u200b\u8bc1\u660e\u200b\uff0c\\(\\forall a &lt; b, [a, b]\\in \\mathcal B, (a, b]\\in \\mathcal B, [a, b)\\in \\mathcal B, (a, b)\\in \\mathcal B\\)\u3002\u200b\u5b9a\u4e49\u200b\\(\\mathcal B[a, b]\\)\u200b\u4e3a\u200b\u9650\u5236\u200b\u5728\u200b\\([a, b]\\)\u200b\u4e0a\u200b\u7684\u200bBorel\u200b\u57df\u200b\u3002</p> <p>\u200b\u6982\u7387\u200b\u6d4b\u5ea6\u200b\u4e0e\u200b\u6982\u7387\u200b\u7a7a\u95f4\u200b</p> <p>\u200b\u8bbe\u200b\\((\\Omega, \\mathcal F)\\)\u200b\u4e3a\u200b\u53ef\u6d4b\u200b\u7a7a\u95f4\u200b\uff0c\\(P: \\mathcal F\\rightarrow [0, 1]\\)\u200b\u4e3a\u200b\u5b9a\u4e49\u200b\u5728\u200b\\(\\mathcal F\\)\u200b\u4e0a\u200b\u7684\u200b\u96c6\u200b\u51fd\u6570\u200b\u3002\u200b\u4e14\u200b\\(P\\)\u200b\u6ee1\u8db3\u200b</p> <ol> <li>\u200b\u975e\u200b\u8d1f\u6027\u200b\uff1a\\(\\forall A\\in \\mathcal F, P(A)\\geq 0\\)</li> <li>\u200b\u89c4\u4e00\u6027\u200b\uff1a\\(P(\\Omega) = 1\\)</li> <li> <p>\u200b\u53ef\u5217\u200b\u53ef\u52a0\u6027\u200b\uff1a\u200b\u82e5\u200b\\(\\forall i\\in \\mathbb N, A_i\\in \\mathcal F\\)\uff0c\u200b\u4e14\u200b\\(\\forall i\\not = j, A_i\\cap A_j=\\varnothing\\)\uff0c\u200b\u5219\u200b</p> \\[ P\\left(\\bigcup_{n=0}^\\infty A_n\\right) = \\sum_{n=0}^\\infty P(A_n) \\] </li> </ol> <p>\u200b\u79f0\u200b\\(P\\)\u200b\u4e3a\u200b\u53ef\u6d4b\u200b\u7a7a\u95f4\u200b\\((\\Omega, \\mathcal F)\\)\u200b\u4e0a\u200b\u7684\u200b\u6982\u7387\u200b\u6d4b\u5ea6\u200b\uff0c\\((\\Omega, \\mathcal F, P)\\)\u200b\u4e3a\u200b\u6982\u7387\u200b\u7a7a\u95f4\u200b\u3002\\(\\mathcal F\\)\u200b\u4e3a\u200b\u4e8b\u4ef6\u200b\u57df\u200b\uff0c\\(A\\in \\mathcal F\\)\u200b\u4e3a\u200b\uff08\u200b\u968f\u673a\u200b\uff09\u200b\u4e8b\u4ef6\u200b</p> <p>\u200b\u6982\u7387\u200b\u6d4b\u5ea6\u200b\\(P\\)\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6027\u8d28\u200b</p> <ol> <li>\u200b\u6709\u9650\u200b\u53ef\u52a0\u6027\u200b\uff1a\u200b\u53ef\u4ee5\u200b\u4ee4\u200b\\(A_{n+1} = A_{n+2} = \\cdots = \\varnothing\\)\uff0c\u200b\u7ed3\u5408\u200b\u53ef\u5217\u200b\u53ef\u52a0\u6027\u200b\u63a8\u51fa\u200b</li> <li>\\(P(A^C) = 1 - P(A)\\)<ul> <li>\\(P(\\varnothing) = 0\\)</li> </ul> </li> <li>\u200b\u96c6\u5408\u200b\u7684\u200b\u5305\u542b\u200b\u5173\u7cfb\u200b\uff1a\\(A\\subset B\\Rightarrow P(A)\\leq P(B)\\)</li> <li> <p>\u200b\u5bb9\u65a5\u200b\u539f\u7406\u200b\uff1a</p> \\[ P\\left(\\bigcup_{i=1}^n A_i\\right) = \\sum_{i=1}^n P(A_i) - \\sum_{1\\leq i &lt; j\\leq n}P(A_i\\cap A_j) + \\cdots + (-1)^{n+1}P(A_1\\cap \\cdots \\cap A_n) \\] <ul> <li>\\(P(A\\cup B) = P(A) + P(B) - P(A\\cap B)\\)</li> <li>\\(P(A - B) = P(A\\cup B) - P(B) = P(A) - P(A\\cap B)\\)</li> <li>\\(P\\left(\\bigcup_{i=1}^n A_i\\right)\\leq \\sum_{i=1}^n P(A_i)\\)</li> </ul> </li> </ol> <p>\u200b\u6ee1\u8db3\u200b\\(A_n\\subset A_{n+1}\\)\u200b\u7684\u200b\u4e8b\u4ef6\u200b\u5217\u200b\\(\\{A_n, n\\geq 1\\}\\)\u200b\u79f0\u4e3a\u200b\u5355\u8c03\u200b\u589e\u200b\u5e8f\u5217\u200b\uff0c\u200b\u6ee1\u8db3\u200b\\(A_n\\supset A_{n+1}\\)\u200b\u7684\u200b\u4e8b\u4ef6\u200b\u5217\u200b\\(\\{A_n, n\\geq 1\\}\\)\u200b\u79f0\u4e3a\u200b\u5355\u8c03\u200b\u51cf\u200b\u5e8f\u5217\u200b\u3002\u200b\u7531\u6b64\u200b\u53ef\u4ee5\u200b\u5b9a\u4e49\u200b\u4e8b\u4ef6\u200b\u5217\u200b\u7684\u200b\u6781\u9650\u200b\uff1a</p> <ol> <li>\u200b\u82e5\u200b\\(\\{A_n, n\\geq 1\\}\\)\u200b\u4e3a\u200b\u5355\u8c03\u200b\u589e\u200b\u5e8f\u5217\u200b\uff0c\u200b\u5219\u200b\\(\\lim\\limits_{n\\rightarrow \\infty}A_n = \\bigcup_{i=1}^\\infty A_i\\)</li> <li>\u200b\u82e5\u200b\\(\\{A_n, n\\geq 1\\}\\)\u200b\u4e3a\u200b\u5355\u8c03\u200b\u51cf\u200b\u5e8f\u5217\u200b\uff0c\u200b\u5219\u200b\\(\\lim\\limits_{n\\rightarrow \\infty}A_n = \\bigcap_{i=1}^\\infty A_i\\)</li> </ol> <p>\u200b\u4e8b\u4ef6\u200b\u5217\u200b\u7684\u200b\u6781\u9650\u200b\u6ee1\u8db3\u200b</p> \\[ \\lim_{n\\rightarrow\\infty}P(A_n) = P\\left(\\lim_{n\\rightarrow\\infty} A_n\\right) \\] <p>\u200b\u53ef\u4ee5\u200b\u8bc1\u660e\u200b\uff0c\u200b\u5355\u70b9\u200b\u96c6\u200b\\(\\{a\\}\\)\u200b\u4e3a\u200b\u4e8b\u4ef6\u200b\u5217\u200b\\(\\{[a, a+1/n], n &gt; 0\\}\\)\u200b\u7684\u200b\u6781\u9650\u200b\u3002</p> <p>Borel-Cantelli\u200b\u5f15\u7406\u200b</p> <p>\u200b\u8bbe\u200b\\(\\{A_n, n\\geq 1\\}\\)\u200b\u4e3a\u200b\u4e8b\u4ef6\u200b\u5e8f\u5217\u200b\uff0c\u200b\u6ee1\u8db3\u200b\\(\\sum_{i=1}^\\infty P(A_i) &lt; \\infty\\)\uff0c\u200b\u5219\u200b</p> \\[ P\\left(\\lim_{i\\rightarrow\\infty}\\sup A_i\\right) \\triangleq P\\left(\\bigcap_{n=1}^\\infty \\bigcup_{i=n}^\\infty A_i\\right) = 0 \\] <p>\u200b\u5b9a\u4e49\u200b\u6761\u4ef6\u200b\u6982\u7387\u200b</p> \\[ P(A|B) = \\frac{P(A\\cap B)}{P(B)} \\] <p>\u200b\u82e5\u200b\u4e8b\u4ef6\u200b\\(A, B\\)\u200b\u6ee1\u8db3\u200b\\(P(A\\cap B) = P(A)P(B)\\)\uff0c\u200b\u5219\u200b\u79f0\u200b\u4e8b\u4ef6\u200b\\(A, B\\)\u200b\u76f8\u4e92\u200b\u72ec\u7acb\u200b\uff0c\u200b\u4e14\u200b\\(P(A|B) = P(A)\\)\u3002\u200b\u540c\u7406\u200b\u53ef\u4ee5\u200b\u63a8\u5e7f\u200b\u81f3\u200b\\(n\\)\u200b\u4e2a\u200b\u4e8b\u4ef6\u200b\u76f8\u4e92\u200b\u72ec\u7acb\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002\u200b\u8bbe\u200b\\(A_1, \\cdots, A_n\\in \\mathcal F\\)\uff0c\u200b\u82e5\u200b\u5bf9\u4e8e\u200b\u5176\u4e2d\u200b\u4efb\u610f\u200b\\(k\\)\u200b\u4e2a\u200b\u4e8b\u4ef6\u200b\uff0c\u200b\u90fd\u200b\u6709\u200b</p> \\[ P(A_{i_1}\\cap\\cdots\\cap A_{i_k}) = P(A_{i_1})\\cdots P(A_{i_k}) \\] <p>\u200b\u79f0\u200b\\(A_1, \\cdots, A_n\\)\u200b\u76f8\u4e92\u200b\u72ec\u7acb\u200b\u3002</p> <p>\u200b\u82e5\u200b\\(\\{A_n, n\\geq 1\\}\\)\u200b\u4e3a\u200b\u76f8\u4e92\u200b\u72ec\u7acb\u200b\u7684\u200b\u4e8b\u4ef6\u200b\u5e8f\u5217\u200b\uff0c\u200b\u4e14\u200b\\(\\sum_{n=1}^\\infty P(A_n) = \\infty\\)\uff0c\u200b\u5219\u200b</p> \\[ P\\left(\\lim_{i\\rightarrow\\infty}\\sup A_i\\right) \\triangleq P\\left(\\bigcap_{n=1}^\\infty \\bigcup_{i=n}^\\infty A_i\\right) = 1 \\]"},{"location":"math/random-process/basics/#_3","title":"\u968f\u673a\u53d8\u91cf\u200b\u4e0e\u200b\u5206\u5e03\u200b\u51fd\u6570","text":"<p>\u200b\u8bbe\u200b\u6837\u672c\u7a7a\u95f4\u200b\u4e3a\u200b\\(\\Omega\\)\u3002</p>"},{"location":"math/random-process/basics/#_4","title":"\u968f\u673a\u53d8\u91cf","text":"<p>\u200b\u8bbe\u200b\\((\\Omega, \\mathcal F, P)\\)\u200b\u4e3a\u200b\u6982\u7387\u200b\u7a7a\u95f4\u200b\uff0c\\(X(\\omega)\\)\u200b\u4e3a\u200b\u5b9a\u4e49\u200b\u5728\u200b\\(\\Omega\\)\u200b\u4e0a\u200b\u7684\u200b\u5355\u503c\u200b\u5b9e\u200b\u51fd\u6570\u200b\uff0c\u200b\u5373\u200b\\(X: \\Omega\\rightarrow \\mathbb R\\)\uff0c\u200b\u82e5\u200b\\(\\forall a\\in \\mathbb R\\)\uff0c\u200b\u6709\u200b\\(\\{\\omega:  X(\\omega) \\leq a\\}\\in \\mathcal F\\)\uff0c\u200b\u79f0\u200b\\(X(\\omega)\\)\u200b\u4e3a\u200b\u968f\u673a\u53d8\u91cf\u200b\uff0c\u200b\u7b80\u8bb0\u200b\u4e3a\u200b\\(X\\)\u3002\u200b\u5b9a\u4e49\u200b\\(F(x) = P(X\\leq x) = P(X\\in (-\\infty, X])\\)\u200b\u4e3a\u200b\\(X\\)\u200b\u7684\u200b\u5206\u5e03\u200b\u51fd\u6570\u200b\u3002</p> <ul> <li>\u200b\u79bb\u6563\u200b\u578b\u200b\u968f\u673a\u53d8\u91cf\u200b\uff1a\u200b\u968f\u673a\u53d8\u91cf\u200b\\(X\\)\u200b\u7684\u200b\u53ef\u80fd\u200b\u53d6\u503c\u200b\u7684\u200b\u5168\u4f53\u200b\u662f\u200b\u53ef\u5217\u96c6\u200b\u6216\u8005\u200b\u6709\u9650\u200b\u96c6\u200b\u3002</li> <li> <p>\u200b\u8fde\u7eed\u578b\u200b\u968f\u673a\u53d8\u91cf\u200b\uff1a\u200b\u82e5\u200b\\(\\forall B\\in \\mathcal F\\)\uff0c\u200b\u5b58\u5728\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\\(f(x)\\)\u200b\u6ee1\u8db3\u200b</p> \\[ P(X\\in B) = \\int_B f(x)\\mathrm dx \\] <p>\u200b\u79f0\u200b\\(X\\)\u200b\u4e3a\u200b\u8fde\u7eed\u578b\u200b\u968f\u673a\u53d8\u91cf\u200b\uff0c\\(f(x)\\)\u200b\u4e3a\u200b\\(X\\)\u200b\u7684\u200b\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u200b\u3002</p> </li> </ul> <p>\u200b\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u200b\u4e0e\u200b\u6982\u7387\u5206\u5e03\u200b\u51fd\u6570\u200b</p> <p>\u200b\u6839\u636e\u200b\u6982\u7387\u5206\u5e03\u200b\u51fd\u6570\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u6709\u200b</p> \\[ P(x &lt; X\\leq x + h) = F(x + h) - F(x) = \\int_{x}^{x + h} f(x)\\mathrm dx = f(x)h + o(h) \\] <p>\u200b\u4ee4\u200b\\(h\\rightarrow 0\\)\u200b\u5e76\u53d6\u200b\u6781\u9650\u200b\uff0c\u200b\u5f97\u5230\u200b</p> \\[ \\frac{\\mathrm dF(x)}{\\mathrm dx} = \\lim_{h\\rightarrow 0} \\frac{F(x + h) - F(x)}{h} = f(x) \\] <p>\u200b\u5bf9\u4e8e\u200b\u4e8c\u7ef4\u200b\u968f\u673a\u53d8\u91cf\u200b\\(X, Y\\)\uff0c\u200b\u5b9a\u4e49\u200b\u8054\u5408\u200b\u5206\u5e03\u200b\u51fd\u6570\u200b\u4e3a\u200b\\(F(x, y) = P(X\\leq x, Y\\leq y)\\)\uff0c\u200b\u8fb9\u7f18\u200b\u5206\u5e03\u200b\u4e3a\u200b\\(F_X(x) = P(X\\leq x), F_Y = P(Y\\leq y)\\)\u3002\u200b\u540c\u7406\u200b\u53ef\u4ee5\u200b\u5b9a\u4e49\u200b\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u200b\\(f(x, y)\\)\uff1a</p> \\[ F(x, y) = \\int_{-\\infty}^x\\int_{-\\infty}^y f(v, u)\\mathrm du\\mathrm dv \\] <p>\u200b\u82e5\u200b\\(F(x, y) = F_X(x)F_Y(y)\\)\uff0c\u200b\u79f0\u200b\\(X\\)\u200b\u4e0e\u200b\\(Y\\)\u200b\u76f8\u4e92\u200b\u72ec\u7acb\u200b\u3002</p>"},{"location":"math/random-process/basics/#_5","title":"\u6570\u5b57\u200b\u7279\u5f81","text":"<p>\u200b\u8bbe\u200b\\(X\\)\u200b\u4e3a\u200b\u968f\u673a\u53d8\u91cf\u200b\uff0c\u200b\u5206\u5e03\u200b\u51fd\u6570\u200b\u4e3a\u200b\\(F(x)\\)\uff0c\u200b\u82e5\u200b\\(\\int_{-\\infty}^\\infty |x|\\mathrm dF(x)\\)\u200b\u5b58\u5728\u200b\uff0c\u200b\u5219\u200b\u5b9a\u4e49\u200b\\(X\\)\u200b\u7684\u200b\u671f\u671b\u200b\\(E(X)\\)\u200b\u4e3a\u200b</p> \\[ E(X) = \\int_{-\\infty}^\\infty x\\mathrm dF(x) \\] <p>\u200b\u6570\u5b66\u200b\u671f\u671b\u200b\\(E(X)\\)\u200b\u6ee1\u8db3\u200b</p> <ul> <li> <p>\u200b\u53ef\u52a0\u6027\u200b</p> \\[ E\\left(\\sum_{i=1}^n c_iX_i\\right) = \\sum_{i=1}^n c_iE(X_i) \\] </li> <li> <p>\u200b\u51fd\u6570\u200b</p> \\[ E(g(x)) = \\int_{-\\infty}^\\infty g(x)\\mathrm dF(x) \\] </li> </ul> <p>\u200b\u5bf9\u4e8e\u200b\u79bb\u6563\u200b\u578b\u200b\u968f\u673a\u53d8\u91cf\u200b\uff0c\u200b\u6709\u200b</p> \\[ E(X) = \\sum_{i=1}^\\infty x_nP(X = x_n) \\] <p>\u200b\u5bf9\u4e8e\u200b\u8fde\u7eed\u578b\u200b\u968f\u673a\u53d8\u91cf\u200b\uff0c\u200b\u6709\u200b</p> \\[ E(X) = \\int_{-\\infty}^\\infty xf(x)\\mathrm dx \\] <p>\u200b\u82e5\u200b\u968f\u673a\u53d8\u91cf\u200b\\(X, Y\\)\u200b\u76f8\u4e92\u200b\u72ec\u7acb\u200b\uff0c\u200b\u5219\u200b\u6709\u200b</p> \\[ \\begin{aligned}     E(XY) &amp;= \\int_{-\\infty}^\\infty \\int_{-\\infty}^\\infty xyf(x, y)\\mathrm dx\\mathrm dy \\\\     &amp;= \\int_{-\\infty}^\\infty \\int_{-\\infty}^\\infty xyf_X(x)f_Y(y)\\mathrm dx\\mathrm dy \\\\     &amp;= \\int_{-\\infty}^\\infty xf_X(x)\\mathrm dx\\int_{-\\infty}^\\infty yf_Y(y)\\mathrm dy \\\\     &amp;= E(X)E(Y) \\end{aligned} \\] <p>\u200b\u5b9a\u4e49\u200b\u968f\u673a\u53d8\u91cf\u200b\\(X\\)\u200b\u7684\u200b\u65b9\u5dee\u200b\u4e3a\u200b\\(\\sigma_X^2 = D(X) = E(X - E(X)) = E(X^2) - E^2(X)\\)\uff0c\u200b\u5b9a\u4e49\u200b\u968f\u673a\u53d8\u91cf\u200b\\(X, Y\\)\u200b\u7684\u200b\u534f\u65b9\u5dee\u200b\u4e3a\u200b\\(\\mathrm{cov}(X, Y) = E(XY) - E(X)E(Y)\\)\uff0c\u200b\u76f8\u5173\u7cfb\u6570\u200b\u4e3a\u200b\\(\\rho = \\mathrm{cov}(X, Y) / (\\sigma_X\\sigma_Y)\\)\uff0c\\(k\\)\u200b\u9636\u77e9\u200b\u4e3a\u200b\\(E(X^k)\\)</p> <p>\u200b\u5b9a\u4e49\u200b\u968f\u673a\u53d8\u91cf\u200b\\(X\\)\u200b\u7684\u200b\u77e9\u6bcd\u200b\u51fd\u6570\u200b\u4e3a\u200b\\(\\psi(t) = E\\left(e^{tX}\\right)\\)\uff0c\u200b\u7279\u5f81\u51fd\u6570\u200b\u4e3a\u200b\\(\\phi(t) = E\\left(e^{\\mathbf itX}\\right)\\)</p> <p>\u200b\u77e9\u6bcd\u200b\u51fd\u6570\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6027\u8d28\u200b</p> <ol> <li>\\(E\\left(X^k\\right) = \\psi^{(k)}(0)\\)</li> <li>\u200b\u8bbe\u200b\u968f\u673a\u53d8\u91cf\u200b\\(X, Y\\)\u200b\u7684\u200b\u5206\u5e03\u200b\u51fd\u6570\u200b\u4e3a\u200b\\(F_X(t), F_Y(t)\\)\uff0c\u200b\u77e9\u6bcd\u200b\u51fd\u6570\u200b\u4e3a\u200b\\(\\psi_X(t), \\psi_Y(t)\\)\uff0c\u200b\u5219\u200b\\(\\psi_X(t) = \\psi_Y(t) \\Leftrightarrow F_X(t) = F_Y(t)\\)</li> </ol> <p>\u200b\u7279\u5f81\u51fd\u6570\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6027\u8d28\u200b</p> <ol> <li>\u200b\u8bbe\u200b\u968f\u673a\u53d8\u91cf\u200b\\(X, Y\\)\u200b\u7684\u200b\u5206\u5e03\u200b\u51fd\u6570\u200b\u4e3a\u200b\\(F_X(t), F_Y(t)\\)\uff0c\u200b\u7279\u5f81\u51fd\u6570\u200b\u4e3a\u200b\\(\\phi_X(t), \\phi_Y(t)\\)\uff0c\u200b\u5219\u200b\\(\\phi_X(t) = \\phi_Y(t) \\Leftrightarrow F_X(t) = F_Y(t)\\)</li> <li>\\(i^kE(X^k) = \\phi^{(k)}(0)\\)</li> <li>\u200b\u82e5\u200b\\(X, Y\\)\u200b\u76f8\u4e92\u200b\u72ec\u7acb\u200b\uff0c\u200b\u6709\u200b\\(\\phi_{X+Y}(t) = \\phi_{X}(t) + \\phi_{Y}(t)\\)</li> </ol>"},{"location":"math/random-process/basics/#_6","title":"\u5e38\u89c1\u200b\u968f\u673a\u53d8\u91cf\u200b\u7684\u200b\u5206\u5e03","text":"<ol> <li> <p>\u200b\u4e8c\u9879\u5206\u5e03\u200b\uff1a\\(X\\sim B(n, p)\\)</p> \\[ P(X = k) = \\binom{n}{k} p^k(1 - p)^{n - k} \\] </li> <li> <p>\u200b\u6cca\u677e\u200b\u5206\u5e03\u200b\uff1a\\(X\\sim P(\\lambda)\\)</p> \\[ P(X = k) = \\frac{\\lambda^k}{k!}e^{-\\lambda} \\] </li> <li> <p>\u200b\u51e0\u4f55\u200b\u5206\u5e03\u200b\uff1a\\(X\\sim G(p)\\)</p> \\[ P(X = k) = (1 - p)^{k - 1}p \\] </li> <li> <p>\u200b\u5747\u5300\u5206\u5e03\u200b\uff1a\\(X\\sim U(a, b)\\)</p> \\[ f(x) = \\left\\{\\begin{aligned}     &amp; \\frac{1}{b-a} &amp; a &lt; x &lt; b \\\\     &amp; 0 &amp; \\text{otherwise} \\end{aligned}\\right. \\] </li> <li> <p>\u200b\u6b63\u6001\u5206\u5e03\u200b\uff1a\\(X\\sim N(\\mu, \\sigma^2)\\)</p> \\[ f(x) = \\frac{1}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}} \\] </li> <li> <p>\u200b\u6307\u6570\u5206\u5e03\u200b\uff1a\\(X\\sim E(\\lambda)\\)</p> \\[ f(x) = \\left\\{\\begin{aligned}     &amp; \\lambda e^{-\\lambda x} &amp; x\\geq 0 \\\\     &amp; 0 &amp; x &lt; 0 \\end{aligned}\\right. \\] </li> </ol>"},{"location":"math/random-process/basics/#_7","title":"\u6761\u4ef6\u200b\u6570\u5b66\u200b\u671f\u671b","text":"<p>\u200b\u5bf9\u4e8e\u200b\u8fde\u7eed\u200b\u968f\u673a\u53d8\u91cf\u200b\uff0c\u200b\u6761\u4ef6\u200b\u6570\u5b66\u200b\u671f\u671b\u200b\\(E(X|Y = y)\\)\u200b\u7684\u200b\u5b9a\u4e49\u200b\u5982\u4e0b\u200b\uff1a</p> \\[ E(X|Y = y) = \\int_{-\\infty}^\\infty x\\frac{f(x, y)}{f_Y(y)}\\mathrm dx \\] <p>\u200b\u5b9a\u4e49\u200b\\(E(X|Y)\\)\u200b\u4e3a\u200b\\(X\\)\u200b\u5173\u4e8e\u200b\\(Y\\)\u200b\u7684\u200b\u6761\u4ef6\u200b\u6570\u5b66\u200b\u671f\u671b\u200b</p> \\[ E(X|Y) = \\sum_j \\boldsymbol 1_{\\{Y = y_j\\}}(\\omega)E(X|Y=y_j) \\] <p>\u200b\u5bf9\u4e8e\u200b\u79bb\u6563\u200b\u968f\u673a\u53d8\u91cf\u200b\uff0c\u200b\u6761\u4ef6\u200b\u6570\u5b66\u200b\u671f\u671b\u200b\\(E(X|Y = y)\\)\u200b\u7684\u200b\u5b9a\u4e49\u200b\u5982\u4e0b\u200b\uff1a</p> \\[ E(X|Y = y) = \\sum_i x_iP(X=x_i | Y=y) \\] <p>\u200b\u663e\u7136\u200b\uff0c\\(E(X|Y = y)\\)\u200b\u662f\u200b\\(y\\)\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u5b9a\u4e49\u200b\u968f\u673a\u53d8\u91cf\u200b\\(E(X|Y)\\)\u200b\u4e3a\u200b\\(X\\)\u200b\u5173\u4e8e\u200b\\(Y\\)\u200b\u7684\u200b\u6761\u4ef6\u671f\u671b\u200b\uff0c\u200b\u82e5\u200b\\(E(X|Y)\\)\u200b\u6ee1\u8db3\u200b</p> <ol> <li>\\(E(X|Y)\\)\u200b\u662f\u200b\\(Y\\)\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u5f53\u200b\\(Y = y\\)\u200b\u65f6\u200b\uff0c\\(E(X|Y) = E(X|Y = y)\\)</li> <li> <p>\\(\\forall D\\in \\mathcal B\\)\uff0c\u200b\u6709\u200b</p> \\[ E[E(X|Y)|Y\\in D] = E(X|Y\\in D) \\] </li> </ol> <p>\u200b\u6761\u4ef6\u200b\u6570\u5b66\u200b\u671f\u671b\u200b\u7684\u200b\u6027\u8d28\u200b</p> <p>\u200b\u6761\u4ef6\u200b\u6570\u5b66\u200b\u671f\u671b\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6027\u8d28\u200b\uff1a</p> <ol> <li>\\(E(E(X|Y)) = EX\\)</li> <li>\u200b\u82e5\u200b\\(X, Y\\)\u200b\u76f8\u4e92\u200b\u72ec\u7acb\u200b\uff0c\u200b\u5219\u200b\\(E(X|Y) = EX\\)</li> <li>\\(E[g(X)h(Y)|Y] = h(Y)E(g(X)|Y)\\quad \\text{a.s.}\\)</li> </ol>"},{"location":"math/random-process/basics/#_8","title":"\u968f\u673a\u200b\u8fc7\u7a0b","text":"<p>\u200b\u968f\u673a\u200b\u8fc7\u7a0b\u200b\u662f\u200b\u4e00\u65cf\u200b\u65e0\u7a77\u200b\u591a\u4e2a\u200b\uff0c\u200b\u76f8\u4e92\u200b\u6709\u5173\u200b\u7684\u200b\u968f\u673a\u53d8\u91cf\u200b\u3002\u200b\u8bbe\u200b\\(X(t, \\omega)\\)\u200b\u4e3a\u200b\u968f\u673a\u53d8\u91cf\u200b\uff0c\u200b\u5176\u4e2d\u200b\\(t\\in T\\subset \\mathbb R\\)\u200b\u4e3a\u200b\u53c2\u6570\u200b\u3002\u200b\u79f0\u200b\\(X_T = \\{X(t, \\omega), t\\in T\\}\\)\u200b\u4e3a\u200b\u968f\u673a\u200b\u8fc7\u7a0b\u200b\u3002</p> <ol> <li>\\(X(t, \\omega)\\)\u200b\u53ef\u4ee5\u200b\u7b80\u8bb0\u200b\u4e3a\u200b\\(X(t)\\)\uff1b</li> <li>\u200b\u5f53\u200b\\(T\\)\u200b\u4e3a\u200b\u53ef\u5217\u200b\u96c6\u65f6\u200b\uff0c\u200b\u79f0\u200b\\(X_T\\)\u200b\u4e3a\u200b\u968f\u673a\u200b\u5e8f\u5217\u200b\uff1b</li> <li>\\(X_T\\)\u200b\u7684\u200b\u53d6\u503c\u200b\u8303\u56f4\u200b\u79f0\u4e3a\u200b\u72b6\u6001\u200b\u7a7a\u95f4\u200b\\(S\\)\uff1b</li> <li>\\(X(\\cdot, \\omega), \\omega\\in \\Omega\\)\u200b\u662f\u200b\u5173\u4e8e\u200b\\(t\\)\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u79f0\u4e3a\u200b\u8f68\u9053\u200b\u3002</li> </ol>"},{"location":"math/random-process/notations/","title":"\u8bb0\u53f7","text":"<p>\u200b\u968f\u673a\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u5e38\u7528\u200b\u7684\u200b\u8bb0\u53f7\u200b\u8868\u793a\u200b</p>"},{"location":"math/random-process/notations/#_2","title":"\u9884\u5907\u200b\u77e5\u8bc6","text":"<p>\u200b\u53ef\u5217\u96c6\u200b</p> <p>\u200b\u82e5\u200b\u4e00\u4e2a\u200b\u96c6\u5408\u200b\\(A\\)\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u53ef\u4ee5\u200b\u4ee5\u200b\u5e8f\u5217\u200b\\(\\{a_n\\}\\)\u200b\u7684\u200b\u5f62\u5f0f\u200b\u8868\u793a\u200b\uff0c\u200b\u5373\u200b\u5b58\u5728\u200b\u4e00\u4e2a\u200b\\(\\mathbb N_+\\rightarrow A\\)\u200b\u7684\u200b\u53cc\u5c04\u200b\uff0c\u200b\u79f0\u200b\u96c6\u5408\u200b\\(A\\)\u200b\u4e3a\u200b\u53ef\u5217\u96c6\u200b\u3002</p> <p>\u200b\u51e0\u4e4e\u200b\u5904\u5904\u200b</p> <p>\u200b\u8bbe\u200b\\(Z_1, Z_2\\)\u200b\u4e3a\u200b\u968f\u673a\u53d8\u91cf\u200b\uff0c\u200b\u4e14\u200b\\(P(Z_1 = Z_2) = 1\\)\uff0c\u200b\u79f0\u200b\\(Z_1, Z_2\\)\u200b\u51e0\u4e4e\u200b\u5904\u5904\u200b\u76f8\u7b49\u200b\uff0c\u200b\u8bb0\u200b\u4f5c\u200b\\(Z_1 = Z_2\\quad \\text{a.s.}\\)</p>"},{"location":"math/random-process/notations/#_3","title":"\u6cca\u677e\u200b\u8fc7\u7a0b","text":"<p>\u200b\u8ba1\u6570\u200b\u8fc7\u7a0b\u200b</p> <p>\u200b\u82e5\u200b\u968f\u673a\u200b\u8fc7\u7a0b\u200b\\(\\{N(t), t\\geq 0\\}\\)\u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6761\u4ef6\u200b\uff0c\u200b\u79f0\u200b\\(N(t)\\)\u200b\u4e3a\u200b\u8ba1\u6570\u200b\u8fc7\u7a0b\u200b\u3002</p> <ol> <li>\\(N(t)\\in \\mathbb N\\)\uff0c\u200b\u5373\u200b\\(N(t)\\)\u200b\u53d6\u503c\u200b\u4e3a\u200b\u975e\u8d1f\u200b\u6574\u6570\u200b</li> <li>\\(\\forall t &gt; s, N(t)\\geq N(s)\\)</li> </ol>"},{"location":"math/random-process/poisson/","title":"\u6cca\u677e\u200b\u8fc7\u7a0b","text":"<p>\\(\\renewcommand{\\geq}{\\geqslant}\\renewcommand{\\leq}{\\leqslant}\\) \u200b\u6ee1\u8db3\u200b\u5982\u4e0b\u200b\u6761\u4ef6\u200b\u7684\u200b\u968f\u673a\u200b\u8fc7\u7a0b\u200b\\(\\{N(t), t\\geq 0\\}\\)\u200b\u4e3a\u200b\u65f6\u200b\u9f50\u6cca\u677e\u200b\u8fc7\u7a0b\u200b\u3002</p> <ol> <li>\\(\\{N(t), t\\geq 0\\}\\)\u200b\u4e3a\u200b\u8ba1\u6570\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u4e14\u200b\\(N(0) = 0\\)\uff1b</li> <li>\\(\\{N(t), t\\geq 0\\}\\)\u200b\u4e3a\u200b\u72ec\u7acb\u200b\u589e\u91cf\u200b\u8fc7\u7a0b\u200b\uff1b</li> <li>\\(\\{N(t), t\\geq 0\\}\\)\u200b\u5177\u5907\u200b\u589e\u91cf\u200b\u5e73\u7a33\u6027\u200b\uff0c\u200b\u5373\u200b\\(N(t) - N(s)\\)\u200b\u7684\u200b\u5206\u5e03\u200b\u4ec5\u200b\u4e0e\u200b\\(t - s\\)\u200b\u6709\u5173\u200b</li> <li> <p>\u200b\u5bf9\u4e8e\u200b\u5145\u5206\u200b\u5c0f\u200b\u7684\u200b\\(\\Delta t &gt; 0\\)\uff0c\u200b\u6709\u200b</p> \\[ \\left\\{ \\begin{aligned}     P(N(t + \\Delta t) - N(t) = 1) &amp;= \\lambda \\Delta t + o(\\Delta t) \\\\     P(N(t + \\Delta t) - N(t) \\geq 2) &amp;= o(\\Delta t) \\end{aligned} \\right. \\] </li> </ol>"},{"location":"math/random-process/poisson/#_2","title":"\u589e\u91cf\u200b\u7684\u200b\u6982\u7387\u5206\u5e03","text":"<p>\u200b\u6cca\u677e\u200b\u8fc7\u7a0b\u200b\u7684\u200b\u589e\u91cf\u200b\\(N(t + s) - N(s)\\)\u200b\u670d\u4ece\u200b\u53c2\u6570\u200b\u4e3a\u200b\\(\\lambda t\\)\u200b\u7684\u200b\u6cca\u677e\u200b\u5206\u5e03\u200b\uff0c\u200b\u5373\u200b</p> \\[ P[N(t + s) - N(s) = k] = \\frac{(\\lambda t)^k}{k!}e^{-\\lambda t} \\] \u200b\u8bc1\u660e\u200b <p>\u200b\u6839\u636e\u200b\u6cca\u677e\u200b\u8fc7\u7a0b\u200b\u7684\u200b\u589e\u91cf\u200b\u5e73\u7a33\u6027\u200b\uff0c\u200b\u6709\u200b</p> \\[ P(N(s + t) - N(s) = n) = P(N(t) = n) \\] <ol> <li> <p>\\(n = 0\\)\u200b\u65f6\u200b\uff0c\u200b\u6709\u200b\\(\\{N(h + t) = 0, h &gt; 0\\} = \\{N(h+ t) - N(t) = 0, N(t) = 0, h &gt; 0\\}\\)\uff0c\u200b\u6839\u636e\u200b\u589e\u91cf\u200b\u72ec\u7acb\u6027\u200b\uff0c\u200b\u6709\u200b</p> \\[ \\begin{aligned}     P(N(h + t) = 0) &amp;= P(N(h + t) - N(t) = 0) P(N(t) = 0) \\\\     &amp;= P(N(h) = 0) P(N(t) = 0) \\end{aligned} \\] <p>\u200b\u6839\u636e\u200b\u6cca\u677e\u200b\u8fc7\u7a0b\u200b\u7684\u200b\u6027\u8d28\u200b\\(P(N(t + \\Delta t) - N(t) = 1) = \\lambda \\Delta t + o(\\Delta t)\\)\uff0c\u200b\u6709\u200b\uff1a</p> \\[ \\begin{aligned}     \\lim_{h\\rightarrow 0} \\frac{P(t + h) - P(t)}{h} &amp;= \\lim_{h\\rightarrow 0} \\frac{P(t)(1 - \\lambda h - o(h)) - P(t)}{h} \\\\     &amp;= -\\lambda P(t) - \\lim_{h\\rightarrow 0} \\frac{o(h)}{h} \\\\     &amp;= -\\lambda P(t) \\end{aligned} \\] <p>\u200b\u89e3\u200b\u5fae\u5206\u65b9\u7a0b\u200b\\(P_0'(t) = -\\lambda P_0(t)\\)\uff0c\u200b\u89e3\u5f97\u200b\\(P_0(t) = e^{-\\lambda t + C}\\)\uff0c\u200b\u53c8\u200b\u56e0\u4e3a\u200b\\(N(0) = 0, P_0(N(0) = 0) = 1\\)\uff0c\u200b\u5f97\u200b\\(C = 0\\)\uff0c\u200b\u4ece\u800c\u200b\u6709\u200b</p> \\[ P_0(t) = e^{-\\lambda t} \\] </li> <li> <p>\\(n &gt; 0\\)\u200b\u65f6\u200b\uff0c\\(\\{N(t + h) = n\\} = \\bigcup_{k = 0} ^ n \\{N(t) = k, N(t + h) - N(t) = (n - k)\\}\\)\uff0c\u200b\u800c\u200b\\(n - k \\geq 2\\)\u200b\u65f6\u200b\uff0c\u200b\u6709\u200b\\(P(N(t + h) - N(t) = n - k) = o(h)\\)\uff0c\u200b\u7531\u200b\u589e\u91cf\u200b\u72ec\u7acb\u6027\u200b</p> \\[ \\begin{aligned}     P(N(t + h) = n) &amp;= \\sum_{k = 0} ^ n P(N(t) = k) P(N(t + h) - N(t) = n - k) \\\\     &amp;= P(N(t) = n)(1 - \\lambda t - o(h)) + P(N(t) = n - 1)(\\lambda t + o(h)) \\\\     &amp;+ \\sum_{k = 2}^n P(N(t) = n - k)o(h) \\end{aligned} \\] <p>\u200b\u7531\u6b64\u200b</p> \\[ \\begin{aligned}     &amp;\\lim_{h\\rightarrow 0} \\frac{P(N(t + h) = n) - P(N(t) = n)}{h} \\\\     =&amp; \\lim_{h\\rightarrow 0}\\frac{P(N(t) = n)(\\sum_{k = 2}^n P(N(t) = n - k)o(h) - P(N(t) = n)}{h} \\\\     +&amp; \\lim_{h\\rightarrow 0}\\frac{\\sum_{k = 2}^n P(N(t) = n - k)o(h) - P(N(t) = n)}{h} \\\\     =&amp; \\lim_{h\\rightarrow 0}\\frac{P(N(t) = n)(- \\lambda t) + P(N(t) = n - 1)(\\lambda t)}{h} \\\\ \\end{aligned} \\] <p>\u200b\u5f97\u5230\u200b</p> \\[ P_n'(t) = -\\lambda P_n(t) + \\lambda P_{n-1}(t) \\] <p>\u200b\u8003\u8651\u200b\u7ea6\u675f\u6761\u4ef6\u200b\\(P_n(0) = 0\\)\uff0c\u200b\u89e3\u5f97\u200b</p> \\[ \\frac{\\mathrm d}{\\mathrm dt}[e^{\\lambda t} P_n(t)] = \\lambda e^{\\lambda t}P_{n - 1}(t) \\] <ol> <li>\\(n = 0\\)\u200b\u65f6\u200b\uff0c\u200b\u6709\u200b\\(P_n(t) = e^{-\\lambda t} = \\frac{(\\lambda t)^0}{0!}e^{-\\lambda t}\\)</li> <li> <p>\u200b\u8bbe\u200b\u5bf9\u4e8e\u200b\\(n &lt; k\\)\u200b\u65f6\u200b\u547d\u9898\u200b\u6210\u7acb\u200b\uff0c\u200b\u53ea\u200b\u9700\u200b\u8bc1\u660e\u200b\\(n = k\\)\u200b\u65f6\u200b\u547d\u9898\u200b\u6210\u7acb\u200b\u5373\u53ef\u200b\uff0c\u200b\u6709\u200b</p> \\[ \\begin{aligned}     P_k(t) &amp;= e^{-\\lambda t}\\int \\frac{\\mathrm d}{\\mathrm dt}[e^{\\lambda t} P_k(t)] \\mathrm dt \\\\     &amp;= e^{-\\lambda t}\\int \\lambda e^{\\lambda t}P_{k - 1}(t) \\mathrm dt \\\\     &amp;= e^{-\\lambda t}\\int \\lambda \\frac{(\\lambda t)^{k-1}}{(k-1)!} \\mathrm dt \\\\     &amp;= \\frac{(\\lambda t)^k}{k!}e^{-\\lambda t} \\end{aligned} \\] </li> </ol> </li> </ol>"},{"location":"math/random-process/poisson/#_3","title":"\u76f8\u90bb\u200b\u4e8b\u4ef6\u200b\u65f6\u95f4\u200b\u95f4\u9694\u200b\u7684\u200b\u6982\u7387\u5206\u5e03","text":"<p>\u200b\u8bbe\u200b\\(\\{N(t), t \\geq 0\\}\\)\u200b\u4e3a\u200b\u8ba1\u6570\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u8bbe\u200b\\(S_n\\)\u200b\u8868\u793a\u200b\u7b2c\u200b\\(n\\)\u200b\u4e2a\u200b\u65f6\u95f4\u200b\u53d1\u751f\u200b\u7684\u200b\u65f6\u523b\u200b\uff0c\u200b\u5373\u200b\\(S_n = \\inf\\{t, t &gt; S_{n - 1}, N(t) = n\\}\\)\uff0c\u200b\u7279\u522b\u200b\u5730\u200b\uff0c\u200b\u4ee4\u200b\\(S_0 = 0\\)\u3002\\(S_n, N(t)\\)\u200b\u7684\u200b\u4e8b\u4ef6\u200b\u6ee1\u8db3\u200b</p> \\[ \\begin{aligned}     \\{S_n \\leq t\\} &amp;\\equiv \\{N(t) \\geq n\\} \\\\     \\{N(t) = n\\} &amp;\\equiv \\{S_n\\leq t &lt; S_{n + 1}\\} \\equiv \\{S_n\\leq t\\} - \\{S_{n+1}\\leq t\\} \\end{aligned} \\] <p>\u200b\u7531\u4e8e\u200b\\(\\{S_n \\leq t\\} \\equiv \\{N(t) \\geq n\\}\\)\uff0c\u200b\u53ef\u4ee5\u200b\u8ba1\u7b97\u200b\\(S_n\\)\u200b\u7684\u200b\u5206\u5e03\u200b\u51fd\u6570\u200b</p> \\[ P(S_n\\leq t) = P(N(t)\\geq n) = 1 - e^{-\\lambda t}\\sum_{k=0}^{n-1} \\frac{(\\lambda t)^{k}}{k!} \\] <p>\u200b\u7279\u522b\u200b\u5730\u200b\uff0c\u200b\u5f53\u200b\\(n = 1\\)\u200b\u65f6\u200b\uff0c\u200b\u6709\u200b\\(P(X_1\\leq t) = P(S_1\\leq t) = (1 - e^{-\\lambda t}) I_{\\{t\\geq 0\\}}\\)</p> <p>\u200b\u8ba1\u6570\u200b\u8fc7\u7a0b\u200b\\(\\{N(t), t\\geq 0\\}\\)\u200b\u662f\u200b\u6cca\u677e\u200b\u8fc7\u7a0b\u200b\u7684\u200b\u5145\u8981\u6761\u4ef6\u200b\u662f\u200b\\(\\{X_n = S_{n} - S_{n-1}, n\\geq 1\\}\\)\u200b\u72ec\u7acb\u200b\u540c\u200b\u5206\u5e03\u200b\uff0c\u200b\u670d\u4ece\u200b\u7684\u200b\u5206\u5e03\u200b\u4e3a\u200b\u53c2\u6570\u200b\\(\\lambda\\)\u200b\u7684\u200b\u6307\u6570\u5206\u5e03\u200b\u3002</p> \u200b\u8bc1\u660e\u200b <ol> <li> <p>\\(\\Leftarrow\\)\uff1a\u200b\u5fc5\u8981\u6027\u200b\u8bc1\u660e\u200b\uff0c\u200b\u5148\u6c42\u200b\\(S_1, \\cdots, S_n\\)\u200b\u7684\u200b\u8054\u5408\u200b\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u200b\uff0c\u200b\u8bbe\u200b\\(t_1 &lt; t_2 &lt; \\cdots &lt; t_n\\)\uff0c\u200b\u8bbe\u200b\\(h\\)\u200b\u4e3a\u200b\u5145\u5206\u200b\u5c0f\u200b\u7684\u200b\u6b63\u6570\u200b\uff0c\u200b\u6ee1\u8db3\u200b</p> \\[ t_1 + \\frac h2 &lt; t_2 - \\frac h2 &lt; t_2 + \\frac h2 &lt; \\cdots &lt; t_n - \\frac h2 \\] <p>\u200b\u8003\u8651\u200b\u4e8b\u4ef6\u200b\\(A\\)</p> \\[ \\begin{aligned}     A&amp; \\\\     &amp;\\equiv \\left\\{t_1 - \\frac h2 &lt; S_1 \\leq t_1 + \\frac h2, t_2 - \\frac h2 &lt; S_2 \\leq t_2 + \\frac h2, \\cdots, t_n - \\frac h2 &lt; S_n \\leq t_n + \\frac h2\\right\\} \\\\     \\equiv &amp; \\left\\{N\\left(t_1 - \\frac h2\\right) = 0, N\\left(t_{i+1} - \\frac h2\\right) - N\\left(t_i + \\frac h2\\right) = 0, N\\left(t_{i} + \\frac h2\\right) - N\\left(t_{i} - \\frac h2\\right) = 1\\right\\} \\\\     &amp; 0\\leq i\\leq n - 1 \\end{aligned} \\] <p>\u200b\u800c\u200b\u6839\u636e\u200b\u6cca\u677e\u200b\u8fc7\u7a0b\u200b\u7684\u200b\u6027\u8d28\u200b</p> \\[ \\begin{aligned}     P\\left(N\\left(t_n + \\frac h2\\right) - N\\left(t_n - \\frac h2\\right)= 1\\right) &amp;= \\lambda h + o(h) \\\\     P\\left(N\\left(t_n + \\frac h2\\right) - N\\left(t_n - \\frac h2\\right)\\geq 2\\right) &amp;= o(h) \\\\ \\end{aligned} \\] <p>\u200b\u6709\u200b</p> \\[ P(A) = (\\lambda h)^ne^{-\\lambda (t_n + h/2)} + o\\left(h^n\\right) = \\lambda ^nh^ne^{-\\lambda t_n} + o\\left(h^n\\right) \\] <p>\u200b\u56e0\u6b64\u200b\uff0c\\(\\left(S_1, \\cdots, S_n\\right)\\)\u200b\u7684\u200b\u6982\u7387\u5bc6\u5ea6\u200b\u4e3a\u200b</p> \\[ f(t_1, \\cdots, t_n) = \\left\\{ \\begin{aligned}     &amp; \\lambda^n e^{-\\lambda t_n} &amp; 0 &lt; t_1 &lt; \\cdots &lt; t_n \\\\     &amp; 0 &amp; \\mathrm{otherwise} \\end{aligned} \\right. \\] <p>\u200b\u800c\u200b\\(X_n = S_n - S_{n-1}\\)\uff0c\u200b\u8bbe\u200b\\(x_n = t_n - t_{n - 1}\\)\uff0c\u200b\u5219\u200b\\(t_n = \\sum_{i=1}^n x_n\\)\uff0c\u200b\u4ece\u800c\u200b\u53d8\u6362\u200b\u7684\u200bJacob\u200b\u77e9\u9635\u200b\u4e3a\u200b</p> \\[ J = \\frac{\\partial (t_1, \\cdots, t_n)}{\\partial (x_1, \\cdots, x_n)} = \\begin{vmatrix}     1 &amp; 0 &amp; \\cdots &amp; 0 \\\\     1 &amp; 1 &amp; \\cdots &amp; 0 \\\\     \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\     1 &amp; 1 &amp; \\cdots &amp; 1 \\end{vmatrix} \\] <p>\u200b\u56e0\u6b64\u200b\\(X_1, \\cdots, X_n\\)\u200b\u7684\u200b\u6982\u7387\u5bc6\u5ea6\u200b\u4e3a\u200b</p> \\[ g(x_1, \\cdots, x_n) = \\lambda^n e^{-\\lambda (x_1 + \\cdots + x_n)} = \\prod_{i=1}^n \\left(\\lambda e^{-\\lambda x_i}\\right), x_i \\geq 0 \\] <p>\u200b\u56e0\u6b64\u200b\\(X_1, \\cdots, X_n\\)\u200b\u72ec\u7acb\u200b\u540c\u200b\u6307\u6570\u5206\u5e03\u200b\u3002</p> </li> <li> <p>\\(\\Rightarrow\\)\uff1a\u200b\u5145\u5206\u6027\u200b\u8bc1\u660e\u200b\uff0c\u200b\u8bbe\u200b\\(\\{X_k, k\\geq 1\\}\\)\u200b\u72ec\u7acb\u200b\u540c\u200b\u6307\u6570\u5206\u5e03\u200b\uff0c\u200b\u8bbe\u200b\\(S_0 = 0, S_n = S_0 + \\sum_{i = 1}^n X_i\\)\u3002\u200b\u5b9a\u4e49\u200b</p> \\[ N(t) = \\sum_{n=1}^\\infty I_{\\{S_n\\leq t\\}} \\] <ul> <li>\u200b\u7531\u4e8e\u200b\\(I_{\\{S_n\\leq t\\}}\\in \\mathbb N\\)\uff0c\u200b\u5219\u200b\\(N(t)\\in \\mathbb N\\)\u3002</li> <li> <p>\u200b\u5bf9\u4e8e\u200b\\(t &gt; s\\)\uff0c\u200b\u6709\u200b</p> \\[ N(t) - N(s) = \\sum_{n = 1}^\\infty I_{\\{S_n\\leq t\\}}- I_{\\{S_n\\leq s\\}} \\] <p>\u200b\u800c\u200b\\(S_n - S_{n-1} = X_n &gt; 0\\)\uff0c\u200b\u56e0\u6b64\u200b\\(S_n\\)\u200b\u4e3a\u200b\u5355\u8c03\u200b\u589e\u200b\u5e8f\u5217\u200b\uff0c\u200b\u4ece\u800c\u200b\\(\\{S_n\\leq s\\}\\subset \\{S_n\\leq t\\}\\)\uff0c\u200b\u5373\u200b\\(I_{\\{S_n\\leq t\\}}- I_{\\{S_n\\leq s\\}} \\geq 0\\)\uff0c\u200b\u56e0\u6b64\u200b\\(N(t) - N(s)\\)</p> </li> </ul> <p>\u200b\u53ef\u200b\u5f97\u200b\\(N(t)\\)\u200b\u4e3a\u200b\u8ba1\u6570\u200b\u8fc7\u7a0b\u200b\u3002\u200b\u4ee5\u4e0b\u200b\u8ba1\u7b97\u200b\\(S_n\\)\u200b\u7684\u200b\u5206\u5e03\u200b\u3002\u200b\u5df2\u77e5\u200b\\(X_1, \\cdots, X_n\\)\u200b\u72ec\u7acb\u200b\u540c\u200b\u6307\u6570\u5206\u5e03\u200b\uff0c\u200b\u8bbe\u200b\\(t_n = \\sum_{i=1}^n x_i\\)\uff0c\u200b\u5219\u200b\\(x_n = t_n - t_{n-1}\\)\uff0c\u200b\u4ece\u800c\u200bJacob\u200b\u77e9\u9635\u200b\u4e3a\u200b</p> \\[ J = \\frac{\\partial (x_1, \\cdots, x_n)}{\\partial (t_1, \\cdots, t_n)} = \\begin{vmatrix}     1 &amp; 0 &amp; 0 &amp; \\cdots &amp; 0 \\\\     -1 &amp; 1 &amp; 0 &amp; \\cdots &amp; 0 \\\\     0 &amp; -1 &amp; 1 &amp; \\cdots &amp; 0 \\\\     \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\     0 &amp; 0 &amp; 0 &amp; \\cdots &amp; 1 \\end{vmatrix} \\] <p>\u200b\u800c\u200b\\(X_1, \\cdots, X_n\\)\u200b\u7684\u200b\u8054\u5408\u200b\u6982\u7387\u5bc6\u5ea6\u200b\u4e3a\u200b</p> \\[ g(x_1, \\cdots, x_n) = \\lambda^n e^{-\\lambda (x_1 + \\cdots + x_n)} = \\prod_{i=1}^n \\left(\\lambda e^{-\\lambda x_i}\\right), x_i \\geq 0 \\] <p>\u200b\u56e0\u6b64\u200b\\(S_1, \\cdots, S_n\\)\u200b\u7684\u200b\u8054\u5408\u200b\u6982\u7387\u5bc6\u5ea6\u200b\u4e3a\u200b</p> \\[ f(t_1, \\cdots, t_n) = \\left\\{ \\begin{aligned}     &amp; \\lambda^n e^{-\\lambda t_n} &amp; 0 &lt; t_1 &lt; \\cdots &lt; t_n \\\\     &amp; 0 &amp; \\mathrm{otherwise} \\end{aligned} \\right. \\] </li> </ol>"},{"location":"notes/2020/","title":"\u4e00\u4e9b\u200b\u5f88\u200b\u559c\u6b22\u200b\u7684\u200b\u63a8\u9001","text":"<p>\u300a\u200b\u6628\u665a\u200b\u300b by \u200b\u8001\u9f20\u200b\u4ec0\u4e48\u200b\u90fd\u200b\u77e5\u9053\u200b</p> <p>\u300a\u200b\u6740\u6b7b\u200b\u65e0\u804a\u200b\u7684\u200b\u540c\u65f6\u200b\uff0c\u200b\u4f60\u200b\u4e5f\u200b\u5728\u200b\u6740\u6b7b\u200b\u81ea\u5df1\u200b\u300b by \u200b\u4eba\u7269\u200b</p> <p>\u300a\u200b\u75db\u82e6\u200b\u7684\u200b\u4e00\u767e\u5f20\u200b\u5e95\u7247\u200b\u300b by \u200b\u4eba\u7269\u200b</p> <p>\u300a\u200b\u603b\u200b\u4e0d\u80fd\u200b\u4e27\u6c14\u200b\u592a\u4e45\u200b\u5427\u200b\u3002\u300b by \u200b\u6982\u7387\u8bba\u200b</p> <p>\u300a\u200b\u6211\u4eec\u200b\u628a\u200b\u8fd9\u573a\u200b\u521d\u96ea\u200b\u505a\u6210\u200b\u4e86\u200b\u7535\u5f71\u6d77\u62a5\u200b\u300b by \u200b\u6e05\u534e\u5927\u5b66\u200b\u6e05\u65b0\u200b\u65f6\u62a5\u200b</p> <p>\u300a\u200b\u56f0\u4e8e\u200b\u4eba\u8138\u8bc6\u522b\u200b\u300b by \u200b\u4eba\u7269\u200b</p> <p>\u300a\u200b\u65b0\u200b\u7684\u200b\u5341\u5e74\u200b\uff0c\u200b\u4eba\u751f\u200b\u7684\u200b\u5947\u5e7b\u200b\u6f02\u6d41\u200b\u300b by \u200b\u4eba\u7269\u200b</p> <p>\u300a\u200b\u6587\u827a\u200b\u662f\u200b\u4e00\u573a\u200b\u9a97\u5c40\u200b\u5417\u200b\uff1f\u300b by \u200b\u4eba\u7269\u200b</p> <p>\u300a\u200b\u4e00\u7897\u200b\u7c73\u200b\u8c46\u8150\u200b\uff0c\u200b\u7a7f\u8d8a\u200b\u5c71\u6d77\u200b\u300b by \u200b\u4eba\u7269\u200b</p> <p>\u300a\u200b\u4fdd\u7814\u200b\u5931\u8d25\u200b\u4ee5\u540e\u200b\uff0c\u200b\u6211\u200b\u53c8\u200b\u8003\u200b\u4e86\u200b\u6b21\u200b\u6e05\u534e\u200b\u300b by \u200b\u6e05\u534e\u200b\u7814\u8bfb\u200b\u95f4\u200b</p> <p>\u300a\u200b\u4eca\u5929\u200b\u662f\u200b2020\u200b\u5e74\u200b\u4f60\u200b\u5728\u200b\u6e05\u534e\u200b\u7206\u809d\u200b\u7684\u200b\u7b2c\u200b366\u200b\u5929\u200b\u300b by \u200b\u6e05\u534e\u5927\u5b66\u200b\u6e05\u65b0\u200b\u65f6\u62a5\u200b</p>"},{"location":"notes/2021/","title":"\u4e00\u4e9b\u200b\u5f88\u200b\u559c\u6b22\u200b\u7684\u200b\u63a8\u9001","text":"<p>\u300a2020 \u200b\u6700\u200b\u820d\u4e0d\u5f97\u200b\u5220\u200b\u7684\u200b\u7167\u7247\u200b\u300b by \u200b\u6e05\u534e\u5927\u5b66\u200b</p> <p>\u200b\u665a\u5b89\u200b\u6d77\u62a5\u200b by \u200b\u90d1\u5dde\u200b\u53d1\u5e03\u200b</p> <p>\u200b\u77e5\u4e4e\u200b\u5b87\u5b99\u200b\u91cc\u200b\u7684\u200b\u90a3\u4e9b\u200b\u8d22\u5bcc\u200b\u5bc6\u7801\u200b by \u200b\u4e3a\u200b\u4f60\u200b\u5199\u200b\u4e00\u4e2a\u200b\u6545\u4e8b\u200b</p> <p>\u200b\u540c\u5b66\u200b\uff0c\u200b\u8fd8\u200b\u8bb0\u5f97\u200b\u5f53\u5e74\u200b\u90a3\u9053\u200b\u9ad8\u8003\u9898\u200b\u5417\u200b\uff1f by \u200b\u6e05\u534e\u5927\u5b66\u200b</p> <p>\u200b\u7ea2\u200b\u4e86\u200b\u7ea2\u200b\u4e86\u200b\uff0c\u200b\u8fd9\u6b21\u200b\u771f\u7684\u200b\u7ea2\u200b\u4e86\u200b by GQ\u200b\u5b9e\u9a8c\u5ba4\u200b</p> <p>\u200b\u751f\u6d3b\u200b\u5c0f\u7a8d\u95e8\u200b \u200b\u4e4b\u200b \u200b\u5982\u4f55\u200b\u6577\u884d\u200b\u5973\u751f\u8282\u200b by \u200b\u55e8\u200b\u76ae\u200b\u8fd0\u8425\u90e8\u200b</p> <p>\u200b\u6c99\u5c18\u66b4\u200b\u5bf9\u200b\u6e05\u534e\u56ed\u200b\u8bf4\u200b\uff0c\u200b\u4eca\u5929\u200b\u7ed9\u200b\u4f60\u200b\u70b9\u200b\u989c\u8272\u200b\u770b\u770b\u200b by \u200b\u5bf9\u200b\u725b\u200b\u8c08\u6e05\u200b</p>"},{"location":"notes/2022/","title":"\u4e00\u4e9b\u200b\u5f88\u200b\u559c\u6b22\u200b\u7684\u200b\u63a8\u9001","text":"<p>\u200b\u665a\u5b89\u200b\u6d77\u62a5\u200b by \u200b\u90d1\u5dde\u200b\u53d1\u5e03\u200b</p> <p>\u200b\u6e05\u534e\u200b\u5bf9\u200b\u4f60\u200b\u8bf4\u200b\u665a\u5b89\u200b\uff01 by \u200b\u6e05\u534e\u5927\u5b66\u200b</p> <p>\u200b\u5c0f\u533a\u200b\u88ab\u200b\u5c01\u200b\u4e94\u5929\u200b\u540e\u200b\uff0c\u200b\u6211\u200b\u6e10\u6e10\u200b\u61c2\u200b\u4e86\u200b by \u200b\u96f7\u53d4\u200b\u5199\u200b\u6545\u4e8b\u200b</p> <p>\u201c\u200b\u6211\u4eec\u200b\u7ec8\u200b\u4f1a\u200b\u627e\u5230\u200b\u610f\u4e49\u200b\u3002\u201d by \u200b\u6e05\u534e\u5927\u5b66\u200b</p> <p>40\u200b\u4e2a\u200b\u975e\u5fc5\u8981\u200b\u751f\u6d3b\u200b\u4e0b\u200b\u7684\u200b\u5e78\u798f\u200b\u77ac\u95f4\u200b by \u200b\u5168\u5143\u200b\u5149\u6ed1\u200b</p> <p>\u200b\u7ba1\u200b\u4ed6\u200b\u51e0\u5c81\u200b\uff0c\u200b\u9752\u6625\u200b\u4e07\u5c81\u200b by \u200b\u5c0f\u6797\u200b</p> <p>\u300c\u200b\u65f6\u4ee3\u200b\u4e4b\u97f3\u200b\u300d\u200b\u53bb\u200b\u54ea\u513f\u200b\u4e86\u200b\uff1f by \u200b\u4eba\u7269\u200b</p> <p>\u200b\u5e94\u200b \u200b\u6da6\u200b \u200b\u5c3d\u200b \u200b\u6da6\u200b by \u200b\u5168\u5143\u200b\u5149\u6ed1\u200b</p> <p>\u200b\u6bd5\u4e1a\u200b\u7279\u520a\u200b | \u200b\u634c\u200b\u6765\u200b\u65e0\u6059\u200b\uff0c\u200b\u540e\u4f1a\u6709\u671f\u200b by \u200b\u6e05\u534e\u5927\u5b66\u200b\u6e05\u65b0\u200b\u65f6\u62a5\u200b</p> <p>\u200b\u6bd5\u4e1a\u200b\u65f6\u200b\uff0c\u200b\u4f60\u200b\u6700\u200b\u60f3\u200b\u5e26\u8d70\u200b\u7684\u200b\u4e00\u4ef6\u200b\u4e1c\u897f\u200b\u662f\u200b\uff1f by \u200b\u6e05\u534e\u5927\u5b66\u200b</p> <p>\u200b\u6bd5\u4e1a\u200b\u5feb\u4e50\u200b | \u200b\u7247\u523b\u200b\u6210\u4e3a\u200b\u6c38\u6052\u200b by \u200b\u957f\u6b4c\u200b\u695a\u5929\u200b\u78a7\u200b</p> <p>\u200b\u4fdd\u7814\u200b\u5931\u8d25\u200b\u4e86\u200b\uff0c\u200b\u82df\u4f4f\u200b\u5c31\u200b\u597d\u200b by\u200b\u4e28\u200bJust Lose It\u200b\u4e28\u200b</p> <p>10\u200b\u6708\u200b\uff0c\u200b\u5728\u200b\u51ac\u5929\u200b\u5230\u6765\u200b\u4e4b\u524d\u200b\uff0c\u200b\u7559\u4e0b\u200b\u70b9\u200b\u4ec0\u4e48\u200b by \u200b\u4eba\u7269\u200b</p>"}]}