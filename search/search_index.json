{"config":{"lang":["ja"],"separator":"[\\s\\u200b\\-]","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to HuangFuSL's blog","text":""},{"location":"#table-of-contents","title":"Table of contents","text":"<ul> <li>\u63a8\u9001</li> <li>LaTeX</li> <li>\u6570\u5b66</li> <li>\u5199\u4ee3\u7801</li> <li>\u8bba\u6587\u7b14\u8bb0</li> <li>\u5173\u4e8e\u6211</li> </ul>"},{"location":"#blog-timeline","title":"Blog timeline","text":"<p>\u51f8\u96c6</p> 2023-07-01<p>\u4ece\u76f4\u89c2\u610f\u4e49\u4e0a\u8bb2\uff0c\u51f8\u96c6\u5c31\u662f\u6ca1\u6709\u51f9\u8fdb\u53bb\u7684\u90e8\u5206\u7684\u96c6\u5408\u3002</p> <p>\u51b3\u7b56\u6811</p> 2023-04-07<p>\u51b3\u7b56\u6811\u662f\u4e00\u7c7b\u57fa\u4e8e\u89c4\u5219\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5</p> <p>Potential Outcome Framework</p> 2023-02-27<p>\u5047\u8bbe\uff1a</p> <p>\u673a\u5668\u5b66\u4e60</p> 2023-02-26<p>\u90e8\u5206\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684Python\u5b9e\u73b0</p> <p>\u7ebf\u6027\u6a21\u578b</p> 2023-02-26<p>\u4ee5\u4e0b\u4f7f\u7528Python\u5b9e\u73b0\u57fa\u4e8e\u7ebf\u6027\u5173\u7cfb\u7684\u5404\u79cd\u673a\u5668\u5b66\u4e60\u6a21\u578b</p> <p>\u5e94\u7528\u6570\u7406\u7edf\u8ba1</p> 2023-02-21<p>\u7edf\u8ba1\u5b66\u4e2d\u7684\u4e24\u4e2a\u6982\u5ff5\uff1a\u6837\u672c\u4e0e\u603b\u4f53\u3002</p> <p>\u51f8\u4f18\u5316</p> 2023-02-21 <p>\u8bb0\u53f7</p> 2023-01-18<p>\u968f\u673a\u8fc7\u7a0b\u4e2d\u5e38\u7528\u7684\u8bb0\u53f7\u8868\u793a</p> <p>\u6cca\u677e\u8fc7\u7a0b</p> 2023-01-18<p>\\(\\renewcommand{\\geq}{\\geqslant}\\renewcommand{\\leq}{\\leqslant}\\) \u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\u7684\u968f\u673a\u8fc7\u7a0b\\(\\{N(t), t\\geq 0\\}\\)\u4e3a\u65f6\u9f50\u6cca\u677e\u8fc7\u7a0b\u3002</p> <p>\u968f\u673a\u8fc7\u7a0b</p> 2023-01-01"},{"location":"#recent-updates","title":"Recent updates","text":"<ul> <li>2023-07-01\uff1a\u51f8\u4f18\u5316</li> <li>2023-07-01\uff1a\u51f8\u96c6</li> <li>2023-06-30\uff1a2022</li> <li>2023-04-07\uff1a\u673a\u5668\u5b66\u4e60</li> <li>2023-04-07\uff1a\u51b3\u7b56\u6811</li> </ul>"},{"location":"#customization","title":"Customization","text":"<p>Click on the buttons to change the primary color.</p> Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White <p>Click on the buttons to change the accent color.</p> Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange <p>However, if you try to switch from dark mode to light mode or reversed, changes to the primary color and accent color will lose.</p>"},{"location":"#building-documentation","title":"Building documentation","text":"<p>Run <code>git clone https://github.com/HuangFuSL/HuangFuSL.github.io.git</code> to get the source code.</p>"},{"location":"#bootstrap-icon-installation","title":"Bootstrap icon installation","text":"<p>The site uses bootstrap icons, which are neither shipped with <code>mkdocs-material</code> nor synced in this repo. You have to manually install these icons.</p> <ul> <li>Execute the <code>ci/bootstrap.py</code> in the root directory of the repository.</li> </ul>"},{"location":"#github-workflow","title":"GitHub workflow","text":"<p>You need to install the dependencies stored in <code>requirements.txt</code> before you can  start building the site:</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>There are cross-links in the site which require metadata defined in the page, so the project should be built before <code>mkdocs serve</code> is executed. The exported metadata is saved in <code>meta.json</code> after a build is successfully executed. To build the site, execute the following command:</p> <pre><code>mkdocs build -d build\n</code></pre> <p>Execute <code>mkdocs serve</code>, the built site will appear at http://127.0.0.1:8000</p>"},{"location":"#latex-support","title":"LaTeX support","text":"<p>The site uses <code>xelatex</code> and <code>dvisvgm</code> to render tex document to SVG images embedded in the markdown files. However, as the SVG images are ignored by <code>.gitignore</code>, you have to manually perform the conversion.</p> <p>For GitHub repository clones:</p> <ul> <li>Make sure you have installed and correctly configured <code>xelatex</code> and <code>dvisvgm</code>.</li> <li>Execute the <code>ci/convert.py</code> in the root directory of the repository.</li> <li>Run <code>mkdocs serve</code> to view the images.</li> </ul>"},{"location":"#acknowledgements","title":"Acknowledgements","text":"<p>The blog relies on the following open-source projects:</p> <ul> <li>mkdocs</li> <li>Python Markdown</li> <li>Python Markdown Extension</li> <li>matplotlib</li> <li>pandas</li> <li>jupyter</li> <li>requests</li> <li>lxml</li> </ul> <p>The blog uses the following mkdocs plugins to function correctly.</p> <ul> <li>Neoteroi/mkdocs-plugins</li> <li>lukasgeiter/mkdocs-awesome-pages-plugin</li> <li>timvink/mkdocs-git-revision-date-localized-plugin</li> <li>zhaoterryy/mkdocs-git-revision-date-plugin</li> <li>squidfunk/mkdocs-material</li> <li>facelessuser/mkdocs-material-extensions</li> <li>fralau/mkdocs_macros_plugin</li> <li>danielfrg/mkdocs-jupyter</li> <li>prcr/mkdocs-meta-descriptions-plugin</li> </ul> <p>Unless noted, content in this blog are shared under CC-BY-NC-SA 4.0 license.</p>"},{"location":"#version-information","title":"Version information","text":"commit 42dd527b13016874e209bd279ec4f7e7fbdc08ee Merge: b1f4c310 165f1fd3 Author: HuangFuSL  Date:   Mon Jul 3 18:06:14 2023 +0800      Merge pull request #152 from HuangFuSL/dependabot/pip/mkdocs-macros-plugin-1.0.1      Bump mkdocs-macros-plugin from 0.7.0 to 1.0.1"},{"location":"about/","title":"\u5173\u4e8e\u6211","text":"<p>Guess who is here?</p> <p></p>"},{"location":"coding/","title":"\u5199\u4ee3\u7801","text":"<p>\u6536\u96c6\u4ece\u7f51\u4e0a\u627e\u6765\u7684\u5404\u79cd\u5404\u6837\u7684\u73a9\u610f</p> <ul> <li>Leetcode</li> <li>Python</li> <li>\u673a\u5668\u5b66\u4e60</li> <li>\u6570\u636e\u7ed3\u6784</li> <li>\u7cfb\u7edf\u914d\u7f6e</li> <li>SVG</li> </ul>"},{"location":"coding/svg/","title":"SVG\u52a8\u753b","text":"<p>SVG\u7684\u52a8\u753b\u4f7f\u7528<code>&lt;animate&gt;</code>\u6807\u7b7e\uff0c\u5728\u4f7f\u7528\u65f6\uff0c<code>&lt;animate&gt;</code>\u6807\u7b7e\u9700\u8981\u653e\u5728\u52a8\u753b\u64cd\u4f5c\u5bf9\u8c61\u7684\u5185\u90e8\u3002</p> <p>\u4f5c\u4e3a\u5bf9\u6bd4\uff0c\u6211\u4eec\u5148\u6784\u9020\u51fa\u4e00\u4e2a\u77e9\u5f62\uff0c\u5728\u77e9\u5f62\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u52a8\u753b\uff1a</p> SVG\u56fe\u50cf \u6e32\u67d3\u56fe\u50cfSVG\u4ee3\u7801 <p> </p> <pre><code>&lt;svg width=\"100%\" height=\"100%\"&gt;\n    &lt;rect x=\"20\" y=\"20\" fill=\"#69EC69\" width=\"100\" height=\"60\"&gt;\n    &lt;/rect&gt;\n&lt;/svg&gt;\n</code></pre>"},{"location":"coding/svg/#_1","title":"\u7b80\u5355\u52a8\u753b","text":"<p>\u5728<code>&lt;rect&gt;</code>\u6807\u7b7e\u4e2d\u6dfb\u52a0<code>&lt;animate&gt;</code>\u6807\u7b7e\uff0c\u6307\u5b9a\u52a8\u753b\u7684\u7ed1\u5b9a\u5c5e\u6027\u3001\u5f00\u59cb\u7ed3\u675f\u7684\u53d6\u503c\u548c\u65f6\u957f\u5373\u53ef\u3002</p> SVG\u56fe\u50cf \u6e32\u67d3\u56fe\u50cfSVG\u4ee3\u7801 <p> </p> <pre><code>&lt;svg width=\"100%\" height=\"100%\"&gt;\n    &lt;rect x=\"20\" y=\"20\" fill=\"#69EC69\" width=\"100\" height=\"60\"&gt;\n        &lt;animate attributeName=\"x\" from=\"20\" to=\"150\" begin=\"click\" dur=\"1.5s\" /&gt;\n    &lt;/rect&gt;\n&lt;/svg&gt;\n</code></pre> <p>\u901a\u8fc7<code>attributeName</code>\u5c5e\u6027\u8bbe\u7f6e\u4ea4\u4e92\u7ed1\u5b9a\u7684\u5c5e\u6027\uff0c\u5141\u8bb8\u7684\u5c5e\u6027\u5217\u4e8e\u4e0b\u8868\uff1a</p> \u6807\u7b7e \u5c5e\u6027\u540d \u5907\u6ce8 <code>&lt;animate&gt;</code> <code>x</code> <code>&lt;animate&gt;</code> <code>y</code> <code>&lt;animate&gt;</code> <code>width</code> <code>&lt;animate&gt;</code> <code>height</code> <code>&lt;animate&gt;</code> <code>r</code> <code>cx</code>, <code>cy</code> <code>&lt;animate&gt;</code> <code>opacity</code> <code>&lt;animate&gt;</code> <code>d</code> <code>&lt;animate&gt;</code> <code>points</code> <code>&lt;animate&gt;</code> <code>stroke</code> <code>stroke-width</code>, <code>stroke-linecap</code>, <code>stroke-dashoffset</code> <code>&lt;animate&gt;</code> <code>fill</code> <code>&lt;set&gt;</code> <code>visibility</code> <code>&lt;animateTransform&gt;</code> <code>translate</code> <code>&lt;animateTransform&gt;</code> <code>transform</code> <code>&lt;animateTransform&gt;</code> <code>scale</code> <code>&lt;animateTransform&gt;</code> <code>rotate</code> <code>&lt;animateTransform&gt;</code> <code>skewX</code> <code>&lt;animateTransform&gt;</code> <code>skewY</code> <code>&lt;animateMotion&gt;</code> <code>path</code> <code>&lt;animateMotion&gt;</code> <code>rotate</code> <code>&lt;animateMotion&gt;</code> <code>keypoints</code> <code>&lt;animateMotion&gt;</code> <code>mpath</code>"},{"location":"coding/svg/#_2","title":"\u81ea\u5b9a\u4e49\u52a8\u753b","text":"<p><code>&lt;animate&gt;</code>\u6807\u7b7e\u652f\u6301\u591a\u79cd\u81ea\u5b9a\u4e49\u5c5e\u6027\uff0c\u8fd9\u4e9b\u5c5e\u6027\u5141\u8bb8\u5728\u52a8\u753b\u4e2d\u6dfb\u52a0\u5173\u952e\u5e27\u3001\u8ba9\u52a8\u753b\u54cd\u5e94\u7528\u6237\u4ea4\u4e92\u7b49\u9ad8\u7ea7\u529f\u80fd\u7684\u5b9e\u73b0</p>"},{"location":"coding/svg/#fill","title":"<code>fill</code>\u5c5e\u6027","text":"<p><code>fill</code>\u5c5e\u6027\u51b3\u5b9a\u52a8\u753b\u7ed3\u675f\u65f6\u52a8\u753b\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u53d6\u503c\u53ef\u4ee5\u4e3a<code>remove</code>\u6216<code>freeze</code>\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c<code>fill</code>\u7684\u53d6\u503c\u4e3a<code>remove</code>\u3002</p> <p>\u4ee5\u4e0b\u4e3a<code>fill</code>\u53d6\u503c\u4e3a<code>freeze</code>\u7684SVG\u52a8\u753b\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u52a8\u753b\u7ed3\u675f\u540e\u77e9\u5f62\u6ca1\u6709\u56de\u5230\u5f00\u59cb\u7684\u72b6\u6001\u3002</p> SVG\u56fe\u50cf \u6e32\u67d3\u56fe\u50cfSVG\u4ee3\u7801 <p> </p> <pre><code>&lt;svg width=\"100%\" height=\"100%\"&gt;\n    &lt;rect x=\"20\" y=\"20\" fill=\"#69EC69\" width=\"100\" height=\"60\"&gt;\n        &lt;animate attributeName=\"x\" from=\"20\" to=\"150\" begin=\"click\" dur=\"1.5s\" fill=\"freeze\" /&gt;\n    &lt;/rect&gt;\n&lt;/svg&gt;\n</code></pre>"},{"location":"coding/svg/#repeatcount","title":"<code>repeatCount</code>\u5c5e\u6027","text":"<p><code>repeatcount</code>\u5c5e\u6027\u51b3\u5b9a\u4e86\u52a8\u753b\u5728\u5f00\u59cb\u4ee5\u540e\u91cd\u590d\u7684\u6b21\u6570\uff0c\u53ef\u4ee5\u4e3a\u6574\u6570\u503c\uff0c\u4e5f\u53ef\u4ee5\u4e3a<code>indefinite</code>\u8868\u793a\u65e0\u9650\u6b21\u3002</p> <p>\u4ee5\u4e0b\u4f7f\u77e9\u5f62\u79fb\u52a8\u7684\u52a8\u4f5c\u91cd\u590d\u4e09\u6b21\uff1a</p> SVG\u56fe\u50cf \u6e32\u67d3\u56fe\u50cfSVG\u4ee3\u7801 <p> </p> <pre><code>&lt;svg width=\"100%\" height=\"100%\"&gt;\n    &lt;rect x=\"20\" y=\"20\" fill=\"#69EC69\" width=\"100\" height=\"60\"&gt;\n        &lt;animate attributeName=\"x\" from=\"20\" to=\"150\" begin=\"click\" dur=\"1.5s\" repeatcount=\"3\" /&gt;\n    &lt;/rect&gt;\n&lt;/svg&gt;\n</code></pre>"},{"location":"coding/svg/#values","title":"<code>values</code>\u5c5e\u6027","text":"<p><code>values</code>\u5c5e\u6027\u51b3\u5b9a\u4e86\u52a8\u753b\u7684\u5c5e\u6027\u5173\u952e\u5e27\uff0c\u5c5e\u6027\u503c\u4e3a\u5404\u5173\u952e\u5e27\u7684\u5c5e\u6027\u53d6\u503c\uff0c\u4ee5\u5206\u53f7\u5206\u9694\u3002<code>values</code>\u5c5e\u6027\u53ef\u4ee5\u540c\u65f6\u66ff\u6362<code>from</code>\u5c5e\u6027\u4e0e<code>to</code>\u5c5e\u6027\u3002</p> <p>\u4ee5\u4e0b\u4f7f\u7528<code>values</code>\u5c5e\u6027\uff0c\u4ee4\u77e9\u5f62\u5728\u79fb\u52a8\u540e\u6298\u8fd4\uff1a</p> SVG\u56fe\u50cf \u6e32\u67d3\u56fe\u50cfSVG\u4ee3\u7801 <p> </p> <pre><code>&lt;svg width=\"100%\" height=\"100%\"&gt;\n    &lt;rect x=\"20\" y=\"20\" fill=\"#69EC69\" width=\"100\" height=\"60\"&gt;\n        &lt;animate attributeName=\"x\" values=\"20;150;20\" begin=\"click\" dur=\"3s\" /&gt;\n    &lt;/rect&gt;\n&lt;/svg&gt;\n</code></pre>"},{"location":"coding/svg/#keytimes","title":"<code>keyTimes</code>\u5c5e\u6027","text":"<p><code>keyTimes</code>\u5c5e\u6027\u51b3\u5b9a\u4e86\u5173\u952e\u5e27\u7684\u65f6\u95f4\u5206\u914d\uff0c\u5f53<code>calcMode</code>\u5c5e\u6027\u4e3a<code>linear</code>\u6216<code>spline</code>\u65f6\uff0c\u8be5\u5c5e\u6027\u6709\u6548\uff0c\u5c5e\u6027\u7684\u503c\u4e3a\u5404\u4e2a\u5173\u952e\u5e27\u5728\u6574\u4e2a\u52a8\u753b\u8fc7\u7a0b\u4e2d\u7684\u8fdb\u5ea6\uff08\u53d6\u503c\u57280-1\u4e4b\u95f4\u7684\u5c0f\u6570\uff09\u3002</p> <p>\u4ee5\u4e0b\u4f7f\u7528<code>keyTimes</code>\u5c5e\u6027\uff0c\u4ee4\u77e9\u5f62\u5728\u53f3\u79fb\u8fc7\u7a0b\u4e2d\u7684\u901f\u5ea6\u662f\u5de6\u79fb\u8fc7\u7a0b\u4e2d\u901f\u5ea6\u7684\u4e09\u500d\uff1a</p> SVG\u56fe\u50cf \u6e32\u67d3\u56fe\u50cfSVG\u4ee3\u7801 <p> </p> <pre><code>&lt;svg width=\"100%\" height=\"100%\"&gt;\n    &lt;rect x=\"20\" y=\"20\" fill=\"#69EC69\" width=\"100\" height=\"60\"&gt;\n        &lt;animate attributeName=\"x\" values=\"20;150;20\" keyTimes=\"0;0.25;1\" begin=\"click\" dur=\"3s\" /&gt;\n    &lt;/rect&gt;\n&lt;/svg&gt;\n</code></pre>"},{"location":"coding/svg/#calcmodekeysplines","title":"<code>calcMode</code>\u5c5e\u6027\u4e0e<code>keySplines</code>\u5c5e\u6027","text":"<p><code>calcMode</code>\u5c5e\u6027\u51b3\u5b9a\u4e86\u5173\u952e\u5e27\u63d2\u503c\u7684\u8ba1\u7b97\u65b9\u5f0f\uff0c\u8fdb\u4e00\u6b65\u5730\uff0c<code>keySplines</code>\u5c5e\u6027\u51b3\u5b9a\u4e86\u5173\u952e\u5e27\u63d2\u503c\u6240\u7528\u7684\u51fd\u6570\uff08\u8d1d\u585e\u5c14\u66f2\u7ebf\uff09\u3002<code>calcMode</code>\u5c5e\u6027\u5141\u8bb8\u7684\u53d6\u503c\u5982\u4e0b\uff1a</p> <ul> <li><code>paced</code>\uff1a\u5ffd\u7565<code>keyTimes</code>\u5c5e\u6027\uff0c\u5c5e\u6027\u503c\u6309\u7167<code>values</code>\u4e2d\u5b9a\u4e49\u7684\u5173\u952e\u5e27\u7ebf\u6027\u53d8\u5316</li> <li><code>linear</code>\uff1a\u9ed8\u8ba4\u53d6\u503c\uff0c\u5c5e\u6027\u503c\u6309\u7167<code>values</code>\u4e2d\u5b9a\u4e49\u7684\u5173\u952e\u5e27\u5728<code>keyTimes</code>\u65f6\u95f4\u5185\u7ebf\u6027\u53d8\u5316</li> <li><code>discrete</code>\uff1a\u5c5e\u6027\u503c\u9636\u8dc3\u53d8\u5316\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u6ca1\u6709\u63d2\u503c</li> <li><code>spline</code>\uff1a\u5c5e\u6027\u503c\u6309\u7167<code>keySplines</code>\u5c5e\u6027\u4e2d\u5b9a\u4e49\u7684\u8d1d\u585e\u5c14\u66f2\u7ebf\u53d8\u5316</li> </ul> <p>\u4ee5\u4e0b\u5206\u522b\u6f14\u793a<code>calcMode</code>\u5c5e\u6027\u56db\u79cd\u53d6\u503c\u7684\u6548\u679c\uff0c<code>keySplines</code>\u5c5e\u6027\u503c\u8bbe\u5b9a\u4e3a<code>1 0 1 1; 0 0 0 1</code>\uff1a</p> SVG\u56fe\u50cf pacedlineardiscretespline <p> </p> <p> </p> <p> </p> <p> </p>"},{"location":"coding/svg/#beginend","title":"<code>begin</code>\u5c5e\u6027\u4e0e<code>end</code>\u5c5e\u6027","text":"<p><code>begin</code>\u5c5e\u6027\u4e0e<code>end</code>\u5c5e\u6027\u51b3\u5b9a\u4e86SVG\u52a8\u753b\u5728\u4f55\u65f6\u5f00\u59cb\uff0c\u6b64\u65f6\u7684\u65f6\u95f4\u96f6\u70b9\u4e3a\u9875\u9762\u6e32\u67d3\u5b8c\u6210\u7684\u65f6\u95f4\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u4e0d\u5728<code>begin</code>\u4e2d\u6307\u5b9a\u7528\u6237\u4ea4\u4e92\u4e8b\u4ef6\uff0c\u5219\u52a8\u753b\u5728\u6e32\u67d3\u5b8c\u6210\u540e\u5373\u5f00\u59cb\u8ba1\u65f6\u3002<code>end</code>\u5c5e\u6027\u53ef\u4ee5\u63a7\u5236\u52a8\u753b\u7684\u5f3a\u5236\u7ed3\u675f\u65f6\u95f4\uff0c\u5982\u679c\u52a8\u753b\u5728\u8be5\u65f6\u95f4\u5185\u6ca1\u6709\u7ed3\u675f\uff0c\u5219\u7acb\u5373\u7ed3\u675f\u3002</p> <p>\u4ee5\u4e0b\u4f7f\u7528<code>begin</code>\u5c5e\u6027\u63a7\u5236\u52a8\u753b\u5ef6\u8fdf\u5f00\u59cb2s\uff1a</p> SVG\u56fe\u50cf \u6e32\u67d3\u56fe\u50cfSVG\u4ee3\u7801 <p> </p> <pre><code>&lt;svg width=\"100%\" height=\"100%\"&gt;\n    &lt;rect x=\"20\" y=\"20\" fill=\"#69EC69\" width=\"100\" height=\"60\"&gt;\n        &lt;animate attributeName=\"x\" from=\"20\" to=\"150\" begin=\"click+2s\" dur=\"1.5s\" /&gt;\n    &lt;/rect&gt;\n&lt;/svg&gt;\n</code></pre>"},{"location":"coding/svg/#additive","title":"<code>additive</code>\u5c5e\u6027","text":"<p><code>additive</code>\u5c5e\u6027\u51b3\u5b9a<code>values</code>\u53ca<code>from</code>\u4e0e<code>to</code>\u5c5e\u6027\u4e2d\u7684\u5c5e\u6027\u503c\u662f\u7edd\u5bf9\u503c\u8fd8\u662f\u76f8\u5bf9\u503c\u3002\u5141\u8bb8\u7684\u53d6\u503c\u4e3a<code>sum</code>\u4e0e<code>replace</code>\uff0c\u5206\u522b\u8868\u793a\u76f8\u5bf9\u503c\u4e0e\u7edd\u5bf9\u503c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c<code>additive</code>\u5c5e\u6027\u53d6<code>replace</code>\u3002</p> <p>\u4ee5\u4e0b\u4f7f\u7528\u76f8\u5bf9\u503c\u63a7\u5236\u77e9\u5f62\u7684\u79fb\u52a8\uff1a</p> SVG\u56fe\u50cf \u6e32\u67d3\u56fe\u50cfSVG\u4ee3\u7801 <p> </p> <pre><code>&lt;svg width=\"100%\" height=\"100%\"&gt;\n    &lt;rect x=\"20\" y=\"20\" fill=\"#69EC69\" width=\"100\" height=\"60\"&gt;\n        &lt;animate attributeName=\"x\" from=\"0\" to=\"130\" additive=\"sum\" begin=\"click\" dur=\"1.5s\" /&gt;\n    &lt;/rect&gt;\n&lt;/svg&gt;\n</code></pre>"},{"location":"coding/svg/#accumulate","title":"<code>accumulate</code>\u5c5e\u6027","text":"<p><code>accumulate</code>\u5c5e\u6027\u5f53\u52a8\u753b\u91cd\u590d\u65f6\uff0c\u5c5e\u6027\u503c\u662f\u5426\u7d2f\u52a0\u3002\u5141\u8bb8\u7684\u53d6\u503c\u4e3a<code>sum</code>\u4e0e<code>none</code>\u3002\u5206\u522b\u8868\u793a\u4e0a\u4e00\u6b21\u52a8\u753b\u7ed3\u675f\u7684\u503c\u4e0e\u52a8\u753b\u539f\u672c\u7684\u5c5e\u6027\u503c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c<code>accumulate</code>\u5c5e\u6027\u53d6<code>none</code>\u3002\u5f53\u5c5e\u6027\u503c\u4e0d\u652f\u6301\u76f8\u52a0\u6216\u52a8\u753b\u4e0d\u91cd\u590d\u65f6\uff0c\u8be5\u5c5e\u6027\u88ab\u5ffd\u7565\u3002</p> <p>\u4ee5\u4e0b\u5b9e\u73b0\u6bcf\u6b21\u70b9\u51fb\u540e\u5411\u53f3\u79fb\u52a8\u77e9\u5f62\u4e24\u6b21\uff0c\u6bcf\u6b2165\u5355\u4f4d\uff1a</p> SVG\u56fe\u50cf \u6e32\u67d3\u56fe\u50cfSVG\u4ee3\u7801 <p> </p> <pre><code>&lt;svg width=\"100%\" height=\"100\"&gt;\n    &lt;rect x=\"20\" y=\"20\" fill=\"#69EC69\" width=\"100\" height=\"60\"&gt;\n        &lt;animate attributeName=\"x\" values=\"0;65\" begin=\"click\" keyTimes=\"0;1\" keySplines=\"1 0 1 1\" calcMode=\"spline\" additive=\"sum\" accumulate=\"sum\" dur=\"1.5s\" fill=\"freeze\" repeatCount=\"2\"/&gt;\n    &lt;/rect&gt;\n&lt;/svg&gt;\n</code></pre>"},{"location":"coding/svg/#_3","title":"\u4ea4\u4e92\u52a8\u753b","text":"<p><code>begin</code>\u5c5e\u6027\u7684\u53d6\u503c\u53ef\u4ee5\u4e3a<code>click</code>\u6216<code>touch</code>\u4ee5\u54cd\u5e94\u7528\u6237\u8f93\u5165\u3002<code>click</code>\u65e2\u53ef\u4ee5\u54cd\u5e94\u9f20\u6807\u70b9\u51fb\u4e8b\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u54cd\u5e94\u7528\u6237\u89e6\u6478\u3002<code>touch</code>\u53ea\u80fd\u54cd\u5e94\u7528\u6237\u89e6\u6478\u3002</p>"},{"location":"coding/svg/#svg_1","title":"\u5e38\u89c1\u7684SVG\u52a8\u753b\u6548\u679c","text":"<ol> <li>\u4f4d\u79fb</li> <li>\u53d8\u6362</li> <li>\u6de1\u5165\u6de1\u51fa</li> <li>\u63cf\u8fb9</li> <li>\u8def\u5f84\u53d8\u5316</li> <li>\u989c\u8272\u53d8\u5316</li> </ol>"},{"location":"coding/svg/#_4","title":"\u4f4d\u79fb","text":"<p>\u4f4d\u79fb\u64cd\u4f5c\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528<code>&lt;animate&gt;</code>\u63a7\u5236\u5bf9\u8c61\u7684<code>x</code>\u3001<code>y</code>\u5c5e\u6027\u4e0e<code>width</code>\u3001<code>height</code>\u5c5e\u6027\u5b9e\u73b0\u3002\u53ef\u80fd\u7684\u5e94\u7528\u573a\u666f\u5982\u4e0b\uff1a</p> <ul> <li>\u8fdb\u5ea6\u6761\u3001\u76f4\u65b9\u56fe\u7b49\u7528\u4e8e\u4ea4\u4e92\u7684\u6570\u636e\u56fe\u8868</li> <li>\u4ea4\u901a\u5de5\u5177\u6216\u5176\u4ed6\u5bf9\u8c61\u7684\u79fb\u52a8</li> </ul> <p>\u8fdb\u5ea6\u6761\u793a\u4f8b\uff1a</p> \u8fdb\u5ea6\u6761 \u6e32\u67d3\u56fe\u50cfSVG\u4ee3\u7801 <p></p> <pre><code>&lt;svg id=\"\u56fe\u5c42_1\" data-name=\"\u56fe\u5c42 1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"700\" height=\"195\" viewBox=\"0 0 700 195\"&gt;\n    &lt;rect x=\"0.5\" y=\"0.5\" width=\"699\" height=\"58\" fill=\"#fff\"/&gt;&lt;path d=\"M699,1V58H1V1H699m1-1H0V59H700V0Z\"/&gt;\n    &lt;rect x=\"1\" y=\"1\" width=\"446\" height=\"57\" fill=\"red\"&gt;\n        &lt;animate attributeName=\"width\" values=\"0;698\" keytimes=\"0;1\" calcmode=\"spline\" keysplines=\"0.44 0.27 0.21 0.99\" begin=\"click\" dur=\"1s\" fill=\"freeze\" repeatcount=\"3\"/&gt;\n    &lt;/rect&gt;\n    &lt;rect x=\"0.5\" y=\"68.5\" width=\"699\" height=\"58\" fill=\"#fff\"/&gt;\n    &lt;path d=\"M699,69v57H1V69H699m1-1H0v59H700V68Z\"/&gt;\n    &lt;rect x=\"1\" y=\"69\" width=\"446\" height=\"57\" fill=\"#dd2\"&gt;\n        &lt;animate attributeName=\"width\" values=\"0;698\" keytimes=\"0;1\" calcmode=\"spline\" keysplines=\"0 0 0.5 1\" begin=\"click\" dur=\"1s\" fill=\"freeze\" repeatcount=\"3\"/&gt;\n    &lt;/rect&gt;\n    &lt;rect x=\"0.5\" y=\"136.5\" width=\"699\" height=\"58\" fill=\"#fff\"/&gt;\n    &lt;path d=\"M699,137v57H1V137H699m1-1H0v59H700V136Z\"/&gt;\n    &lt;rect x=\"1\" y=\"137\" width=\"446\" height=\"57\" fill=\"lime\"&gt;\n        &lt;animate attributeName=\"width\" values=\"0;698\" keytimes=\"0;1\" calcmode=\"spline\" keysplines=\"0.5 0 1 1\" begin=\"click\" dur=\"1s\" fill=\"freeze\" repeatcount=\"3\"/&gt;\n    &lt;/rect&gt;\n&lt;/svg&gt;\n</code></pre> <p>\u4e00\u4e2a\u79fb\u52a8\u7684\u5706\u70b9\uff1a</p> \u5706\u70b9\u52a8\u753b \u6e32\u67d3\u56fe\u50cfSVG\u4ee3\u7801 <p></p> <pre><code>&lt;svg id=\"\u56fe\u5c42_1\" data-name=\"\u56fe\u5c42 1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"150\" viewBox=\"0 0 700 195\"&gt;\n    &lt;rect width=\"700\" height=\"195\" fill=\"none\"/&gt;\n    &lt;circle cx=\"279.5\" cy=\"97.5\" r=\"25.5\"&gt;\n        &lt;animate attributeName=\"cx\" values=\"0;90;0\" keytimes=\"0;0.5;1\" calcmode=\"spline\" keysplines=\"0.5 0 0.5 1; 0.5 0 0.5 1\" begin=\"0s\" dur=\"2s\" fill=\"freeze\" repeatcount=\"indefinite\" additive=\"sum\"/&gt;\n    &lt;/circle&gt;\n&lt;/svg&gt;\n</code></pre> <p>\u6b64\u5916\uff0c\u90e8\u5206\u4f4d\u79fb\u53ef\u4ee5\u4f7f\u7528<code>&lt;animateMotion&gt;</code>\u6807\u7b7e\u8fdb\u884c\u63a7\u5236\uff0c<code>&lt;animateMotion&gt;</code>\u6807\u7b7e\u652f\u6301\u5bf9\u8c61\u6309\u7167\u8def\u5f84\u8fdb\u884c\u4f4d\u79fb\u3002</p> <p>\u590d\u6742\u7684\u4f4d\u79fb\u9700\u8981\u63a7\u5236\u5bf9\u8c61\u7684<code>translate</code>\u5c5e\u6027\u3002</p>"},{"location":"coding/svg/#_5","title":"\u53d8\u6362","text":"<p>\u4ee5\u4e0b\u5c5e\u6027\u5f71\u54cd\u56fe\u5f62\u7684\u53d8\u6362\uff1a</p> <ul> <li><code>r</code>\uff1a\u534a\u5f84\uff08\u5bf9\u4e8e\u5706\uff09</li> <li><code>rotate</code>\uff1a\u65cb\u8f6c\uff08\u4ee5\u4e2d\u5fc3\u70b9\uff09</li> <li><code>skewX</code>\u3001<code>skewY</code>\uff1a\u503e\u659c</li> <li><code>transform</code>\uff1a\u590d\u6742\u53d8\u6362</li> </ul> <p>\u4ee5\u4e0b\u7ed9\u51fa<code>r</code>\u53d8\u6362\u7684\u793a\u4f8b\uff1a</p> r\u53d8\u6362 \u6e32\u67d3\u56fe\u50cfSVG\u4ee3\u7801 <p>     &gt;&gt;&gt; \u70b9\u51fb\u5706\u70b9 \u67e5\u770b\u9690\u85cf\u5185\u5bb9 &lt;&lt;&lt;      Hello              World!      <pre><code>&lt;svg id=\"\u56fe\u5c42_1\" data-name=\"\u56fe\u5c42 1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"350\" viewBox=\"0 0 749 1334\"&gt;\n    &lt;rect width=\"749\" height=\"1334\" fill=\"#fff\"/&gt;\n    &lt;text transform=\"translate(221.4 1070.91)\" font-size=\"21\" font-family=\"PingFang-SC-Regular, PingFang SC\"&gt;\n        &amp;gt;&amp;gt;&amp;gt; \u70b9\u51fb\u5706\u70b9 \u67e5\u770b\u9690\u85cf\u5185\u5bb9 &amp;lt;&amp;lt;&amp;lt;\n    &lt;/text&gt;\n    &lt;circle cx=\"375\" cy=\"992\" r=\"29\" fill=\"#ed1e79\"&gt;\n        &lt;animate attributeName=\"r\" values=\"0;1100\" keytimes=\"0;1\" calcmode=\"spline\" keysplines=\"0 0 0.5 1\" begin=\"click\" dur=\"0.75s\" fill=\"freeze\" additive=\"sum\" restart=\"never\"&gt;\n    &lt;/circle&gt;\n    &lt;text transform=\"translate(0 295.12)\" font-size=\"192\" fill=\"#fff\" font-family=\"PingFang-SC-Heavy, PingFang SC\" font-weight=\"800\"&gt;\n        Hello\n        &lt;tspan x=\"0\" y=\"230.4\"&gt;\n            World!\n        &lt;/tspan&gt;\n    &lt;/text&gt;\n&lt;/svg&gt;\n</code></pre> <p><code>transform</code>\u5c5e\u6027\u5728<code>animateTransform</code>\u6807\u7b7e\u4e2d\u66f4\u6539\uff0c\u53ef\u4ee5\u5b9e\u73b0\u8f83\u4e3a\u590d\u6742\u7684\u53d8\u6362\uff0c\u5982\u7ed5\u67d0\u4e00\u4e2a\u7279\u5b9a\u70b9\u8fdb\u884c\u65cb\u8f6c\uff1a</p> transform\u53d8\u6362 \u6e32\u67d3\u56fe\u50cfSVG\u4ee3\u7801 <p></p> <pre><code>&lt;svg id=\"\u56fe\u5c42_1\" data-name=\"\u56fe\u5c42 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 749 1340\" width=\"350\"&gt;\n    &lt;rect y=\"6\" width=\"749\" height=\"1334\" fill=\"#fff\"/&gt;\n    &lt;g&gt;\n        &lt;animateTransform attributeName=\"transform\" type=\"rotate\" values=\"0 375 0; -10 375 0; 10 375 0; 0 375 0\" keytimes=\"0;0.25;0.75;1\" calcmode=\"spline\" keysplines=\"0 0 0.5 1; 0.5 0 0.5 1; 0.5 0 1 1\" start=\"0s\" dur=\"2s\" repeatcount=\"indefinite\" /&gt;\n        &lt;line x1=\"375\" y1=\"6\" x2=\"375\" y2=\"969.5\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"12\"/&gt;\n        &lt;circle cx=\"375\" cy=\"969\" r=\"45\" stroke=\"#000\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"12\"/&gt;\n    &lt;/g&gt;\n&lt;/svg&gt;\n</code></pre>"},{"location":"coding/configuration/","title":"\u7cfb\u7edf\u914d\u7f6e","text":""},{"location":"coding/configuration/#_2","title":"\u547d\u4ee4\u884c","text":"<ul> <li>SSH</li> </ul>"},{"location":"coding/configuration/#_3","title":"\u8f6f\u4ef6\u73af\u5883\u914d\u7f6e","text":"<ul> <li>\u6e90\u7801\u7f16\u8bd1nginx\u5e76\u6dfb\u52a0RTMP\u6a21\u5757</li> </ul>"},{"location":"coding/configuration/nginx-rtmp/","title":"\u6e90\u7801\u7f16\u8bd1nginx\u5e76\u6dfb\u52a0RTMP\u6a21\u5757","text":""},{"location":"coding/configuration/nginx-rtmp/#_1","title":"\u5148\u51b3\u6761\u4ef6","text":"<ul> <li>nginx\u6e90\u4ee3\u7801\uff0c\u9700\u8981\u4eceGitHub Release\u4e0b\u8f7d\uff0c\u4ecenginx\u5b98\u7f51\u4e0b\u8f7d\u7684\u6e90\u4ee3\u7801\u5728\u540e\u7eed\u7f16\u8bd1\u65f6\u4f1a\u62a5\u5982\u4e0b\u9519\u8bef\uff1a   <pre><code>NMAKE : fatal error U1073: don't know how to make 'src/os/win32/ngx_win32_config.h'\n</code></pre></li> <li>openssl\u6e90\u4ee3\u7801\uff0c\u53ef\u4ee5\u4eceGitHub Release\u4e0b\u8f7d</li> <li>zlib\u6e90\u4ee3\u7801\uff0cGitHub\u4ed3\u5e93\uff1ahttps://github.com/madler/zlib</li> <li>pcre\u6e90\u4ee3\u7801\uff0c\u5b98\u7f51\u63d0\u4f9b\u5404\u7248\u672c\u7684\u4e0b\u8f7d\u94fe\u63a5\uff1ahttps://ftp.pcre.org/pub/pcre/</li> <li>RMTP\u63d2\u4ef6\uff1ahttps://github.com/arut/nginx-rtmp-module</li> <li>MSYS\uff0c\u53ef\u4ee5\u901a\u8fc7MinGW Installer\u8fdb\u884c\u5b89\u88c5</li> <li>Visual Studio\uff0c\u9700\u8981\u5b89\u88c5C++\u7f16\u8bd1\u5668</li> <li>NASM</li> <li>Perl&gt;=5.30</li> </ul> <p>\u672c\u6b21\u7f16\u8bd1\u4f7f\u7528\u7684\u73af\u5883\uff1a</p> <ul> <li>Windows 19042.662</li> <li>Visual Studio 2019</li> <li>Visual Studio Build Tools 2017</li> <li>Windows 10 SDK 10.0.17763.0</li> <li>nginx 1.19.5</li> <li>openssl 1.1.1g</li> <li>zlib 1.2.11</li> <li>pcre 8.44</li> <li>perl 5.32 (Strawberry)</li> <li>nasm 2.15.05</li> <li>nmake 14.27.29112.0</li> <li>MSVC(cl) 19.27.29112</li> </ul> <p>\u5c06\u5305\u542b<code>perl.exe</code>\u3001<code>nasm.exe</code>\u3001<code>sed.exe</code>\u7684\u76ee\u5f55\u6dfb\u52a0\u5230PATH\u73af\u5883\u53d8\u91cf\u3002</p>"},{"location":"coding/configuration/nginx-rtmp/#_2","title":"\u51c6\u5907\u5de5\u4f5c","text":"<p>\u542f\u52a8MSYS\uff0c<code>cd</code>\u5230nginx\u7684\u6e90\u4ee3\u7801\u76ee\u5f55\uff0c\u5207\u6362\u5230C\u76d8\u6839\u76ee\u5f55\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>cd /c/\n</code></pre> <p>\u6267\u884c<code>auto/configure</code>\uff0c\u6839\u636enginx\u5b98\u7f51\u63d0\u4f9b\u7684\u53c2\u6570\u8fdb\u884c\uff0c\u6dfb\u52a0``\u53c2\u6570\uff0c\u5177\u4f53\u547d\u4ee4\u5982\u4e0b\uff1a</p> <pre><code>auto/configure \\\n--with-cc=cl \\\n--with-debug \\\n--prefix=. \\\n--conf-path=conf/nginx.conf \\\n--pid-path=logs/nginx.pid \\\n--http-log-path=logs/access.log \\\n--error-log-path=logs/error.log \\\n--sbin-path=nginx.exe \\\n--http-client-body-temp-path=temp/client_body_temp \\\n--http-proxy-temp-path=temp/proxy_temp \\\n--http-fastcgi-temp-path=temp/fastcgi_temp \\\n--http-scgi-temp-path=temp/scgi_temp \\\n--http-uwsgi-temp-path=temp/uwsgi_temp \\\n--with-cc-opt=-DFD_SETSIZE=1024 \\\n--with-pcre=pcre-8.44 \\\n--with-zlib=zlib \\\n--with-openssl=openssl \\\n--with-openssl-opt=no-asm \\\n--with-http_ssl_module \\\n--add-module=nginx-rtmp-module\n</code></pre> <p>\u6ce8\u610f\u6b64\u5904<code>--with-pcre</code>\u3001<code>--with-zlib</code>\u3001<code>--with-openssl</code>\u53c2\u6570\u4e2d\u63d0\u4f9b\u7684\u8def\u5f84\u9700\u8981\u4e0ePCRE\u3001zlib\u3001openssl\u7684\u6e90\u4ee3\u7801\u8def\u5f84\u5206\u522b\u5bf9\u5e94\u3002</p> <p>\u6267\u884c\u5b8c\u6bd5\u540e\u751f\u6210Makefile\u6587\u4ef6\u300232\u4f4d\u73af\u5883\u4e0b\u53ef\u4ee5\u76f4\u63a5\u5f00\u59cb\u7f16\u8bd1\uff0c64\u4f4d\u73af\u5883\u4e0b\u9700\u8981\u5bf9<code>auto\\lib\\openssl\\makefile.msvc</code>\u6539\u4e3a\u5982\u4e0b\u4ee3\u7801</p> <pre><code># Copyright (C) Igor Sysoev\n# Copyright (C) Nginx, Inc.\n\n\nall:\ncd $(OPENSSL)\n\nperl Configure VC-WIN64A no-shared              \\\n--prefix=\"%cd%/openssl\"                     \\\n--openssldir=\"%cd%/openssl/ssl\"             \\\n$(OPENSSL_OPT)\n\n    if exist ms\\do_win64a.bat (                     \\\n        ms\\do_win64a                                \\\n        &amp;&amp; $(MAKE) -f ms\\nt.mak                     \\\n        &amp;&amp; $(MAKE) -f ms\\nt.mak install             \\\n    ) else (                                        \\\n        $(MAKE)                                     \\\n        &amp;&amp; $(MAKE) install_sw                       \\\n    )\n</code></pre> <p>\u5c06<code>VC-WIN32</code>\u66ff\u6362\u4e3a<code>VC-WIN64A</code>\uff0c\u6240\u6709\u7684<code>ms\\do_ms.bat</code>\u66ff\u6362\u4e3a<code>ms\\do_win64a.bat</code>\u3002</p>"},{"location":"coding/configuration/nginx-rtmp/#msvc","title":"MSVC\u7f16\u8bd1","text":"<p>\u7f16\u8f91\u5982\u4e0b\u6e90\u4ee3\u7801\u6587\u4ef6\uff1a</p> <ul> <li><code>nginx-rtmp-module/ngx_rtmp_flv_module.c</code>\uff0c\u5b9a\u4f4d\u5230\u5982\u4e0b\u4ee3\u7801\u5757\uff1a</li> </ul> <p>509\u884c\uff1a</p> <pre><code>ngx_rtmp_prepare_message(s, &amp;h, ctx-&gt;msg_mask &amp; (1 &lt;&lt; h.type) ?\n&amp;lh : NULL, out);\n</code></pre> <p>521\u884c\uff1a</p> <pre><code>ctx-&gt;msg_mask |= (1 &lt;&lt; h.type);\n</code></pre> <p>\u5c06\u5176\u4e2d\u7684<code>(1 &lt;&lt; h.type)</code>\u6539\u4e3a<code>(unsigned long)(1 &lt;&lt; h.type)</code>\u3002</p> <ul> <li><code>nginx-rtmp-module/ngx_rtmp_core_module.c</code>\uff0c\u5b9a\u4f4d\u5230\u5982\u4e0b\u4ee3\u7801\u5757\uff1a</li> </ul> <p>611\u884c\uff1a</p> <pre><code>struct sockaddr  *sa;\n</code></pre> <p>\u5c06\u6b64\u5904\u7684\u53d8\u91cf\u540d<code>sa</code>\u6539\u4e3a<code>sa2</code>\uff0c\u5e76\u5c06\u6b64\u540e\u6240\u6709\u7684<code>sa</code>\u53d8\u91cf\u6539\u4e3a<code>sa2</code>\u3002</p> <p>\u542f\u52a8x64 Native Tools Command Prompt for VS 2019\uff0c\u5207\u6362\u5230\u6e90\u4ee3\u7801\u76ee\u5f55\uff0c\u6267\u884c<code>nmake</code>\u542f\u52a8\u7f16\u8bd1\u3002\u8f93\u51fa\u6587\u4ef6\u4e3a<code>objs/nginx.exe</code></p>"},{"location":"coding/configuration/nginx-rtmp/#nginx","title":"nginx\u914d\u7f6e","text":"<p>\u5c06<code>objs/nginx.exe</code>\u590d\u5236\u4e00\u4efd\u3002\u5728\u6240\u5728\u76ee\u5f55\u4e0b\u521b\u5efa\u5982\u4e0b\u6587\u4ef6\u7ed3\u6784\uff1a</p> <pre><code>.\n\u251c\u2500 nginx.exe\n\u251c\u2500 conf/\n\u2502  \u2514\u2500 nginx.conf\n\u251c\u2500 html\n\u2502  \u2514\u2500 index.xsl\n\u251c\u2500 logs\n\u2514\u2500 temp\n</code></pre> <p>\u5176\u4e2d\uff0c<code>html/index.xsl</code>\u5199\u5165\u5982\u4e0b\u5185\u5bb9</p> html/index.xsl\u6587\u4ef6\u5185\u5bb9 <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?&gt;\n&lt;!--\nCopyright (C) Roman Arutyunyan\n--&gt;\n&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt;\n&lt;xsl:template match=\"/\"&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;RTMP statistics&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;xsl:apply-templates select=\"rtmp\"/&gt;\n&lt;hr/&gt;\nGenerated by &lt;a href='https://github.com/arut/nginx-rtmp-module'&gt;\nnginx-rtmp-module&lt;/a&gt;&amp;#160;&lt;xsl:value-of select=\"/rtmp/nginx_rtmp_version\"/&gt;,\n            &lt;a href=\"http://nginx.org\"&gt;nginx&lt;/a&gt;&amp;#160;&lt;xsl:value-of select=\"/rtmp/nginx_version\"/&gt;,\n            pid &lt;xsl:value-of select=\"/rtmp/pid\"/&gt;,\n            built &lt;xsl:value-of select=\"/rtmp/built\"/&gt;&amp;#160;&lt;xsl:value-of select=\"/rtmp/compiler\"/&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n&lt;/xsl:template&gt;\n&lt;xsl:template match=\"rtmp\"&gt;\n&lt;table cellspacing=\"1\" cellpadding=\"5\"&gt;\n&lt;tr bgcolor=\"#999999\"&gt;\n&lt;th&gt;RTMP&lt;/th&gt;\n&lt;th&gt;#clients&lt;/th&gt;\n&lt;th colspan=\"4\"&gt;Video&lt;/th&gt;\n&lt;th colspan=\"4\"&gt;Audio&lt;/th&gt;\n&lt;th&gt;In bytes&lt;/th&gt;\n&lt;th&gt;Out bytes&lt;/th&gt;\n&lt;th&gt;In bits/s&lt;/th&gt;\n&lt;th&gt;Out bits/s&lt;/th&gt;\n&lt;th&gt;State&lt;/th&gt;\n&lt;th&gt;Time&lt;/th&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td colspan=\"2\"&gt;Accepted: &lt;xsl:value-of select=\"naccepted\"/&gt;&lt;/td&gt;\n&lt;th bgcolor=\"#999999\"&gt;codec&lt;/th&gt;\n&lt;th bgcolor=\"#999999\"&gt;bits/s&lt;/th&gt;\n&lt;th bgcolor=\"#999999\"&gt;size&lt;/th&gt;\n&lt;th bgcolor=\"#999999\"&gt;fps&lt;/th&gt;\n&lt;th bgcolor=\"#999999\"&gt;codec&lt;/th&gt;\n&lt;th bgcolor=\"#999999\"&gt;bits/s&lt;/th&gt;\n&lt;th bgcolor=\"#999999\"&gt;freq&lt;/th&gt;\n&lt;th bgcolor=\"#999999\"&gt;chan&lt;/th&gt;\n&lt;td&gt;\n&lt;xsl:call-template name=\"showsize\"&gt;\n&lt;xsl:with-param name=\"size\" select=\"bytes_in\"/&gt;\n&lt;/xsl:call-template&gt;\n&lt;/td&gt;\n&lt;td&gt;\n&lt;xsl:call-template name=\"showsize\"&gt;\n&lt;xsl:with-param name=\"size\" select=\"bytes_out\"/&gt;\n&lt;/xsl:call-template&gt;\n&lt;/td&gt;\n&lt;td&gt;\n&lt;xsl:call-template name=\"showsize\"&gt;\n&lt;xsl:with-param name=\"size\" select=\"bw_in\"/&gt;\n&lt;xsl:with-param name=\"bits\" select=\"1\"/&gt;\n&lt;xsl:with-param name=\"persec\" select=\"1\"/&gt;\n&lt;/xsl:call-template&gt;\n&lt;/td&gt;\n&lt;td&gt;\n&lt;xsl:call-template name=\"showsize\"&gt;\n&lt;xsl:with-param name=\"size\" select=\"bw_out\"/&gt;\n&lt;xsl:with-param name=\"bits\" select=\"1\"/&gt;\n&lt;xsl:with-param name=\"persec\" select=\"1\"/&gt;\n&lt;/xsl:call-template&gt;\n&lt;/td&gt;\n&lt;td/&gt;\n&lt;td&gt;\n&lt;xsl:call-template name=\"showtime\"&gt;\n&lt;xsl:with-param name=\"time\" select=\"/rtmp/uptime * 1000\"/&gt;\n&lt;/xsl:call-template&gt;\n&lt;/td&gt;\n&lt;/tr&gt;\n&lt;xsl:apply-templates select=\"server\"/&gt;\n&lt;/table&gt;\n&lt;/xsl:template&gt;\n&lt;xsl:template match=\"server\"&gt;\n&lt;xsl:apply-templates select=\"application\"/&gt;\n&lt;/xsl:template&gt;\n&lt;xsl:template match=\"application\"&gt;\n&lt;tr bgcolor=\"#999999\"&gt;\n&lt;td&gt;\n&lt;b&gt;&lt;xsl:value-of select=\"name\"/&gt;&lt;/b&gt;\n&lt;/td&gt;\n&lt;/tr&gt;\n&lt;xsl:apply-templates select=\"live\"/&gt;\n&lt;xsl:apply-templates select=\"play\"/&gt;\n&lt;/xsl:template&gt;\n&lt;xsl:template match=\"live\"&gt;\n&lt;tr bgcolor=\"#aaaaaa\"&gt;\n&lt;td&gt;\n&lt;i&gt;live streams&lt;/i&gt;\n&lt;/td&gt;\n&lt;td align=\"middle\"&gt;\n&lt;xsl:value-of select=\"nclients\"/&gt;\n&lt;/td&gt;\n&lt;/tr&gt;\n&lt;xsl:apply-templates select=\"stream\"/&gt;\n&lt;/xsl:template&gt;\n&lt;xsl:template match=\"play\"&gt;\n&lt;tr bgcolor=\"#aaaaaa\"&gt;\n&lt;td&gt;\n&lt;i&gt;vod streams&lt;/i&gt;\n&lt;/td&gt;\n&lt;td align=\"middle\"&gt;\n&lt;xsl:value-of select=\"nclients\"/&gt;\n&lt;/td&gt;\n&lt;/tr&gt;\n&lt;xsl:apply-templates select=\"stream\"/&gt;\n&lt;/xsl:template&gt;\n&lt;xsl:template match=\"stream\"&gt;\n&lt;tr valign=\"top\"&gt;\n&lt;xsl:attribute name=\"bgcolor\"&gt;\n&lt;xsl:choose&gt;\n&lt;xsl:when test=\"active\"&gt;#cccccc&lt;/xsl:when&gt;\n&lt;xsl:otherwise&gt;#dddddd&lt;/xsl:otherwise&gt;\n&lt;/xsl:choose&gt;\n&lt;/xsl:attribute&gt;\n&lt;td&gt;\n&lt;a href=\"\"&gt;\n&lt;xsl:attribute name=\"onclick\"&gt;\nvar d=document.getElementById('&lt;xsl:value-of select=\"../../name\"/&gt;-&lt;xsl:value-of select=\"name\"/&gt;');\n                    d.style.display=d.style.display=='none'?'':'none';\n                    return false\n                &lt;/xsl:attribute&gt;\n&lt;xsl:value-of select=\"name\"/&gt;\n&lt;xsl:if test=\"string-length(name) = 0\"&gt;\n[EMPTY]\n                &lt;/xsl:if&gt;\n&lt;/a&gt;\n&lt;/td&gt;\n&lt;td align=\"middle\"&gt; &lt;xsl:value-of select=\"nclients\"/&gt; &lt;/td&gt;\n&lt;td&gt;\n&lt;xsl:value-of select=\"meta/video/codec\"/&gt;&amp;#160;&lt;xsl:value-of select=\"meta/video/profile\"/&gt;&amp;#160;&lt;xsl:value-of select=\"meta/video/level\"/&gt;\n&lt;/td&gt;\n&lt;td&gt;\n&lt;xsl:call-template name=\"showsize\"&gt;\n&lt;xsl:with-param name=\"size\" select=\"bw_video\"/&gt;\n&lt;xsl:with-param name=\"bits\" select=\"1\"/&gt;\n&lt;xsl:with-param name=\"persec\" select=\"1\"/&gt;\n&lt;/xsl:call-template&gt;\n&lt;/td&gt;\n&lt;td&gt;\n&lt;xsl:apply-templates select=\"meta/video/width\"/&gt;\n&lt;/td&gt;\n&lt;td&gt;\n&lt;xsl:value-of select=\"meta/video/frame_rate\"/&gt;\n&lt;/td&gt;\n&lt;td&gt;\n&lt;xsl:value-of select=\"meta/audio/codec\"/&gt;&amp;#160;&lt;xsl:value-of select=\"meta/audio/profile\"/&gt;\n&lt;/td&gt;\n&lt;td&gt;\n&lt;xsl:call-template name=\"showsize\"&gt;\n&lt;xsl:with-param name=\"size\" select=\"bw_audio\"/&gt;\n&lt;xsl:with-param name=\"bits\" select=\"1\"/&gt;\n&lt;xsl:with-param name=\"persec\" select=\"1\"/&gt;\n&lt;/xsl:call-template&gt;\n&lt;/td&gt;\n&lt;td&gt;\n&lt;xsl:apply-templates select=\"meta/audio/sample_rate\"/&gt;\n&lt;/td&gt;\n&lt;td&gt;\n&lt;xsl:value-of select=\"meta/audio/channels\"/&gt;\n&lt;/td&gt;\n&lt;td&gt;\n&lt;xsl:call-template name=\"showsize\"&gt;\n&lt;xsl:with-param name=\"size\" select=\"bytes_in\"/&gt;\n&lt;/xsl:call-template&gt;\n&lt;/td&gt;\n&lt;td&gt;\n&lt;xsl:call-template name=\"showsize\"&gt;\n&lt;xsl:with-param name=\"size\" select=\"bytes_out\"/&gt;\n&lt;/xsl:call-template&gt;\n&lt;/td&gt;\n&lt;td&gt;\n&lt;xsl:call-template name=\"showsize\"&gt;\n&lt;xsl:with-param name=\"size\" select=\"bw_in\"/&gt;\n&lt;xsl:with-param name=\"bits\" select=\"1\"/&gt;\n&lt;xsl:with-param name=\"persec\" select=\"1\"/&gt;\n&lt;/xsl:call-template&gt;\n&lt;/td&gt;\n&lt;td&gt;\n&lt;xsl:call-template name=\"showsize\"&gt;\n&lt;xsl:with-param name=\"size\" select=\"bw_out\"/&gt;\n&lt;xsl:with-param name=\"bits\" select=\"1\"/&gt;\n&lt;xsl:with-param name=\"persec\" select=\"1\"/&gt;\n&lt;/xsl:call-template&gt;\n&lt;/td&gt;\n&lt;td&gt;&lt;xsl:call-template name=\"streamstate\"/&gt;&lt;/td&gt;\n&lt;td&gt;\n&lt;xsl:call-template name=\"showtime\"&gt;\n&lt;xsl:with-param name=\"time\" select=\"time\"/&gt;\n&lt;/xsl:call-template&gt;\n&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr style=\"display:none\"&gt;\n&lt;xsl:attribute name=\"id\"&gt;\n&lt;xsl:value-of select=\"../../name\"/&gt;-&lt;xsl:value-of select=\"name\"/&gt;\n&lt;/xsl:attribute&gt;\n&lt;td colspan=\"16\" ngcolor=\"#eeeeee\"&gt;\n&lt;table cellspacing=\"1\" cellpadding=\"5\"&gt;\n&lt;tr&gt;\n&lt;th&gt;Id&lt;/th&gt;\n&lt;th&gt;State&lt;/th&gt;\n&lt;th&gt;Address&lt;/th&gt;\n&lt;th&gt;Flash version&lt;/th&gt;\n&lt;th&gt;Page URL&lt;/th&gt;\n&lt;th&gt;SWF URL&lt;/th&gt;\n&lt;th&gt;Dropped&lt;/th&gt;\n&lt;th&gt;Timestamp&lt;/th&gt;\n&lt;th&gt;A-V&lt;/th&gt;\n&lt;th&gt;Time&lt;/th&gt;\n&lt;/tr&gt;\n&lt;xsl:apply-templates select=\"client\"/&gt;\n&lt;/table&gt;\n&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/xsl:template&gt;\n&lt;xsl:template name=\"showtime\"&gt;\n&lt;xsl:param name=\"time\"/&gt;\n\n&lt;xsl:if test=\"$time &amp;gt; 0\"&gt;\n&lt;xsl:variable name=\"sec\"&gt;\n&lt;xsl:value-of select=\"floor($time div 1000)\"/&gt;\n&lt;/xsl:variable&gt;\n\n&lt;xsl:if test=\"$sec &amp;gt;= 86400\"&gt;\n&lt;xsl:value-of select=\"floor($sec div 86400)\"/&gt;d\n        &lt;/xsl:if&gt;\n\n&lt;xsl:if test=\"$sec &amp;gt;= 3600\"&gt;\n&lt;xsl:value-of select=\"(floor($sec div 3600)) mod 24\"/&gt;h\n        &lt;/xsl:if&gt;\n\n&lt;xsl:if test=\"$sec &amp;gt;= 60\"&gt;\n&lt;xsl:value-of select=\"(floor($sec div 60)) mod 60\"/&gt;m\n        &lt;/xsl:if&gt;\n\n&lt;xsl:value-of select=\"$sec mod 60\"/&gt;s\n    &lt;/xsl:if&gt;\n&lt;/xsl:template&gt;\n\n&lt;xsl:template name=\"showsize\"&gt;\n&lt;xsl:param name=\"size\"/&gt;\n&lt;xsl:param name=\"bits\" select=\"0\" /&gt;\n&lt;xsl:param name=\"persec\" select=\"0\" /&gt;\n&lt;xsl:variable name=\"sizen\"&gt;\n&lt;xsl:value-of select=\"floor($size div 1024)\"/&gt;\n&lt;/xsl:variable&gt;\n&lt;xsl:choose&gt;\n&lt;xsl:when test=\"$sizen &amp;gt;= 1073741824\"&gt;\n&lt;xsl:value-of select=\"format-number($sizen div 1073741824,'#.###')\"/&gt; T&lt;/xsl:when&gt;\n\n&lt;xsl:when test=\"$sizen &amp;gt;= 1048576\"&gt;\n&lt;xsl:value-of select=\"format-number($sizen div 1048576,'#.###')\"/&gt; G&lt;/xsl:when&gt;\n\n&lt;xsl:when test=\"$sizen &amp;gt;= 1024\"&gt;\n&lt;xsl:value-of select=\"format-number($sizen div 1024,'#.##')\"/&gt; M&lt;/xsl:when&gt;\n&lt;xsl:when test=\"$sizen &amp;gt;= 0\"&gt;\n&lt;xsl:value-of select=\"$sizen\"/&gt; K&lt;/xsl:when&gt;\n&lt;/xsl:choose&gt;\n&lt;xsl:if test=\"string-length($size) &amp;gt; 0\"&gt;\n&lt;xsl:choose&gt;\n&lt;xsl:when test=\"$bits = 1\"&gt;b&lt;/xsl:when&gt;\n&lt;xsl:otherwise&gt;B&lt;/xsl:otherwise&gt;\n&lt;/xsl:choose&gt;\n&lt;xsl:if test=\"$persec = 1\"&gt;/s&lt;/xsl:if&gt;\n&lt;/xsl:if&gt;\n&lt;/xsl:template&gt;\n\n&lt;xsl:template name=\"streamstate\"&gt;\n&lt;xsl:choose&gt;\n&lt;xsl:when test=\"active\"&gt;active&lt;/xsl:when&gt;\n&lt;xsl:otherwise&gt;idle&lt;/xsl:otherwise&gt;\n&lt;/xsl:choose&gt;\n&lt;/xsl:template&gt;\n\n\n&lt;xsl:template name=\"clientstate\"&gt;\n&lt;xsl:choose&gt;\n&lt;xsl:when test=\"publishing\"&gt;publishing&lt;/xsl:when&gt;\n&lt;xsl:otherwise&gt;playing&lt;/xsl:otherwise&gt;\n&lt;/xsl:choose&gt;\n&lt;/xsl:template&gt;\n\n\n&lt;xsl:template match=\"client\"&gt;\n&lt;tr&gt;\n&lt;xsl:attribute name=\"bgcolor\"&gt;\n&lt;xsl:choose&gt;\n&lt;xsl:when test=\"publishing\"&gt;#cccccc&lt;/xsl:when&gt;\n&lt;xsl:otherwise&gt;#eeeeee&lt;/xsl:otherwise&gt;\n&lt;/xsl:choose&gt;\n&lt;/xsl:attribute&gt;\n&lt;td&gt;&lt;xsl:value-of select=\"id\"/&gt;&lt;/td&gt;\n&lt;td&gt;&lt;xsl:call-template name=\"clientstate\"/&gt;&lt;/td&gt;\n&lt;td&gt;\n&lt;a target=\"_blank\"&gt;\n&lt;xsl:attribute name=\"href\"&gt;\nhttp://apps.db.ripe.net/search/query.html&amp;#63;searchtext=&lt;xsl:value-of select=\"address\"/&gt;\n&lt;/xsl:attribute&gt;\n&lt;xsl:attribute name=\"title\"&gt;whois&lt;/xsl:attribute&gt;\n&lt;xsl:value-of select=\"address\"/&gt;\n&lt;/a&gt;\n&lt;/td&gt;\n&lt;td&gt;&lt;xsl:value-of select=\"flashver\"/&gt;&lt;/td&gt;\n&lt;td&gt;\n&lt;a target=\"_blank\"&gt;\n&lt;xsl:attribute name=\"href\"&gt;\n&lt;xsl:value-of select=\"pageurl\"/&gt;\n&lt;/xsl:attribute&gt;\n&lt;xsl:value-of select=\"pageurl\"/&gt;\n&lt;/a&gt;\n&lt;/td&gt;\n&lt;td&gt;&lt;xsl:value-of select=\"swfurl\"/&gt;&lt;/td&gt;\n&lt;td&gt;&lt;xsl:value-of select=\"dropped\"/&gt;&lt;/td&gt;\n&lt;td&gt;&lt;xsl:value-of select=\"timestamp\"/&gt;&lt;/td&gt;\n&lt;td&gt;&lt;xsl:value-of select=\"avsync\"/&gt;&lt;/td&gt;\n&lt;td&gt;\n&lt;xsl:call-template name=\"showtime\"&gt;\n&lt;xsl:with-param name=\"time\" select=\"time\"/&gt;\n&lt;/xsl:call-template&gt;\n&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/xsl:template&gt;\n\n&lt;xsl:template match=\"publishing\"&gt;\npublishing\n&lt;/xsl:template&gt;\n\n&lt;xsl:template match=\"active\"&gt;\nactive\n&lt;/xsl:template&gt;\n\n&lt;xsl:template match=\"width\"&gt;\n&lt;xsl:value-of select=\".\"/&gt;x&lt;xsl:value-of select=\"../height\"/&gt;\n&lt;/xsl:template&gt;\n\n&lt;/xsl:stylesheet&gt;\n</code></pre> <p><code>conf/nginx.conf</code>\u5199\u5165\u5982\u4e0b\u5185\u5bb9\uff1a</p> <p>conf/nginx.conf\u6587\u4ef6\u5185\u5bb9</p> <pre><code>worker_processes  8;\nerror_log  logs/error.log info;\nevents {\nworker_connections  1024;\n}\n\nrtmp {\nserver {\nlisten 1935;\n\napplication live {\nlive on;\n}\n\napplication hls {\nlive on;\nhls on;  \nhls_path temp/hls;  \nhls_fragment 8s;  \n}\n}\n}\n\nhttp {\nserver {\nlisten      8080;\nroot html;\nlocation / {\nrtmp_stat all;\nrtmp_stat_stylesheet index.xsl;\n}\n\nlocation /index.xsl {\nroot html;\n}\n\nlocation /hls {  \ntypes{  application/vnd.apple.mpegurl m3u8;  \nvideo/mp2t ts;  \n}  alias temp/hls;  \nexpires -1;  \n}  }\n}\n</code></pre> <p>\u53cc\u51fb<code>nginx.exe</code>\u5373\u53ef\u542f\u52a8\u670d\u52a1\u5668\uff0c\u670d\u52a1\u5668\u540c\u65f6\u76d1\u542c1935\u7aef\u53e3\u4e0e8080\u7aef\u53e3</p> <ul> <li>\u63a8\u6d41\u4f7f\u7528\u7684RTMP\u670d\u52a1\u5668\u5730\u5740\u4e3a\uff1a<code>rtmp://localhost:1935/live</code></li> <li>\u8bbf\u95ee<code>http://localhost:8080</code>\u53ef\u4ee5\u67e5\u770b\u670d\u52a1\u5668\u7aef\u7684\u7edf\u8ba1\u4fe1\u606f</li> <li>\u5ba2\u6237\u7aef\uff08\u5982VLC\u7b49\uff09\u53ef\u4ee5\u8bbf\u95ee<code>rtmp://localhost:1935/live</code>\u63a5\u6536\u6d41\uff0c<code>localhost</code>\u53ef\u4ee5\u66f4\u6539\u4e3a\u672c\u673a\u7684IP\u5730\u5740</li> </ul> <p>\u4f7f\u7528\u547d\u4ee4<code>.\\nginx.exe -s stop</code>\u5173\u95ed\u670d\u52a1\u5668</p>"},{"location":"coding/configuration/ssh/","title":"SSH","text":""},{"location":"coding/configuration/ssh/#_1","title":"\u57fa\u672c\u4f7f\u7528","text":"<p>SSH\u53ef\u4ee5\u8fdc\u7a0b\u8fde\u63a5\u670d\u52a1\u5668\u7684\u7ec8\u7aef\u3002\u547d\u4ee4\u683c\u5f0f\u5982\u4e0b\uff0c\u5176\u4e2d<code>&lt;user&gt;</code>\u4e3a\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0a\u7684\u7528\u6237\u540d\uff0c<code>&lt;hostname&gt;</code>\u662f\u8fdc\u7a0b\u670d\u52a1\u5668\u7684\u7f51\u7edc\u5730\u5740\uff0c\u53ef\u4ee5\u662fIP\u5730\u5740\u6216\u57df\u540d\uff0c\u4e5f\u53ef\u4ee5\u662f<code>~/.ssh/config</code>\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u4e3b\u673a\u3002\u5982\u679c\u6307\u5b9a\u4e86<code>&lt;command&gt;</code>\u53c2\u6570\uff0c\u5219SSH\u5728\u8fde\u63a5\u6210\u529f\u540e\u4f1a\u81ea\u52a8\u6267\u884c\u547d\u4ee4\uff0c\u5c06\u7ed3\u679c\u8f93\u51fa\u5230\u7ec8\u7aef\u5e76\u5728\u6267\u884c\u7ed3\u675f\u540e\u65ad\u5f00\u8fde\u63a5\u3002</p> <pre><code>ssh &lt;user&gt;@&lt;hostname&gt; [&lt;command&gt;]\n</code></pre> <p>\u82e5\u5ba2\u6237\u7aef\u7684\u7528\u6237\u540d\u548c\u670d\u52a1\u5668\u7684\u7528\u6237\u540d\u76f8\u540c\uff0c\u53ef\u4ee5\u7701\u7565<code>&lt;user&gt;</code>\u53c2\u6570\uff0c\u5982</p> <pre><code>ssh &lt;hostname&gt; [&lt;command&gt;]\n</code></pre>"},{"location":"coding/configuration/ssh/#_2","title":"\u7aef\u53e3\u8f6c\u53d1","text":"<p>SSH\u63d0\u4f9b\u4e86<code>-L</code>\u3001<code>-R</code>\u3001<code>-D</code>\u53c2\u6570\uff0c\u5206\u522b\u53ef\u4ee5\u5b9e\u73b0\u672c\u5730\u7aef\u53e3\u8f6c\u53d1\u3001\u8fdc\u7a0b\u7aef\u53e3\u8f6c\u53d1\u4e0e\u52a8\u6001\u7aef\u53e3\u8f6c\u53d1\u3002\u4f7f\u7528<code>-N</code>\u53c2\u6570\u53ef\u4ee5\u5728\u4e0d\u8fde\u63a5\u8fdc\u7a0b\u7ec8\u7aef\uff0c\u53ea\u5b9e\u73b0\u7aef\u53e3\u8f6c\u53d1\u3002\u4e3a\u6e05\u6670\u8868\u8ff0\u5404\u4e2a\u7aef\u53e3\uff0c\u672c\u8282\u4e2d\u5047\u8bbe\u5ba2\u6237\u7aefA\u3001\u670d\u52a1\u5668B\u548c\u53e6\u4e00\u4e3b\u673aC\u3002\u5ba2\u6237\u7aefA\u901a\u8fc7SSH\u8fde\u63a5\u81f3\u670d\u52a1\u5668B\u3002</p>"},{"location":"coding/configuration/ssh/#_3","title":"\u672c\u5730\u7aef\u53e3\u8f6c\u53d1","text":"<p>\u4f7f\u7528<code>-L</code>\u53c2\u6570\u53ef\u4ee5\u6253\u5f00SSH\u7684\u672c\u5730\u7aef\u53e3\u8f6c\u53d1\u529f\u80fd\u3002\u7531\u4e8e<code>-L</code>\u53c2\u6570\u5c06\u6307\u5411\u5ba2\u6237\u7aef\u672c\u5730\u7684\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u670d\u52a1\u5668\uff0c\u56e0\u6b64\u79f0\u4e3a\u672c\u5730\u7aef\u53e3\u8f6c\u53d1\u3002\u542f\u52a8\u672c\u5730\u7aef\u53e3\u8f6c\u53d1\u7684\u547d\u4ee4\u683c\u5f0f\u5982\u4e0b</p> <pre><code>ssh -L [&lt;bind-addr&gt;]:&lt;port-of-A&gt;:&lt;addr-of-C&gt;:&lt;port-of-C&gt; &lt;user&gt;@&lt;hostname&gt;\n</code></pre> <p>\u4ee5\u4e0a\u547d\u4ee4\u8868\u793a\u5c06\u5ba2\u6237\u7aefA\u4e0a\u6307\u5411<code>&lt;port-of-A&gt;</code>\u7aef\u53e3\u7684\u672c\u5730\u8bf7\u6c42\u901a\u8fc7SSH\u8f6c\u53d1\u7ed9\u670d\u52a1\u5668B\uff0c\u7531\u670d\u52a1\u5668B\u5411\u8fdc\u7a0b\u4e3b\u673a<code>&lt;addr-of-C&gt;</code>\u7684<code>&lt;port-of-C&gt;</code>\u7aef\u53e3\u53d1\u8d77\u8bf7\u6c42\u3002\u82e5\u6307\u5b9a<code>&lt;bind-addr&gt;</code>\uff0c\u5219SSH\u4f1a\u76d1\u542c<code>&lt;bind-addr&gt;</code>\u5730\u5740\uff0c\u5e76\u53ea\u8f6c\u53d1\u76ee\u6807\u4e3a<code>&lt;bind-addr&gt;</code>\u7684\u8bf7\u6c42\u3002</p>"},{"location":"coding/configuration/ssh/#_4","title":"\u8fdc\u7a0b\u7aef\u53e3\u8f6c\u53d1","text":"<p>\u4f7f\u7528<code>-R</code>\u53c2\u6570\u53ef\u4ee5\u6253\u5f00SSH\u7684\u8fdc\u7a0b\u7aef\u53e3\u8f6c\u53d1\u529f\u80fd\u3002<code>-R</code>\u7aef\u53e3\u5c06\u6307\u5411\u8fdc\u7a0b\u670d\u52a1\u5668\u7684\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u5ba2\u6237\u7aef\uff0c\u56e0\u6b64\u79f0\u4e3a\u8fdc\u7a0b\u7aef\u53e3\u8f6c\u53d1\u3002\u542f\u52a8\u8fdc\u7a0b\u7aef\u53e3\u8f6c\u53d1\u7684\u547d\u4ee4\u683c\u5f0f\u5982\u4e0b</p> <pre><code>ssh -R [&lt;bind-addr&gt;]:&lt;port-of-B&gt;:&lt;addr-of-C&gt;:&lt;port-of-C&gt; &lt;user&gt;@&lt;hostname&gt;\n</code></pre> <p>\u4ee5\u4e0a\u547d\u4ee4\u8868\u793a\u5c06\u670d\u52a1\u5668B\u4e0a\u6307\u5411<code>&lt;port-of-B&gt;</code>\u7aef\u53e3\u7684\u8bf7\u6c42\u901a\u8fc7SSH\u8f6c\u53d1\u7ed9\u5ba2\u6237\u7aefA\uff0c\u7531\u5ba2\u6237\u7aefA\u5411\u53e6\u4e00\u53f0\u4e3b\u673a<code>&lt;addr-of-C&gt;</code>\u7684<code>&lt;port-of-C&gt;</code>\u7aef\u53e3\u53d1\u8d77\u8bf7\u6c42\u3002\u82e5\u6307\u5b9a<code>&lt;bind-addr&gt;</code>\uff0c\u5219SSH\u4f1a\u76d1\u542c<code>&lt;bind-addr&gt;</code>\u5730\u5740\uff0c\u5e76\u53ea\u8f6c\u53d1\u76ee\u6807\u4e3a<code>&lt;bind-addr&gt;</code>\u7684\u8bf7\u6c42\u3002</p>"},{"location":"coding/configuration/ssh/#_5","title":"\u52a8\u6001\u7aef\u53e3\u8f6c\u53d1","text":"<p>\u52a8\u6001\u7aef\u53e3\u8f6c\u53d1\u7684\u547d\u4ee4\u683c\u5f0f\u5982\u4e0b</p> <pre><code>ssh -D &lt;port-of-A&gt; &lt;user&gt;@&lt;hostname&gt;\n</code></pre> <p>\u4ee5\u4e0a\u547d\u4ee4\u8868\u793a\u5c06\u5ba2\u6237\u7aefA\u4e0a\u6307\u5411<code>&lt;port-of-A&gt;</code>\u7684\u8bf7\u6c42\u901a\u8fc7SSH\u8f6c\u53d1\u7ed9\u670d\u52a1\u5668B\uff0c\u7531B\u4ee3\u4e3a\u53d1\u8d77\u8bf7\u6c42\uff0c\u5e76\u5c06\u8bbf\u95ee\u7ed3\u679c\u4f20\u8f93\u56de\u672c\u5730\u3002</p> <p>\u82e5\u8981\u8f6c\u53d1\u6240\u6709\u672c\u5730\u7f51\u7edc\u8bf7\u6c42\uff0c\u8bbe\u7f6eSOCKS5\u4ee3\u7406\u5c06\u672c\u5730\u8bf7\u6c42\u91cd\u5b9a\u5411\u5230<code>&lt;port-of-A&gt;</code>\u5373\u53ef\u3002</p>"},{"location":"coding/configuration/ssh/#_6","title":"\u5bc6\u94a5\u767b\u5f55","text":"<p>SSH\u9ed8\u8ba4\u4f7f\u7528\u7528\u6237\u540d-\u5bc6\u7801\u7684\u65b9\u5f0f\u8fdb\u884c\u9a8c\u8bc1\uff0c\u6bcf\u6b21\u767b\u5f55\u9700\u8981\u8f93\u5165\u5bc6\u7801\u3002\u53ef\u4ee5\u914d\u7f6eSSH\u4f7f\u7528\u5bc6\u94a5\u5bf9\u5ba2\u6237\u7aef\u8fdb\u884c\u9a8c\u8bc1\uff0c\u6b64\u540e\u4f7f\u7528\u8be5\u5ba2\u6237\u7aef\u767b\u5f55\u5c31\u4e0d\u518d\u9700\u8981\u8f93\u5165\u5bc6\u7801\u3002\u6b65\u9aa4\u5982\u4e0b</p> <ol> <li>\u5728\u5ba2\u6237\u7aef\u6267\u884c<code>ssh-keygen</code>\u547d\u4ee4\u751f\u6210\u5bc6\u94a5\u5bf9\uff0c\u6267\u884c\u5b8c\u6210\u540e\u4f1a\u5728<code>~/.ssh</code>\u76ee\u5f55\u4e0b\u751f\u6210\u79c1\u94a5\u6587\u4ef6<code>id_rsa</code>\u4e0e\u516c\u94a5\u6587\u4ef6<code>id_rsa.pub</code>\uff1b</li> <li>\u6267\u884c<code>ssh-copy-id &lt;user&gt;@&lt;hostname&gt;</code>\u547d\u4ee4\uff0c\u5c06\u516c\u94a5\u590d\u5236\u5230\u8fdc\u7a0b\u4e3b\u673a\u7684<code>~/.ssh/authorized_key</code>\u6587\u4ef6\u4e2d\uff08\u624b\u52a8\u590d\u5236\u7c98\u8d34\u4e5f\u53ef\u4ee5\uff09\u3002</li> </ol>"},{"location":"coding/configuration/ssh/#_7","title":"\u6587\u4ef6\u4f20\u8f93","text":"<p><code>scp</code>\u53ef\u4ee5\u501f\u52a9SSH tunnel\u5b9e\u73b0\u6587\u4ef6\u4f20\u8f93\u3002\u547d\u4ee4\u683c\u5f0f\u5982\u4e0b</p> <pre><code>scp SOURCE DESTINATION\n</code></pre> <p>\u8868\u793a\u5c06\u6587\u4ef6SOURCE\u590d\u5236\u5230DESTINATION\u4e0b\u3002SOURCE\u548cDESTINATION\u53ef\u4ee5\u662f\uff1a</p> <ol> <li>\u672c\u5730\u6709\u6548\u8def\u5f84</li> <li>\u683c\u5f0f\u4e3a<code>&lt;user&gt;@&lt;ip&gt;:&lt;path&gt;</code>\u7684\u8fdc\u7a0b\u8def\u5f84</li> </ol>"},{"location":"coding/dsa/","title":"\u6570\u636e\u7ed3\u6784","text":"<p>\u4ee5\u4e0b\u6574\u7406\u4e86\u9093\u4fca\u8f89\u8001\u5e08\u300a\u6570\u636e\u7ed3\u6784\u300b\u8bfe\u7a0b\u7684\u5185\u5bb9\uff1a</p> <ul> <li>\u5411\u91cf\u4e0e\u5217\u8868</li> </ul>"},{"location":"coding/dsa/vector-and-list/","title":"\u5411\u91cf\u4e0e\u5217\u8868","text":"<p>\u4e3b\u8981\u7684\u57fa\u7840\u7ebf\u6027\u6570\u636e\u7ed3\u6784\u662f\u5411\u91cf\u4e0e\u5217\u8868\u3002\u5728\u672c\u5408\u96c6\u4e2d\uff0c\u5411\u91cf\u6307\u4ee5\u6570\u7ec4\u65b9\u5f0f\u7ec4\u5408\u5e76\u5c01\u88c5\u901a\u7528\u62bd\u8c61\u63a5\u53e3\u7684\u6570\u636e\u7c7b\u578b\uff1b\u5217\u8868\u6307\u4ee5\u94fe\u8868\u65b9\u5f0f\u7ec4\u5408\u5e76\u5c01\u88c5\u901a\u7528\u62bd\u8c61\u63a5\u53e3\u7684\u6570\u636e\u7c7b\u578b\u3002</p> <p>\u8f83\u4e3a\u9ad8\u7ea7\u7684\u6570\u636e\u7ed3\u6784\u2014\u2014\u6808\u4e0e\u961f\u5217\u5efa\u7acb\u5728\u5411\u91cf\u4e0e\u5217\u8868\u7684\u57fa\u7840\u4e0a\u3002\u63d0\u4f9b\u4e86\u4e00\u4e9b\u53d7\u9650\u5236\u7684\u64cd\u4f5c\u63a5\u53e3\u3002</p>"},{"location":"coding/dsa/vector-and-list/#_2","title":"\u7ebf\u6027\u6570\u636e\u7ed3\u6784","text":"<p>\u5bf9\u4e8e\u57fa\u7840\u7684\u7ebf\u6027\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u4e0b\u7684\u63a5\u53e3\u53ef\u4ee5\u89c6\u4e3a\u901a\u7528\uff1a</p> \u64cd\u4f5c \u63cf\u8ff0 \u901a\u7528\u6027 <code>size()</code> \u83b7\u53d6\u5bf9\u8c61\u4e2d\u5143\u7d20\u7684\u6570\u76ee <code>get()</code> \u83b7\u53d6\u5bf9\u8c61\u4e2d\u67d0\u4e2a\u5143\u7d20\u7684\u503c <code>set()</code> \u4fee\u6539\u5bf9\u8c61\u4e2d\u67d0\u4e2a\u5143\u7d20\u7684\u503c <code>insert()</code> \u5411\u5bf9\u8c61\u4e2d\u7684\u67d0\u4e2a\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20 <code>remove()</code> \u79fb\u9664\u5bf9\u8c61\u4e2d\u7684\u67d0\u4e2a\u5143\u7d20 <code>traverse()</code> \u904d\u5386\u5bf9\u8c61\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u5e76\u6267\u884c\u67d0\u64cd\u4f5c <code>find()</code> \u5728\u5bf9\u8c61\u4e2d\u67e5\u627e\u67d0\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e <code>search()</code> \u5728\u6709\u5e8f\u7684\u7ed3\u6784\u4e2d\u67e5\u627e\u67d0\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e \u8981\u6c42\u6709\u5e8f <code>sort()</code> \u6392\u5e8f\u5bf9\u8c61\u4e2d\u7684\u5143\u7d20 \u8981\u6c42\u91cd\u8f7d<code>&lt;</code>\u548c<code>&gt;</code>\u8fd0\u7b97\u7b26"},{"location":"coding/dsa/vector-and-list/#_3","title":"\u5411\u91cf","text":"<p>\u5728\u5411\u91cf\u4e2d\uff0c\u6570\u636e\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\u5b58\u50a8\uff0c\u5373\u4e0b\u6807\u76f8\u90bb\u7684\u6570\u636e\u5728\u5185\u5b58\u4e2d\u76f8\u90bb\u3002C/C++\u8bed\u8a00\u4e2d\u7684\u6570\u7ec4\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u89c6\u4e3a\u7b80\u5355\u7684\u5411\u91cf\u3002\u4f46\u6570\u7ec4\u4e0d\u63d0\u4f9b\u63d2\u5165\u3001\u5220\u9664\u7b49\u5177\u4f53\u7684\u64cd\u4f5c\u63a5\u53e3\uff0c\u9700\u8981\u5728\u7a0b\u5e8f\u4ee3\u7801\u4e2d\u624b\u52a8\u5b9e\u73b0\u3002\u5c06\u6570\u7ec4\u5c01\u88c5\u6210\u7c7b\u53ef\u4ee5\u63d0\u4f9b\u66f4\u591a\u7684\u64cd\u4f5c\u63a5\u53e3\uff0c\u5e76\u4e14\u4fdd\u8bc1\u6570\u636e\u88ab\u5408\u6cd5\u5730\u8bbf\u95ee\u53ca\u4fee\u6539\u3002</p> <p>\u5411\u91cf\u662f\u6570\u7ec4\u7684\u62bd\u8c61\u6cdb\u5316\u3001\u652f\u6301\u6240\u6709\u6570\u7ec4\u7684\u529f\u80fd\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u5143\u7d20\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u64cd\u4f5c\u63a5\u53e3\u3002</p> <p>C++\u63d0\u4f9b\u4e86\u6a21\u677f\u7c7b\u7684\u529f\u80fd\u7528\u6765\u9488\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u5143\u7d20\u63d0\u4f9b\u76f8\u540c\u7684\u529f\u80fd\u3002\u5bf9\u4e8e\u67d0\u4e2aADT\uff08\u4ee5\u5411\u91cf\u4e3a\u4f8b\uff09\uff0c\u5176\u5c5e\u6027\u548c\u63a5\u53e3\u7684\u7ec4\u7ec7\u65b9\u5f0f\u53ef\u9075\u5faa\u5982\u4e0b\u89c4\u5219\uff1a</p> <pre><code>template &lt;typename T&gt; class Vector { //\u5411\u91cf\u6a21\u677f\u7c7b\nprivate: Rank _size; int _capacity; T* _elem; //\u89c4\u6a21\u3001\u5bb9\u91cf\u3001\u6570\u636e\u533a\nprotected:\n/* ... \u5185\u90e8\u51fd\u6570 */\npublic:\n/* ... \u6784\u9020\u51fd\u6570 */\n/* ... \u6790\u6784\u51fd\u6570 */\n/* ... \u53ea\u8bfb\u63a5\u53e3 */\n/* ... \u53ef\u5199\u63a5\u53e3 */\n/* ... \u904d\u5386\u63a5\u53e3 */\n};\n</code></pre> <p>\u901a\u8fc7\u5bf9<code>[]</code>\u8fd0\u7b97\u7b26\u8fdb\u884c\u91cd\u8f7d\uff0c\u5411\u91cf\u548c\u5217\u8868\u652f\u6301\u6570\u7ec4\u98ce\u683c\u7684\u8bbf\u95ee\u65b9\u5f0f\u3002</p> <p>\u5177\u4f53\u4ee3\u7801\u53ef\u4ee5\u53c2\u89c1\uff1a</p> \u5411\u91cf\u6a21\u677f\u7c7b\u58f0\u660e <p><pre><code>/******************************************************************************************\n* Data Structures in C++\n* ISBN: 7-302-33064-6 &amp; 7-302-33065-3 &amp; 7-302-29652-2 &amp; 7-302-26883-3\n* Junhui DENG, deng@tsinghua.edu.cn\n* Computer Science &amp; Technology, Tsinghua University\n* Copyright (c) 2003-2020. All rights reserved.\n******************************************************************************************/\n\ntypedef int Rank; //\u79e9\n#define DEFAULT_CAPACITY  3 //\u9ed8\u8ba4\u7684\u521d\u59cb\u5bb9\u91cf\uff08\u5b9e\u9645\u5e94\u7528\u4e2d\u53ef\u8bbe\u7f6e\u4e3a\u66f4\u5927\uff09\n\ntemplate &lt;typename T&gt; class Vector { //\u5411\u91cf\u6a21\u677f\u7c7b\nprotected:\nRank _size; int _capacity;  T* _elem; //\u89c4\u6a21\u3001\u5bb9\u91cf\u3001\u6570\u636e\u533a\nvoid copyFrom ( T const* A, Rank lo, Rank hi ); //\u590d\u5236\u6570\u7ec4\u533a\u95f4A[lo, hi)\nvoid expand(); //\u7a7a\u95f4\u4e0d\u8db3\u65f6\u6269\u5bb9\nvoid shrink(); //\u88c5\u586b\u56e0\u5b50\u8fc7\u5c0f\u65f6\u538b\u7f29\nbool bubble ( Rank lo, Rank hi ); //\u626b\u63cf\u4ea4\u6362\nvoid bubbleSort ( Rank lo, Rank hi ); //\u8d77\u6ce1\u6392\u5e8f\u7b97\u6cd5\nRank max ( Rank lo, Rank hi ); //\u9009\u53d6\u6700\u5927\u5143\u7d20\nvoid selectionSort ( Rank lo, Rank hi ); //\u9009\u62e9\u6392\u5e8f\u7b97\u6cd5\nvoid merge ( Rank lo, Rank mi, Rank hi ); //\u5f52\u5e76\u7b97\u6cd5\nvoid mergeSort ( Rank lo, Rank hi ); //\u5f52\u5e76\u6392\u5e8f\u7b97\u6cd5\nvoid heapSort ( Rank lo, Rank hi ); //\u5806\u6392\u5e8f\uff08\u7a0d\u540e\u7ed3\u5408\u5b8c\u5168\u5806\u8bb2\u89e3\uff09\nRank partition ( Rank lo, Rank hi ); //\u8f74\u70b9\u6784\u9020\u7b97\u6cd5\nvoid quickSort ( Rank lo, Rank hi ); //\u5feb\u901f\u6392\u5e8f\u7b97\u6cd5\nvoid shellSort ( Rank lo, Rank hi ); //\u5e0c\u5c14\u6392\u5e8f\u7b97\u6cd5\npublic:\n// \u6784\u9020\u51fd\u6570\nVector ( int c = DEFAULT_CAPACITY, int s = 0, T v = 0 ) //\u5bb9\u91cf\u4e3ac\u3001\u89c4\u6a21\u4e3as\u3001\u6240\u6709\u5143\u7d20\u521d\u59cb\u4e3av\n{ _elem = new T[_capacity = c]; for ( _size = 0; _size &lt; s; _elem[_size++] = v ); } //s&lt;=c\nVector ( T const* A, Rank n ) { copyFrom ( A, 0, n ); } //\u6570\u7ec4\u6574\u4f53\u590d\u5236\nVector ( T const* A, Rank lo, Rank hi ) { copyFrom ( A, lo, hi ); } //\u533a\u95f4\nVector ( Vector&lt;T&gt; const&amp; V ) { copyFrom ( V._elem, 0, V._size ); } //\u5411\u91cf\u6574\u4f53\u590d\u5236\nVector ( Vector&lt;T&gt; const&amp; V, Rank lo, Rank hi ) { copyFrom ( V._elem, lo, hi ); } //\u533a\u95f4\n// \u6790\u6784\u51fd\u6570\n~Vector() { delete [] _elem; } //\u91ca\u653e\u5185\u90e8\u7a7a\u95f4\n// \u53ea\u8bfb\u8bbf\u95ee\u63a5\u53e3\nRank size() const { return _size; } //\u89c4\u6a21\nbool empty() const { return !_size; } //\u5224\u7a7a\nRank find ( T const&amp; e ) const { return find ( e, 0, _size ); } //\u65e0\u5e8f\u5411\u91cf\u6574\u4f53\u67e5\u627e\nRank find ( T const&amp; e, Rank lo, Rank hi ) const; //\u65e0\u5e8f\u5411\u91cf\u533a\u95f4\u67e5\u627e\nRank search ( T const&amp; e ) const //\u6709\u5e8f\u5411\u91cf\u6574\u4f53\u67e5\u627e\n{ return ( 0 &gt;= _size ) ? -1 : search ( e, 0, _size ); }\nRank search ( T const&amp; e, Rank lo, Rank hi ) const; //\u6709\u5e8f\u5411\u91cf\u533a\u95f4\u67e5\u627e\n// \u53ef\u5199\u8bbf\u95ee\u63a5\u53e3\nT&amp; operator[] ( Rank r ); //\u91cd\u8f7d\u4e0b\u6807\u64cd\u4f5c\u7b26\uff0c\u53ef\u4ee5\u7c7b\u4f3c\u4e8e\u6570\u7ec4\u5f62\u5f0f\u5f15\u7528\u5404\u5143\u7d20\nconst T&amp; operator[] ( Rank r ) const; //\u4ec5\u9650\u4e8e\u505a\u53f3\u503c\u7684\u91cd\u8f7d\u7248\u672c\nVector&lt;T&gt; &amp; operator= ( Vector&lt;T&gt; const&amp; ); //\u91cd\u8f7d\u8d4b\u503c\u64cd\u4f5c\u7b26\uff0c\u4ee5\u4fbf\u76f4\u63a5\u514b\u9686\u5411\u91cf\nT remove ( Rank r ); //\u5220\u9664\u79e9\u4e3ar\u7684\u5143\u7d20\nint remove ( Rank lo, Rank hi ); //\u5220\u9664\u79e9\u5728\u533a\u95f4[lo, hi)\u4e4b\u5185\u7684\u5143\u7d20\nRank insert ( Rank r, T const&amp; e ); //\u63d2\u5165\u5143\u7d20\nRank insert ( T const&amp; e ) { return insert ( _size, e ); } //\u9ed8\u8ba4\u4f5c\u4e3a\u672b\u5143\u7d20\u63d2\u5165\nvoid sort ( Rank lo, Rank hi ); //\u5bf9[lo, hi)\u6392\u5e8f\nvoid sort() { sort ( 0, _size ); } //\u6574\u4f53\u6392\u5e8f\nvoid unsort ( Rank lo, Rank hi ); //\u5bf9[lo, hi)\u7f6e\u4e71\nvoid unsort() { unsort ( 0, _size ); } //\u6574\u4f53\u7f6e\u4e71\nint deduplicate(); //\u65e0\u5e8f\u53bb\u91cd\nint uniquify(); //\u6709\u5e8f\u53bb\u91cd\n// \u904d\u5386\nvoid traverse ( void (* ) ( T&amp; ) ); //\u904d\u5386\uff08\u4f7f\u7528\u51fd\u6570\u6307\u9488\uff0c\u53ea\u8bfb\u6216\u5c40\u90e8\u6027\u4fee\u6539\uff09\ntemplate &lt;typename VST&gt; void traverse ( VST&amp; ); //\u904d\u5386\uff08\u4f7f\u7528\u51fd\u6570\u5bf9\u8c61\uff0c\u53ef\u5168\u5c40\u6027\u4fee\u6539\uff09\n}; //Vector\n</code></pre> Reference</p>"},{"location":"coding/dsa/vector-and-list/#_4","title":"\u63d2\u5165","text":"<p>\u5411\u91cf\u7684\u63d2\u5165\u64cd\u4f5c\u5206\u4e3a\u4e09\u6b65\uff1a</p> <ol> <li>\u68c0\u67e5\u5411\u91cf\u7a7a\u95f4\u4e0e\u8f93\u5165\u4e0b\u6807\u7684\u5408\u6cd5\u6027\uff0c\u5fc5\u8981\u65f6\u6539\u53d8\u5411\u91cf\u7684\u957f\u5ea6\u4ee5\u5bb9\u7eb3\u8be5\u5143\u7d20</li> <li>\u5f53\u8f93\u5165\u4e0b\u6807\u4e0d\u662f\u5411\u91cf\u7684\u672b\u5c3e\u65f6\uff0c\u79fb\u52a8\u5411\u91cf\u4e2d\u7684\u5143\u7d20\uff0c\u5728\u5bf9\u5e94\u4f4d\u7f6e\u817e\u51fa\u7a7a\u95f4</li> <li>\u5c06\u6570\u636e\u5199\u5165\u5411\u91cf\u4e2d</li> </ol> <p>\u5728\u957f\u5ea6\u4e3a\\(n\\)\u7684\u5411\u91cf\u4e2d\u7684\u968f\u673a\u4f4d\u7f6e\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\uff0c\u6539\u53d8\u5411\u91cf\u957f\u5ea6\u6240\u9700\u7684\u65f6\u95f4\u4e3a\\(\\mathcal O(n)\\)\uff0c\u79fb\u52a8\u5143\u7d20\u4ee5\u817e\u51fa\u7a7a\u95f4\u7684\u671f\u671b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\mathcal O(n)\\)\uff0c\u5199\u5165\u6570\u636e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\mathcal O(1)\\)\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\mathcal O(n)\\)</p>"},{"location":"coding/dsa/vector-and-list/#_5","title":"\u53ef\u6269\u5145\u5411\u91cf","text":"<p>\u5411\u91cf\u7684\u7a7a\u95f4\u662f\u6709\u9650\u7684\uff08\u5373\u4e3a\u5411\u91cf\u672c\u8eab\u7684\u957f\u5ea6\uff09\uff0c\u82e5\u5f53\u5411\u91cf\u7a7a\u95f4\u4e0d\u8db3\u65f6\u4e3a\u5411\u91cf\u91cd\u65b0\u5206\u914d\u4e00\u5757\u66f4\u957f\u7684\u5185\u5b58\uff0c\u5c06\u539f\u6570\u636e\u590d\u5236\u5230\u65b0\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\u4ee5\u5b9e\u73b0\u5bb9\u91cf\u7684\u6269\u589e\uff0c\u5219\u5411\u91cf\u7684\u7a7a\u95f4\u53ef\u4ee5\u8fd1\u4f3c\u89c6\u4e3a\u65e0\u9650\u3002\u4e00\u822c\u5b58\u5728\u4e24\u79cd\u6269\u5145\u7b97\u6cd5\uff1a</p> <ul> <li>\u5f53\u5411\u91cf\u7a7a\u95f4\u4e0d\u8db3\u65f6\uff0c\u5411\u91cf\u7a7a\u95f4\u589e\u52a0\u4e00\u4e2a\u5e38\u91cf\\(I\\)</li> <li>\u5f53\u5411\u91cf\u7a7a\u95f4\u4e0d\u8db3\u65f6\uff0c\u5411\u91cf\u7a7a\u95f4\u4e58\u4ee5\u4e00\u5b9a\u500d\u6570\\(k\\)\uff08\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\\(k=2\\)\uff09</li> </ul> <p>\u5bf9\u4e8e\u521d\u59cb\u957f\u5ea6\u4e3a\\(0\\)\u7684\u5411\u91cf\uff0c\u8003\u5bdf\u63d2\u5165\\(n\\gg 2\\)\u4e2a\u5143\u7d20\u4e0b\u4e24\u79cd\u6269\u5145\u7b97\u6cd5\u7684\u8c03\u7528\u6b21\u6570\u3002\u9012\u589e\u7b56\u7565\u4e0b\u63d2\u5165\u7b2c\\(mI+1, (m\\in \\mathbb N)\\)\u4e2a\u5143\u7d20\u65f6\u9700\u8981\u8fdb\u884c\u6269\u5145\uff0c\u603b\u7684\u8c03\u7528\u6b21\u6570\u4e3a\\(\\frac{n}{I}\\)\uff0c\u5373\\(\\mathcal O(n)\\)\u3002\u500d\u589e\u7b56\u7565\u4e0b\u63d2\u5165\u7b2c\\(1, 2, 3, 5\\dots 2^m+1, (m\\in \\mathbb N)\\)\u4e2a\u5143\u7d20\u65f6\u9700\u8981\u8fdb\u884c\u6269\u5145\uff0c\u603b\u7684\u8c03\u7528\u6b21\u6570\u4e3a\\(\\mathcal O(\\log n)\\)\u3002</p> <p>\u590d\u5236\u6570\u636e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\mathcal O(n)\\)\uff0c\u56e0\u6b64\u9012\u589e\u7b56\u7565\u6bcf\u6b21\u6269\u5bb9\u6240\u9700\u7684\u65f6\u95f4\u4e3a\\(0, I, 2I, \\dots\\)\uff0c\u5171\u9700\u8981\u6269\u5bb9\\(\\frac nI\\)\u6b21\uff0c\u6269\u5bb9\u64cd\u4f5c\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\mathcal O(n^2)\\)\u3002\u6bcf\u6b21\u63d2\u5165\u64cd\u4f5c\u5206\u644a\\(\\mathcal O(n)\\)\u3002\u500d\u589e\u7b56\u7565\u6bcf\u6b21\u6269\u5bb9\u6240\u9700\u7684\u65f6\u95f4\u4e3a\\(0, 1, 2, \\dots n\\)\uff0c\u5171\u9700\u8981\u6269\u5bb9\\(\\log n\\)\u6b21\u3002\u6269\u5bb9\u64cd\u4f5c\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\mathcal O(n)\\)\uff0c\u6bcf\u6b21\u63d2\u5165\u64cd\u4f5c\u5206\u644a\\(\\mathcal O(1)\\)\u3002</p> <p>\u4f46\u500d\u589e\u7b56\u7565\u4f1a\u5bfc\u81f4\u66f4\u591a\u7684\u7a7a\u95f4\u6d6a\u8d39\uff0c\u5177\u4f53\u8868\u73b0\u4e3a\u5411\u91cf\u7684\u88c5\u8f7d\u56e0\u5b50\u8f83\u4f4e\u3002\u63d2\u5165\u5927\u91cf\u5143\u7d20\u65f6\uff0c\u500d\u589e\u7b56\u7565\u7684\u88c5\u8f7d\u56e0\u5b50\u53ea\u80fd\u4fdd\u8bc1\\(&gt; 50\\)\uff0c\u800c\u9012\u589e\u7b56\u7565\u7684\u88c5\u8f7d\u56e0\u5b50\u53ef\u4ee5\u4fdd\u8bc1\u5728\\(1\\)\u5de6\u53f3\u3002</p>"},{"location":"coding/dsa/vector-and-list/#_6","title":"\u5220\u9664","text":"<p>\u5411\u91cf\u7684\u5220\u9664\u64cd\u4f5c\u4e3b\u8981\u4e3a\u533a\u95f4\u5220\u9664\u4e0e\u5355\u4e2a\u5143\u7d20\u7684\u5220\u9664\u3002\u5176\u4e2d\u540e\u8005\u53ef\u4ee5\u89c6\u4e3a\u524d\u8005\u7684\u7279\u6b8a\u60c5\u51b5\u3002\u5220\u9664\u64cd\u4f5c\u4e0d\u9700\u8981\u6267\u884c\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u53ea\u9700\u8981\u5c06\u5220\u9664\u533a\u95f4\u540e\u7684\u5143\u7d20\u5411\u524d\u79fb\u52a8\uff0c\u8986\u76d6\u5220\u9664\u533a\u95f4\u5185\u7684\u6570\u636e\u5e76\u66f4\u65b0\u64cd\u4f5c\u7ed3\u675f\u540e\u5411\u91cf\u7684\u957f\u5ea6\u5373\u53ef\u3002\u5bf9\u4e8e\u53ef\u6269\u5145\u5411\u91cf\uff0c\u5220\u9664\u540e\u5e94\u5bf9\u5411\u91cf\u7684\u88c5\u586b\u56e0\u5b50\u8fdb\u884c\u68c0\u67e5\uff0c\u5728\u5fc5\u8981\u65f6\u6536\u7f29\u5411\u91cf\u3002</p> <p>\u5982\u679c\u591a\u6b21\u8c03\u7528\u5220\u9664\u5355\u4e2a\u5143\u7d20\u7684\u63a5\u53e3\u5b9e\u73b0\u533a\u95f4\u5220\u9664\uff0c\u7531\u4e8e\u6bcf\u6b21\u5220\u9664\u90fd\u4f1a\u5bfc\u81f4\u4e00\u6b21\u6570\u636e\u7684\u79fb\u52a8\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\mathcal O(n^2)\\)</p> <p>\u5220\u9664\u64cd\u4f5c\u9700\u8981\u5bf9\u5220\u9664\u4f4d\u7f6e\u7684\u5408\u6cd5\u6027\u8fdb\u884c\u68c0\u9a8c\u3002</p>"},{"location":"coding/dsa/vector-and-list/#_7","title":"\u67e5\u627e","text":"<p>\u65e0\u5e8f\u5411\u91cf\u4e0e\u6709\u5e8f\u5411\u91cf\u7684\u67e5\u627e\u65b9\u6cd5\u4e0d\u540c\uff0c\u6240\u9700\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u4e0d\u540c\u3002\u5177\u4f53\u800c\u8a00\uff0c\u6709\u5e8f\u5411\u91cf\u7684\u987a\u5e8f\u63d0\u4f9b\u4e86\u989d\u5916\u7684\u4fe1\u606f\uff0c\u4ece\u800c\u4f7f\u5f97\u6709\u5e8f\u5411\u91cf\u4e2d\u7684\u67e5\u627e\u64cd\u4f5c\u80fd\u591f\u5728\\(\\log n\\)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5b8c\u6210\u3002</p>"},{"location":"coding/dsa/vector-and-list/#_8","title":"\u987a\u5e8f\u67e5\u627e","text":"<p>\u987a\u5e8f\u67e5\u627e\u64cd\u4f5c\u5047\u8bbe\u5411\u91cf\u4e2d\u7684\u5143\u7d20\u7c7b\u578b\u5b9a\u4e49\u4e86<code>==</code>\u8fd0\u7b97\u7b26\u4e0e<code>!=</code>\u8fd0\u7b97\u7b26\u3002</p> <p>\u65e0\u5e8f\u5411\u91cf\u67e5\u627e\u53ea\u9700\u8981\u4ece\u5411\u91cf\u7684\u5f00\u5934\u4f9d\u6b21\u5bf9\u6bd4\u5411\u91cf\u4e2d\u7684\u5143\u7d20\u4e0e\u5f85\u67e5\u5143\u7d20\uff0c\u5f53\u5143\u7d20\u76f8\u540c\u65f6\u8fd4\u56de\u5373\u53ef\u3002\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\mathcal O(n)\\)</p>"},{"location":"coding/dsa/vector-and-list/#_9","title":"\u4e8c\u5206\u67e5\u627e","text":"<p>\u6709\u5e8f\u5411\u91cf\u7684\u67e5\u627e\u64cd\u4f5c\u5047\u8bbe\u5411\u91cf\u4e2d\u7684\u5143\u7d20\u7c7b\u578b\u5b9a\u4e49\u7c7b<code>==</code>\u8fd0\u7b97\u7b26\u3001<code>!=</code>\u8fd0\u7b97\u7b26\uff0c\u56e0\u6b64\u6709\u5e8f\u5411\u91cf\u53ef\u4ee5\u6309\u7167\u65e0\u5e8f\u5411\u91cf\u7684\u67e5\u627e\u65b9\u6cd5\u7ebf\u6027\u67e5\u627e\u3002\u82e5\u6709\u5e8f\u5411\u91cf\u7684\u5143\u7d20\u7c7b\u578b\u5b9a\u4e49\u4e86\u6bd4\u8f83\u8fd0\u7b97\u7b26<code>&lt;</code>\u4e0e<code>&gt;</code>\uff0c\u5219\u57fa\u4e8e\u6bd4\u8f83\u7684\u4e8c\u5206\u67e5\u627e\u53ef\u4ee5\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u81f3\\(\\mathcal O(\\log n)\\)\u3002</p> <p>\u51cf\u800c\u6cbb\u4e4b\u662f\u4e8c\u5206\u67e5\u627e\u7684\u6838\u5fc3\u601d\u60f3\u3002\u8003\u8651\u66f4\u4e00\u822c\u7684\u901a\u7528\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u957f\u5ea6\u4e3a\\(n\\)\u7684\u6570\u7ec4\uff0c\u5728\\(\\lambda \\cdot n (0\\leq \\lambda\\leq 1)\\)\u5904\u8bbe\u4e3a\u8f74\u70b9\u3002\u6bcf\u6b21\u6bd4\u8f83\u5f53\u524d\u5f85\u67e5\u533a\u95f4\u7684\u8f74\u70b9\\(B\\)\u4e0e\u5f85\u67e5\u5143\u7d20\\(A\\)\u3002\u6bcf\u4e00\u6b21\u5bf9\u8f74\u70b9\u7684\u6bd4\u8f83\u6709\u4e09\u79cd\u53ef\u80fd\u7684\u7ed3\u679c\uff0c\u5047\u8bbe\u5411\u91cf\u4e2d\u7684\u5143\u7d20\u6309\u7167\u5347\u5e8f\u6392\u5e8f\uff0c\u5219\uff1a</p> <ul> <li>\\(A&lt;B\\)\uff0c\u8868\u793a\u5f85\u67e5\u5143\u7d20\u53ea\u53ef\u80fd\u51fa\u73b0\u5728\u8f74\u70b9\u5de6\u4fa7\uff0c\u5c06\u5f85\u67e5\u533a\u95f4\u7f29\u5c0f\u81f3\u5de6\u534a\u90e8\u5206\uff0c\u7ee7\u7eed\u67e5\u627e\u8fc7\u7a0b\uff1b</li> <li>\\(A=B\\)\uff0c\u8868\u793a\u8f74\u70b9\u5904\u51fa\u73b0\u5f85\u67e5\u5143\u7d20\uff0c\u76f4\u63a5\u8fd4\u56de\u4e2d\u70b9\u7684\u4e0b\u6807\u5373\u53ef\uff1b</li> <li>\\(B&lt;A\\)\uff0c\u8868\u793a\u5f85\u67e5\u5143\u7d20\u53ea\u53ef\u80fd\u51fa\u73b0\u5728\u8f74\u70b9\u53f3\u4fa7\uff0c\u5c06\u5f85\u67e5\u533a\u95f4\u7f29\u5c0f\u81f3\u53f3\u534a\u90e8\u5206\uff0c\u7ee7\u7eed\u67e5\u627e\u8fc7\u7a0b\u3002</li> </ul> <p>\u5bf9\u4e8e\u4e8c\u5206\u67e5\u627e\uff0c\u8f74\u70b9\u4e3a\u5f85\u67e5\u533a\u95f4\u7684\u4e2d\u70b9\uff0c\u5373\\(\\lambda = 0.5\\)\u3002</p> <p>1234567891011</p> <p>\u4f46\u8be5\u7248\u672c\u7684\u4e8c\u5206\u67e5\u627e\u6709\u591a\u79cd\u610f\u5916\u60c5\u5f62\uff0c\u5982\uff1a</p> <ol> <li>\u5411\u91cf\u4e2d\u627e\u4e0d\u5230\u5f85\u67e5\u5143\u7d20\uff1b</li> <li>\u5411\u91cf\u4e2d\u5f85\u67e5\u5143\u7d20\u5b58\u5728\u591a\u4e2a\u3002</li> </ol> <p>\u6b64\u65f6\u51fd\u6570\u8fd4\u56de\u7684\u7ed3\u679c\u4e0d\u4e00\u5b9a\u552f\u4e00\u3002\u7ea6\u5b9a\u4e8c\u5206\u67e5\u627e\u7b97\u6cd5\u8fd4\u56de\u4e0d\u5927\u4e8e\u5f85\u67e5\u5143\u7d20\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\u3002</p> <p>\u4e8c\u5206\u67e5\u627e\u901a\u8fc7\u5c3d\u53ef\u80fd\u51cf\u5c11\u9012\u5f52\u6df1\u5ea6\u7684\u65b9\u5f0f\u51cf\u5c11\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u7531\u6b64\uff0c\u6bcf\u4e00\u6b21\u9012\u5f52\u7684\u4e0d\u540c\u5206\u652f\u5e94\u6709\u76f8\u540c\u7684\u671f\u671b\u65f6\u95f4\u6d88\u8017\uff08\u5373\u8f6c\u5411\u6210\u672c\uff09\u3002\u6b64\u5904\u7684\u201c\u4e8c\u5206\u201d\u53ea\u662f\u5728\u6570\u7ec4\u533a\u95f4\u7684\u610f\u4e49\u4e0a\u4e8c\u7b49\u5206\uff0c\u82e5\u5bf9\u4e8e\u5982\u4e0b\u6761\u4ef6\u8bed\u53e5\uff1a</p> <pre><code>if (A &gt; B)\n// statement\nelse if (A &lt; B)\n// statement\nelse\n// statement\n</code></pre> <p>\u5de6\u53f3\u4e24\u4e2a\u8df3\u8f6c\u4f4d\u4e8e\u4e0d\u540c\u7684\u5206\u652f\uff0c\u9700\u8981\u8fdb\u884c\u6bd4\u8f83\u7684\u6b21\u6570\u4e0d\u540c\uff0c\u56e0\u6b64\u6240\u9700\u7684\u65f6\u95f4\u5728\u4e25\u683c\u610f\u4e49\u4e0a\u662f\u4e0d\u540c\u7684\u3002\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8\u8f74\u70b9\u4f4d\u7f6e\uff0c\u5c06\u540c\u4e00\u9012\u5f52\u6df1\u5ea6\u4e0b\u6bd4\u8f83\u7684\u671f\u671b\u6b21\u6570\u8c03\u6574\u4e3a\u76f8\u540c\uff0c\u4ece\u800c\u964d\u4f4e\u5e73\u5747\u67e5\u627e\u957f\u5ea6\uff0c\u5728\u5e38\u7cfb\u6570\u7a0b\u5ea6\u4e0a\u5bf9\u7b97\u6cd5\u8fdb\u884c\u4f18\u5316\u3002</p> <p>+1+2n\u03bbn(1 -\u03bb)\u00b7n</p> <p>\u8bbe\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\alpha(\\lambda) \\log n\\)\uff0c\u5219\uff1a</p> <ul> <li>\u5de6\u4fa7\u5b50\u95ee\u9898\u6d88\u8017\u7684\u65f6\u95f4\u7b49\u4e8e\u5224\u65ad\u6d88\u8017\u7684\u65f6\u95f4\u53ca\u89e3\u51b3\u5b50\u95ee\u9898\u6d88\u8017\u7684\u65f6\u95f4\uff0c\u5373\uff1a\\(\\lambda (1 + \\alpha(\\lambda)  \\log (\\lambda n))\\)</li> <li>\u540c\u7406\uff0c\u53f3\u4fa7\u5b50\u95ee\u9898\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\((1 - \\lambda)(2+\\alpha(\\lambda)\\log((1-\\lambda)n))\\)</li> </ul> <p>\u5f97\\(\\alpha(\\lambda) = \\frac{\\ln 2(\\lambda - 2)}{\\lambda \\cdot\\ln\\lambda+(1-\\lambda)\\cdot\\ln(1-\\lambda)}\\)</p> <p>\u5f53\\(\\lambda=\\frac{\\sqrt 5-1}{2}\\approx 0.618\\)\u65f6\uff0c\\(\\alpha(\\lambda)\\)\u53d6\u6700\u5c0f\u503c\u3002</p> <p>\u6d88\u9664\u4e0d\u5bf9\u79f0\u7684\u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u5c06\u4e09\u79cd\u6bd4\u8f83\u7ed3\u679c\u53d8\u4e3a\u4e24\u79cd\uff0c\u4ece\u800c\u4e00\u6b21\u6bd4\u8f83\u5373\u53ef\u8fdb\u884c\u5212\u5206\u3002\u8bb0\u5f85\u67e5\u5143\u7d20\u4e3a\\(A\\)\uff0c\u8f74\u70b9\u4e3a\\(B\\)\uff0c\u5219\uff1a</p> <ul> <li>\\(A&lt;B\\)\uff1a\u5728\u8f74\u70b9\u5de6\u4fa7\u7684\u533a\u95f4\u4e2d\u67e5\u627e</li> <li>\\(A\\geq B\\)\uff1a\u5728\u8f74\u70b9\u53f3\u4fa7 \uff08\u5305\u542b\u8f74\u70b9\uff09 \u7684\u533a\u95f4\u4e2d\u67e5\u627e</li> <li>\u5f53\u533a\u95f4\u957f\u5ea6\u7f29\u51cf\u4e3a1\u65f6\uff0c\u8868\u793a\u67e5\u627e\u8fc7\u7a0b\u7ed3\u675f\u3002</li> </ul> <p>\u4e8c\u5206\u67e5\u627e\u7684\u6700\u7ec8\u5b9e\u73b0\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a</p> \u4e8c\u5206\u67e5\u627e <p><pre><code>/******************************************************************************************\n* Data Structures in C++\n* ISBN: 7-302-33064-6 &amp; 7-302-33065-3 &amp; 7-302-29652-2 &amp; 7-302-26883-3\n* Junhui DENG, deng@tsinghua.edu.cn\n* Computer Science &amp; Technology, Tsinghua University\n* Copyright (c) 2003-2020. All rights reserved.\n******************************************************************************************/\n\n// \u4e8c\u5206\u67e5\u627e\u7b97\u6cd5\uff08\u7248\u672cC\uff09\uff1a\u5728\u6709\u5e8f\u5411\u91cf\u7684\u533a\u95f4[lo, hi)\u5185\u67e5\u627e\u5143\u7d20e\uff0c0 &lt;= lo &lt;= hi &lt;= _size\ntemplate &lt;typename T&gt; static Rank binSearch ( T* S, T const&amp; e, Rank lo, Rank hi ) {\nwhile ( lo &lt; hi ) { //\u6bcf\u6b65\u8fed\u4ee3\u4ec5\u9700\u505a\u4e00\u6b21\u6bd4\u8f83\u5224\u65ad\uff0c\u6709\u4e24\u4e2a\u5206\u652f\nRank mi = ( lo + hi ) &gt;&gt; 1; //\u4ee5\u4e2d\u70b9\u4e3a\u8f74\u70b9\uff08\u533a\u95f4\u5bbd\u5ea6\u7684\u6298\u534a\uff0c\u7b49\u6548\u4e8e\u5bbd\u5ea6\u4e4b\u6570\u503c\u8868\u793a\u7684\u53f3\u79fb\uff09\n( e &lt; S[mi] ) ? hi = mi : lo = mi + 1; //\u7ecf\u6bd4\u8f83\u540e\u786e\u5b9a\u6df1\u5165[lo, mi)\u6216(mi, hi)\n} //\u6210\u529f\u67e5\u627e\u4e0d\u80fd\u63d0\u524d\u7ec8\u6b62\nreturn lo - 1; //\u5faa\u73af\u7ed3\u675f\u65f6\uff0clo\u4e3a\u5927\u4e8ee\u7684\u5143\u7d20\u7684\u6700\u5c0f\u79e9\uff0c\u6545lo - 1\u5373\u4e0d\u5927\u4e8ee\u7684\u5143\u7d20\u7684\u6700\u5927\u79e9\n} //\u6709\u591a\u4e2a\u547d\u4e2d\u5143\u7d20\u65f6\uff0c\u603b\u80fd\u4fdd\u8bc1\u8fd4\u56de\u79e9\u6700\u5927\u8005\uff1b\u67e5\u627e\u5931\u8d25\u65f6\uff0c\u80fd\u591f\u8fd4\u56de\u5931\u8d25\u7684\u4f4d\u7f6e\n</code></pre> Reference</p>"},{"location":"coding/dsa/vector-and-list/#_10","title":"\u63d2\u503c\u67e5\u627e","text":"<p>\u5047\u8bbe\u533a\u95f4\u5185\u5143\u7d20\u5206\u5e03\u7684\u89c4\u5f8b\u5df2\u77e5\uff0c\u6839\u636e\u5f85\u67e5\u5143\u7d20\u5728\u8be5\u5206\u5e03\u4e2d\u7684\u4f4d\u7f6e\u63a8\u65ad\u5f85\u67e5\u5143\u7d20\u5728\u533a\u95f4\u7684\u4f4d\u7f6e\uff0c\u4ee5\u6b64\u786e\u5b9a\u5212\u5206\u7684\u8f74\u70b9\u4f4d\u7f6e\u3002</p> <p>\u5047\u8bbe\u533a\u95f4\u5185\u5143\u7d20\u670d\u4ece\u72ec\u7acb\u7684\u5e73\u5747\u5206\u5e03\uff0c\u5219\u6bcf\u6b21\u67e5\u627e\u5e73\u5747\u4f7f\u5f97\u533a\u95f4\u7f29\u51cf\u81f3\u539f\u6765\u7684\\(\\sqrt n\\)\uff0c\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\mathcal O(\\log\\log n)\\)\u3002</p>"},{"location":"coding/dsa/vector-and-list/#_11","title":"\u53bb\u91cd","text":"<p>\u5bf9\u4e8e\u6709\u5e8f\u5411\u91cf\uff0c\u53bb\u91cd\u64cd\u4f5c\u53ef\u4ee5\u5728\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5b8c\u6210\uff0c\u65e0\u5e8f\u5411\u91cf\u53bb\u91cd\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\mathcal O(n^2)\\)</p>"},{"location":"coding/dsa/vector-and-list/#_12","title":"\u65e0\u5e8f\u5411\u91cf","text":"<p>\u4f7f\u7528\u6307\u9488\u6807\u8bb0\u65e0\u5e8f\u5411\u91cf\u5df2\u7ecf\u5b8c\u6210\u53bb\u91cd\u7684\u90e8\u5206\u3002\u5bf9\u4e8e\u65e0\u5e8f\u5411\u91cf\u672a\u53bb\u91cd\u90e8\u5206\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u5728\u672a\u53bb\u91cd\u90e8\u5206\u7684\u540e\u534a\u90e8\u5206\u4e2d\u67e5\u627e\u662f\u5426\u5b58\u5728\u76f8\u540c\u7684\u5143\u7d20\uff0c\u5982\u679c\u627e\u5230\u76f8\u540c\u7684\u5143\u7d20\u5219\u5220\u9664\u3002\u5b8c\u6210\u67e5\u627e\u540e\u6307\u9488\u540e\u79fb\uff0c\u5c06\u5f53\u524d\u5143\u7d20\u6807\u8bb0\u4e3a\u5df2\u7ecf\u5b8c\u6210\u53bb\u91cd\u3002</p>"},{"location":"coding/dsa/vector-and-list/#_13","title":"\u6709\u5e8f\u5411\u91cf","text":"<p>\u4f7f\u7528\u53cc\u6307\u9488\u7b97\u6cd5\uff0c\u4e00\u4e2a\u6307\u9488\\(P\\)\u6807\u8bb0\u5df2\u53bb\u91cd\u90e8\u5206\u7684\u7ed3\u5c3e\uff0c\u53e6\u4e00\u4e2a\u6307\u9488\\(Q\\)\u6807\u8bb0\u672a\u53bb\u91cd\u90e8\u5206\u7684\u5f00\u5934\uff0c\u521d\u59cb\u60c5\u51b5\u4e0b\uff0c\\(P\\)\u4f4d\u4e8e\u5411\u91cf\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e14\\(P+1=Q\\)\u3002\u5f53\\(P\\)\u6307\u5411\u7684\u5bf9\u8c61\u4e0e\\(Q\\)\u6307\u5411\u7684\u5bf9\u8c61\u76f8\u540c\u65f6\uff0c\\(Q\\)\u9012\u589e\u800c\\(P\\)\u4e0d\u79fb\u52a8\uff0c\u5426\u5219\u5c06\\(Q\\)\u5904\u7684\u5143\u7d20\u590d\u5236\u5230\\(P+1\\)\u5904\uff0c\u4e24\u6307\u9488\u540c\u65f6\u9012\u589e\u3002</p> <p> 33355558815333555588153355555881535555588815355558881515 </p>"},{"location":"coding/dsa/vector-and-list/#_14","title":"\u6392\u5e8f","text":"<p>\u6b64\u5904\u4ecb\u7ecd\u5bf9\u5411\u91cf\u7684\u5192\u6ce1\u6392\u5e8f\u4e0e\u5f52\u5e76\u6392\u5e8f\uff0c\u5176\u4ed6\u6392\u5e8f\u65b9\u5f0f\u5c06\u5728\u4ee5\u540e\u8fdb\u884c\u4ecb\u7ecd\u3002</p>"},{"location":"coding/dsa/vector-and-list/#_15","title":"\u5192\u6ce1\u6392\u5e8f","text":"<p>\u5bf9\u4e8e\u6570\u5217\\(\\{a_1, \\cdots, a_n\\}\\)\uff0c\u82e5\\(a_i&gt;a_{i+1}\\)\uff0c\u79f0\\((a_i, a_{i+1})\\)\u4e3a\u4e00\u5bf9\u9006\u5e8f\u5bf9\u3002\u5426\u5219\u79f0\u4e3a\u987a\u5e8f\u5bf9\u3002\u5219\u6709\u5e8f\u6570\u5217\u4e2d\u4e0d\u5b58\u5728\u9006\u5e8f\u5bf9\uff0c\u65e0\u5e8f\u6570\u5217\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u9006\u5e8f\u5bf9\u3002\u5982\u679c\u80fd\u591f\u901a\u8fc7\u9006\u5e8f\u5bf9\u7684\u4ea4\u6362\u4f7f\u5f97\u6570\u5217\u4e2d\u6240\u6709\u7684\u9006\u5e8f\u5bf9\u8f6c\u4e3a\u987a\u5e8f\uff0c\u5373\u53ef\u5b8c\u6210\u5bf9\u6570\u7ec4\u7684\u6392\u5e8f\u3002\u8fd9\u662f\u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\u3002</p> <ol> <li>\u8bbe\u5411\u91cf\uff08\u6570\u7ec4\uff09\u957f\u5ea6\u4e3a\\(n\\)\uff0c\u5f85\u6392\u5e8f\u533a\u6bb5\u4e0b\u6807\u4e3a\\([0,n)\\)</li> <li>\u6bcf\u4e00\u6b21\u626b\u63cf\u5f85\u6392\u5e8f\u533a\u6bb5\u4e2d\u7684\u76f8\u90bb\u6570\u636e\uff0c\u82e5\u4e3a\u9006\u5e8f\u5bf9\u5219\u4ea4\u6362\u4e4b</li> <li>\u626b\u63cf\u7ed3\u675f\u540e\uff0c\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u5143\u7d20\u79fb\u52a8\u5230\u5f85\u6392\u5e8f\u533a\u6bb5\u672b\u5c3e\uff0c\u5373\u4e3a\u5df2\u6392\u5e8f</li> <li>\u4e00\u8d9f\u626b\u63cf\u540e\u5c06\u5f85\u6392\u5e8f\u533a\u6bb5\u672b\u5c3e\u5143\u7d20\u5212\u5165\u5df2\u6392\u5e8f\u533a\u6bb5\u3002</li> <li>\u91cd\u590d\u626b\u63cf\uff0c\u76f4\u5230\u5f85\u6392\u5e8f\u533a\u6bb5\u957f\u5ea6\u7f29\u5c0f\u4e3a0\uff0c\u5373\u5b8c\u6210\u6392\u5e8f\u3002</li> </ol> <p>\u63d0\u524d\u7ec8\u6b62\uff1a\u82e5\u67d0\u6b21\u626b\u63cf\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u53d1\u751f\u4ea4\u6362\uff0c\u8bf4\u660e\u5f85\u6392\u5e8f\u533a\u6bb5\u5df2\u7ecf\u6709\u5e8f\uff0c\u53ef\u4ee5\u63d0\u524d\u7ed3\u675f\u7b97\u6cd5</p> <p>\u7531\u4e8e\u63d0\u524d\u7ec8\u6b62\u7684\u5b58\u5728\uff0c\u5192\u6ce1\u6392\u5e8f\u5728\u6700\u597d\u60c5\u51b5\u4e0b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\mathcal O(n)\\)\uff0c\u5bf9\u5e94\u8f93\u5165\u6570\u636e\u5df2\u7ecf\u6709\u5e8f\u7684\u60c5\u51b5\u3002\u5e73\u5747\u60c5\u51b5\u4e0b\u5192\u6ce1\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\mathcal O(n^2)\\)\u3002</p> <p>\u5728\u5192\u6ce1\u6392\u5e8f\u4e2d\uff0c\u76f8\u7b49\u7684\u5143\u7d20\u4e0d\u88ab\u89c6\u4e3a\u9006\u5e8f\u5bf9\u3002\u5982\u679c\u5c06\u76f8\u7b49\u7684\u5143\u7d20\u89c6\u4e3a\u9006\u5e8f\u5bf9\uff0c\u5192\u6ce1\u6392\u5e8f\u5c06\u5931\u53bb\u7a33\u5b9a\u6027\u3002</p>"},{"location":"coding/dsa/vector-and-list/#_16","title":"\u5f52\u5e76\u6392\u5e8f","text":"<p>\u5f52\u5e76\u6392\u5e8f\u91c7\u7528\u5206\u800c\u6cbb\u4e4b\u7684\u65b9\u6cd5\u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u5176\u6838\u5fc3\u601d\u60f3\u662f\u9012\u5f52\u3002\u5f52\u5e76\u6392\u5e8f\u7684\u7b97\u6cd5\u8fc7\u7a0b\u4e3b\u8981\u5206\u4e3a\u4e09\u6b65\uff1a</p> <ul> <li>\u201c\u5206\u201d\uff1a\u5c06\u5411\u91cf\u5212\u5206\u4e3a\u4e24\u4e2a\uff08\u8fd1\u4f3c\uff09\u7b49\u957f\u7684\u90e8\u5206\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\mathcal O(1)\\)</li> <li>\u201c\u6cbb\u201d\uff1a\u5bf9\u4e24\u90e8\u5206\u5206\u522b\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f\uff08\u5df2\u77e5\u957f\u5ea6\u4e3a\\(1\\)\u7684\u5411\u91cf\u662f\u6709\u5e8f\u5411\u91cf\uff09\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(2\\times T(n/2)\\)</li> <li>\u201c\u5408\u201d\uff1a\u5c06\u6392\u5e8f\u540e\u7684\u4e24\u90e8\u5206\u5408\u5e76\u4e3a\u4e00\u4e2a\u6709\u5e8f\u7684\u6574\u4f53\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\mathcal O(n)\\)</li> <li>\u7b97\u6cd5\u6574\u4f53\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\mathcal O(n\\log n)\\)\uff0c\u5373\u4f7f\u662f\u5728\u8f93\u5165\u6570\u7ec4\u6709\u5e8f\u6216\u63a5\u8fd1\u6709\u5e8f\u7684\u60c5\u51b5\u4e0b\u3002\u5f52\u5e76\u8fc7\u7a0b\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\mathcal O(n)\\)</li> </ul> \u5f52\u5e76\u6392\u5e8f <p><pre><code>template &lt;typename T&gt; void Vector&lt;T&gt;::mergeSort( Rank lo, Rank hi ) {\nif ( hi - lo &lt; 2 ) return; //\u5355\u5143\u7d20\u533a\u95f4\u81ea\u7136\u6709\u5e8f\uff0c\u5426\u5219...\nint mi = (lo + hi) &gt;&gt; 1; //\u4ee5\u4e2d\u70b9\u4e3a\u754c\nmergeSort( lo, mi ); //\u5bf9\u524d\u534a\u6bb5\u6392\u5e8f\nmergeSort( mi, hi ); //\u5bf9\u540e\u534a\u6bb5\u6392\u5e8f\nmerge( lo, mi, hi ); //\u5f52\u5e76\n}\n</code></pre> Reference</p> <p>\u5f52\u5e76\u8fc7\u7a0b\u7684\u6838\u5fc3\u601d\u60f3\u5373\u6309\u987a\u5e8f\u904d\u5386\u4e24\u90e8\u5206\uff0c\u5c06\u6700\u5c0f\u7684\u5199\u5165\u76ee\u6807\u6570\u7ec4\u4e2d\u3002</p> <p> </p> <p>\u5b9e\u9645\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u53ea\u9700\u5c06\u6570\u7ec4\u7684\u524d\u534a\u90e8\u5206\u590d\u5236\u4e00\u4efd\uff0c\u7136\u540e\u8fdb\u884c\u5408\u5e76\u5373\u53ef\u3002</p> <ul> <li>\u82e5\u524d\u534a\u90e8\u5206\u63d0\u524d\u7ed3\u675f\uff0c\u7531\u4e8e\u76ee\u6807\u6570\u7ec4\u7684\u540e\u534a\u90e8\u5206\u4e0e\u539f\u6570\u7ec4\u7684\u540e\u534a\u90e8\u5206\u91cd\u5408\uff0c\u76ee\u6807\u6570\u7ec4\u81ea\u52a8\u6210\u4e3a\u6709\u5e8f</li> <li>\u82e5\u540e\u534a\u90e8\u5206\u63d0\u524d\u7ed3\u675f\uff0c\u5c06\u524d\u534a\u90e8\u5206\u5269\u4f59\u7684\u6570\u636e\u590d\u5236\u5230\u76ee\u6807\u6570\u7ec4\u540e\u534a\u90e8\u5206\u5bf9\u5e94\u4f4d\u7f6e\u5373\u53ef</li> </ul> <p>\u5982\u4e0b\u56fe\uff1a</p> <p> </p> <p>\u82e5\u5728\u5f52\u5e76\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u76f8\u540c\u5143\u7d20\uff0c\u5de6\u4fa7\u7684\u5143\u7d20\u4f18\u5148\u5f52\u5165\u76ee\u6807\u6570\u7ec4\uff0c\u5219\u53ef\u4ee5\u4fdd\u8bc1\u5f52\u5e76\u6392\u5e8f\u7684\u7a33\u5b9a\u6027\u3002</p>"},{"location":"coding/dsa/vector-and-list/#_17","title":"\u4f4d\u56fe","text":"<p>\u4f4d\u56fe\u662f\u5176\u4e2d\u5143\u7d20\u53ea\u80fd\u53d60/1\u7684\u5411\u91cf\u3002\u5bf9\u4e8e\u4e00\u4e2a\u6709\u9650\u7684\u6574\u6570\u96c6\u5408\\(U\\)\uff0c\u4f4d\u56fe\u6784\u5efa\u4e86\\(U\\)\u7684\u5b50\u96c6\\(S\\)\uff0c\u5176\u4e2d\\(k\\in S\\)\u7b49\u4ef7\u4e8e\u4f4d\u56fe\u4e2d\u4e0b\u6807\u4e3a\\(k\\)\u7684\u5143\u7d20\u7684\u53d6\u503c\u4e3a\\(1\\)\u3002\u4f4d\u56fe\u63d0\u4f9b\u4e86<code>set()</code>\u3001<code>get()</code>\u3001<code>clear()</code>\u4e09\u4e2a\u63a5\u53e3\uff0c\u5206\u522b\u5bf9\u5e94\u4e8e\u4f4d\u56fe\u7684\u5199\u5165\u3001\u67e5\u8be2\u3001\u6e05\u9664\u64cd\u4f5c\u3002</p> <p>byte11010011</p> <p>\u57fa\u4e8e\u4f4d\u8fd0\u7b97\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a</p> \u4f4d\u56fe\u65b9\u6cd5\u5b9e\u73b0 <p><pre><code>bool test( int k ) { return M[ k &gt;&gt; 3 ] &amp; ( 0x80 &gt;&gt; (k &amp; 0x07) ); }\nvoid set( int k ) { expand( k ); M[ k &gt;&gt; 3 ] |= ( 0x80 &gt;&gt; (k &amp; 0x07) ); }\nvoid clear( int k ) { expand( k ); M[ k &gt;&gt; 3 ] &amp;= ~( 0x80 &gt;&gt; (k &amp; 0x07) ); }\n</code></pre> Reference</p> <p>\u8bfb\u53d6\u5b57\u8282\u4e2d\u7684\u67d0\u4e2a\u4f4d\u53ef\u4ee5\u4f7f\u7528<code>&amp;</code>\u8fd0\u7b97\u7b26\u5b9e\u73b0\uff0c\u5411\u5b57\u8282\u4e2d\u8bbe\u7f6e\u67d0\u4e2a\u4f4d\u4e3a\\(1\\)\u53ef\u4ee5\u4f7f\u7528<code>|=</code>\u8fd0\u7b97\u7b26\u5b9e\u73b0\u3002</p> <p>\u4f4d\u56fe\u7684\u5e94\u7528\u573a\u666f\uff1a</p> <ol> <li>\u6574\u6570\u6570\u7ec4\u53bb\u91cd\u64cd\u4f5c\uff0c\u501f\u52a9\u4f4d\u56fe\u53ef\u4ee5\u5728\\(O(n)\\)\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5b8c\u6210\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u5b8c\u6210\u76f8\u5e94\u7684\u6392\u5e8f\u64cd\u4f5c\u3002</li> <li>\u8d28\u6570\u8ba1\u7b97\uff1aEratosthenes\u7b5b</li> </ol>"},{"location":"coding/dsa/vector-and-list/#_18","title":"\u5feb\u901f\u521d\u59cb\u5316","text":"<p>\u5728\u4e25\u683c\u610f\u4e49\u4e0a\u8bb2\uff0c\u5373\u4f7f\u8c03\u7528<code>memset()</code>\u51fd\u6570\uff0c\u4f4d\u56fe\u7684\u521d\u59cb\u5316\uff08\u6e05\u7a7a\uff09\u4e5f\u9700\u8981\\(\\mathcal O(n)\\)\u7684\u65f6\u95f4\u3002\u501f\u52a9\u6821\u9a8c\u73af\u7ed3\u6784\u53ef\u4ee5\u5c06\u4f4d\u56fe\u7684\u521d\u59cb\u5316\u590d\u6742\u5ea6\u7531\\(\\mathcal O(n)\\)\u63d0\u9ad8\u5230\\(\\mathcal O(1)\\)\uff08\u4f46\u76f8\u5e94\u5730\uff0c\u4f4d\u56fe\u4e2d\u7684\u4e00\u4e2a\u4f4d\u9700\u8981\u4e24\u4e2a<code>int</code>\u7c7b\u578b\u537364\u5b57\u8282\u8fdb\u884c\u5b58\u50a8\uff0c\u9020\u6210\u7a7a\u95f4\u7684\u5927\u91cf\u6d6a\u8d39\uff09\u3002</p> <p>\u5c06\u4f4d\u56fe\u7684\u6570\u7ec4\u62c6\u5206\u4e3a<code>A[]</code>\u3001<code>B[]</code>\u4e24\u4e2a\u6570\u7ec4\uff0c\u5bf9\u4e8e\u7b2c<code>k</code>\u4f4d\uff0c\u6ee1\u8db3\uff1a</p> <ul> <li><code>A[B[k]] = k</code></li> <li><code>B[A[k]] = k</code></li> </ul> <p>\u4e24\u4e2a\u6570\u7ec4\u6784\u6210\u4e86\u76f8\u4e92\u6821\u9a8c\u7684\u5173\u7cfb\uff0c\u6309\u7167\u4e0b\u6807\u67e5\u8be2\uff0c\u7b26\u5408\u6821\u9a8c\u6761\u4ef6\u7684\u4e0b\u6807\u5b58\u50a8\u7684\u4f4d\u4e3a<code>1</code>\uff0c\u5426\u5219\u4e3a<code>0</code>\u3002</p> <p> 0AB0112512234567</p> <p>\u53cc\u6570\u7ec4\u6a21\u5f0f\u4e0b\uff0c\u6570\u7ec4<code>B</code>\u4e3a\u7c7b\u4f3c\u4e8e\u6808\u7684\u7ed3\u6784\uff0c\u4ece\u5f00\u5934\u9010\u6e10\u5411\u540e\u5ef6\u4f38\uff0c\u7ef4\u62a4\u4e00\u4e2a\u53d8\u91cf<code>top</code>\u8bb0\u5f55<code>B</code>\u4e2d\u5143\u7d20\u7684\u6570\u91cf\u3002\u6570\u7ec4<code>A</code>\u968f\u673a\u8bbf\u95ee\u3002</p> <ul> <li><code>set(k)</code>\uff1a\u5728\u6570\u7ec4<code>B</code>\u4e2d\u8ffd\u52a0\u4e00\u4e2a\u503c\u4e3a<code>k</code>\u7684\u5143\u7d20\uff0c\u5728<code>A[k]</code>\u4e2d\u5b58\u50a8<code>B</code>\u4e2d\u5bf9\u5e94\u5143\u7d20\u7684\u4e0b\u6807\uff1b</li> <li><code>get(k)</code>\uff1a\u82e5<code>B[A[k]] == k</code>\u4e14<code>A[k]</code>\u5c0f\u4e8e\u6808\u9876\u4f4d\u7f6e\u5219\u4e3a\u771f\uff0c\u5426\u5219\u4e3a\u5047\uff1b</li> <li><code>clear()</code>\uff1a\u6e05\u7a7a\u6570\u7ec4<code>B</code>\uff0c\u5373\u5c06<code>top</code>\u7f6e<code>0</code>\u3002</li> <li><code>remove(k)</code>\uff1a\u5148\u5c06<code>A-B</code>\u6821\u9a8c\u73af\u4e2d\u7684\u6700\u540e\u4e00\u5bf9\uff08\u5bf9\u5e94<code>B[top - 1]</code>\uff09\u590d\u5236\u5230<code>B[A[k]]</code>\u7684\u4f4d\u7f6e\uff0c\u518d<code>top--</code>\u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002</li> </ul> <p>\u201c\u6821\u9a8c\u73af\u201d\u4f4d\u56fe\u7684\u5b9e\u73b0\uff1a</p> \u4f4d\u56fe <pre><code>void set(int k)\n{\nA[k] = top;\nB[top++] = A[k];\n}\nint get(int k)\n{\nreturn B[A[k]] == k &amp;&amp; A[k] &lt; top;\n}\nvoid remove(int k)\n{\nA[B[--top]] = k;\nB[k] = B[top];\n}\nvoid clear(int k)\n{\ntop = 0;\n}\n</code></pre>"},{"location":"coding/dsa/vector-and-list/#_19","title":"\u5217\u8868","text":"<p>\u5411\u91cf\u662f\u9759\u6001\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e00\u6b21\u53ea\u80fd\u5206\u914d\u56fa\u5b9a\u957f\u5ea6\u7684\u7a7a\u95f4\uff0c\u5411\u91cf\u7684\u6269\u589e\u9700\u8981\u5206\u914d\u4e00\u5757\u65b0\u7684\u7a7a\u95f4\uff0c\u7136\u540e\u5c06\u5411\u91cf\u4e2d\u7684\u5143\u7d20\u590d\u5236\u5230\u65b0\u7684\u5411\u91cf\u4e2d\u3002\u800c\u5217\u8868\u4e0e\u4e4b\u4e0d\u540c\uff0c\u5217\u8868\u7684\u5143\u7d20\u53ef\u4ee5\u52a8\u6001\u5206\u914d\uff0c\u5217\u8868\u7684\u6269\u589e\u53ea\u9700\u8981\u5206\u914d\u6269\u589e\u6240\u9700\u7684\u7a7a\u95f4\u5373\u53ef\u3002</p> <p>\u5217\u8868\u4e2d\u5143\u7d20\u7684\u6392\u5217\u4e0e\u5217\u8868\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u7684\u6392\u5217\u987a\u5e8f\u6ca1\u6709\u5fc5\u7136\u7684\u5173\u7cfb\uff0c\u8fd9\u4e9b\u5143\u7d20\u5728\u903b\u8f91\u4e0a\u5f62\u6210\u4e00\u4e2a\u5e8f\u5217\u3002\u5217\u8868\u7684\u5143\u7d20\u53c8\u79f0\u8282\u70b9\uff0c\u76f8\u90bb\u7684\u8282\u70b9\u4e92\u79f0\u524d\u9a71\u4e0e\u540e\u7ee7\u3002\u6ca1\u6709\u524d\u9a71\u7684\u8282\u70b9\u79f0\u4e3a\u9996\u8282\u70b9\uff0c\u6ca1\u6709\u540e\u7ee7\u7684\u8282\u70b9\u79f0\u4e3a\u5c3e\u8282\u70b9\u3002\u8282\u70b9\u9700\u8981\u989d\u5916\u7684\u7a7a\u95f4\u8bb0\u5f55\u76f8\u90bb\u8282\u70b9\u7684\u5730\u5740\u4ee5\u6784\u5efa\u903b\u8f91\u4e0a\u7684\u987a\u5e8f\u5173\u7cfb\u3002</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u7684\u7f3a\u70b9\u5728\u4e8e\u5217\u8868\u4e2d\u7684\u5143\u7d20\u4e0d\u80fd\u76f4\u63a5\u6309\u7167\u4e0b\u6807\u8fdb\u884c\u8bbf\u95ee\uff0c\u53ea\u80fd\u4ece\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u5f00\u59cb\uff0c\u4f9d\u5e8f\u8bbf\u95ee\u8282\u70b9\u76f4\u5230\u8bbf\u95ee\u5230\u5bf9\u5e94\u4e0b\u6807\u7684\u8282\u70b9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\mathcal O(n)\\)</p>"},{"location":"coding/dsa/vector-and-list/#_20","title":"\u8282\u70b9\u7c7b\u578b","text":"<p>\u4e3a\u5b9e\u73b0\u5217\u8868\u7684\u5404\u9879\u64cd\u4f5c\uff0c\u8282\u70b9\u7c7b\u578b\u9700\u8981\u5b9e\u73b0\u4ee5\u4e0b\u63a5\u53e3\uff1a</p> <ul> <li>\u83b7\u53d6\u4e0e\u8bbe\u7f6e\u5f53\u524d\u8282\u70b9\u7684\u524d\u9a71</li> <li>\u83b7\u53d6\u4e0e\u8bbe\u7f6e\u5f53\u524d\u8282\u70b9\u7684\u540e\u7ee7</li> <li>\u83b7\u53d6\u4e0e\u8bbe\u7f6e\u5f53\u524d\u8282\u70b9\u7684\u53d6\u503c</li> <li>\u63d2\u5165\u524d\u9a71\u8282\u70b9</li> <li>\u63d2\u5165\u540e\u7ee7\u8282\u70b9</li> </ul> <p>\u6ce8\u610f\uff1a \u53cc\u5411\u94fe\u8868\u5728\u5b9e\u73b0\u65f6\u6709\u6f5c\u5728\u7684\u6570\u636e\u4e0d\u4e00\u81f4\u7684\u98ce\u9669\u3002\uff08\u524d\u9a71\u8282\u70b9\u7684\u540e\u7ee7\u4e0d\u7b49\u4e8e\u540e\u7ee7\u8282\u70b9\u7684\u524d\u9a71\uff09</p> <p>\u5982\u4e0b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8282\u70b9\u7c7b\u7684\u793a\u4f8b\u63a5\u53e3\uff0c\u6ca1\u6709\u5305\u542b\u63a5\u53e3\u7684\u5177\u4f53\u5b9e\u73b0\u3002</p> \u5217\u8868\u8282\u70b9\u7c7b <p><pre><code>/******************************************************************************************\n * Data Structures in C++\n * ISBN: 7-302-33064-6 &amp; 7-302-33065-3 &amp; 7-302-29652-2 &amp; 7-302-26883-3\n * Junhui DENG, deng@tsinghua.edu.cn\n * Computer Science &amp; Technology, Tsinghua University\n * Copyright (c) 2003-2020. All rights reserved.\n ******************************************************************************************/\n\ntypedef int Rank; //\u79e9\n#define ListNodePosi(T) ListNode&lt;T&gt;* //\u5217\u8868\u8282\u70b9\u4f4d\u7f6e\n\ntemplate &lt;typename T&gt; struct ListNode { //\u5217\u8868\u8282\u70b9\u6a21\u677f\u7c7b\uff08\u4ee5\u53cc\u5411\u94fe\u8868\u5f62\u5f0f\u5b9e\u73b0\uff09\n// \u6210\u5458\nT data; ListNodePosi(T) pred; ListNodePosi(T) succ; //\u6570\u503c\u3001\u524d\u9a71\u3001\u540e\u7ee7\n// \u6784\u9020\u51fd\u6570\nListNode() {} //\u9488\u5bf9header\u548ctrailer\u7684\u6784\u9020\nListNode ( T e, ListNodePosi(T) p = NULL, ListNodePosi(T) s = NULL )\n: data ( e ), pred ( p ), succ ( s ) {} //\u9ed8\u8ba4\u6784\u9020\u5668\n// \u64cd\u4f5c\u63a5\u53e3\nListNodePosi(T) insertAsPred ( T const&amp; e ); //\u7d27\u9760\u5f53\u524d\u8282\u70b9\u4e4b\u524d\u63d2\u5165\u65b0\u8282\u70b9\nListNodePosi(T) insertAsSucc ( T const&amp; e ); //\u7d27\u968f\u5f53\u524d\u8282\u70b9\u4e4b\u540e\u63d2\u5165\u65b0\u8282\u70b9\n};\n</code></pre> Reference</p>"},{"location":"coding/dsa/vector-and-list/#_21","title":"\u63d2\u5165\u4e0e\u5220\u9664","text":"<p>\u5411\u5217\u8868\u4e2d\u63d2\u5165\u6570\u636e\u9700\u8981\u5982\u4e0b\u8fc7\u7a0b\uff1a</p> <ul> <li>\u5b9a\u4f4d\u5230\u8282\u70b9</li> <li>\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u8282\u70b9</li> <li>\u66f4\u65b0\u8282\u70b9\u4e4b\u95f4\u7684\u6307\u9488\uff0c\u5c06\u65b0\u8282\u70b9\u4e0e\u5176\u4ed6\u8282\u70b9\u76f8\u8fde\u63a5</li> </ul> <p>\u5220\u9664\u8fc7\u7a0b\u662f\u63d2\u5165\u8fc7\u7a0b\u7684\u53cd\u5411\u8fc7\u7a0b\uff0c\u66f4\u65b0\u8282\u70b9\u4e4b\u95f4\u6307\u9488\uff0c\u5c06\u5220\u9664\u8282\u70b9\u6392\u9664\u5728\u5916\u5373\u53ef\u3002</p>"},{"location":"coding/dsa/vector-and-list/#_22","title":"\u67e5\u627e\u4e0e\u53bb\u91cd","text":"<p>\u65e0\u5e8f\u5217\u8868\u7684\u67e5\u627e\u4e0e\u53bb\u91cd\u64cd\u4f5c\u4e0e\u65e0\u5e8f\u5411\u91cf\u7684\u67e5\u627e\u4e0e\u53bb\u91cd\u64cd\u4f5c\u7684\u57fa\u672c\u601d\u8def\u76f8\u540c\uff0c\u6b64\u5904\u4e0d\u518d\u8d58\u8ff0\u3002</p> <p>\u6709\u5e8f\u5217\u8868\u7684\u67e5\u627e\u4e0d\u80fd\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u800c\u53ea\u80fd\u987a\u5e8f\u67e5\u627e\u3002</p> <p>\u6709\u5e8f\u5217\u8868\u7684\u53bb\u91cd\uff1a\u53cd\u590d\u8003\u5bdf\u76f8\u90bb\u7684\u8282\u70b9\uff0c\u82e5\u8282\u70b9\u76f8\u540c\uff0c\u5219\u5220\u9664\u540e\u8fb9\u7684\u8282\u70b9\uff0c\u7ee7\u7eed\u8003\u5bdf\uff0c\u5426\u5219\u5f53\u524d\u8282\u70b9\u5411\u540e\u79fb\u52a8\uff0c\u91cd\u590d\u8003\u5bdf\u8fc7\u7a0b\u3002\u76f4\u5230\u5217\u8868\u5230\u8fbe\u7ed3\u5c3e\uff0c\u7b97\u6cd5\u7ed3\u675f\u3002</p>"},{"location":"coding/leetcode/","title":"Leetcode \u9898\u76ee","text":"<p>\u6309\u6807\u7b7e\u5206\u7c7b\u7684\u9898\u76ee\u5217\u8868\u53ef\u4ee5\u53c2\u89c1\u8fd9\u91cc</p> \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 1. \u4e24\u6570\u4e4b\u548c 2. \u4e24\u6570\u76f8\u52a0 3. \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32 7. \u6574\u6570\u53cd\u8f6c 8. \u5b57\u7b26\u4e32\u8f6c\u6362\u6574\u6570 (atoi) 9. \u56de\u6587\u6570 11. \u76db\u6700\u591a\u6c34\u7684\u5bb9\u5668 13. \u7f57\u9a6c\u6570\u5b57\u8f6c\u6574\u6570 14. \u6700\u957f\u516c\u5171\u524d\u7f00 17. \u7535\u8bdd\u53f7\u7801\u7684\u5b57\u6bcd\u7ec4\u5408 19. \u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2c N \u4e2a\u7ed3\u70b9 20. \u6709\u6548\u7684\u62ec\u53f7 21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868 22. \u62ec\u53f7\u751f\u6210 23. \u5408\u5e76K\u4e2a\u5347\u5e8f\u94fe\u8868 24. \u4e24\u4e24\u4ea4\u6362\u94fe\u8868\u4e2d\u7684\u8282\u70b9 25. K \u4e2a\u4e00\u7ec4\u7ffb\u8f6c\u94fe\u8868 26. \u5220\u9664\u6709\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879 27. \u79fb\u9664\u5143\u7d20 28. \u5b9e\u73b0 strStr() 35. \u641c\u7d22\u63d2\u5165\u4f4d\u7f6e 36. \u6709\u6548\u7684\u6570\u72ec 37. \u89e3\u6570\u72ec 38. \u5916\u89c2\u6570\u5217 42. \u63a5\u96e8\u6c34 43. \u5b57\u7b26\u4e32\u76f8\u4e58 46. \u5168\u6392\u5217 48. \u65cb\u8f6c\u56fe\u50cf 50. Pow(x, n) 53. \u6700\u5927\u5b50\u5e8f\u548c 55. \u8df3\u8dc3\u6e38\u620f 56. \u5408\u5e76\u533a\u95f4 59. \u87ba\u65cb\u77e9\u9635 II 61. \u65cb\u8f6c\u94fe\u8868 62. \u4e0d\u540c\u8def\u5f84 64. \u6700\u5c0f\u8def\u5f84\u548c 66. \u52a0\u4e00 69. x \u7684\u5e73\u65b9\u6839 70. \u722c\u697c\u68af 73. \u77e9\u9635\u7f6e\u96f6 74. \u641c\u7d22\u4e8c\u7ef4\u77e9\u9635 75. \u989c\u8272\u5206\u7c7b 78. \u5b50\u96c6 79. \u5355\u8bcd\u641c\u7d22 87. \u6270\u4e71\u5b57\u7b26\u4e32 88. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4 90. \u5b50\u96c6 II 92. \u53cd\u8f6c\u94fe\u8868 II 98. \u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811 101. \u5bf9\u79f0\u4e8c\u53c9\u6811 102. \u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386 115. \u4e0d\u540c\u7684\u5b50\u5e8f\u5217 118. \u6768\u8f89\u4e09\u89d2 119. \u6768\u8f89\u4e09\u89d2 II 120. \u4e09\u89d2\u5f62\u6700\u5c0f\u8def\u5f84\u548c 121. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a 122. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II 125. \u9a8c\u8bc1\u56de\u6587\u4e32 136. \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57 150. \u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u6c42\u503c 155. \u6700\u5c0f\u6808 189. \u65cb\u8f6c\u6570\u7ec4 198. \u6253\u5bb6\u52ab\u820d 204. \u8ba1\u6570\u8d28\u6570 206. \u53cd\u8f6c\u94fe\u8868 217. \u5b58\u5728\u91cd\u590d\u5143\u7d20 234. \u56de\u6587\u94fe\u8868 237. \u5220\u9664\u94fe\u8868\u4e2d\u7684\u8282\u70b9 242. \u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd 315. \u8ba1\u7b97\u53f3\u4fa7\u5c0f\u4e8e\u5f53\u524d\u5143\u7d20\u7684\u4e2a\u6570 341. \u6241\u5e73\u5316\u5d4c\u5957\u5217\u8868\u8fed\u4ee3\u5668 344. \u53cd\u8f6c\u5b57\u7b26\u4e32 350. \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6 II 368. \u6700\u5927\u6574\u9664\u5b50\u96c6 377. \u7ec4\u5408\u603b\u548c \u2163 384. \u6253\u4e71\u6570\u7ec4 387. \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 403. \u9752\u86d9\u8fc7\u6cb3 433. \u6700\u5c0f\u57fa\u56e0\u53d8\u5316 488. \u7956\u739b\u6e38\u620f 509. \u6590\u6ce2\u90a3\u5951\u6570 779. \u7b2cK\u4e2a\u8bed\u6cd5\u7b26\u53f7 781. \u68ee\u6797\u4e2d\u7684\u5154\u5b50 917. \u4ec5\u4ec5\u53cd\u8f6c\u5b57\u6bcd 1006. \u7b28\u9636\u4e58 1011. \u5728 D \u5929\u5185\u9001\u8fbe\u5305\u88f9\u7684\u80fd\u529b 1283. \u4f7f\u7ed3\u679c\u4e0d\u8d85\u8fc7\u9608\u503c\u7684\u6700\u5c0f\u9664\u6570 1300. \u8f6c\u53d8\u6570\u7ec4\u540e\u6700\u63a5\u8fd1\u76ee\u6807\u503c\u7684\u6570\u7ec4\u548c 1603. \u8bbe\u8ba1\u505c\u8f66\u7cfb\u7edf 1835. \u6240\u6709\u6570\u5bf9\u6309\u4f4d\u4e0e\u7ed3\u679c\u7684\u5f02\u6216\u548c"},{"location":"coding/leetcode/1/","title":"1. \u4e24\u6570\u4e4b\u548c","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6570\u7ec4","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/1/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4<code>nums</code>\u548c\u4e00\u4e2a\u76ee\u6807\u503c<code>target</code>\uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa\u548c\u4e3a\u76ee\u6807\u503c\u7684\u90a3\u00a0\u4e24\u4e2a\u00a0\u6574\u6570\uff0c\u5e76\u8fd4\u56de\u4ed6\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002</p> <p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\u3002\u4f46\u662f\uff0c\u6570\u7ec4\u4e2d\u540c\u4e00\u4e2a\u5143\u7d20\u4e0d\u80fd\u4f7f\u7528\u4e24\u904d\u3002</p> <p>\u793a\u4f8b:</p> <pre><code>\u7ed9\u5b9a nums = [2, 7, 11, 15], target = 9\n\n\u56e0\u4e3a nums[0] + nums[1] = 2 + 7 = 9\n\u6240\u4ee5\u8fd4\u56de [0, 1]\n</code></pre> <p>Reference</p>","tags":["\u6570\u7ec4","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/1/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a </p> <p>\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5b58\u50a8\u5728\u54c8\u5e0c\u8868\u4e2d\uff0c\u6bcf\u6b21\u5728\u6570\u7ec4\u4e2d\u67e5\u627e\u76ee\u6807\u503c\u4e0e\u5f53\u524d\u503c\u4e4b\u5dee\u662f\u5426\u5728\u54c8\u5e0c\u8868\u4e2d\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\n#define MAX(a, b) (a &gt; b ? a : b)\n#define MIN(a, b) (a &lt; b ? a : b)\nstruct cell\n{\nint value;\nint flag;\n};\nint* twoSum(int* nums, int numsSize, int target, int* returnSize){\n*returnSize = 2;\nint i = 0, mapSize = numsSize * 2, cur, *ret = malloc(sizeof(int) * 2), targetval, j = 0;\nstruct cell *hashMap = (struct cell *)memset(malloc(sizeof(struct cell) * mapSize), 0, sizeof(struct cell) * mapSize);\nfor (i = 0; i &lt; numsSize; i++)\n{\ncur = (nums[i] &gt; 0 ? nums[i] : -nums[i]) % mapSize;\nwhile(hashMap[cur].flag != 0 &amp;&amp; hashMap[cur].value != nums[i])\n{\ncur++;\ncur = cur == mapSize ? 0 : cur;\n}\nif (hashMap[cur].flag == 0)\nhashMap[cur].value = nums[i];\nhashMap[cur].flag++;\n}\nfor (i = 0; i &lt; numsSize; i++)\n{\ntargetval = target - nums[i];\ncur = (targetval &gt; 0 ? targetval : -targetval) % mapSize;\nwhile(hashMap[cur].flag != 0 &amp;&amp; hashMap[cur].value != targetval)\n{\ncur++;\ncur = cur == mapSize ? 0 : cur;\n}\nif (hashMap[cur].value == targetval)\n{\nfor (j = 0; j &lt; numsSize; j++)\nif (nums[j] == targetval &amp;&amp; j != i)\nbreak;\nif (j != numsSize)\nbreak;\n}\n}\nret[0] = MIN(i, j);\nret[1] = MAX(i, j);\nif (nums[i] + nums[j] == target)\nreturn ret;\n*returnSize = 0;\nreturn NULL;\n}\n</code></pre>","tags":["\u6570\u7ec4","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/1006/","title":"1006. \u7b28\u9636\u4e58","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/1006/#_1","title":"\u9898\u76ee","text":"<p>\u901a\u5e38\uff0c\u6b63\u6574\u6570 <code>n</code> \u7684\u9636\u4e58\u662f\u6240\u6709\u5c0f\u4e8e\u6216\u7b49\u4e8e <code>n</code> \u7684\u6b63\u6574\u6570\u7684\u4e58\u79ef\u3002\u4f8b\u5982\uff0c<code>factorial(10) = 10 * 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1</code>\u3002</p> <p>\u76f8\u53cd\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u7b28\u9636\u4e58 <code>clumsy</code>\uff1a\u5728\u6574\u6570\u7684\u9012\u51cf\u5e8f\u5217\u4e2d\uff0c\u6211\u4eec\u4ee5\u4e00\u4e2a\u56fa\u5b9a\u987a\u5e8f\u7684\u64cd\u4f5c\u7b26\u5e8f\u5217\u6765\u4f9d\u6b21\u66ff\u6362\u539f\u6709\u7684\u4e58\u6cd5\u64cd\u4f5c\u7b26\uff1a\u4e58\u6cd5(*)\uff0c\u9664\u6cd5(/)\uff0c\u52a0\u6cd5(+)\u548c\u51cf\u6cd5(-)\u3002</p> <p>\u4f8b\u5982\uff0c<code>clumsy(10) = 10 * 9 / 8 + 7 - 6 * 5 / 4 + 3 - 2 * 1</code>\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u8fd0\u7b97\u4ecd\u7136\u4f7f\u7528\u901a\u5e38\u7684\u7b97\u672f\u8fd0\u7b97\u987a\u5e8f\uff1a\u6211\u4eec\u5728\u4efb\u4f55\u52a0\u3001\u51cf\u6b65\u9aa4\u4e4b\u524d\u6267\u884c\u6240\u6709\u7684\u4e58\u6cd5\u548c\u9664\u6cd5\u6b65\u9aa4\uff0c\u5e76\u4e14\u6309\u4ece\u5de6\u5230\u53f3\u5904\u7406\u4e58\u6cd5\u548c\u9664\u6cd5\u6b65\u9aa4\u3002</p> <p>\u53e6\u5916\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u9664\u6cd5\u662f\u5730\u677f\u9664\u6cd5\uff08floor division\uff09\uff0c\u6240\u4ee5\u00a0<code>10 * 9 / 8</code>\u00a0\u7b49\u4e8e\u00a0<code>11</code>\u3002\u8fd9\u4fdd\u8bc1\u7ed3\u679c\u662f\u4e00\u4e2a\u6574\u6570\u3002</p> <p>\u5b9e\u73b0\u4e0a\u9762\u5b9a\u4e49\u7684\u7b28\u51fd\u6570\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 <code>N</code>\uff0c\u5b83\u8fd4\u56de <code>N</code> \u7684\u7b28\u9636\u4e58\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1a4\n\u8f93\u51fa\uff1a7\n\u89e3\u91ca\uff1a7 = 4 * 3 / 2 + 1\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1a10\n\u8f93\u51fa\uff1a12\n\u89e3\u91ca\uff1a12 = 10 * 9 / 8 + 7 - 6 * 5 / 4 + 3 - 2 * 1\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>1 &lt;= N &lt;= 10000</code></li> <li><code>-2^31 &lt;= answer &lt;= 2^31 - 1</code>  \uff08\u7b54\u6848\u4fdd\u8bc1\u7b26\u5408 <code>32</code> \u4f4d\u6574\u6570\u3002\uff09</li> </ul> <p>Reference</p>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/1006/#_2","title":"\u9898\u89e3","text":"<p>\u5bf9\u8ba1\u7b97\u8fc7\u7a0b\u8fdb\u884c\u6a21\u62df\u5373\u53ef\uff1a</p> <pre><code>int clumsy(int N){\nint ret = 0, i = N;\nbool flag = true, minus = false;\nfor (i = N; i &gt; 0;)\n{\nif (flag)\n{\nif (i &gt;= 3)\nret += (minus ? -1 : 1) * i * (i - 1) / (i - 2);\nelse if (i == 2)\nret += (minus ? -1 : 1) * i * (i - 1);\nelse if (i == 1)\nret += (minus ? -1 : 1) * i;\ni -= 3;\n}\nelse\nret += i--;\nflag = !flag;\nminus = true;\n}\nreturn ret;\n}\n</code></pre>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/101/","title":"101. \u5bf9\u79f0\u4e8c\u53c9\u6811","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6811","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"]},{"location":"coding/leetcode/101/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u68c0\u67e5\u5b83\u662f\u5426\u662f\u955c\u50cf\u5bf9\u79f0\u7684\u3002</p> <p>\u4f8b\u5982\uff0c\u4e8c\u53c9\u6811<code>[1,2,2,3,4,4,3]</code>\u662f\u5bf9\u79f0\u7684\u3002</p> <pre><code>    1\n   / \\\n  2   2\n / \\ / \\\n3  4 4  3\n</code></pre> <p>\u4f46\u662f\u4e0b\u9762\u8fd9\u4e2a<code>[1,2,2,null,3,null,3]</code>\u5219\u4e0d\u662f\u955c\u50cf\u5bf9\u79f0\u7684:</p> <pre><code>    1\n   / \\\n  2   2\n   \\   \\\n   3    3\n</code></pre> <p>\u8fdb\u9636\uff1a</p> <p>\u4f60\u53ef\u4ee5\u8fd0\u7528\u9012\u5f52\u548c\u8fed\u4ee3\u4e24\u79cd\u65b9\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f</p> <p>Reference</p>","tags":["\u6811","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"]},{"location":"coding/leetcode/101/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u9012\u5f52\u5224\u65ad\u4e24\u4e2a\u6839\u8282\u70b9\u662f\u5426\u6210\u955c\u50cf\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     struct TreeNode *left;\n *     struct TreeNode *right;\n * };\n */\nbool isMirrored(struct TreeNode *root1, struct TreeNode *root2)\n{\nif (!root1 || !root2)\nreturn root1 == root2;\nif (root1-&gt;val != root2-&gt;val)\nreturn false;\nreturn isMirrored(root1-&gt;left, root2-&gt;right) &amp;&amp; isMirrored(root2-&gt;left, root1-&gt;right);\n}\n\nbool isSymmetric(struct TreeNode* root){\nif (root == NULL)\nreturn true;\nreturn isMirrored(root-&gt;left, root-&gt;right);\n}\n</code></pre>","tags":["\u6811","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"]},{"location":"coding/leetcode/1011/","title":"1011. \u5728 D \u5929\u5185\u9001\u8fbe\u5305\u88f9\u7684\u80fd\u529b","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/1011/#_1","title":"\u9898\u76ee","text":"<p>\u4f20\u9001\u5e26\u4e0a\u7684\u5305\u88f9\u5fc5\u987b\u5728 <code>D</code> \u5929\u5185\u4ece\u4e00\u4e2a\u6e2f\u53e3\u8fd0\u9001\u5230\u53e6\u4e00\u4e2a\u6e2f\u53e3\u3002</p> <p>\u4f20\u9001\u5e26\u4e0a\u7684\u7b2c <code>i</code>\u00a0\u4e2a\u5305\u88f9\u7684\u91cd\u91cf\u4e3a\u00a0<code>weights[i]</code>\u3002\u6bcf\u4e00\u5929\uff0c\u6211\u4eec\u90fd\u4f1a\u6309\u7ed9\u51fa\u91cd\u91cf\u7684\u987a\u5e8f\u5f80\u4f20\u9001\u5e26\u4e0a\u88c5\u8f7d\u5305\u88f9\u3002\u6211\u4eec\u88c5\u8f7d\u7684\u91cd\u91cf\u4e0d\u4f1a\u8d85\u8fc7\u8239\u7684\u6700\u5927\u8fd0\u8f7d\u91cd\u91cf\u3002</p> <p>\u8fd4\u56de\u80fd\u5728 <code>D</code> \u5929\u5185\u5c06\u4f20\u9001\u5e26\u4e0a\u7684\u6240\u6709\u5305\u88f9\u9001\u8fbe\u7684\u8239\u7684\u6700\u4f4e\u8fd0\u8f7d\u80fd\u529b\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1aweights = [1,2,3,4,5,6,7,8,9,10], D = 5\n\u8f93\u51fa\uff1a15\n\u89e3\u91ca\uff1a\n\u8239\u8236\u6700\u4f4e\u8f7d\u91cd 15 \u5c31\u80fd\u591f\u5728 5 \u5929\u5185\u9001\u8fbe\u6240\u6709\u5305\u88f9\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u7b2c 1 \u5929\uff1a1, 2, 3, 4, 5\n\u7b2c 2 \u5929\uff1a6, 7\n\u7b2c 3 \u5929\uff1a8\n\u7b2c 4 \u5929\uff1a9\n\u7b2c 5 \u5929\uff1a10\n\n\u8bf7\u6ce8\u610f\uff0c\u8d27\u7269\u5fc5\u987b\u6309\u7167\u7ed9\u5b9a\u7684\u987a\u5e8f\u88c5\u8fd0\uff0c\u56e0\u6b64\u4f7f\u7528\u8f7d\u91cd\u80fd\u529b\u4e3a 14 \u7684\u8239\u8236\u5e76\u5c06\u5305\u88c5\u5206\u6210 (2, 3, 4, 5), (1, 6, 7), (8), (9), (10) \u662f\u4e0d\u5141\u8bb8\u7684\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1aweights = [3,2,2,4,1,4], D = 3\n\u8f93\u51fa\uff1a6\n\u89e3\u91ca\uff1a\n\u8239\u8236\u6700\u4f4e\u8f7d\u91cd 6 \u5c31\u80fd\u591f\u5728 3 \u5929\u5185\u9001\u8fbe\u6240\u6709\u5305\u88f9\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u7b2c 1 \u5929\uff1a3, 2\n\u7b2c 2 \u5929\uff1a2, 4\n\u7b2c 3 \u5929\uff1a1, 4\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1aweights = [1,2,3,1,1], D = 4\n\u8f93\u51fa\uff1a3\n\u89e3\u91ca\uff1a\n\u7b2c 1 \u5929\uff1a1\n\u7b2c 2 \u5929\uff1a2\n\u7b2c 3 \u5929\uff1a3\n\u7b2c 4 \u5929\uff1a1, 1\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>1 &lt;= D &lt;= weights.length &lt;= 50000</code></li> <li><code>1 &lt;= weights[i] &lt;= 500</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/1011/#_2","title":"\u9898\u89e3","text":"<p>\u8bbe\u5217\u8868\u4e3a\\(A=\\{a_i\\}_n\\)\uff0c\u5219\u6700\u7ec8\u7ed3\u679c\u7684\u53d6\u503c\u8303\u56f4\u4e3a\\([\\max_{i} \\{a_i\\}, \\sum_{i} a_i]\\)\u3002\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u5728\u533a\u95f4\u4e2d\u67e5\u627e\u80fd\u591f\u6ee1\u8db3\u5728\\(D\\)\u5929\u5185\u8fd0\u8f93\u5168\u90e8\u5305\u88f9\u7684\u6700\u5c0f\u8f7d\u91cd\u3002</p> <p>\u6709\u5173\u4e8c\u5206\u67e5\u627e\u7684\u8be6\u7ec6\u8ba8\u8bba\uff0c\u8bf7\u53c2\u89c135. \u641c\u7d22\u63d2\u5165\u4f4d\u7f6e</p> <pre><code>#define MAX(x, y) ((x) &gt; (y) ? (x) : (y))\n\nbool verify(int *weights, int weightsSize, int D, int limit)\n{\nint i = 0, ub = limit;\nfor (i = 0; i &lt; weightsSize; i++)\n{\nif (weights[i] &gt; ub)\n{\nD--;\nub = limit;\n}\nub -= weights[i];\nif (D &lt;= 0)\nreturn false;\n}\nreturn true;\n}\n\nint bSearch(int *weights, int weightsSize, int D, int lo, int hi)\n{\nint mid;\nwhile (lo &lt; hi)\n{\nmid = (lo + hi) &gt;&gt; 1;\nif (verify(weights, weightsSize, D, mid))\nhi = mid;\nelse\nlo = mid + 1;\n}\nreturn lo;\n}\n\nint shipWithinDays(int* weights, int weightsSize, int D) {\nint i = 0, sum = 0, max = 0;\nprintf(\"%d\", verify(weights, weightsSize, D, 6));\nfor (i = 0; i &lt; weightsSize; i++)\n{\nsum += weights[i];\nmax = MAX(max, weights[i]);\n}\nreturn bSearch(weights, weightsSize, D, max, sum);\n}\n</code></pre>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/102/","title":"102. \u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6811","\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"]},{"location":"coding/leetcode/102/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u8bf7\u4f60\u8fd4\u56de\u5176\u6309 \u5c42\u5e8f\u904d\u5386 \u5f97\u5230\u7684\u8282\u70b9\u503c\u3002 \uff08\u5373\u9010\u5c42\u5730\uff0c\u4ece\u5de6\u5230\u53f3\u8bbf\u95ee\u6240\u6709\u8282\u70b9\uff09\u3002</p> <p>\u793a\u4f8b\uff1a</p> <p>\u4e8c\u53c9\u6811\uff1a<code>[3,9,20,null,null,15,7]</code>,</p> <pre><code>    3\n   / \\\n  9  20\n    /  \\\n   15   7\n</code></pre> <p>\u8fd4\u56de\u5176\u5c42\u6b21\u904d\u5386\u7ed3\u679c\uff1a</p> <pre><code>[\n  [3],\n  [9,20],\n  [15,7]\n]\n</code></pre> <p>Reference</p>","tags":["\u6811","\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"]},{"location":"coding/leetcode/102/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u7b2c\u4e00\u5c42\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\u6839\u8282\u70b9\u7684\u503c\uff0c\u518d\u5c42\u5e8f\u904d\u5386\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\uff0c\u5408\u5e76\u540c\u5c42\u7684\u7ed3\u679c\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     struct TreeNode *left;\n *     struct TreeNode *right;\n * };\n */\n/**\n * Return an array of arrays of size *returnSize.\n * The sizes of the arrays are returned as *returnColumnSizes array.\n * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().\n */\n#define MAX(x, y) (x &gt; y ? x : y)\nint *merge(int *leftBranch, int leftSize, int *rightBranch, int rightSize, int *returnSize)\n{\n*returnSize = leftSize + rightSize;\nint *ret = (int *)malloc(sizeof(int) * (leftSize + rightSize));\nif (leftSize != 0)\n{\nmemcpy(ret, leftBranch, sizeof(int) * leftSize);\nfree(leftBranch);\n}\nif (rightSize != 0)\n{\nmemcpy(ret + leftSize, rightBranch, sizeof(int) * rightSize);\nfree(rightBranch);\n}\nreturn ret;\n}\nint** levelOrder(struct TreeNode* root, int* returnSize, int** returnColumnSizes){\nif (root == NULL)\n{\n*returnSize = 0;\n*returnColumnSizes = NULL;\nreturn NULL;\n}\nint leftBranchSize = 0, *leftColumnSizes = NULL, **leftBranch = levelOrder(root-&gt;left, &amp;leftBranchSize, &amp;leftColumnSizes),\nrightBranchSize = 0, *rightColumnSizes = NULL, **rightBranch = levelOrder(root-&gt;right, &amp;rightBranchSize, &amp;rightColumnSizes);\n*returnSize = 1 + MAX(leftBranchSize, rightBranchSize);\nint **ret = (int **)malloc(sizeof(int *) * *returnSize), *returnCols = (int *)malloc(sizeof(int) * *returnSize), i = 0;\n*returnColumnSizes = returnCols;\n*returnCols = 1;\n*ret = malloc(sizeof(int));\n**ret = root-&gt;val;\nfor (i = 1; i &lt; *returnSize; i++)\n{\nif (i &lt;= leftBranchSize &amp;&amp; i &lt;= rightBranchSize)\nret[i] = merge(leftBranch[i - 1], leftColumnSizes[i - 1], rightBranch[i - 1], rightColumnSizes[i - 1], returnCols + i);\nelse if (i &lt;= leftBranchSize)\nret[i] = merge(leftBranch[i-1], leftColumnSizes[i-1], NULL, 0, returnCols + i);\nelse if (i &lt;= rightBranchSize)\nret[i] = merge(NULL, 0, rightBranch[i-1], rightColumnSizes[i-1], returnCols + i);\n}\nfree(leftBranch);\nfree(rightBranch);\nfree(leftColumnSizes);\nfree(rightColumnSizes);\nreturn ret;\n}\n</code></pre>","tags":["\u6811","\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"]},{"location":"coding/leetcode/11/","title":"11. \u76db\u6700\u591a\u6c34\u7684\u5bb9\u5668","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6570\u5b66","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/11/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60 <code>n</code> \u4e2a\u975e\u8d1f\u6574\u6570 <code>a_1\uff0ca_2\uff0c...\uff0ca_n</code>\uff0c\u6bcf\u4e2a\u6570\u4ee3\u8868\u5750\u6807\u4e2d\u7684\u4e00\u4e2a\u70b9\u00a0<code>(i,\u00a0a_i)</code> \u3002\u5728\u5750\u6807\u5185\u753b <code>n</code> \u6761\u5782\u76f4\u7ebf\uff0c\u5782\u76f4\u7ebf <code>i</code>\u00a0\u7684\u4e24\u4e2a\u7aef\u70b9\u5206\u522b\u4e3a\u00a0<code>(i,\u00a0a_i)</code> \u548c <code>(i, 0)</code> \u3002\u627e\u51fa\u5176\u4e2d\u7684\u4e24\u6761\u7ebf\uff0c\u4f7f\u5f97\u5b83\u4eec\u4e0e\u00a0<code>x</code>\u00a0\u8f74\u5171\u540c\u6784\u6210\u7684\u5bb9\u5668\u53ef\u4ee5\u5bb9\u7eb3\u6700\u591a\u7684\u6c34\u3002</p> <p>\u8bf4\u660e\uff1a\u4f60\u4e0d\u80fd\u503e\u659c\u5bb9\u5668\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <p></p> <pre><code>\u8f93\u5165\uff1a[1,8,6,2,5,4,8,3,7]\n\u8f93\u51fa\uff1a49 \n\u89e3\u91ca\uff1a\u56fe\u4e2d\u5782\u76f4\u7ebf\u4ee3\u8868\u8f93\u5165\u6570\u7ec4 [1,8,6,2,5,4,8,3,7]\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u5bb9\u5668\u80fd\u591f\u5bb9\u7eb3\u6c34\uff08\u8868\u793a\u4e3a\u84dd\u8272\u90e8\u5206\uff09\u7684\u6700\u5927\u503c\u4e3a\u00a049\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1aheight = [1,1]\n\u8f93\u51fa\uff1a1\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1aheight = [4,3,2,1,4]\n\u8f93\u51fa\uff1a16\n</code></pre> <p>\u793a\u4f8b 4\uff1a</p> <pre><code>\u8f93\u5165\uff1aheight = [1,2,1]\n\u8f93\u51fa\uff1a2\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>n = height.length</code></li> <li>2 &lt;= n &lt;= 3 * 104</li> <li>0 &lt;= height[i] &lt;= 3 * 104</li> </ul> <p>Reference</p>","tags":["\u6570\u5b66","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/11/#_2","title":"\u9898\u89e3","text":"<p>\u4f7f\u7528\u53cc\u6307\u9488\u6cd5\uff0c\u4e24\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411\u76db\u6c34\u533a\u57df\u7684\u8fb9\u754c\u3002\u6bcf\u6b21\u5faa\u73af\u5c06\u8f83\u4f4e\u7684\u8fb9\u754c\u5411\u4e2d\u95f4\u6536\u7f29\uff0c\u5e76\u5c1d\u8bd5\u66f4\u65b0\u6700\u5927\u7684\u76db\u6c34\u533a\u57df\u3002</p> <pre><code>#define MIN(x, y) (x &lt; y ? x : y)\n#define MAX(x, y) (x &gt; y ? x : y)\nint maxArea(int* height, int heightSize){\nint left = 0, right = heightSize - 1,\nret = (right - left) * MIN(height[left], height[right]), cur;\nwhile (left &lt; right)\n{\nif (height[left] &lt; height[right])\nleft++;\nelse\nright--;\ncur = (right - left) * MIN(height[left], height[right]);\nret = MAX(cur, ret);\n}\nreturn ret;\n}\n</code></pre>","tags":["\u6570\u5b66","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/115/","title":"115. \u4e0d\u540c\u7684\u5b50\u5e8f\u5217","text":"<p>\u96be\u5ea6\uff1a\u56f0\u96be</p>","tags":["\u5b57\u7b26\u4e32","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/115/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>s</code> \u548c\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>t</code> \uff0c\u8ba1\u7b97\u5728 <code>s</code> \u7684\u5b50\u5e8f\u5217\u4e2d <code>t</code> \u51fa\u73b0\u7684\u4e2a\u6570\u3002</p> <p>\u5b57\u7b26\u4e32\u7684\u4e00\u4e2a \u5b50\u5e8f\u5217 \u662f\u6307\uff0c\u901a\u8fc7\u5220\u9664\u4e00\u4e9b\uff08\u4e5f\u53ef\u4ee5\u4e0d\u5220\u9664\uff09\u5b57\u7b26\u4e14\u4e0d\u5e72\u6270\u5269\u4f59\u5b57\u7b26\u76f8\u5bf9\u4f4d\u7f6e\u6240\u7ec4\u6210\u7684\u65b0\u5b57\u7b26\u4e32\u3002\uff08\u4f8b\u5982\uff0c<code>\"ACE\"</code>\u00a0\u662f\u00a0<code>\"ABCDE\"</code>\u00a0\u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u800c\u00a0<code>\"AEC\"</code>\u00a0\u4e0d\u662f\uff09</p> <p>\u9898\u76ee\u6570\u636e\u4fdd\u8bc1\u7b54\u6848\u7b26\u5408 32 \u4f4d\u5e26\u7b26\u53f7\u6574\u6570\u8303\u56f4\u3002</p> <p>\u793a\u4f8b\u00a01\uff1a</p> <pre><code>\u8f93\u5165\uff1as = \"rabbbit\", t = \"rabbit\"\n\u8f93\u51fa\uff1a3\n\u89e3\u91ca\uff1a\n\u5982\u4e0b\u56fe\u6240\u793a, \u6709 3 \u79cd\u53ef\u4ee5\u4ece s \u4e2d\u5f97\u5230 \"rabbit\" \u7684\u65b9\u6848\u3002\n(\u4e0a\u7bad\u5934\u7b26\u53f7 ^ \u8868\u793a\u9009\u53d6\u7684\u5b57\u6bcd)\nrabbbit\n^^^^ ^^\nrabbbit\n^^ ^^^^\nrabbbit\n^^^ ^^^\n</code></pre> <p>\u793a\u4f8b\u00a02\uff1a</p> <pre><code>\u8f93\u5165\uff1as = \"babgbag\", t = \"bag\"\n\u8f93\u51fa\uff1a5\n\u89e3\u91ca\uff1a\n\u5982\u4e0b\u56fe\u6240\u793a, \u6709 5 \u79cd\u53ef\u4ee5\u4ece s \u4e2d\u5f97\u5230 \"bag\" \u7684\u65b9\u6848\u3002 \n(\u4e0a\u7bad\u5934\u7b26\u53f7 ^ \u8868\u793a\u9009\u53d6\u7684\u5b57\u6bcd)\nbabgbag\n^^ ^\nbabgbag\n^^    ^\nbabgbag\n^    ^^\nbabgbag\n  ^  ^^\nbabgbag\n    ^^^\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>0 &lt;= s.length, t.length &lt;= 1000</code></li> <li><code>s</code> \u548c <code>t</code> \u7531\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210</li> </ul> <p>Reference</p>","tags":["\u5b57\u7b26\u4e32","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/115/#_2","title":"\u9898\u89e3","text":"<p>\u89e3\u9898\u601d\u8def\uff1a\u8bbe\\(f(x, y)\\)\u4e3a\u5b57\u7b26\u4e32\\(x\\)\u4e2d\u7684\u5b50\u5e8f\u5217\u4e2d\u5b57\u7b26\u4e32\\(y\\)\u51fa\u73b0\u7684\u6b21\u6570\u3002\u5e76\u4e14\u4f7f\u7528\\(x + 1\\)\u8868\u793a\u5b57\u7b26\u4e32\\(x\\)\u4ece\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u5f00\u59cb\u7684\u5b50\u4e32\u3002</p> <p>\u5219\uff1a</p> <ul> <li>\u5f53\\(x, y\\)\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e0d\u540c\u65f6\uff0c\u6709\\(f(x, y) = f(x + 1, y)\\)</li> <li>\u5f53\\(x, y\\)\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5339\u914d\u65f6\uff0c\u6709\\(f(x, y) = f(x + 1, y + 1) + f(x + 1, y)\\)</li> </ul> <p>\u7279\u6b8a\u5730\uff0c\u5f53\\(y\\)\u4e3a\u7a7a\u5b57\u7b26\u4e32\u65f6\uff0c\u8bf4\u660e\u5b57\u7b26\u4e32\u5339\u914d\u7ed3\u675f\uff0c\u5bf9\u5e94\u4e00\u4e2a\u5339\u914d\u6210\u529f\u7684\u5b50\u4e32\uff0c\u56e0\u6b64\\(f(x, \\varnothing) = 1\\)\u3002\u5f53\\(x\\)\u4e3a\u7a7a\u5b57\u7b26\u4e32\u4e14\\(y\\)\u4e0d\u4e3a\u7a7a\u5b57\u7b26\u4e32\u65f6\uff0c\u8bf4\u660e\u5b57\u7b26\u4e32\u5339\u914d\u5931\u8d25\uff0c\\(f(\\varnothing, y) = \\left\\{\\begin{aligned}&amp;0 &amp;y\\not = \\varnothing \\\\ &amp; 1 &amp;y=\\varnothing\\end{aligned}\\right .\\)\u3002</p> <p>\u7531\u6b64\uff0c\u53ef\u4ee5\u521d\u6b65\u5f97\u51fa\u9012\u5f52\u4ee3\u7801\uff1a</p> <pre><code>int numDistinct(char * s, char * t){\nif (!*t)\nreturn 1;\nif (!*s)\nreturn 0;\nint ret = 0;\nif (*s == *t)\nret += numDistinct(s + 1, t + 1);\nret += numDistinct(s + 1, t);\nreturn ret;\n}\n</code></pre> <p>\u5982\u4e0a\u4ee3\u7801\u4f1a\u9020\u6210\u8d85\u65f6\uff0c\u539f\u56e0\u662f\u9012\u5f52\u65f6\u51fa\u73b0\u4e86\u5206\u652f\u5bfc\u81f4\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(2^n\\)\u3002\u4f7f\u7528\u6570\u7ec4\u5b58\u50a8\u5386\u53f2\u7ed3\u679c\u53ef\u4ee5\u907f\u514d\u9012\u5f52\u4ea7\u751f\u5206\u652f\uff0c\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\uff1a</p> <pre><code>int cached(char *s, char *t, int x, int y, int **buffer) {\nint ret = 0;\nif (!*t)\nret = 1;\nelse if (!*s)\nret = 0;\nelse\n{\nif (buffer[x][y] &gt;= 0)\nreturn buffer[x][y];\nif (*s == *t)\nret += cached(s + 1, t + 1, x + 1, y + 1, buffer);\nret += cached(s + 1, t, x + 1, y, buffer);\nbuffer[x][y] = ret;\n}\nreturn ret;\n}\nint numDistinct(char * s, char * t){\nint x = strlen(s), y = strlen(t);\nint *_buffer = (int *)malloc(sizeof(int) * x * y);\nint **buffer = (int **)malloc(sizeof(int *) * x);\nfor (int i = 0; i &lt; x; i++)\nbuffer[i] = _buffer + i * y;\nmemset(_buffer, 0xff, sizeof(int) * x * y);\nreturn cached(s, t, 0, 0, buffer);\n}\n</code></pre>","tags":["\u5b57\u7b26\u4e32","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/118/","title":"118. \u6768\u8f89\u4e09\u89d2","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/118/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570numRows\uff0c\u751f\u6210\u6768\u8f89\u4e09\u89d2\u7684\u524dnumRows\u884c\u3002</p> <p></p> <p>\u5728\u6768\u8f89\u4e09\u89d2\u4e2d\uff0c\u6bcf\u4e2a\u6570\u662f\u5b83\u5de6\u4e0a\u65b9\u548c\u53f3\u4e0a\u65b9\u7684\u6570\u7684\u548c\u3002</p> <p>\u793a\u4f8b\uff1a <pre><code>\u8f93\u5165: 5\n\u8f93\u51fa:\n[\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]\n</code></pre></p> <p>Reference</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/118/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u6839\u636e\u6768\u8f89\u4e09\u89d2\u7684\u5b9a\u4e49\uff0c\u901a\u8fc7\u9012\u5f52\u9010\u884c\u6784\u9020\u51fa\u6bcf\u4e00\u884c\u7684\u503c</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>/**\n * Return an array of arrays of size *returnSize.\n * The sizes of the arrays are returned as *returnColumnSizes array.\n * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().\n */\nint **generate(int numRows, int *returnSize, int **returnColumnSizes)\n{\n*returnSize = numRows;\nif (numRows == 0)\nreturn NULL;\nif (numRows == 1)\n{\n*returnColumnSizes = (int *)malloc(sizeof(int));\n**returnColumnSizes = 1;\nint **ret = (int **)malloc(sizeof(int *));\n*ret = (int *)malloc(sizeof(int));\n**ret = 1;\nreturn ret;\n}\nint retSize = 0,\n*oldRetColSizes = NULL,\n**rec = generate(numRows - 1, &amp;retSize, &amp;oldRetColSizes), i = 0;\n**ret = (int **)memcpy(malloc(sizeof(int *) * numRows), rec, (numRows - 1) * sizeof(int *));\n*newRetColSizes = memcpy((int *)malloc(sizeof(int) * numRows), oldRetColSizes, (numRows - 1) * sizeof(int));\n*tempArray = (int *)malloc(sizeof(int) * numRows);\n\nfree(oldRetColSizes);\nfree(rec);\n\nnewRetColSizes[numRows - 1] = numRows;\nfor (i = 1; i &lt; numRows - 1; i++)\ntempArray[i] = *(ret[numRows - 2] + i) + *(ret[numRows - 2] + i - 1);\ntempArray[0] = 1;\ntempArray[numRows - 1] = 1;\nret[numRows - 1] = tempArray;\n\n*returnColumnSizes = newRetColSizes;\nreturn ret;\n}\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/119/","title":"119. \u6768\u8f89\u4e09\u89d2 II","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/119/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u7d22\u5f15\\(k\\)\uff0c\u5176\u4e2d\\(k\\leq33\\)\uff0c\u8fd4\u56de\u6768\u8f89\u4e09\u89d2\u7684\u7b2c\\(k\\) \u884c\u3002</p> <p></p> <p>\u5728\u6768\u8f89\u4e09\u89d2\u4e2d\uff0c\u6bcf\u4e2a\u6570\u662f\u5b83\u5de6\u4e0a\u65b9\u548c\u53f3\u4e0a\u65b9\u7684\u6570\u7684\u548c\u3002</p> <p>\u793a\u4f8b\uff1a <pre><code>\u8f93\u5165: 3\n\u8f93\u51fa: [1,3,3,1]\n</code></pre> \u8fdb\u9636\uff1a</p> <p>\u4f60\u53ef\u4ee5\u4f18\u5316\u4f60\u7684\u7b97\u6cd5\u5230\\(O(k)\\)\u7a7a\u95f4\u590d\u6742\u5ea6\u5417\uff1f</p> <p>Reference</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/119/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u5f53\u524d\u884c\u7684\u7ed3\u679c\u4ec5\u4f9d\u8d56\u4e8e\u4e0a\u4e00\u884c\u7684\u7ed3\u679c\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nvoid recur(int rowIndex, int *Filling)\n{\nif (rowIndex &lt;= 1)\nreturn;\nrecur(rowIndex - 1, Filling);\nfor (int i = rowIndex - 1; i &gt; 0; i--)\nFilling[i] += Filling[i - 1];\n}\n\nint* getRow(int rowIndex, int* returnSize){\n*returnSize = rowIndex + 1;\nint *ret = (int *)memset(malloc(sizeof(int) * *returnSize), 0, sizeof(int) * *returnSize);\nret[0] = 1;\nrecur(*returnSize, ret);\nreturn ret;\n}\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/120/","title":"120. \u4e09\u89d2\u5f62\u6700\u5c0f\u8def\u5f84\u548c","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/120/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u627e\u51fa\u81ea\u9876\u5411\u4e0b\u7684\u6700\u5c0f\u8def\u5f84\u548c\u3002\u6bcf\u4e00\u6b65\u53ea\u80fd\u79fb\u52a8\u5230\u4e0b\u4e00\u884c\u4e2d\u76f8\u90bb\u7684\u7ed3\u70b9\u4e0a\u3002</p> <p>\u76f8\u90bb\u7684\u7ed3\u70b9 \u5728\u8fd9\u91cc\u6307\u7684\u662f <code>\u4e0b\u6807</code> \u4e0e <code>\u4e0a\u4e00\u5c42\u7ed3\u70b9\u4e0b\u6807</code> \u76f8\u540c\u6216\u8005\u7b49\u4e8e <code>\u4e0a\u4e00\u5c42\u7ed3\u70b9\u4e0b\u6807 + 1</code> \u7684\u4e24\u4e2a\u7ed3\u70b9\u3002</p> <p>\u4f8b\u5982\uff0c\u7ed9\u5b9a\u4e09\u89d2\u5f62\uff1a</p> <pre><code>[\n     [2],\n    [3,4],\n   [6,5,7],\n  [4,1,8,3]\n]\n</code></pre> <p>\u81ea\u9876\u5411\u4e0b\u7684\u6700\u5c0f\u8def\u5f84\u548c\u4e3a<code>11</code>\uff08\u5373\uff0c2\u00a0+\u00a03\u00a0+\u00a05\u00a0+\u00a01\u00a0= 11\uff09\u3002</p> <p>\u8bf4\u660e\uff1a</p> <p>\u5982\u679c\u4f60\u53ef\u4ee5\u53ea\u4f7f\u7528\\(O(n)\\)\u7684\u989d\u5916\u7a7a\u95f4\uff08\\(n\\)\u4e3a\u4e09\u89d2\u5f62\u7684\u603b\u884c\u6570\uff09\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u90a3\u4e48\u4f60\u7684\u7b97\u6cd5\u4f1a\u5f88\u52a0\u5206\u3002</p> <p>Reference</p>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/120/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u52a8\u6001\u89c4\u5212\uff0c\u4f7f\u7528\u4e09\u89d2\u5f62\u7684\u6700\u540e\u4e00\u884c\u5b58\u653e\u6700\u5c0f\u7684\u548c\uff0c\u4ece\u4e0b\u5f80\u4e0a\u8fdb\u884c\u8ba1\u7b97\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>#define MIN(x, y) (x &lt; y ? x : y)\nint minimumTotal(int **triangle, int triangleSize, int *triangleColSize)\n{\nif (!triangleSize)\nreturn 0;\nint *dp1 = triangle[triangleSize - 1], i = 0, j = 0;\nfor (i = triangleSize - 1; i &gt; 0; i--)\nfor (j = 0; j &lt; triangleColSize[i - 1]; j++)\ndp1[j] = triangle[i - 1][j] + MIN(dp1[j], dp1[j + 1]);\nreturn dp1[0];\n}\n</code></pre>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/121/","title":"121. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/121/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5b83\u7684\u7b2c\u00a0i \u4e2a\u5143\u7d20\u662f\u4e00\u652f\u7ed9\u5b9a\u80a1\u7968\u7b2c i \u5929\u7684\u4ef7\u683c\u3002</p> <p>\u5982\u679c\u4f60\u6700\u591a\u53ea\u5141\u8bb8\u5b8c\u6210\u4e00\u7b14\u4ea4\u6613\uff08\u5373\u4e70\u5165\u548c\u5356\u51fa\u4e00\u652f\u80a1\u7968\u4e00\u6b21\uff09\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u8ba1\u7b97\u4f60\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\u3002</p> <p>\u6ce8\u610f\uff1a\u4f60\u4e0d\u80fd\u5728\u4e70\u5165\u80a1\u7968\u524d\u5356\u51fa\u80a1\u7968\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165: [7,1,5,3,6,4]\n\u8f93\u51fa: 5\n\u89e3\u91ca: \u5728\u7b2c 2 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 1\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 5 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 6\uff09\u7684\u65f6\u5019\u5356\u51fa\uff0c\u6700\u5927\u5229\u6da6 = 6-1 = 5 \u3002\n     \u6ce8\u610f\u5229\u6da6\u4e0d\u80fd\u662f 7-1 = 6, \u56e0\u4e3a\u5356\u51fa\u4ef7\u683c\u9700\u8981\u5927\u4e8e\u4e70\u5165\u4ef7\u683c\uff1b\u540c\u65f6\uff0c\u4f60\u4e0d\u80fd\u5728\u4e70\u5165\u524d\u5356\u51fa\u80a1\u7968\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165: [7,6,4,3,1]\n\u8f93\u51fa: 0\n\u89e3\u91ca: \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b, \u6ca1\u6709\u4ea4\u6613\u5b8c\u6210, \u6240\u4ee5\u6700\u5927\u5229\u6da6\u4e3a 0\u3002\n</code></pre> <p>Reference</p>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/121/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u627e\u51fa\u76f8\u5dee\u6700\u5927\u7684\u6ee1\u8db3\\(a_i &lt; a_j\\)\u4e14\\(i &lt; j\\)\u7684\u4e24\u4e2a\u6570\u5373\u53ef\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>int maxProfit(int* prices, int pricesSize){\nint max = 0, i = pricesSize - 1, value = 0, profit = 0;\nfor (; i&gt;=0; i--)\n{\nif (prices[i] &gt; value)\nvalue = prices[i];\nelse\nprofit = value - prices[i];\nmax = max &gt; profit ? max : profit;\n}\nreturn max;\n}\n</code></pre>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/122/","title":"122. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u8d2a\u5fc3\u7b97\u6cd5","\u6570\u7ec4"]},{"location":"coding/leetcode/122/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5b83\u7684\u7b2c\u00a0i \u4e2a\u5143\u7d20\u662f\u4e00\u652f\u7ed9\u5b9a\u80a1\u7968\u7b2c i \u5929\u7684\u4ef7\u683c\u3002</p> <p>\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u8ba1\u7b97\u4f60\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\u3002\u4f60\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5730\u5b8c\u6210\u66f4\u591a\u7684\u4ea4\u6613\uff08\u591a\u6b21\u4e70\u5356\u4e00\u652f\u80a1\u7968\uff09\u3002</p> <p>\u6ce8\u610f\uff1a\u4f60\u4e0d\u80fd\u540c\u65f6\u53c2\u4e0e\u591a\u7b14\u4ea4\u6613\uff08\u4f60\u5fc5\u987b\u5728\u518d\u6b21\u8d2d\u4e70\u524d\u51fa\u552e\u6389\u4e4b\u524d\u7684\u80a1\u7968\uff09\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165: [7,1,5,3,6,4]\n\u8f93\u51fa: 7\n\u89e3\u91ca: \u5728\u7b2c 2 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 1\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 3 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 5\uff09\u7684\u65f6\u5019\u5356\u51fa, \u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 5-1 = 4 \u3002\n\u00a0    \u968f\u540e\uff0c\u5728\u7b2c 4 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 3\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 5 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 6\uff09\u7684\u65f6\u5019\u5356\u51fa, \u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 6-3 = 3 \u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165: [1,2,3,4,5]\n\u8f93\u51fa: 4\n\u89e3\u91ca: \u5728\u7b2c 1 \u5929\uff08\u80a1\u7968\u4ef7\u683c = 1\uff09\u7684\u65f6\u5019\u4e70\u5165\uff0c\u5728\u7b2c 5 \u5929 \uff08\u80a1\u7968\u4ef7\u683c = 5\uff09\u7684\u65f6\u5019\u5356\u51fa, \u8fd9\u7b14\u4ea4\u6613\u6240\u80fd\u83b7\u5f97\u5229\u6da6 = 5-1 = 4 \u3002\n\u00a0    \u6ce8\u610f\u4f60\u4e0d\u80fd\u5728\u7b2c 1 \u5929\u548c\u7b2c 2 \u5929\u63a5\u8fde\u8d2d\u4e70\u80a1\u7968\uff0c\u4e4b\u540e\u518d\u5c06\u5b83\u4eec\u5356\u51fa\u3002\n\u00a0    \u56e0\u4e3a\u8fd9\u6837\u5c5e\u4e8e\u540c\u65f6\u53c2\u4e0e\u4e86\u591a\u7b14\u4ea4\u6613\uff0c\u4f60\u5fc5\u987b\u5728\u518d\u6b21\u8d2d\u4e70\u524d\u51fa\u552e\u6389\u4e4b\u524d\u7684\u80a1\u7968\u3002\n</code></pre> <p>\u793a\u4f8b\u00a03\uff1a</p> <pre><code>\u8f93\u5165: [7,6,4,3,1]\n\u8f93\u51fa: 0\n\u89e3\u91ca: \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b, \u6ca1\u6709\u4ea4\u6613\u5b8c\u6210, \u6240\u4ee5\u6700\u5927\u5229\u6da6\u4e3a 0\u3002\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>1 &lt;= prices.length &lt;= 3 * 10 ^ 4</code></li> <li><code>0 &lt;= prices[i]\u00a0&lt;= 10 ^ 4</code></li> </ul> <p>Reference</p>","tags":["\u8d2a\u5fc3\u7b97\u6cd5","\u6570\u7ec4"]},{"location":"coding/leetcode/122/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a </p> <ol> <li>\u5f53\u6570\u7ec4\u957f\u5ea6\u4e3a1\u65f6\uff0c\u4e0d\u80fd\u83b7\u53d6\u4efb\u4f55\u5229\u6da6\uff0c\u8fd4\u56de<code>0</code>\uff1b</li> <li>\u4ece\u6570\u7ec4\u672b\u5c3e\u5f00\u59cb\u641c\u7d22\u7b2c\u4e00\u4e2a\u80fd\u76c8\u5229\u7684\u70b9\uff0c\u5219\u6700\u5927\u5229\u6da6\u4e3a\u672c\u6b21\u76c8\u5229\u4e0e\u4e4b\u524d\u6700\u5927\u76c8\u5229\u4e4b\u548c\u3002</li> </ol> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>int maxProfit(int* prices, int pricesSize){\nif (pricesSize &lt; 2)\nreturn 0;\nint *cur = prices + pricesSize - 1, currentVal = *cur, len = pricesSize;\nwhile(cur &gt; prices)\n{\nif (*cur &lt; *(cur - 1))\nbreak;\nlen--;\ncur--;\n}\nreturn (currentVal - *cur) + maxProfit(prices, len - 1);\n}\n</code></pre>","tags":["\u8d2a\u5fc3\u7b97\u6cd5","\u6570\u7ec4"]},{"location":"coding/leetcode/125/","title":"125. \u9a8c\u8bc1\u56de\u6587\u4e32","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/125/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u9a8c\u8bc1\u5b83\u662f\u5426\u662f\u56de\u6587\u4e32\uff0c\u53ea\u8003\u8651\u5b57\u6bcd\u548c\u6570\u5b57\u5b57\u7b26\uff0c\u53ef\u4ee5\u5ffd\u7565\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u3002</p> <p>\u8bf4\u660e\uff1a \u672c\u9898\u4e2d\uff0c\u6211\u4eec\u5c06\u7a7a\u5b57\u7b26\u4e32\u5b9a\u4e49\u4e3a\u6709\u6548\u7684\u56de\u6587\u4e32\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165: \"A man, a plan, a canal: Panama\"\n\u8f93\u51fa: true\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165: \"race a car\"\n\u8f93\u51fa: false\n</code></pre> <p>Reference</p>","tags":["\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/125/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u4f7f\u7528\u53cc\u6307\u9488\u6cd5\u8fdb\u884c\u5904\u7406\uff0c\u9700\u8981\u6ce8\u610f\u5982\u4e0b\u7279\u6b8a\u60c5\u51b5</p> <ol> <li>\u9700\u8981\u5ffd\u7565\u5b57\u7b26\u4e32\u4e2d\u7684\u7b26\u53f7\u800c\u53ea\u8003\u8651\u5b57\u6bcd\u548c\u6570\u5b57</li> <li>\u5927\u5c0f\u5199\u7684ASCII\u6570\u503c\u76f8\u5dee32\uff0c\u4f46ASCII\u6570\u503c\u76f8\u5dee32\u7684\u4e24\u4e2a\u5b57\u7b26\u4e0d\u4e00\u5b9a\u662f\u5927\u5c0f\u5199\u5173\u7cfb\uff0c\u5982<code>'0'</code>(48)\u4e0e<code>'P'</code>(80)</li> </ol> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>bool isText(char s)\n{\nreturn (s &gt;= 'A' &amp;&amp; s &lt;= 'Z') || (s &gt;= 'a' &amp;&amp; s &lt;= 'z') || (s &gt;= '0' &amp;&amp; s &lt;= '9');\n}\nbool isSame(char s1, char s2)\n{\nreturn (s1 == s2) || (s2 &gt;= 'A' &amp;&amp; s1 - s2 == 32) || (s1 &gt;= 'A' &amp;&amp; s2 - s1 == 32);\n}\nbool isPalindrome(char * s){\nint len = strlen(s), head = 0, tail = len - 1;\nwhile (head &lt; len &amp;&amp; !isText(s[head]))\nhead++;\nwhile (tail &gt;= 0 &amp;&amp; !isText(s[tail]))\ntail--;\nwhile(tail &gt; head &amp;&amp; head &lt; len &amp;&amp; tail &gt;= 0)\n{\nif (!isSame(s[head], s[tail]))\nreturn false;\nhead++;\ntail--;\nwhile (!isText(s[head]))\nhead++;\nwhile (!isText(s[tail]))\ntail--;\n}\nreturn true;\n}\n</code></pre>","tags":["\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/1283/","title":"1283. \u4f7f\u7ed3\u679c\u4e0d\u8d85\u8fc7\u9608\u503c\u7684\u6700\u5c0f\u9664\u6570","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/1283/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u00a0<code>nums</code> \u548c\u4e00\u4e2a\u6b63\u6574\u6570\u00a0<code>threshold</code>\u00a0\uff0c\u4f60\u9700\u8981\u9009\u62e9\u4e00\u4e2a\u6b63\u6574\u6570\u4f5c\u4e3a\u9664\u6570\uff0c\u7136\u540e\u5c06\u6570\u7ec4\u91cc\u6bcf\u4e2a\u6570\u90fd\u9664\u4ee5\u5b83\uff0c\u5e76\u5bf9\u9664\u6cd5\u7ed3\u679c\u6c42\u548c\u3002</p> <p>\u8bf7\u4f60\u627e\u51fa\u80fd\u591f\u4f7f\u4e0a\u8ff0\u7ed3\u679c\u5c0f\u4e8e\u7b49\u4e8e\u9608\u503c\u00a0<code>threshold</code>\u00a0\u7684\u9664\u6570\u4e2d \u6700\u5c0f \u7684\u90a3\u4e2a\u3002</p> <p>\u6bcf\u4e2a\u6570\u9664\u4ee5\u9664\u6570\u540e\u90fd\u5411\u4e0a\u53d6\u6574\uff0c\u6bd4\u65b9\u8bf4 7/3 = 3 \uff0c 10/2 = 5 \u3002</p> <p>\u9898\u76ee\u4fdd\u8bc1\u4e00\u5b9a\u6709\u89e3\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [1,2,5,9], threshold = 6\n\u8f93\u51fa\uff1a5\n\u89e3\u91ca\uff1a\u5982\u679c\u9664\u6570\u4e3a 1 \uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u548c\u4e3a 17 \uff081+2+5+9\uff09\u3002\n\u5982\u679c\u9664\u6570\u4e3a 4 \uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u548c\u4e3a 7 (1+1+2+3) \u3002\u5982\u679c\u9664\u6570\u4e3a 5 \uff0c\u548c\u4e3a 5 (1+1+1+2)\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [2,3,5,7,11], threshold = 11\n\u8f93\u51fa\uff1a3\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [19], threshold = 5\n\u8f93\u51fa\uff1a4\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 5 * 10^4</code></li> <li><code>1 &lt;= nums[i] &lt;= 10^6</code></li> <li><code>nums.length &lt;=\u00a0threshold &lt;= 10^6</code></li> </ul> <p>Reference</p>","tags":["\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/1283/#_2","title":"\u9898\u89e3","text":"<p>\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u627e\u5230\u6700\u5c0f\u7684\u9664\u6570</p> <p>\u5982\u679c\u7ed3\u679c\u5927\u4e8e<code>threshold</code>\uff0c\u8bf4\u660e\u9664\u6570\u8fc7\u5c0f\uff0c\u9700\u8981\u5728\u5f85\u67e5\u533a\u95f4\u53f3\u4fa7\u67e5\u627e\uff0c\u5426\u5219\u5728\u5de6\u4fa7\u67e5\u627e</p> <pre><code>bool test(int *nums, int numsSize, int threshold, int x)\n{\nif (!x)\nreturn INT_MAX;\nint ret = 0, i = 0;\nfor (i = 0; i &lt; numsSize; i++)\nret += (nums[i] + x - 1) / x;\nreturn ret &lt;= threshold;\n}\n\nint bSearch(int *nums, int numsSize, int threshold, int lo, int hi)\n{\nif (hi - lo == 1)\nreturn hi;\nint mid = (hi + lo) &gt;&gt; 1;\nif (!test(nums, numsSize, threshold, mid))\nreturn bSearch(nums, numsSize, threshold, mid, hi);\nelse\nreturn bSearch(nums, numsSize, threshold, lo, mid);\n}\n\nint smallestDivisor(int* nums, int numsSize, int threshold){\nint max = 0, i = 0;\nfor (i = 0; i &lt; numsSize; i++)\nif (max &lt; nums[i])\nmax = nums[i];\nreturn bSearch(nums, numsSize, threshold, 0, max);\n}\n</code></pre> <pre><code>class Solution:\n    def bSearch(self, nums: List[int], threshold: int, lo: int, hi: int) -&gt; int:\n        if hi - lo == 1:\n            return hi\n        mid = (lo + hi) &gt;&gt; 1\n        return self.bSearch(nums, threshold, lo, mid) \\\n            if sum([math.ceil(_ / mid) for _ in nums]) &lt;= threshold \\\n            else self.bSearch(nums, threshold, mid, hi)\n    def smallestDivisor(self, nums: List[int], threshold: int) -&gt; int:\n        return self.bSearch(nums, threshold, 0, max(nums));\n</code></pre>","tags":["\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/13/","title":"13. \u7f57\u9a6c\u6570\u5b57\u8f6c\u6574\u6570","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/13/#_1","title":"\u9898\u76ee","text":"<p>\u7f57\u9a6c\u6570\u5b57\u5305\u542b\u4ee5\u4e0b\u4e03\u79cd\u5b57\u7b26:<code>I</code>\uff0c<code>V</code>\uff0c<code>X</code>\uff0c<code>L</code>\uff0c<code>C</code>\uff0c<code>D</code>\u548c<code>M</code>\u3002</p> <p><pre><code>\u5b57\u7b26          \u6570\u503c\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000\n</code></pre> \u4f8b\u5982\uff0c \u7f57\u9a6c\u6570\u5b57 2 \u5199\u505a<code>II</code>\u00a0\uff0c\u5373\u4e3a\u4e24\u4e2a\u5e76\u5217\u7684 1\u300212 \u5199\u505a<code>XII</code>\u00a0\uff0c\u5373\u4e3a<code>X</code>\u00a0+\u00a0<code>II</code>\u3002 27 \u5199\u505a<code>XXVII</code>, \u5373\u4e3a\u00a0<code>XX</code>\u00a0+\u00a0<code>V</code>\u00a0+\u00a0<code>II</code>\u3002</p> <p>\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u7f57\u9a6c\u6570\u5b57\u4e2d\u5c0f\u7684\u6570\u5b57\u5728\u5927\u7684\u6570\u5b57\u7684\u53f3\u8fb9\u3002\u4f46\u4e5f\u5b58\u5728\u7279\u4f8b\uff0c\u4f8b\u5982 4 \u4e0d\u5199\u505a<code>IIII</code>\uff0c\u800c\u662f<code>IV</code>\u3002\u6570\u5b57 1 \u5728\u6570\u5b57 5 \u7684\u5de6\u8fb9\uff0c\u6240\u8868\u793a\u7684\u6570\u7b49\u4e8e\u5927\u6570 5 \u51cf\u5c0f\u6570 1 \u5f97\u5230\u7684\u6570\u503c 4 \u3002\u540c\u6837\u5730\uff0c\u6570\u5b57 9 \u8868\u793a\u4e3a<code>IX</code>\u3002\u8fd9\u4e2a\u7279\u6b8a\u7684\u89c4\u5219\u53ea\u9002\u7528\u4e8e\u4ee5\u4e0b\u516d\u79cd\u60c5\u51b5\uff1a</p> <p><code>I</code>\u53ef\u4ee5\u653e\u5728\u00a0<code>V</code>\u00a0(5) \u548c\u00a0<code>X</code>\u00a0(10) \u7684\u5de6\u8fb9\uff0c\u6765\u8868\u793a 4 \u548c 9\u3002 <code>X</code>\u53ef\u4ee5\u653e\u5728\u00a0<code>L</code>\u00a0(50) \u548c\u00a0<code>C</code>\u00a0(100) \u7684\u5de6\u8fb9\uff0c\u6765\u8868\u793a 40 \u548c\u00a090\u3002\u00a0 <code>C</code>\u53ef\u4ee5\u653e\u5728\u00a0<code>D</code>\u00a0(500) \u548c\u00a0<code>M</code>\u00a0(1000) \u7684\u5de6\u8fb9\uff0c\u6765\u8868\u793a\u00a0400 \u548c\u00a0900\u3002 \u7ed9\u5b9a\u4e00\u4e2a\u7f57\u9a6c\u6570\u5b57\uff0c\u5c06\u5176\u8f6c\u6362\u6210\u6574\u6570\u3002\u8f93\u5165\u786e\u4fdd\u5728 1\u00a0\u5230 3999 \u7684\u8303\u56f4\u5185\u3002</p> <p>\u793a\u4f8b\u00a01\uff1a</p> <pre><code>\u8f93\u5165:\u00a0\"III\"\n\u8f93\u51fa: 3\n</code></pre> <p>\u793a\u4f8b\u00a02\uff1a</p> <pre><code>\u8f93\u5165:\u00a0\"IV\"\n\u8f93\u51fa: 4\n</code></pre> <p>\u793a\u4f8b\u00a03\uff1a</p> <pre><code>\u8f93\u5165:\u00a0\"IX\"\n\u8f93\u51fa: 9\n</code></pre> <p>\u793a\u4f8b\u00a04\uff1a</p> <pre><code>\u8f93\u5165:\u00a0\"LVIII\"\n\u8f93\u51fa: 58\n\u89e3\u91ca: L = 50, V= 5, III = 3.\n</code></pre> <p>\u793a\u4f8b\u00a05\uff1a</p> <pre><code>\u8f93\u5165:\u00a0\"MCMXCIV\"\n\u8f93\u51fa: 1994\n\u89e3\u91ca: M = 1000, CM = 900, XC = 90, IV = 4.\n</code></pre> <p>\u63d0\u793a\uff1a</p> <p>\u9898\u76ee\u6240\u7ed9\u6d4b\u8bd5\u7528\u4f8b\u7686\u7b26\u5408\u7f57\u9a6c\u6570\u5b57\u4e66\u5199\u89c4\u5219\uff0c\u4e0d\u4f1a\u51fa\u73b0\u8de8\u4f4d\u7b49\u60c5\u51b5\u3002</p> <p><code>IC</code>\u548c<code>IM</code>\u8fd9\u6837\u7684\u4f8b\u5b50\u5e76\u4e0d\u7b26\u5408\u9898\u76ee\u8981\u6c42\uff0c49 \u5e94\u8be5\u5199\u4f5c<code>XLIX</code>\uff0c999 \u5e94\u8be5\u5199\u4f5c <code>CMXCIX</code>\u3002</p> <p>\u5173\u4e8e\u7f57\u9a6c\u6570\u5b57\u7684\u8be6\u5c3d\u4e66\u5199\u89c4\u5219\uff0c\u53ef\u4ee5\u53c2\u8003\u7f57\u9a6c\u6570\u5b57 - Mathematics\u3002</p> <p>Reference</p>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/13/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u9010\u4f4d\u5904\u7406\u5373\u53ef\uff0c\u6ce8\u610f\u5c0f\u7684\u6570\u5b57\u5728\u5927\u7684\u6570\u5b57\u5de6\u8fb9\u7684\u7279\u6b8a\u60c5\u51b5</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>int romanToInt(char * s){\nchar *cur = s;\nint ret = 0;\nwhile(*cur)\n{\nswitch(*cur)\n{\ncase 'I':\nif (*(cur + 1) == 'V' || *(cur + 1) == 'X')\nret -= 1;\nelse\nret += 1;\nbreak;\ncase 'V':\nret += 5;\nbreak;\ncase 'X':\nif (*(cur + 1) == 'L' || *(cur + 1) == 'C')\nret -= 10;\nelse\nret += 10;\nbreak;\ncase 'L':\nret += 50;\nbreak;\ncase 'C':\nif (*(cur + 1) == 'D' || *(cur + 1) == 'M')\nret -= 100;\nelse\nret += 100;\nbreak;\ncase 'M':\nret += 500;\ncase 'D':\nret += 500;\n}\ncur++;\n}\nreturn ret;\n}\n</code></pre>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/1300/","title":"1300. \u8f6c\u53d8\u6570\u7ec4\u540e\u6700\u63a5\u8fd1\u76ee\u6807\u503c\u7684\u6570\u7ec4\u548c","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/1300/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u00a0<code>arr</code> \u548c\u4e00\u4e2a\u76ee\u6807\u503c\u00a0<code>target</code> \uff0c\u8bf7\u4f60\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u00a0<code>value</code>\u00a0\uff0c\u4f7f\u5f97\u5c06\u6570\u7ec4\u4e2d\u6240\u6709\u5927\u4e8e\u00a0<code>value</code> \u7684\u503c\u53d8\u6210\u00a0<code>value</code> \u540e\uff0c\u6570\u7ec4\u7684\u548c\u6700\u63a5\u8fd1 <code>target</code> \uff08\u6700\u63a5\u8fd1\u8868\u793a\u4e24\u8005\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u6700\u5c0f\uff09\u3002</p> <p>\u5982\u679c\u6709\u591a\u79cd\u4f7f\u5f97\u548c\u6700\u63a5\u8fd1\u00a0<code>target</code>\u00a0\u7684\u65b9\u6848\uff0c\u8bf7\u4f60\u8fd4\u56de\u8fd9\u4e9b\u6574\u6570\u4e2d\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u7b54\u6848\u4e0d\u4e00\u5b9a\u662f\u00a0<code>arr</code> \u4e2d\u7684\u6570\u5b57\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1aarr = [4,9,3], target = 10\n\u8f93\u51fa\uff1a3\n\u89e3\u91ca\uff1a\u5f53\u9009\u62e9 value \u4e3a 3 \u65f6\uff0c\u6570\u7ec4\u4f1a\u53d8\u6210 [3, 3, 3]\uff0c\u548c\u4e3a 9 \uff0c\u8fd9\u662f\u6700\u63a5\u8fd1 target \u7684\u65b9\u6848\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1aarr = [2,3,5], target = 10\n\u8f93\u51fa\uff1a5\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1aarr = [60864,25176,27249,21296,20204], target = 56803\n\u8f93\u51fa\uff1a11361\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>1 &lt;= arr.length &lt;= 10^4</code></li> <li><code>1 &lt;= arr[i], target &lt;= 10^5</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/1300/#_2","title":"\u9898\u89e3","text":"<p>\u5728\u5f85\u67e5\u533a\u95f4\\((lo, hi)\\)\u4e2d\u786e\u5b9a\u4e09\u7b49\u5206\u70b9\\(x_1, x_2 (x_1 &lt; x_2)\\)\uff0c\u5206\u522b\u8ba1\u7b97\u4e24\u4e2a\u4e09\u7b49\u5206\u70b9\u5904\u7684\u5dee\u503c\u3002\u8bbe\\(f(x)\\)\u4e3a\u5c06\u6570\u7ec4\u4e2d\u5927\u4e8e\\(x\\)\u7684\u6570\u503c\u8f6c\u53d8\u4e3a\\(x\\)\u540e\u6570\u7ec4\u6c42\u548c\u4e0e\u76ee\u6807\u503c\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u3002</p> <ul> <li>\u5f53\\(f(x_1) &lt; f(x_2)\\)\u65f6\uff0c\u5c06\u5f85\u67e5\u533a\u95f4\u7f29\u51cf\u4e3a\\((lo, x_2)\\)</li> <li>\u5f53\\(f(x_1) &gt; f(x_2)\\)\u65f6\uff0c\u5c06\u5f85\u67e5\u533a\u95f4\u7f29\u51cf\u4e3a\\((x_1, hi)\\)</li> </ul> <p>\\(f(x)\\)\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u67e5\u627e+\u9884\u5904\u7406\u5728\\(\\mathcal O(\\log N)\\)\u7684\u65f6\u95f4\u5185\u8ba1\u7b97\u5b8c\u6210\u3002\u9884\u5904\u7406\u9700\u8981\u82b1\u8d39\\(\\mathcal O(N)\\)\u7684\u65f6\u95f4\u3002\u6392\u5e8f\u9700\u8981\u82b1\u8d39\\(\\mathcal O(N\\log N)\\)\u7684\u65f6\u95f4\u3002\u9700\u8981\\(\\mathcal O(\\log N)\\)\u6b21\u4e09\u5206\u67e5\u627e\u3002\u56e0\u6b64\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\mathcal O(N\\log N)\\)\uff08\u9884\u5904\u7406\u9636\u6bb5\uff09</p> <pre><code>#define ABS(x) ((x) &gt; 0 ? (x) : -(x))\n\nint cmp(const void *a, const void *b)\n{\nreturn *((int *)a) - *((int *)b);\n}\n\nint bSearch(int *arr, int target, int lo, int hi)\n{\nint mid;\nwhile (lo &lt; hi)\n{\nmid = (lo + hi) &gt;&gt; 1;\nif (arr[mid] &lt; target)\nlo = mid + 1;\nelse\nhi = mid;\n}\nreturn lo - 1;\n}\n\nint test(int *arr, int arrSize, int target, int val, int *presum)\n{\nint i = bSearch(arr, val, 0, arrSize), ret = val * (arrSize - i - 1) - target;\nif (i &gt;= 0)\nret += presum[i];\nreturn ABS(ret);\n}\n\nint tSearch(int *arr, int arrSize, int target, int lo, int hi, int *presum)\n{\nint left, right;\nwhile (hi - lo &gt; 2)\n{\nleft = (2 * lo + hi) / 3;\nright = (2 * hi + lo) / 3;\nif (test(arr, arrSize, target, left, presum) &lt;= test(arr, arrSize, target, right, presum))\nhi = right;\nelse\nlo = left;\n}\nreturn (2 * hi + lo) / 3;\n}\n\nint findBestValue(int* arr, int arrSize, int target){\nint i = 0, presum[arrSize];\nqsort(arr, arrSize, sizeof(int), cmp);\npresum[0] = arr[0];\nfor (i = 1; i &lt; arrSize; i++)\npresum[i] = presum[i - 1] + arr[i];\n\nreturn tSearch(arr, arrSize, target, -1, arr[arrSize - 1] + 1, presum);\n}\n</code></pre>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/136/","title":"136. \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u4f4d\u8fd0\u7b97","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/136/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u6574\u6570\u6570\u7ec4\uff0c\u9664\u4e86\u67d0\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\u4ee5\u5916\uff0c\u5176\u4f59\u6bcf\u4e2a\u5143\u7d20\u5747\u51fa\u73b0\u4e24\u6b21\u3002\u627e\u51fa\u90a3\u4e2a\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u5143\u7d20\u3002</p> <p>\u8bf4\u660e\uff1a</p> <p>\u4f60\u7684\u7b97\u6cd5\u5e94\u8be5\u5177\u6709\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u3002 \u4f60\u53ef\u4ee5\u4e0d\u4f7f\u7528\u989d\u5916\u7a7a\u95f4\u6765\u5b9e\u73b0\u5417\uff1f</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165: [2,2,1]\n\u8f93\u51fa: 1\n</code></pre> <p>\u793a\u4f8b\u00a02\uff1a</p> <pre><code>\u8f93\u5165: [4,1,2,1,2]\n\u8f93\u51fa: 4\n</code></pre> <p>Reference</p>","tags":["\u4f4d\u8fd0\u7b97","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/136/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u5f02\u6216\u8fd0\u7b97\u5177\u6709\u5982\u4e0b\u6027\u8d28\uff1a</p> <ol> <li>\u4ea4\u6362\u5f8b\uff1a<code>a ^ b = b ^ a</code></li> <li>\u7ed3\u5408\u5f8b\uff1a<code>(a ^ b) ^ c = a ^ (b ^ c)</code></li> <li>\u82e5<code>a ^ b = c</code>\uff0c\u5219<code>a ^ c = b</code>\u3001<code>b ^ c = a</code></li> <li><code>a ^ a = 0</code></li> </ol> <p>\u6839\u636e\u6027\u8d281\u30012\uff0c\u5f02\u6216\u8fd0\u7b97\u7684\u7ed3\u679c\u4e0e\u53c2\u4e0e\u8fd0\u7b97\u7684\u6240\u6709\u6570\u503c\u7684\u6392\u5217\u987a\u5e8f\u65e0\u5173\u3002\u6839\u636e\u6027\u8d283\u30014\uff0c\u76f8\u540c\u6574\u6570\u7684\u5f02\u6216\u503c\u4e3a0\uff0c0\u4e0e\u4efb\u4f55\u6570\u5f02\u6216\u4ecd\u4e3a\u8be5\u6570\u3002\u56e0\u6b64\u5c06\u6570\u7ec4\u4e2d\u5404\u5143\u7d20\u8fdb\u884c\u6309\u4f4d\u5f02\u6216\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u5373\u4e3a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u503c\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>int singleNumber(int* nums, int numsSize){\nint ret = 0, i = 0;\nfor (i = 0; i &lt; numsSize; i++)\nret ^= nums[i];\nreturn ret;\n}\n</code></pre>","tags":["\u4f4d\u8fd0\u7b97","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/14/","title":"14. \u6700\u957f\u516c\u5171\u524d\u7f00","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/14/#_1","title":"\u9898\u76ee","text":"<p>\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u67e5\u627e\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u3002</p> <p>\u5982\u679c\u4e0d\u5b58\u5728\u516c\u5171\u524d\u7f00\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32<code>\"\"</code>\u3002</p> <p>\u793a\u4f8b\u00a01\uff1a</p> <pre><code>\u8f93\u5165: [\"flower\",\"flow\",\"flight\"]\n\u8f93\u51fa: \"fl\"\n</code></pre> <p>\u793a\u4f8b\u00a02\uff1a</p> <pre><code>\u8f93\u5165: [\"dog\",\"racecar\",\"car\"]\n\u8f93\u51fa: \"\"\n\u89e3\u91ca: \u8f93\u5165\u4e0d\u5b58\u5728\u516c\u5171\u524d\u7f00\u3002\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <p>\u6240\u6709\u8f93\u5165\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd<code>a-z</code>\u3002</p> <p>Reference</p>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/14/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u5728\u6bd4\u8f83\u524d\u7f00\u65f6\u53ea\u9700\u8981\u5c06\u524d n \u4e2a\u5b57\u7b26\u4e32\u7684\u516c\u5171\u524d\u7f00\u4e0e\u7b2c n+1 \u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>char *compareTwo(char *str1, char *str2)\n{\nchar *cur1 = str1, *cur2 = str2, *ret = NULL;\nint len = 0;\nwhile (*cur1 &amp;&amp; *cur2)\n{\nif (*cur1 != *cur2)\nbreak;\nelse\nlen++;\ncur1++;\ncur2++;\n}\nret = (char *)memset(malloc(sizeof(char) * (len + 1)), 0, sizeof(char) * (len + 1));\nreturn memcpy(ret, str1, sizeof(char) * len);\n}\n\nchar * longestCommonPrefix(char ** strs, int strsSize){\nif (strsSize == 0)\nreturn memset(malloc(sizeof(char)), 0, sizeof(char));\nif (strsSize == 1)\nreturn strs[0];\nif (strsSize == 2)\nreturn compareTwo(strs[0], strs[1]);\nint rec_size = (strsSize + 1) &gt;&gt; 1, i = 0;\nchar **rec = (char **)memset(malloc(sizeof(char *) * rec_size), 0, sizeof(char *) * rec_size);\nfor (i = 0; i &lt; strsSize &gt;&gt; 1; i++)\nrec[i] = compareTwo(strs[2 * i], strs[2 * i + 1]);\nif (strsSize &amp; 1)\nrec[rec_size - 1] = strs[strsSize - 1];\nreturn longestCommonPrefix(rec, rec_size);\n}\n</code></pre>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/150/","title":"150. \u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u6c42\u503c","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6808"]},{"location":"coding/leetcode/150/#_1","title":"\u9898\u76ee","text":"<p>\u6839\u636e\u9006\u6ce2\u5170\u8868\u793a\u6cd5\uff0c\u6c42\u8868\u8fbe\u5f0f\u7684\u503c\u3002</p> <p>\u6709\u6548\u7684\u7b97\u7b26\u5305\u62ec<code>+</code>\u3001<code>-</code>\u3001<code>*</code>\u3001<code>/</code>\u3002\u6bcf\u4e2a\u8fd0\u7b97\u5bf9\u8c61\u53ef\u4ee5\u662f\u6574\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u3002</p> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u6574\u6570\u9664\u6cd5\u53ea\u4fdd\u7559\u6574\u6570\u90e8\u5206\u3002</li> <li>\u7ed9\u5b9a\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u603b\u662f\u6709\u6548\u7684\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8868\u8fbe\u5f0f\u603b\u4f1a\u5f97\u51fa\u6709\u6548\u6570\u503c\u4e14\u4e0d\u5b58\u5728\u9664\u6570\u4e3a <code>0</code> \u7684\u60c5\u51b5\u3002</li> </ul> <p>\u793a\u4f8b\u00a01\uff1a</p> <pre><code>\u8f93\u5165\uff1atokens = [\"2\",\"1\",\"+\",\"3\",\"*\"]\n\u8f93\u51fa\uff1a9\n\u89e3\u91ca\uff1a\u8be5\u7b97\u5f0f\u8f6c\u5316\u4e3a\u5e38\u89c1\u7684\u4e2d\u7f00\u7b97\u672f\u8868\u8fbe\u5f0f\u4e3a\uff1a((2 + 1) * 3) = 9\n</code></pre> <p>\u793a\u4f8b\u00a02\uff1a</p> <pre><code>\u8f93\u5165\uff1atokens = [\"4\",\"13\",\"5\",\"/\",\"+\"]\n\u8f93\u51fa\uff1a6\n\u89e3\u91ca\uff1a\u8be5\u7b97\u5f0f\u8f6c\u5316\u4e3a\u5e38\u89c1\u7684\u4e2d\u7f00\u7b97\u672f\u8868\u8fbe\u5f0f\u4e3a\uff1a(4 + (13 / 5)) = 6\n</code></pre> <p>\u793a\u4f8b\u00a03\uff1a</p> <pre><code>\u8f93\u5165\uff1atokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\n\u8f93\u51fa\uff1a22\n\u89e3\u91ca\uff1a\n\u8be5\u7b97\u5f0f\u8f6c\u5316\u4e3a\u5e38\u89c1\u7684\u4e2d\u7f00\u7b97\u672f\u8868\u8fbe\u5f0f\u4e3a\uff1a\n  ((10 * (6 / ((9 + 3) * -11))) + 17) + 5\n= ((10 * (6 / (12 * -11))) + 17) + 5\n= ((10 * (6 / -132)) + 17) + 5\n= ((10 * 0) + 17) + 5\n= (0 + 17) + 5\n= 17 + 5\n= 22\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>1 &lt;= tokens.length &lt;= 10^4</code></li> <li><code>tokens[i]</code> \u8981\u4e48\u662f\u4e00\u4e2a\u7b97\u7b26\uff08<code>\"+\"</code>\u3001<code>\"-\"</code>\u3001<code>\"*\"</code> \u6216 <code>\"/\"</code>\uff09\uff0c\u8981\u4e48\u662f\u4e00\u4e2a\u5728\u8303\u56f4 <code>[-200, 200]</code> \u5185\u7684\u6574\u6570</li> </ul> <p>\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\uff1a</p> <p>\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u662f\u4e00\u79cd\u540e\u7f00\u8868\u8fbe\u5f0f\uff0c\u6240\u8c13\u540e\u7f00\u5c31\u662f\u6307\u7b97\u7b26\u5199\u5728\u540e\u9762\u3002</p> <p>\u5e73\u5e38\u4f7f\u7528\u7684\u7b97\u5f0f\u5219\u662f\u4e00\u79cd\u4e2d\u7f00\u8868\u8fbe\u5f0f\uff0c\u5982 <code>( 1 + 2 ) * ( 3 + 4 )</code> \u3002 \u8be5\u7b97\u5f0f\u7684\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u5199\u6cd5\u4e3a <code>( ( 1 2 + ) ( 3 4 + ) * )</code> \u3002 \u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u4e2a\u4f18\u70b9\uff1a</p> <p>\u53bb\u6389\u62ec\u53f7\u540e\u8868\u8fbe\u5f0f\u65e0\u6b67\u4e49\uff0c\u4e0a\u5f0f\u5373\u4fbf\u5199\u6210 <code>1 2 + 3 4 + *</code> \u4e5f\u53ef\u4ee5\u4f9d\u636e\u6b21\u5e8f\u8ba1\u7b97\u51fa\u6b63\u786e\u7ed3\u679c\u3002 \u9002\u5408\u7528\u6808\u64cd\u4f5c\u8fd0\u7b97\uff1a\u9047\u5230\u6570\u5b57\u5219\u5165\u6808\uff1b\u9047\u5230\u7b97\u7b26\u5219\u53d6\u51fa\u6808\u9876\u4e24\u4e2a\u6570\u5b57\u8fdb\u884c\u8ba1\u7b97\uff0c\u5e76\u5c06\u7ed3\u679c\u538b\u5165\u6808\u4e2d\u3002</p> <p>Reference</p>","tags":["\u6808"]},{"location":"coding/leetcode/150/#_2","title":"\u9898\u89e3","text":"<p>\u6839\u636e\u9898\u76ee\u4e2d\u7684\u63d0\u793a\u5373\u53ef\uff1a</p> <p>\u9002\u5408\u7528\u6808\u64cd\u4f5c\u8fd0\u7b97\uff1a\u9047\u5230\u6570\u5b57\u5219\u5165\u6808\uff1b\u9047\u5230\u7b97\u7b26\u5219\u53d6\u51fa\u6808\u9876\u4e24\u4e2a\u6570\u5b57\u8fdb\u884c\u8ba1\u7b97\uff0c\u5e76\u5c06\u7ed3\u679c\u538b\u5165\u6808\u4e2d\u3002</p> <pre><code>struct ListNode *getNode(int val, struct ListNode *next)\n{\nstruct ListNode *ret = (struct ListNode *)malloc(sizeof(struct ListNode));\nret-&gt;val = val;\nret-&gt;next = next;\nreturn ret;\n}\nstruct ListNode *operand(struct ListNode *Stack, char operand)\n{\nstruct ListNode *cur1 = Stack, *cur2 = Stack-&gt;next, *temp = cur2-&gt;next;\nint ret;\nswitch (operand)\n{\ncase '+':\nret = cur1-&gt;val + cur2-&gt;val;\nbreak;\ncase '-':\nret = cur2-&gt;val - cur1-&gt;val;\nbreak;\ncase '*':\nret = cur1-&gt;val * cur2-&gt;val;\nbreak;\ncase '/':\nret = cur2-&gt;val / cur1-&gt;val;\nbreak;\n}\nfree(cur1);\nfree(cur2);\nreturn getNode(ret, temp);\n}\nint evalRPN(char ** tokens, int tokensSize){\nstruct ListNode *Stack = NULL;\nint i = 0;\nchar *cur;\nfor (i = 0; i &lt; tokensSize; i++)\n{\ncur = tokens[i];\nif (*cur &gt;= '0' &amp;&amp; *cur &lt;= '9' || strlen(cur) &gt; 1)\nStack = getNode(atoi(cur), Stack);\nelse\nStack = operand(Stack, *cur);\n}\nreturn Stack-&gt;val;\n}\n</code></pre>","tags":["\u6808"]},{"location":"coding/leetcode/155/","title":"155. \u6700\u5c0f\u6808","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6808","\u8bbe\u8ba1"]},{"location":"coding/leetcode/155/#_1","title":"\u9898\u76ee","text":"<p>\u8bbe\u8ba1\u4e00\u4e2a\u652f\u6301 <code>push</code>\uff0c<code>pop</code>\uff0c<code>top</code>\u64cd\u4f5c\uff0c\u5e76\u80fd\u5728\u5e38\u6570\u65f6\u95f4\u5185\u68c0\u7d22\u5230\u6700\u5c0f\u5143\u7d20\u7684\u6808\u3002</p> <ul> <li><code>push(x)</code> \u2014\u2014 \u5c06\u5143\u7d20 x \u63a8\u5165\u6808\u4e2d\u3002</li> <li><code>pop()</code>\u00a0\u2014\u2014 \u5220\u9664\u6808\u9876\u7684\u5143\u7d20\u3002</li> <li><code>top()</code>\u00a0\u2014\u2014 \u83b7\u53d6\u6808\u9876\u5143\u7d20\u3002</li> <li><code>getMin()</code> \u2014\u2014 \u68c0\u7d22\u6808\u4e2d\u7684\u6700\u5c0f\u5143\u7d20\u3002</li> </ul> <p>\u793a\u4f8b\uff1a</p> <pre><code>\u8f93\u5165\uff1a\n[\"MinStack\",\"push\",\"push\",\"push\",\"getMin\",\"pop\",\"top\",\"getMin\"]\n[[],[-2],[0],[-3],[],[],[],[]]\n\n\u8f93\u51fa\uff1a\n[null,null,null,null,-3,null,0,-2]\n\n\u89e3\u91ca\uff1a\nMinStack minStack = new MinStack();\nminStack.push(-2);\nminStack.push(0);\nminStack.push(-3);\nminStack.getMin();   --&gt; \u8fd4\u56de -3.\nminStack.pop();\nminStack.top();      --&gt; \u8fd4\u56de 0.\nminStack.getMin();   --&gt; \u8fd4\u56de -2.\n</code></pre> <p>\u63d0\u793a\uff1a</p> <p><code>pop</code>\u3001<code>top</code> \u548c <code>getMin</code> \u64cd\u4f5c\u603b\u662f\u5728 \u975e\u7a7a\u6808 \u4e0a\u8c03\u7528\u3002</p> <p>Reference</p>","tags":["\u6808","\u8bbe\u8ba1"]},{"location":"coding/leetcode/155/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u4f7f\u7528\u4e24\u4e2a\u57df\u5206\u522b\u5b58\u50a8\u5f53\u524d\u6570\u503c\u548c\u5f53\u524d\u6808\u4e2d\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>#define MIN(x, y) (x &lt; y ? x : y)\nstruct cell\n{\nint val;\nint curMin;\n};\ntypedef struct {\nstruct cell values[10000];\nint top;\n} MinStack;\n/** initialize your data structure here. */\nMinStack *minStackCreate() {\nreturn (MinStack *)memset(malloc(sizeof(MinStack)), 0, sizeof(MinStack));\n}\nvoid minStackPush(MinStack* obj, int x)\n{\nobj-&gt;values[obj-&gt;top].val = x;\nobj-&gt;values[obj-&gt;top].curMin = obj-&gt;top &gt; 0 ? MIN(x, obj-&gt;values[obj-&gt;top - 1].curMin) : x;\nobj-&gt;top++;\n}\nvoid minStackPop(MinStack *obj)\n{\nobj-&gt;top--;\n}\nint minStackTop(MinStack* obj)\n{\nreturn obj-&gt;values[obj-&gt;top - 1].val;\n}\nint minStackGetMin(MinStack* obj)\n{\nreturn obj-&gt;values[obj-&gt;top - 1].curMin;\n}\nvoid minStackFree(MinStack* obj)\n{\nfree(obj);\n}\n/**\n * Your MinStack struct will be instantiated and called as such:\n * MinStack* obj = minStackCreate();\n * minStackPush(obj, x);\n\n * minStackPop(obj);\n\n * int param_3 = minStackTop(obj);\n\n * int param_4 = minStackGetMin(obj);\n\n * minStackFree(obj);\n*/\n</code></pre>","tags":["\u6808","\u8bbe\u8ba1"]},{"location":"coding/leetcode/1603/","title":"1603. \u8bbe\u8ba1\u505c\u8f66\u7cfb\u7edf","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u8bbe\u8ba1"]},{"location":"coding/leetcode/1603/#_1","title":"\u9898\u76ee","text":"<p>\u8bf7\u4f60\u7ed9\u4e00\u4e2a\u505c\u8f66\u573a\u8bbe\u8ba1\u4e00\u4e2a\u505c\u8f66\u7cfb\u7edf\u3002\u505c\u8f66\u573a\u603b\u5171\u6709\u4e09\u79cd\u4e0d\u540c\u5927\u5c0f\u7684\u8f66\u4f4d\uff1a\u5927\uff0c\u4e2d\u548c\u5c0f\uff0c\u6bcf\u79cd\u5c3a\u5bf8\u5206\u522b\u6709\u56fa\u5b9a\u6570\u76ee\u7684\u8f66\u4f4d\u3002</p> <p>\u8bf7\u4f60\u5b9e\u73b0\u00a0<code>ParkingSystem</code>\u00a0\u7c7b\uff1a</p> <p><code>ParkingSystem(int big, int medium, int small)``\u00a0\u521d\u59cb\u5316\u00a0ParkingSystem\u00a0\u7c7b\uff0c\u4e09\u4e2a\u53c2\u6570\u5206\u522b\u5bf9\u5e94\u6bcf\u79cd\u505c\u8f66\u4f4d\u7684\u6570\u76ee\u3002</code> <code>bool addCar(int carType)</code>\u00a0\u68c0\u67e5\u662f\u5426\u6709\u00a0<code>carType</code>\u00a0\u5bf9\u5e94\u7684\u505c\u8f66\u4f4d\u3002\u00a0<code>carType</code>\u00a0\u6709\u4e09\u79cd\u7c7b\u578b\uff1a\u5927\uff0c\u4e2d\uff0c\u5c0f\uff0c\u5206\u522b\u7528\u6570\u5b57\u00a0<code>1</code>\uff0c\u00a0<code>2</code>\u00a0\u548c\u00a0<code>3</code>\u00a0\u8868\u793a\u3002\u4e00\u8f86\u8f66\u53ea\u80fd\u505c\u5728\u00a0<code>carType</code>\u00a0\u5bf9\u5e94\u5c3a\u5bf8\u7684\u505c\u8f66\u4f4d\u4e2d\u3002\u5982\u679c\u6ca1\u6709\u7a7a\u8f66\u4f4d\uff0c\u8bf7\u8fd4\u56de\u00a0<code>false</code>\u00a0\uff0c\u5426\u5219\u5c06\u8be5\u8f66\u505c\u5165\u8f66\u4f4d\u5e76\u8fd4\u56de\u00a0<code>true</code>\u00a0\u3002\u00a0</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1a\n[\"ParkingSystem\", \"addCar\", \"addCar\", \"addCar\", \"addCar\"]\n[[1, 1, 0], [1], [2], [3], [1]]\n\u8f93\u51fa\uff1a\n[null, true, true, false, false]\n</code></pre> <p>\u89e3\u91ca\uff1a</p> <pre><code>ParkingSystem parkingSystem = new ParkingSystem(1, 1, 0);\nparkingSystem.addCar(1); // \u8fd4\u56de true \uff0c\u56e0\u4e3a\u6709 1 \u4e2a\u7a7a\u7684\u5927\u8f66\u4f4d\nparkingSystem.addCar(2); // \u8fd4\u56de true \uff0c\u56e0\u4e3a\u6709 1 \u4e2a\u7a7a\u7684\u4e2d\u8f66\u4f4d\nparkingSystem.addCar(3); // \u8fd4\u56de false \uff0c\u56e0\u4e3a\u6ca1\u6709\u7a7a\u7684\u5c0f\u8f66\u4f4d\nparkingSystem.addCar(1); // \u8fd4\u56de false \uff0c\u56e0\u4e3a\u6ca1\u6709\u7a7a\u7684\u5927\u8f66\u4f4d\uff0c\u552f\u4e00\u4e00\u4e2a\u5927\u8f66\u4f4d\u5df2\u7ecf\u88ab\u5360\u636e\u4e86\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>0 &lt;= big, medium, small &lt;= 1000</code></li> <li><code>carType</code>\u00a0\u53d6\u503c\u4e3a\u00a0<code>1</code>\uff0c\u00a0<code>2</code>\u00a0\u6216\u00a0<code>3</code></li> <li>\u6700\u591a\u4f1a\u8c03\u7528\u00a0<code>addCar</code>\u00a0\u51fd\u6570\u00a01000\u00a0\u6b21</li> </ul> <p>Reference</p>","tags":["\u8bbe\u8ba1"]},{"location":"coding/leetcode/1603/#_2","title":"\u9898\u89e3","text":"<pre><code>typedef struct {\nint cars[3];\n} ParkingSystem;\n\n\nParkingSystem* parkingSystemCreate(int big, int medium, int small) {\nParkingSystem *ret = (ParkingSystem *)malloc(sizeof(ParkingSystem));\nret-&gt;cars[0] = big;\nret-&gt;cars[1] = medium;\nret-&gt;cars[2] = small;\nreturn ret;\n}\n\nbool parkingSystemAddCar(ParkingSystem* obj, int carType) {\nif (obj-&gt;cars[carType - 1] == 0)\nreturn false;\nelse\n{\nobj-&gt;cars[carType - 1]--;\nreturn true;\n}\n}\n\nvoid parkingSystemFree(ParkingSystem* obj) {\nfree(obj);\n}\n\n/**\n * Your ParkingSystem struct will be instantiated and called as such:\n * ParkingSystem* obj = parkingSystemCreate(big, medium, small);\n * bool param_1 = parkingSystemAddCar(obj, carType);\n\n * parkingSystemFree(obj);\n*/\n</code></pre>","tags":["\u8bbe\u8ba1"]},{"location":"coding/leetcode/17.21/","title":"\u9762\u8bd5\u9898 17.21. \u76f4\u65b9\u56fe\u7684\u6c34\u91cf","text":"<p>\u96be\u5ea6\uff1a\u56f0\u96be</p>"},{"location":"coding/leetcode/17.21/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u76f4\u65b9\u56fe(\u4e5f\u79f0\u67f1\u72b6\u56fe)\uff0c\u5047\u8bbe\u6709\u4eba\u4ece\u4e0a\u9762\u6e90\u6e90\u4e0d\u65ad\u5730\u5012\u6c34\uff0c\u6700\u540e\u76f4\u65b9\u56fe\u80fd\u5b58\u591a\u5c11\u6c34\u91cf?\u76f4\u65b9\u56fe\u7684\u5bbd\u5ea6\u4e3a <code>1</code>\u3002</p> <p></p> <p>\u4e0a\u9762\u662f\u7531\u6570\u7ec4 <code>[0,1,0,2,1,0,1,3,2,1,2,1]</code> \u8868\u793a\u7684\u76f4\u65b9\u56fe\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u63a5 <code>6</code> \u4e2a\u5355\u4f4d\u7684\u6c34\uff08\u84dd\u8272\u90e8\u5206\u8868\u793a\u6c34\uff09\u3002\u00a0\u611f\u8c22 Marcos \u8d21\u732e\u6b64\u56fe\u3002</p> <p>\u793a\u4f8b:</p> <pre><code>\u8f93\u5165: [0,1,0,2,1,0,1,3,2,1,2,1]\n\u8f93\u51fa: 6\n</code></pre> <p>Reference</p> <p>\u6ce8\uff1a\u672c\u9898\u4e0e42. \u63a5\u96e8\u6c34\u76f8\u540c\u3002</p>"},{"location":"coding/leetcode/17.21/#_2","title":"\u9898\u89e3","text":"<pre><code>#define MAX(x, y) ((x) &gt; (y) ? x : y)\n#define MIN(x, y) ((x) &lt; (y) ? x : y)\n#define ABS(x) ((x) &gt; 0 ? (x) : -(x))\nint trap(int* height, int heightSize){\nint highest = 0, higher = 0, highestIndex = -1, higherIndex = -1, i = 0, ret = 0;\nfor (i = 0; i &lt; heightSize; i++)\n{\nif (height[i] &gt; highest)\n{\nhigher = highest;\nhigherIndex = highestIndex;\nhighest = height[i];\nhighestIndex = i;\n}\nelse if (height[i] &gt; higher)\n{\nhigher = height[i];\nhigherIndex = i;\n}\n}\nif (heightSize &lt;= 2 || higherIndex &lt; 0 || highestIndex &lt; 0)\nreturn 0;\nret = higher * (ABS(higherIndex - highestIndex) - 1);\nint left = MIN(higherIndex, highestIndex) + 1, right = MAX(higherIndex, highestIndex);\nfor (i = left; i &lt; right; i++)\nret -= height[i];\nreturn ret + trap(height, left) + trap(height + right, heightSize - right);\n}\n</code></pre>"},{"location":"coding/leetcode/17/","title":"17. \u7535\u8bdd\u53f7\u7801\u7684\u5b57\u6bcd\u7ec4\u5408","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u9012\u5f52","\u5b57\u7b26\u4e32","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/17/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4ec5\u5305\u542b\u6570\u5b57\u00a0<code>2-9</code>\u00a0\u7684\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u6240\u6709\u5b83\u80fd\u8868\u793a\u7684\u5b57\u6bcd\u7ec4\u5408\u3002\u7b54\u6848\u53ef\u4ee5\u6309 \u4efb\u610f\u987a\u5e8f \u8fd4\u56de\u3002</p> <p>\u7ed9\u51fa\u6570\u5b57\u5230\u5b57\u6bcd\u7684\u6620\u5c04\u5982\u4e0b\uff08\u4e0e\u7535\u8bdd\u6309\u952e\u76f8\u540c\uff09\u3002\u6ce8\u610f 1 \u4e0d\u5bf9\u5e94\u4efb\u4f55\u5b57\u6bcd\u3002</p> <p></p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1adigits = \"23\"\n\u8f93\u51fa\uff1a[\"ad\",\"ae\",\"af\",\"bd\",\"be\",\"bf\",\"cd\",\"ce\",\"cf\"]\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1adigits = \"\"\n\u8f93\u51fa\uff1a[]\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1adigits = \"2\"\n\u8f93\u51fa\uff1a[\"a\",\"b\",\"c\"]\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li>0 &lt;= digits.length &lt;= 4</li> <li>digits[i] \u662f\u8303\u56f4 ['2', '9'] \u7684\u4e00\u4e2a\u6570\u5b57\u3002</li> </ul> <p>Reference</p>","tags":["\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u9012\u5f52","\u5b57\u7b26\u4e32","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/17/#_2","title":"\u9898\u89e3","text":"<pre><code>/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nvoid dfs(char *digits, char **ret, int *subscript, char *current, int end, char **map)\n{\nif (*digits == 0)\n{\nstrcpy(ret[(*subscript)++], current);\nreturn;\n}\nint i = 0, target = *digits - '2';\nchar *cur = map[target];\nwhile(*cur)\n{\ncurrent[end] = *cur;\ndfs(digits + 1, ret, subscript, current, end + 1, map);\ncur++;\n}\n}\nchar ** letterCombinations(char * digits, int* returnSize){\n*returnSize = 1;\nchar *cur = digits, len = 0, *charMap[] = {\"abc\", \"def\", \"ghi\", \"jkl\", \"mno\", \"pqrs\", \"tuv\", \"wxyz\"};\nwhile(*cur)\n{\n*returnSize *= (*cur == '7' || *cur == '9') ? 4 : 3;\ncur++;\nlen++;\n}\nif (len == 0)\n{\n*returnSize = 0;\nreturn NULL;\n}\nchar **ret = (char **)malloc(sizeof(char *) * *returnSize),\n*current = (char *)memset(malloc(sizeof(char) * (len + 1)), 0, sizeof(char) * (len + 1));\nfor (int i = 0; i &lt; *returnSize; i++)\nret[i] = (int *)memset(malloc(sizeof(char) * (len + 1)), 0, sizeof(char) * (len + 1));\nint subscript = 0;\ndfs(digits, ret, &amp;subscript, current, 0, charMap);\nreturn ret;\n}\n</code></pre>","tags":["\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u9012\u5f52","\u5b57\u7b26\u4e32","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/1835/","title":"1835. \u6240\u6709\u6570\u5bf9\u6309\u4f4d\u4e0e\u7ed3\u679c\u7684\u5f02\u6216\u548c","text":"<p>\u96be\u5ea6\uff1a\u56f0\u96be</p>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/1835/#_1","title":"\u9898\u76ee","text":"<p>\u5217\u8868\u7684 \u5f02\u6216\u548c\uff08XOR sum\uff09\u6307\u5bf9\u6240\u6709\u5143\u7d20\u8fdb\u884c\u6309\u4f4d <code>XOR</code> \u8fd0\u7b97\u7684\u7ed3\u679c\u3002\u5982\u679c\u5217\u8868\u4e2d\u4ec5\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u5176 \u5f02\u6216\u548c \u5c31\u7b49\u4e8e\u8be5\u5143\u7d20\u3002</p> <ul> <li>\u4f8b\u5982\uff0c<code>[1,2,3,4]</code> \u7684 \u5f02\u6216\u548c \u7b49\u4e8e <code>1 XOR 2 XOR 3 XOR 4 = 4</code> \uff0c\u800c <code>[3]</code> \u7684 \u5f02\u6216\u548c \u7b49\u4e8e <code>3</code> \u3002</li> </ul> <p>\u7ed9\u4f60\u4e24\u4e2a\u4e0b\u6807 \u4ece 0 \u5f00\u59cb \u8ba1\u6570\u7684\u6570\u7ec4 <code>arr1</code> \u548c <code>arr2</code> \uff0c\u4e24\u6570\u7ec4\u5747\u7531\u975e\u8d1f\u6574\u6570\u7ec4\u6210\u3002</p> <p>\u6839\u636e\u6bcf\u4e2a\u00a0<code>(i, j)</code> \u6570\u5bf9\uff0c\u6784\u9020\u4e00\u4e2a\u7531 <code>arr1[i] AND arr2[j]</code>\uff08\u6309\u4f4d <code>AND</code> \u8fd0\u7b97\uff09\u7ed3\u679c\u7ec4\u6210\u7684\u5217\u8868\u3002\u5176\u4e2d <code>0 &lt;= i &lt; arr1.length</code> \u4e14 <code>0 &lt;= j &lt; arr2.length</code> \u3002</p> <p>\u8fd4\u56de\u4e0a\u8ff0\u5217\u8868\u7684 \u5f02\u6216\u548c \u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1aarr1 = [1,2,3], arr2 = [6,5]\n\u8f93\u51fa\uff1a0\n\u89e3\u91ca\uff1a\u5217\u8868 = [1 AND 6, 1 AND 5, 2 AND 6, 2 AND 5, 3 AND 6, 3 AND 5] = [0,1,2,0,2,1] \uff0c\n\u5f02\u6216\u548c = 0 XOR 1 XOR 2 XOR 0 XOR 2 XOR 1 = 0 \u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1aarr1 = [12], arr2 = [4]\n\u8f93\u51fa\uff1a4\n\u89e3\u91ca\uff1a\u5217\u8868 = [12 AND 4] = [4] \uff0c\u5f02\u6216\u548c = 4 \u3002\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>1 &lt;= arr1.length, arr2.length &lt;= 105</code></li> <li><code>0 &lt;= arr1[i], arr2[j] &lt;= 109</code></li> </ul> <p>Reference</p>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/1835/#_2","title":"\u9898\u89e3","text":"<p>\u8bbe\u4e24\u4e2a\u6570\u5217\\(A=\\{a_i\\}_m\\)\u4e0e\\(B=\\{b_j\\}_n\\)\uff0c\u5e76\u4f7f\u7528\u8fd0\u7b97\u7b26\\(\\otimes\\)\u8868\u793a \u5f02\u6216 \u64cd\u4f5c\uff0c\u4f7f\u7528\u8fd0\u7b97\u7b26\\(\\land\\)\u8868\u793a \u4e0e \u64cd\u4f5c\uff0c\u5219\u672c\u9898\u7684\u7ed3\u679c\u4e3a\uff1a</p> \\[ f(A, B) = \\bigotimes_{i=1}^{m} \\bigotimes_{j=1}^n a_i\\land b_j \\] <p>\u8003\u8651\u8868\u8fbe\u5f0f\\((a\\otimes b) \\land (a \\otimes c)\\)\uff1a</p> \\[ \\begin{aligned} &amp; (a\\otimes b) \\land (a \\otimes c) \\\\ \\Leftrightarrow &amp; ((a\\lor b)\\land (\\lnot a\\lor\\lnot b)) \\land ((a\\lor c)\\land (\\lnot a\\lor\\lnot c)) \\\\ \\Leftrightarrow &amp; (a\\lor b)\\land (\\lnot a\\lor\\lnot b) \\land (a\\lor c)\\land (\\lnot a\\lor\\lnot c) \\\\ \\Leftrightarrow &amp; (a\\land (b\\lor c)) \\land (a\\land (\\lnot b\\lor\\lnot c)) \\\\ \\Leftrightarrow &amp; a\\land (b\\otimes c) \\end{aligned} \\] <p>\u56e0\u6b64\uff0c\\(\\otimes\\)\u8fd0\u7b97\u5bf9\\(\\land\\)\u8fd0\u7b97\u6ee1\u8db3\u5206\u914d\u5f8b\uff0c\u6709\uff1a</p> \\[ \\begin{aligned} f(A, B) &amp;= \\bigotimes_{i=1}^{m} \\bigotimes_{j=1}^n a_i\\land b_j \\\\ &amp;= \\bigotimes_{i=1}^{m} \\left(a_{i}\\land\\bigotimes_{j=1}^n b_j\\right) \\\\ &amp;= \\left(\\bigotimes_{i=1}^{m} a_i\\right)\\land\\left(\\bigotimes_{j=1}^n b_j\\right) \\end{aligned} \\] <pre><code>int getXORSum(int* arr1, int arr1Size, int* arr2, int arr2Size){\nint a = 0, b = 0, i = 0;\nfor (i = 0; i &lt; arr1Size; i++)\na ^= arr1[i];\nfor (i = 0; i &lt; arr2Size; i++)\nb ^= arr2[i];\nreturn a &amp; b;\n}\n</code></pre>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/189/","title":"189. \u65cb\u8f6c\u6570\u7ec4","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/189/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5411\u53f3\u79fb\u52a8\u00a0k\u00a0\u4e2a\u4f4d\u7f6e\uff0c\u5176\u4e2d\u00a0k\u00a0\u662f\u975e\u8d1f\u6570\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165: [1,2,3,4,5,6,7] \u548c k = 3\n\u8f93\u51fa: [5,6,7,1,2,3,4]\n\u89e3\u91ca:\n\u5411\u53f3\u65cb\u8f6c 1 \u6b65: [7,1,2,3,4,5,6]\n\u5411\u53f3\u65cb\u8f6c 2 \u6b65: [6,7,1,2,3,4,5]\n\u5411\u53f3\u65cb\u8f6c 3 \u6b65: [5,6,7,1,2,3,4]\n</code></pre> <p>\u793a\u4f8b\u00a02\uff1a</p> <pre><code>\u8f93\u5165: [-1,-100,3,99] \u548c k = 2\n\u8f93\u51fa: [3,99,-1,-100]\n\u89e3\u91ca: \n\u5411\u53f3\u65cb\u8f6c 1 \u6b65: [99,-1,-100,3]\n\u5411\u53f3\u65cb\u8f6c 2 \u6b65: [3,99,-1,-100]\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u5c3d\u53ef\u80fd\u60f3\u51fa\u66f4\u591a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u81f3\u5c11\u6709\u4e09\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</li> <li>\u8981\u6c42\u4f7f\u7528\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(1)\\)\u7684\u539f\u5730\u7b97\u6cd5\u3002</li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/189/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u5148\u53cd\u8f6c\u6574\u4e2a\u6570\u7ec4\uff0c\u518d\u4ee5\u7b2c\\(k\\)\u4e2a\u5143\u7d20\u4e3a\u754c\uff0c\u5206\u522b\u53cd\u8f6c\\(k\\)\u4e4b\u524d\u7684\u90e8\u5206\u4e0e\\(k\\)\u53ca\\(k\\)\u4e4b\u540e\u7684\u90e8\u5206\u5373\u53ef\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>void Reverse(int* nums, int numsSize)\n{\nint head = 0, tail = numsSize - 1, temp = 0;\nwhile(tail &gt; head)\n{\ntemp = nums[head];\nnums[head] = nums[tail];\nnums[tail] = temp;\ntail--;\nhead++;\n}\n}\nvoid rotate(int* nums, int numsSize, int k){\nif (numsSize &lt; 2)\nreturn;\nk %= numsSize;\nReverse(nums, numsSize);\nReverse(nums, k);\nReverse(nums + k, numsSize - k);\n}\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/19/","title":"19. \u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2cN\u4e2a\u8282\u70b9","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u94fe\u8868","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/19/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868\uff0c\u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2c\u00a0n\u00a0\u4e2a\u8282\u70b9\uff0c\u5e76\u4e14\u8fd4\u56de\u94fe\u8868\u7684\u5934\u7ed3\u70b9\u3002</p> <p>\u793a\u4f8b\uff1a</p> <p>`` \u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868: 1-&gt;2-&gt;3-&gt;4-&gt;5, \u548c n = 2.</p> <p>\u5f53\u5220\u9664\u4e86\u5012\u6570\u7b2c\u4e8c\u4e2a\u8282\u70b9\u540e\uff0c\u94fe\u8868\u53d8\u4e3a 1-&gt;2-&gt;3-&gt;5. ``</p> <p>\u8bf4\u660e\uff1a</p> <p>\u7ed9\u5b9a\u7684 n\u00a0\u4fdd\u8bc1\u662f\u6709\u6548\u7684\u3002</p> <p>\u8fdb\u9636\uff1a</p> <p>\u4f60\u80fd\u5c1d\u8bd5\u4f7f\u7528\u4e00\u8d9f\u626b\u63cf\u5b9e\u73b0\u5417\uff1f</p> <p>Reference</p>","tags":["\u94fe\u8868","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/19/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u5148\u627e\u5230\u5012\u6570\u7b2c n \u4e2a\u8282\u70b9\uff0c\u518d\u8fdb\u884c\u5220\u9664</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\nstruct ListNode* removeNthFromEnd(struct ListNode* head, int n){\nstruct ListNode *cur = head, *temp = NULL;\nint length = 1, i = 0;\nwhile(cur-&gt;next != NULL)\n{\ncur = cur-&gt;next;\nlength++;\n}\ncur = head;\nfor (i = 0; i &lt; length - n - 1; i++)\ncur = cur-&gt;next;\nif (n == length)\nreturn cur-&gt;next;\nif (cur-&gt;next)\n{\ncur-&gt;next = cur-&gt;next-&gt;next;\nreturn head;\n}\nreturn NULL;\n}\n</code></pre>","tags":["\u94fe\u8868","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/198/","title":"198. \u6253\u5bb6\u52ab\u820d","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/198/#_1","title":"\u9898\u76ee","text":"<p>\u4f60\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684\u5c0f\u5077\uff0c\u8ba1\u5212\u5077\u7a83\u6cbf\u8857\u7684\u623f\u5c4b\u3002\u6bcf\u95f4\u623f\u5185\u90fd\u85cf\u6709\u4e00\u5b9a\u7684\u73b0\u91d1\uff0c\u5f71\u54cd\u4f60\u5077\u7a83\u7684\u552f\u4e00\u5236\u7ea6\u56e0\u7d20\u5c31\u662f\u76f8\u90bb\u7684\u623f\u5c4b\u88c5\u6709\u76f8\u4e92\u8fde\u901a\u7684\u9632\u76d7\u7cfb\u7edf\uff0c\u5982\u679c\u4e24\u95f4\u76f8\u90bb\u7684\u623f\u5c4b\u5728\u540c\u4e00\u665a\u4e0a\u88ab\u5c0f\u5077\u95ef\u5165\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u62a5\u8b66\u3002</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u4ee3\u8868\u6bcf\u4e2a\u623f\u5c4b\u5b58\u653e\u91d1\u989d\u7684\u975e\u8d1f\u6574\u6570\u6570\u7ec4\uff0c\u8ba1\u7b97\u4f60 \u4e0d\u89e6\u52a8\u8b66\u62a5\u88c5\u7f6e\u7684\u60c5\u51b5\u4e0b \uff0c\u4e00\u591c\u4e4b\u5185\u80fd\u591f\u5077\u7a83\u5230\u7684\u6700\u9ad8\u91d1\u989d\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1a[1,2,3,1]\n\u8f93\u51fa\uff1a4\n\u89e3\u91ca\uff1a\u5077\u7a83 1 \u53f7\u623f\u5c4b (\u91d1\u989d = 1) \uff0c\u7136\u540e\u5077\u7a83 3 \u53f7\u623f\u5c4b (\u91d1\u989d = 3)\u3002\n\u00a0    \u5077\u7a83\u5230\u7684\u6700\u9ad8\u91d1\u989d = 1 + 3 = 4 \u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1a[2,7,9,3,1]\n\u8f93\u51fa\uff1a12\n\u89e3\u91ca\uff1a\u5077\u7a83 1 \u53f7\u623f\u5c4b (\u91d1\u989d = 2), \u5077\u7a83 3 \u53f7\u623f\u5c4b (\u91d1\u989d = 9)\uff0c\u63a5\u7740\u5077\u7a83 5 \u53f7\u623f\u5c4b (\u91d1\u989d = 1)\u3002\n\u00a0    \u5077\u7a83\u5230\u7684\u6700\u9ad8\u91d1\u989d = 2 + 9 + 1 = 12 \u3002\n</code></pre> <p>\u63d0\u793a\uff1a</p> <pre><code>0 &lt;= nums.length &lt;= 100\n0 &lt;= nums[i] &lt;= 400\n</code></pre> <p>Reference</p>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/198/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u52a8\u6001\u89c4\u5212\uff0c\u4ee4\\(f(i)\\)\u8868\u793a\u524d\\(i\\)\u4e2a\u623f\u95f4\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u91d1\u989d\uff0c\u5219\u6709\uff1a</p> \\[ f(i + 1) = \\max\\left\\{f(i), a_{i + 1} + f(i - 1)\\right\\} \\] <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>#define MAX(x, y) (x &gt; y ? x : y)\nint rob(int* nums, int numsSize){\nif (numsSize &lt; 2)\nreturn numsSize ? *nums : 0;\nint *dp = (int *)memset(malloc(sizeof(int) * (numsSize)), 0, sizeof(int) * (numsSize)), i = 0;\ndp[0] = *nums;\ndp[1] = MAX(nums[0], nums[1]);\nfor (i = 2; i &lt; numsSize; i++)\ndp[i] = MAX(dp[i-2] + nums[i], dp[i-1]);\nreturn dp[numsSize-1];\n}\n</code></pre>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/2/","title":"2. \u4e24\u6570\u76f8\u52a0","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u9012\u5f52","\u94fe\u8868","\u6570\u5b66"]},{"location":"coding/leetcode/2/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e24\u4e2a\u00a0\u975e\u7a7a \u7684\u94fe\u8868\uff0c\u8868\u793a\u4e24\u4e2a\u975e\u8d1f\u7684\u6574\u6570\u3002\u5b83\u4eec\u6bcf\u4f4d\u6570\u5b57\u90fd\u662f\u6309\u7167\u00a0\u9006\u5e8f\u00a0\u7684\u65b9\u5f0f\u5b58\u50a8\u7684\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8282\u70b9\u53ea\u80fd\u5b58\u50a8\u00a0\u4e00\u4f4d\u00a0\u6570\u5b57\u3002</p> <p>\u8bf7\u4f60\u5c06\u4e24\u4e2a\u6570\u76f8\u52a0\uff0c\u5e76\u4ee5\u76f8\u540c\u5f62\u5f0f\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u548c\u7684\u94fe\u8868\u3002</p> <p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u9664\u4e86\u6570\u5b57 <code>0</code> \u4e4b\u5916\uff0c\u8fd9\u4e24\u4e2a\u6570\u90fd\u4e0d\u4f1a\u4ee5 <code>0</code>\u00a0\u5f00\u5934\u3002</p> <p></p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1al1 = [2,4,3], l2 = [5,6,4]\n\u8f93\u51fa\uff1a[7,0,8]\n\u89e3\u91ca\uff1a342 + 465 = 807.\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1al1 = [0], l2 = [0]\n\u8f93\u51fa\uff1a[0]\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1al1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n\u8f93\u51fa\uff1a[8,9,9,9,0,0,0,1]\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li>\u6bcf\u4e2a\u94fe\u8868\u4e2d\u7684\u8282\u70b9\u6570\u5728\u8303\u56f4 <code>[1, 100]</code> \u5185</li> <li><code>0 &lt;= Node.val &lt;= 9</code></li> <li>\u9898\u76ee\u6570\u636e\u4fdd\u8bc1\u5217\u8868\u8868\u793a\u7684\u6570\u5b57\u4e0d\u542b\u524d\u5bfc\u96f6</li> </ul>","tags":["\u9012\u5f52","\u94fe\u8868","\u6570\u5b66"]},{"location":"coding/leetcode/2/#_2","title":"\u9898\u89e3","text":"<p>\u4f7f\u7528\u9012\u5f52\u7684\u601d\u60f3\uff0c\u5c06\u8ba1\u7b97\u52a0\u6cd5\u7684\u95ee\u9898\u5206\u89e3\u4e3a\u8ba1\u7b97\u6700\u540e\u4e00\u4f4d\u76f8\u52a0\u548c\u8ba1\u7b97\u5269\u4f59\u90e8\u5206\u76f8\u52a0\u4e24\u4e2a\u5b50\u95ee\u9898\u3002</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\nstruct ListNode *getNode(int val, struct ListNode *next)\n{\nstruct ListNode *ret = (struct ListNode *)malloc(sizeof(struct ListNode));\nret-&gt;val = val;\nret-&gt;next = next;\nreturn ret;\n}\nstruct ListNode *recur(struct ListNode *l1, struct ListNode *l2, int flag)\n{\nif (!l1)\nreturn flag ? recur(getNode(1, NULL), l2, 0) : l2;\nif (!l2)\nreturn flag ? recur(getNode(1, NULL), l1, 0) : l1;\nint ret = l1-&gt;val + l2-&gt;val + (flag ? 1 : 0);\nreturn getNode(ret - (ret &gt;= 10 ? 10 : 0), recur(l1-&gt;next, l2-&gt;next, ret &gt;= 10));\n}\nstruct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2){\nreturn recur(l1, l2, 0);\n}\n</code></pre> <p>Reference</p>","tags":["\u9012\u5f52","\u94fe\u8868","\u6570\u5b66"]},{"location":"coding/leetcode/20/","title":"20. \u6709\u6548\u7684\u62ec\u53f7","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6808","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/20/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u53ea\u5305\u62ec <code>'('</code>\uff0c<code>')'</code>\uff0c<code>'{'</code>\uff0c<code>'}'</code>\uff0c<code>'['</code>\uff0c<code>']'</code>\u00a0\u7684\u5b57\u7b26\u4e32 <code>s</code> \uff0c\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u6709\u6548\u3002</p> <p>\u6709\u6548\u5b57\u7b26\u4e32\u9700\u6ee1\u8db3\uff1a</p> <ol> <li>\u5de6\u62ec\u53f7\u5fc5\u987b\u7528\u76f8\u540c\u7c7b\u578b\u7684\u53f3\u62ec\u53f7\u95ed\u5408\u3002</li> <li>\u5de6\u62ec\u53f7\u5fc5\u987b\u4ee5\u6b63\u786e\u7684\u987a\u5e8f\u95ed\u5408\u3002</li> </ol> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1as = \"()\"\n\u8f93\u51fa\uff1atrue\n</code></pre> <p>\u793a\u4f8b\u00a02\uff1a</p> <pre><code>\u8f93\u5165\uff1as = \"()[]{}\"\n\u8f93\u51fa\uff1atrue\n</code></pre> <p>\u793a\u4f8b\u00a03\uff1a</p> <pre><code>\u8f93\u5165\uff1as = \"(]\"\n\u8f93\u51fa\uff1afalse\n</code></pre> <p>\u793a\u4f8b\u00a04\uff1a</p> <pre><code>\u8f93\u5165\uff1as = \"([)]\"\n\u8f93\u51fa\uff1afalse\n</code></pre> <p>\u793a\u4f8b\u00a05\uff1a</p> <pre><code>\u8f93\u5165\uff1as = \"{[]}\"\n\u8f93\u51fa\uff1atrue\n</code></pre> <p>Reference</p>","tags":["\u6808","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/20/#_2","title":"\u9898\u89e3","text":"<p>\u4f7f\u7528\u6808\u6a21\u62df\u5339\u914d\u8fc7\u7a0b</p> <ul> <li>\u9047\u5230\u5de6\u62ec\u53f7\u65f6\u5165\u6808\uff1b</li> <li>\u9047\u5230\u53f3\u62ec\u53f7\u65f6\uff0c\u68c0\u67e5\u6808\u9876\u62ec\u53f7\u662f\u5426\u4e0e\u53f3\u62ec\u53f7\u5339\u914d\uff0c\u82e5\u5339\u914d\u5219\u51fa\u6808\uff0c\u5426\u5219\u8fd4\u56de<code>false</code>\uff1b</li> <li>\u5b8c\u6210\u5339\u914d\u8fc7\u7a0b\u540e\u68c0\u67e5\u6808\u662f\u5426\u4e3a\u7a7a\uff0c\u82e5\u4e3a\u7a7a\u8fd4\u56de<code>true</code>\uff0c\u5426\u5219\u8fd4\u56de<code>false</code>\u3002</li> </ul> <pre><code>bool isValid(char * s){\nint maxLen = strlen(s), top = 0;\nchar *holding = malloc(sizeof(char) * maxLen), *cur = s;\nwhile(*cur)\n{\nswitch(*cur)\n{\ncase '(':\ncase '[':\ncase '{':\nholding[top] = *cur;\ntop++;\nbreak;\ncase ')':\nif (top == 0 || holding[top - 1] != '(')\nreturn false;\ntop--;\nbreak;\ncase ']':\ncase '}':\nif (top == 0 || holding[top - 1] != (*cur) - 2)\nreturn false;\ntop--;\nbreak;\n}\ncur++;\n}\nreturn !top;\n}\n</code></pre>","tags":["\u6808","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/204/","title":"204. \u8ba1\u6570\u8d28\u6570","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u54c8\u5e0c\u8868","\u6570\u5b66"]},{"location":"coding/leetcode/204/#_1","title":"\u9898\u76ee","text":"<p>\u7edf\u8ba1\u6240\u6709\u5c0f\u4e8e\u975e\u8d1f\u6574\u6570 n \u7684\u8d28\u6570\u7684\u6570\u91cf\u3002</p> <p>\u793a\u4f8b\uff1a</p> <pre><code>\u8f93\u5165: 10\n\u8f93\u51fa: 4\n\u89e3\u91ca: \u5c0f\u4e8e 10 \u7684\u8d28\u6570\u4e00\u5171\u6709 4 \u4e2a, \u5b83\u4eec\u662f 2, 3, 5, 7 \u3002\n</code></pre> <p>Reference</p>","tags":["\u54c8\u5e0c\u8868","\u6570\u5b66"]},{"location":"coding/leetcode/204/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u4ece2\u5f00\u59cb\uff0c\u5728\u6570\u5217\\(2, 3, \\cdots, n\\)\u4e2d\u5212\u53bb\u6240\u67092\u7684\u500d\u6570\uff0c\u5269\u4e0b\u7684\u7b2c\u4e00\u4e2a\u6ca1\u6709\u88ab\u5212\u53bb\u7684\u6570\u5b573\u5373\u4e3a\u8d28\u6570\uff0c\u518d\u82b1\u65d7\u6240\u67093\u7684\u500d\u6570\uff0c\u5269\u4e0b\u7684\u7b2c\u4e00\u4e2a\u6ca1\u6709\u88ab\u5212\u53bb\u7684\u6570\u5b575\u5373\u4e3a\u8d28\u6570\u3002\u91cd\u590d\u5982\u4e0a\u64cd\u4f5c\uff0c\u76f4\u5230\u68c0\u67e5\u5b8c\u6240\u6709\u5c0f\u4e8e\u7b49\u4e8e\\(\\sqrt n\\)\u7684\u6574\u6570\uff0c\u5373\u5b8c\u6210\u3002</p> <p>\u6570\u5b57\u662f\u5426\u5212\u53bb\u7684\u72b6\u6001\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u63a7\u5236\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e00\u4e2a\u7c7b\u578b\u4e2d\u76841\u4f4d\u8868\u793a\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>int countPrimes(int n)\n{\nunsigned char *map = memset(malloc(sizeof(unsigned char) * ((n + 1 &gt;&gt; 3) + 1)), 0x55, sizeof(unsigned char) * ((n + 1 &gt;&gt; 3) + 1));\nint i = 0, j, ret = 0, sq = (int)sqrt(n), increment = 1, start = 2;\n*map = 0x51;\nfor (i = 3; i &lt;= sq; i++)\nif (!(map[i &gt;&gt; 3] &amp; (unsigned char)1 &lt;&lt; (i &amp; 7)))\nfor (j = i * 3; j &lt;= n; j += i &lt;&lt; 1)\nmap[j &gt;&gt; 3] |= (unsigned char)1 &lt;&lt; (j &amp; 7);\nfor (i = 2; i &lt; n; i++)\nif (!(map[i &gt;&gt; 3] &amp; (unsigned char)1 &lt;&lt; (i &amp; 7)))\nret++;\nreturn ret;\n}\n</code></pre>","tags":["\u54c8\u5e0c\u8868","\u6570\u5b66"]},{"location":"coding/leetcode/206/","title":"206. \u53cd\u8f6c\u94fe\u8868","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/206/#_1","title":"\u9898\u76ee","text":"<p>\u53cd\u8f6c\u4e00\u4e2a\u5355\u94fe\u8868\u3002</p> <p>\u793a\u4f8b\uff1a <pre><code>\u8f93\u5165: 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL\n\u8f93\u51fa: 5-&gt;4-&gt;3-&gt;2-&gt;1-&gt;NULL\n</code></pre> \u8fdb\u9636\uff1a</p> <p>\u4f60\u53ef\u4ee5\u8fed\u4ee3\u6216\u9012\u5f52\u5730\u53cd\u8f6c\u94fe\u8868\u3002\u4f60\u80fd\u5426\u7528\u4e24\u79cd\u65b9\u6cd5\u89e3\u51b3\u8fd9\u9053\u9898\uff1f</p> <p>Reference</p>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/206/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u53ea\u9700\u8981\u5c06\u94fe\u8868\u7ed3\u6784\u4e2d\u7684\u6240\u6709\u6307\u9488\u53cd\u8f6c\uff0c\u5373\u6307\u5411\u524d\u4e00\u8282\u70b9\u7684\u6307\u9488\u73b0\u5728\u6307\u5411\u540e\u4e00\u8282\u70b9\u3002\u5b9a\u4e49\u4e24\u4e2a\u6307\u9488\u6307\u5411\u9700\u8981\u53cd\u8f6c\u90e8\u5206\u7684\u4e24\u4e2a\u8282\u70b9\uff0c\u5c06\u540e\u4e00\u6307\u9488\u7684<code>next</code>\u57df\u6307\u5411\u524d\u4e00\u6307\u9488\u3002\u6539\u53cd\u8f6c\u64cd\u4f5c\u7834\u574f\u4e86\u540e\u4e00\u6307\u9488\u539f\u6709\u7684<code>next</code>\u57df\uff0c\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u6307\u9488\u7528\u4e8e\u5411\u524d\u79fb\u52a8\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\n\nstruct ListNode* reverseList(struct ListNode* head){\nif (!head || !(head-&gt;next))\nreturn head;\nstruct ListNode *cur1 = head, *cur2 = head-&gt;next, *cur3 = cur2-&gt;next;\nhead-&gt;next = NULL;\nwhile (cur3)\n{\ncur2-&gt;next = cur1;\ncur1 = cur2;\ncur2 = cur3;\ncur3 = cur3-&gt;next;\n}\ncur2-&gt;next = cur1;\nreturn cur2;\n}\n</code></pre>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/21/","title":"21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u9012\u5f52","\u94fe\u8868"]},{"location":"coding/leetcode/21/#_1","title":"\u9898\u76ee","text":"<p>\u5c06\u4e24\u4e2a\u5347\u5e8f\u94fe\u8868\u5408\u5e76\u4e3a\u4e00\u4e2a\u65b0\u7684 \u5347\u5e8f \u94fe\u8868\u5e76\u8fd4\u56de\u3002\u65b0\u94fe\u8868\u662f\u901a\u8fc7\u62fc\u63a5\u7ed9\u5b9a\u7684\u4e24\u4e2a\u94fe\u8868\u7684\u6240\u6709\u8282\u70b9\u7ec4\u6210\u7684\u3002\u00a0</p> <p>\u793a\u4f8b\uff1a</p> <pre><code>\u8f93\u5165\uff1a1-&gt;2-&gt;4, 1-&gt;3-&gt;4\n\u8f93\u51fa\uff1a1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4\n</code></pre> <p>Reference</p>","tags":["\u9012\u5f52","\u94fe\u8868"]},{"location":"coding/leetcode/21/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u6bd4\u8f83\u4e24\u4e2a\u94fe\u8868\u7684\u5934\u8282\u70b9\uff0c\u5c06\u66f4\u5c0f\u7684\u8282\u70b9\u5e76\u5165\u7ed3\u679c\u94fe\u8868\u4e2d\uff0c\u540c\u65f6\u94fe\u8868\u5934\u540e\u79fb\uff0c\u9012\u5f52\u5904\u7406\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\nstruct ListNode* mergeTwoLists(struct ListNode* l1, struct ListNode* l2){\nif (!l1)\nreturn l2;\nif (!l2)\nreturn l1;\nif (l1-&gt;val &lt; l2-&gt;val)\n{\nl1-&gt;next = mergeTwoLists(l1-&gt;next, l2);\nreturn l1;\n}\nelse\n{\nl2-&gt;next = mergeTwoLists(l1, l2-&gt;next);\nreturn l2;\n}\n}\n</code></pre>","tags":["\u9012\u5f52","\u94fe\u8868"]},{"location":"coding/leetcode/217/","title":"217. \u5b58\u5728\u91cd\u590d\u5143\u7d20","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6570\u7ec4","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/217/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u91cd\u590d\u5143\u7d20\u3002</p> <p>\u5982\u679c\u4efb\u610f\u4e00\u503c\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u81f3\u5c11\u4e24\u6b21\uff0c\u51fd\u6570\u8fd4\u56de<code>true</code>\u3002\u5982\u679c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u90fd\u4e0d\u76f8\u540c\uff0c\u5219\u8fd4\u56de<code>false</code>\u3002\u00a0</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165: [1,2,3,1]\n\u8f93\u51fa: true\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165: [1,2,3,4]\n\u8f93\u51fa: false\n</code></pre> <p>\u793a\u4f8b\u00a03\uff1a</p> <pre><code>\u8f93\u5165: [1,1,1,3,3,4,3,2,4,2]\n\u8f93\u51fa: true\n</code></pre> <p>Reference</p>","tags":["\u6570\u7ec4","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/217/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u5c06\u6570\u7ec4\u6392\u5e8f\u540e\u68c0\u67e5\u662f\u5426\u6709\u91cd\u590d\u5143\u7d20\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>int comp(const void *a, const void *b)\n{\nreturn *(int*)a - *(int*)b;\n}\nbool containsDuplicate(int* nums, int numsSize){\nif (numsSize &lt; 2)\nreturn false;\nqsort(nums, numsSize, sizeof(int), comp);\nint i = 0;\nfor (i = 1; i&lt;numsSize; i++)\nif (nums[i] == nums[i - 1])\nreturn true;\nreturn false;\n}\n</code></pre>","tags":["\u6570\u7ec4","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/22/","title":"22. \u62ec\u53f7\u751f\u6210","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u5b57\u7b26\u4e32","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/22/#_1","title":"\u9898\u76ee","text":"<p>\u6570\u5b57 <code>n</code>\u00a0\u4ee3\u8868\u751f\u6210\u62ec\u53f7\u7684\u5bf9\u6570\uff0c\u8bf7\u4f60\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u4e8e\u80fd\u591f\u751f\u6210\u6240\u6709\u53ef\u80fd\u7684\u5e76\u4e14 \u6709\u6548\u7684 \u62ec\u53f7\u7ec4\u5408\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1an = 3\n\u8f93\u51fa\uff1a[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1an = 1\n\u8f93\u51fa\uff1a[\"()\"]\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>1 &lt;= n &lt;= 8</code></li> </ul> <p>Reference</p>","tags":["\u5b57\u7b26\u4e32","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/22/#_2","title":"\u9898\u89e3","text":"<p>\u56de\u6eaf\u7b97\u6cd5</p> <ul> <li>\u5f53\u5de6\u62ec\u53f7\u6570\u91cf\u5c0f\u4e8e\u62ec\u53f7\u5bf9\u6570\u65f6\uff0c\u53ef\u4ee5\u6dfb\u52a0\u5de6\u62ec\u53f7</li> <li>\u5f53\u53f3\u62ec\u53f7\u6570\u91cf\u5c0f\u4e8e\u5de6\u62ec\u53f7\u6570\u91cf\u65f6\uff0c\u53ef\u4ee5\u6dfb\u52a0\u53f3\u62ec\u53f7</li> </ul> <p>\u6309\u7167\u5982\u4e0a\u65b9\u6cd5\u751f\u6210\u7684\u62ec\u53f7\u7ec4\u5408\u53ef\u4ee5\u4fdd\u8bc1\u4e00\u5b9a\u662f\u6709\u6548\u7684\u3002</p> <pre><code>/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\n\nvoid dfs(char *currentStr, int n, int left, int right, char **ret, int *returnSize)\n{\nif (left == n &amp;&amp; right == n)\n{\nret[*returnSize] = (char *)malloc(sizeof(char) * (2 * n + 1));\nstrcpy(ret[*returnSize], currentStr);\n*returnSize += 1;\nreturn;\n}\nif (left &lt; n)\n{\ncurrentStr[left + right] = '(';\ndfs(currentStr, n, left + 1, right, ret, returnSize);\n}\nif (right &lt; left)\n{\ncurrentStr[left + right] = ')';\ndfs(currentStr, n, left, right + 1, ret, returnSize);\n}\n}\nchar ** generateParenthesis(int n, int* returnSize){\nconst int maxLen = 10000;\n*returnSize = 0;\nchar **ret = (char **)malloc(sizeof(char *) * maxLen),\n*buffer = (char *)memset(malloc(sizeof(char) * (2 * n + 1)), 0, sizeof(char) * (2 * n + 1));\ndfs(buffer, n, 0, 0, ret, returnSize);\nreturn ret;\n}\n</code></pre>","tags":["\u5b57\u7b26\u4e32","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/23/","title":"23. \u5408\u5e76K\u4e2a\u5347\u5e8f\u94fe\u8868","text":"<p>\u96be\u5ea6\uff1a\u56f0\u96be</p>","tags":["\u5806","\u94fe\u8868","\u5206\u6cbb\u7b97\u6cd5"]},{"location":"coding/leetcode/23/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u94fe\u8868\u6570\u7ec4\uff0c\u6bcf\u4e2a\u94fe\u8868\u90fd\u5df2\u7ecf\u6309\u5347\u5e8f\u6392\u5217\u3002</p> <p>\u8bf7\u4f60\u5c06\u6240\u6709\u94fe\u8868\u5408\u5e76\u5230\u4e00\u4e2a\u5347\u5e8f\u94fe\u8868\u4e2d\uff0c\u8fd4\u56de\u5408\u5e76\u540e\u7684\u94fe\u8868\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1alists = [[1,4,5],[1,3,4],[2,6]]\n\u8f93\u51fa\uff1a[1,1,2,3,4,4,5,6]\n\u89e3\u91ca\uff1a\u94fe\u8868\u6570\u7ec4\u5982\u4e0b\uff1a\n[\n  1-&gt;4-&gt;5,\n  1-&gt;3-&gt;4,\n  2-&gt;6\n]\n\u5c06\u5b83\u4eec\u5408\u5e76\u5230\u4e00\u4e2a\u6709\u5e8f\u94fe\u8868\u4e2d\u5f97\u5230\u3002\n1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4-&gt;5-&gt;6\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1alists = []\n\u8f93\u51fa\uff1a[]\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1alists = [[]]\n\u8f93\u51fa\uff1a[]\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>k == lists.length</code></li> <li><code>0 &lt;= k &lt;= 10^4</code></li> <li><code>0 &lt;= lists[i].length &lt;= 500</code></li> <li><code>-10^4 &lt;= lists[i][j] &lt;= 10^4</code></li> <li><code>lists[i]</code> \u6309 \u5347\u5e8f \u6392\u5217</li> <li><code>lists[i].length</code> \u7684\u603b\u548c\u4e0d\u8d85\u8fc7 <code>10^4</code></li> </ul> <p>Reference</p>","tags":["\u5806","\u94fe\u8868","\u5206\u6cbb\u7b97\u6cd5"]},{"location":"coding/leetcode/23/#_2","title":"\u9898\u89e3","text":"<p>\u6700\u76f4\u63a5\u7684\u5408\u5e76\u601d\u8def\u662f\u6309\u7167\u987a\u5e8f\u5bf9\u94fe\u8868\u8fdb\u884c\u5408\u5e76\u3002\u8003\u8651\u5230\u5408\u5e76\u540e\u94fe\u8868\u53d8\u957f\uff0c\u5e73\u5747\u6bcf\u6b21\u5408\u5e76\u9700\u8981\u82b1\u8d39\\(\\mathcal O(MN)\\)\u7684\u65f6\u95f4\uff0c\u5171\u9700\u5408\u5e76\\(\\mathcal O(M)\\)\u6b21\uff0c\u56e0\u6b64\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\mathcal O(M^2N)\\)</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\n\nstruct ListNode* mergeLists(struct ListNode* l1, struct ListNode* l2);\nstruct ListNode* mergeKLists(struct ListNode** lists, int listsSize){\nif (!listsSize)\nreturn NULL;\nstruct ListNode *head = lists[0];\nfor (int i = 1; i&lt;listsSize; i++)\n{\nif (!head)\n{\nhead = lists[i];\ncontinue;\n}\nhead = mergeLists(head, lists[i]);\n}\nreturn head;\n}\n\nstruct ListNode* mergeLists(struct ListNode* l1, struct ListNode* l2){\nif (!l1)\nreturn l2;\nif (!l2)\nreturn l1;\nif (l1-&gt;val &lt; l2-&gt;val)\n{\nl1-&gt;next = mergeLists(l1-&gt;next, l2);\nreturn l1;\n}\nelse\n{\nl2-&gt;next = mergeLists(l1, l2-&gt;next);\nreturn l2;\n}\n}\n</code></pre> <p>\u5982\u679c\u4f7f\u7528\u4e24\u4e24\u5408\u5e76\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5c06\u5408\u5e76\u64cd\u4f5c\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4f4e\u81f3\\(\\mathcal O(N\\log M)\\)\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u4e3a\\(\\mathcal O(MN\\log M)\\)\u3002</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\n\nstruct ListNode* mergeLists(struct ListNode* l1, struct ListNode* l2);\nstruct ListNode* mergeKLists(struct ListNode** lists, int listsSize){\nif (!listsSize)\nreturn NULL;\nelse if (listsSize == 1)\nreturn lists[0];\nelse if (listsSize == 2)\nreturn mergeLists(lists[0], lists[1]);\nstruct ListNode *head = lists[0];\nint step = (listsSize + 1) &gt;&gt; 1;\nfor (int i = 0; i &lt; step; i++)\n{\nif (i + step &lt; listsSize)\nlists[i] = mergeLists(lists[i], lists[i + step]);\n}\nreturn mergeKLists(lists, step);\n}\n\nstruct ListNode* mergeLists(struct ListNode* l1, struct ListNode* l2){\nif (!l1)\nreturn l2;\nif (!l2)\nreturn l1;\nif (l1-&gt;val &lt; l2-&gt;val)\n{\nl1-&gt;next = mergeLists(l1-&gt;next, l2);\nreturn l1;\n}\nelse\n{\nl2-&gt;next = mergeLists(l1, l2-&gt;next);\nreturn l2;\n}\n}\n</code></pre>","tags":["\u5806","\u94fe\u8868","\u5206\u6cbb\u7b97\u6cd5"]},{"location":"coding/leetcode/234/","title":"234. \u56de\u6587\u94fe\u8868","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u94fe\u8868","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/234/#_1","title":"\u9898\u76ee","text":"<p>\u8bf7\u5224\u65ad\u4e00\u4e2a\u94fe\u8868\u662f\u5426\u4e3a\u56de\u6587\u94fe\u8868\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165: 1-&gt;2\n\u8f93\u51fa: false\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165: 1-&gt;2-&gt;2-&gt;1\n\u8f93\u51fa: true\n</code></pre> <p>\u8fdb\u9636\uff1a</p> <p>\u4f60\u80fd\u5426\u7528\\(O(n)\\)\u65f6\u95f4\u590d\u6742\u5ea6\u548c\\(O(1)\\)\u7a7a\u95f4\u590d\u6742\u5ea6\u89e3\u51b3\u6b64\u9898\uff1f</p> <p>Reference</p>","tags":["\u94fe\u8868","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/234/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u53cd\u5e8f\u6784\u5efa\u4e00\u4e2a\u65b0\u7684\u94fe\u8868\uff0c\u6bd4\u8f83\u4e24\u4e2a\u94fe\u8868\u662f\u5426\u76f8\u540c</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\nstruct ListNode *getNode(int val, struct ListNode *next)\n{\nstruct ListNode *ret = (struct ListNode *)malloc(sizeof(struct ListNode));\nret-&gt;val = val;\nret-&gt;next = next;\nreturn ret;\n}\n\nbool isPalindrome(struct ListNode* head){\nint len = 0;\nstruct ListNode *reversed = NULL, *cur1 = head, *cur2 = NULL;\nwhile(cur1 != NULL)\n{\nreversed = getNode(cur1-&gt;val, reversed);\ncur1 = cur1-&gt;next;\nlen++;\n}\ncur1 = head;\ncur2 = reversed;\nfor (int i = 0; i &lt; len / 2; i++)\n{\nif (cur1-&gt;val != cur2-&gt;val)\nreturn false;\ncur1 = cur1-&gt;next;\ncur2 = cur2-&gt;next;\n}\nreturn true;\n}\n</code></pre>","tags":["\u94fe\u8868","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/237/","title":"237. \u5220\u9664\u94fe\u8868\u4e2d\u7684\u8282\u70b9","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/237/#_1","title":"\u9898\u76ee","text":"<p>\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u4f7f\u5176\u53ef\u4ee5\u5220\u9664\u67d0\u4e2a\u94fe\u8868\u4e2d\u7ed9\u5b9a\u7684\uff08\u975e\u672b\u5c3e\uff09\u8282\u70b9\u3002\u4f20\u5165\u51fd\u6570\u7684\u552f\u4e00\u53c2\u6570\u4e3a \u8981\u88ab\u5220\u9664\u7684\u8282\u70b9 \u3002</p> <p>\u73b0\u6709\u4e00\u4e2a\u94fe\u8868 --\u00a0head =\u00a0[4,5,1,9]\uff0c\u5b83\u53ef\u4ee5\u8868\u793a\u4e3a:</p> <p></p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1ahead = [4,5,1,9], node = 5\n\u8f93\u51fa\uff1a[4,1,9]\n\u89e3\u91ca\uff1a\u7ed9\u5b9a\u4f60\u94fe\u8868\u4e2d\u503c\u4e3a\u00a05\u00a0\u7684\u7b2c\u4e8c\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u5728\u8c03\u7528\u4e86\u4f60\u7684\u51fd\u6570\u4e4b\u540e\uff0c\u8be5\u94fe\u8868\u5e94\u53d8\u4e3a 4 -&gt; 1 -&gt; 9.\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1ahead = [4,5,1,9], node = 1\n\u8f93\u51fa\uff1a[4,5,9]\n\u89e3\u91ca\uff1a\u7ed9\u5b9a\u4f60\u94fe\u8868\u4e2d\u503c\u4e3a\u00a01\u00a0\u7684\u7b2c\u4e09\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u5728\u8c03\u7528\u4e86\u4f60\u7684\u51fd\u6570\u4e4b\u540e\uff0c\u8be5\u94fe\u8868\u5e94\u53d8\u4e3a 4 -&gt; 5 -&gt; 9.\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li>\u94fe\u8868\u81f3\u5c11\u5305\u542b\u4e24\u4e2a\u8282\u70b9\u3002</li> <li>\u94fe\u8868\u4e2d\u6240\u6709\u8282\u70b9\u7684\u503c\u90fd\u662f\u552f\u4e00\u7684\u3002</li> <li>\u7ed9\u5b9a\u7684\u8282\u70b9\u4e3a\u975e\u672b\u5c3e\u8282\u70b9\u5e76\u4e14\u4e00\u5b9a\u662f\u94fe\u8868\u4e2d\u7684\u4e00\u4e2a\u6709\u6548\u8282\u70b9\u3002</li> <li>\u4e0d\u8981\u4ece\u4f60\u7684\u51fd\u6570\u4e2d\u8fd4\u56de\u4efb\u4f55\u7ed3\u679c\u3002</li> </ul> <p>Reference</p>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/237/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u5c06\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u503c\u590d\u5236\u5230\u5f53\u524d\u8282\u70b9\uff0c\u7136\u540e\u5220\u53bb\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002\uff08\u5df2\u77e5\u5f53\u524d\u8282\u70b9\u4e00\u5b9a\u4e0d\u662f\u672b\u5c3e\u8282\u70b9\uff09</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>void deleteNode(struct ListNode* node) {\nnode-&gt;val = node-&gt;next-&gt;val;\nnode-&gt;next = node-&gt;next-&gt;next;\n}\n</code></pre>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/24/","title":"24. \u4e24\u4e24\u4ea4\u6362\u94fe\u8868\u4e2d\u7684\u8282\u70b9","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u9012\u5f52","\u94fe\u8868"]},{"location":"coding/leetcode/24/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868\uff0c\u4e24\u4e24\u4ea4\u6362\u5176\u4e2d\u76f8\u90bb\u7684\u8282\u70b9\uff0c\u5e76\u8fd4\u56de\u4ea4\u6362\u540e\u7684\u94fe\u8868\u3002</p> <p>\u4f60\u4e0d\u80fd\u53ea\u662f\u5355\u7eaf\u7684\u6539\u53d8\u8282\u70b9\u5185\u90e8\u7684\u503c\uff0c\u800c\u662f\u9700\u8981\u5b9e\u9645\u7684\u8fdb\u884c\u8282\u70b9\u4ea4\u6362\u3002</p> <p>\u793a\u4f8b\uff1a <pre><code>\u7ed9\u5b9a 1-&gt;2-&gt;3-&gt;4, \u4f60\u5e94\u8be5\u8fd4\u56de 2-&gt;1-&gt;4-&gt;3.\n</code></pre></p> <p>Reference</p>","tags":["\u9012\u5f52","\u94fe\u8868"]},{"location":"coding/leetcode/24/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u5148\u4ea4\u6362\u524d\u4e24\u4e2a\u8282\u70b9\uff0c\u518d\u9012\u5f52\u5904\u7406\u540e\u9762\u7684\u8282\u70b9\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\n\nstruct ListNode* swapPairs(struct ListNode* head){\nif (!head || !(head-&gt;next))\nreturn head;\nstruct ListNode *temp1 = head-&gt;next, *temp2 = temp1-&gt;next;\ntemp1-&gt;next = head;\nhead-&gt;next = swapPairs(temp2);\nreturn temp1;\n}\n</code></pre>","tags":["\u9012\u5f52","\u94fe\u8868"]},{"location":"coding/leetcode/242/","title":"242. \u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6392\u5e8f","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/242/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t \uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u5224\u65ad t \u662f\u5426\u662f s \u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u3002</p> <p>\u793a\u4f8b\u00a01\uff1a</p> <pre><code>\u8f93\u5165: s = \"anagram\", t = \"nagaram\"\n\u8f93\u51fa: true\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165: s = \"rat\", t = \"car\"\n\u8f93\u51fa: false\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u5b57\u7b26\u4e32\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</p> <p>\u8fdb\u9636\uff1a</p> <p>\u5982\u679c\u8f93\u5165\u5b57\u7b26\u4e32\u5305\u542b unicode \u5b57\u7b26\u600e\u4e48\u529e\uff1f\u4f60\u80fd\u5426\u8c03\u6574\u4f60\u7684\u89e3\u6cd5\u6765\u5e94\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff1f</p> <p>Reference</p>","tags":["\u6392\u5e8f","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/242/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u7edf\u8ba1\u5e76\u6bd4\u8f83\u4e24\u4e2a\u8f93\u5165\u5b57\u7b26\u4e32\u4e2d\u5404\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u5373\u53ef\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>bool isAnagram(char * s, char * t){\nint hashMap1[26] = {0}, hashMap2[26] = {0};\nchar *cur = s;\nwhile(*cur)\n{\nhashMap1[*cur - 'a']++;\ncur++;\n}\ncur = t;\nwhile(*cur)\n{\nhashMap2[*cur - 'a']++;\ncur++;\n}\nint i = 0;\nfor (i = 0; i &lt; 26; i++)\nif (hashMap1[i] != hashMap2[i])\nreturn false;\nreturn true;\n}\n</code></pre>","tags":["\u6392\u5e8f","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/25/","title":"25. K \u4e2a\u4e00\u7ec4\u7ffb\u8f6c\u94fe\u8868","text":"<p>\u96be\u5ea6\uff1a\u56f0\u96be</p>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/25/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u94fe\u8868\uff0c\u6bcf\u00a0k\u00a0\u4e2a\u8282\u70b9\u4e00\u7ec4\u8fdb\u884c\u7ffb\u8f6c\uff0c\u8bf7\u4f60\u8fd4\u56de\u7ffb\u8f6c\u540e\u7684\u94fe\u8868\u3002</p> <p>k\u00a0\u662f\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u5b83\u7684\u503c\u5c0f\u4e8e\u6216\u7b49\u4e8e\u94fe\u8868\u7684\u957f\u5ea6\u3002</p> <p>\u5982\u679c\u8282\u70b9\u603b\u6570\u4e0d\u662f\u00a0k\u00a0\u7684\u6574\u6570\u500d\uff0c\u90a3\u4e48\u8bf7\u5c06\u6700\u540e\u5269\u4f59\u7684\u8282\u70b9\u4fdd\u6301\u539f\u6709\u987a\u5e8f\u3002</p> <p>\u8fdb\u9636\uff1a</p> <ul> <li>\u4f60\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u53ea\u4f7f\u7528\u5e38\u6570\u989d\u5916\u7a7a\u95f4\u7684\u7b97\u6cd5\u6765\u89e3\u51b3\u6b64\u95ee\u9898\u5417\uff1f</li> <li>\u4f60\u4e0d\u80fd\u53ea\u662f\u5355\u7eaf\u7684\u6539\u53d8\u8282\u70b9\u5185\u90e8\u7684\u503c\uff0c\u800c\u662f\u9700\u8981\u5b9e\u9645\u8fdb\u884c\u8282\u70b9\u4ea4\u6362\u3002</li> </ul> <p>\u793a\u4f8b 1\uff1a</p> <p></p> <pre><code>\u8f93\u5165\uff1ahead = [1,2,3,4,5], k = 2\n\u8f93\u51fa\uff1a[2,1,4,3,5]\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <p></p> <pre><code>\u8f93\u5165\uff1ahead = [1,2,3,4,5], k = 3\n\u8f93\u51fa\uff1a[3,2,1,4,5]\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1ahead = [1,2,3,4,5], k = 1\n\u8f93\u51fa\uff1a[1,2,3,4,5]\n</code></pre> <p>\u793a\u4f8b 4\uff1a</p> <pre><code>\u8f93\u5165\uff1ahead = [1], k = 1\n\u8f93\u51fa\uff1a[1]\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li>\u5217\u8868\u4e2d\u8282\u70b9\u7684\u6570\u91cf\u5728\u8303\u56f4 <code>sz</code> \u5185</li> <li><code>1 &lt;= sz &lt;= 5000</code></li> <li><code>0 &lt;= Node.val &lt;= 1000</code></li> <li><code>1 &lt;= k &lt;= sz</code></li> </ul> <p>Reference</p>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/25/#_2","title":"\u9898\u89e3","text":"<p>\u904d\u5386 k \u4e2a\u5143\u7d20\u540e\u5c06\u94fe\u8868\u7684\u7ed3\u5c3e\u8bbe\u4e3a<code>NULL</code>\uff0c\u6267\u884c\u53cd\u8f6c\u64cd\u4f5c\u540e\u63a5\u4e0a\u540e\u9762\u7684\u94fe\u8868\u3002</p> <p>\u6ce8\u610f\u53ef\u4ee5\u4f7f\u7528\\(\\mathcal O(1)\\)\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u53cd\u8f6c\u94fe\u8868\u3002</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\nstruct ListNode *reverse(struct ListNode *head)\n{\nstruct ListNode *prev = NULL, *cur = head, *next = head-&gt;next;\nwhile (next != NULL)\n{\ncur-&gt;next = prev;\nprev = cur;\ncur = next;\nnext = next-&gt;next;\n}\ncur-&gt;next = prev;\nreturn cur;\n}\n\nstruct ListNode* reverseKGroup(struct ListNode* head, int k){\nint i = 0;\nstruct ListNode *ret = NULL, *tempHead = NULL, *cur = head;\nfor (i = 0; i &lt; k - 1 &amp;&amp; cur != NULL; i++)\ncur = cur-&gt;next;\nif (cur == NULL)\nreturn head;\ntempHead = cur-&gt;next;\ncur-&gt;next = NULL;\nret = reverse(head);\nhead-&gt;next = reverseKGroup(tempHead, k);\nreturn ret;\n}\n</code></pre>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/26/","title":"26. \u5220\u9664\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/26/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6392\u5e8f\u6570\u7ec4\uff0c\u4f60\u9700\u8981\u5728\u539f\u5730\u5220\u9664\u91cd\u590d\u51fa\u73b0\u7684\u5143\u7d20\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\uff0c\u8fd4\u56de\u79fb\u9664\u540e\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\u3002</p> <p>\u4e0d\u8981\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b\u5728\u539f\u5730\u4fee\u6539\u8f93\u5165\u6570\u7ec4 \u5e76\u5728\u4f7f\u7528\\(O(1)\\)\u989d\u5916\u7a7a\u95f4\u7684\u6761\u4ef6\u4e0b\u5b8c\u6210\u3002</p> <p>\u793a\u4f8b\u00a01\uff1a</p> <pre><code>\u7ed9\u5b9a\u6570\u7ec4 nums = [1,1,2], \n\n\u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u65b0\u7684\u957f\u5ea6 2, \u5e76\u4e14\u539f\u6570\u7ec4 nums \u7684\u524d\u4e24\u4e2a\u5143\u7d20\u88ab\u4fee\u6539\u4e3a 1, 2\u3002 \n\n\u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002\n</code></pre> <p>\u793a\u4f8b\u00a02\uff1a</p> <pre><code>\u7ed9\u5b9a nums = [0,0,1,1,1,2,2,3,3,4],\n\n\u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u65b0\u7684\u957f\u5ea6 5, \u5e76\u4e14\u539f\u6570\u7ec4 nums \u7684\u524d\u4e94\u4e2a\u5143\u7d20\u88ab\u4fee\u6539\u4e3a 0, 1, 2, 3, 4\u3002\n\n\u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <p>\u4e3a\u4ec0\u4e48\u8fd4\u56de\u6570\u503c\u662f\u6574\u6570\uff0c\u4f46\u8f93\u51fa\u7684\u7b54\u6848\u662f\u6570\u7ec4\u5462?</p> <p>\u8bf7\u6ce8\u610f\uff0c\u8f93\u5165\u6570\u7ec4\u662f\u4ee5 \u300c\u5f15\u7528\u300d \u65b9\u5f0f\u4f20\u9012\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5728\u51fd\u6570\u91cc\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u5bf9\u4e8e\u8c03\u7528\u8005\u662f\u53ef\u89c1\u7684\u3002</p> <p>\u4f60\u53ef\u4ee5\u60f3\u8c61\u5185\u90e8\u64cd\u4f5c\u5982\u4e0b:</p> <pre><code>// nums \u662f\u4ee5\u201c\u5f15\u7528\u201d\u65b9\u5f0f\u4f20\u9012\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u5bf9\u5b9e\u53c2\u505a\u4efb\u4f55\u62f7\u8d1d\nint len = removeDuplicates(nums);\n\n// \u5728\u51fd\u6570\u91cc\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u5bf9\u4e8e\u8c03\u7528\u8005\u662f\u53ef\u89c1\u7684\u3002\n// \u6839\u636e\u4f60\u7684\u51fd\u6570\u8fd4\u56de\u7684\u957f\u5ea6, \u5b83\u4f1a\u6253\u5370\u51fa\u6570\u7ec4\u4e2d\u8be5\u957f\u5ea6\u8303\u56f4\u5185\u7684\u6240\u6709\u5143\u7d20\u3002\nfor (int i = 0; i &lt; len; i++) {\n\u00a0 \u00a0 print(nums[i]);\n}\n</code></pre> <p>Reference</p>","tags":["\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/26/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a </p> <ol> <li>\u5f53\u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u4e0d\u5b58\u5728\u91cd\u590d\u5143\u7d20\uff1b</li> <li>\u4f7f\u7528\u4e00\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411\u5220\u9664\u91cd\u590d\u503c\u540e\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\uff0c\u53e6\u4e00\u4e2a\u6570\u503c\u8868\u793a\u5220\u53bb\u5143\u7d20\u7684\u4e2a\u6570\u3002</li> </ol> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>int removeDuplicates(int* nums, int numsSize){\nif (numsSize &lt; 2)\nreturn numsSize;\nint steps = 0, i = 0;\nwhile(i &lt; numsSize - steps - 1)\n{\nif (steps)\nnums[i + 1] = nums[i + steps + 1];\nif (nums[i] == nums[i + steps + 1])\nsteps++;\nelse\ni++;\n}\nreturn numsSize - steps;\n}\n</code></pre>","tags":["\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/27/","title":"27. \u79fb\u9664\u5143\u7d20","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/27/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6570\u7ec4 <code>nums</code>\u00a0\u548c\u4e00\u4e2a\u503c <code>val</code>\uff0c\u4f60\u9700\u8981 \u539f\u5730 \u79fb\u9664\u6240\u6709\u6570\u503c\u7b49\u4e8e\u00a0<code>val</code>\u00a0\u7684\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u79fb\u9664\u540e\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\u3002</p> <p>\u4e0d\u8981\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b\u4ec5\u4f7f\u7528 <code>O(1)</code> \u989d\u5916\u7a7a\u95f4\u5e76 \u539f\u5730 \u4fee\u6539\u8f93\u5165\u6570\u7ec4\u3002</p> <p>\u5143\u7d20\u7684\u987a\u5e8f\u53ef\u4ee5\u6539\u53d8\u3002\u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002</p> <p>\u8bf4\u660e:</p> <p>\u4e3a\u4ec0\u4e48\u8fd4\u56de\u6570\u503c\u662f\u6574\u6570\uff0c\u4f46\u8f93\u51fa\u7684\u7b54\u6848\u662f\u6570\u7ec4\u5462?</p> <p>\u8bf7\u6ce8\u610f\uff0c\u8f93\u5165\u6570\u7ec4\u662f\u4ee5\u300c\u5f15\u7528\u300d\u65b9\u5f0f\u4f20\u9012\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5728\u51fd\u6570\u91cc\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u5bf9\u4e8e\u8c03\u7528\u8005\u662f\u53ef\u89c1\u7684\u3002</p> <p>\u4f60\u53ef\u4ee5\u60f3\u8c61\u5185\u90e8\u64cd\u4f5c\u5982\u4e0b:</p> <pre><code>// nums \u662f\u4ee5\u201c\u5f15\u7528\u201d\u65b9\u5f0f\u4f20\u9012\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u5bf9\u5b9e\u53c2\u4f5c\u4efb\u4f55\u62f7\u8d1d\nint len = removeElement(nums, val);\n\n// \u5728\u51fd\u6570\u91cc\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u5bf9\u4e8e\u8c03\u7528\u8005\u662f\u53ef\u89c1\u7684\u3002\n// \u6839\u636e\u4f60\u7684\u51fd\u6570\u8fd4\u56de\u7684\u957f\u5ea6, \u5b83\u4f1a\u6253\u5370\u51fa\u6570\u7ec4\u4e2d \u8be5\u957f\u5ea6\u8303\u56f4\u5185 \u7684\u6240\u6709\u5143\u7d20\u3002\nfor (int i = 0; i &lt; len; i++) {\n\u00a0 \u00a0 print(nums[i]);\n}\n</code></pre> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [3,2,2,3], val = 3\n\u8f93\u51fa\uff1a2, nums = [2,2]\n\u89e3\u91ca\uff1a\u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u65b0\u7684\u957f\u5ea6 2, \u5e76\u4e14 nums \u4e2d\u7684\u524d\u4e24\u4e2a\u5143\u7d20\u5747\u4e3a 2\u3002\u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002\u4f8b\u5982\uff0c\u51fd\u6570\u8fd4\u56de\u7684\u65b0\u957f\u5ea6\u4e3a 2 \uff0c\u800c nums = [2,2,3,3] \u6216 nums = [2,2,0,0]\uff0c\u4e5f\u4f1a\u88ab\u89c6\u4f5c\u6b63\u786e\u7b54\u6848\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [0,1,2,2,3,0,4,2], val = 2\n\u8f93\u51fa\uff1a5, nums = [0,1,4,0,3]\n\u89e3\u91ca\uff1a\u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u65b0\u7684\u957f\u5ea6 5, \u5e76\u4e14 nums \u4e2d\u7684\u524d\u4e94\u4e2a\u5143\u7d20\u4e3a 0, 1, 3, 0, 4\u3002\u6ce8\u610f\u8fd9\u4e94\u4e2a\u5143\u7d20\u53ef\u4e3a\u4efb\u610f\u987a\u5e8f\u3002\u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>0 &lt;= nums.length &lt;= 100</code></li> <li><code>0 &lt;= nums[i] &lt;= 50</code></li> <li><code>0 &lt;= val &lt;= 100</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/27/#_2","title":"\u9898\u89e3","text":"<p>\u4f7f\u7528\u53cc\u6307\u9488\u6cd5\uff0c\u4e24\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411\uff1a</p> <ul> <li>\u5c1a\u672a\u68c0\u67e5\u8fc7\u7684\u90e8\u5206\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20</li> <li>\u5df2\u7ecf\u68c0\u67e5\u8fc7\u7684\u90e8\u5206\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20</li> </ul> <p>\u5f53\u4e24\u4e2a\u6307\u9488\u91cd\u5408\u65f6\u4e0d\u9700\u8981\u8fdb\u884c\u590d\u5236\u64cd\u4f5c\u3002</p> <pre><code>int removeElement(int* nums, int numsSize, int val){\nint slow = 0, fast = 0, ret = numsSize;\nif (numsSize == 0)\nreturn 0;\ndo\n{\nif (fast &gt; slow)\nnums[slow] = nums[fast];\nif (nums[fast] == val)\nret--;\nelse\nslow++;\nfast++;\n}\nwhile (fast &lt; numsSize);\nreturn ret;\n}\n</code></pre>","tags":["\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/28/","title":"28. \u5b9e\u73b0 strStr()","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/28/#_1","title":"\u9898\u76ee","text":"<p>\u5b9e\u73b0<code>strStr()</code>\u51fd\u6570\u3002</p> <p>\u7ed9\u5b9a\u4e00\u4e2a<code>haystack</code>\u5b57\u7b26\u4e32\u548c\u4e00\u4e2a<code>needle</code>\u5b57\u7b26\u4e32\uff0c\u5728<code>haystack</code>\u5b57\u7b26\u4e32\u4e2d\u627e\u51fa needle \u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e (\u4ece0\u5f00\u59cb)\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u00a0-1\u3002</p> <p>\u793a\u4f8b 1:</p> <pre><code>\u8f93\u5165: haystack = \"hello\", needle = \"ll\"\n\u8f93\u51fa: 2\n</code></pre> <p>\u793a\u4f8b 2:</p> <pre><code>\u8f93\u5165: haystack = \"aaaaa\", needle = \"bba\"\n\u8f93\u51fa: -1\n</code></pre> <p>\u8bf4\u660e:</p> <p>\u5f53<code>needle</code>\u662f\u7a7a\u5b57\u7b26\u4e32\u65f6\uff0c\u6211\u4eec\u5e94\u5f53\u8fd4\u56de\u4ec0\u4e48\u503c\u5462\uff1f\u8fd9\u662f\u4e00\u4e2a\u5728\u9762\u8bd5\u4e2d\u5f88\u597d\u7684\u95ee\u9898\u3002</p> <p>\u5bf9\u4e8e\u672c\u9898\u800c\u8a00\uff0c\u5f53<code>needle</code>\u662f\u7a7a\u5b57\u7b26\u4e32\u65f6\u6211\u4eec\u5e94\u5f53\u8fd4\u56de 0 \u3002\u8fd9\u4e0eC\u8bed\u8a00\u7684<code>strstr()</code>\u4ee5\u53caJava\u7684<code>indexOf()</code>\u5b9a\u4e49\u76f8\u7b26\u3002</p> <p>Reference</p>","tags":["\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/28/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u66b4\u529b\u6309\u4f4d\u5339\u914d</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>int strStr(char * haystack, char * needle){\nint len1 = strlen(haystack), len2 = strlen(needle), cur1 = 0, cur2 = 0, cur3 = 0, success = 1;\nif (!len2)\nreturn 0;\nif (len1 &lt; len2)\nreturn -1;\ndo\n{\nsuccess = 1;\nif (haystack[cur1] == needle[0])\n{\ncur2 = 0;\ncur3 = 0;\nwhile(cur2 &lt; len2 &amp;&amp; cur3 + cur1 &lt; len1 &amp;&amp; success)\n{\nif(haystack[cur1 + cur3] != needle[cur2])\nsuccess = 0;\ncur3++;\ncur2++;\n}\nif (success)\nreturn cur1;\n}\ncur1++;\n}\nwhile (haystack[cur1 + len2 - 1]);\nreturn -1;\n}\n</code></pre>","tags":["\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/3/","title":"3. \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u54c8\u5e0c\u8868","\u53cc\u6307\u9488","\u5b57\u7b26\u4e32","Sliding Window"]},{"location":"coding/leetcode/3/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8bf7\u4f60\u627e\u51fa\u5176\u4e2d\u4e0d\u542b\u6709\u91cd\u590d\u5b57\u7b26\u7684\u00a0\u6700\u957f\u5b50\u4e32\u00a0\u7684\u957f\u5ea6\u3002</p> <p>\u793a\u4f8b\u00a01:</p> <pre><code>\u8f93\u5165: s = \"abcabcbb\"\n\u8f93\u51fa: 3 \n\u89e3\u91ca: \u56e0\u4e3a\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u662f \"abc\"\uff0c\u6240\u4ee5\u5176\u957f\u5ea6\u4e3a 3\u3002\n</code></pre> <p>\u793a\u4f8b 2:</p> <pre><code>\u8f93\u5165: s = \"bbbbb\"\n\u8f93\u51fa: 1\n\u89e3\u91ca: \u56e0\u4e3a\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u662f \"b\"\uff0c\u6240\u4ee5\u5176\u957f\u5ea6\u4e3a 1\u3002\n</code></pre> <p>\u793a\u4f8b 3:</p> <pre><code>\u8f93\u5165: s = \"pwwkew\"\n\u8f93\u51fa: 3\n\u89e3\u91ca: \u56e0\u4e3a\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u662f\u00a0\"wke\"\uff0c\u6240\u4ee5\u5176\u957f\u5ea6\u4e3a 3\u3002\n\u00a0    \u8bf7\u6ce8\u610f\uff0c\u4f60\u7684\u7b54\u6848\u5fc5\u987b\u662f \u5b50\u4e32 \u7684\u957f\u5ea6\uff0c\"pwke\"\u00a0\u662f\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u4e0d\u662f\u5b50\u4e32\u3002\n</code></pre> <p>\u793a\u4f8b 4:</p> <pre><code>\u8f93\u5165: s = \"\"\n\u8f93\u51fa: 0\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>0 &lt;= s.length &lt;= 5 * 104</code></li> <li><code>s</code>\u00a0\u7531\u82f1\u6587\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7b26\u53f7\u548c\u7a7a\u683c\u7ec4\u6210</li> </ul>","tags":["\u54c8\u5e0c\u8868","\u53cc\u6307\u9488","\u5b57\u7b26\u4e32","Sliding Window"]},{"location":"coding/leetcode/3/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def \uff1a\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u50a8\u5404\u5b57\u6bcd\u51fa\u73b0\u7684\u6b21\u6570\uff08\u54c8\u5e0c\u8868\uff09\u3002\u5f53\u4e0d\u5b58\u5728\u91cd\u590d\u5b57\u6bcd\u65f6\u6ed1\u52a8\u7a97\u53e3\u4e0d\u65ad\u5411\u53f3\u5ef6\u4f38\uff0c\u76f4\u5230\u51fa\u73b0\u91cd\u590d\u5b57\u6bcd\u6216\u5230\u8fbe\u5b57\u7b26\u4e32\u7ed3\u5c3e\u3002\u68c0\u6d4b\u5230\u91cd\u590d\u5b57\u6bcd\u540e\uff0c\u4ece\u5de6\u5411\u53f3\u6536\u7f29\u6ed1\u52a8\u7a97\u53e3\uff0c\u6bcf\u6b21\u6536\u7f29\u90fd\u5bf9\u54c8\u5e0c\u8868\u8fdb\u884c\u66f4\u65b0\u3002\u76f4\u5230\u4e0d\u5b58\u5728\u91cd\u590d\u5b57\u6bcd\u65f6\uff0c\u6ed1\u52a8\u7a97\u53e3\u624d\u505c\u6b62\u6536\u7f29\uff0c\u7ee7\u7eed\u5411\u53f3\u5ef6\u4f38\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\\(O(N)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6 \uff1a\\(O(1)\\)\uff0c\u4e0e\u5b57\u7b26\u4e32\u957f\u5ea6\u65e0\u5173\uff0c\u4f46\u4e0e\u5355\u4e2a\u5b57\u7b26\u7684\u5bbd\u5ea6\u6709\u5173\u3002</p> <pre><code>int lengthOfLongestSubstring(char * s){\nint length = 0, ret = 0;\nchar hashMap[256] = {0}, *cur = s;\nwhile(*cur)\n{\nwhile(hashMap[*cur])\n{\nhashMap[*(cur - length)] -= 1;\nlength--;\n}\nhashMap[*cur] = 1;\nlength++;\nret = ret &gt; length ? ret : length;\ncur++;\n}\nreturn ret;\n}\n</code></pre> <p>Reference</p>","tags":["\u54c8\u5e0c\u8868","\u53cc\u6307\u9488","\u5b57\u7b26\u4e32","Sliding Window"]},{"location":"coding/leetcode/315/","title":"315. \u8ba1\u7b97\u53f3\u4fa7\u5c0f\u4e8e\u5f53\u524d\u5143\u7d20\u7684\u4e2a\u6570","text":"<p>\u96be\u5ea6\uff1a\u56f0\u96be</p>","tags":["\u6392\u5e8f","\u6811\u72b6\u6570\u7ec4","\u7ebf\u6bb5\u6811","\u4e8c\u5206\u67e5\u627e","\u5206\u6cbb\u7b97\u6cd5"]},{"location":"coding/leetcode/315/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \uff0c\u6309\u8981\u6c42\u8fd4\u56de\u4e00\u4e2a\u65b0\u6570\u7ec4\u00a0counts \u3002\u6570\u7ec4 counts \u6709\u8be5\u6027\u8d28\uff1a<code>counts[i]</code>\u7684\u503c\u662f<code>nums[i]</code>\u53f3\u4fa7\u5c0f\u4e8e<code>nums[i]</code>\u7684\u5143\u7d20\u7684\u6570\u91cf\u3002</p> <p>\u793a\u4f8b\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [5,2,6,1]\n\u8f93\u51fa\uff1a[2,1,1,0] \n\u89e3\u91ca\uff1a\n5 \u7684\u53f3\u4fa7\u6709 2 \u4e2a\u66f4\u5c0f\u7684\u5143\u7d20 (2 \u548c 1)\n2 \u7684\u53f3\u4fa7\u4ec5\u6709 1 \u4e2a\u66f4\u5c0f\u7684\u5143\u7d20 (1)\n6 \u7684\u53f3\u4fa7\u6709 1 \u4e2a\u66f4\u5c0f\u7684\u5143\u7d20 (1)\n1 \u7684\u53f3\u4fa7\u6709 0 \u4e2a\u66f4\u5c0f\u7684\u5143\u7d20\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>0 &lt;= nums.length &lt;= 10^5</code></li> <li><code>-10^4\u00a0&lt;= nums[i] &lt;= 10^4</code></li> </ul> <p>Reference</p>","tags":["\u6392\u5e8f","\u6811\u72b6\u6570\u7ec4","\u7ebf\u6bb5\u6811","\u4e8c\u5206\u67e5\u627e","\u5206\u6cbb\u7b97\u6cd5"]},{"location":"coding/leetcode/315/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u4ece\u540e\u5f80\u524d\u6784\u9020\u4e00\u4e2a\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u5728\u4e8c\u53c9\u67e5\u627e\u6811\u4e2d\u7ef4\u62a4\u6811\u4e2d\u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u6570\u5b57\u7684\u4e2a\u6570\u3002</p> <p>\u4e8c\u53c9\u6811\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u57df\u7528\u4e8e\u8ba1\u7b97\u5de6\u5b50\u6811\u7684\u5143\u7d20\u603b\u6570\uff0c\u5373\u5f53\u524d\u6811\u4e2d\u6570\u503c\u5c0f\u4e8e\u8be5\u8282\u70b9\u7684\u5143\u7d20\u603b\u6570\u3002\u5b9e\u73b0\u65b9\u6cd5\u662f\u5728\u5de6\u5b50\u6811\u6dfb\u52a0\u5143\u7d20\u540e\u8be5\u57df\u7684\u503c\u589e\u52a01\u3002</p> <p>\u5728\u8282\u70b9\u7684\u53f3\u5b50\u6811\u6dfb\u52a0\u5143\u7d20\u65f6\uff0c\u610f\u5473\u7740\u5f53\u524d\u8282\u70b9\u548c\u8282\u70b9\u5de6\u5b50\u6811\u4e2d\u7684\u6240\u6709\u8282\u70b9\u90fd\u662f\u7b26\u5408\u53f3\u4fa7\u5c0f\u4e8e\u5f53\u524d\u5143\u7d20\u7684\u8282\u70b9\u3002\u5728\u9012\u5f52\u8fc7\u7a0b\u4e2d\u9700\u8981\u4f20\u9012\u4e00\u4e2a\u7528\u4f5c\u8ba1\u6570\u5668\u7684\u6307\u9488\u53c2\u6570\uff08\u8ba1\u6570\u7684\u6570\u503c\u5373\u4e3a\u6240\u6c42\u7684\u7ed3\u679c\uff09\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nstruct TreeNode2\n{\nstruct TreeNode2 *left;\nstruct TreeNode2 *right;\nint val;\nint subs;\n};\n\nstruct TreeNode2 *insert(struct TreeNode2 *dest, int src, int *depth)\n{\nif (dest == NULL)\n{\nstruct TreeNode2 *ret = (struct TreeNode2 *)malloc(sizeof(struct TreeNode2));\nret-&gt;left = NULL;\nret-&gt;right = NULL;\nret-&gt;val = src;\nret-&gt;subs = 0;\nreturn ret;\n}\nif (src &gt; dest-&gt;val)\n{\n*depth += 1 + dest-&gt;subs;\ndest-&gt;right = insert(dest-&gt;right, src, depth);\n}\nelse\n{\ndest-&gt;subs++;\ndest-&gt;left = insert(dest-&gt;left, src, depth);\n}\nreturn dest;\n}\n\nint *countSmaller(int *nums, int numsSize, int *returnSize)\n{\n*returnSize = numsSize;\nint *ret = (int *)memset(malloc(sizeof(int) * numsSize), 0, sizeof(int) * numsSize), i = 0;\nif (numsSize &lt;= 1)\nreturn ret;\nstruct TreeNode2 *tempTree = NULL;\nfor (i = numsSize - 1; i &gt;= 0; i--)\ntempTree = insert(tempTree, nums[i], ret + i);\nreturn ret;\n}\n</code></pre>","tags":["\u6392\u5e8f","\u6811\u72b6\u6570\u7ec4","\u7ebf\u6bb5\u6811","\u4e8c\u5206\u67e5\u627e","\u5206\u6cbb\u7b97\u6cd5"]},{"location":"coding/leetcode/341/","title":"341. \u6241\u5e73\u5316\u5d4c\u5957\u5217\u8868\u8fed\u4ee3\u5668","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6808","\u8bbe\u8ba1"]},{"location":"coding/leetcode/341/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u5d4c\u5957\u7684\u6574\u578b\u5217\u8868\u3002\u8bf7\u4f60\u8bbe\u8ba1\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u4f7f\u5176\u80fd\u591f\u904d\u5386\u8fd9\u4e2a\u6574\u578b\u5217\u8868\u4e2d\u7684\u6240\u6709\u6574\u6570\u3002</p> <p>\u5217\u8868\u4e2d\u7684\u6bcf\u4e00\u9879\u6216\u8005\u4e3a\u4e00\u4e2a\u6574\u6570\uff0c\u6216\u8005\u662f\u53e6\u4e00\u4e2a\u5217\u8868\u3002\u5176\u4e2d\u5217\u8868\u7684\u5143\u7d20\u4e5f\u53ef\u80fd\u662f\u6574\u6570\u6216\u662f\u5176\u4ed6\u5217\u8868\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165: [[1,1],2,[1,1]]\n\u8f93\u51fa: [1,1,2,1,1]\n\u89e3\u91ca: \u901a\u8fc7\u91cd\u590d\u8c03\u7528\u00a0next \u76f4\u5230\u00a0hasNext \u8fd4\u56de false\uff0cnext\u00a0\u8fd4\u56de\u7684\u5143\u7d20\u7684\u987a\u5e8f\u5e94\u8be5\u662f: [1,1,2,1,1]\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165: [1,[4,[6]]]\n\u8f93\u51fa: [1,4,6]\n\u89e3\u91ca: \u901a\u8fc7\u91cd\u590d\u8c03\u7528\u00a0next\u00a0\u76f4\u5230\u00a0hasNext \u8fd4\u56de false\uff0cnext\u00a0\u8fd4\u56de\u7684\u5143\u7d20\u7684\u987a\u5e8f\u5e94\u8be5\u662f: [1,4,6]\u3002\n</code></pre> <p>Reference</p>","tags":["\u6808","\u8bbe\u8ba1"]},{"location":"coding/leetcode/341/#_2","title":"\u9898\u89e3","text":"<p>C\u8bed\u8a00\u53ef\u4ee5\u5c06\u5d4c\u5957\u5217\u8868\u8f6c\u6362\u4e3a\u94fe\u8868\uff0c\u7136\u540e\u5bf9\u94fe\u8868\u8fdb\u884c\u8fed\u4ee3\uff1a</p> <pre><code>/**\n * *********************************************************************\n * // This is the interface that allows for creating nested lists.\n * // You should not implement it, or speculate about its implementation\n * *********************************************************************\n *\n * // Return true if this NestedInteger holds a single integer, rather than a nested list.\n * bool NestedIntegerIsInteger(struct NestedInteger *);\n *\n * // Return the single integer that this NestedInteger holds, if it holds a single integer\n * // The result is undefined if this NestedInteger holds a nested list\n * int NestedIntegerGetInteger(struct NestedInteger *);\n *\n * // Return the nested list that this NestedInteger holds, if it holds a nested list\n * // The result is undefined if this NestedInteger holds a single integer\n * struct NestedInteger **NestedIntegerGetList(struct NestedInteger *);\n *\n * // Return the nested list's size that this NestedInteger holds, if it holds a nested list\n * // The result is undefined if this NestedInteger holds a single integer\n * int NestedIntegerGetListSize(struct NestedInteger *);\n * };\n */\nstruct NestedIterator {\nstruct ListNode *list;\nstruct ListNode *current;\n};\n\nstruct ListNode *getNode(int val, struct ListNode *next)\n{\nstruct ListNode *ret = (struct ListNode *)malloc(sizeof(struct ListNode));\nret-&gt;val = val;\nret-&gt;next = next;\nreturn ret;\n}\n\nstruct ListNode *toList(struct NestedInteger *src, struct ListNode **tail)\n{\nif (NestedIntegerIsInteger(src))\n{\nstruct ListNode *ret = getNode(NestedIntegerGetInteger(src), NULL);\nif (tail)\n*tail = ret;\nreturn ret;\n}\nelse\n{\nstruct NestedInteger **content = NestedIntegerGetList(src);\nstruct ListNode *ret = NULL, *temp = NULL;\nint i = 0, size = NestedIntegerGetListSize(src);\nfor (i = 0; i &lt; size; i++)\n{\nif (!ret)\nret = toList(content[i], &amp;temp);\nelse\n(*tail)-&gt;next = toList(content[i], &amp;temp);\nif (temp)\n*tail = temp;\n}\nreturn ret;\n}\n}\n\nstruct NestedIterator *nestedIterCreate(struct NestedInteger** nestedList, int nestedListSize) {\nstruct NestedIterator *ret = (struct NestedIterator *)malloc(sizeof(struct NestedIterator));\nret-&gt;list = NULL;\nret-&gt;current = NULL;\nstruct ListNode *temp = NULL;\nfor (int i = 0; i &lt; nestedListSize; i++)\n{\nif (!ret-&gt;list)\nret-&gt;list = toList(nestedList[i], &amp;temp);\nelse\nret-&gt;current-&gt;next = toList(nestedList[i], &amp;temp);\nret-&gt;current = temp;\n}\nret-&gt;current = ret-&gt;list;\nreturn ret;\n}\n\nbool nestedIterHasNext(struct NestedIterator *iter) {\nreturn iter-&gt;current;\n}\n\nint nestedIterNext(struct NestedIterator *iter) {\nint ret = iter-&gt;current-&gt;val;\niter-&gt;current = iter-&gt;current-&gt;next;\nreturn ret;\n}\n\n/** Deallocates memory previously allocated for the iterator */\nvoid nestedIterFree(struct NestedIterator *iter) {\nwhile (iter-&gt;list)\n{\niter-&gt;current = iter-&gt;list-&gt;next;\nfree(iter-&gt;list);\niter-&gt;list = iter-&gt;current;\n}\nfree(iter);\n}\n\n/**\n * Your NestedIterator will be called like this:\n * struct NestedIterator *i = nestedIterCreate(nestedList, nestedListSize);\n * while (nestedIterHasNext(i)) printf(\"%d\\n\", nestedIterNext(i));\n * nestedIterFree(i);\n */\n</code></pre> <p>Python\u8bed\u8a00\u652f\u6301<code>yield</code>\u8bed\u53e5\u4e0e<code>yield from</code>\u8bed\u53e5\uff0c\u56e0\u6b64\u76f4\u63a5\u8fed\u4ee3\u751f\u6210\u5668\u5373\u53ef</p> <pre><code># \"\"\"\n# This is the interface that allows for creating nested lists.\n# You should not implement it, or speculate about its implementation\n# \"\"\"\n#class NestedInteger:\n#    def isInteger(self) -&gt; bool:\n#        \"\"\"\n#        @return True if this NestedInteger holds a single integer, rather than a nested list.\n#        \"\"\"\n#\n#    def getInteger(self) -&gt; int:\n#        \"\"\"\n#        @return the single integer that this NestedInteger holds, if it holds a single integer\n#        Return None if this NestedInteger holds a nested list\n#        \"\"\"\n#\n#    def getList(self) -&gt; [NestedInteger]:\n#        \"\"\"\n#        @return the nested list that this NestedInteger holds, if it holds a nested list\n#        Return None if this NestedInteger holds a single integer\n#        \"\"\"\n\ndef listIter(nestNode):\n    for node in nestNode:\n        if node.isInteger():\n            yield node.getInteger()\n        else:\n            yield from listIter(node.getList())\n\nclass NestedIterator:\n    def __init__(self, nestedList):\n        self.nextvalue = 0\n        self.iterator = listIter(nestedList)\n\n    def next(self):\n        return self.nextvalue\n\n    def hasNext(self):\n        try:\n            self.nextvalue = next(self.iterator)\n        except StopIteration:\n            return False\n        return True\n\n# Your NestedIterator object will be instantiated and called as such:\n# i, v = NestedIterator(nestedList), []\n# while i.hasNext(): v.append(i.next())\n</code></pre>","tags":["\u6808","\u8bbe\u8ba1"]},{"location":"coding/leetcode/344/","title":"344. \u53cd\u8f6c\u5b57\u7b26\u4e32","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/344/#_1","title":"\u9898\u76ee","text":"<p>\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5176\u4f5c\u7528\u662f\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u53cd\u8f6c\u8fc7\u6765\u3002\u8f93\u5165\u5b57\u7b26\u4e32\u4ee5\u5b57\u7b26\u6570\u7ec4 char[] \u7684\u5f62\u5f0f\u7ed9\u51fa\u3002</p> <p>\u4e0d\u8981\u7ed9\u53e6\u5916\u7684\u6570\u7ec4\u5206\u914d\u989d\u5916\u7684\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b\u539f\u5730\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u3001\u4f7f\u7528 O(1) \u7684\u989d\u5916\u7a7a\u95f4\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002</p> <p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u90fd\u662f ASCII \u7801\u8868\u4e2d\u7684\u53ef\u6253\u5370\u5b57\u7b26\u3002</p> <p>\u793a\u4f8b 1\uff1a <pre><code>\u8f93\u5165\uff1a[\"h\",\"e\",\"l\",\"l\",\"o\"]\n\u8f93\u51fa\uff1a[\"o\",\"l\",\"l\",\"e\",\"h\"]\n</code></pre> \u793a\u4f8b 2\uff1a <pre><code>\u8f93\u5165\uff1a[\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\n\u8f93\u51fa\uff1a[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n</code></pre></p> <p>Reference</p>","tags":["\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/344/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u5206\u522b\u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u6307\u5411\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u4e0e\u7ed3\u5c3e\uff0c\u4ea4\u6362\u4e24\u8005\u7684\u503c\u540e\u6536\u7f29\u6307\u9488\u3002\uff08\u5de6\u6307\u9488\u53f3\u79fb\uff0c\u53f3\u6307\u9488\u5de6\u79fb\uff09</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>void reverseString(char* s, int sSize)\n{\nif (sSize &lt;= 1)\nreturn;\nchar temp = 0;\ntemp = *s;\n*s = s[sSize - 1];\ns[sSize - 1] = temp;\nreverseString(s + 1, sSize - 2);\n}\n</code></pre>","tags":["\u53cc\u6307\u9488","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/35/","title":"35. \u641c\u7d22\u63d2\u5165\u4f4d\u7f6e","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/35/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6392\u5e8f\u6570\u7ec4\u548c\u4e00\u4e2a\u76ee\u6807\u503c\uff0c\u5728\u6570\u7ec4\u4e2d\u627e\u5230\u76ee\u6807\u503c\uff0c\u5e76\u8fd4\u56de\u5176\u7d22\u5f15\u3002\u5982\u679c\u76ee\u6807\u503c\u4e0d\u5b58\u5728\u4e8e\u6570\u7ec4\u4e2d\uff0c\u8fd4\u56de\u5b83\u5c06\u4f1a\u88ab\u6309\u987a\u5e8f\u63d2\u5165\u7684\u4f4d\u7f6e\u3002</p> <p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6570\u7ec4\u4e2d\u65e0\u91cd\u590d\u5143\u7d20\u3002</p> <p>\u793a\u4f8b 1:</p> <pre><code>\u8f93\u5165: [1,3,5,6], 5\n\u8f93\u51fa: 2\n</code></pre> <p>\u793a\u4f8b\u00a02:</p> <pre><code>\u8f93\u5165: [1,3,5,6], 2\n\u8f93\u51fa: 1\n</code></pre> <p>\u793a\u4f8b 3:</p> <pre><code>\u8f93\u5165: [1,3,5,6], 7\n\u8f93\u51fa: 4\n</code></pre> <p>\u793a\u4f8b 4:</p> <pre><code>\u8f93\u5165: [1,3,5,6], 0\n\u8f93\u51fa: 0\n</code></pre> <p>Reference</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/35/#_2","title":"\u9898\u89e3","text":"<p>\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u3002</p> <p>\u8bbe\u6570\u5217\\(\\{a_i\\}\\)\u4e3a\u5347\u5e8f\u6570\u5217\uff0c\u76ee\u6807\u503c\\(b\\)\u7684\u63d2\u5165\u4f4d\u7f6e\\(j\\)\u6ee1\u8db3\uff1a</p> <ul> <li>\\(b \\leq a_j\\)</li> <li>\\(b &gt; a_{j - 1}\\)</li> </ul> <p>\u6ce8\u610f\u672c\u9898\u8981\u6c42\u7684\u6570\u636e\u4e0e\u666e\u901a\u4e8c\u5206\u67e5\u627e\u7684\u8fd4\u56de\u503c\u7684\u610f\u4e49\u4e0d\u540c\u3002</p> <ul> <li>\u4e8c\u5206\u67e5\u627e\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u4e0d\u5927\u4e8e\u76ee\u6807\u503c\u7684\u5143\u7d20\u4e0b\u6807\u3002</li> <li>\u672c\u9898\u8981\u6c42\u8fd4\u56de\u7b2c\u4e00\u4e2a\u4e0d\u5c0f\u4e8e\u76ee\u6807\u503c\u7684\u5143\u7d20\u4e0b\u6807\u3002</li> </ul> <pre><code>int bSearch(int *nums, int lo, int hi, int target)\n{\nint mid;\nwhile (lo &lt; hi)\n{\nmid = (lo + hi) &gt;&gt; 1;\nif (nums[mid] &gt;= target)\nhi = mid;\nelse\nlo = mid + 1;\n}\nreturn lo;\n}\n\nint searchInsert(int* nums, int numsSize, int target){\nreturn bSearch(nums, 0, numsSize, target);\n}\n</code></pre> <p>\u9644\uff1a\u4e8c\u5206\u67e5\u627e\u7b97\u6cd5\uff0c\u4f9b\u6bd4\u8f83</p> <pre><code>int bSearch(int *nums, int lo, int hi, int target)\n{\nint mid;\nwhile (lo &lt; hi)\n{\nmid = (lo + hi) &gt;&gt; 1;\nif (nums[mid] &gt; target)\nhi = mid;\nelse\nlo = mid + 1;\n}\nreturn lo - 1;\n}\n</code></pre> <p>\u5728\u4e8c\u5206\u67e5\u627e\u4e2d\uff0c\u59cb\u7ec8\u6709\uff1a</p> <ul> <li><code>nums[lo - 1]</code> \u662f\u622a\u81f3\u5f53\u524d\u5df2\u786e\u8ba4\u7684\u4e0d\u5927\u4e8e<code>target</code>\u7684\u6700\u5927\u5143\u7d20</li> <li><code>nums[hi]</code> \u662f\u622a\u81f3\u5f53\u524d\u5df2\u786e\u8ba4\u7684\u5927\u4e8e<code>target</code>\u7684\u6700\u5c0f\u5143\u7d20</li> </ul> <p>\u800c\u5728\u672c\u9898\u7b97\u6cd5\u4e2d\uff0c\u59cb\u7ec8\u6709\uff1a</p> <ul> <li><code>nums[lo - 1]</code> \u662f\u622a\u81f3\u5f53\u524d\u5df2\u786e\u8ba4\u7684\u5c0f\u4e8e<code>target</code>\u7684\u6700\u5927\u5143\u7d20</li> <li><code>nums[hi]</code> \u662f\u622a\u81f3\u5f53\u524d\u5df2\u786e\u8ba4\u7684\u4e0d\u5c0f\u4e8e<code>target</code>\u7684\u6700\u5c0f\u5143\u7d20</li> </ul> <p>\u539f\u56e0\u5728\u4e8e\uff0c\u4e24\u7b97\u6cd5\u5bf9\u7b49\u4e8e\u7684\u60c5\u51b5\u7684\u5904\u7406\u4e0d\u540c\uff0c\u4e8c\u5206\u67e5\u627e\u5bf9<code>nums[mid] == target</code>\u60c5\u51b5\u7684\u5904\u7406\u4e3a <code>lo = mid + 1</code>\uff0c\u4ec5\u5f53<code>nums[mid] &gt; target</code>\u65f6\u624d\u6267\u884c<code>hi = mid</code>\u3002\u7531\u4e8e<code>[lo, hi)</code>\u662f\u5f53\u524d\u5df2 \u786e\u8ba4\u7684\u533a\u95f4\uff0c\u5219<code>nums[hi]</code>\u4e3a\u5df2\u786e\u8ba4\u7684\u5927\u4e8e<code>target</code>\u7684\u6700\u5c0f\u5143\u7d20\uff0c\u800c<code>nums[lo - 1]</code>\u4e3a\u4e0d\u5927\u4e8e <code>target</code>\u7684\u6700\u5927\u5143\u7d20\u3002\u800c\u672c\u9898\u7b97\u6cd5\u5bf9<code>nums[mid] == target</code>\u60c5\u51b5\u7684\u5904\u7406\u4e3a<code>hi = mid</code>\uff0c\u4ec5\u5f53 <code>nums[mid] &lt; target</code>\u65f6\u624d\u6267\u884c<code>lo = mid + 1</code>\uff0c\u5219<code>nums[hi]</code>\u4e3a\u5df2\u786e\u8ba4\u7684\u4e0d\u5c0f\u4e8e<code>target</code>\u7684\u6700\u5c0f \u5143\u7d20\uff0c<code>nums[lo - 1]</code>\u4e3a\u5df2\u786e\u8ba4\u7684\u5c0f\u4e8e<code>target</code>\u7684\u6700\u5927\u5143\u7d20\u3002</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/350/","title":"350. \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6 II","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6392\u5e8f","\u54c8\u5e0c\u8868","\u53cc\u6307\u9488","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/350/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e24\u4e2a\u6570\u7ec4\uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\u5b83\u4eec\u7684\u4ea4\u96c6\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1anums1 = [1,2,2,1], nums2 = [2,2]\n\u8f93\u51fa\uff1a[2,2]\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1anums1 = [4,9,5], nums2 = [9,4,9,8,4]\n\u8f93\u51fa\uff1a[4,9]\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u8f93\u51fa\u7ed3\u679c\u4e2d\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5e94\u4e0e\u5143\u7d20\u5728\u4e24\u4e2a\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u7684\u6700\u5c0f\u503c\u4e00\u81f4\u3002</li> <li>\u6211\u4eec\u53ef\u4ee5\u4e0d\u8003\u8651\u8f93\u51fa\u7ed3\u679c\u7684\u987a\u5e8f\u3002</li> </ul> <p>\u8fdb\u9636\uff1a</p> <ul> <li>\u5982\u679c\u7ed9\u5b9a\u7684\u6570\u7ec4\u5df2\u7ecf\u6392\u597d\u5e8f\u5462\uff1f\u4f60\u5c06\u5982\u4f55\u4f18\u5316\u4f60\u7684\u7b97\u6cd5\uff1f</li> <li>\u5982\u679c<code>nums1</code>\u7684\u5927\u5c0f\u6bd4<code>nums2</code>\u5c0f\u5f88\u591a\uff0c\u54ea\u79cd\u65b9\u6cd5\u66f4\u4f18\uff1f</li> <li>\u5982\u679c<code>nums2</code>\u7684\u5143\u7d20\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\uff0c\u5185\u5b58\u662f\u6709\u9650\u7684\uff0c\u5e76\u4e14\u4f60\u4e0d\u80fd\u4e00\u6b21\u52a0\u8f7d\u6240\u6709\u7684\u5143\u7d20\u5230\u5185\u5b58\u4e2d\uff0c\u4f60\u8be5\u600e\u4e48\u529e\uff1f</li> </ul> <p>Reference</p>","tags":["\u6392\u5e8f","\u54c8\u5e0c\u8868","\u53cc\u6307\u9488","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/350/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u4f7f\u7528\u54c8\u5e0c\u8868\u5b58\u50a8\u6570\u7ec4\u4e2d\u5404\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6ce8\u610f\u6570\u503c\u5728\u4ea4\u96c6\u4e2d\u53ef\u4ee5\u91cd\u590d\u51fa\u73b0\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>#define MIN(x, y) (x &gt; y ? y : x)\nstruct cell\n{\nint value;\nint times1;\nint times2;\n};\nint* intersect(int* nums1, int nums1Size, int* nums2, int nums2Size, int* returnSize){\nint i = 0, cur, mapSize = nums1Size + nums2Size, *ret = (int *)malloc(sizeof(int) * (nums1Size + nums2Size));\n*returnSize = 0;\nstruct cell *hashMap = (struct cell *)memset(malloc(sizeof(struct cell) * mapSize), 0, sizeof(struct cell) * mapSize);\nfor (i = 0; i &lt; nums1Size; i++)\n{\ncur = (nums1[i] &gt; 0 ? 1 : -1) * (nums1[i] % mapSize);\nwhile((hashMap[cur].times1 != 0 || hashMap[cur].times2) &amp;&amp; hashMap[cur].value != nums1[i])\n{\ncur++;\ncur = cur == mapSize ? 0 : cur;\n}\nif (hashMap[cur].times1 == 0 &amp;&amp; hashMap[cur].times2 == 0)\nhashMap[cur].value = nums1[i];\nhashMap[cur].times1++;\n}\nfor (i = 0; i &lt; nums2Size; i++)\n{\ncur = (nums2[i] &gt; 0 ? 1 : -1) * (nums2[i] % mapSize);\nwhile((hashMap[cur].times1 != 0 || hashMap[cur].times2) &amp;&amp; hashMap[cur].value != nums2[i])\n{\ncur++;\ncur = cur == mapSize ? 0 : cur;\n}\nif (hashMap[cur].times1 == 0 &amp;&amp; hashMap[cur].times2 == 0)\nhashMap[cur].value = nums2[i];\nhashMap[cur].times2++;\n}\nfor (i = 0; i &lt; mapSize; i++)\nwhile ((hashMap[i].times2--) &amp;&amp; (hashMap[i].times1--))\nret[(*returnSize)++] = hashMap[i].value;\nreturn ret;\n}\n</code></pre>","tags":["\u6392\u5e8f","\u54c8\u5e0c\u8868","\u53cc\u6307\u9488","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/36/","title":"36. \u6709\u6548\u7684\u6570\u72ec","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/36/#_1","title":"\u9898\u76ee","text":"<p>\u5224\u65ad\u4e00\u4e2a\u00a09x9 \u7684\u6570\u72ec\u662f\u5426\u6709\u6548\u3002\u53ea\u9700\u8981\u6839\u636e\u4ee5\u4e0b\u89c4\u5219\uff0c\u9a8c\u8bc1\u5df2\u7ecf\u586b\u5165\u7684\u6570\u5b57\u662f\u5426\u6709\u6548\u5373\u53ef\u3002</p> <ol> <li>\u6570\u5b57<code>1-9</code>\u5728\u6bcf\u4e00\u884c\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002</li> <li>\u6570\u5b57<code>1-9</code>\u5728\u6bcf\u4e00\u5217\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002</li> <li>\u6570\u5b57<code>1-9</code>\u5728\u6bcf\u4e00\u4e2a\u4ee5\u7c97\u5b9e\u7ebf\u5206\u9694\u7684<code>3x3</code>\u5bab\u5185\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002</li> </ol> <p></p> <p>\u4e0a\u56fe\u662f\u4e00\u4e2a\u90e8\u5206\u586b\u5145\u7684\u6709\u6548\u7684\u6570\u72ec\u3002</p> <p>\u6570\u72ec\u90e8\u5206\u7a7a\u683c\u5185\u5df2\u586b\u5165\u4e86\u6570\u5b57\uff0c\u7a7a\u767d\u683c\u7528<code>'.'</code>\u8868\u793a\u3002</p> <p>\u793a\u4f8b\u00a01\uff1a</p> <pre><code>\u8f93\u5165:\n[\n  [\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],\n  [\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],\n  [\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],\n  [\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],\n  [\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],\n  [\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],\n  [\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],\n  [\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],\n  [\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]\n]\n\u8f93\u51fa: true\n</code></pre> <p>\u793a\u4f8b\u00a02\uff1a</p> <pre><code>\u8f93\u5165:\n[\n\u00a0 [\"8\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],\n\u00a0 [\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],\n\u00a0 [\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],\n\u00a0 [\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],\n\u00a0 [\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],\n\u00a0 [\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],\n\u00a0 [\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],\n\u00a0 [\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],\n\u00a0 [\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]\n]\n\u8f93\u51fa: false\n\u89e3\u91ca: \u9664\u4e86\u7b2c\u4e00\u884c\u7684\u7b2c\u4e00\u4e2a\u6570\u5b57\u4ece 5 \u6539\u4e3a 8 \u4ee5\u5916\uff0c\u7a7a\u683c\u5185\u5176\u4ed6\u6570\u5b57\u5747\u4e0e \u793a\u4f8b1 \u76f8\u540c\u3002\n     \u4f46\u7531\u4e8e\u4f4d\u4e8e\u5de6\u4e0a\u89d2\u7684 3x3 \u5bab\u5185\u6709\u4e24\u4e2a 8 \u5b58\u5728, \u56e0\u6b64\u8fd9\u4e2a\u6570\u72ec\u662f\u65e0\u6548\u7684\u3002\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u4e00\u4e2a\u6709\u6548\u7684\u6570\u72ec\uff08\u90e8\u5206\u5df2\u88ab\u586b\u5145\uff09\u4e0d\u4e00\u5b9a\u662f\u53ef\u89e3\u7684\u3002</li> <li>\u53ea\u9700\u8981\u6839\u636e\u4ee5\u4e0a\u89c4\u5219\uff0c\u9a8c\u8bc1\u5df2\u7ecf\u586b\u5165\u7684\u6570\u5b57\u662f\u5426\u6709\u6548\u5373\u53ef\u3002</li> <li>\u7ed9\u5b9a\u6570\u72ec\u5e8f\u5217\u53ea\u5305\u542b\u6570\u5b57\u00a01-9\u00a0\u548c\u5b57\u7b26\u00a0'.'\u00a0\u3002</li> <li>\u7ed9\u5b9a\u6570\u72ec\u6c38\u8fdc\u662f\u00a09x9\u00a0\u5f62\u5f0f\u7684\u3002</li> </ul> <p>Reference</p>","tags":["\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/36/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u6839\u636e\u5b9a\u4e49\u76f4\u63a5\u5224\u65ad\u8f93\u5165\u7684\u6570\u7ec4\u662f\u5426\u6ee1\u8db3\u6570\u72ec\u76843\u4e2a\u6761\u4ef6\u5373\u53ef\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>bool isValidSudoku(char** board, int boardSize, int* boardColSize){\nint i = 0, j = 0, positions1[boardSize], positions2[boardSize], k = 0;\nfor (i = 0; i &lt; boardSize; i++)\n{\nmemset(positions1, 0, sizeof(int) * boardSize);\nmemset(positions2, 0, sizeof(int) * boardSize);\nfor (j = 0; j &lt; boardSize; j++)\n{\nif (board[i][j] &gt; '0' &amp;&amp; positions1[board[i][j] - '1'])\nreturn false;\nif (board[j][i] &gt; '0' &amp;&amp; positions2[board[j][i] - '1'])\nreturn false;\nif (board[i][j] &gt; '0')\npositions1[board[i][j] - '1'] = 1;\nif (board[j][i] &gt; '0')\npositions2[board[j][i] - '1'] = 1;\n}\n}\nfor (i = 0; i &lt; 3; i++)\n{\nfor (j = 0; j &lt; 3; j++)\n{\nmemset(positions1, 0, sizeof(int) * boardSize);\nfor (k = 0; k &lt; boardSize; k++)\n{\nif (board[i * 3 + k % 3][j * 3 + k / 3] &gt; '0' &amp;&amp; positions1[board[i * 3 + k % 3][j * 3 + k / 3] - '1'])\nreturn false;\nif (board[i * 3 + k % 3][j * 3 + k / 3] &gt; '0')\npositions1[board[i * 3 + k % 3][j * 3 + k / 3] - '1'] = 1;\n}\n}\n}\nreturn true;\n}\n</code></pre>","tags":["\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/368/","title":"368. \u6700\u5927\u6574\u9664\u5b50\u96c6","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6570\u5b66","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/368/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u7531 \u65e0\u91cd\u590d \u6b63\u6574\u6570\u7ec4\u6210\u7684\u96c6\u5408 <code>nums</code> \uff0c\u8bf7\u4f60\u627e\u51fa\u5e76\u8fd4\u56de\u5176\u4e2d\u6700\u5927\u7684\u6574\u9664\u5b50\u96c6 <code>answer</code> \uff0c\u5b50\u96c6\u4e2d\u6bcf\u4e00\u5143\u7d20\u5bf9 <code>(answer[i], answer[j])</code> \u90fd\u5e94\u5f53\u6ee1\u8db3\uff1a</p> <ul> <li><code>answer[i] % answer[j] == 0</code> \uff0c\u6216</li> <li><code>answer[j] % answer[i] == 0</code></li> </ul> <p>\u5982\u679c\u5b58\u5728\u591a\u4e2a\u6709\u6548\u89e3\u5b50\u96c6\uff0c\u8fd4\u56de\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u5747\u53ef\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [1,2,3]\n\u8f93\u51fa\uff1a[1,2]\n\u89e3\u91ca\uff1a[1,3] \u4e5f\u4f1a\u88ab\u89c6\u4e3a\u6b63\u786e\u7b54\u6848\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [1,2,4,8]\n\u8f93\u51fa\uff1a[1,2,4,8]\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 1000</code></li> <li><code>1 &lt;= nums[i] &lt;= 2 * 10^9</code></li> <li><code>nums</code> \u4e2d\u7684\u6240\u6709\u6574\u6570 \u4e92\u4e0d\u76f8\u540c</li> </ul> <p>Reference</p>","tags":["\u6570\u5b66","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/368/#_2","title":"\u9898\u89e3","text":"<p>\u6574\u6570\u4e4b\u95f4\u7684\u6574\u9664\u5173\u7cfb\u6ee1\u8db3\u81ea\u53cd\u6027\u3001\u53cd\u5bf9\u79f0\u6027\u548c\u4f20\u9012\u6027\uff0c\u4f7f\u7528\\(a|b\\)\u8868\u793a\\(a\\)\u53ef\u4ee5\u88ab\\(b\\)\u6574\u9664\uff0c\u5219\uff1a</p> <ol> <li>\u81ea\u53cd\u6027\uff1a\\(a|a = T\\)</li> <li>\u53cd\u5bf9\u79f0\u6027\uff1a\\(a|b \\overline \\lor b|a = T\\)</li> <li>\u4f20\u9012\u6027\uff1a\\(a|b \\land b|c\\Rightarrow a|c\\)</li> </ol> <p>\u56e0\u6b64\uff0c\u6574\u9664\u5173\u7cfb\u662f\u6b63\u6574\u6570\u96c6\\(N_+\\)\u4e0a\u7684\u76f8\u5bb9\u5173\u7cfb\u4e0e\u504f\u5e8f\u5173\u7cfb\u3002</p> <p>\u8bbe\u6b63\u6574\u6570\u96c6\u5408\u4e3a\\(S\\)\uff0c\u4ee5\u4e0b\u57fa\u4e8e\u504f\u5e8f\u5173\u7cfb\\(R\\)\u4e0e\u504f\u5e8f\u96c6\\(S\\)\u5b9a\u4e49\u94fe\u7684\u6982\u5ff5\uff1a</p> <ol> <li>\u82e5\\(a\\in S, b\\in S\\)\uff0c\u4e14\\(a|b \\lor b|a\\)\uff0c\u5219\\(a, b\\)\u662f\u53ef\u6bd4\u7684\uff1b</li> <li>\u82e5\u96c6\u5408\\(B\\subseteq S\\)\uff0c\u4e14\u5bf9\u4e8e\\(B\\)\u4e2d\u4efb\u610f\u4e00\u5bf9\u5143\u7d20\\(x, y\\)\u90fd\u662f\u53ef\u6bd4\u7684\uff0c\u5219\u79f0\\(B\\)\u4e3a\u504f\u5e8f\u96c6\\(S\\)\u4e0a\u7684\u94fe\u3002</li> <li>\u504f\u5e8f\u96c6\\(S\\)\u4e2d\u5305\u542b\u5143\u7d20\u6700\u591a\u7684\u94fe\u79f0\u4e3a\u6700\u957f\u94fe\u3002</li> </ol> <p>\u7531\u6b64\u53ef\u89c1\uff0c\u6240\u6c42\u7684\u6700\u5927\u6574\u9664\u5b50\u96c6\u5373\u4e3a\\(S\\)\u4e0a\u7684\u6700\u957f\u94fe\u3002</p> <p>\u504f\u5e8f\u96c6\u53ef\u4ee5\u4f7f\u7528\u54c8\u65af\u56fe\u8fdb\u884c\u8868\u793a\uff0c\u5982\u96c6\u5408\\(\\{2,3,4,6,8\\}\\)\u4e0a\u7684\u504f\u5e8f\u5173\u7cfb\u53ef\u4ee5\u8868\u793a\u4e3a\u5982\u4e0b\u6240\u793a\uff1a</p> <p></p> <p>\u54c8\u65af\u56fe\u662f\u6709\u5411\u65e0\u73af\u56fe\uff0c\u4f46\u4e0d\u4e00\u5b9a\u8fde\u901a\u3002\u94fe\u5728\u54c8\u65af\u56fe\u4e2d\u8868\u73b0\u4e3a\u4e00\u6bb5\u8def\u5f84\uff0c\u6700\u957f\u94fe\u5373\u4e3a\u54c8\u65af\u56fe\u4e2d\u7684\u6700\u957f\u8def\u5f84\uff0c\u5373\u5404\u5206\u91cf\u7684\u6700\u957f\u76f4\u5f84\uff0c\u5982\u56fe\u4e2d\u52a0\u7c97\u7ebf\u6761\u6240\u793a\u3002</p> <p>\u56e0\u6b64\uff0c\u53ef\u4ee5\u4f7f\u7528\u56fe\u89e3\u51b3\u672c\u9898\uff0c\u7b2c\u4e00\u6b65\u6784\u9020\u504f\u5e8f\u96c6\u7684\u54c8\u65af\u56fe\uff0c\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li>\u5bf9\u96c6\u5408\u6392\u5e8f\uff0c\u5bf9\u4e8e\u96c6\u5408\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u5728\u56fe\u4e2d\u521b\u5efa\u4e00\u4e2a\u5143\u7d20\u4e0e\u4e4b\u5bf9\u5e94\uff1b</li> <li>\u4ece\u540e\u5411\u524d\u904d\u5386\u96c6\u5408\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\\(a_i\\)\uff1a<ol> <li>\u4ece\u7b2c\\(i + 1\\)\u4e2a\u5143\u7d20\u5f00\u59cb\uff0c\u5411\u540e\u904d\u5386\u96c6\u5408\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\\(a_j\\)\uff0c\u82e5\\(a_j|a_i\\)\uff0c\u5e76\u4e14\u4e0d\u5b58\u5728\u66f4\u5c0f\u7684\u8282\u70b9\u4e0e\\(a_i\\)\u76f8\u8fde\uff0c\u5219\u5c06\u8282\u70b9\\(i\\)\u4e0e\u8282\u70b9\\(j\\)\u76f8\u8fde\u63a5\u3002</li> </ol> </li> </ol> <p>\u4e3a\u4e86\u5feb\u901f\u6c42\u51fa\u56fe\u7684\u76f4\u5f84\uff0c\u53ef\u5728\u8282\u70b9\u4e2d\u5b58\u50a8\u4e24\u4e2a\u503c\uff0c\u5373\uff1a</p> <ul> <li>\u5f53\u524d\u8282\u70b9\u8ddd\u79bb\u672b\u7aef\u8282\u70b9\uff08\u51fa\u5ea6\u4e3a\\(0\\)\u7684\u8282\u70b9\uff09\u7684\u6700\u5927\u8ddd\u79bb</li> <li>\u5f53\u524d\u8282\u70b9\u8ddd\u79bb\u672b\u7aef\u8282\u70b9\u6700\u5927\u8ddd\u79bb\u6240\u5bf9\u5e94\u7684\u51fa\u8fb9</li> </ul> <p>\u7531\u4e8e\u6574\u9664\u5173\u7cfb\u8574\u542b\u5c0f\u4e8e\u7b49\u4e8e\u5173\u7cfb\uff0c\u56e0\u6b64\u5728\u6784\u9020\u54c8\u65af\u56fe\u65f6\uff0c\u53ef\u4ee5\u540c\u65f6\u6784\u9020\u8fd9\u4e24\u4e2a\u503c\u3002</p> <p>\u7b2c\u4e8c\u6b65\u5373\u53ef\u627e\u51fa\u6700\u957f\u76f4\u5f84\u3002\u904d\u5386\u6240\u6709\u5165\u5ea6\u4e3a\\(0\\)\u7684\u8282\u70b9\uff0c\u627e\u51fa\u5e76\u8bb0\u4e0b\u8ddd\u79bb\u672b\u7aef\u8282\u70b9\u6700\u8fdc\u7684\u8282\u70b9\u3002\u518d\u6839\u636e\u8282\u70b9\u4e2d\u5b58\u50a8\u7684\u51fa\u8fb9\u4fe1\u606f\u5373\u53ef\u5b8c\u6574\u6784\u9020\u6240\u9700\u7684\u6700\u5927\u6574\u9664\u5b50\u96c6\u3002</p> <pre><code>/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\n#define MAX(x, y) ((x) &gt; (y) ? (x) : (y))\nstruct Edge;\nstruct Vertex;\nstruct Edge\n{\nstruct Vertex *dest;\nstruct Edge *next;\n};\nstruct Vertex\n{\nint val;\nint status;\nstruct Edge *edges;\nint height;\nstruct Edge *maxHeight;\n};\nstruct Edge *getEdge(struct Vertex *dest, struct Edge *next)\n{\nstruct Edge *cur = next;\nwhile (cur)\n{\nif (dest-&gt;val % cur-&gt;dest-&gt;val == 0)\nreturn next;\ncur = cur-&gt;next;\n}\nstruct Edge *ret = (struct Edge *)malloc(sizeof(struct Edge));\nret-&gt;dest = dest;\nret-&gt;next = next;\nreturn ret;\n}\nint cmp(const void *a, const void *b)\n{\nreturn *((int *)a) - *((int *)b);\n}\nvoid dfs(struct Vertex *graph)\n{\nif (graph == NULL)\nreturn;\ngraph-&gt;status = true;\nstruct Edge *edge = graph-&gt;edges;\nwhile (edge)\n{\ndfs(edge-&gt;dest);\nedge = edge-&gt;next;\n}\n}\nint* largestDivisibleSubset(int* nums, int numsSize, int* returnSize){\nstruct Vertex *nodes = (struct Vertex *)malloc(sizeof(struct Vertex) * numsSize), *maxVertex = NULL;\nint i = 0, j = 0, max = -1, *ret = NULL;\nqsort(nums, numsSize, sizeof(int), cmp);\nfor (i = 0; i &lt; numsSize; i++)\n{\nnodes[i].val = nums[i];\nnodes[i].status = 0;\nnodes[i].edges = NULL;\nnodes[i].height = 0;\nnodes[i].maxHeight = NULL;\n}\nfor (i = numsSize - 1; i &gt;= 0; i--)\n{\nfor (j = i + 1; j &lt; numsSize; j++)\n{\nif (nodes[j].val % nodes[i].val)\ncontinue;\nnodes[i].edges = getEdge(nodes + j, nodes[i].edges);\nif (nodes[i].height &lt; nodes[j].height + 1)\n{\nnodes[i].height = nodes[j].height + 1;\nnodes[i].maxHeight = nodes[i].edges;\n}\n}\n}\nfor (i = 0; i &lt; numsSize; i++)\n{\nif (nodes[i].status)\ncontinue;\nif (nodes[i].height &gt; max)\n{\nmax = nodes[i].height;\nmaxVertex = nodes + i;\n}\ndfs(nodes + i);\n}\n*returnSize = max + 1;\nret = (int *)malloc(sizeof(int) * (max + 1));\nfor (i = 0; i &lt;= max; i++)\n{\nret[i] = maxVertex-&gt;val;\nif (maxVertex-&gt;maxHeight == NULL)\nbreak;\nmaxVertex = maxVertex-&gt;maxHeight-&gt;dest;\n}\nreturn ret;\n}\n</code></pre>","tags":["\u6570\u5b66","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/37/","title":"37. \u89e3\u6570\u72ec","text":"<p>\u96be\u5ea6\uff1a\u56f0\u96be</p>","tags":["\u54c8\u5e0c\u8868","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/37/#_1","title":"\u9898\u76ee","text":"<p>\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u901a\u8fc7\u586b\u5145\u7a7a\u683c\u6765\u89e3\u51b3\u6570\u72ec\u95ee\u9898\u3002</p> <p>\u6570\u72ec\u7684\u89e3\u6cd5\u9700 \u9075\u5faa\u5982\u4e0b\u89c4\u5219\uff1a</p> <p>\u6570\u5b57\u00a0<code>1-9</code>\u00a0\u5728\u6bcf\u4e00\u884c\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002 \u6570\u5b57\u00a0<code>1-9</code>\u00a0\u5728\u6bcf\u4e00\u5217\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002 \u6570\u5b57\u00a0<code>1-9</code>\u00a0\u5728\u6bcf\u4e00\u4e2a\u4ee5\u7c97\u5b9e\u7ebf\u5206\u9694\u7684\u00a0<code>3x3</code>\u00a0\u5bab\u5185\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002\uff08\u8bf7\u53c2\u8003\u793a\u4f8b\u56fe\uff09 \u6570\u72ec\u90e8\u5206\u7a7a\u683c\u5185\u5df2\u586b\u5165\u4e86\u6570\u5b57\uff0c\u7a7a\u767d\u683c\u7528\u00a0<code>'.'</code>\u00a0\u8868\u793a\u3002</p> <p>\u793a\u4f8b\uff1a</p> <p></p> <pre><code>\u8f93\u5165\uff1aboard = [\n    [\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],\n    [\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],\n    [\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],\n    [\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],\n    [\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],\n    [\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],\n    [\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],\n    [\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],\n    [\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]\n]\n\u8f93\u51fa\uff1a[\n    [\"5\",\"3\",\"4\",\"6\",\"7\",\"8\",\"9\",\"1\",\"2\"],\n    [\"6\",\"7\",\"2\",\"1\",\"9\",\"5\",\"3\",\"4\",\"8\"],\n    [\"1\",\"9\",\"8\",\"3\",\"4\",\"2\",\"5\",\"6\",\"7\"],\n    [\"8\",\"5\",\"9\",\"7\",\"6\",\"1\",\"4\",\"2\",\"3\"],\n    [\"4\",\"2\",\"6\",\"8\",\"5\",\"3\",\"7\",\"9\",\"1\"],\n    [\"7\",\"1\",\"3\",\"9\",\"2\",\"4\",\"8\",\"5\",\"6\"],\n    [\"9\",\"6\",\"1\",\"5\",\"3\",\"7\",\"2\",\"8\",\"4\"],\n    [\"2\",\"8\",\"7\",\"4\",\"1\",\"9\",\"6\",\"3\",\"5\"],\n    [\"3\",\"4\",\"5\",\"2\",\"8\",\"6\",\"1\",\"7\",\"9\"]\n]\n\u89e3\u91ca\uff1a\u8f93\u5165\u7684\u6570\u72ec\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u552f\u4e00\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\u5982\u4e0b\u6240\u793a\uff1a\n</code></pre> <p></p> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>board.length == 9</code></li> <li><code>board[i].length == 9</code></li> <li><code>board[i][j]</code> \u662f\u4e00\u4f4d\u6570\u5b57\u6216\u8005 <code>'.'</code></li> <li>\u9898\u76ee\u6570\u636e \u4fdd\u8bc1 \u8f93\u5165\u6570\u72ec\u4ec5\u6709\u4e00\u4e2a\u89e3</li> </ul> <p>Reference</p>","tags":["\u54c8\u5e0c\u8868","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/37/#_2","title":"\u9898\u89e3","text":"<p>\u4f7f\u7528\u56de\u6eaf\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u7a7a\u5355\u5143\u683c\uff0c\u68c0\u67e5\u5176\u6240\u5728\u884c\uff0c\u6240\u5728\u5217\u4e0e\u6240\u5728\u65b9\u683c\uff0c\u9010\u4e2a\u68c0\u67e5\u5176\u53ef\u4ee5\u586b\u5165\u7684\u6570\u503c\u3002\u5982\u679c \u6709\u53ef\u4ee5\u586b\u5165\u7684\u5b57\u7b26\uff0c\u5219\u4f9d\u6b21\u8fdb\u884c\u5c1d\u8bd5\u3002\u82e5\u67d0\u4e2a\u7a7a\u683c\u6ca1\u6709\u4efb\u4f55\u53ef\u4ee5\u586b\u5165\u7684\u6570\u503c\uff0c\u6216\u6240\u6709\u53ef\u586b\u5165\u7684\u503c\u90fd\u662f\u9519\u8bef\u7684 \uff0c\u610f\u5473\u7740\u5f53\u524d\u641c\u7d22\u8def\u5f84\u5b58\u5728\u9519\u8bef\uff0c\u9700\u8981\u8fd4\u56de\u4e0a\u4e00\u4e2a\u72b6\u6001\u8fdb\u884c\u4e0b\u4e00\u6b65\u5c1d\u8bd5\u3002</p> <p>\u5982\u679c\u65b9\u683c\u88ab\u5b8c\u5168\u586b\u6ee1\uff0c\u5219\u53ef\u4ee5\u7acb\u5373\u8fd4\u56de\u3002\u5e76\u901a\u8fc7\u8fd4\u56de\u503c\u544a\u8bc9\u4e0a\u4e00\u6b65\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\u3002</p> <pre><code>bool dfs(char **board, int boardSize, int *boardColSize)\n{\nint x = 0, y = 0, i = 0, j = 0;\nbool flag = true, candidate[9] = {false};\nfor (x = 0; x &lt; 9 &amp;&amp; flag; x++)\nfor (y = 0; y &lt; 9 &amp;&amp; flag; y++)\nif (board[x][y] == '.')\nflag = false;\nif (flag)\nreturn true;\nx--;\ny--;\nfor (i = 0; i &lt; 9; i++)\n{\nif (board[x][i] != '.')\ncandidate[board[x][i] - '1'] = true;\nif (board[i][y] != '.')\ncandidate[board[i][y] - '1'] = true;\nif (board[3 * (x / 3) + i / 3][3 * (y / 3) + i % 3] != '.')\ncandidate[board[3 * (x / 3) + i / 3][3 * (y / 3) + i % 3] - '1'] = true;\n}\nfor (i = 0; i &lt; 9 &amp;&amp; !flag; i++)\n{\nif (!candidate[i])\n{\nboard[x][y] = '1' + i;\nflag = flag || dfs(board, boardSize, boardColSize);\nif (flag)\nreturn flag;\nboard[x][y] = '.';\n}\n}\nreturn flag;\n}\n\nvoid solveSudoku(char** board, int boardSize, int* boardColSize){\ndfs(board, boardSize, boardColSize);\n}\n</code></pre>","tags":["\u54c8\u5e0c\u8868","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/377/","title":"377. \u7ec4\u5408\u603b\u548c \u2163","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/377/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u7531 \u4e0d\u540c \u6574\u6570\u7ec4\u6210\u7684\u6570\u7ec4 <code>nums</code> \uff0c\u548c\u4e00\u4e2a\u76ee\u6807\u6574\u6570 <code>target</code> \u3002\u8bf7\u4f60\u4ece <code>nums</code> \u4e2d\u627e\u51fa\u5e76\u8fd4\u56de\u603b\u548c\u4e3a <code>target</code> \u7684\u5143\u7d20\u7ec4\u5408\u7684\u4e2a\u6570\u3002</p> <p>\u9898\u76ee\u6570\u636e\u4fdd\u8bc1\u7b54\u6848\u7b26\u5408 <code>32</code> \u4f4d\u6574\u6570\u8303\u56f4\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [1,2,3], target = 4\n\u8f93\u51fa\uff1a7\n\u89e3\u91ca\uff1a\n\u6240\u6709\u53ef\u80fd\u7684\u7ec4\u5408\u4e3a\uff1a\n(1, 1, 1, 1)\n(1, 1, 2)\n(1, 2, 1)\n(1, 3)\n(2, 1, 1)\n(2, 2)\n(3, 1)\n\u8bf7\u6ce8\u610f\uff0c\u987a\u5e8f\u4e0d\u540c\u7684\u5e8f\u5217\u88ab\u89c6\u4f5c\u4e0d\u540c\u7684\u7ec4\u5408\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [9], target = 3\n\u8f93\u51fa\uff1a0\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 200</code></li> <li><code>1 &lt;= nums[i] &lt;= 1000</code></li> <li><code>nums</code> \u4e2d\u7684\u6240\u6709\u5143\u7d20 \u4e92\u4e0d\u76f8\u540c</li> <li><code>1 &lt;= target &lt;= 1000</code></li> </ul> <p>\u8fdb\u9636\uff1a \u5982\u679c\u7ed9\u5b9a\u7684\u6570\u7ec4\u4e2d\u542b\u6709\u8d1f\u6570\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u95ee\u9898\u4f1a\u4ea7\u751f\u4f55\u79cd\u53d8\u5316\uff1f\u5982\u679c\u5141\u8bb8\u8d1f\u6570\u51fa\u73b0\uff0c\u9700\u8981\u5411\u9898\u76ee\u4e2d\u6dfb\u52a0\u54ea\u4e9b\u9650\u5236\u6761\u4ef6\uff1f</p> <p>Reference</p>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/377/#_2","title":"\u9898\u89e3","text":"<p>\u672c\u9898\u7684\u601d\u8def\u4e0e70. \u722c\u697c\u68af\u76f8\u540c\u3002\u6b64\u5904\u4f7f\u7528\u8bb0\u5fc6\u5316\u9012\u5f52\u89e3\u51b3\u3002</p> <p>\u8bbe\\(f(x; S)\\)\u4e3a\u7ed9\u5b9a\u6574\u6570\u96c6\u5408\\(S\\)\uff0c\u7ec4\u6210\u76ee\u6807\u503c\\(x\\)\u7684\u7ec4\u5408\u6570\u91cf\uff0c\u6211\u4eec\u9ed8\u8ba4\\(0\\in S\\)\u3002</p> <ul> <li>\u5f53\\(x &lt; 0\\)\uff0c\u7531\u4e8e\\(\\forall y\\in S, y\\geq 0\\)\uff0c\u4e0d\u53ef\u80fd\u5f97\u5230\u5c0f\u4e8e\\(0\\)\u7684\u6570\u503c\uff0c\u6709\\(f(x; S) = 0\\)</li> <li>\\(x = 0\\)\uff0c\u7531\u4e8e\u9ed8\u8ba4\\(0\\in S\\)\uff0c\u6709\\(f(x; S) = 1\\)\u3002</li> <li>\u5f53\\(x &lt; 0\\)\uff0c\\(S\\)\u4e2d\u7684\u4efb\u610f\u5143\u7d20\\(y\\)\u90fd\u53ef\u4ee5\u9009\u62e9\uff0c\u9009\u62e9\\(y\\)\u5f97\u5230\u7684\u7ec4\u5408\u4e2a\u6570\u4e3a\\(f(x - y; S)\\)</li> </ul> <p>\u56e0\u6b64\uff0c\u5f97\u5230\\(f(x; S)\\)\u7684\u8868\u8fbe\u5f0f\uff1a</p> \\[ f(x; S)=\\left\\{ \\begin{aligned}     &amp; 0 &amp; x &lt; 0 \\\\     &amp; 1 &amp; x = 0 \\\\     &amp; \\sum_{y\\in S} f(x - y; S) &amp; x &gt; 0 \\end{aligned} \\right . \\] <p>\u7531\u4e8e\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u4f1a\u91cd\u590d\u8ba1\u7b97\u67d0\u4e9b\\(f(x; S)\\)\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6240\u6709\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u7684\\(f(x; S)\\)\u3002</p> <pre><code>int helper(int *dp, int *nums, int numsSize, int target)\n{\nif (target == 0)\nreturn 1;\nif (target &lt; 0)\nreturn 0;\nif (dp[target - 1] &lt; 0)\n{\nint ret = 0, i = 0;\nfor (i = 0; i &lt; numsSize; i++)\nret += helper(dp, nums, numsSize, target - nums[i]);\ndp[target - 1] = ret;\n}\nreturn dp[target - 1];\n}\n\nint combinationSum4(int* nums, int numsSize, int target) {\nint *dp = (int *)malloc(sizeof(int) * target);\nmemset(dp, 0xff, sizeof(int) * target);\nreturn helper(dp, nums, numsSize, target);\n}\n</code></pre>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/38/","title":"38. \u5916\u89c2\u6570\u5217","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/38/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\\(n\\)\uff08\\(1 \\leq\u00a0n\u00a0\\leq 30\\)\uff09\uff0c\u8f93\u51fa\u5916\u89c2\u6570\u5217\u7684\u7b2c\\(n\\)\u9879\u3002</p> <p>\u6ce8\u610f\uff1a\u6574\u6570\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u9879\u5c06\u8868\u793a\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002</p> <p>\u300c\u5916\u89c2\u6570\u5217\u300d\u662f\u4e00\u4e2a\u6574\u6570\u5e8f\u5217\uff0c\u4ece\u6570\u5b57 1 \u5f00\u59cb\uff0c\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u9879\u90fd\u662f\u5bf9\u524d\u4e00\u9879\u7684\u63cf\u8ff0\u3002\u524d\u4e94\u9879\u5982\u4e0b\uff1a</p> <pre><code>1.     1\n2.     11\n3.     21\n4.     1211\n5.     111221\n</code></pre> <p>\u7b2c\u4e00\u9879\u662f\u6570\u5b57 1</p> <p>\u63cf\u8ff0\u524d\u4e00\u9879\uff0c\u8fd9\u4e2a\u6570\u662f 1 \u5373 \u201c\u4e00\u4e2a 1 \u201d\uff0c\u8bb0\u4f5c 11</p> <p>\u63cf\u8ff0\u524d\u4e00\u9879\uff0c\u8fd9\u4e2a\u6570\u662f 11 \u5373 \u201c\u4e24\u4e2a 1 \u201d \uff0c\u8bb0\u4f5c 21</p> <p>\u63cf\u8ff0\u524d\u4e00\u9879\uff0c\u8fd9\u4e2a\u6570\u662f 21 \u5373 \u201c\u4e00\u4e2a 2 \u4e00\u4e2a 1 \u201d \uff0c\u8bb0\u4f5c 1211</p> <p>\u63cf\u8ff0\u524d\u4e00\u9879\uff0c\u8fd9\u4e2a\u6570\u662f 1211 \u5373 \u201c\u4e00\u4e2a 1 \u4e00\u4e2a 2 \u4e24\u4e2a 1 \u201d \uff0c\u8bb0\u4f5c 111221</p> <p>\u793a\u4f8b\u00a01:</p> <pre><code>\u8f93\u5165: 1\n\u8f93\u51fa: \"1\"\n\u89e3\u91ca\uff1a\u8fd9\u662f\u4e00\u4e2a\u57fa\u672c\u6837\u4f8b\u3002\n</code></pre> <p>\u793a\u4f8b 2:</p> <pre><code>\u8f93\u5165: 4\n\u8f93\u51fa: \"1211\"\n\u89e3\u91ca\uff1a\u5f53 n = 3 \u65f6\uff0c\u5e8f\u5217\u662f \"21\"\uff0c\u5176\u4e2d\u6211\u4eec\u6709 \"2\" \u548c \"1\" \u4e24\u7ec4\uff0c\"2\" \u53ef\u4ee5\u8bfb\u4f5c \"12\"\uff0c\u4e5f\u5c31\u662f\u51fa\u73b0\u9891\u6b21 = 1 \u800c \u503c = 2\uff1b\u7c7b\u4f3c \"1\" \u53ef\u4ee5\u8bfb\u4f5c \"11\"\u3002\u6240\u4ee5\u7b54\u6848\u662f \"12\" \u548c \"11\" \u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u4e5f\u5c31\u662f \"1211\"\u3002\n</code></pre> <p>Reference</p>","tags":["\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/38/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u6839\u636e\u5b9a\u4e49\u8fdb\u884c\u8ba1\u7b97\u5373\u53ef\uff0c\u6ce8\u610f\u6b21\u6570\u90e8\u5206\u53ef\u80fd\u8d85\u8fc710\uff0c\u800c\u6570\u5b57\u90e8\u5206\u4e0d\u4f1a\u8d85\u8fc710\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>char * toStr(int n)\n{\nchar *ret = (char *)memset(malloc(sizeof(char) * 10), 0, sizeof(char) * 10), temp;\nint i = 0, head = 0, tail;\nwhile (n)\n{\nret[i] = n % 10 + '0';\nn /= 10;\ni++;\n}\ntail = i - 1;\nwhile(head &lt; tail)\n{\ntemp = ret[head];\nret[head] = ret[tail];\nret[tail] = temp;\n}\nreturn ret;\n}\n\nchar * countAndSay(int n){\nif (n == 1)\n{\nchar *ret = (char *)malloc(sizeof(char) * 2);\nret[0] = '1';\nret[1] = 0;\nreturn ret;\n}\nchar *rec = countAndSay(n - 1), *cur = rec, flag = *cur, *temp = NULL,\n*ret = (char *)memset(malloc(sizeof(char) * (strlen(rec) * 2 + 1)), 0, sizeof(char) * (strlen(rec) * 2 + 1)), *retcur = ret;\nint counter = 0;\nwhile(*cur)\n{\nif (*cur == flag)\ncounter++;\nelse\n{\ntemp = toStr(counter);\nstrcpy(retcur, temp);\nwhile(*retcur)\nretcur++;\n*retcur = flag;\n*retcur++;\nflag = *cur;\ncounter = 1;\nfree(temp);\n}\ncur++;\n}\ntemp = toStr(counter);\nstrcpy(retcur, temp);\nwhile (*retcur)\nretcur++;\n*retcur = flag;\nfree(temp);\nfree(rec);\nreturn ret;\n}\n</code></pre>","tags":["\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/384/","title":"384. \u6253\u4e71\u6570\u7ec4","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/384/#_1","title":"\u9898\u76ee","text":"<p>\u6253\u4e71\u4e00\u4e2a\u6ca1\u6709\u91cd\u590d\u5143\u7d20\u7684\u6570\u7ec4\u3002</p> <p>\u793a\u4f8b\uff1a</p> <pre><code>// \u4ee5\u6570\u5b57\u96c6\u5408 1, 2 \u548c 3 \u521d\u59cb\u5316\u6570\u7ec4\u3002\nint[] nums = {1,2,3};\nSolution solution = new Solution(nums);\n\n// \u6253\u4e71\u6570\u7ec4 [1,2,3] \u5e76\u8fd4\u56de\u7ed3\u679c\u3002\u4efb\u4f55 [1,2,3]\u7684\u6392\u5217\u8fd4\u56de\u7684\u6982\u7387\u5e94\u8be5\u76f8\u540c\u3002\nsolution.shuffle();\n\n// \u91cd\u8bbe\u6570\u7ec4\u5230\u5b83\u7684\u521d\u59cb\u72b6\u6001[1,2,3]\u3002\nsolution.reset();\n\n// \u968f\u673a\u8fd4\u56de\u6570\u7ec4[1,2,3]\u6253\u4e71\u540e\u7684\u7ed3\u679c\u3002\nsolution.shuffle();\n</code></pre> <p>Reference</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/384/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a Fisher-Yates \u6d17\u724c\u7b97\u6cd5\uff0c\u5173\u952e\u5728\u4e8e\u5b9e\u73b0\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u65e0\u653e\u56de\u62bd\u6837\u3002</p> <p>Fisher-Yates \u6d17\u724c\u7b97\u6cd5\u8ddf\u66b4\u529b\u7b97\u6cd5\u5f88\u50cf\u3002\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0c\u751f\u6210\u4e00\u4e2a\u8303\u56f4\u5728\u5f53\u524d\u4e0b\u6807\u5230\u6570\u7ec4\u672b\u5c3e\u5143\u7d20\u4e0b\u6807\u4e4b\u95f4\u7684\u968f\u673a\u6574\u6570\u3002\u63a5\u4e0b\u6765\uff0c\u5c06\u5f53\u524d\u5143\u7d20\u548c\u968f\u673a\u9009\u51fa\u7684\u4e0b\u6807\u6240\u6307\u7684\u5143\u7d20\u4e92\u76f8\u4ea4\u6362 - \u8fd9\u4e00\u6b65\u6a21\u62df\u4e86\u6bcf\u6b21\u4ece \u201c\u5e3d\u5b50\u201d \u91cc\u9762\u6478\u4e00\u4e2a\u5143\u7d20\u7684\u8fc7\u7a0b\uff0c\u5176\u4e2d\u9009\u53d6\u4e0b\u6807\u8303\u56f4\u7684\u4f9d\u636e\u5728\u4e8e\u6bcf\u4e2a\u88ab\u6478\u51fa\u7684\u5143\u7d20\u90fd\u4e0d\u53ef\u80fd\u518d\u88ab\u6478\u51fa\u6765\u4e86\u3002\u6b64\u5916\u8fd8\u6709\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u7ec6\u8282\uff0c\u5f53\u524d\u5143\u7d20\u662f\u53ef\u4ee5\u548c\u5b83\u672c\u8eab\u4e92\u76f8\u4ea4\u6362\u7684 - \u5426\u5219\u751f\u6210\u6700\u540e\u7684\u6392\u5217\u7ec4\u5408\u7684\u6982\u7387\u5c31\u4e0d\u5bf9\u4e86\u3002</p> <p>Reference</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>typedef struct {\nint size;\nint *nums;\n} Solution;\n\n\nSolution* solutionCreate(int* nums, int numsSize) {\nSolution *ret = (Solution *)malloc(sizeof(Solution));\nret-&gt;size = numsSize;\nret-&gt;nums = (int *)memcpy(malloc(sizeof(int) * numsSize), nums, sizeof(int) * numsSize);\nreturn ret;\n}\n\n/** Resets the array to its original configuration and return it. */\nint* solutionReset(Solution* obj, int* retSize) {\n*retSize = obj-&gt;size;\nreturn obj-&gt;nums;\n}\n\n/** Returns a random shuffling of the array. */\nint* solutionShuffle(Solution* obj, int* retSize) {\n*retSize = obj-&gt;size;\nint *ret = (int *)memcpy(malloc(sizeof(int) * obj-&gt;size), obj-&gt;nums, sizeof(int) * obj-&gt;size), i = 0, temp, x, y;\nunsigned int *seed = malloc(sizeof(unsigned int));\n*seed += (unsigned int)seed;\nsrand(*seed);\nfor (i = 0; i &lt; obj-&gt;size; i++)\n{\nx = i;\ny = rand() % (obj-&gt;size - i) + i;\ntemp = ret[x];\nret[x] = ret[y];\nret[y] = temp;\n}\nfree(seed);\nreturn ret;\n}\n\nvoid solutionFree(Solution* obj) {\nfree(obj-&gt;nums);\nfree(obj);\n}\n\n/**\n * Your Solution struct will be instantiated and called as such:\n * Solution* obj = solutionCreate(nums, numsSize);\n * int* param_1 = solutionReset(obj, retSize);\n\n * int* param_2 = solutionShuffle(obj, retSize);\n\n * solutionFree(obj);\n*/\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/387/","title":"387. \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u54c8\u5e0c\u8868","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/387/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u627e\u5230\u5b83\u7684\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u5b83\u7684\u7d22\u5f15\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de<code>-1</code>\u3002</p> <p>\u793a\u4f8b\uff1a</p> <pre><code>s = \"leetcode\"\n\u8fd4\u56de 0\n\ns = \"loveleetcode\"\n\u8fd4\u56de 2\n</code></pre> <p>\u63d0\u793a\uff1a \u4f60\u53ef\u4ee5\u5047\u5b9a\u8be5\u5b57\u7b26\u4e32\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</p> <p>Reference</p>","tags":["\u54c8\u5e0c\u8868","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/387/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u50a8\u5b57\u7b26\u4e32\u4e2d\u5404\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u3002\u904d\u5386\u5b57\u7b26\u4e32\u8fdb\u884c\u7edf\u8ba1\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>int firstUniqChar(char * s){\nint hashMap[26] = {0};\nchar *cur = s;\nwhile(*cur)\n{\nhashMap[*cur - 'a']++;\ncur++;\n}\ncur = s;\nwhile(*cur)\n{\nif (hashMap[*cur - 'a'] == 1)\nreturn (int)(cur - s);\ncur++;\n}\nreturn -1;\n}\n</code></pre>","tags":["\u54c8\u5e0c\u8868","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/403/","title":"403. \u9752\u86d9\u8fc7\u6cb3","text":"<p>\u96be\u5ea6\uff1a\u56f0\u96be</p> <p>\u4e00\u53ea\u9752\u86d9\u60f3\u8981\u8fc7\u6cb3\u3002 \u5047\u5b9a\u6cb3\u6d41\u88ab\u7b49\u5206\u4e3a\u82e5\u5e72\u4e2a\u5355\u5143\u683c\uff0c\u5e76\u4e14\u5728\u6bcf\u4e00\u4e2a\u5355\u5143\u683c\u5185\u90fd\u6709\u53ef\u80fd\u653e\u6709\u4e00\u5757\u77f3\u5b50\uff08\u4e5f\u6709\u53ef\u80fd\u6ca1\u6709\uff09\u3002 \u9752\u86d9\u53ef\u4ee5\u8df3\u4e0a\u77f3\u5b50\uff0c\u4f46\u662f\u4e0d\u53ef\u4ee5\u8df3\u5165\u6c34\u4e2d\u3002</p> <p>\u7ed9\u4f60\u77f3\u5b50\u7684\u4f4d\u7f6e\u5217\u8868 <code>stones</code>\uff08\u7528\u5355\u5143\u683c\u5e8f\u53f7 \u5347\u5e8f \u8868\u793a\uff09\uff0c\u00a0\u8bf7\u5224\u5b9a\u9752\u86d9\u80fd\u5426\u6210\u529f\u8fc7\u6cb3\uff08\u5373\u80fd\u5426\u5728\u6700\u540e\u4e00\u6b65\u8df3\u81f3\u6700\u540e\u4e00\u5757\u77f3\u5b50\u4e0a\uff09\u3002</p> <p>\u5f00\u59cb\u65f6\uff0c\u00a0\u9752\u86d9\u9ed8\u8ba4\u5df2\u7ad9\u5728\u7b2c\u4e00\u5757\u77f3\u5b50\u4e0a\uff0c\u5e76\u53ef\u4ee5\u5047\u5b9a\u5b83\u7b2c\u4e00\u6b65\u53ea\u80fd\u8df3\u8dc3\u4e00\u4e2a\u5355\u4f4d\uff08\u5373\u53ea\u80fd\u4ece\u5355\u5143\u683c 1 \u8df3\u81f3\u5355\u5143\u683c 2 \uff09\u3002</p> <p>\u5982\u679c\u9752\u86d9\u4e0a\u4e00\u6b65\u8df3\u8dc3\u4e86\u00a0<code>k</code>\u00a0\u4e2a\u5355\u4f4d\uff0c\u90a3\u4e48\u5b83\u63a5\u4e0b\u6765\u7684\u8df3\u8dc3\u8ddd\u79bb\u53ea\u80fd\u9009\u62e9\u4e3a\u00a0<code>k - 1</code>\u3001<code>k</code>\u00a0\u6216\u00a0<code>k + 1</code> \u4e2a\u5355\u4f4d\u3002\u00a0\u53e6\u8bf7\u6ce8\u610f\uff0c\u9752\u86d9\u53ea\u80fd\u5411\u524d\u65b9\uff08\u7ec8\u70b9\u7684\u65b9\u5411\uff09\u8df3\u8dc3\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1astones = [0,1,3,5,6,8,12,17]\n\u8f93\u51fa\uff1atrue\n\u89e3\u91ca\uff1a\u9752\u86d9\u53ef\u4ee5\u6210\u529f\u8fc7\u6cb3\uff0c\u6309\u7167\u5982\u4e0b\u65b9\u6848\u8df3\u8dc3\uff1a\u8df3 1 \u4e2a\u5355\u4f4d\u5230\u7b2c 2 \u5757\u77f3\u5b50, \u7136\u540e\u8df3 2 \u4e2a\u5355\u4f4d\u5230\u7b2c 3 \u5757\u77f3\u5b50, \u63a5\u7740 \u8df3 2 \u4e2a\u5355\u4f4d\u5230\u7b2c 4 \u5757\u77f3\u5b50, \u7136\u540e\u8df3 3 \u4e2a\u5355\u4f4d\u5230\u7b2c 6 \u5757\u77f3\u5b50, \u8df3 4 \u4e2a\u5355\u4f4d\u5230\u7b2c 7 \u5757\u77f3\u5b50, \u6700\u540e\uff0c\u8df3 5 \u4e2a\u5355\u4f4d\u5230\u7b2c 8 \u4e2a\u77f3\u5b50\uff08\u5373\u6700\u540e\u4e00\u5757\u77f3\u5b50\uff09\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1astones = [0,1,2,3,4,8,9,11]\n\u8f93\u51fa\uff1afalse\n\u89e3\u91ca\uff1a\u8fd9\u662f\u56e0\u4e3a\u7b2c 5 \u548c\u7b2c 6 \u4e2a\u77f3\u5b50\u4e4b\u95f4\u7684\u95f4\u8ddd\u592a\u5927\uff0c\u6ca1\u6709\u53ef\u9009\u7684\u65b9\u6848\u4f9b\u9752\u86d9\u8df3\u8dc3\u8fc7\u53bb\u3002\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>2 &lt;= stones.length &lt;= 2000</code></li> <li><code>0 &lt;= stones[i] &lt;= 2^31 - 1</code></li> <li><code>stones[0] == 0</code></li> </ul> <p>Reference</p>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/403/#_1","title":"\u9898\u89e3","text":"<p>\u6839\u636e\u9898\u610f\uff0c\u5728\u4efb\u4f55\u72b6\u6001\uff0c\u9752\u86d9\u90fd\u6700\u591a\u53ea\u6709\u4e09\u79cd\u72b6\u6001\u53ef\u4ee5\u9009\u62e9\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u67e5\u627e\u6240\u6709\u7684\u72b6\u6001\u3002\u5047\u8bbe\u9752\u86d9\u8df3\u4e86\\(k\\)\u683c\u8fbe\u5230\u5f53\u524d\u8282\u70b9</p> <ul> <li>\u5f53\u9752\u86d9\u8fbe\u5230\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u65f6\u8fd4\u56de<code>true</code>\uff0c</li> <li>\u5f53\u9752\u86d9\u5230\u8fbe\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u68c0\u67e5\u524d\u9762\u7684\\(k-1, k, k+1\\)\u4e2a\u5355\u5143\u683c\u662f\u5426\u6709\u77f3\u5b50\uff0c</li> <li>\u5f53\u9752\u86d9\u65e0\u6cd5\u7ee7\u7eed\u5411\u524d\u79fb\u52a8\u65f6\u8fd4\u56de<code>false</code>\u5e76\u8fdb\u884c\u56de\u6eaf\u3002</li> </ul> <pre><code>bool dfs(int *stones, int stonesSize, int currentPos, int lastStep)\n{\nif (currentPos == stonesSize - 1)\nreturn true;\nint i = 0, j = 0, cur_id = stones[currentPos];\nbool ret = false;\nfor (i = -1; i &lt; 2; i++)\n{\nif (lastStep + i &lt;= 0)\ncontinue;\nfor (j = currentPos + 1; !ret &amp;&amp; j &lt; stonesSize &amp;&amp; stones[j] &lt;= cur_id + lastStep + i; j++)\nif (stones[j] == cur_id + lastStep + i)\nret = ret || dfs(stones, stonesSize, j, lastStep + i);\n}\nreturn ret;\n}\n\nbool canCross(int* stones, int stonesSize){\nreturn dfs(stones, stonesSize, 0, 0);\n}\n</code></pre> <p>\u5982\u4e0adfs\u7b97\u6cd5\u4f1a\u5bf9\u6240\u6709\u7684\u5206\u652f\u8fdb\u884c\u904d\u5386\uff0c\u76f4\u5230\u627e\u51fa\u6700\u7ec8\u7ed3\u679c\u3002\u4f1a\u9020\u6210\u5927\u91cf\u65f6\u95f4\u7684\u6d6a\u8d39\u3002\u6784\u9020\u5982\u4e0b\u8f93\u5165\u6570\u636e\u5373\u53ef\u4f7f\u8be5\u7b97\u6cd5\u8d85\u65f6\uff1a</p> <pre><code>[0,1,2,3,4,5,...,998, +infty]\n</code></pre> <p>\u5176\u4e2d<code>+infty</code>\u6307\u5145\u5206\u5927\u7684\u6574\u6570\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u52a0\u5165\u4e00\u4e2a\u6570\u7ec4\uff0c\u7528\u4e8e\u8bb0\u5fc6\u4e0d\u540c\u4f4d\u7f6e\u7684\u5230\u7ec8\u70b9\u7684\u53ef\u8fbe\u6027\uff1a</p> <pre><code>bool dfs(int *stones, int *buf, int stonesSize, int currentPos, int lastStep)\n{\nif (buf[currentPos] != -1)\nreturn buf[currentPos];\nif (currentPos == stonesSize - 1)\nreturn true;\nint i = 0, j = 0, cur_id = stones[currentPos];\nbool ret = false;\nfor (i = -1; i &lt; 2; i++)\n{\nif (lastStep + i &lt;= 0)\ncontinue;\nfor (j = currentPos + 1; !ret &amp;&amp; j &lt; stonesSize &amp;&amp; stones[j] &lt;= cur_id + lastStep + i; j++)\nif (stones[j] == cur_id + lastStep + i)\nret = ret || dfs(stones, buf, stonesSize, j, lastStep + i);\n}\nbuf[currentPos] = ret;\nreturn ret;\n}\n\nbool canCross(int* stones, int stonesSize){\nint *buf = (int *)malloc(sizeof(int) * stonesSize);\nmemset(buf, 0xff, sizeof(int) * stonesSize);\nreturn dfs(stones, buf, stonesSize, 0, 0);\n}\n</code></pre> <p>\u4f46\u8fd9\u4e2a\u7b97\u6cd5\u53ea\u80fd\u901a\u8fc7\u4e00\u90e8\u5206\u6d4b\u4f8b\uff0c\u90e8\u5206\u6d4b\u4f8b\u65e0\u6cd5\u901a\u8fc7\uff08\u5982\u793a\u4f8b1\uff0c<code>[0,1,3,5,6,8,12,17]</code>\uff09\u3002\u6211\u4eec\u67e5\u770b\u4e00\u4e0b\u9752\u86d9\u5728\u8282\u70b9\u95f4\u8df3\u8dc3\u7684\u60c5\u51b5\uff1a</p> <p></p> <p>\u5f53\u7b97\u6cd5\u8d70\u5230\u8282\u70b9<code>5</code>\u65f6\uff0c\u9996\u5148\u4f1a\u5c1d\u8bd5\u8def\u5f84<code>5-&gt;6-&gt;8</code>\uff0c\u4f46\u6b64\u65f6\u5728\u8282\u70b9<code>8</code>\u9752\u86d9\u6700\u591a\u53ea\u80fd\u8df3<code>3</code>\u6b65\uff0c\u4ece\u800c\u88ab\u8bb0\u5fc6\u5316\u6807\u8bb0\u4e3a\u4e0d\u53ef\u5230\u8fbe\u7ec8\u70b9\uff0c\u4f46\u5b9e\u9645\u4e0a\u5982\u679c\u76f4\u63a5\u91c7\u53d6\u8def\u5f84<code>5-&gt;8</code>\u5219\u53ef\u4ee5\u4ece\u8282\u70b9<code>8</code>\u8df3\u5230\u8282\u70b9<code>12</code>\u3002\u5373\u67d0\u4e2a\u4f4d\u7f6e\u7684\u7ec8\u70b9\u53ef\u8fbe\u6027\u53d7\u5230\u4e0a\u4e00\u6b65\u8df3\u52a8\u6b65\u6570\u7684\u5f71\u54cd\uff0c\u6211\u4eec\u5728\u8fdb\u884c\u8bb0\u5fc6\u5316\u65f6\u9700\u8981\u8bb0\u5fc6\u6bcf\u4e2a\u8282\u70b9\u5728\u6bcf\u4e2a\u8df3\u52a8\u6b65\u6570\u60c5\u51b5\u4e0b\u7684\u53ef\u8fbe\u6027\u3002</p> <p>\u5982\u4e0b\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u4ee3\u66ff\u904d\u5386\uff0c\u5e76\u4f7f\u7528\u62c9\u94fe\u6cd5\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u53ef\u8fbe\u6027\uff0c\u94fe\u8868\u8282\u70b9\u4e2d\u5b58\u50a8\u76f8\u5e94\u7684\u8df3\u52a8\u6b65\u6570\u3002</p> <pre><code>struct BufNode\n{\nint success;\nint lastStep;\nstruct BufNode *next;\n};\n\nstruct BufNode *getNode(int success, int lastStep, struct BufNode *next)\n{\nstruct BufNode *ret = (struct BufNode *)malloc(sizeof(struct BufNode));\nret-&gt;success = success;\nret-&gt;lastStep = lastStep;\nret-&gt;next = next;\nreturn ret;\n}\n\nbool check(struct BufNode *buf, int lastStep, int *success)\n{\nif (buf == NULL)\nreturn NULL;\nif (buf-&gt;lastStep == lastStep)\n{\nif (success)\n*success = buf-&gt;success;\nreturn true;\n}\nreturn check(buf-&gt;next, lastStep, success);\n}\n\nint bSearch(int *stones, int lo, int hi, int target)\n{\nint mid;\nwhile (lo &lt; hi)\n{\nmid = (lo + hi) &gt;&gt; 1;\nif (target &lt; stones[mid])\nhi = mid;\nelse\nlo = mid + 1;\n}\nreturn lo - 1;\n}\n\nbool dfs(int *stones, struct BufNode **buf, int stonesSize, int currentPos, int lastStep)\n{\nint success = false;\nif (check(buf[currentPos], lastStep, &amp;success))\nreturn success;\nif (currentPos == stonesSize - 1)\nreturn true;\nint i = 0, j = 0, cur_id = stones[currentPos];\nbool ret = false;\nfor (i = -1; i &lt; 2; i++)\n{\nif (lastStep + i &lt;= 0)\ncontinue;\nj = bSearch(stones, currentPos + 1, stonesSize, cur_id + lastStep + i);\nif (stones[j] == cur_id + lastStep + i)\nret = ret || dfs(stones, buf, stonesSize, j, lastStep + i);\n}\nbuf[currentPos] = getNode(ret, lastStep, buf[currentPos]);\nreturn ret;\n}\n\nbool canCross(int* stones, int stonesSize){\nstruct BufNode **buf = (struct BufNode **)malloc(sizeof(struct BufNode *) * stonesSize);\nmemset(buf, 0, sizeof(struct BufNode *) * stonesSize);\nreturn dfs(stones, buf, stonesSize, 0, 0);\n}\n</code></pre>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/42/","title":"42. \u63a5\u96e8\u6c34","text":"<p>\u96be\u5ea6\uff1a\u56f0\u96be</p>","tags":["\u6808","\u6570\u7ec4","\u53cc\u6307\u9488","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/42/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u00a0<code>n</code> \u4e2a\u975e\u8d1f\u6574\u6570\u8868\u793a\u6bcf\u4e2a\u5bbd\u5ea6\u4e3a <code>1</code> \u7684\u67f1\u5b50\u7684\u9ad8\u5ea6\u56fe\uff0c\u8ba1\u7b97\u6309\u6b64\u6392\u5217\u7684\u67f1\u5b50\uff0c\u4e0b\u96e8\u4e4b\u540e\u80fd\u63a5\u591a\u5c11\u96e8\u6c34\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <p></p> <pre><code>\u8f93\u5165\uff1aheight = [0,1,0,2,1,0,1,3,2,1,2,1]\n\u8f93\u51fa\uff1a6\n\u89e3\u91ca\uff1a\u4e0a\u9762\u662f\u7531\u6570\u7ec4 [0,1,0,2,1,0,1,3,2,1,2,1] \u8868\u793a\u7684\u9ad8\u5ea6\u56fe\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u63a5 6 \u4e2a\u5355\u4f4d\u7684\u96e8\u6c34\uff08\u84dd\u8272\u90e8\u5206\u8868\u793a\u96e8\u6c34\uff09\u3002 \n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1aheight = [4,2,0,3,2,5]\n\u8f93\u51fa\uff1a9\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>n == height.length</code></li> <li><code>0 &lt;= n &lt;= 3 * 10^4</code></li> <li><code>0 &lt;= height[i] &lt;= 10^5</code></li> </ul> <p>Reference</p> <p>\u6ce8\uff1a\u672c\u9898\u4e0e\u9762\u8bd5\u9898 17.21. \u76f4\u65b9\u56fe\u7684\u6c34\u91cf\u76f8\u540c\u3002</p>","tags":["\u6808","\u6570\u7ec4","\u53cc\u6307\u9488","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/42/#_2","title":"\u9898\u89e3","text":"<ol> <li> <p>\u5206\u6cbb\u7b97\u6cd5\uff0c\u6c34\u7684\u9ad8\u5ea6\u4e0d\u4f1a\u9ad8\u4e8e\u6700\u9ad8\u7684\u67f1\u5b50\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u6700\u9ad8\u7684\u67f1\u5b50\\(A\\)\u4e0e\u6b21\u9ad8\u7684\u67f1\u5b50\\(B\\)\u4e24\u5904\u8fdb\u884c\u5206\u5272\uff0c\u5206\u522b\u6c42\u89e3\u4e09\u6bb5\u5bb9\u7eb3\u7684\u6c34\u91cf\u3002</p> <p>\\(A, B\\)\u4e4b\u95f4\u5fc5\u7136\u53ef\u4ee5\u5bb9\u7eb3\u6c34\uff0c\u6c34\u7684\u91cf\u7b49\u4e8e\u5404\u4e2a\u67f1\u5b50\u5230\u6b21\u9ad8\u67f1\u5b50\u7684\u9ad8\u5ea6\u4e4b\u548c\u3002\u5176\u4ed6\u533a\u95f4\u9700\u8981\u9012\u5f52\u8fdb\u884c\u6c42\u89e3\u3002\u9700\u8981\u6ce8\u610f\u5206\u5272\u65f6\u5206\u5272\u70b9\u8981\u540c\u65f6\u5305\u542b\u5728\u5de6\u53f3\u4e24\u4fa7\uff0c\u5426\u5219\u65e0\u6cd5\u5bb9\u7eb3\u6c34\u3002</p> <p>\u5f53\u67f1\u5b50\u6570\u91cf\u5c0f\u4e8e3\u65f6\uff0c\u65e0\u6cd5\u5bb9\u7eb3\u4efb\u4f55\u6c34\u3002</p> <pre><code>#define MAX(x, y) (x &gt; y ? x : y)\n#define MIN(x, y) (x &lt; y ? x : y)\n\nint trap(int* height, int heightSize){\nint *maxLeft = (int *)malloc(sizeof(int) * heightSize),\n*maxRight = (int *)malloc(sizeof(int) * heightSize),\ni = 0, ret = 0;\nif (heightSize == 0)\nreturn 0;\nmaxLeft[0] = height[0];\nmaxRight[heightSize - 1] = height[heightSize - 1];\nfor (i = 1; i &lt; heightSize; i++)\n{\nmaxLeft[i] = MAX(maxLeft[i - 1], height[i - 1]);\nmaxRight[heightSize - i - 1] = MAX(maxRight[heightSize - i], height[heightSize - i]);\n}\nfor (i = 0; i &lt; heightSize; i++)\nret += MAX(0, MIN(maxLeft[i], maxRight[i]) - height[i]);\nreturn ret;\n}\n</code></pre> <p>\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\mathcal O(N)\\)\u3002</p> </li> <li> <p>\u76f4\u63a5\u601d\u8def\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u67f1\u5b50\uff0c\u5176\u5bb9\u7eb3\u6c34\u540e\u7684\u9ad8\u5ea6\uff08\u67f1\u5b50\u9ad8\u5ea6\u51cf\u53bb\u6c34\u9ad8\u5ea6\uff09\u7b49\u4e8e\u8be5\u67f1\u5b50\u5de6\u4fa7\u6700\u9ad8\u67f1\u5b50\u7684\u9ad8\u5ea6\u4e0e\u53f3\u4fa7\u6700\u9ad8\u67f1\u5b50\u7684\u9ad8\u5ea6\u7684\u6700\u5c0f\u503c\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u67f1\u5b50\uff0c\u53ef\u4ee5\u7edf\u8ba1\u5728\u5176\u5de6\u4fa7\u6700\u9ad8\u67f1\u5b50\u7684\u9ad8\u5ea6\u4e0e\u5728\u5176\u53f3\u4fa7\u6700\u9ad8\u67f1\u5b50\u7684\u9ad8\u5ea6\uff0c\u5b58\u50a8\u5728\u4e24\u4e2a\u6570\u7ec4\u4e2d\u3002</p> <p>\u7ed3\u679c\u4e3a\u6bcf\u4e2a\u67f1\u5b50\u5bb9\u7eb3\u6c34\u540e\u7684\u9ad8\u5ea6\u4e0e\u67f1\u5b50\u9ad8\u5ea6\u4e4b\u5dee\u7684\u6c42\u548c\u3002</p> <pre><code>#define MAX(x, y) (x &gt; y ? x : y)\n#define MIN(x, y) (x &lt; y ? x : y)\n\nint trap(int* height, int heightSize){\nint *maxLeft = (int *)malloc(sizeof(int) * heightSize),\n*maxRight = (int *)malloc(sizeof(int) * heightSize),\ni = 0, ret = 0;\nif (heightSize == 0)\nreturn 0;\nmaxLeft[0] = height[0];\nmaxRight[heightSize - 1] = height[heightSize - 1];\nfor (i = 1; i &lt; heightSize; i++)\n{\nmaxLeft[i] = MAX(maxLeft[i - 1], height[i - 1]);\nmaxRight[heightSize - i - 1] = MAX(maxRight[heightSize - i], height[heightSize - i]);\n}\nfor (i = 0; i &lt; heightSize; i++)\nret += MAX(0, MIN(maxLeft[i], maxRight[i]) - height[i]);\nreturn ret;\n}\n</code></pre> </li> </ol>","tags":["\u6808","\u6570\u7ec4","\u53cc\u6307\u9488","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/43/","title":"43. \u5b57\u7b26\u4e32\u76f8\u4e58","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/43/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e24\u4e2a\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8868\u793a\u7684\u975e\u8d1f\u6574\u6570\u00a0<code>num1</code>\u00a0\u548c\u00a0<code>num2</code>\uff0c\u8fd4\u56de\u00a0<code>num1</code>\u00a0\u548c\u00a0<code>num2</code>\u00a0\u7684\u4e58\u79ef\uff0c\u5b83\u4eec\u7684\u4e58\u79ef\u4e5f\u8868\u793a\u4e3a\u5b57\u7b26\u4e32\u5f62\u5f0f\u3002</p> <p>\u793a\u4f8b 1:</p> <pre><code>\u8f93\u5165: num1 = \"2\", num2 = \"3\"\n\u8f93\u51fa: \"6\"\n</code></pre> <p>\u793a\u4f8b\u00a02:</p> <pre><code>\u8f93\u5165: num1 = \"123\", num2 = \"456\"\n\u8f93\u51fa: \"56088\"\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li><code>num1</code>\u00a0\u548c\u00a0<code>num2</code>\u00a0\u7684\u957f\u5ea6\u5c0f\u4e8e110\u3002</li> <li><code>num1</code> \u548c\u00a0<code>num2</code> \u53ea\u5305\u542b\u6570\u5b57\u00a0<code>0-9</code>\u3002</li> <li><code>num1</code> \u548c\u00a0<code>num2</code>\u00a0\u5747\u4e0d\u4ee5\u96f6\u5f00\u5934\uff0c\u9664\u975e\u662f\u6570\u5b57 <code>0</code> \u672c\u8eab\u3002</li> <li>\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u6807\u51c6\u5e93\u7684\u5927\u6570\u7c7b\u578b\uff08\u6bd4\u5982BigInteger\uff09\u6216\u76f4\u63a5\u5c06\u8f93\u5165\u8f6c\u6362\u4e3a\u6574\u6570\u6765\u5904\u7406\u3002</li> </ul> <p>Reference</p>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/43/#_2","title":"\u9898\u89e3","text":"<p>\u8ba1\u7b97\u65b9\u6cd5\u4e0e\u5217\u7ad6\u5f0f\u76f8\u540c\uff0c\u6ce8\u610f\u5bf9\u7279\u6b8a\u8f93\u5165<code>0</code>\u7684\u5904\u7406\u3002\u7ed3\u679c\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7\u8f93\u5165\u5b57\u7b26\u4e32\u957f\u5ea6\u4e4b\u548c\u3002</p> <pre><code>char * multiply(char * num1, char * num2){\nif (*num1 == '0' || *num2 == '0')\nreturn *num1 == '0' ? num1 : num2;\nint len1 = strlen(num1), len2 = strlen(num2), retLen = len1 + len2, i = 0, j = 0, incre, curDigit, pos;\nchar *ret = (char *)memset(malloc(sizeof(char) * (retLen + 1)), '0', sizeof(char) * (retLen + 1)),\n*cur = ret;\nret[retLen] = 0;\nfor (i = len1 - 1; i &gt;= 0; i--)\n{\nfor (j = len2 - 1; j &gt;= 0; j--)\n{\nincre = (num1[i] - '0') * (num2[j] - '0');\ncurDigit = incre % 10;\nincre /= 10;\npos = retLen - ((len1 - i - 1) + (len2 - j - 1)) - 1;\nwhile (incre != 0 || curDigit != 0)\n{\nret[pos] += curDigit;\nincre += ret[pos] &gt; '9';\nret[pos] -= ret[pos] &gt; '9' ? 10 : 0;\ncurDigit = incre &gt;= 10 ? incre - 10 : incre;\nincre = incre &gt;= 10;\npos--;\n}\n}\n}\nwhile (*cur == '0')\ncur++;\nreturn cur;\n}\n</code></pre>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/433/","title":"433. \u6700\u5c0f\u57fa\u56e0\u53d8\u5316","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/433/#_1","title":"\u9898\u76ee","text":"<p>\u4e00\u6761\u57fa\u56e0\u5e8f\u5217\u7531\u4e00\u4e2a\u5e26\u67098\u4e2a\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u90fd\u5c5e\u4e8e <code>\"A\"</code>, <code>\"C\"</code>, <code>\"G\"</code>, <code>\"T\"</code>\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u3002</p> <p>\u5047\u8bbe\u6211\u4eec\u8981\u8c03\u67e5\u4e00\u4e2a\u57fa\u56e0\u5e8f\u5217\u7684\u53d8\u5316\u3002\u4e00\u6b21\u57fa\u56e0\u53d8\u5316\u610f\u5473\u7740\u8fd9\u4e2a\u57fa\u56e0\u5e8f\u5217\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u53d1\u751f\u4e86\u53d8\u5316\u3002</p> <p>\u4f8b\u5982\uff0c\u57fa\u56e0\u5e8f\u5217\u7531 <code>\"AACCGGTT\"</code>\u00a0\u53d8\u5316\u81f3\u00a0<code>\"AACCGGTA\"</code>\u00a0\u5373\u53d1\u751f\u4e86\u4e00\u6b21\u57fa\u56e0\u53d8\u5316\u3002</p> <p>\u4e0e\u6b64\u540c\u65f6\uff0c\u6bcf\u4e00\u6b21\u57fa\u56e0\u53d8\u5316\u7684\u7ed3\u679c\uff0c\u90fd\u9700\u8981\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u57fa\u56e0\u4e32\uff0c\u5373\u8be5\u7ed3\u679c\u5c5e\u4e8e\u4e00\u4e2a\u57fa\u56e0\u5e93\u3002</p> <p>\u73b0\u5728\u7ed9\u5b9a3\u4e2a\u53c2\u6570 \u2014 <code>start</code>, <code>end</code>, <code>bank</code>\uff0c\u5206\u522b\u4ee3\u8868\u8d77\u59cb\u57fa\u56e0\u5e8f\u5217\uff0c\u76ee\u6807\u57fa\u56e0\u5e8f\u5217\u53ca\u57fa\u56e0\u5e93\uff0c\u8bf7\u627e\u51fa\u80fd\u591f\u4f7f\u8d77\u59cb\u57fa\u56e0\u5e8f\u5217\u53d8\u5316\u4e3a\u76ee\u6807\u57fa\u56e0\u5e8f\u5217\u6240\u9700\u7684\u6700\u5c11\u53d8\u5316\u6b21\u6570\u3002\u5982\u679c\u65e0\u6cd5\u5b9e\u73b0\u76ee\u6807\u53d8\u5316\uff0c\u8bf7\u8fd4\u56de <code>-1</code>\u3002</p> <p>\u6ce8\u610f\uff1a</p> <ul> <li>\u8d77\u59cb\u57fa\u56e0\u5e8f\u5217\u9ed8\u8ba4\u662f\u5408\u6cd5\u7684\uff0c\u4f46\u662f\u5b83\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u51fa\u73b0\u5728\u57fa\u56e0\u5e93\u4e2d\u3002</li> <li>\u5982\u679c\u4e00\u4e2a\u8d77\u59cb\u57fa\u56e0\u5e8f\u5217\u9700\u8981\u591a\u6b21\u53d8\u5316\uff0c\u90a3\u4e48\u5b83\u6bcf\u4e00\u6b21\u53d8\u5316\u4e4b\u540e\u7684\u57fa\u56e0\u5e8f\u5217\u90fd\u5fc5\u987b\u662f\u5408\u6cd5\u7684\u3002</li> <li>\u5047\u5b9a\u8d77\u59cb\u57fa\u56e0\u5e8f\u5217\u4e0e\u76ee\u6807\u57fa\u56e0\u5e8f\u5217\u662f\u4e0d\u4e00\u6837\u7684\u3002</li> </ul> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>start: \"AACCGGTT\"\nend:   \"AACCGGTA\"\nbank: [\"AACCGGTA\"]\n\n\u8fd4\u56de\u503c: 1\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>start: \"AACCGGTT\"\nend:   \"AAACGGTA\"\nbank: [\"AACCGGTA\", \"AACCGCTA\", \"AAACGGTA\"]\n\n\u8fd4\u56de\u503c: 2\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>start: \"AAAAACCC\"\nend:   \"AACCCCCC\"\nbank: [\"AAAACCCC\", \"AAACCCCC\", \"AACCCCCC\"]\n\n\u8fd4\u56de\u503c: 3\n</code></pre> <p>Reference</p>","tags":["\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/433/#_2","title":"\u9898\u89e3","text":"<p>\u4f7f\u7528\u5e7f\u5ea6\u4f18\u5148\u7b97\u6cd5\u904d\u5386\u57fa\u56e0\u7684\u6240\u6709\u53ef\u80fd\u6539\u52a8\u60c5\u51b5\u3002\u57fa\u56e0\u5e8f\u5217\u957f\u5ea6\u4e3a8\uff0c\u6bcf\u6b21\u53ef\u80fd\u7684\u6539\u52a8\u60c5\u51b5\u4e3a\\(8\\times 3 = 24\\)\u79cd\uff0c\u5728\u8fd924\u79cd\u6539\u52a8\u60c5\u51b5\u4e2d\u9009\u62e9\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\u7684\u7ed3\u679c\uff1a</p> <ul> <li>\u7ed3\u679c\u662f\u5408\u6cd5\u7684\u57fa\u56e0</li> <li>\u7ed3\u679c\u672a\u88ab\u904d\u5386\u8fc7</li> </ul> <p>\u4f7f\u7528\u54c8\u5e0c\u8868\u5b58\u50a8\u57fa\u56e0\u5e93\u548c\u5df2\u7ecf\u88ab\u904d\u5386\u8fc7\u7684\u57fa\u56e0\u3002</p> <pre><code>char *genes = \"TGCATGCA\";\n\nint getCode(char *s)\n{\nint ret = 0;\nswitch (*s)\n{\ncase 'A':\nret++;\ncase 'C':\nret++;\ncase 'G':\nret++;\ncase 'T':\nbreak;\n}\nreturn ret;\n}\n\nint hash(char *s)\n{\nchar *cur = s;\nint ret = 0;\nwhile (*cur)\n{\nret &lt;&lt;= 2;\nret += getCode(cur);\ncur++;\n}\nreturn ret;\n}\n\nchar *dehash(int o)\n{\nchar *ret = (char *)malloc(sizeof(char) * 9);\nret[8] = 0;\nfor (int i = 7; i &gt;= 0; i--)\n{\nret[i] = genes[o &amp; 3];\no &gt;&gt;= 2;\n}\nreturn ret;\n}\n\nstruct Bank {\nchar *bitmap;\n};\n\nvoid deleteBank(struct Bank *dest)\n{\nfree(dest-&gt;bitmap);\nfree(dest);\n}\n\nvoid removeGene(struct Bank *dest, char *seq)\n{\nint i = hash(seq);\ndest-&gt;bitmap[i &gt;&gt; 3] &amp;= ~(1 &lt;&lt; (i &amp; 7));\n}\n\nvoid addGene(struct Bank *dest, char *seq)\n{\nint i = hash(seq);\ndest-&gt;bitmap[i &gt;&gt; 3] |= 1 &lt;&lt; (i &amp; 7);\n}\n\nbool queryGene(struct Bank *dest, char *seq)\n{\nint i = hash(seq);\nreturn dest-&gt;bitmap[i &gt;&gt; 3] &amp; (1 &lt;&lt; (i &amp; 7));\n}\n\nvoid merge(struct Bank *dest, struct Bank *src)\n{\nint i = 0;\nfor (i = 0; i &lt; 8192; i++)\ndest-&gt;bitmap[i] |= src-&gt;bitmap[i];\ndeleteBank(src);\n}\n\nstruct Bank *getBank(char **bank, int bankSize)\n{\nstruct Bank *ret = (struct Bank *)malloc(sizeof(struct Bank));\nret-&gt;bitmap = (char *)malloc(sizeof(char) * 8192);\nmemset(ret-&gt;bitmap, 0, sizeof(char) * 8192);\nfor (int i = 0; i &lt; bankSize; i++)\naddGene(ret, bank[i]);\nreturn ret;\n}\n\nstruct Bank *step(char *current, char *end, struct Bank *passed, struct Bank *fullBank, int *count)\n{\nint startHash = hash(current);\nstruct Bank *ret = getBank(NULL, 0);\naddGene(passed, current);\nfor (int i = 0; i &lt; 8; i++)\n{\nfor (int j = 0; j &lt; 4; j++)\n{\ncurrent[i] = genes[getCode(current + i) + 1];\nif (startHash == hash(current))\ncontinue;\nif (!queryGene(fullBank, current))\ncontinue;\nif (queryGene(passed, current))\ncontinue;\naddGene(ret, current);\n(*count)++;\n}\n}\nreturn ret;\n}\n\nstruct Bank *stepBank(struct Bank *current, char *end, struct Bank *passed, struct Bank *fullBank, int* count)\n{\nint index = 0;\nstruct Bank *ret = getBank(NULL, 0);\nchar *temp = NULL;\nfor (int i = 0; i &lt; 8192; i++)\n{\nif (current-&gt;bitmap[i])\n{\nindex = i &lt;&lt; 3;\nfor (int j = 0; j &lt; 8; j++)\n{\nif (current-&gt;bitmap[i] &amp; (1 &lt;&lt; j))\n{\nindex += j;\ntemp = dehash(index);\nmerge(ret, step(temp, end, passed, fullBank, count));\nfree(temp);\n}\n}\n}\n}\nreturn ret;\n}\n\nint minMutation(char * start, char * end, char ** bank, int bankSize){\nstruct Bank *fullBank = getBank(bank, bankSize), *passed = getBank(NULL, 0);\nstruct Bank *temp = getBank(NULL, 0), *temp2 = NULL;\naddGene(temp, start);\nint ret = 0, modified = 0;\nwhile (!queryGene(temp, end))\n{\nmodified = 0;\ntemp2 = stepBank(temp, end, passed, fullBank, &amp;modified);\ndeleteBank(temp);\ntemp = temp2;\nif (!modified)\nreturn -1;\nret++;\n}\nreturn ret;\n}\n</code></pre>","tags":["\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22","\u54c8\u5e0c\u8868"]},{"location":"coding/leetcode/46/","title":"46. \u5168\u6392\u5217","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/46/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a \u6ca1\u6709\u91cd\u590d \u6570\u5b57\u7684\u5e8f\u5217\uff0c\u8fd4\u56de\u5176\u6240\u6709\u53ef\u80fd\u7684\u5168\u6392\u5217\u3002</p> <p>\u793a\u4f8b:</p> <pre><code>\u8f93\u5165: [1,2,3]\n\u8f93\u51fa:\n[\n  [1,2,3],\n  [1,3,2],\n  [2,1,3],\n  [2,3,1],\n  [3,1,2],\n  [3,2,1]\n]\n</code></pre> <p>Reference</p>","tags":["\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/46/#_2","title":"\u9898\u89e3","text":"<p>\u4f7f\u7528\u56de\u6eaf\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u5e8f\u5217\uff1a</p> <ul> <li>\u82e5\u957f\u5ea6\u4e3a1\uff0c\u5219\u53ea\u6709\u4e00\u79cd\u6392\u5217\u65b9\u5f0f\uff0c\u76f4\u63a5\u8fd4\u56de</li> <li>\u82e5\u957f\u5ea6\u5927\u4e8e1\uff0c\u5219\u53ef\u4ee5\uff1a<ul> <li>\u5c06\u5e8f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u6570\u653e\u5728\u6392\u5217\u7684\u7b2c\u4e00\u4f4d\uff0c\u7136\u540e\u4e0e\u540e\u9762\u90e8\u5206\u7684\u5168\u6392\u5217\u5408\u5e76</li> <li>\u5c06\u5e8f\u5217\u4e2d\u7b2c\u4e8c\u4e2a\u6570\u653e\u5728\u6392\u5217\u7684\u7b2c\u4e00\u4f4d\uff0c\u7136\u540e\u4e0e\u540e\u9762\u90e8\u5206\u7684\u5168\u6392\u5217\u5408\u5e76</li> <li>\u2026\u2026</li> <li>\u5c06\u5e8f\u5217\u4e2d\u6700\u540e\u4e00\u4e2a\u6570\u653e\u5728\u6392\u5217\u7684\u7b2c\u4e00\u4f4d\uff0c\u7136\u540e\u4e0e\u540e\u9762\u90e8\u5206\u7684\u5168\u6392\u5217\u5408\u5e76</li> <li>\u6700\u7ec8\u7ed3\u679c\u5305\u542b\u5982\u4e0a\u6240\u6709\u7684\u6392\u5217\u3002</li> </ul> </li> </ul> <p>\u5bf9\u4e8e\u957f\u5ea6\u4e3a\\(n\\)\u7684\u5e8f\u5217\uff0c\u5171\u6709\\(n!\\)\u79cd\u6392\u5217\u3002</p> <pre><code>int fact(int x)\n{\nif (!x)\nreturn 0;\nint i = 1, ret = 1;\nfor (i = 1; i &lt;= x; i++)\nret *= i;\nreturn ret;\n}\nvoid swap(int *a, int *b)\n{\nint temp = *a;\n*a = *b;\n*b = temp;\n}\nint** permute(int* nums, int numsSize, int* returnSize, int** returnColumnSizes){\nif (numsSize &lt; 2)\n{\n*returnSize = 1;\n*returnColumnSizes = (int *)malloc(sizeof(int) * *returnSize);\n*returnColumnSizes[0] = numsSize;\nif (numsSize == 0)\nreturn NULL;\nint **ret = (int **)malloc(sizeof(int *) * *returnSize);\n*ret = (int *)malloc(sizeof(int));\n**ret = *nums;\nreturn ret;\n}\n*returnSize = fact(numsSize);\n*returnColumnSizes = (int *)malloc(sizeof(int *) * *returnSize);\nint *sub = (int *)malloc(sizeof(int) * numsSize), i = 0, **rec = NULL, recSize, *recColSize,\n**ret = (int **)malloc(sizeof(int *) * *returnSize), retpos = 0, j = 0;\nfor (i = 0; i &lt; *returnSize; i++)\n(*returnColumnSizes)[i] = numsSize;\nfor (i = 0; i &lt; numsSize; i++)\n{\nsub = memcpy(sub, nums, sizeof(int) * numsSize);\nswap(sub + i, sub);\nrec = permute(sub + 1, numsSize - 1, &amp;recSize, &amp;recColSize);\nfor (j = 0; j &lt; recSize; j++)\n{\nret[retpos] = (int *)malloc(sizeof(int) * numsSize);\nret[retpos][0] = sub[0];\nmemcpy(ret[retpos] + 1, rec[j], sizeof(int) * (numsSize - 1));\nretpos++;\n}\n}\nreturn ret;\n}\n</code></pre>","tags":["\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/48/","title":"48. \u65cb\u8f6c\u56fe\u50cf","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/48/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a n\u00a0\u00d7\u00a0n \u7684\u4e8c\u7ef4\u77e9\u9635\u8868\u793a\u4e00\u4e2a\u56fe\u50cf\u3002</p> <p>\u5c06\u56fe\u50cf\u987a\u65f6\u9488\u65cb\u8f6c 90 \u5ea6\u3002</p> <p>\u8bf4\u660e\uff1a</p> <p>\u4f60\u5fc5\u987b\u5728\u539f\u5730\u65cb\u8f6c\u56fe\u50cf\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u9700\u8981\u76f4\u63a5\u4fee\u6539\u8f93\u5165\u7684\u4e8c\u7ef4\u77e9\u9635\u3002\u8bf7\u4e0d\u8981\u4f7f\u7528\u53e6\u4e00\u4e2a\u77e9\u9635\u6765\u65cb\u8f6c\u56fe\u50cf\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u7ed9\u5b9a matrix = \n[\n  [1,2,3],\n  [4,5,6],\n  [7,8,9]\n],\n\n\u539f\u5730\u65cb\u8f6c\u8f93\u5165\u77e9\u9635\uff0c\u4f7f\u5176\u53d8\u4e3a:\n[\n  [7,4,1],\n  [8,5,2],\n  [9,6,3]\n]\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u7ed9\u5b9a matrix =\n[\n  [ 5, 1, 9,11],\n  [ 2, 4, 8,10],\n  [13, 3, 6, 7],\n  [15,14,12,16]\n], \n\n\u539f\u5730\u65cb\u8f6c\u8f93\u5165\u77e9\u9635\uff0c\u4f7f\u5176\u53d8\u4e3a:\n[\n  [15,13, 2, 5],\n  [14, 3, 4, 1],\n  [12, 6, 8, 9],\n  [16, 7,10,11]\n]\n</code></pre> <p>Reference</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/48/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u5c06\u77e9\u9635\u8f6c\u7f6e\u540e\u53cd\u8f6c\u5404\u5217\u7684\u987a\u5e8f\u5373\u53ef\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>void rotate(int** matrix, int matrixSize, int* matrixColSize){\nint i = 0, j = 0, temp;\nfor (i = 0; i &lt; matrixSize; i++)\n{\nfor (j = i; j &lt; matrixSize; j++)\n{\ntemp = matrix[i][j];\nmatrix[i][j] = matrix[j][i];\nmatrix[j][i] = temp;\n}\n}\nfor (i = 0; i &lt; matrixSize; i++)\n{\nfor (j = 0; j &lt; matrixSize / 2; j++)\n{\ntemp = matrix[i][j];\nmatrix[i][j] = matrix[i][matrixSize - j - 1];\nmatrix[i][matrixSize - j - 1] = temp;\n}\n}\n}\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/488/","title":"488. \u7956\u739b\u6e38\u620f","text":"<p>\u96be\u5ea6\uff1a\u56f0\u96be</p>","tags":["\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"]},{"location":"coding/leetcode/488/#_1","title":"\u9898\u76ee","text":"<p>\u56de\u5fc6\u4e00\u4e0b\u7956\u739b\u6e38\u620f\u3002\u73b0\u5728\u684c\u4e0a\u6709\u4e00\u4e32\u7403\uff0c\u989c\u8272\u6709\u7ea2\u8272(R)\uff0c\u9ec4\u8272(Y)\uff0c\u84dd\u8272(B)\uff0c\u7eff\u8272(G)\uff0c\u8fd8\u6709\u767d\u8272(W)\u3002 \u73b0\u5728\u4f60\u624b\u91cc\u4e5f\u6709\u51e0\u4e2a\u7403\u3002</p> <p>\u6bcf\u4e00\u6b21\uff0c\u4f60\u53ef\u4ee5\u4ece\u624b\u91cc\u7684\u7403\u9009\u4e00\u4e2a\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u7403\u63d2\u5165\u5230\u4e00\u4e32\u7403\u4e2d\u7684\u67d0\u4e2a\u4f4d\u7f6e\u4e0a\uff08\u5305\u62ec\u6700\u5de6\u7aef\uff0c\u6700\u53f3\u7aef\uff09\u3002\u63a5\u7740\uff0c\u5982\u679c\u6709\u51fa\u73b0\u4e09\u4e2a\u6216\u8005\u4e09\u4e2a\u4ee5\u4e0a\u989c\u8272\u76f8\u540c\u7684\u7403\u76f8\u8fde\u7684\u8bdd\uff0c\u5c31\u628a\u5b83\u4eec\u79fb\u9664\u6389\u3002\u91cd\u590d\u8fd9\u4e00\u6b65\u9aa4\u76f4\u5230\u684c\u4e0a\u6240\u6709\u7684\u7403\u90fd\u88ab\u79fb\u9664\u3002</p> <p>\u627e\u5230\u63d2\u5165\u5e76\u53ef\u4ee5\u79fb\u9664\u6389\u684c\u4e0a\u6240\u6709\u7403\u6240\u9700\u7684\u6700\u5c11\u7684\u7403\u6570\u3002\u5982\u679c\u4e0d\u80fd\u79fb\u9664\u684c\u4e0a\u6240\u6709\u7684\u7403\uff0c\u8f93\u51fa <code>-1</code> \u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1aboard = \"WRRBBW\", hand = \"RB\"\n\u8f93\u51fa\uff1a-1\n\u89e3\u91ca\uff1aWRRBBW -&gt; WRR[R]BBW -&gt; WBBW -&gt; WBB[B]W -&gt; WW\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1aboard = \"WWRRBBWW\", hand = \"WRBRW\"\n\u8f93\u51fa\uff1a2\n\u89e3\u91ca\uff1aWWRRBBWW -&gt; WWRR[R]BBWW -&gt; WWBBWW -&gt; WWBB[B]WW -&gt; WWWW -&gt; empty\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1aboard = \"G\", hand = \"GGGGG\"\n\u8f93\u51fa\uff1a2\n\u89e3\u91ca\uff1aG -&gt; G[G] -&gt; GG[G] -&gt; empty \n</code></pre> <p>\u793a\u4f8b 4\uff1a</p> <pre><code>\u8f93\u5165\uff1aboard = \"RBYYBBRRB\", hand = \"YRBGB\"\n\u8f93\u51fa\uff1a3\n\u89e3\u91ca\uff1aRBYYBBRRB -&gt; RBYY[Y]BBRRB -&gt; RBBBRRB -&gt; RRRB -&gt; B -&gt; B[B] -&gt; BB[B] -&gt; empty \n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u684c\u4e0a\u4e00\u5f00\u59cb\u7684\u7403\u4e2d\uff0c\u4e0d\u4f1a\u6709\u4e09\u4e2a\u53ca\u4e09\u4e2a\u4ee5\u4e0a\u989c\u8272\u76f8\u540c\u4e14\u8fde\u7740\u7684\u7403\u3002</li> <li><code>1 &lt;= board.length &lt;= 16</code></li> <li><code>1 &lt;= hand.length &lt;= 5</code></li> <li>\u8f93\u5165\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32\u5747\u4e3a\u975e\u7a7a\u5b57\u7b26\u4e32\uff0c\u4e14\u53ea\u5305\u542b\u5b57\u7b26 <code>'R','Y','B','G','W'</code>\u3002</li> </ul> <p>Reference</p>","tags":["\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"]},{"location":"coding/leetcode/488/#_2","title":"\u9898\u89e3","text":"<p>\u5b9a\u4e49\u5f53\u524d\u6e38\u620f\u7684\u72b6\u6001\uff0c\u4e00\u4e2a\u72b6\u6001\u7531\u684c\u4e0a\u7684\u7403\u5217\u8868\u4e0e\u624b\u4e2d\u7684\u7403\u5217\u8868\u8868\u793a\u3002\u6bcf\u6b21\u63d2\u5165\u64cd\u4f5c\u6784\u6210\u4e00\u4e2a\u72b6\u6001\u95f4\u7684\u72b6\u6001\u8f6c\u79fb\u8fc7\u7a0b\u3002\u4f7f\u7528\u4e24\u4e2a\u961f\u5217\u5b58\u50a8\u5f53\u524d\u72b6\u6001\uff0c\u548c\u5f53\u524d\u72b6\u6001\u7684 \u6240\u6709 \u53ef\u80fd\u8f6c\u79fb\u5230\u7684\u72b6\u6001\u3002\u518d\u5c06\u8f6c\u79fb\u5230\u7684\u72b6\u6001\u8bbe\u4e3a\u5f53\u524d\u72b6\u6001\uff0c\u7ee7\u7eed\u8fdb\u884c\u641c\u7d22\u8fc7\u7a0b\u3002\u672c\u9898\u4e2d\uff0c\u72b6\u6001\u8f6c\u79fb\u662f\u5355\u5411\u7684\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u8003\u8651\u91cd\u590d\u7ecf\u8fc7\u4e00\u79cd\u72b6\u6001\u7684\u60c5\u51b5\u3002</p> <p>\u7531\u4e8e\u4e00\u4e2a\u72b6\u6001\u53ef\u4ee5\u8f6c\u6362\u4e3a\u66f4\u591a\u7684\u72b6\u6001\uff0c\u9700\u8981\u5728\u8fd9\u4e9b\u72b6\u6001\u95f4\u8fdb\u884c\u7b5b\u9009\u3002\u7b5b\u9009\u89c4\u5219\u5982\u4e0b\uff1a</p> <ol> <li>\u5f53\u63d2\u5165\u4f4d\u7f6e\u4e24\u4fa7\u7684\u989c\u8272\u4e0d\u540c\u65f6\uff0c\u65b0\u7403\u7684\u989c\u8272\u9700\u8981\u4e0e\u5de6\u53f3\u4e24\u4fa7\u5176\u4e2d\u4e00\u4e2a\u7403\u7684\u989c\u8272\u76f8\u540c</li> <li>\u5f53\u63d2\u5165\u4f4d\u7f6e\u4e24\u4fa7\u989c\u8272\u76f8\u540c\u65f6\uff0c\u65b0\u7403\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u53ef\u80fd\u7684\u989c\u8272</li> <li>\u5f53\u63d2\u5165\u4f4d\u7f6e\u4f4d\u4e8e\u7aef\u70b9\u65f6\uff0c\u65b0\u7403\u7684\u989c\u8272\u9700\u8981\u4e0e\u76f8\u90bb\u7403\u7684\u989c\u8272\u76f8\u540c</li> </ol> <p>\u5982\u4e0a\u526a\u679d\u601d\u8def\u4e0d\u4f1a\u5f71\u54cd\u6d4b\u4f8b<code>\"RRYGGYYRRYGGYYRR\" \"GGBBB\"</code>\u4e0e<code>\"RRWWRRBBRR\" \"WB\"</code>\u7b49\u9700\u8981\u5c06\u8fde\u7eed\u5e8f\u5217\u5206\u5272\u7684\u60c5\u51b5\u3002\u4e0d\u6ee1\u8db3\u5982\u4e0a\u6761\u4ef6\u7684\u72b6\u6001\u89c6\u4e3a\u65e0\u6548\u7684\u72b6\u6001\uff0c\u76f4\u63a5\u8df3\u8fc7\u5bf9\u8fd9\u4e9b\u72b6\u6001\u7684\u641c\u7d22\u3002</p> <p>\u4f7f\u7528\u94fe\u8868\u6a21\u62df\u961f\u5217\uff0c\u6bcf\u4e2a\u94fe\u8868\u8282\u70b9\u8868\u793a\u95ee\u9898\u7684\u4e00\u4e2a\u72b6\u6001\uff0c\u7531\u4e8e\u94fe\u8868\u8282\u70b9\u9700\u8981\u591a\u6b21\u5206\u914d\uff0c\u53ef\u4ee5\u4f7f\u7528\u63d0\u524d\u5206\u914d\u5185\u5b58\u6c60\u7684\u7b56\u7565\u4ee5\u51cf\u5c11<code>malloc()</code>\u7684\u8c03\u7528\u6b21\u6570\u3002</p> <pre><code>struct Queue\n{\nchar *val;\nint colorsOnHand[5];\nstruct Queue *next;\n};\n\nstruct Queue *nodePool;\nint poolSize;\nint poolAllocated;\n\nstruct Queue *getNode(char *val, struct Queue *next, int *colorsOnHand)\n{\nint i = 0;\nstruct Queue *ret;\nif (!nodePool || poolAllocated &gt;= poolSize)\n{\nif (poolAllocated)\npoolSize &lt;&lt;= 1;\nelse\npoolSize = 1000;\npoolAllocated = 0;\nnodePool = (struct Queue *)malloc(sizeof(struct Queue) * poolSize);\n}\nret = nodePool + (poolAllocated++);\nret-&gt;val = val;\nret-&gt;next = next;\nfor (i = 0; i &lt; 5; i++)\nret-&gt;colorsOnHand[i] = colorsOnHand[i];\nreturn ret;\n}\n</code></pre> <p>\u5206\u4e24\u6b65\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\uff0c\u7b2c\u4e00\u6b65\u5148\u63d2\u5165\u4e00\u4e2a\u7403\uff0c\u7b2c\u4e8c\u6b65\u6d88\u9664\u8fde\u7eed\u7684\u7403\uff0c\u76f4\u5230\u65e0\u7403\u53ef\u6d88\u3002</p> <pre><code>char *strPool;\nint strSize;\nint strAllocated;\n\nchar *getStr(int len)\n{\nif (!strPool || strAllocated + len &gt;= strSize)\n{\nif (strAllocated)\nstrSize &lt;&lt;= 1;\nelse\nstrSize = 32768;\nstrAllocated = 0;\nstrPool = (char *)malloc(sizeof(char) * strSize);\n}\nchar *ret = strPool + strAllocated;\nstrAllocated += len;\nreturn ret;\n}\n\nbool play(char *src)\n{\nchar *ptrfast = src, *ptrslow = src, cur = 0;\nint i = 0;\nbool flag = false;\nwhile (*ptrfast)\n{\nif (cur == *ptrfast)\ni++;\nelse\n{\nif (i &lt; 3)\n{\nwhile (i)\n{\n*(ptrslow++) = cur;\ni--;\n}\n}\nelse\nflag = true;\ni = 1;\ncur = *ptrfast;\n}\nptrfast++;\n}\nif (i &lt; 3)\n{\nwhile (i)\n{\n*(ptrslow++) = cur;\ni--;\n}\n}\nelse\nflag = true;\n*ptrslow = 0;\nreturn flag;\n}\n\nchar *addBall(char *src, int len, char ball, int loc)\n{\nchar *ret = (char *)malloc(sizeof(char) * (len + 2));\nret[len + 1] = 0;\nmemcpy(ret, src, sizeof(char) * loc);\nmemcpy(ret + loc + 1, src + loc, sizeof(char) * (len - loc));\nret[loc] = ball;\nreturn ret;\n}\n</code></pre> <pre><code>int findMinStep(char * board, char * hand) {\nstruct Queue *current = NULL, *temp = NULL;\nchar *cur = hand, *init = getStr(strlen(board) + 1), *newseq = NULL,\n*colors = \"RYBGW\";\nint i = 0, j = 0, len = 0, ret = 0, colorsOnHand[5] = {0}, flag;\n\nnodePool = NULL;\npoolSize = 0;\npoolAllocated = 0;\nstrPool = NULL;\nstrSize = 0;\nstrAllocated = 0;\n\nstrcpy(init, board);\ndo\nfor (i = 0; i &lt; 5; i++)\nif (*cur == colors[i])\ncolorsOnHand[i]++;\nwhile (*(++cur));\n\ncurrent = getNode(init, NULL, colorsOnHand);\nwhile (current)\n{\nwhile (current)\n{\nlen = strlen(current-&gt;val);\nif (!len)\nreturn ret;\nfor (i = 0; i &lt;= len; i++)\n{\nflag = false;\nfor (j = 0; j &lt; 5; j++)\n{\nif (current-&gt;colorsOnHand[j] == 0)\ncontinue;\nif (i &gt; 0)\nflag = flag || current-&gt;val[i - 1] == colors[j];\nif (i &lt; len)\nflag = flag || current-&gt;val[i] == colors[j];\nif (i &gt; 0 &amp;&amp; i &lt; len)\nflag = flag || current-&gt;val[i - 1] == current-&gt;val[i];\nif (!flag)\ncontinue;\ncurrent-&gt;colorsOnHand[j]--;\nnewseq = addBall(current-&gt;val, len, colors[j], i);\nwhile (play(newseq));\ntemp = getNode(newseq, temp, current-&gt;colorsOnHand);\ncurrent-&gt;colorsOnHand[j]++;\n}\n}\ncurrent = current-&gt;next;\n}\nret++;\ncurrent = temp;\ntemp = NULL;\n}\nreturn -1;\n}\n</code></pre>","tags":["\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"]},{"location":"coding/leetcode/50/","title":"50. Pow(x, n)","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6570\u5b66","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/50/#_1","title":"\u9898\u76ee","text":"<p>\u5b9e\u73b0\u00a0pow(x, n)\uff0c\u5373\u8ba1\u7b97 x \u7684 n \u6b21\u5e42\u51fd\u6570\u3002</p> <p>\u793a\u4f8b 1\uff1a <pre><code>\u8f93\u5165: 2.00000, 10\n\u8f93\u51fa: 1024.00000\n</code></pre> \u793a\u4f8b\u00a02\uff1a <pre><code>\u8f93\u5165: 2.10000, 3\n\u8f93\u51fa: 9.26100\n</code></pre> \u793a\u4f8b\u00a03\uff1a <pre><code>\u8f93\u5165: 2.00000, -2\n\u8f93\u51fa: 0.25000\n\u89e3\u91ca: 2^(-2) = (1/2)^2 = 1/4 = 0.25\n</code></pre> \u8bf4\u660e\uff1a</p> <ul> <li>-100.0 &lt;\u00a0x\u00a0&lt; 100.0</li> <li>n\u00a0\u662f 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\uff0c\u5176\u6570\u503c\u8303\u56f4\u662f\\([\u22122^{31},\u00a02^{31}\u00a0\u2212 1]\\)\u3002</li> </ul> <p>Reference</p>","tags":["\u6570\u5b66","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/50/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u5229\u7528\u5feb\u901f\u5e42\u7684\u601d\u8def\uff0c\u5b58\u50a8\u6b21\u6570\u4e3a2\u7684\u6574\u6570\u5e42\u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u7136\u540e\u7528\u8fd9\u4e9b\u7ed3\u679c\u76f8\u4e58\u5f97\u5230\u8f93\u51fa\u7ed3\u679c\u3002\u6ce8\u610f\u6307\u6570\u4e3a\u8d1f\u6570\u7684\u60c5\u51b5\u3002\u5f53\u6307\u6570\u4e3a<code>-2147483648</code>\u65f6\u4e0d\u80fd\u53d6\u8d1f\uff0c\u6b64\u65f6\u53ef\u4ee5\u5148\u52a0\u4e00\u518d\u53d6\u8d1f\uff0c\u6700\u540e\u9664\u4ee5\u5e95\u6570\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>double myPow(double x, int n)\n{\nif (n &lt; 0)\nreturn 1 / myPow(x, -(n + 1)) / x;\ndouble cache[32] = {0}, ret = 1;\nint i = 0;\ncache[0] = x;\nwhile (n)\n{\nif (n &amp; 1)\nret *= cache[i];\nn &gt;&gt;= 1;\ni++;\ncache[i] = cache[i - 1] * cache[i - 1];\n}\nreturn ret;\n}\n</code></pre>","tags":["\u6570\u5b66","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/509/","title":"509. \u6590\u6ce2\u90a3\u5951\u6570","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/509/#_1","title":"\u9898\u76ee","text":"<p>\u6590\u6ce2\u90a3\u5951\u6570\uff0c\u901a\u5e38\u7528<code>F(n)</code>\u8868\u793a\uff0c\u5f62\u6210\u7684\u5e8f\u5217\u79f0\u4e3a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u3002\u8be5\u6570\u5217\u7531<code>0</code>\u548c<code>1</code>\u5f00\u59cb\uff0c\u540e\u9762\u7684\u6bcf\u4e00\u9879\u6570\u5b57\u90fd\u662f\u524d\u9762\u4e24\u9879\u6570\u5b57\u7684\u548c\u3002\u4e5f\u5c31\u662f\uff1a <pre><code>F(0) = 0,\u00a0 \u00a0F(1)\u00a0= 1\nF(N) = F(N - 1) + F(N - 2), \u5176\u4e2d N &gt; 1.\n</code></pre> \u7ed9\u5b9a<code>N</code>\uff0c\u8ba1\u7b97<code>F(N)</code>\u3002</p> <p>\u793a\u4f8b 1\uff1a <pre><code>\u8f93\u5165\uff1a2\n\u8f93\u51fa\uff1a1\n\u89e3\u91ca\uff1aF(2) = F(1) + F(0) = 1 + 0 = 1.\n</code></pre></p> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1a3\n\u8f93\u51fa\uff1a2\n\u89e3\u91ca\uff1aF(3) = F(2) + F(1) = 1 + 1 = 2.\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1a4\n\u8f93\u51fa\uff1a3\n\u89e3\u91ca\uff1aF(4) = F(3) + F(2) = 2 + 1 = 3.\n</code></pre> <p>\u63d0\u793a\uff1a</p> <p>\\(0\\leq N\\leq30\\)</p> <p>Reference</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/509/#_2","title":"\u9898\u89e3","text":"","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/509/#_3","title":"\u9012\u5f52","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u653e\u5386\u53f2\u7ed3\u679c\uff0c\u52a0\u901f\u9012\u5f52\u8ba1\u7b97</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>int fib_cache(int N, int **cache, int *lenCache, int *fullCache){\nif (!N)\nreturn 0;\nif (!(*cache))\n{\n*lenCache = 2;\n*fullCache = N + 1;\n*cache = (int *)memset(malloc(sizeof(int) * *fullCache), 0, sizeof(int) * *fullCache);\n(*cache)[0] = 1;\n(*cache)[1] = 1;\n}\nif (N &gt; *lenCache &amp;&amp; N &lt;= *fullCache)\n(*cache)[N-1] = fib_cache(N - 1, cache, lenCache, fullCache) + fib_cache(N - 2, cache, lenCache, fullCache);\n*lenCache = N;\nreturn (*cache)[N - 1];\n}\n\nint fib(int N){\nint *cache = NULL, lenCache = 0, fullCache = 0;\nreturn fib_cache(N, &amp;cache, &amp;lenCache, &amp;fullCache);\n}\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/509/#_4","title":"\u8fed\u4ee3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u6839\u636e\u5b9a\u4e49\u63a8\u7b97\u6590\u6ce2\u90a3\u5951\u6570</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>int fib(int N){\nint ret = 0, next = 1, tmp;\nwhile (N)\n{\ntmp = ret;\nret = next;\nnext = ret + tmp;\nN--;\n}\nreturn ret;\n}\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/53/","title":"53. \u6700\u5927\u5b50\u5e8f\u548c","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6570\u7ec4","\u5206\u6cbb\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/53/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>nums</code>\u00a0\uff0c\u627e\u5230\u4e00\u4e2a\u5177\u6709\u6700\u5927\u548c\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\uff08\u5b50\u6570\u7ec4\u6700\u5c11\u5305\u542b\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u8fd4\u56de\u5176\u6700\u5927\u548c\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [-2,1,-3,4,-1,2,1,-5,4]\n\u8f93\u51fa\uff1a6\n\u89e3\u91ca\uff1a\u8fde\u7eed\u5b50\u6570\u7ec4\u00a0[4,-1,2,1] \u7684\u548c\u6700\u5927\uff0c\u4e3a\u00a06 \u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [1]\n\u8f93\u51fa\uff1a1\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [0]\n\u8f93\u51fa\uff1a0\n</code></pre> <p>\u793a\u4f8b 4\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [-1]\n\u8f93\u51fa\uff1a-1\n</code></pre> <p>\u793a\u4f8b 5\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [-100000]\n\u8f93\u51fa\uff1a-100000\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 3 * 10^4</code></li> <li><code>-10^5 &lt;= nums[i] &lt;= 10^5</code></li> </ul> <p>\u8fdb\u9636\uff1a\u5982\u679c\u4f60\u5df2\u7ecf\u5b9e\u73b0\u590d\u6742\u5ea6\u4e3a <code>O(n)</code> \u7684\u89e3\u6cd5\uff0c\u5c1d\u8bd5\u4f7f\u7528\u66f4\u4e3a\u7cbe\u5999\u7684 \u5206\u6cbb\u6cd5 \u6c42\u89e3\u3002</p> <p>Reference</p>","tags":["\u6570\u7ec4","\u5206\u6cbb\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/53/#_2","title":"\u9898\u89e3","text":"<p>\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u7b97\u6cd5\uff0c\u4ece\u540e\u5411\u524d\u8fdb\u884c\u8003\u8651\uff0c\u8bbe\u6570\u7ec4\u4e2d\u5171\u6709\\(n\\)\u4e2a\u5143\u7d20\\(\\{a_n\\}\\)\uff0c\u5f53\u524d\u4f4d\u7f6e\\(i\\)\u4ece\u540e\u5411\u524d\u79fb\u52a8\uff0c\\(i\\)\u4f4d\u7f6e\u53ca\\(i\\)\u4f4d\u7f6e\u4e4b\u540e\u6784\u6210\u7684\u6700\u5927\u5b50\u5e8f\u5217\u6570\u503c\u4e3a\\(s_i\\)\u3002</p> <ol> <li>\u521d\u59cb\u60c5\u51b5\uff0c\\(s_n = 0\\)</li> <li>\u8ba8\u8bba\\(s_{i + 1}\\)\uff1a</li> <li>\u82e5\\(s_{i + 1} \\leq 0\\)\uff0c\u5219\\(s_{i} = a_{i}\\)</li> <li>\u82e5\\(s_{i + 1} &gt; 0\\)\uff0c\u5219\\(s_{i} = a_{i} + s_{i + 1}\\)</li> </ol> <p>\u7531\u6b64\u4e0d\u65ad\u8fdb\u884c\uff0c\u4e22\u5f03\u548c\u4e3a\u8d1f\u6570\u7684\u5b50\u5e8f\u5217\uff0c\u6700\u7ec8\u5f97\u5230\u7684\\(s_0\\)\u5373\u4e3a\u6700\u5927\u5b50\u5e8f\u548c\u3002</p> <pre><code>#define MAX(x, y) (x &gt; y ? x : y)\nint maxSubArray(int* nums, int numsSize){\nint ret = INT_MIN, value = 0;\nfor (int i = numsSize - 1; i &gt;= 0; i--)\n{\nvalue = MAX(value, 0) + nums[i];\nret = MAX(ret, value);\n}\nreturn ret;\n}\n</code></pre>","tags":["\u6570\u7ec4","\u5206\u6cbb\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/55/","title":"55. \u8df3\u8dc3\u6e38\u620f","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4\u00a0<code>nums</code> \uff0c\u4f60\u6700\u521d\u4f4d\u4e8e\u6570\u7ec4\u7684 \u7b2c\u4e00\u4e2a\u4e0b\u6807 \u3002</p> <p>\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4ee3\u8868\u4f60\u5728\u8be5\u4f4d\u7f6e\u53ef\u4ee5\u8df3\u8dc3\u7684\u6700\u5927\u957f\u5ea6\u3002</p> <p>\u5224\u65ad\u4f60\u662f\u5426\u80fd\u591f\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4e0b\u6807\u3002</p> <p>\u793a\u4f8b\u00a01\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [2,3,1,1,4]\n\u8f93\u51fa\uff1atrue\n\u89e3\u91ca\uff1a\u53ef\u4ee5\u5148\u8df3 1 \u6b65\uff0c\u4ece\u4e0b\u6807 0 \u5230\u8fbe\u4e0b\u6807 1, \u7136\u540e\u518d\u4ece\u4e0b\u6807 1 \u8df3 3 \u6b65\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4e0b\u6807\u3002\n</code></pre> <p>\u793a\u4f8b\u00a02\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [3,2,1,0,4]\n\u8f93\u51fa\uff1afalse\n\u89e3\u91ca\uff1a\u65e0\u8bba\u600e\u6837\uff0c\u603b\u4f1a\u5230\u8fbe\u4e0b\u6807\u4e3a 3 \u7684\u4f4d\u7f6e\u3002\u4f46\u8be5\u4e0b\u6807\u7684\u6700\u5927\u8df3\u8dc3\u957f\u5ea6\u662f 0 \uff0c \u6240\u4ee5\u6c38\u8fdc\u4e0d\u53ef\u80fd\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4e0b\u6807\u3002\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 3 * 10^4</code></li> <li><code>0 &lt;= nums[i] &lt;= 10^5</code></li> </ul> <p>Reference</p>","tags":["\u8d2a\u5fc3\u7b97\u6cd5","\u6570\u7ec4"]},{"location":"coding/leetcode/55/#_1","title":"\u9898\u89e3","text":"<p>\u53cd\u5e8f\u904d\u5386\u6570\u7ec4\uff0c\u4ece\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u5f00\u59cb\uff0c\u68c0\u67e5\u5404\u4e2a\u5143\u7d20\u7684\u53ef\u8df3\u8ddd\u79bb\uff0c\u4ece\u800c\u6784\u9020\u4e00\u4e2a\u53ef\u4ee5\u8df3\u5230\u4e2d\u70b9\u7684\u4e0b\u6807\u533a\u95f4\u3002\u904d\u5386\u5b8c\u6210\u540e\u68c0\u67e5\u8d77\u70b9\u662f\u5426\u5728\u8be5\u4e0b\u6807\u533a\u95f4\u4e2d\u3002</p> <pre><code>bool canJump(int* nums, int numsSize) {\n\nint distance = numsSize - 1, i = 0;\nfor (i = numsSize - 1; i &gt;= 0; i--)\nif (i + nums[i] &gt;= distance)\ndistance = i;\nreturn distance == 0;\n}\n</code></pre>","tags":["\u8d2a\u5fc3\u7b97\u6cd5","\u6570\u7ec4"]},{"location":"coding/leetcode/56/","title":"56. \u5408\u5e76\u533a\u95f4","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6570\u7ec4","\u6392\u5e8f"]},{"location":"coding/leetcode/56/#_1","title":"\u9898\u76ee","text":"<p>\u4ee5\u6570\u7ec4 <code>intervals</code> \u8868\u793a\u82e5\u5e72\u4e2a\u533a\u95f4\u7684\u96c6\u5408\uff0c\u5176\u4e2d\u5355\u4e2a\u533a\u95f4\u4e3a <code>intervals[i] = [start_i, end_i]</code> \u3002\u8bf7\u4f60\u5408\u5e76\u6240\u6709\u91cd\u53e0\u7684\u533a\u95f4\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u4e0d\u91cd\u53e0\u7684\u533a\u95f4\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u9700\u6070\u597d\u8986\u76d6\u8f93\u5165\u4e2d\u7684\u6240\u6709\u533a\u95f4\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1aintervals = [[1,3],[2,6],[8,10],[15,18]]\n\u8f93\u51fa\uff1a[[1,6],[8,10],[15,18]]\n\u89e3\u91ca\uff1a\u533a\u95f4 [1,3] \u548c [2,6] \u91cd\u53e0, \u5c06\u5b83\u4eec\u5408\u5e76\u4e3a [1,6].\n</code></pre> <p>\u793a\u4f8b\u00a02\uff1a</p> <pre><code>\u8f93\u5165\uff1aintervals = [[1,4],[4,5]]\n\u8f93\u51fa\uff1a[[1,5]]\n\u89e3\u91ca\uff1a\u533a\u95f4 [1,4] \u548c [4,5] \u53ef\u88ab\u89c6\u4e3a\u91cd\u53e0\u533a\u95f4\u3002\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>1 &lt;= intervals.length &lt;= 10^4</code></li> <li><code>intervals[i].length == 2</code></li> <li><code>0 &lt;= starti &lt;= endi &lt;= 10^4</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u6392\u5e8f"]},{"location":"coding/leetcode/56/#_2","title":"\u9898\u89e3","text":"<p>\u9996\u5148\u5bf9\u533a\u95f4\u7684\u8d77\u70b9\u6309\u7167\u5347\u5e8f\u6392\u5e8f\uff0c\u4e4b\u540e\u904d\u5386\u533a\u95f4\u5217\u8868\uff0c\u4e0d\u65ad\u68c0\u67e5\u5df2\u5408\u5e76\u533a\u95f4\u4e0e\u5f53\u524d\u533a\u95f4\u662f\u5426\u5b58\u5728\u91cd\u53e0\uff0c\u5982\u679c\u5b58\u5728\u91cd\u53e0\uff0c\u5219\u5c06\u4e24\u533a\u95f4\u5408\u5e76\uff0c\u5426\u5219\u5c06\u5df2\u5408\u5e76\u533a\u95f4\u52a0\u5165\u7ed3\u679c\u96c6\u4e2d\uff0c\u5f53\u524d\u533a\u95f4\u8bbe\u4e3a\u5df2\u5408\u5e76\u533a\u95f4\u3002</p> <pre><code>/**\n * Return an array of arrays of size *returnSize.\n * The sizes of the arrays are returned as *returnColumnSizes array.\n * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().\n */\n#define MAX(x, y) (x &gt; y ? x : y)\nint comp(const void *x, const void *y)\n{\nreturn **(int **)x - **(int **)y;\n}\nint** merge(int** intervals, int intervalsSize, int* intervalsColSize, int* returnSize, int** returnColumnSizes){\nif (intervalsSize == 0)\n{\n*returnSize = 0;\nreturn NULL;\n}\nqsort(intervals, intervalsSize, sizeof(int *), comp);\nint **ret = (int **)malloc(sizeof(int *) * intervalsSize), i = 0;\nret[0] = (int *)memcpy(malloc(sizeof(int) * 2), intervals[0], sizeof(int) * 2);\n*returnSize = 0;\nfor (i = 1; i &lt; intervalsSize; i++)\n{\nif (ret[*returnSize][1] &gt;= intervals[i][0])\nret[*returnSize][1] = MAX(intervals[i][1], ret[*returnSize][1]);\nelse\nret[++(*returnSize)] = (int *)memcpy(malloc(sizeof(int) * 2), intervals[i], sizeof(int) * 2);\n}\n(*returnSize)++;\n*returnColumnSizes = (int *)malloc(sizeof(int) * *returnSize);\nfor (i = 0; i &lt; *returnSize; i++)\n(*returnColumnSizes)[i] = 2;\nreturn ret;\n}\n</code></pre>","tags":["\u6570\u7ec4","\u6392\u5e8f"]},{"location":"coding/leetcode/59/","title":"59. \u87ba\u65cb\u77e9\u9635 II","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/59/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6b63\u6574\u6570\u00a0<code>n</code> \uff0c\u751f\u6210\u4e00\u4e2a\u5305\u542b <code>1</code> \u5230\u00a0<code>n^2</code>\u00a0\u6240\u6709\u5143\u7d20\uff0c\u4e14\u5143\u7d20\u6309\u987a\u65f6\u9488\u987a\u5e8f\u87ba\u65cb\u6392\u5217\u7684\u00a0<code>n x n</code> \u6b63\u65b9\u5f62\u77e9\u9635 <code>matrix</code> \u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1an = 3\n\u8f93\u51fa\uff1a[[1,2,3],[8,9,4],[7,6,5]]\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1an = 1\n\u8f93\u51fa\uff1a[[1]]\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>1 &lt;= n &lt;= 20</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/59/#_2","title":"\u9898\u89e3","text":"<p>\u6309\u987a\u5e8f\u586b\u5145\u77e9\u9635\uff0c\u5f53\u8d85\u51fa\u77e9\u9635\u6216\u9047\u5230\u5df2\u586b\u5145\u5143\u7d20\u65f6\u8f6c\u5411\u3002</p> <pre><code>/**\n * Return an array of arrays of size *returnSize.\n * The sizes of the arrays are returned as *returnColumnSizes array.\n * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().\n */\nvoid change(int direction, int *i, int *j, int incre)\n{\nswitch(direction)\n{\ncase 0:\n*j += incre;\nbreak;\ncase 1:\n*i += incre;\nbreak;\ncase 2:\n*j -= incre;\nbreak;\ncase 3:\n*i -= incre;\nbreak;\n}\n}\nint** generateMatrix(int n, int* returnSize, int** returnColumnSizes){\n*returnSize = n;\n*returnColumnSizes = (int *)malloc(sizeof(int) * n);\n\nint i = 0, j = 0, m = 1, direction = 0, **ret = (int **)malloc(sizeof(int *) * n);\nfor (i = 0; i &lt; n; i++)\n{\n(*returnColumnSizes)[i] = n;\nret[i] = (int *)malloc(sizeof(int) * n);\nmemset(ret[i], 0, sizeof(int) * n);\n}\n\ni = 0;\nwhile (m &lt; n * n)\n{\nret[i][j] = m;\nchange(direction, &amp;i, &amp;j, 1);\nm++;\nif (i &lt; 0 || j &lt; 0 || i &gt;= n || j &gt;= n || ret[i][j])\n{\nchange(direction, &amp;i, &amp;j, -1);\ndirection = (direction + 1) &amp; 3;\nm--;\n}\n}\nret[i][j] = m;\nreturn ret;\n}\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/61/","title":"61. \u65cb\u8f6c\u94fe\u8868","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u94fe\u8868","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/61/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u8282\u70b9 <code>head</code> \uff0c\u65cb\u8f6c\u94fe\u8868\uff0c\u5c06\u94fe\u8868\u6bcf\u4e2a\u8282\u70b9\u5411\u53f3\u79fb\u52a8\u00a0<code>k</code>\u00a0\u4e2a\u4f4d\u7f6e\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <p></p> <pre><code>\u8f93\u5165\uff1ahead = [1,2,3,4,5], k = 2\n\u8f93\u51fa\uff1a[4,5,1,2,3]\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <p></p> <pre><code>\u8f93\u5165\uff1ahead = [0,1,2], k = 4\n\u8f93\u51fa\uff1a[2,0,1]\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li>\u94fe\u8868\u4e2d\u8282\u70b9\u7684\u6570\u76ee\u5728\u8303\u56f4 <code>[0, 500]</code> \u5185</li> <li><code>-100 &lt;= Node.val &lt;= 100</code></li> <li><code>0 &lt;= k &lt;= 2 * 10^9</code></li> </ul> <p>Reference</p>","tags":["\u94fe\u8868","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/61/#_2","title":"\u9898\u89e3","text":"<p>\u5148\u5c06\u94fe\u8868\u95ed\u73af\uff0c\u53f3\u79fb k \u4e2a\u8282\u70b9\u540e\u4ee5\u8be5\u8282\u70b9\u4f5c\u4e3a\u5934\u8282\u70b9\uff0c\u5c06\u94fe\u8868\u7684\u73af\u6253\u5f00\u3002</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\n\n\nstruct ListNode* rotateRight(struct ListNode* head, int k) {\nif (!head)\nreturn NULL;\nstruct ListNode *cur = head, *ret = NULL;\nint len = 1;\nwhile (cur-&gt;next != NULL)\n{\ncur = cur-&gt;next;\nlen++;\n}\ncur-&gt;next = head;\ncur = head;\nk %= len;\nfor (int i = k + 1; i &lt; len; i++)\ncur = cur-&gt;next;\nret = cur-&gt;next;\ncur-&gt;next = NULL;\nreturn ret;\n}\n</code></pre>","tags":["\u94fe\u8868","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/62/","title":"62. \u4e0d\u540c\u8def\u5f84","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/62/#_1","title":"\u9898\u76ee","text":"<p>\u4e00\u4e2a\u673a\u5668\u4eba\u4f4d\u4e8e\u4e00\u4e2a <code>m x n</code>\u00a0\u7f51\u683c\u7684\u5de6\u4e0a\u89d2 \uff08\u8d77\u59cb\u70b9\u5728\u4e0b\u56fe\u4e2d\u6807\u8bb0\u4e3a \u201cStart\u201d \uff09\u3002</p> <p>\u673a\u5668\u4eba\u6bcf\u6b21\u53ea\u80fd\u5411\u4e0b\u6216\u8005\u5411\u53f3\u79fb\u52a8\u4e00\u6b65\u3002\u673a\u5668\u4eba\u8bd5\u56fe\u8fbe\u5230\u7f51\u683c\u7684\u53f3\u4e0b\u89d2\uff08\u5728\u4e0b\u56fe\u4e2d\u6807\u8bb0\u4e3a \u201cFinish\u201d \uff09\u3002</p> <p>\u95ee\u603b\u5171\u6709\u591a\u5c11\u6761\u4e0d\u540c\u7684\u8def\u5f84\uff1f</p> <p>\u793a\u4f8b 1\uff1a</p> <p></p> <pre><code>\u8f93\u5165\uff1am = 3, n = 7\n\u8f93\u51fa\uff1a28\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1am = 3, n = 2\n\u8f93\u51fa\uff1a3\n\u89e3\u91ca\uff1a\n\u4ece\u5de6\u4e0a\u89d2\u5f00\u59cb\uff0c\u603b\u5171\u6709 3 \u6761\u8def\u5f84\u53ef\u4ee5\u5230\u8fbe\u53f3\u4e0b\u89d2\u3002\n1. \u5411\u53f3 -&gt; \u5411\u4e0b -&gt; \u5411\u4e0b\n2. \u5411\u4e0b -&gt; \u5411\u4e0b -&gt; \u5411\u53f3\n3. \u5411\u4e0b -&gt; \u5411\u53f3 -&gt; \u5411\u4e0b\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1am = 7, n = 3\n\u8f93\u51fa\uff1a28\n</code></pre> <p>\u793a\u4f8b 4\uff1a</p> <pre><code>\u8f93\u5165\uff1am = 3, n = 3\n\u8f93\u51fa\uff1a6\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>1 &lt;= m, n &lt;= 100</code></li> <li>\u9898\u76ee\u6570\u636e\u4fdd\u8bc1\u7b54\u6848\u5c0f\u4e8e\u7b49\u4e8e <code>2 * 10^9</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/62/#_2","title":"\u9898\u89e3","text":"<p>\u4ece\u6700\u540e\u4e00\u884c\u5f00\u59cb\u8003\u8651\uff0c\u8981\u5230\u8fbe\u53f3\u4e0b\u89d2\u7684\u65b9\u683c\uff0c\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a</p> <ol> <li>\u4ece\u659c\u4e0a\u65b9\u7684\u65b9\u683c\u5f00\u59cb\uff0c\u5148\u5411\u4e0b\u540e\u5411\u53f3</li> <li>\u4ece\u659c\u4e0a\u65b9\u7684\u65b9\u683c\u5f00\u59cb\uff0c\u5148\u5411\u53f3\u540e\u5411\u4e0b</li> </ol> <p>\u7531\u6b64\u5373\u53ef\u5f97\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u3002</p> <pre><code>int uniquePaths(int m, int n){\nif (m &lt; n)\nreturn uniquePaths(n, m);\nint *dp = (int *)malloc(sizeof(int) * m), i = 0, j = 0;\nfor (i = 0; i &lt; m; i++)\ndp[i] = 1;\nfor (i = 1; i &lt; n; i++)\nfor (j = 1; j &lt; m; j++)\ndp[j] += dp[j - 1];\nreturn dp[m - 1];\n}\n</code></pre> <p>\u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u6392\u5217\u7ec4\u5408\uff0c\u5bf9\u4e8e\u957f\u4e3a\\(m\\)\uff0c\u5bbd\u4e3a\\(n\\)\u7684\u65b9\u683c\uff0c\u9700\u8981\u5411\u53f3\u79fb\u52a8\\(m - 1\\)\u6b21\uff0c\u5411\u4e0b\u79fb\u52a8\\(n - 1\\)\u6b21\uff0c\u5171\\(m + n - 2\\)\u6b21\u3002</p> <p>\u56e0\u6b64\u603b\u7684\u8def\u5f84\u4e2a\u6570\u4e3a\\(m + n - 2\\)\u4e2a\u9009\u62e9\u4e2d\u4e2d\u9009\u62e9\\(m - 1\\)\u6b21\u5411\u4e0b\u79fb\u52a8\u7684\u65b9\u6848\u603b\u6570\uff0c\u8be5\u65b9\u6848\u603b\u6570\u4e3a\uff1a</p> \\[ \\frac{(m + n - 2)!}{(m - 1)!(n - 1)!} \\]","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/64/","title":"64. \u6700\u5c0f\u8def\u5f84\u548c","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u975e\u8d1f\u6574\u6570\u7684 <code>m\u00a0x\u00a0n</code>\u00a0\u7f51\u683c\u00a0<code>grid</code> \uff0c\u8bf7\u627e\u51fa\u4e00\u6761\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u7684\u8def\u5f84\uff0c\u4f7f\u5f97\u8def\u5f84\u4e0a\u7684\u6570\u5b57\u603b\u548c\u4e3a\u6700\u5c0f\u3002</p> <p>\u8bf4\u660e\uff1a\u6bcf\u6b21\u53ea\u80fd\u5411\u4e0b\u6216\u8005\u5411\u53f3\u79fb\u52a8\u4e00\u6b65\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <p></p> <pre><code>\u8f93\u5165\uff1agrid = [[1,3,1],[1,5,1],[4,2,1]]\n\u8f93\u51fa\uff1a7\n\u89e3\u91ca\uff1a\u56e0\u4e3a\u8def\u5f84 1\u21923\u21921\u21921\u21921 \u7684\u603b\u548c\u6700\u5c0f\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1agrid = [[1,2,3],[4,5,6]]\n\u8f93\u51fa\uff1a12\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>m == grid.length</code></li> <li><code>n == grid[i].length</code></li> <li><code>1 &lt;= m, n &lt;= 200</code></li> <li><code>0 &lt;= grid[i][j] &lt;= 100</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/64/#_1","title":"\u9898\u89e3","text":"<p>\u8bbe\u7b2c\\(i\\)\u884c\u7b2c\\(j\\)\u5217\u7684\u5143\u7d20\\(a_{ij}\\)\u5230\u53f3\u4e0b\u89d2\u8def\u5f84\u4e0a\u7684\u6570\u5b57\u548c\u4e3a\\(f(i, j)\\)\uff0c\u7279\u522b\u5730\uff0c\u6709\\(f(m, n) = a_{mn}\\)\uff0c\u5219\uff1a</p> <p>\u5bf9\u4e8e\u6700\u540e\u4e00\u884c\u5143\u7d20\uff0c\u53ea\u80fd\u5411\u53f3\u79fb\u52a8\uff0c\u6709\uff1a</p> \\[ f(m, j) = \\sum_{k=j} ^{n} a_{mk} \\] <p>\u540c\u7406\uff0c\u5bf9\u4e8e\u6700\u540e\u4e00\u5217\u5143\u7d20\uff0c\u6709\uff1a</p> \\[ f(i, n) = \\sum_{k = i} ^ {m} a_{kn} \\] <p>\u8bbe\u7b2c\\(i\\)\u884c\u5230\u8fbe\u53f3\u4e0b\u89d2\u7684\u6700\u77ed\u8def\u5f84\u548c\uff08\u5373\\(f(i, j), \\forall j\\)\uff09\u4ee5\u53ca\u7b2c\\(i - 1\\)\u884c\u6700\u540e\u4e00\u5217\u5230\u8fbe\u53f3\u4e0b\u89d2\u7684\u6700\u77ed\u8def\u5f84\u548c\uff0c\u5373\\(f(i - 1, n)\\)\u5df2\u77e5\u3002\u7531\u4e8e\u6bcf\u4e00\u6b65\u53ea\u80fd\u5411\u53f3\u6216\u5411\u4e0b\u79fb\u52a8\uff0c\\(f(i - 1, j)\\)\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u7a0b\u63a8\u5bfc\uff1a</p> \\[ f(i - 1, j - 1) = \\min\\{f(i - 1, j), f(i, j - 1)\\} + a_{(i - 1)(j - 1)} \\] <p>\u7531\u6b64\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u5373\u53ef\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u81ea\u5e95\u5411\u4e0a\u6c42\u89e3\u3002\u6c42\u89e3\u8fc7\u7a0b\u4e2d\u53ea\u9700\u8981\u5b58\u50a8\u4e00\u884c\u7684\u6700\u77ed\u8def\u5f84\u548c\u5373\u53ef\u3002</p> <pre><code>#define MIN(x, y) ((x) &lt; (y) ? x : y)\nint minPathSum(int** grid, int gridSize, int* gridColSize){\n    if (gridSize == 0 || *gridColSize == 0)\n        return 0;\n    int *dp = (int *)memset(malloc(sizeof(int) * *gridColSize), 0, sizeof(int) * *gridColSize),\n        i = 0, j = 0;\n    for (i = 0; i &lt; *gridColSize; i++)\n        dp[i] = INT_MAX;\n    dp[0] = 0;\n    for (i = 0; i &lt; gridSize; i++)\n    {\n        dp[0] += grid[i][0];\n        for (j = 1; j &lt; *gridColSize; j++)\n            dp[j] = MIN(dp[j - 1], dp[j]) + grid[i][j];\n    }\n    return dp[*gridColSize - 1];\n}\n</code></pre>","tags":["\u6570\u7ec4","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/66/","title":"66. \u52a0\u4e00","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/66/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u7531\u6574\u6570\u7ec4\u6210\u7684\u975e\u7a7a\u6570\u7ec4\u6240\u8868\u793a\u7684\u975e\u8d1f\u6574\u6570\uff0c\u5728\u8be5\u6570\u7684\u57fa\u7840\u4e0a\u52a0\u4e00\u3002</p> <p>\u6700\u9ad8\u4f4d\u6570\u5b57\u5b58\u653e\u5728\u6570\u7ec4\u7684\u9996\u4f4d\uff0c \u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u53ea\u5b58\u50a8\u5355\u4e2a\u6570\u5b57\u3002</p> <p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u9664\u4e86\u6574\u6570 0 \u4e4b\u5916\uff0c\u8fd9\u4e2a\u6574\u6570\u4e0d\u4f1a\u4ee5\u96f6\u5f00\u5934\u3002</p> <p>\u793a\u4f8b\u00a01\uff1a</p> <pre><code>\u8f93\u5165: [1,2,3]\n\u8f93\u51fa: [1,2,4]\n\u89e3\u91ca: \u8f93\u5165\u6570\u7ec4\u8868\u793a\u6570\u5b57 123\u3002\n</code></pre> <p>\u793a\u4f8b\u00a02\uff1a</p> <pre><code>\u8f93\u5165: [4,3,2,1]\n\u8f93\u51fa: [4,3,2,2]\n\u89e3\u91ca: \u8f93\u5165\u6570\u7ec4\u8868\u793a\u6570\u5b57 4321\u3002\n</code></pre> <p>Reference</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/66/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u4ece\u6700\u540e\u4e00\u4f4d\u5f00\u59cb\u52a0\uff0c\u5411\u524d\u5904\u7406\u8fdb\u4f4d\u3002\u6ce8\u610f9999+1\u7684\u7279\u6b8a\u60c5\u51b5\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* plusOne(int* digits, int digitsSize, int* returnSize){\nint *ret = (int *)malloc(sizeof(int) * (digitsSize + 1)), i = digitsSize, add = 1;\n*ret = 0;\nmemcpy(ret + 1, digits, sizeof(int) * digitsSize);\nfor (i = digitsSize; i &gt;= 0 &amp;&amp; add; i--)\n{\nif (add = ret[i] == 9)\nret[i] = 0;\nelse\nret[i]++;\n}\n*returnSize = (i + 1) ? digitsSize : digitsSize + 1;\nreturn ret + ((i + 1) ? 1 : 0);\n}\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/69/","title":"69. x \u7684\u5e73\u65b9\u6839","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6570\u5b66","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/69/#_1","title":"\u9898\u76ee","text":"<p>\u5b9e\u73b0\u00a0<code>int sqrt(int x)</code>\u00a0\u51fd\u6570\u3002</p> <p>\u8ba1\u7b97\u5e76\u8fd4\u56de\u00a0<code>x</code>\u00a0\u7684\u5e73\u65b9\u6839\uff0c\u5176\u4e2d\u00a0<code>x</code> \u662f\u975e\u8d1f\u6574\u6570\u3002</p> <p>\u7531\u4e8e\u8fd4\u56de\u7c7b\u578b\u662f\u6574\u6570\uff0c\u7ed3\u679c\u53ea\u4fdd\u7559\u6574\u6570\u7684\u90e8\u5206\uff0c\u5c0f\u6570\u90e8\u5206\u5c06\u88ab\u820d\u53bb\u3002</p> <p>\u793a\u4f8b 1:</p> <pre><code>\u8f93\u5165: 4\n\u8f93\u51fa: 2\n</code></pre> <p>\u793a\u4f8b 2:</p> <pre><code>\u8f93\u5165: 8\n\u8f93\u51fa: 2\n\u8bf4\u660e: 8 \u7684\u5e73\u65b9\u6839\u662f 2.82842..., \n\u00a0    \u7531\u4e8e\u8fd4\u56de\u7c7b\u578b\u662f\u6574\u6570\uff0c\u5c0f\u6570\u90e8\u5206\u5c06\u88ab\u820d\u53bb\u3002\n</code></pre> <p>Reference</p>","tags":["\u6570\u5b66","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/69/#_2","title":"\u9898\u89e3","text":"<p>\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u5373\u53ef\uff0c\u5173\u4e8e\u4e8c\u5206\u67e5\u627e\u7684\u8ba8\u8bba\uff0c\u8bf7\u53c2\u89c135. \u641c\u7d22\u63d2\u5165\u4f4d\u7f6e</p> <pre><code>unsigned int binsearch(unsigned int target, unsigned int lo, unsigned int hi)\n{\nint mid;\nwhile (lo &lt; hi)\n{\nmid = (lo + hi) &gt;&gt; 1;\nif (mid * mid &gt; target)\nhi = mid;\nelse\nlo = mid + 1;\n}\nreturn lo - 1;\n}\nint mySqrt(int x){\nreturn binsearch(x, 0, 46341);\n}\n</code></pre>","tags":["\u6570\u5b66","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/7/","title":"7. \u6574\u6570\u53cd\u8f6c","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/7/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u51fa\u4e00\u4e2a 32 \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570\uff0c\u4f60\u9700\u8981\u5c06\u8fd9\u4e2a\u6574\u6570\u4e2d\u6bcf\u4f4d\u4e0a\u7684\u6570\u5b57\u8fdb\u884c\u53cd\u8f6c\u3002</p> <p>\u793a\u4f8b\u00a01\uff1a</p> <pre><code>\u8f93\u5165: 123\n\u8f93\u51fa: 321\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165: -123\n\u8f93\u51fa: -321\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165: 120\n\u8f93\u51fa: 21\n</code></pre> <p>\u6ce8\u610f\uff1a</p> <p>\u5047\u8bbe\u6211\u4eec\u7684\u73af\u5883\u53ea\u80fd\u5b58\u50a8\u5f97\u4e0b 32 \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570\uff0c\u5219\u5176\u6570\u503c\u8303\u56f4\u4e3a \\([\u22122^{31},\u00a0 2^{31}\u00a0\u2212 1]\\) \u3002\u8bf7\u6839\u636e\u8fd9\u4e2a\u5047\u8bbe\uff0c\u5982\u679c\u53cd\u8f6c\u540e\u6574\u6570\u6ea2\u51fa\u90a3\u4e48\u5c31\u8fd4\u56de 0\u3002</p> <p>Reference</p>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/7/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u6bcf\u4e00\u6b21\u4ece\u53f3\u4fa7\u63d0\u53d6\u51fa\u6700\u540e\u4e00\u4f4d\u52a0\u5230\u7ed3\u679c\u7684\u53f3\u4fa7\u3002\u6ce8\u610f\u8d1f\u6570<code>-2147483648</code>\u5728 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u73af\u5883\u4e0b\u4e0d\u80fd\u53d6\u8d1f\uff0c\u5c06\u4e2d\u95f4\u53d8\u91cf\u58f0\u660e\u4e3a<code>long</code>\u5373\u53ef\u89e3\u51b3\u3002</p> <pre><code>int reverse(int x){\nlong ret = 0, testcase = x;\ntestcase = testcase &gt; 0 ? testcase : -testcase;\nwhile(testcase)\n{\nret *= 10;\nret += testcase % 10;\ntestcase /= 10;\n}\nreturn ((ret &gt;&gt; 31) ? 0 : ret) * (x &gt; 0 ? 1 : -1);\n}\n</code></pre>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/70/","title":"70. \u722c\u697c\u68af","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/70/#_1","title":"\u9898\u76ee","text":"<p>\u5047\u8bbe\u4f60\u6b63\u5728\u722c\u697c\u68af\u3002\u9700\u8981 n\u00a0\u9636\u4f60\u624d\u80fd\u5230\u8fbe\u697c\u9876\u3002</p> <p>\u6bcf\u6b21\u4f60\u53ef\u4ee5\u722c 1 \u6216 2 \u4e2a\u53f0\u9636\u3002\u4f60\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u5462\uff1f</p> <p>\u6ce8\u610f\uff1a\u7ed9\u5b9a n \u662f\u4e00\u4e2a\u6b63\u6574\u6570\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1a 2\n\u8f93\u51fa\uff1a 2\n\u89e3\u91ca\uff1a \u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u3002\n1.  1 \u9636 + 1 \u9636\n2.  2 \u9636\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1a 3\n\u8f93\u51fa\uff1a 3\n\u89e3\u91ca\uff1a \u6709\u4e09\u79cd\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u3002\n1.  1 \u9636 + 1 \u9636 + 1 \u9636\n2.  1 \u9636 + 2 \u9636\n3.  2 \u9636 + 1 \u9636\n</code></pre> <p>Reference</p>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/70/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u50a8\u4e34\u65f6\u7ed3\u679c\uff0c\u9012\u5f52\u8ba1\u7b97\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>int climbStairs_cache(int n, int **cache)\n{\nif (n &lt;= 2)\nreturn n;\nif (*cache == NULL)\n*cache = memset(malloc(sizeof(int) * n), 0, sizeof(int) * n);\nif (!(*cache)[n - 1])\n(*cache)[n - 1] = climbStairs_cache(n - 1, cache) + climbStairs_cache(n - 2, cache);\nreturn (*cache)[n - 1];\n}\n\nint climbStairs(int n){\nint *cache = NULL;\nreturn climbStairs_cache(n, &amp;cache);\n}\n</code></pre>","tags":["\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/73/","title":"73. \u77e9\u9635\u7f6e\u96f6","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/73/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u00a0<code>m x n</code> \u7684\u77e9\u9635\uff0c\u5982\u679c\u4e00\u4e2a\u5143\u7d20\u4e3a <code>0</code> \uff0c\u5219\u5c06\u5176\u6240\u5728\u884c\u548c\u5217\u7684\u6240\u6709\u5143\u7d20\u90fd\u8bbe\u4e3a <code>0</code> \u3002\u8bf7\u4f7f\u7528 \u539f\u5730 \u7b97\u6cd5\u3002</p> <p>\u8fdb\u9636\uff1a</p> <ul> <li>\u4e00\u4e2a\u76f4\u89c2\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528 \u00a0\\(O(mn)\\)\u00a0\u7684\u989d\u5916\u7a7a\u95f4\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002</li> <li>\u4e00\u4e2a\u7b80\u5355\u7684\u6539\u8fdb\u65b9\u6848\u662f\u4f7f\u7528 \\(O(m\u00a0+\u00a0n)\\) \u7684\u989d\u5916\u7a7a\u95f4\uff0c\u4f46\u8fd9\u4ecd\u7136\u4e0d\u662f\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002</li> <li>\u4f60\u80fd\u60f3\u51fa\u4e00\u4e2a\u4ec5\u4f7f\u7528\u5e38\u91cf\u7a7a\u95f4\u7684\u89e3\u51b3\u65b9\u6848\u5417\uff1f</li> </ul> <p>\u793a\u4f8b 1\uff1a</p> <p></p> <pre><code>\u8f93\u5165\uff1amatrix = [[1,1,1],[1,0,1],[1,1,1]]\n\u8f93\u51fa\uff1a[[1,0,1],[0,0,0],[1,0,1]]\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <p></p> <pre><code>\u8f93\u5165\uff1amatrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]\n\u8f93\u51fa\uff1a[[0,0,0,0],[0,4,5,0],[0,3,1,0]]\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>m == matrix.length</code></li> <li><code>n == matrix[0].length</code></li> <li><code>1 &lt;= m, n &lt;= 200</code></li> <li><code>-2^31 &lt;= matrix[i][j] &lt;= 2^31 - 1</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/73/#_2","title":"\u9898\u89e3","text":"<p>\u4f7f\u7528\\(m\\)\u4e2a\u6807\u8bb0\u53d8\u91cf\u6807\u8bb0\u884c\u4e2d\u662f\u5426\u51fa\u73b00\uff0c\u7528\\(n\\)\u4e2a\u6807\u8bb0\u53d8\u91cf\u6807\u8bb0\u5217\u4e2d\u662f\u5426\u51fa\u73b00\u3002</p> <pre><code>void setZeroes(int** matrix, int matrixSize, int* matrixColSize){\nint *rows = memset(malloc(sizeof(int) * matrixSize), 0, sizeof(int) * matrixSize),\n*cols = memset(malloc(sizeof(int) * *matrixColSize), 0, sizeof(int) * *matrixColSize),\ni = 0, j = 0;\nfor (i = 0; i &lt; matrixSize; i++)\n{\nfor (j = 0; j &lt; matrixColSize[i]; j++)\n{\nif (matrix[i][j] == 0)\n{\nrows[i] = 1;\ncols[j] = 1;\n}\n}\n}\nfor (i = 0; i &lt; matrixSize; i++)\nfor (j = 0; j &lt; matrixColSize[i]; j++)\nif (rows[i] || cols[j])\nmatrix[i][j] = 0;\n}\n</code></pre>","tags":["\u6570\u7ec4"]},{"location":"coding/leetcode/74/","title":"74. \u641c\u7d22\u4e8c\u7ef4\u77e9\u9635","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/74/#_1","title":"\u9898\u76ee","text":"<p>\u7f16\u5199\u4e00\u4e2a\u9ad8\u6548\u7684\u7b97\u6cd5\u6765\u5224\u65ad\u00a0<code>m x n</code>\u00a0\u77e9\u9635\u4e2d\uff0c\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u76ee\u6807\u503c\u3002\u8be5\u77e9\u9635\u5177\u6709\u5982\u4e0b\u7279\u6027\uff1a</p> <ul> <li>\u6bcf\u884c\u4e2d\u7684\u6574\u6570\u4ece\u5de6\u5230\u53f3\u6309\u5347\u5e8f\u6392\u5217\u3002</li> <li>\u6bcf\u884c\u7684\u7b2c\u4e00\u4e2a\u6574\u6570\u5927\u4e8e\u524d\u4e00\u884c\u7684\u6700\u540e\u4e00\u4e2a\u6574\u6570\u3002</li> </ul> <p>\u793a\u4f8b 1\uff1a</p> <p></p> <pre><code>\u8f93\u5165\uff1amatrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3\n\u8f93\u51fa\uff1atrue\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <p></p> <pre><code>\u8f93\u5165\uff1amatrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13\n\u8f93\u51fa\uff1afalse\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>m == matrix.length</code></li> <li><code>n == matrix[i].length</code></li> <li><code>1 &lt;= m, n &lt;= 100</code></li> <li><code>-10^4 &lt;= matrix[i][j], target &lt;= 10^4</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/74/#_2","title":"\u9898\u89e3","text":"<p>\u6839\u636e\u77e9\u9635\u7684\u7279\u6027\u53ef\u77e5\uff0c\u5047\u8bbe\u77e9\u9635\u4e3a\\(\\{a_{ij}\\}_{m\\times n}\\)\uff0c\u76ee\u6807\u503c\\(t\\)\u4f4d\u4e8e\u5750\u6807\\((i^*, j^*)\\)\u5904\uff0c\u6709\uff1a</p> <ul> <li>\u5bf9\u4e8e\u4efb\u4f55\\(i, j\\)\uff0c\u82e5\\(i &lt; i^*\\)\uff0c\u5219\\(a_{ij} &lt; t\\)\uff0c\u5f53\\(i = i^*\\)\u65f6\uff0c\u82e5\\(j &lt; j^*\\)\uff0c\u5219\\(a_{ij} &lt; t\\)</li> <li>\u5bf9\u4e8e\u4efb\u4f55\\(i, j\\)\uff0c\u82e5\\(i &gt; i^*\\)\uff0c\u5219\\(a_{ij} &gt; t\\)\uff0c\u5f53\\(i = i^*\\)\u65f6\uff0c\u82e5\\(j &gt; j^*\\)\uff0c\u5219\\(a_{ij} &lt; t\\)</li> </ul> <p>\u5373\u76ee\u6807\u503c\u5c06\u77e9\u9635\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\u53f3\u4fa7\u548c\u4e0b\u4fa7\u7684\u6240\u6709\u5143\u7d20\u5927\u4e8e\u7b49\u4e8e\u76ee\u6807\u503c\uff0c\u5de6\u4fa7\u548c\u4e0a\u4fa7\u7684\u6240\u6709\u5143\u7d20\u5c0f\u4e8e\u7b49\u4e8e\u76ee\u6807\u503c\u3002</p> <p>\u4ece\u77e9\u5f62\u7684\u5de6\u4e0b\u89d2\u5f00\u59cb\uff1a</p> <ul> <li>\u82e5\u5f53\u524d\u4f4d\u7f6e\u7684\u6570\u503c\u5c0f\u4e8e\u76ee\u6807\u503c\uff0c\u8bf4\u660e\u76ee\u6807\u503c\u4f4d\u4e8e\u5f53\u524d\u884c\uff0c\u56e0\u6b64\u5411\u53f3\u79fb\u52a8\u5373\u53ef\u627e\u5230\u76ee\u6807\u503c</li> <li>\u82e5\u5f53\u524d\u4f4d\u7f6e\u7684\u6570\u503c\u5927\u4e8e\u76ee\u6807\u503c\uff0c\u8bf4\u660e\u76ee\u6807\u503c\u4e0d\u5728\u5f53\u524d\u884c\uff0c\u9700\u8981\u5411\u4e0a\u79fb\u52a8</li> </ul> <p>\u91cd\u590d\u5982\u4e0a\u8fc7\u7a0b\uff0c\u76f4\u81f3\u627e\u5230\u76ee\u6807\u5143\u7d20\u3002</p> <pre><code>bool searchMatrix(int** matrix, int matrixSize, int* matrixColSize, int target){\nint x = matrixSize - 1, y = 0;\nwhile (x &gt;= 0 &amp;&amp; y &lt; *matrixColSize)\n{\nif (matrix[x][y] &lt; target)\ny++;\nelse if (matrix[x][y] &gt; target)\nx--;\nelse\nreturn true;\n}\nreturn false;\n}\n</code></pre> <p>\u4ee5\u4e0a\u7b97\u6cd5\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u8fdb\u884c\u4f18\u5316\u3002</p>","tags":["\u6570\u7ec4","\u4e8c\u5206\u67e5\u627e"]},{"location":"coding/leetcode/75/","title":"75. \u989c\u8272\u5206\u7c7b","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6392\u5e8f","\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/75/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u7ea2\u8272\u3001\u767d\u8272\u548c\u84dd\u8272\uff0c\u4e00\u5171\u00a0<code>n</code> \u4e2a\u5143\u7d20\u7684\u6570\u7ec4\uff0c\u539f\u5730\u5bf9\u5b83\u4eec\u8fdb\u884c\u6392\u5e8f\uff0c\u4f7f\u5f97\u76f8\u540c\u989c\u8272\u7684\u5143\u7d20\u76f8\u90bb\uff0c\u5e76\u6309\u7167\u7ea2\u8272\u3001\u767d\u8272\u3001\u84dd\u8272\u987a\u5e8f\u6392\u5217\u3002</p> <p>\u6b64\u9898\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u6574\u6570 <code>0</code>\u3001\u00a0<code>1</code> \u548c <code>2</code> \u5206\u522b\u8868\u793a\u7ea2\u8272\u3001\u767d\u8272\u548c\u84dd\u8272\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [2,0,2,1,1,0]\n\u8f93\u51fa\uff1a[0,0,1,1,2,2]\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [2,0,1]\n\u8f93\u51fa\uff1a[0,1,2]\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [0]\n\u8f93\u51fa\uff1a[0]\n</code></pre> <p>\u793a\u4f8b 4\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [1]\n\u8f93\u51fa\uff1a[1]\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>n == nums.length</code></li> <li><code>1 &lt;= n &lt;= 300</code></li> <li><code>nums[i]</code> \u4e3a <code>0</code>\u3001<code>1</code> \u6216 <code>2</code></li> </ul> <p>\u8fdb\u9636\uff1a</p> <ul> <li>\u4f60\u53ef\u4ee5\u4e0d\u4f7f\u7528\u4ee3\u7801\u5e93\u4e2d\u7684\u6392\u5e8f\u51fd\u6570\u6765\u89e3\u51b3\u8fd9\u9053\u9898\u5417\uff1f</li> <li>\u4f60\u80fd\u60f3\u51fa\u4e00\u4e2a\u4ec5\u4f7f\u7528\u5e38\u6570\u7a7a\u95f4\u7684\u4e00\u8d9f\u626b\u63cf\u7b97\u6cd5\u5417\uff1f</li> </ul> <p>Reference</p>","tags":["\u6392\u5e8f","\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/75/#_2","title":"\u9898\u89e3","text":"<ol> <li>\u7edf\u8ba1\u6570\u7ec4\u4e2d<code>0</code>\u3001<code>1</code>\u548c<code>2</code>\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u6309\u7167\u51fa\u73b0\u6b21\u6570\u91cd\u65b0\u751f\u6210\u6570\u7ec4\u3002</li> <li>\u4f7f\u7528\u5feb\u901f\u6392\u5e8f\u7684\u601d\u8def\uff0c\u82e5\u51fa\u73b0<code>0</code>\u5219\u79fb\u52a8\u5230\u6570\u7ec4\u5f00\u5934\uff0c\u82e5\u51fa\u73b0<code>2</code>\u5219\u79fb\u52a8\u5230\u6570\u7ec4\u7ed3\u5c3e\u3002</li> </ol> <pre><code>void swap(int *a, int *b)\n{\nint temp = *a;\n*a = *b;\n*b = temp;\n}\nvoid sortColors(int* nums, int numsSize){\nint head = 0, tail = numsSize - 1, i = 0;\nfor (i = 0; i &lt;= tail &amp;&amp; tail &gt; head; i++)\n{\nif (nums[i] == 0)\nswap(nums + head++, nums + i);\nif (nums[i] == 2)\nswap(nums + tail--, nums + i--);\n}\n}\n</code></pre>","tags":["\u6392\u5e8f","\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/779/","title":"779. \u7b2cK\u4e2a\u8bed\u6cd5\u7b26\u53f7","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u9012\u5f52"]},{"location":"coding/leetcode/779/#_1","title":"\u9898\u76ee","text":"<p>\u5728\u7b2c\u4e00\u884c\u6211\u4eec\u5199\u4e0a\u4e00\u4e2a<code>0</code>\u3002\u63a5\u4e0b\u6765\u7684\u6bcf\u4e00\u884c\uff0c\u5c06\u524d\u4e00\u884c\u4e2d\u7684<code>0</code>\u66ff\u6362\u4e3a<code>01</code>\uff0c<code>1</code>\u66ff\u6362\u4e3a<code>10</code>\u3002</p> <p>\u7ed9\u5b9a\u884c\u6570<code>N</code>\u548c\u5e8f\u6570<code>K</code>\uff0c\u8fd4\u56de\u7b2c<code>N</code>\u884c\u4e2d\u7b2c<code>K</code>\u4e2a\u5b57\u7b26\u3002\uff08<code>K</code>\u4ece 1 \u5f00\u59cb\uff09</p> <p>\u4f8b\u5b50: <pre><code>\u8f93\u5165: N = 1, K = 1\n\u8f93\u51fa: 0\n\n\u8f93\u5165: N = 2, K = 1\n\u8f93\u51fa: 0\n\n\u8f93\u5165: N = 2, K = 2\n\u8f93\u51fa: 1\n\n\u8f93\u5165: N = 4, K = 5\n\u8f93\u51fa: 1\n\n\u89e3\u91ca:\n\u7b2c\u4e00\u884c: 0\n\u7b2c\u4e8c\u884c: 01\n\u7b2c\u4e09\u884c: 0110\n\u7b2c\u56db\u884c: 01101001\n</code></pre> \u6ce8\u610f\uff1a</p> <ul> <li><code>N</code>\u7684\u8303\u56f4<code>[1, 30]</code>.</li> <li><code>K</code>\u7684\u8303\u56f4<code>[1, 2^(N-1)]</code>.</li> </ul> <p>Reference</p>","tags":["\u9012\u5f52"]},{"location":"coding/leetcode/779/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u6ce8\u610f\u5230\u6bcf\u4e2a\u7ed3\u679c\u5b57\u7b26\u4e32\u53ef\u4ee5\u5206\u4e3a4\u4e2a\u7b49\u957f\u7684\u90e8\u5206\uff0c\u5176\u4e2d\u7b2c1\u30014\u90e8\u5206\u76f8\u540c\uff0c2\u30013\u90e8\u5206\u76f8\u540c\uff0c\u4e24\u7ec4\u7684\u4e8c\u8fdb\u5236\u4e92\u8865\u3002\u540c\u65f6\uff0c\u4efb\u610f\u4e00\u884c\u4ee5\u4e2d\u70b9\u4e3a\u754c\uff0c\u5de6\u53f3\u4e24\u4fa7\u4e92\u8865\u3002\u56e0\u6b64\u53ea\u9700\u8981\u5728\u5de6\u4fa7\u8fdb\u884c\u67e5\u627e\uff0c\u53f3\u4fa7\u90e8\u5206\u53d6\u53cd\u5373\u53ef\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>int kthGrammar(int N, int K)\n{\nif (N == 1)\nreturn 0;\nint unit = 1 &lt;&lt; (N - 2);\nreturn !(K &lt;= unit) ^ kthGrammar(N - 1, ((K - 1) &amp; (unit - 1)) + 1);\n}\n</code></pre>","tags":["\u9012\u5f52"]},{"location":"coding/leetcode/78/","title":"78. \u5b50\u96c6","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u4f4d\u8fd0\u7b97","\u6570\u7ec4","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/78/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u00a0<code>nums</code> \uff0c\u6570\u7ec4\u4e2d\u7684\u5143\u7d20 \u4e92\u4e0d\u76f8\u540c \u3002\u8fd4\u56de\u8be5\u6570\u7ec4\u6240\u6709\u53ef\u80fd\u7684\u5b50\u96c6\uff08\u5e42\u96c6\uff09\u3002</p> <p>\u89e3\u96c6 \u4e0d\u80fd \u5305\u542b\u91cd\u590d\u7684\u5b50\u96c6\u3002\u4f60\u53ef\u4ee5\u6309 \u4efb\u610f\u987a\u5e8f \u8fd4\u56de\u89e3\u96c6\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [1,2,3]\n\u8f93\u51fa\uff1a[[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [0]\n\u8f93\u51fa\uff1a[[],[0]]\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 10</code></li> <li><code>-10 &lt;= nums[i] &lt;= 10</code></li> <li><code>nums</code> \u4e2d\u7684\u6240\u6709\u5143\u7d20 \u4e92\u4e0d\u76f8\u540c</li> </ul> <p>Reference</p>","tags":["\u4f4d\u8fd0\u7b97","\u6570\u7ec4","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/78/#_2","title":"\u9898\u89e3","text":"<p>\u5df2\u77e5\u96c6\u5408\u4e2d\u4e0d\u5b58\u5728\u91cd\u590d\u5143\u7d20\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u6574\u6570\u4e2d\u7684\u6bcf\u4e00\u4f4d\u8868\u793a\u96c6\u5408\u4e2d\u5143\u7d20\u7684\u9009\u53d6\u72b6\u6001\u3002</p> <pre><code>/**\n * Return an array of arrays of size *returnSize.\n * The sizes of the arrays are returned as *returnColumnSizes array.\n * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().\n */\nint count1(int x)\n{\nint ret = 0;\nwhile (x)\n{\nret += x &amp; 1;\nx &gt;&gt;= 1;\n}\nreturn ret;\n}\nint** subsets(int* nums, int numsSize, int* returnSize, int** returnColumnSizes){\n*returnSize = 1 &lt;&lt; numsSize;\n*returnColumnSizes = (int *)memset(malloc(sizeof(int) * *returnSize), 0, sizeof(int) * *returnSize);\nint i = 0, j = 0, **ret = (int **)malloc(sizeof(int *) * *returnSize), pos;\nfor (i = 0; i &lt; *returnSize; i++)\n{\n(*returnColumnSizes)[i] = count1(i);\nret[i] = (int *)malloc(sizeof(int) * (*returnColumnSizes)[i]);\npos = 0;\nfor (j = 0; j &lt; numsSize; j++)\nif (i &amp; (1 &lt;&lt; j))\nret[i][pos++] = nums[j];\n}\nreturn ret;\n}\n</code></pre>","tags":["\u4f4d\u8fd0\u7b97","\u6570\u7ec4","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/781/","title":"781. \u68ee\u6797\u4e2d\u7684\u5154\u5b50","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u54c8\u5e0c\u8868","\u6570\u5b66"]},{"location":"coding/leetcode/781/#_1","title":"\u9898\u76ee","text":"<p>\u68ee\u6797\u4e2d\uff0c\u6bcf\u4e2a\u5154\u5b50\u90fd\u6709\u989c\u8272\u3002\u5176\u4e2d\u4e00\u4e9b\u5154\u5b50\uff08\u53ef\u80fd\u662f\u5168\u90e8\uff09\u544a\u8bc9\u4f60\u8fd8\u6709\u591a\u5c11\u5176\u4ed6\u7684\u5154\u5b50\u548c\u81ea\u5df1\u6709\u76f8\u540c\u7684\u989c\u8272\u3002\u6211\u4eec\u5c06\u8fd9\u4e9b\u56de\u7b54\u653e\u5728\u00a0<code>answers</code>\u00a0\u6570\u7ec4\u91cc\u3002</p> <p>\u8fd4\u56de\u68ee\u6797\u4e2d\u5154\u5b50\u7684\u6700\u5c11\u6570\u91cf\u3002</p> <p>\u793a\u4f8b:</p> <pre><code>\u8f93\u5165: answers = [1, 1, 2]\n\u8f93\u51fa: 5\n\u89e3\u91ca:\n\u4e24\u53ea\u56de\u7b54\u4e86 \"1\" \u7684\u5154\u5b50\u53ef\u80fd\u6709\u76f8\u540c\u7684\u989c\u8272\uff0c\u8bbe\u4e3a\u7ea2\u8272\u3002\n\u4e4b\u540e\u56de\u7b54\u4e86 \"2\" \u7684\u5154\u5b50\u4e0d\u4f1a\u662f\u7ea2\u8272\uff0c\u5426\u5219\u4ed6\u4eec\u7684\u56de\u7b54\u4f1a\u76f8\u4e92\u77db\u76fe\u3002\n\u8bbe\u56de\u7b54\u4e86 \"2\" \u7684\u5154\u5b50\u4e3a\u84dd\u8272\u3002\n\u6b64\u5916\uff0c\u68ee\u6797\u4e2d\u8fd8\u5e94\u6709\u53e6\u5916 2 \u53ea\u84dd\u8272\u5154\u5b50\u7684\u56de\u7b54\u6ca1\u6709\u5305\u542b\u5728\u6570\u7ec4\u4e2d\u3002\n\u56e0\u6b64\u68ee\u6797\u4e2d\u5154\u5b50\u7684\u6700\u5c11\u6570\u91cf\u662f 5: 3 \u53ea\u56de\u7b54\u7684\u548c 2 \u53ea\u6ca1\u6709\u56de\u7b54\u7684\u3002\n\n\u8f93\u5165: answers = [10, 10, 10]\n\u8f93\u51fa: 11\n\n\u8f93\u5165: answers = []\n\u8f93\u51fa: 0\n</code></pre> <p>\u8bf4\u660e:</p> <ul> <li><code>answers</code>\u00a0\u7684\u957f\u5ea6\u6700\u5927\u4e3a<code>1000</code>\u3002</li> <li><code>answers[i]</code>\u00a0\u662f\u5728\u00a0<code>[0, 999]</code>\u00a0\u8303\u56f4\u5185\u7684\u6574\u6570\u3002</li> </ul> <p>Reference</p>","tags":["\u54c8\u5e0c\u8868","\u6570\u5b66"]},{"location":"coding/leetcode/781/#_2","title":"\u9898\u89e3","text":"<p>\u5154\u5b50\u7684\u5206\u7c7b\u6ee1\u8db3\u5982\u4e0b\u60c5\u51b5\uff0c\u8bbe\u7b2c\\(i\\)\u53ea\u5154\u5b50\u7684\u62a5\u6570\u4e3a\\(a_i\\)\uff0c\u5219\uff1a</p> <ul> <li>\u82e5\\(a_i \\not = a_j\\)\uff0c\u5219\u7b2c\\(i\\)\u53ea\u5154\u5b50\u4e0e\u7b2c\\(j\\)\u53ea\u5154\u5b50\u5fc5\u7136\u4e0d\u5c5e\u4e8e\u4e00\u7c7b</li> <li>\u82e5\\(a_i = a_j\\)\uff0c\u5219\u7b2c\\(i\\)\u53ea\u5154\u5b50\u4e0e\u7b2c\\(j\\)\u53ea\u5154\u5b50\u53ef\u80fd\u5c5e\u4e8e\u4e00\u7c7b\uff0c</li> <li>\u7b2c\\(i\\)\u53ea\u5154\u5b50\u6240\u5c5e\u7684\u7c7b\u4e2d\u6700\u591a\u6709\\(a_i + 1\\)\u53ea\u5154\u5b50</li> </ul> <p>\u56e0\u6b64\u53ef\u4ee5\u5f97\u51fa\u7b97\u6cd5\uff1a\u7edf\u8ba1\u76f8\u540c\u6570\u5b57\\(a_i\\)\u51fa\u73b0\u7684\u6b21\u6570\\(b_j\\)\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5b57\uff0c\u4e0e\u4e4b\u5bf9\u5e94\u7684\u6700\u5c11\u7684\u5154\u5b50\u6570\u91cf\u4e3a\\(b'_j\\)\uff0c\u5219\\(b'_j\\)\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a</p> <ul> <li>\\(b'_j = k \\times (a_i + 1), k\\in \\N\\)</li> <li>\\(b'_j \\geq b_j\\)</li> <li>\\(b'_j - (a_i + 1) &lt; b_j\\)</li> </ul> <p>\u5373\\(b'_j = \\left\\lceil\\frac{b_j}{a_i + 1}\\right\\rceil\\times (a_i + 1)\\)</p> <pre><code>int numRabbits(int* answers, int answersSize){\nint hash[1000] = {0}, i = 0, ret = 0;\nfor (i = 0; i &lt; answersSize; i++)\nhash[answers[i]]++;\nfor (i = 0; i &lt; 1000; i++)\nret += (hash[i] + i) / (i + 1) * (i + 1);\nreturn ret;\n}\n</code></pre> <p>Python\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u5e93<code>collections</code>\u4e2d\u7684<code>Counter</code>\u7c7b\u7edf\u8ba1\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\uff1a</p> <pre><code>import collections\n\nclass Solution:\n    def numRabbits(self, answers: List[int]) -&gt; int:\n        return sum(map(\n            lambda args: sum(args) // (args[0] + 1) * (args[0] + 1)\n            collections.Counter(answers).items()\n        ))\n</code></pre>","tags":["\u54c8\u5e0c\u8868","\u6570\u5b66"]},{"location":"coding/leetcode/79/","title":"79. \u5355\u8bcd\u641c\u7d22","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6570\u7ec4","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/79/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u00a0<code>m x n</code> \u4e8c\u7ef4\u5b57\u7b26\u7f51\u683c\u00a0<code>board</code> \u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\u5355\u8bcd\u00a0<code>word</code> \u3002\u5982\u679c\u00a0<code>word</code> \u5b58\u5728\u4e8e\u7f51\u683c\u4e2d\uff0c\u8fd4\u56de <code>true</code> \uff1b\u5426\u5219\uff0c\u8fd4\u56de <code>false</code> \u3002</p> <p>\u5355\u8bcd\u5fc5\u987b\u6309\u7167\u5b57\u6bcd\u987a\u5e8f\uff0c\u901a\u8fc7\u76f8\u90bb\u7684\u5355\u5143\u683c\u5185\u7684\u5b57\u6bcd\u6784\u6210\uff0c\u5176\u4e2d\u201c\u76f8\u90bb\u201d\u5355\u5143\u683c\u662f\u90a3\u4e9b\u6c34\u5e73\u76f8\u90bb\u6216\u5782\u76f4\u76f8\u90bb\u7684\u5355\u5143\u683c\u3002\u540c\u4e00\u4e2a\u5355\u5143\u683c\u5185\u7684\u5b57\u6bcd\u4e0d\u5141\u8bb8\u88ab\u91cd\u590d\u4f7f\u7528\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <p></p> <pre><code>\u8f93\u5165\uff1aboard = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCCED\"\n\u8f93\u51fa\uff1atrue\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <p></p> <pre><code>\u8f93\u5165\uff1aboard = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"SEE\"\n\u8f93\u51fa\uff1atrue\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <p></p> <pre><code>\u8f93\u5165\uff1aboard = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCB\"\n\u8f93\u51fa\uff1afalse\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>m == board.length</code></li> <li><code>n = board[i].length</code></li> <li><code>1 &lt;= m, n &lt;= 6</code></li> <li><code>1 &lt;= word.length &lt;= 15</code></li> <li><code>board</code> \u548c <code>word</code> \u4ec5\u7531\u5927\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210</li> </ul> <p>\u8fdb\u9636\uff1a\u4f60\u53ef\u4ee5\u4f7f\u7528\u641c\u7d22\u526a\u679d\u7684\u6280\u672f\u6765\u4f18\u5316\u89e3\u51b3\u65b9\u6848\uff0c\u4f7f\u5176\u5728 <code>board</code> \u66f4\u5927\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u66f4\u5feb\u89e3\u51b3\u95ee\u9898\uff1f</p> <p>Reference</p>","tags":["\u6570\u7ec4","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/79/#_2","title":"\u9898\u89e3","text":"<p>\u4f7f\u7528\u6df1\u5ea6\u4f18\u5148\u7b97\u6cd5\uff0c\u5728\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u5bfb\u627e\u5355\u8bcd\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u51fa\u73b0\u4f4d\u7f6e\uff1a</p> <ul> <li>\u5c06\u5f53\u524d\u4f4d\u7f6e\u6807\u5fd7\u4e3a\u7ecf\u5386\u8fc7</li> <li>\u5bfb\u627e\u5f53\u524d\u4f4d\u7f6e\u9644\u8fd1\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\u7684\u5355\u5143\u683c<ol> <li>\u5355\u5143\u683c\u4e2d\u7684\u5b57\u6bcd\u7b49\u4e8e\u5355\u8bcd\u7684\u4e0b\u4e00\u4e2a\u5b57\u6bcd</li> <li>\u5355\u5143\u683c\u672a\u88ab\u904d\u5386\u8fc7</li> </ol> </li> <li>\u5982\u679c\u627e\u4e0d\u5230\u5355\u5143\u683c\uff0c\u610f\u5473\u7740\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u65e0\u6cd5\u627e\u5230\u76ee\u6807\u5355\u8bcd</li> <li>\u5982\u679c\u627e\u5230\u4e00\u4e2a\u6216\u591a\u4e2a\u5355\u5143\u683c\uff0c\u5219\u524d\u8fdb\u5230\u4e0b\u4e00\u4e2a\u5355\u5143\u683c\u7ee7\u7eed\u8fdb\u884c\u5339\u914d</li> <li>\u5982\u679c\u5355\u8bcd\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u6210\u529f\u5339\u914d\uff0c\u610f\u5473\u7740\u5339\u914d\u6210\u529f</li> </ul> <pre><code>bool dfs(char **board, int boardSize, int* boardColSize, char *word, int posX, int posY, int **map)\n{\nif (*word == 0)\nreturn true;\nbool ret = false;\nif (posX &gt; 0 &amp;&amp; board[posX - 1][posY] == *word &amp;&amp; map[posX - 1][posY] == 0)\n{\nmap[posX - 1][posY] = 1;\nret = ret || dfs(board, boardSize, boardColSize, word + 1, posX - 1, posY, map);\nmap[posX - 1][posY] = 0;\n}\nif (posX &lt; boardSize - 1 &amp;&amp; board[posX + 1][posY] == *word &amp;&amp; map[posX + 1][posY] == 0)\n{\nmap[posX + 1][posY] = 1;\nret = ret || dfs(board, boardSize, boardColSize, word + 1, posX + 1, posY, map);\nmap[posX + 1][posY] = 0;\n}\nif (posY &gt; 0 &amp;&amp; board[posX][posY - 1] == *word &amp;&amp; map[posX][posY - 1] == 0)\n{\nmap[posX][posY - 1] = 1;\nret = ret || dfs(board, boardSize, boardColSize, word + 1, posX, posY - 1, map);\nmap[posX][posY - 1] = 0;\n}\nif (posY &lt; boardColSize[0] - 1 &amp;&amp; board[posX][posY + 1] == *word &amp;&amp; map[posX][posY + 1] == 0)\n{\nmap[posX][posY + 1] = 1;\nret = ret || dfs(board, boardSize, boardColSize, word + 1, posX, posY + 1, map);\nmap[posX][posY + 1] = 0;\n}\nreturn ret;\n}\nbool exist(char** board, int boardSize, int* boardColSize, char * word){\nbool ret = false;\nint i = 0, j = 0, **map = (int **)malloc(sizeof(int *) * boardSize);\nfor (i = 0; i &lt; boardSize; i++)\nmap[i] = (int *)memset(malloc(sizeof(int) * boardColSize[i]), 0, sizeof(int) * boardColSize[i]);\nfor (i = 0; i &lt; boardSize &amp;&amp; !ret; i++)\n{\nfor (j = 0; j &lt; boardColSize[0] &amp;&amp; !ret; j++)\n{\nif (board[i][j] == *word)\n{\nmap[i][j] = 1;\nret = ret || dfs(board, boardSize, boardColSize, word + 1, i, j, map);\nmap[i][j] = 0;\n}\n}\n}\nreturn ret;\n}\n</code></pre>","tags":["\u6570\u7ec4","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/8/","title":"8. \u5b57\u7b26\u4e32\u8f6c\u6362\u6574\u6570 (atoi)","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/8/#_1","title":"\u9898\u76ee","text":"<p>\u8bf7\u4f60\u6765\u5b9e\u73b0\u4e00\u4e2a<code>atoi</code>\u51fd\u6570\uff0c\u4f7f\u5176\u80fd\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570\u3002</p> <p>\u9996\u5148\uff0c\u8be5\u51fd\u6570\u4f1a\u6839\u636e\u9700\u8981\u4e22\u5f03\u65e0\u7528\u7684\u5f00\u5934\u7a7a\u683c\u5b57\u7b26\uff0c\u76f4\u5230\u5bfb\u627e\u5230\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u7684\u5b57\u7b26\u4e3a\u6b62\u3002\u63a5\u4e0b\u6765\u7684\u8f6c\u5316\u89c4\u5219\u5982\u4e0b\uff1a</p> <ul> <li>\u5982\u679c\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u4e3a\u6b63\u6216\u8005\u8d1f\u53f7\u65f6\uff0c\u5219\u5c06\u8be5\u7b26\u53f7\u4e0e\u4e4b\u540e\u9762\u5c3d\u53ef\u80fd\u591a\u7684\u8fde\u7eed\u6570\u5b57\u5b57\u7b26\u7ec4\u5408\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u6709\u7b26\u53f7\u6574\u6570\u3002</li> <li>\u5047\u5982\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u662f\u6570\u5b57\uff0c\u5219\u76f4\u63a5\u5c06\u5176\u4e0e\u4e4b\u540e\u8fde\u7eed\u7684\u6570\u5b57\u5b57\u7b26\u7ec4\u5408\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u6574\u6570\u3002</li> <li>\u8be5\u5b57\u7b26\u4e32\u5728\u6709\u6548\u7684\u6574\u6570\u90e8\u5206\u4e4b\u540e\u4e5f\u53ef\u80fd\u4f1a\u5b58\u5728\u591a\u4f59\u7684\u5b57\u7b26\uff0c\u90a3\u4e48\u8fd9\u4e9b\u5b57\u7b26\u53ef\u4ee5\u88ab\u5ffd\u7565\uff0c\u5b83\u4eec\u5bf9\u51fd\u6570\u4e0d\u5e94\u8be5\u9020\u6210\u5f71\u54cd\u3002</li> </ul> <p>\u6ce8\u610f\uff1a\u5047\u5982\u8be5\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u5b57\u7b26\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u6574\u6570\u5b57\u7b26\u3001\u5b57\u7b26\u4e32\u4e3a\u7a7a\u6216\u5b57\u7b26\u4e32\u4ec5\u5305\u542b\u7a7a\u767d\u5b57\u7b26\u65f6\uff0c\u5219\u4f60\u7684\u51fd\u6570\u4e0d\u9700\u8981\u8fdb\u884c\u8f6c\u6362\uff0c\u5373\u65e0\u6cd5\u8fdb\u884c\u6709\u6548\u8f6c\u6362\u3002</p> <p>\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u82e5\u51fd\u6570\u4e0d\u80fd\u8fdb\u884c\u6709\u6548\u7684\u8f6c\u6362\u65f6\uff0c\u8bf7\u8fd4\u56de 0 \u3002</p> <p>\u63d0\u793a\uff1a</p> <ul> <li>\u672c\u9898\u4e2d\u7684\u7a7a\u767d\u5b57\u7b26\u53ea\u5305\u62ec\u7a7a\u683c\u5b57\u7b26<code>' '</code>\u3002</li> <li>\u5047\u8bbe\u6211\u4eec\u7684\u73af\u5883\u53ea\u80fd\u5b58\u50a8 32 \u4f4d\u5927\u5c0f\u7684\u6709\u7b26\u53f7\u6574\u6570\uff0c\u90a3\u4e48\u5176\u6570\u503c\u8303\u56f4\u4e3a\\([\u22122^{31},\u00a0 2^{31}\u00a0\u2212 1]\\)\u3002\u5982\u679c\u6570\u503c\u8d85\u8fc7\u8fd9\u4e2a\u8303\u56f4\uff0c\u8bf7\u8fd4\u56de<code>INT_MAX</code>(\\(2^{31}\u00a0\u2212 1\\))\u6216<code>INT_MIN</code>(\\(\u22122^{31}\\)) \u3002 \u00a0</li> </ul> <p>\u793a\u4f8b\u00a01:</p> <pre><code>\u8f93\u5165: \"42\"\n\u8f93\u51fa: 42\n</code></pre> <p>\u793a\u4f8b\u00a02:</p> <pre><code>\u8f93\u5165: \"   -42\"\n\u8f93\u51fa: -42\n\u89e3\u91ca: \u7b2c\u4e00\u4e2a\u975e\u7a7a\u767d\u5b57\u7b26\u4e3a '-', \u5b83\u662f\u4e00\u4e2a\u8d1f\u53f7\u3002\n\u00a0    \u6211\u4eec\u5c3d\u53ef\u80fd\u5c06\u8d1f\u53f7\u4e0e\u540e\u9762\u6240\u6709\u8fde\u7eed\u51fa\u73b0\u7684\u6570\u5b57\u7ec4\u5408\u8d77\u6765\uff0c\u6700\u540e\u5f97\u5230 -42 \u3002\n</code></pre> <p>\u793a\u4f8b\u00a03:</p> <pre><code>\u8f93\u5165: \"4193 with words\"\n\u8f93\u51fa: 4193\n\u89e3\u91ca: \u8f6c\u6362\u622a\u6b62\u4e8e\u6570\u5b57 '3' \uff0c\u56e0\u4e3a\u5b83\u7684\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e0d\u4e3a\u6570\u5b57\u3002\n</code></pre> <p>\u793a\u4f8b\u00a04:</p> <pre><code>\u8f93\u5165: \"words and 987\"\n\u8f93\u51fa: 0\n\u89e3\u91ca: \u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u662f 'w', \u4f46\u5b83\u4e0d\u662f\u6570\u5b57\u6216\u6b63\u3001\u8d1f\u53f7\u3002\n     \u56e0\u6b64\u65e0\u6cd5\u6267\u884c\u6709\u6548\u7684\u8f6c\u6362\u3002\n</code></pre> <p>\u793a\u4f8b\u00a05:</p> <pre><code>\u8f93\u5165: \"-91283472332\"\n\u8f93\u51fa: -2147483648\n\u89e3\u91ca: \u6570\u5b57 \"-91283472332\" \u8d85\u8fc7 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u8303\u56f4\u3002 \n\u00a0    \u56e0\u6b64\u8fd4\u56de INT_MIN (\u2212231) \u3002\n</code></pre> <p>Reference</p>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/8/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a </p> <ol> <li>\u6ce8\u610f\u4e00\u4e2a\u6709\u6548\u7684\u6570\u5b57\u5b57\u7b26\u4e32\u53ef\u4ee5\u4ee5<code>0-9</code>\u3001<code>'-'</code>\u3001<code>'+'</code>\u548c\u7a7a\u683c<code>' '</code>\u5f00\u5934\u3002</li> <li>\u4e3a\u4e86\u907f\u514d\u6ea2\u51fa\uff0c\u5e94\u5f53\u4f7f\u7528<code>long</code>\u7c7b\u578b\u3002</li> </ol> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>int myAtoi(char * str){\nint flag = 0;\nchar *cur = str;\nwhile (*cur &amp;&amp; *cur == ' ')\ncur++;\nif (*cur == '-' || *cur == '+')\nflag = *(cur++) - '+';\nif (*cur &lt; '0' || *cur &gt; '9')\nreturn 0;\nlong ret = 0;\nwhile(*cur &gt;= '0' &amp;&amp; *cur &lt;= '9')\n{\nret *= 10;\nret += *cur - '0';\ncur++;\nif (ret &gt;= -(long)INT_MIN || (ret == (long)INT_MAX &amp;&amp; !flag))\nreturn flag ? INT_MIN : INT_MAX;\n}\nreturn flag ? -ret : ret;\n}\n</code></pre>","tags":["\u6570\u5b66","\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/87/","title":"87. \u6270\u4e71\u5b57\u7b26\u4e32","text":"<p>\u96be\u5ea6\uff1a\u56f0\u96be</p>","tags":["\u5b57\u7b26\u4e32","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/87/#_1","title":"\u9898\u76ee","text":"<p>\u4f7f\u7528\u4e0b\u9762\u63cf\u8ff0\u7684\u7b97\u6cd5\u53ef\u4ee5\u6270\u4e71\u5b57\u7b26\u4e32 <code>s</code> \u5f97\u5230\u5b57\u7b26\u4e32 <code>t</code> \uff1a</p> <ol> <li>\u5982\u679c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e3a 1 \uff0c\u7b97\u6cd5\u505c\u6b62</li> <li>\u5982\u679c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 &gt; 1 \uff0c\u6267\u884c\u4e0b\u8ff0\u6b65\u9aa4\uff1a<ul> <li>\u5728\u4e00\u4e2a\u968f\u673a\u4e0b\u6807\u5904\u5c06\u5b57\u7b26\u4e32\u5206\u5272\u6210\u4e24\u4e2a\u975e\u7a7a\u7684\u5b50\u5b57\u7b26\u4e32\u3002\u5373\uff0c\u5982\u679c\u5df2\u77e5\u5b57\u7b26\u4e32 <code>s</code> \uff0c\u5219\u53ef\u4ee5\u5c06\u5176\u5206\u6210\u4e24\u4e2a\u5b50\u5b57\u7b26\u4e32 <code>x</code> \u548c <code>y</code> \uff0c\u4e14\u6ee1\u8db3 <code>s = x + y</code> \u3002</li> <li>\u968f\u673a \u51b3\u5b9a\u662f\u8981\u300c\u4ea4\u6362\u4e24\u4e2a\u5b50\u5b57\u7b26\u4e32\u300d\u8fd8\u662f\u8981\u300c\u4fdd\u6301\u8fd9\u4e24\u4e2a\u5b50\u5b57\u7b26\u4e32\u7684\u987a\u5e8f\u4e0d\u53d8\u300d\u3002\u5373\uff0c\u5728\u6267\u884c\u8fd9\u4e00\u6b65\u9aa4\u4e4b\u540e\uff0c<code>s</code> \u53ef\u80fd\u662f <code>s = x + y</code> \u6216\u8005 <code>s = y + x</code> \u3002</li> <li>\u5728 <code>x</code> \u548c <code>y</code> \u8fd9\u4e24\u4e2a\u5b50\u5b57\u7b26\u4e32\u4e0a\u7ee7\u7eed\u4ece\u6b65\u9aa4 1 \u5f00\u59cb\u9012\u5f52\u6267\u884c\u6b64\u7b97\u6cd5\u3002</li> </ul> </li> </ol> <p>\u7ed9\u4f60\u4e24\u4e2a \u957f\u5ea6\u76f8\u7b49 \u7684\u5b57\u7b26\u4e32 <code>s1</code> \u548c\u00a0<code>s2</code>\uff0c\u5224\u65ad\u00a0<code>s2</code>\u00a0\u662f\u5426\u662f\u00a0<code>s1</code>\u00a0\u7684\u6270\u4e71\u5b57\u7b26\u4e32\u3002\u5982\u679c\u662f\uff0c\u8fd4\u56de <code>true</code> \uff1b\u5426\u5219\uff0c\u8fd4\u56de <code>false</code> \u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1as1 = \"great\", s2 = \"rgeat\"\n\u8f93\u51fa\uff1atrue\n\u89e3\u91ca\uff1as1 \u4e0a\u53ef\u80fd\u53d1\u751f\u7684\u4e00\u79cd\u60c5\u5f62\u662f\uff1a\n\"great\" --&gt; \"gr/eat\" // \u5728\u4e00\u4e2a\u968f\u673a\u4e0b\u6807\u5904\u5206\u5272\u5f97\u5230\u4e24\u4e2a\u5b50\u5b57\u7b26\u4e32\n\"gr/eat\" --&gt; \"gr/eat\" // \u968f\u673a\u51b3\u5b9a\uff1a\u300c\u4fdd\u6301\u8fd9\u4e24\u4e2a\u5b50\u5b57\u7b26\u4e32\u7684\u987a\u5e8f\u4e0d\u53d8\u300d\n\"gr/eat\" --&gt; \"g/r / e/at\" // \u5728\u5b50\u5b57\u7b26\u4e32\u4e0a\u9012\u5f52\u6267\u884c\u6b64\u7b97\u6cd5\u3002\u4e24\u4e2a\u5b50\u5b57\u7b26\u4e32\u5206\u522b\u5728\u968f\u673a\u4e0b\u6807\u5904\u8fdb\u884c\u4e00\u8f6e\u5206\u5272\n\"g/r / e/at\" --&gt; \"r/g / e/at\" // \u968f\u673a\u51b3\u5b9a\uff1a\u7b2c\u4e00\u7ec4\u300c\u4ea4\u6362\u4e24\u4e2a\u5b50\u5b57\u7b26\u4e32\u300d\uff0c\u7b2c\u4e8c\u7ec4\u300c\u4fdd\u6301\u8fd9\u4e24\u4e2a\u5b50\u5b57\u7b26\u4e32\u7684\u987a\u5e8f\u4e0d\u53d8\u300d\n\"r/g / e/at\" --&gt; \"r/g / e/ a/t\" // \u7ee7\u7eed\u9012\u5f52\u6267\u884c\u6b64\u7b97\u6cd5\uff0c\u5c06 \"at\" \u5206\u5272\u5f97\u5230 \"a/t\"\n\"r/g / e/ a/t\" --&gt; \"r/g / e/ a/t\" // \u968f\u673a\u51b3\u5b9a\uff1a\u300c\u4fdd\u6301\u8fd9\u4e24\u4e2a\u5b50\u5b57\u7b26\u4e32\u7684\u987a\u5e8f\u4e0d\u53d8\u300d\n\u7b97\u6cd5\u7ec8\u6b62\uff0c\u7ed3\u679c\u5b57\u7b26\u4e32\u548c s2 \u76f8\u540c\uff0c\u90fd\u662f \"rgeat\"\n\u8fd9\u662f\u4e00\u79cd\u80fd\u591f\u6270\u4e71 s1 \u5f97\u5230 s2 \u7684\u60c5\u5f62\uff0c\u53ef\u4ee5\u8ba4\u4e3a s2 \u662f s1 \u7684\u6270\u4e71\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de true\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1as1 = \"abcde\", s2 = \"caebd\"\n\u8f93\u51fa\uff1afalse\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1as1 = \"a\", s2 = \"a\"\n\u8f93\u51fa\uff1atrue\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>s1.length == s2.length</code></li> <li><code>1 &lt;= s1.length &lt;= 30</code></li> <li><code>s1</code> \u548c <code>s2</code> \u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210</li> </ul> <p>Reference</p>","tags":["\u5b57\u7b26\u4e32","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/87/#_2","title":"\u9898\u89e3","text":"<p>\u8003\u8651\u4e24\u4e2a\u5b57\u7b26\u4e32\\(s_1, s_2\\)\uff0c\u51fd\u6570\\(f(x, y)\\)\u5b9a\u4e49\u5982\u4e0b\uff1a</p> \\[ f(x, y) = \\left\\{ \\begin{aligned}     &amp; T &amp; y\\mathrm{\u662f}x\\mathrm{\u7684\u6270\u4e71\u5b57\u7b26\u4e32} \\\\     &amp; F &amp; y\\mathrm{\u4e0d\u662f}x\\mathrm{\u7684\u6270\u4e71\u5b57\u7b26\u4e32} \\end{aligned} \\right . \\] <p>\u5219\u5bf9\u4e8e\u51fd\u6570\\(f(x, y)\\)\uff0c\u6709\u5982\u4e0b\u6027\u8d28\uff1a</p> <ul> <li>\\(f(s_1, s_2) = f(s_2, s_1)\\)</li> <li>\\(f(s_1, s_1) = T\\)</li> <li>\\(f(s_1, s_2) \\land f(s_2, s_3)\\rightarrow f(s_1, s_3)\\)</li> </ul> <p>\u5373\u6270\u4e71\u5b57\u7b26\u4e32\u5173\u7cfb\u662f\u7b49\u4ef7\u5173\u7cfb\u3002</p> <p>\u5b9a\u4e49\u53e6\u4e00\u79cd\u7b49\u4ef7\u5173\u7cfb\\(g(x, y)\\)\uff1a</p> \\[ g(x, y) = \\left\\{ \\begin{aligned}     &amp; T &amp; x, y \\mathrm{\u5404\u5b57\u6bcd\u51fa\u73b0\u6b21\u6570\u76f8\u540c} \\\\     &amp; F &amp; x, y \\mathrm{\u5404\u5b57\u6bcd\u51fa\u73b0\u6b21\u6570\u4e0d\u540c} \\end{aligned} \\right . \\] <p>\u6839\u636e\u5b9a\u4e49\uff0c\u6270\u4e71\u5b57\u7b26\u4e32\u64cd\u4f5c \u4e0d\u4f1a \u6539\u53d8</p> <ol> <li>\u5b57\u7b26\u4e32\u7684\u957f\u5ea6</li> <li>\u5b57\u7b26\u4e32\u5185\u5404\u5b57\u6bcd\u7684\u51fa\u73b0\u6b21\u6570</li> </ol> <p>\u5982\u679c\\(s_1, s_2\\)\u7684\u957f\u5ea6\u4e0d\u5339\u914d\u6216\u5b57\u6bcd\u51fa\u73b0\u6b21\u6570\u4e0d\u5339\u914d\uff0c\\(f(s_1, s_2)\\)\u5373\u53ef\u63d0\u524d\u8fd4\u56de\\(F\\)\u3002</p> <p>\u8003\u8651\u5206\u5272\u540e\u7684\u5b57\u7b26\u4e32\uff0c\u5c06\\(s_1\\)\u5728\u4e0b\u6807\\(i\\)\u4e0e\u4e0b\u6807\\(i + 1\\)\u5904\u5206\u5272\u5f97\u5230\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32\u79f0\u4e3a \\(s_{1, i}, s'_{1, i}\\)\uff0c\\(s_{1, i}\\)\u4f4d\u4e8e\u5de6\u4fa7\uff0c\\(s'_{1, i}\\)\u4f4d\u4e8e\u53f3\u4fa7\u3002\u5bf9\u4e8e\\(s_2\\)\uff0c\u6709\u540c\u6837\u7684\u5206\u5272 \u65b9\u6cd5\u5f97\u5230\\(s_{2, i}, s'_{2, i}\\)\u3002\u8bbe\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a\\(s\\)\uff0c\u4ee4\\(-i\\)\u4e3a\u4ece\u5b57\u7b26\u4e32\u53f3\u4fa7\u5f00\u59cb\u7684\u4e0b\u6807\\(i\\)\u3002</p> <p>\u6839\u636e\u7b97\u6cd5\uff0c\u82e5\u4efb\u4e00\u7ec4\u5206\u5272\u540e\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32\u6ee1\u8db3\u6270\u4e71\u5b57\u7b26\u4e32\u7684\u5173\u7cfb\uff0c\u5219\u539f\u6765\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32\u6ee1\u8db3\u6270\u4e71\u5b57\u7b26\u4e32\u7684\u5173\u7cfb \uff0c\u5e76\u4e14\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e4b\u95f4\u7684\u5173\u7cfb\u4e0e\u539f\u5b57\u7b26\u4e32\u4e4b\u95f4\u7684\u5173\u7cfb\u65e0\u5173\uff0c\u4e0d\u4f1a\u76f8\u4e92\u5f71\u54cd\u3002\u56e0\u6b64\u53ef\u4ee5\u91c7\u7528\u52a8\u6001\u89c4\u5212\uff0c\u5c06\u539f \u95ee\u9898\u5206\u5272\u4e3a\u4e00\u7cfb\u5217\u66f4\u5c0f\u7684\u5b50\u95ee\u9898\u3002</p> <p>\u7531\u4e8e\\(f(s_1, s_2)\\)\u5b58\u5728\u5bf9\u79f0\u6027\uff0c\u4e0d\u59a8\u56fa\u5b9a\\(s_1\\)\u7684\u5206\u5272\u65b9\u5f0f\uff0c\u8003\u8651\\(s_2\\)\u7684\u5206\u5272\u65b9\u5f0f\u3002\\(s_2\\)\u6709\u4e24\u79cd\u5206\u5272 \u65b9\u5f0f\uff0c\u5373\u201c\u4fdd\u6301\u5b50\u5b57\u7b26\u4e32\u987a\u5e8f\u4e0d\u53d8\u201d\u6216\u201c\u4ea4\u6362\u4e24\u4e2a\u5b50\u5b57\u7b26\u4e32\u201d\u3002\u5206\u522b\u5bf9\u5e94\u4e8e\u5982\u4e0b\u60c5\u51b5\uff1a</p> <ul> <li>\\(s_{1, i}\\)\u5bf9\u5e94\u4e8e\\(s_{2, i}\\)\uff0c\\(s'_{1, i}\\)\u5bf9\u5e94\u4e8e\\(s'_{2, i}\\)\u3002</li> <li>\\(s_{1, i}\\)\u5bf9\u5e94\u4e8e\\(s'_{2, -i}\\)\uff0c\\(s'_{1, i}\\)\u5bf9\u5e94\u4e8e\\(s_{2, -i}\\)\u3002</li> </ul> <p>\u5219\\(f(s_1, s_2)\\)\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u8ba1\u7b97\uff0c\u8bbe\\(\\mathrm{len}(s_1) = \\mathrm{len}(s_2) = s\\)\u3002</p> \\[ f(s_1, s_2) = \\left\\{ \\begin{aligned}     &amp; F &amp; \\lnot g(s_1, s_2) \\\\     &amp; T &amp; s\\leq 3 \\land g(s_1, s_2) \\\\     &amp; \\left(\\bigvee_{i} f(s_{1, i}, s_{2, i})\\land f(s'_{1, i}, s'_{2, i})\\right)     \\lor     \\left(\\bigvee_{i} f(s_{1, i}, s'_{2, -i})\\land f(s'_{1, i}, s_{2, -i})\\right) &amp; s &gt; 3 \\land g(s_1, s_2)\\\\ \\end{aligned} \\right . \\] <p>\u7531\u6b64\u5373\u53ef\u5f97\u51fa\u521d\u6b65\u7684\u7b97\u6cd5\uff0c\u4f46\u591a\u6b21\u9012\u5f52\u4f1a\u4f7f\u5f97\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u5347\uff0c\u9700\u8981\u4f7f\u7528\u6570\u7ec4\u4fdd\u5b58\u5b50\u95ee\u9898\u7684\u89e3\u3002\u5171\u6709 \\(\\mathcal O(n^3)\\)\u89c4\u6a21\u7684\u5b50\u95ee\u9898\uff0c\u56e0\u6b64\u9700\u8981\u82b1\u8d39\\(\\mathcal O(n^3)\\)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0e\u7a7a\u95f4\u590d\u6742\u5ea6\u3002</p> <pre><code>inline int hash(char *s, int len)\n{\nint i, hashMap[26] = {0};\nunsigned long long ret = 0;\nfor (i = 0; i &lt; len; i++)\nhashMap[s[i] - 'a']++;\nfor (i = 0; i &lt; 26; i++)\n{\nret *= 31;\nret += hashMap[i] + 1;\nif (ret &gt; INT_MAX)\nret = ret &amp; INT_MAX;\n}\nreturn (int)ret;\n}\n\nbool helper(char *s1, int offset1, char *s2, int offset2, int len, int ***dp)\n{\nif (dp[offset1][offset2][len - 1] &gt;= 0)\nreturn dp[offset1][offset2][len - 1];\nelse if (len &lt; 4)\n{\ndp[offset1][offset2][len - 1] = hash(s1 + offset1, len) == hash(s2 + offset2, len);\nreturn dp[offset1][offset2][len - 1];\n}\nint flag = false, a, i;\ndp[offset1][offset2][len - 1] = 0;\nfor (i = 1; i &lt; len; i++)\n{\na = hash(s1 + offset1, i);\nif (a == hash(s2 + offset2, i))\nflag = flag || (\nhelper(s1, offset1, s2, offset2, i, dp) &amp;&amp; helper(s1, offset1 + i, s2, offset2 + i, len - i, dp)\n);\nif (!flag &amp;&amp; a == hash(s2 + offset2 + len - i, i))\nflag = flag || (\nhelper(s1, offset1, s2, offset2 + len - i, i, dp) &amp;&amp; helper(s1, offset1 + i, s2, offset2, len - i, dp)\n);\nif (flag)\nbreak;\n}\ndp[offset1][offset2][len - 1] = flag;\nreturn dp[offset1][offset2][len - 1];\n}\n\nbool isScramble(char * s1, char * s2){\nint len = strlen(s1), i, j,\n***dp = (int ***)malloc(sizeof(int **) * len),\n**_dp = (int **)malloc(sizeof(int *) * len * len),\n*__dp = (int *)malloc(sizeof(int) * len * len * len);\nmemset(__dp, 0xff, sizeof(int) * len * len * len);\nfor (i = 0; i &lt; len; i++)\n{\ndp[i] = _dp + i * len;\nfor (j = 0; j &lt; len; j++)\ndp[i][j] = __dp + i * len * len + j * len;\n}\nreturn helper(s1, 0, s2, 0, strlen(s1), dp);\n}\n</code></pre>","tags":["\u5b57\u7b26\u4e32","\u52a8\u6001\u89c4\u5212"]},{"location":"coding/leetcode/88/","title":"88. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/88/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e24\u4e2a\u6709\u5e8f\u6574\u6570\u6570\u7ec4\u00a0<code>nums1</code> \u548c <code>nums2</code>\uff0c\u8bf7\u4f60\u5c06 <code>nums2</code> \u5408\u5e76\u5230\u00a0<code>nums1</code>\u00a0\u4e2d\uff0c\u4f7f <code>nums1</code> \u6210\u4e3a\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\u3002</p> <p>\u8bf4\u660e:</p> <ul> <li>\u521d\u59cb\u5316\u00a0<code>nums1</code> \u548c <code>nums2</code> \u7684\u5143\u7d20\u6570\u91cf\u5206\u522b\u4e3a\u00a0<code>m</code> \u548c <code>n</code> \u3002</li> <li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u00a0<code>nums1</code>\u00a0\u6709\u8db3\u591f\u7684\u7a7a\u95f4\uff08\u7a7a\u95f4\u5927\u5c0f\u5927\u4e8e\u6216\u7b49\u4e8e\u00a0<code>m + n</code>\uff09\u6765\u4fdd\u5b58 <code>nums2</code> \u4e2d\u7684\u5143\u7d20\u3002</li> </ul> <p>\u793a\u4f8b\uff1a</p> <pre><code>\u8f93\u5165:\nnums1 = [1,2,3,0,0,0], m = 3\nnums2 = [2,5,6],       n = 3\n\n\u8f93\u51fa:\u00a0[1,2,2,3,5,6]\n</code></pre> <p>Reference</p>","tags":["\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/88/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u76f4\u63a5\u5728<code>nums1</code>\u7684\u5185\u5b58\u7a7a\u95f4\u4e0a\u4ece\u540e\u5411\u524d\u539f\u4f4d\u5408\u5e76\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>#define MAX(x, y) (x &gt; y ? x : y)\nvoid merge(int* nums1, int nums1Size, int m, int* nums2, int nums2Size, int n){\nint x = m - 1, y = n - 1;\nwhile(y &gt;= 0 &amp;&amp; x &gt;= 0)\n{\nnums1[x + y + 1] = MAX(nums1[x], nums2[y]);\nif (nums1[x] &gt; nums2[y])\nx--;\nelse\ny--;\n}\nif (y &gt;= 0)\nmemcpy(nums1, nums2, sizeof(int) * (y + 1));\n}\n</code></pre>","tags":["\u6570\u7ec4","\u53cc\u6307\u9488"]},{"location":"coding/leetcode/9/","title":"9. \u56de\u6587\u6570","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/9/#_1","title":"\u9898\u76ee","text":"<p>\u5224\u65ad\u4e00\u4e2a\u6574\u6570\u662f\u5426\u662f\u56de\u6587\u6570\u3002\u56de\u6587\u6570\u662f\u6307\u6b63\u5e8f\uff08\u4ece\u5de6\u5411\u53f3\uff09\u548c\u5012\u5e8f\uff08\u4ece\u53f3\u5411\u5de6\uff09\u8bfb\u90fd\u662f\u4e00\u6837\u7684\u6574\u6570\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165: 121\n\u8f93\u51fa: true\n</code></pre> <p>\u793a\u4f8b\u00a02\uff1a</p> <pre><code>\u8f93\u5165: -121\n\u8f93\u51fa: false\n\u89e3\u91ca: \u4ece\u5de6\u5411\u53f3\u8bfb, \u4e3a -121 \u3002 \u4ece\u53f3\u5411\u5de6\u8bfb, \u4e3a 121- \u3002\u56e0\u6b64\u5b83\u4e0d\u662f\u4e00\u4e2a\u56de\u6587\u6570\u3002\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165: 10\n\u8f93\u51fa: false\n\u89e3\u91ca: \u4ece\u53f3\u5411\u5de6\u8bfb, \u4e3a 01 \u3002\u56e0\u6b64\u5b83\u4e0d\u662f\u4e00\u4e2a\u56de\u6587\u6570\u3002\n</code></pre> <p>\u8fdb\u9636\uff1a</p> <p>\u4f60\u80fd\u4e0d\u5c06\u6574\u6570\u8f6c\u4e3a\u5b57\u7b26\u4e32\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f</p> <p>Reference</p>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/9/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a </p> <ol> <li>\u5c0f\u4e8e0\u7684\u6570\u5fc5\u7136\u4e0d\u662f\u56de\u6587\u6570\uff1b</li> <li>\u5bf9\u4e8e\u975e\u8d1f\u6574\u6570\uff0c\u53ea\u9700\u8981\u5224\u65ad\u6309\u4f4d\u53cd\u8f6c\u540e\u7684\u6570\u503c\u4e0e\u539f\u6570\u503c\u662f\u5426\u76f8\u7b49\u5373\u53ef\u3002</li> </ol> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>bool isPalindrome(int x){\nif (x &lt; 0)\nreturn false;\nlong transformed = 0, original = x;\nwhile (x)\n{\ntransformed *= 10;\ntransformed += x % 10;\nx /= 10;\n}\nreturn transformed == original;\n}\n</code></pre>","tags":["\u6570\u5b66"]},{"location":"coding/leetcode/90/","title":"90. \u5b50\u96c6 II","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6570\u7ec4","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/90/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>nums</code> \uff0c\u5176\u4e2d\u53ef\u80fd\u5305\u542b\u91cd\u590d\u5143\u7d20\uff0c\u8bf7\u4f60\u8fd4\u56de\u8be5\u6570\u7ec4\u6240\u6709\u53ef\u80fd\u7684\u5b50\u96c6\uff08\u5e42\u96c6\uff09\u3002</p> <p>\u89e3\u96c6 \u4e0d\u80fd \u5305\u542b\u91cd\u590d\u7684\u5b50\u96c6\u3002\u8fd4\u56de\u7684\u89e3\u96c6\u4e2d\uff0c\u5b50\u96c6\u53ef\u4ee5\u6309 \u4efb\u610f\u987a\u5e8f \u6392\u5217\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [1,2,2]\n\u8f93\u51fa\uff1a[[],[1],[1,2],[1,2,2],[2],[2,2]]\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [0]\n\u8f93\u51fa\uff1a[[],[0]]\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>1 &lt;= nums.length &lt;= 10</code></li> <li><code>-10 &lt;= nums[i] &lt;= 10</code></li> </ul> <p>Reference</p>","tags":["\u6570\u7ec4","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/90/#_2","title":"\u9898\u89e3","text":"<p>\u5148\u7edf\u8ba1\u96c6\u5408\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u518d\u6839\u636e\u51fa\u73b0\u6b21\u6570\u8fdb\u884c\u56de\u6eaf\uff0c\u6700\u540e\u91cd\u65b0\u751f\u6210\u6bcf\u4e2a\u96c6\u5408\u3002</p> <pre><code>/**\n * Return an array of arrays of size *returnSize.\n * The sizes of the arrays are returned as *returnColumnSizes array.\n * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().\n */\nint *convert(int *count, int countLen, int *returnSize)\n{\nint i = 0, j = 0, k = 0;\n*returnSize = 0;\nfor (i = 0; i &lt; countLen; i++)\n(*returnSize) += count[i];\nint *ret = (int *)malloc(sizeof(int) * *returnSize);\nfor (i = 0; i &lt; countLen; i++)\nfor (j = 0; j &lt; count[i]; j++)\nret[k++] = i - 10;\nreturn ret;\n}\n\nvoid dfs(int **ret, int *retSize, int *count, int *current, int currentPos, int maxPos, int *number)\n{\nif (currentPos == maxPos)\n{\nret[*number] = convert(current, maxPos, retSize + *number);\n(*number)++;\n}\nelse\n{\nif (count[currentPos] == 0)\ndfs(ret, retSize, count, current, currentPos + 1, maxPos, number);\nelse\n{\nint i = 0;\nfor (i = 0; i &lt;= count[currentPos]; i++)\n{\ncurrent[currentPos] = i;\ndfs(ret, retSize, count, current, currentPos + 1, maxPos, number);\ncurrent[currentPos] = 0;\n}\n}\n}\n}\n\nint** subsetsWithDup(int* nums, int numsSize, int* returnSize, int** returnColumnSizes){\nint *count = (int *)malloc(sizeof(int) * 21), *buffer = (int *)malloc(sizeof(int) * 21),\ni = 0, **ret = NULL;\nmemset(count, 0, sizeof(int) * 21);\nmemset(buffer, 0, sizeof(int) * 21);\n*returnSize = 1;\nfor (i = 0; i &lt; numsSize; i++)\ncount[nums[i] + 10]++;\nfor (i = 0; i &lt; 21; i++)\n*returnSize *= count[i] + 1;\n*returnColumnSizes = (int *)malloc(sizeof(int) * *returnSize);\nret = (int **)malloc(sizeof(int *) * *returnSize);\ni = 0;\ndfs(ret, *returnColumnSizes, count, buffer, 0, 21, &amp;i);\nreturn ret;\n}\n</code></pre>","tags":["\u6570\u7ec4","\u56de\u6eaf\u7b97\u6cd5"]},{"location":"coding/leetcode/917/","title":"917. \u4ec5\u4ec5\u53cd\u8f6c\u5b57\u6bcd","text":"<p>\u96be\u5ea6\uff1a\u7b80\u5355</p>","tags":["\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/917/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u00a0<code>S</code>\uff0c\u8fd4\u56de\u00a0\u201c\u53cd\u8f6c\u540e\u7684\u201d\u00a0\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d\u4e0d\u662f\u5b57\u6bcd\u7684\u5b57\u7b26\u90fd\u4fdd\u7559\u5728\u539f\u5730\uff0c\u800c\u6240\u6709\u5b57\u6bcd\u7684\u4f4d\u7f6e\u53d1\u751f\u53cd\u8f6c\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1a\"ab-cd\"\n\u8f93\u51fa\uff1a\"dc-ba\"\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1a\"a-bC-dEf-ghIj\"\n\u8f93\u51fa\uff1a\"j-Ih-gfE-dCba\"\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1a\"Test1ng-Leet=code-Q!\"\n\u8f93\u51fa\uff1a\"Qedo1ct-eeLg=ntse-T!\"\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li><code>S.length &lt;= 100</code></li> <li><code>33 &lt;= S[i].ASCIIcode &lt;= 122</code></li> <li><code>S</code> \u4e2d\u4e0d\u5305\u542b\u00a0<code>\\</code> or <code>\"</code></li> </ul> <p>Reference</p>","tags":["\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/917/#_2","title":"\u9898\u89e3","text":"<p>\u548c\u53cd\u8f6c\u5b57\u7b26\u4e32\u4f7f\u7528\u76f8\u540c\u7684\u601d\u8def\uff0c\u53ea\u9700\u52a0\u4e0a\u5bf9\u5f53\u524d\u5b57\u7b26\u7684\u5224\u65ad\u5373\u53ef\u3002</p> <pre><code>bool isChar(char *s)\n{\nreturn (*s &gt;= 'a' &amp;&amp; *s &lt;= 'z') || (*s &gt;= 'A' &amp;&amp; *s &lt;= 'Z');\n}\nchar * reverseOnlyLetters(char * S) {\nint len = strlen(S);\nchar *head = S, *tail = S + len - 1, temp;\nwhile (tail &gt; head)\n{\nwhile (!isChar(head) &amp;&amp; head &lt; tail)\nhead++;\nwhile (!isChar(tail) &amp;&amp; head &lt; tail)\ntail--;\ntemp = *head;\n*head = *tail;\n*tail = temp;\nhead++;\ntail--;\n}\nreturn S;\n}\n</code></pre>","tags":["\u5b57\u7b26\u4e32"]},{"location":"coding/leetcode/92/","title":"92. \u53cd\u8f6c\u94fe\u8868 II","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/92/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u5355\u94fe\u8868\u7684\u5934\u8282\u70b9\u00a0<code>head</code> \u548c\u4e24\u4e2a\u6574\u6570\u00a0<code>left</code> \u548c <code>right</code> \uff0c\u5176\u4e2d\u00a0<code>left &lt;= right</code> \u3002\u8bf7\u4f60\u53cd\u8f6c\u4ece\u4f4d\u7f6e <code>left</code> \u5230\u4f4d\u7f6e <code>right</code> \u7684\u94fe\u8868\u8282\u70b9\uff0c\u8fd4\u56de \u53cd\u8f6c\u540e\u7684\u94fe\u8868 \u3002</p> <p></p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1ahead = [1,2,3,4,5], left = 2, right = 4\n\u8f93\u51fa\uff1a[1,4,3,2,5]\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1ahead = [5], left = 1, right = 1\n\u8f93\u51fa\uff1a[5]\n</code></pre> <p>\u63d0\u793a\uff1a</p> <ul> <li>\u94fe\u8868\u4e2d\u8282\u70b9\u6570\u76ee\u4e3a <code>n</code></li> <li><code>1 &lt;= n &lt;= 500</code></li> <li><code>-500 &lt;= Node.val &lt;= 500</code></li> <li><code>1 &lt;= left &lt;= right &lt;= n</code></li> </ul> <p>Reference</p>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/92/#_2","title":"\u9898\u89e3","text":"<p>\u5148\u8003\u8651\u53cd\u8f6c\u6574\u4e2a\u94fe\u8868\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e09\u6307\u9488\u6cd5\u5728\\(\\mathcal O(N)\\)\u7684\u65f6\u95f4\u5185\u4f7f\u7528\\(\\mathcal O(1)\\)\u7684\u7a7a\u95f4\u53cd\u8f6c\u94fe\u8868</p> <p>\u94fe\u8868\u53cd\u8f6c\u7684\u4e09\u6307\u9488\u6cd5\uff1a\u5b9a\u4e49<code>cur1, cur2, cur3</code>\u4e09\u4e2a\u6307\u9488\uff0c\u5206\u522b\u6307\u5411\u94fe\u8868\u7684\u5934\u8282\u70b9\u3001\u7b2c\u4e8c\u4e2a\u8282\u70b9\u4e0e\u7b2c\u4e09\u4e2a\u8282\u70b9\u3002\u6307\u9488<code>cur1, cur2</code>\u7528\u4e8e\u4ea4\u6362\u94fe\u8868\u8282\u70b9\u7684\u8fde\u63a5\u65b9\u5411\u3002\u7531\u4e8e\u4ea4\u6362\u8282\u70b9\u64cd\u4f5c\u7834\u574f\u4e86\u539f\u6709\u7684\u8fde\u63a5\u7ed3\u6784\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u6307\u9488<code>cur3</code>\u7528\u4e8e\u79fb\u52a8\u6307\u9488\u3002</p> <p>\u4e09\u6307\u9488\u6cd5\u7684\u4e3b\u8981\u6d41\u7a0b\u5982\u4e0b\u56fe\uff1a</p> <ol> <li>\u521d\u59cb\u5316<code>cur1, cur2, cur3</code>\uff0c\u7f6e<code>cur1-&gt;next</code>\u4e3a<code>NULL</code></li> <li>\u4ee4<code>cur2-&gt;next = cur1</code>\uff0c\u5b8c\u6210\u4ea4\u6362\u64cd\u4f5c</li> <li>\u4ee4<code>cur1 = cur2</code></li> <li>\u4ee4<code>cur2 = cur3</code></li> <li>\u5982\u679c<code>cur3</code>\u4e0d\u4e3a<code>NULL</code>\uff0c<code>cur3</code>\u5728\u94fe\u8868\u4e0a\u5411\u524d\u79fb\u52a8\uff0c\u7136\u540e\u8fd4\u56de2</li> <li>\u5982\u679c<code>cur3</code>\u4e3a<code>NULL</code>\uff0c\u7ed3\u675f</li> <li>\u8fd4\u56de<code>cur2</code></li> </ol> <p></p> <p>\u53cd\u8f6c\u7ed9\u5b9a\u8303\u56f4\u5185\u7684\u94fe\u8868\uff0c\u9700\u8981\u6ce8\u610f\u5982\u4e0b\u60c5\u51b5\uff1a</p> <ul> <li>\u5982\u679c\u53cd\u8f6c\u533a\u95f4\u4ece\u7b2c\u4e00\u4e2a\u8282\u70b9\u5f00\u59cb\uff0c\u94fe\u8868\u7684\u5934\u8282\u70b9\u4f1a\u6539\u53d8\uff0c\u5426\u5219\u4e0d\u6539\u53d8</li> <li>\u5982\u679c\u533a\u95f4\u957f\u5ea6\u4e3a1\uff0c\u5219\u65e0\u9700\u53cd\u8f6c</li> <li>\u53cd\u8f6c\u540e\u9700\u8981\u66f4\u65b0\u53cd\u8f6c\u533a\u95f4\u524d\u540e\u7684\u8282\u70b9\u8fde\u63a5\u5173\u7cfb</li> </ul> <p>\u6574\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\nstruct ListNode* reverseBetween(struct ListNode* head, int left, int right){\nif (left == right)\nreturn head;\nstruct ListNode *cur = head, *prev = NULL;\nleft--;\nright--;\nwhile (left)\n{\nleft--;\nright--;\nprev = cur;\ncur = cur-&gt;next;\n}\nstruct ListNode * cur2 = cur-&gt;next, *cur3 = cur2-&gt;next, *tail = cur;\nwhile (right)\n{\ncur2-&gt;next = cur;\ncur = cur2;\ncur2 = cur3;\nif (cur3)\ncur3 = cur3-&gt;next;\nelse\nbreak;\nright--;\n}\ntail-&gt;next = cur2;\nif (prev)\nprev-&gt;next = cur;\nreturn prev ? head : cur;\n}\n</code></pre>","tags":["\u94fe\u8868"]},{"location":"coding/leetcode/98/","title":"98. \u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811","text":"<p>\u96be\u5ea6\uff1a\u4e2d\u7b49</p>","tags":["\u6811","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u9012\u5f52"]},{"location":"coding/leetcode/98/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u5224\u65ad\u5176\u662f\u5426\u662f\u4e00\u4e2a\u6709\u6548\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u3002</p> <p>\u5047\u8bbe\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811\u5177\u6709\u5982\u4e0b\u7279\u5f81\uff1a</p> <ul> <li>\u8282\u70b9\u7684\u5de6\u5b50\u6811\u53ea\u5305\u542b\u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u6570\u3002</li> <li>\u8282\u70b9\u7684\u53f3\u5b50\u6811\u53ea\u5305\u542b\u5927\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u6570\u3002</li> <li>\u6240\u6709\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u81ea\u8eab\u5fc5\u987b\u4e5f\u662f\u4e8c\u53c9\u641c\u7d22\u6811\u3002</li> </ul> <p>\u793a\u4f8b\u00a01\uff1a</p> <pre><code>\u8f93\u5165:\n    2\n   / \\\n  1   3\n\u8f93\u51fa: true\n</code></pre> <p>\u793a\u4f8b\u00a02\uff1a</p> <pre><code>\u8f93\u5165:\n    5\n   / \\\n  1   4\n\u00a0    / \\\n\u00a0   3   6\n\u8f93\u51fa: false\n\u89e3\u91ca: \u8f93\u5165\u4e3a: [5,1,4,null,null,3,6]\u3002\n\u00a0    \u6839\u8282\u70b9\u7684\u503c\u4e3a 5 \uff0c\u4f46\u662f\u5176\u53f3\u5b50\u8282\u70b9\u503c\u4e3a 4 \u3002\n</code></pre> <p>Reference</p>","tags":["\u6811","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u9012\u5f52"]},{"location":"coding/leetcode/98/#_2","title":"\u9898\u89e3","text":"<p>\u57fa\u672c\u601d\u8def\uff1a \u5c06\u4e8c\u53c9\u67e5\u627e\u6811\u4e2d\u5e8f\u5c55\u5f00\u4e3a\u94fe\u8868\uff0c\u5224\u65ad\u94fe\u8868\u662f\u5426\u662f\u6709\u5e8f\u7684\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     struct TreeNode *left;\n *     struct TreeNode *right;\n * };\n */\nstruct ListNode *insert(struct ListNode *List, int val)\n{\nstruct ListNode *ret = malloc(sizeof(struct ListNode));\nret-&gt;val = val;\nret-&gt;next = List;\nreturn ret;\n}\nstruct ListNode *toList(struct TreeNode *root, struct ListNode *List)\n{\nif (root == NULL)\nreturn List;\nList = toList(root-&gt;right, List);\nList = insert(List, root-&gt;val);\nList = toList(root-&gt;left, List);\nreturn List;\n}\nbool isValidBST(struct TreeNode* root){\nif (root == NULL)\nreturn true;\nstruct ListNode *rec = toList(root, NULL), *cur = rec;\ndo\n{\nif (cur-&gt;next == NULL)\nbreak;\nif (cur-&gt;val &gt;= cur-&gt;next-&gt;val)\nreturn false;\ncur = cur-&gt;next;\n}\nwhile (true);\nreturn true;\n}\n</code></pre>","tags":["\u6811","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u9012\u5f52"]},{"location":"coding/leetcode/tags/","title":"Leetcode \u9898\u76ee","text":"<p>\u70b9\u51fb\u53f3\u4fa7\u76ee\u5f55\u53ef\u4ee5\u8df3\u8f6c\u5230\u5bf9\u5e94\u7684\u6807\u7b7e</p>"},{"location":"coding/leetcode/tags/#_1","title":"\u6570\u7ec4","text":"<p>\u6570\u7ec4\u6807\u7b7e\u4e0b\u5171\u670931\u9053\u9898\u76ee</p> \u6570\u7ec4 \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 1. \u4e24\u6570\u4e4b\u548c 26. \u5220\u9664\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879 27. \u79fb\u9664\u5143\u7d20 35. \u641c\u7d22\u63d2\u5165\u4f4d\u7f6e 42. \u63a5\u96e8\u6c34 48. \u65cb\u8f6c\u56fe\u50cf 53. \u6700\u5927\u5b50\u5e8f\u548c 55. \u8df3\u8dc3\u6e38\u620f 56. \u5408\u5e76\u533a\u95f4 59. \u87ba\u65cb\u77e9\u9635 II 62. \u4e0d\u540c\u8def\u5f84 64. \u6700\u5c0f\u8def\u5f84\u548c 66. \u52a0\u4e00 73. \u77e9\u9635\u7f6e\u96f6 74. \u641c\u7d22\u4e8c\u7ef4\u77e9\u9635 75. \u989c\u8272\u5206\u7c7b 78. \u5b50\u96c6 79. \u5355\u8bcd\u641c\u7d22 88. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4 90. \u5b50\u96c6 II 118. \u6768\u8f89\u4e09\u89d2 119. \u6768\u8f89\u4e09\u89d2 II 120. \u4e09\u89d2\u5f62\u6700\u5c0f\u8def\u5f84\u548c 121. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a 122. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II 189. \u65cb\u8f6c\u6570\u7ec4 217. \u5b58\u5728\u91cd\u590d\u5143\u7d20 384. \u6253\u4e71\u6570\u7ec4 509. \u6590\u6ce2\u90a3\u5951\u6570 1011. \u5728 D \u5929\u5185\u9001\u8fbe\u5305\u88f9\u7684\u80fd\u529b 1300. \u8f6c\u53d8\u6570\u7ec4\u540e\u6700\u63a5\u8fd1\u76ee\u6807\u503c\u7684\u6570\u7ec4\u548c"},{"location":"coding/leetcode/tags/#_2","title":"\u5b57\u7b26\u4e32","text":"<p>\u5b57\u7b26\u4e32\u6807\u7b7e\u4e0b\u5171\u670916\u9053\u9898\u76ee</p> \u5b57\u7b26\u4e32 \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 3. \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32 8. \u5b57\u7b26\u4e32\u8f6c\u6362\u6574\u6570 (atoi) 13. \u7f57\u9a6c\u6570\u5b57\u8f6c\u6574\u6570 14. \u6700\u957f\u516c\u5171\u524d\u7f00 17. \u7535\u8bdd\u53f7\u7801\u7684\u5b57\u6bcd\u7ec4\u5408 20. \u6709\u6548\u7684\u62ec\u53f7 22. \u62ec\u53f7\u751f\u6210 28. \u5b9e\u73b0 strStr() 38. \u5916\u89c2\u6570\u5217 43. \u5b57\u7b26\u4e32\u76f8\u4e58 87. \u6270\u4e71\u5b57\u7b26\u4e32 115. \u4e0d\u540c\u7684\u5b50\u5e8f\u5217 125. \u9a8c\u8bc1\u56de\u6587\u4e32 344. \u53cd\u8f6c\u5b57\u7b26\u4e32 387. \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 917. \u4ec5\u4ec5\u53cd\u8f6c\u5b57\u6bcd"},{"location":"coding/leetcode/tags/#_3","title":"\u6570\u5b66","text":"<p>\u6570\u5b66\u6807\u7b7e\u4e0b\u5171\u670915\u9053\u9898\u76ee</p> \u6570\u5b66 \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 2. \u4e24\u6570\u76f8\u52a0 7. \u6574\u6570\u53cd\u8f6c 8. \u5b57\u7b26\u4e32\u8f6c\u6362\u6574\u6570 (atoi) 9. \u56de\u6587\u6570 11. \u76db\u6700\u591a\u6c34\u7684\u5bb9\u5668 13. \u7f57\u9a6c\u6570\u5b57\u8f6c\u6574\u6570 14. \u6700\u957f\u516c\u5171\u524d\u7f00 43. \u5b57\u7b26\u4e32\u76f8\u4e58 50. Pow(x, n) 69. x \u7684\u5e73\u65b9\u6839 204. \u8ba1\u6570\u8d28\u6570 368. \u6700\u5927\u6574\u9664\u5b50\u96c6 781. \u68ee\u6797\u4e2d\u7684\u5154\u5b50 1006. \u7b28\u9636\u4e58 1835. \u6240\u6709\u6570\u5bf9\u6309\u4f4d\u4e0e\u7ed3\u679c\u7684\u5f02\u6216\u548c"},{"location":"coding/leetcode/tags/#_4","title":"\u53cc\u6307\u9488","text":"<p>\u53cc\u6307\u9488\u6807\u7b7e\u4e0b\u5171\u670914\u9053\u9898\u76ee</p> \u53cc\u6307\u9488 \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 3. \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32 11. \u76db\u6700\u591a\u6c34\u7684\u5bb9\u5668 19. \u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2cN\u4e2a\u8282\u70b9 26. \u5220\u9664\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879 27. \u79fb\u9664\u5143\u7d20 28. \u5b9e\u73b0 strStr() 42. \u63a5\u96e8\u6c34 61. \u65cb\u8f6c\u94fe\u8868 75. \u989c\u8272\u5206\u7c7b 88. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4 125. \u9a8c\u8bc1\u56de\u6587\u4e32 234. \u56de\u6587\u94fe\u8868 344. \u53cd\u8f6c\u5b57\u7b26\u4e32 350. \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6 II"},{"location":"coding/leetcode/tags/#_5","title":"\u52a8\u6001\u89c4\u5212","text":"<p>\u52a8\u6001\u89c4\u5212\u6807\u7b7e\u4e0b\u5171\u670913\u9053\u9898\u76ee</p> \u52a8\u6001\u89c4\u5212 \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 42. \u63a5\u96e8\u6c34 53. \u6700\u5927\u5b50\u5e8f\u548c 62. \u4e0d\u540c\u8def\u5f84 64. \u6700\u5c0f\u8def\u5f84\u548c 70. \u722c\u697c\u68af 87. \u6270\u4e71\u5b57\u7b26\u4e32 115. \u4e0d\u540c\u7684\u5b50\u5e8f\u5217 120. \u4e09\u89d2\u5f62\u6700\u5c0f\u8def\u5f84\u548c 121. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a 198. \u6253\u5bb6\u52ab\u820d 368. \u6700\u5927\u6574\u9664\u5b50\u96c6 377. \u7ec4\u5408\u603b\u548c \u2163 403. \u9752\u86d9\u8fc7\u6cb3"},{"location":"coding/leetcode/tags/#_6","title":"\u54c8\u5e0c\u8868","text":"<p>\u54c8\u5e0c\u8868\u6807\u7b7e\u4e0b\u5171\u670912\u9053\u9898\u76ee</p> \u54c8\u5e0c\u8868 \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 1. \u4e24\u6570\u4e4b\u548c 3. \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32 36. \u6709\u6548\u7684\u6570\u72ec 37. \u89e3\u6570\u72ec 136. \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57 204. \u8ba1\u6570\u8d28\u6570 217. \u5b58\u5728\u91cd\u590d\u5143\u7d20 242. \u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd 350. \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6 II 387. \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 433. \u6700\u5c0f\u57fa\u56e0\u53d8\u5316 781. \u68ee\u6797\u4e2d\u7684\u5154\u5b50"},{"location":"coding/leetcode/tags/#_7","title":"\u94fe\u8868","text":"<p>\u94fe\u8868\u6807\u7b7e\u4e0b\u5171\u670911\u9053\u9898\u76ee</p> \u94fe\u8868 \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 2. \u4e24\u6570\u76f8\u52a0 19. \u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2cN\u4e2a\u8282\u70b9 21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868 23. \u5408\u5e76K\u4e2a\u5347\u5e8f\u94fe\u8868 24. \u4e24\u4e24\u4ea4\u6362\u94fe\u8868\u4e2d\u7684\u8282\u70b9 25. K \u4e2a\u4e00\u7ec4\u7ffb\u8f6c\u94fe\u8868 61. \u65cb\u8f6c\u94fe\u8868 92. \u53cd\u8f6c\u94fe\u8868 II 206. \u53cd\u8f6c\u94fe\u8868 234. \u56de\u6587\u94fe\u8868 237. \u5220\u9664\u94fe\u8868\u4e2d\u7684\u8282\u70b9"},{"location":"coding/leetcode/tags/#_8","title":"\u4e8c\u5206\u67e5\u627e","text":"<p>\u4e8c\u5206\u67e5\u627e\u6807\u7b7e\u4e0b\u5171\u67099\u9053\u9898\u76ee</p> \u4e8c\u5206\u67e5\u627e \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 35. \u641c\u7d22\u63d2\u5165\u4f4d\u7f6e 50. Pow(x, n) 69. x \u7684\u5e73\u65b9\u6839 74. \u641c\u7d22\u4e8c\u7ef4\u77e9\u9635 315. \u8ba1\u7b97\u53f3\u4fa7\u5c0f\u4e8e\u5f53\u524d\u5143\u7d20\u7684\u4e2a\u6570 350. \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6 II 1011. \u5728 D \u5929\u5185\u9001\u8fbe\u5305\u88f9\u7684\u80fd\u529b 1283. \u4f7f\u7ed3\u679c\u4e0d\u8d85\u8fc7\u9608\u503c\u7684\u6700\u5c0f\u9664\u6570 1300. \u8f6c\u53d8\u6570\u7ec4\u540e\u6700\u63a5\u8fd1\u76ee\u6807\u503c\u7684\u6570\u7ec4\u548c"},{"location":"coding/leetcode/tags/#_9","title":"\u56de\u6eaf\u7b97\u6cd5","text":"<p>\u56de\u6eaf\u7b97\u6cd5\u6807\u7b7e\u4e0b\u5171\u67097\u9053\u9898\u76ee</p> \u56de\u6eaf\u7b97\u6cd5 \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 17. \u7535\u8bdd\u53f7\u7801\u7684\u5b57\u6bcd\u7ec4\u5408 22. \u62ec\u53f7\u751f\u6210 37. \u89e3\u6570\u72ec 46. \u5168\u6392\u5217 78. \u5b50\u96c6 79. \u5355\u8bcd\u641c\u7d22 90. \u5b50\u96c6 II"},{"location":"coding/leetcode/tags/#_10","title":"\u9012\u5f52","text":"<p>\u9012\u5f52\u6807\u7b7e\u4e0b\u5171\u67096\u9053\u9898\u76ee</p> \u9012\u5f52 \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 2. \u4e24\u6570\u76f8\u52a0 17. \u7535\u8bdd\u53f7\u7801\u7684\u5b57\u6bcd\u7ec4\u5408 21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868 24. \u4e24\u4e24\u4ea4\u6362\u94fe\u8868\u4e2d\u7684\u8282\u70b9 98. \u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811 779. \u7b2cK\u4e2a\u8bed\u6cd5\u7b26\u53f7"},{"location":"coding/leetcode/tags/#_11","title":"\u6808","text":"<p>\u6808\u6807\u7b7e\u4e0b\u5171\u67095\u9053\u9898\u76ee</p> \u6808 \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 20. \u6709\u6548\u7684\u62ec\u53f7 42. \u63a5\u96e8\u6c34 150. \u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u6c42\u503c 155. \u6700\u5c0f\u6808 341. \u6241\u5e73\u5316\u5d4c\u5957\u5217\u8868\u8fed\u4ee3\u5668"},{"location":"coding/leetcode/tags/#_12","title":"\u6392\u5e8f","text":"<p>\u6392\u5e8f\u6807\u7b7e\u4e0b\u5171\u67095\u9053\u9898\u76ee</p> \u6392\u5e8f \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 56. \u5408\u5e76\u533a\u95f4 75. \u989c\u8272\u5206\u7c7b 242. \u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd 315. \u8ba1\u7b97\u53f3\u4fa7\u5c0f\u4e8e\u5f53\u524d\u5143\u7d20\u7684\u4e2a\u6570 350. \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6 II"},{"location":"coding/leetcode/tags/#_13","title":"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","text":"<p>\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u6807\u7b7e\u4e0b\u5171\u67094\u9053\u9898\u76ee</p> \u6df1\u5ea6\u4f18\u5148\u641c\u7d22 \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 17. \u7535\u8bdd\u53f7\u7801\u7684\u5b57\u6bcd\u7ec4\u5408 98. \u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811 101. \u5bf9\u79f0\u4e8c\u53c9\u6811 488. \u7956\u739b\u6e38\u620f"},{"location":"coding/leetcode/tags/#_14","title":"\u6811","text":"<p>\u6811\u6807\u7b7e\u4e0b\u5171\u67093\u9053\u9898\u76ee</p> \u6811 \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 98. \u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811 101. \u5bf9\u79f0\u4e8c\u53c9\u6811 102. \u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386"},{"location":"coding/leetcode/tags/#_15","title":"\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22","text":"<p>\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u6807\u7b7e\u4e0b\u5171\u67093\u9053\u9898\u76ee</p> \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22 \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 101. \u5bf9\u79f0\u4e8c\u53c9\u6811 102. \u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386 433. \u6700\u5c0f\u57fa\u56e0\u53d8\u5316"},{"location":"coding/leetcode/tags/#_16","title":"\u8bbe\u8ba1","text":"<p>\u8bbe\u8ba1\u6807\u7b7e\u4e0b\u5171\u67093\u9053\u9898\u76ee</p> \u8bbe\u8ba1 \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 155. \u6700\u5c0f\u6808 341. \u6241\u5e73\u5316\u5d4c\u5957\u5217\u8868\u8fed\u4ee3\u5668 1603. \u8bbe\u8ba1\u505c\u8f66\u7cfb\u7edf"},{"location":"coding/leetcode/tags/#_17","title":"\u5206\u6cbb\u7b97\u6cd5","text":"<p>\u5206\u6cbb\u7b97\u6cd5\u6807\u7b7e\u4e0b\u5171\u67093\u9053\u9898\u76ee</p> \u5206\u6cbb\u7b97\u6cd5 \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 23. \u5408\u5e76K\u4e2a\u5347\u5e8f\u94fe\u8868 53. \u6700\u5927\u5b50\u5e8f\u548c 315. \u8ba1\u7b97\u53f3\u4fa7\u5c0f\u4e8e\u5f53\u524d\u5143\u7d20\u7684\u4e2a\u6570"},{"location":"coding/leetcode/tags/#_18","title":"\u8d2a\u5fc3\u7b97\u6cd5","text":"<p>\u8d2a\u5fc3\u7b97\u6cd5\u6807\u7b7e\u4e0b\u5171\u67092\u9053\u9898\u76ee</p> \u8d2a\u5fc3\u7b97\u6cd5 \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 55. \u8df3\u8dc3\u6e38\u620f 122. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II"},{"location":"coding/leetcode/tags/#_19","title":"\u4f4d\u8fd0\u7b97","text":"<p>\u4f4d\u8fd0\u7b97\u6807\u7b7e\u4e0b\u5171\u67092\u9053\u9898\u76ee</p> \u4f4d\u8fd0\u7b97 \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 78. \u5b50\u96c6 136. \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57"},{"location":"coding/leetcode/tags/#_20","title":"\u5806","text":"<p>\u5806\u6807\u7b7e\u4e0b\u5171\u67091\u9053\u9898\u76ee</p> \u5806 \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 23. \u5408\u5e76K\u4e2a\u5347\u5e8f\u94fe\u8868"},{"location":"coding/leetcode/tags/#sliding-window","title":"Sliding Window","text":"<p>Sliding Window\u6807\u7b7e\u4e0b\u5171\u67091\u9053\u9898\u76ee</p> Sliding Window \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 3. \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32"},{"location":"coding/leetcode/tags/#_21","title":"\u6811\u72b6\u6570\u7ec4","text":"<p>\u6811\u72b6\u6570\u7ec4\u6807\u7b7e\u4e0b\u5171\u67091\u9053\u9898\u76ee</p> \u6811\u72b6\u6570\u7ec4 \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 315. \u8ba1\u7b97\u53f3\u4fa7\u5c0f\u4e8e\u5f53\u524d\u5143\u7d20\u7684\u4e2a\u6570"},{"location":"coding/leetcode/tags/#_22","title":"\u7ebf\u6bb5\u6811","text":"<p>\u7ebf\u6bb5\u6811\u6807\u7b7e\u4e0b\u5171\u67091\u9053\u9898\u76ee</p> \u7ebf\u6bb5\u6811 \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee \u9898\u76ee 315. \u8ba1\u7b97\u53f3\u4fa7\u5c0f\u4e8e\u5f53\u524d\u5143\u7d20\u7684\u4e2a\u6570"},{"location":"coding/machine-learning/","title":"\u673a\u5668\u5b66\u4e60","text":"<p>\u90e8\u5206\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684Python\u5b9e\u73b0</p> <ol> <li>\u7ebf\u6027\u6a21\u578b</li> <li>\u51b3\u7b56\u6811</li> </ol>"},{"location":"coding/machine-learning/decision-tree/","title":"\u51b3\u7b56\u6811","text":"In\u00a0[1]: Copied! <pre>import numpy as np\nimport pandas as pd\nimport typing as T\n</pre> import numpy as np import pandas as pd import typing as T <p>\u4ee5\u4e0b\u8003\u8651\u897f\u74dc\u6570\u636e\u96c63.0\u4e2d\u7b2c\u4e00\u6b65\u5212\u5206\u7684\u5c5e\u6027\u9009\u62e9\u3002</p> In\u00a0[2]: Copied! <pre>df = pd.read_csv('data/melon3.0a.csv')\nattributes = ['\u8272\u6cfd', '\u6839\u8482', '\u6572\u58f0', '\u7eb9\u7406', '\u8110\u90e8', '\u89e6\u611f']\ncategory = '\u597d\u74dc'\n</pre> df = pd.read_csv('data/melon3.0a.csv') attributes = ['\u8272\u6cfd', '\u6839\u8482', '\u6572\u58f0', '\u7eb9\u7406', '\u8110\u90e8', '\u89e6\u611f'] category = '\u597d\u74dc' <p>\u4fe1\u606f\u589e\u76ca\u57fa\u4e8e\u4fe1\u606f\u71b5\uff0c\u5728\u6bcf\u4e00\u6b21\u5212\u5206\u540e\uff0c\u96c6\u5408\u7684\u4fe1\u606f\u71b5\u4e4b\u548c\uff08\u6309\u6bd4\u4f8b\u52a0\u6743\uff09\u4f1a\u51cf\u5c0f\u4fe1\u606f\u589e\u76ca\u5373\u4e3a\u539f\u4fe1\u606f\u71b5\u4e0e\u5212\u5206\u540e\u7684\u4fe1\u606f\u71b5\u4e4b\u5dee\u3002</p> In\u00a0[3]: Copied! <pre>def entropy(df, target_col):\n    p = df[target_col].value_counts() / len(df)\n    return -sum(p * np.log2(p))\n\ndef conditional_entropy(df, discrete_col, target_col):\n    ret = 0\n    for val in df[discrete_col].unique():\n        p = len(df[df[discrete_col] == val]) / len(df) # \u6bd4\u4f8b\n        ret += p * entropy(df[df[discrete_col] == val], target_col)\n    return ret\n\ndef calc_gain(df, attributes, category) -&gt; T.Dict[str, float]:\n    entropy_original = entropy(df, category)\n    return {\n        k: entropy_original - conditional_entropy(df, k, category)\n        for k in attributes\n    }\n\ngain = pd.DataFrame([calc_gain(df, attributes, category)], index=['\u4fe1\u606f\u589e\u76ca'])\ngain\n</pre> def entropy(df, target_col):     p = df[target_col].value_counts() / len(df)     return -sum(p * np.log2(p))  def conditional_entropy(df, discrete_col, target_col):     ret = 0     for val in df[discrete_col].unique():         p = len(df[df[discrete_col] == val]) / len(df) # \u6bd4\u4f8b         ret += p * entropy(df[df[discrete_col] == val], target_col)     return ret  def calc_gain(df, attributes, category) -&gt; T.Dict[str, float]:     entropy_original = entropy(df, category)     return {         k: entropy_original - conditional_entropy(df, k, category)         for k in attributes     }  gain = pd.DataFrame([calc_gain(df, attributes, category)], index=['\u4fe1\u606f\u589e\u76ca']) gain Out[3]: \u8272\u6cfd \u6839\u8482 \u6572\u58f0 \u7eb9\u7406 \u8110\u90e8 \u89e6\u611f \u4fe1\u606f\u589e\u76ca 0.108125 0.142675 0.140781 0.380592 0.289159 0.006046 <p>\u4fe1\u606f\u589e\u76ca\u4f1a\u66f4\u52a0\u503e\u5411\u4e8e\u9009\u62e9\u5305\u542b\u7c7b\u522b\u66f4\u591a\u7684\u5c5e\u6027\uff0c\u4f7f\u7528\u589e\u76ca\u7387\u6307\u6807\u53ef\u4ee5\u5e73\u8861\u4e0d\u540c\u7c7b\u522b\u4e4b\u95f4\u7684\u6743\u91cd\u3002\u589e\u76ca\u7387\u6307\u6807\u4e3a\u4fe1\u606f\u589e\u76ca\u4e0e\u5c5e\u6027\u56fa\u6709\u503c $\\mathrm{IV}$ \u4e4b\u6bd4\u3002</p> In\u00a0[4]: Copied! <pre>def iv(df, discrete_col):\n    p = df[discrete_col].value_counts() / len(df)\n    return -sum(p * np.log2(p))\n\ndef calc_gain_ratio(df, attributes, category) -&gt; T.Dict[str, float]:\n    entropy_original = entropy(df, category)\n    return {k: (entropy_original - conditional_entropy(df, k, category)) / iv(df, k)\n        for k in attributes\n    }\n\ngain_ratio = pd.DataFrame(\n    [calc_gain_ratio(df, attributes, category)], index=['\u589e\u76ca\u7387']\n)\ngain_ratio\n</pre> def iv(df, discrete_col):     p = df[discrete_col].value_counts() / len(df)     return -sum(p * np.log2(p))  def calc_gain_ratio(df, attributes, category) -&gt; T.Dict[str, float]:     entropy_original = entropy(df, category)     return {k: (entropy_original - conditional_entropy(df, k, category)) / iv(df, k)         for k in attributes     }  gain_ratio = pd.DataFrame(     [calc_gain_ratio(df, attributes, category)], index=['\u589e\u76ca\u7387'] ) gain_ratio Out[4]: \u8272\u6cfd \u6839\u8482 \u6572\u58f0 \u7eb9\u7406 \u8110\u90e8 \u89e6\u611f \u589e\u76ca\u7387 0.06844 0.101759 0.105627 0.263085 0.186727 0.006918 <p>\u57fa\u5c3c\u6307\u6570\u8861\u91cf\u4ece\u6570\u636e\u96c6\u4e2d\u968f\u673a\u62bd\u53d6\u4e24\u4e2a\u5143\u7d20\uff0c\u6807\u7b7e\u53d6\u503c\u4e0d\u540c\u7684\u6982\u7387\u3002</p> In\u00a0[5]: Copied! <pre>def gini(df, target_col):\n    p = df[target_col].value_counts() / len(df)\n    return 1 - sum(p ** 2)\n\ndef gini_conditional(df, discrete_col, target_col):\n    ret = 0\n    for col in df[discrete_col].unique():\n        p = len(df[df[discrete_col] == col]) / len(df)\n        ret += p * gini(df[df[discrete_col] == col], target_col)\n    return ret\n\ndef calc_gini_index(df, attributes, category) -&gt; T.Dict[str, float]:\n    return {\n        k: sum((df[k].value_counts() / len(df)) * gini_conditional(df, k, category))\n        for k in attributes\n    }\n\ngini_index = pd.DataFrame([calc_gini_index(df, attributes, category)], index=['\u57fa\u5c3c\u6307\u6570'])\ngini_index\n</pre> def gini(df, target_col):     p = df[target_col].value_counts() / len(df)     return 1 - sum(p ** 2)  def gini_conditional(df, discrete_col, target_col):     ret = 0     for col in df[discrete_col].unique():         p = len(df[df[discrete_col] == col]) / len(df)         ret += p * gini(df[df[discrete_col] == col], target_col)     return ret  def calc_gini_index(df, attributes, category) -&gt; T.Dict[str, float]:     return {         k: sum((df[k].value_counts() / len(df)) * gini_conditional(df, k, category))         for k in attributes     }  gini_index = pd.DataFrame([calc_gini_index(df, attributes, category)], index=['\u57fa\u5c3c\u6307\u6570']) gini_index Out[5]: \u8272\u6cfd \u6839\u8482 \u6572\u58f0 \u7eb9\u7406 \u8110\u90e8 \u89e6\u611f \u57fa\u5c3c\u6307\u6570 0.427451 0.422269 0.423529 0.277124 0.344538 0.494118 In\u00a0[6]: Copied! <pre>class TreeNode():\n\n    def __init__(self, key):\n        self.key = key\n        self.mapping = {}\n\n    def add_child(self, value, child):\n        self.mapping[value] = child\n\n    def predict(self, x):\n        if self.key not in x or x[self.key] not in self.mapping:\n            return None\n        if isinstance(self.mapping[x[self.key]], TreeNode):\n            return self.mapping[x[self.key]].predict(x)\n        return self.mapping[x[self.key]]\n\ndef build_tree(df, attributes, category):\n    if len(df[category].unique()) == 1:\n        return df[category].unique()[0]\n    if len(attributes) == 0:\n        return df[category].value_counts().index[0]\n    gain = calc_gain(df, attributes, category)\n    best_attr = max(gain, key=lambda _: gain[_])\n    for attr in attributes:\n        if entropy(df, category) - conditional_entropy(df, attr, category) &gt; entropy(df, category) - conditional_entropy(df, best_attr, category):\n            best_attr = attr\n    tree = TreeNode(best_attr)\n    for value in df[best_attr].unique():\n        tree.add_child(value, build_tree(df[df[best_attr] == value], [attr for attr in attributes if attr != best_attr], category))\n    return tree\n\ntree = build_tree(df, attributes, category)\n</pre> class TreeNode():      def __init__(self, key):         self.key = key         self.mapping = {}      def add_child(self, value, child):         self.mapping[value] = child      def predict(self, x):         if self.key not in x or x[self.key] not in self.mapping:             return None         if isinstance(self.mapping[x[self.key]], TreeNode):             return self.mapping[x[self.key]].predict(x)         return self.mapping[x[self.key]]  def build_tree(df, attributes, category):     if len(df[category].unique()) == 1:         return df[category].unique()[0]     if len(attributes) == 0:         return df[category].value_counts().index[0]     gain = calc_gain(df, attributes, category)     best_attr = max(gain, key=lambda _: gain[_])     for attr in attributes:         if entropy(df, category) - conditional_entropy(df, attr, category) &gt; entropy(df, category) - conditional_entropy(df, best_attr, category):             best_attr = attr     tree = TreeNode(best_attr)     for value in df[best_attr].unique():         tree.add_child(value, build_tree(df[df[best_attr] == value], [attr for attr in attributes if attr != best_attr], category))     return tree  tree = build_tree(df, attributes, category) <p>\u51b3\u7b56\u6811\u91c7\u53d6\u81ea\u9876\u5411\u4e0b\u7684predict\u65b9\u5f0f</p> In\u00a0[7]: Copied! <pre>assert isinstance(tree, TreeNode)\ntree.predict({\n    '\u8272\u6cfd': '\u9752\u7eff',\n    '\u6839\u8482': '\u8737\u7f29',\n    '\u6572\u58f0': '\u6d4a\u54cd',\n    '\u7eb9\u7406': '\u6e05\u6670',\n    '\u8110\u90e8': '\u51f9\u9677',\n    '\u89e6\u611f': '\u786c\u6ed1'\n})\n</pre> assert isinstance(tree, TreeNode) tree.predict({     '\u8272\u6cfd': '\u9752\u7eff',     '\u6839\u8482': '\u8737\u7f29',     '\u6572\u58f0': '\u6d4a\u54cd',     '\u7eb9\u7406': '\u6e05\u6670',     '\u8110\u90e8': '\u51f9\u9677',     '\u89e6\u611f': '\u786c\u6ed1' }) Out[7]: <pre>'\u662f'</pre> In\u00a0[8]: Copied! <pre>from sklearn.model_selection import train_test_split\n\ndef no_split(train, test, attributes, category):\n    return train[category].value_counts().index[0]\n\ndef build_pre_prune(train, test, attributes, category, tree_root=None):\n    if len(train[category].unique()) == 1:\n        return train[category].unique()[0]\n    no_split_result = no_split(train, test, attributes, category)\n    no_split_metric = np.sum(test[category] == no_split_result)\n    if len(attributes) == 0:\n        return no_split_result\n\n    # \u9009\u62e9\u5212\u5206\u5c5e\u6027\n    gain = calc_gain(train, attributes, category)\n    best_attr = max(gain, key=lambda _: gain[_])\n\n    # \u521b\u5efa\u8282\u70b9\n    tree = TreeNode(best_attr)\n    if tree_root is None:\n        tree_root = tree\n    for value in train[best_attr].unique():\n        tree.add_child(value, no_split(\n            train[train[best_attr] == value], test,\n            [attr for attr in attributes if attr != best_attr], category\n        ))\n\n    # \u8ba1\u7b97\u526a\u679d\u6548\u679c\n    result = []\n    for row in test[attributes].itertuples():\n        row_dict = row._asdict()\n        result.append(tree_root.predict(row_dict))\n    split_metric = np.sum([a == b for a, b in zip(result, test[category])])\n\n    # \u526a\u679d\n    print(f'\u526a\u679d\u524d: {no_split_metric}, \u526a\u679d\u540e: {split_metric}')\n    if split_metric &lt; no_split_metric:\n        print('\u4e0d\u526a\u679d')\n        return no_split_result\n    print('\u526a\u679d')\n    for value in train[best_attr].unique():\n        child = build_pre_prune(\n            train[train[best_attr] == value], test,\n            [attr for attr in attributes if attr != best_attr], category,\n            tree_root\n        )\n        tree.add_child(value, child)\n    return tree\n\ntrain, test = train_test_split(df, test_size=0.5)\ntree = build_pre_prune(train, test, attributes, category)\n\nresult = [\n    tree.predict(row._asdict()) if isinstance(tree, TreeNode) else tree\n    for row in test[attributes].itertuples()\n]\nsplit_metric = np.mean([a == b for a, b in zip(result, test[category])])\nsplit_metric\n</pre> from sklearn.model_selection import train_test_split  def no_split(train, test, attributes, category):     return train[category].value_counts().index[0]  def build_pre_prune(train, test, attributes, category, tree_root=None):     if len(train[category].unique()) == 1:         return train[category].unique()[0]     no_split_result = no_split(train, test, attributes, category)     no_split_metric = np.sum(test[category] == no_split_result)     if len(attributes) == 0:         return no_split_result      # \u9009\u62e9\u5212\u5206\u5c5e\u6027     gain = calc_gain(train, attributes, category)     best_attr = max(gain, key=lambda _: gain[_])      # \u521b\u5efa\u8282\u70b9     tree = TreeNode(best_attr)     if tree_root is None:         tree_root = tree     for value in train[best_attr].unique():         tree.add_child(value, no_split(             train[train[best_attr] == value], test,             [attr for attr in attributes if attr != best_attr], category         ))      # \u8ba1\u7b97\u526a\u679d\u6548\u679c     result = []     for row in test[attributes].itertuples():         row_dict = row._asdict()         result.append(tree_root.predict(row_dict))     split_metric = np.sum([a == b for a, b in zip(result, test[category])])      # \u526a\u679d     print(f'\u526a\u679d\u524d: {no_split_metric}, \u526a\u679d\u540e: {split_metric}')     if split_metric &lt; no_split_metric:         print('\u4e0d\u526a\u679d')         return no_split_result     print('\u526a\u679d')     for value in train[best_attr].unique():         child = build_pre_prune(             train[train[best_attr] == value], test,             [attr for attr in attributes if attr != best_attr], category,             tree_root         )         tree.add_child(value, child)     return tree  train, test = train_test_split(df, test_size=0.5) tree = build_pre_prune(train, test, attributes, category)  result = [     tree.predict(row._asdict()) if isinstance(tree, TreeNode) else tree     for row in test[attributes].itertuples() ] split_metric = np.mean([a == b for a, b in zip(result, test[category])]) split_metric <pre>\n---------------------------------------------------------------------------\nModuleNotFoundError                       Traceback (most recent call last)\nCell In[8], line 1\n----&gt; 1 from sklearn.model_selection import train_test_split\n      3 def no_split(train, test, attributes, category):\n      4     return train[category].value_counts().index[0]\n\nModuleNotFoundError: No module named 'sklearn'</pre> In\u00a0[9]: Copied! <pre>def build_post_prune(train, test, attributes, category):\n    tree = build_tree(train, attributes, category)\n    # TODO: apply post pruning\n</pre> def build_post_prune(train, test, attributes, category):     tree = build_tree(train, attributes, category)     # TODO: apply post pruning"},{"location":"coding/machine-learning/decision-tree/","title":"\u51b3\u7b56\u6811\u00b6","text":"<p>\u51b3\u7b56\u6811\u662f\u4e00\u7c7b\u57fa\u4e8e\u89c4\u5219\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5</p>"},{"location":"coding/machine-learning/decision-tree/","title":"\u5212\u5206\u6307\u6807\u00b6","text":"<p>\u51b3\u7b56\u6811\u7b97\u6cd5\u4e2d\u7684\u6838\u5fc3\u662f\u6bcf\u4e00\u6b65\u5212\u5206\u8fc7\u7a0b\u4e2d\u5c5e\u6027\u7684\u9009\u62e9\uff0c\u6bcf\u4e00\u6b65\u5212\u5206\u9700\u8981\u53d6\u5f97\u6700\u5927\u7684\u5212\u5206\u6548\u679c\uff0c\u5373\u4ea7\u751f\u7684\u5b50\u96c6\u201c\u7eaf\u5ea6\u201d\u6700\u9ad8\u3002\u5e38\u89c1\u7684\u4e09\u79cd\u8861\u91cf\u96c6\u5408\u201c\u7eaf\u5ea6\u201d\u7684\u6307\u6807\u4e3a\u4fe1\u606f\u589e\u76ca\u3001\u589e\u76ca\u7387\u4e0e\u57fa\u5c3c\u6307\u6570\u3002</p>"},{"location":"coding/machine-learning/decision-tree/","title":"\u51b3\u7b56\u6811\u6784\u5efa\u00b6","text":"<p>\u672c\u8282\u5b9e\u73b0\u539f\u4e66\u56fe4.2\u7684\u51b3\u7b56\u6811\u5b66\u4e60\u7b97\u6cd5\u3002</p>"},{"location":"coding/machine-learning/decision-tree/","title":"\u51b3\u7b56\u6811\u526a\u679d\u5904\u7406\u00b6","text":"<p>\u51b3\u7b56\u6811\u6709\u9884\u526a\u679d\u548c\u540e\u526a\u679d\u4e24\u4e2a\u526a\u679d\u6b65\u9aa4\uff0c\u526a\u679d\u53ef\u4ee5\u7f13\u89e3\u6a21\u578b\u51fa\u73b0\u7684\u8fc7\u62df\u5408\u73b0\u8c61\u3002</p>"},{"location":"coding/machine-learning/decision-tree/","title":"\u9884\u526a\u679d\u00b6","text":"<p>\u9884\u526a\u679d\u5728\u6a21\u578b\u7684\u8bad\u7ec3\u9636\u6bb5\u5c31\u901a\u8fc7\u9a8c\u8bc1\u96c6\u7684\u51c6\u786e\u6027\u6765\u51b3\u5b9a\u662f\u5426\u8fdb\u884c\u5212\u5206\u3002</p>"},{"location":"coding/machine-learning/decision-tree/","title":"\u540e\u526a\u679d\u00b6","text":"<p>\u540e\u526a\u679d\u5728\u51b3\u7b56\u6811\u751f\u6210\u540e\u518d\u904d\u5386\u51b3\u7b56\u6811\uff0c\u5220\u53bb\u8fc7\u591a\u7684\u8282\u70b9</p>"},{"location":"coding/machine-learning/linear-models/","title":"\u7ebf\u6027\u6a21\u578b","text":"In\u00a0[1]: Copied! <pre>import numpy as np\nimport pandas as pd\n\ndf = pd.read_csv('data/melon3.0a.csv')\nX_rcol, y_rcol = df.columns[1:-2], df.columns[-2] # columns used for regression\nX_ccol, y_ccol = df.columns[1:-1], df.columns[-1] # columns used for classification\nvalue_map = {\n    '\u8272\u6cfd': {'\u6d45\u767d': 0, '\u9752\u7eff': 1, '\u4e4c\u9ed1': 2},\n    '\u6839\u8482': {'\u8737\u7f29': 0, '\u7a0d\u8737': 1, '\u786c\u633a': 2},\n    '\u6572\u58f0': {'\u6c89\u95f7': 0, '\u6d4a\u54cd': 1, '\u6e05\u8106': 2},\n    '\u7eb9\u7406': {'\u6a21\u7cca': 0, '\u7a0d\u7cca': 1, '\u6e05\u6670': 2},\n    '\u8110\u90e8': {'\u51f9\u9677': 0, '\u7a0d\u51f9': 1, '\u5e73\u5766': 2},\n    '\u89e6\u611f': {'\u786c\u6ed1': 0, '\u8f6f\u7c98': 1},\n    '\u597d\u74dc': {'\u662f': 1, '\u5426': 0},\n}\nfor col in value_map:\n    df[col] = df[col].map(value_map[col])\n\nX = np.concatenate([df[X_rcol].values, np.ones((df.shape[0], 1))], axis=1)\ny = df[y_rcol].values.reshape(-1, 1)\n\ndef linear_regression(X, y):\n    return np.linalg.inv(X.T @ X) @ X.T @ y\n\nlinear_regression(X, y).T\n</pre> import numpy as np import pandas as pd  df = pd.read_csv('data/melon3.0a.csv') X_rcol, y_rcol = df.columns[1:-2], df.columns[-2] # columns used for regression X_ccol, y_ccol = df.columns[1:-1], df.columns[-1] # columns used for classification value_map = {     '\u8272\u6cfd': {'\u6d45\u767d': 0, '\u9752\u7eff': 1, '\u4e4c\u9ed1': 2},     '\u6839\u8482': {'\u8737\u7f29': 0, '\u7a0d\u8737': 1, '\u786c\u633a': 2},     '\u6572\u58f0': {'\u6c89\u95f7': 0, '\u6d4a\u54cd': 1, '\u6e05\u8106': 2},     '\u7eb9\u7406': {'\u6a21\u7cca': 0, '\u7a0d\u7cca': 1, '\u6e05\u6670': 2},     '\u8110\u90e8': {'\u51f9\u9677': 0, '\u7a0d\u51f9': 1, '\u5e73\u5766': 2},     '\u89e6\u611f': {'\u786c\u6ed1': 0, '\u8f6f\u7c98': 1},     '\u597d\u74dc': {'\u662f': 1, '\u5426': 0}, } for col in value_map:     df[col] = df[col].map(value_map[col])  X = np.concatenate([df[X_rcol].values, np.ones((df.shape[0], 1))], axis=1) y = df[y_rcol].values.reshape(-1, 1)  def linear_regression(X, y):     return np.linalg.inv(X.T @ X) @ X.T @ y  linear_regression(X, y).T Out[1]: <pre>array([[-0.00561581, -0.02008279,  0.03507281,  0.10539452, -0.03439565,\n         0.05235698,  0.09502766,  0.02259885]])</pre> <p>\u635f\u5931\u51fd\u6570\u4e3a\u5747\u65b9\u8bef\u5dee</p> In\u00a0[2]: Copied! <pre>def mse_loss(X, y, w):\n    return np.mean((X @ w - y) ** 2)\n\nmse_loss(X, y, linear_regression(X, y))\n</pre> def mse_loss(X, y, w):     return np.mean((X @ w - y) ** 2)  mse_loss(X, y, linear_regression(X, y)) Out[2]: <pre>0.003631662892364951</pre> <p>\u5f53\u6837\u672c\u77e9\u9635\u975e\u6ee1\u79e9\u65f6\uff0c\u5b58\u5728\u591a\u4e2a\u6ee1\u8db3\u8bad\u7ec3\u96c6\u7684\u6a21\u578b\uff0c\u6b64\u65f6\u53ef\u4ee5\u5728\u4f18\u5316\u76ee\u6807\u4e2d\u52a0\u5165\u6b63\u5219\u5316\u9879\uff0c\u5982L2-norm\u5373\u52a0\u5165\u6743\u91cd\u7684\u5e73\u65b9\u4e4b\u548c\u3002\u7136\u540e\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u7b49\u6570\u503c\u65b9\u5f0f\u8fdb\u884c\u8ba1\u7b97\u3002</p> In\u00a0[3]: Copied! <pre>class SGD():\n    def __init__(self, d, lr=0.01, epochs=1000):\n        self.d = d\n        self.lr = lr\n        self.epochs = epochs\n\n    def __call__(self, X, y):\n        w = np.random.normal(0, 1, size=(X.shape[1], 1))\n        for _ in range(self.epochs):\n            w -= self.lr * self.d(X, y, w)\n        return w\n\noptim_l2 = SGD(lambda X, y, w: X.T @ (X @ w - y) + 0.1 * w)\n\nw = optim_l2(X, y)\nprint(w.T, mse_loss(X, y, w))\n</pre> class SGD():     def __init__(self, d, lr=0.01, epochs=1000):         self.d = d         self.lr = lr         self.epochs = epochs      def __call__(self, X, y):         w = np.random.normal(0, 1, size=(X.shape[1], 1))         for _ in range(self.epochs):             w -= self.lr * self.d(X, y, w)         return w  optim_l2 = SGD(lambda X, y, w: X.T @ (X @ w - y) + 0.1 * w)  w = optim_l2(X, y) print(w.T, mse_loss(X, y, w)) <pre>[[ 1.84927099e-05 -2.75307908e-02  2.37055997e-02  9.94386431e-02\n  -4.28912012e-02  3.64295611e-02 -3.53587062e-02  1.19837237e-01]] 0.003687996487568552\n</pre> <p>\u5bf9\u7387\u56de\u5f52\u53ef\u4ee5\u5c06\u7ebf\u6027\u6a21\u578b\u5e94\u7528\u5230\u4e8c\u5206\u7c7b\u95ee\u9898\u4e0a\u3002\u5bf9\u7387\u56de\u5f52\u9700\u8981\u7528\u5230logit\u51fd\u6570\u5c06\u8fde\u7eed\u7684\u56de\u5f52\u503c\u6620\u5c04\u5230 $(0, 1)$ \u4e0a</p> <p>$$ f(x) = \\frac{1}{1 + e^{-x}} $$</p> In\u00a0[4]: Copied! <pre>X = df[X_ccol].values\ny = df[y_ccol].values.reshape(-1, 1)\n\ndef sigmoid(x):\n    return 1 / (1 + np.exp(-x))\n\ndef precision(X, y, w):\n    return np.mean((sigmoid(X @ w) &gt; 0.5) == y)\n</pre> X = df[X_ccol].values y = df[y_ccol].values.reshape(-1, 1)  def sigmoid(x):     return 1 / (1 + np.exp(-x))  def precision(X, y, w):     return np.mean((sigmoid(X @ w) &gt; 0.5) == y) <p>\u4f7f\u7528\u6781\u5927\u4f3c\u7136\u6cd5\u53ef\u4ee5\u5f97\u5230\u5bf9\u7387\u56de\u5f52\u7684\u4f18\u5316\u76ee\u6807\u51fd\u6570</p> <p>$$ l(\\boldsymbol w) = \\sum_{i=1}^m \\left(-\\boldsymbol y_i\\boldsymbol \\beta^\\top \\boldsymbol x_i + \\ln \\left(1 + e^{\\boldsymbol \\beta^\\top \\boldsymbol x_i}\\right) \\right) $$</p> In\u00a0[5]: Copied! <pre>optim_logit = SGD(lambda X, y, w: X.T @ (sigmoid(X @ w) - y))\n\nw = optim_logit(X, y)\nprint(w.T, precision(X, y, w))\n</pre> optim_logit = SGD(lambda X, y, w: X.T @ (sigmoid(X @ w) - y))  w = optim_logit(X, y) print(w.T, precision(X, y, w)) <pre>[[ 1.026816   -2.69929353  1.06161273  1.35712416 -2.07570498  1.01648297\n  -2.17144109  0.96148886]] 0.8823529411764706\n</pre> In\u00a0[6]: Copied! <pre>def cov(X, a, b):\n    return np.mean((X[:, a] - np.mean(X[:, a])) * (X[:, b] - np.mean(X[:, b])))\n\ndef cov_matrix(X):\n    return np.array([\n        [\n            cov(X, i, j)\n            for i in range(X.shape[1])\n        ]\n        for j in range(X.shape[1])\n    ])\n\nsw = cov_matrix(X[y[:, 0] == 0]) + cov_matrix(X[y[:, 0] == 1])\nmu0, mu1 = np.mean(X[y[:, 0] == 0], axis=0), np.mean(X[y[:, 0] == 1], axis=0)\nw = np.linalg.inv(sw) @ (mu0 - mu1).reshape(-1, 1)\nc0, c1 = w.T @ mu0, w.T @ mu1\n\ndef precision(X, y, w):\n    return np.mean((X @ w &lt; (c0 + c1) / 2) == y)\n\nprecision(X, y, w)\n</pre> def cov(X, a, b):     return np.mean((X[:, a] - np.mean(X[:, a])) * (X[:, b] - np.mean(X[:, b])))  def cov_matrix(X):     return np.array([         [             cov(X, i, j)             for i in range(X.shape[1])         ]         for j in range(X.shape[1])     ])  sw = cov_matrix(X[y[:, 0] == 0]) + cov_matrix(X[y[:, 0] == 1]) mu0, mu1 = np.mean(X[y[:, 0] == 0], axis=0), np.mean(X[y[:, 0] == 1], axis=0) w = np.linalg.inv(sw) @ (mu0 - mu1).reshape(-1, 1) c0, c1 = w.T @ mu0, w.T @ mu1  def precision(X, y, w):     return np.mean((X @ w &lt; (c0 + c1) / 2) == y)  precision(X, y, w)  Out[6]: <pre>0.8823529411764706</pre>"},{"location":"coding/machine-learning/linear-models/","title":"\u7ebf\u6027\u6a21\u578b\u00b6","text":"<p>\u4ee5\u4e0b\u4f7f\u7528Python\u5b9e\u73b0\u57fa\u4e8e\u7ebf\u6027\u5173\u7cfb\u7684\u5404\u79cd\u673a\u5668\u5b66\u4e60\u6a21\u578b</p>"},{"location":"coding/machine-learning/linear-models/","title":"\u591a\u5143\u7ebf\u6027\u56de\u5f52\u00b6","text":"<p>\u591a\u5143\u7ebf\u6027\u56de\u5f52\u7684\u4e00\u822c\u5f62\u5f0f\u5982\u4e0b\uff1a</p> <p>$$ \\hat{\\boldsymbol y} = f(\\boldsymbol x) = \\boldsymbol w^\\top \\boldsymbol x + b $$</p> <p>\u5f53\u6837\u672c\u77e9\u9635$\\boldsymbol X$\u6ee1\u79e9\u65f6\uff0c\u6700\u4f18\u89e3\u4e3a</p> <p>$$ \\newcommand{\\bmX}{\\boldsymbol X} \\hat{\\boldsymbol w}^* = (\\bmX^\\top\\bmX)^{-1}\\bmX^\\top \\boldsymbol y $$</p>"},{"location":"coding/machine-learning/linear-models/#lda","title":"LDA\u00b6","text":"<p>LDA\u662f\u7ebf\u6027\u5224\u522b\u5206\u6790\u7684\u7b80\u79f0\uff0c\u5c5e\u4e8e\u5206\u7c7b\u7b97\u6cd5\u3002\u8be5\u7b97\u6cd5\u7684\u6838\u5fc3\u601d\u8def\u4e3a\u5c06\u6837\u672c\u70b9\u6295\u5f71\u5230 $n$ \u7ef4\u7a7a\u95f4\u7684\u5e73\u9762\u4e0a\uff0c\u901a\u8fc7\u9009\u62e9\u5e73\u9762\uff0c\u6700\u5c0f\u5316\u540c\u4e00\u7c7b\u522b\u5185\u6837\u672c\u70b9\u6295\u5f71\u7684\u8ddd\u79bb\uff0c\u540c\u65f6\u6700\u5927\u5316\u4e0d\u540c\u7c7b\u522b\u6837\u672c\u70b9\u6295\u5f71\u7684\u8ddd\u79bb\u3002</p>"},{"location":"coding/python/","title":"Python","text":"<ul> <li>\u5173\u95edPython\u7ebf\u7a0b</li> <li>Python\u4e2d\u7684\u9b54\u672f\u65b9\u6cd5</li> <li>\u5e8f\u5217\u7c7b\u578b</li> <li>\u6620\u5c04\u7c7b\u578b</li> <li>\u5b57\u8282\u7c7b\u578b</li> <li>\u51fd\u6570</li> </ul>"},{"location":"coding/python/#_1","title":"\u5b9e\u7528\u5de5\u5177\u53ca\u4ee3\u7801\u7247\u6bb5","text":"<ul> <li>\u7f51\u6613\u4e91\u97f3\u4e50NCM\u8f6c\u6362</li> <li>\u516c\u5386\u519c\u5386\u8f6c\u6362</li> <li>CSV\u6587\u4ef6\u5408\u5e76</li> </ul>"},{"location":"coding/python/bytes/","title":"Python\u4e2d\u7684\u5b57\u8282\u7c7b\u578b","text":"<p>Python\u4e2d\u7684\u5b57\u8282\u7c7b\u578b\u5305\u62ec\u5b57\u8282\u6d41\u4e0e\u5b57\u7b26\u4e32\u3002</p> <p>\u5b57\u7b26\u4e32\u662f\u7531\u5b57\u7b26\u7ec4\u6210\u7684\u5e8f\u5217\u3002\u5b57\u7b26\u662f\u7ec4\u6210\u5b57\u7b26\u4e32\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u5bf9\u5b57\u7b26\u4e32\u7684\u5207\u7247\u7b49\u64cd\u4f5c\u4ee5\u5b57\u7b26\u4e3a\u5355\u4f4d\u8fdb\u884c\u3002\u4e00\u4e2a\u5b57\u7b26\u7531\u4e24\u4e2a\u90e8\u5206\u8fdb\u884c\u5b9a\u4e49\uff1a</p> <ul> <li>\u7801\u4f4d\uff0c\u5373\u5b57\u7b26\u7684\u5b57\u8282\u6570\u503c\u3002</li> <li>\u7f16\u7801\u65b9\u5f0f\uff0c\u5373\u5b57\u8282\u6570\u503c\u4e0e\u5b57\u7b26\u7684\u5bf9\u5e94\u5173\u7cfb\u3002</li> </ul> <p>\u901a\u8fc7\u7f16\u7801\u4e0e\u89e3\u7801\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5b57\u7b26\u4e32\u4e0e\u5b57\u8282\u5e8f\u5217\u4e4b\u95f4\u7684\u8f6c\u6362\uff1a</p> <pre><code>&gt;&gt;&gt; \"abc\".encode() \nb'abc'\n&gt;&gt;&gt; b\"abc\".decode()\n'abc'\n&gt;&gt;&gt;\n</code></pre> <p>Python\u63d0\u4f9b\u4e86\u4e24\u79cd\u5b57\u8282\u5bf9\u8c61\uff0c\u5373<code>bytes</code>\u4e0e<code>bytearray</code>\uff0c\u4e24\u8005\u90fd\u662f\u7531\u65e0\u7b26\u53f7\u5b57\u8282\uff08\u53d6\u503c\u8303\u56f4\u4e3a0~255\uff09\u4e3a\u5355\u4f4d\u7ec4\u6210\u7684\u5e8f\u5217\u3002<code>bytes</code>\u662f\u4e0d\u53ef\u53d8\u5e8f\u5217\u3002</p> <pre><code>&gt;&gt;&gt; b\"\\xff\\xff\"[0]\n255\n&gt;&gt;&gt; bytes(3)[0]=1   \nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: 'bytes' object does not support item assignment\n&gt;&gt;&gt;\n</code></pre> <p>New in version 3.5</p> <p><code>bytes</code>\u5bf9\u8c61\u4e0e<code>bytearray</code>\u5bf9\u8c61\u6dfb\u52a0\u4e86<code>hex</code>\u65b9\u6cd5\uff0c\u8fd4\u56de\u5b57\u8282\u7684\u5341\u516d\u8fdb\u5236\u8868\u793a\u5f62\u5f0f\u3002\u8be5\u51fd\u6570\u4e0e<code>bytes</code>\u5bf9\u8c61\u7684<code>fromhex</code>\u65b9\u6cd5\u76f8\u53cd\u3002</p> <pre><code>&gt;&gt;&gt; import random\n&gt;&gt;&gt; seq = random.randbytes(8) # New in Python 3.9\n&gt;&gt;&gt; seq.hex() # doctest: +SKIP\n'f04be4376519e9ce'\n&gt;&gt;&gt;\n</code></pre> <p>Changed in version 3.8</p> <p><code>hex</code>\u65b9\u6cd5\u65b0\u589e\u4e86\u53ef\u9009\u7684<code>sep</code>\u53c2\u6570\u4e0e<code>bytes_per_sep</code>\u53c2\u6570\u3002</p> <ul> <li><code>sep</code>\u53c2\u6570\u6307\u5b9a\u533a\u6bb5\u95f4\u7684\u8fde\u63a5\u5b57\u7b26\u4e32\uff1b</li> <li><code>bytes_per_sep</code>\u53c2\u6570\u7528\u4e8e\u5212\u5206\u8fde\u7eed\u7684\u5b57\u8282\u6bb5\uff0c\u5b57\u8282\u6bb5\u4ece\u53f3\u5f80\u5de6\u8fdb\u884c\u5212\u5206\u3002</li> </ul> <pre><code># Following the previous example\n&gt;&gt;&gt; seq.hex('-') # doctest: +SKIP\n'f0-4b-e4-37-65-19-e9-ce'\n&gt;&gt;&gt; seq.hex('-', 2) # doctest: +SKIP\n'f04b-e437-6519-e9ce'\n&gt;&gt;&gt; seq.hex('-', 3) # doctest: +SKIP\n'f04b-e43765-19e9ce'\n&gt;&gt;&gt;\n</code></pre> <p>\u5b57\u8282\u5e8f\u5217\u4e2d\u7684\u5b57\u8282\u6709\u4e09\u79cd\u8868\u793a\u65b9\u5f0f\uff1a</p> <ul> <li>ASCII\u4e2d\u89c4\u5b9a\u7684\u53ef\u6253\u5370\u5b57\u7b26\uff0c\u4f7f\u7528\u8be5\u5b57\u7b26\u672c\u8eab</li> <li>\u5236\u8868\u7b26\u3001\u6362\u884c\u7b26\u3001\u56de\u8f66\u7b26\u4e0e\u53cd\u659c\u6760\u4f7f\u7528\u5bf9\u5e94\u7684\u8f6c\u4e49\u5e8f\u5217\u8868\u793a\uff0c\u5373<code>\\t, \\n, \\r, \\\\</code></li> <li>\u6240\u6709\u5b57\u8282\u90fd\u53ef\u4ee5\u4f7f\u7528\u5341\u516d\u8fdb\u5236\u8f6c\u4e49\u5e8f\u5217\u8868\u793a\uff0c\u5982<code>\\x00</code></li> </ul> <pre><code>&gt;&gt;&gt; b\"\\t\" == b\"\\x09\"\nTrue\n&gt;&gt;&gt;\n</code></pre> <p>\u5b57\u7b26\u4e32\u4e0e\u5b57\u8282\u5e8f\u5217\u7684\u533a\u522b\u5728\u4e8e\uff1a\u5b57\u7b26\u4e32\u7684\u7d22\u5f15\u4e0e\u5207\u7247\u64cd\u4f5c\u8fd4\u56de\u7684\u5bf9\u8c61\u90fd\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\uff1b\u800c\u5b57\u8282\u5e8f\u5217\u7684\u7d22\u5f15\u64cd\u4f5c\u8fd4\u56de<code>int</code>\u7c7b\u578b\uff0c\u5207\u7247\u64cd\u4f5c\u8fd4\u56de\u4e00\u4e2a\u5b57\u8282\u5e8f\u5217\u3002</p>"},{"location":"coding/python/bytes/#_1","title":"\u6784\u9020","text":"<p>\u5b57\u7b26\u4e32\u7684\u6784\u9020\u975e\u5e38\u7b80\u5355\uff0c\u6b64\u5904\u4e0d\u505a\u8ba8\u8bba\u3002\u5728\u5b57\u7b26\u4e32\u524d\u52a0<code>r</code>\u53ef\u4ee5\u53d6\u6d88\u5b57\u7b26\u4e32\u5185\u90e8\u7684\u8f6c\u4e49\uff0c\u5982\uff1a</p> <pre><code>&gt;&gt;&gt; print(r\"ab\\n\") \nab\\n\n&gt;&gt;&gt;\n</code></pre> <p>\u5728\u5b57\u7b26\u4e32\u524d\u52a0<code>b</code>\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u5b57\u8282\u5e8f\u5217\u3002\u5b57\u7b26\u4e32\u4e2d\u53ea\u80fd\u5305\u542bASCII\u53ef\u6253\u5370\u5b57\u7b26\u3002</p> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u5b57\u8282\u5e8f\u5217\u8fd8\u6709\u5982\u4e0b\u6784\u9020\u65b9\u5f0f\uff1a</p> <ul> <li>\u6307\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u548c\u5bf9\u5e94\u7684\u7f16\u7801\u65b9\u5f0f\uff0c\u5c06\u8be5\u5b57\u7b26\u4e32\u7f16\u7801\u4e3a\u5b57\u8282\u5e8f\u5217</li> <li>\u4e00\u4e2a\u4ec5\u5305\u542b<code>0~255</code>\u5185\u6570\u503c\u7684\u53ef\u8fed\u4ee3\u5bf9\u8c61</li> <li>\u4e00\u4e2a\u5b9e\u73b0\u7f13\u51b2\u534f\u8bae\u7684\u5bf9\u8c61\uff0c\u5c06\u8be5\u5bf9\u8c61\u4e2d\u7684\u5b57\u8282\u5e8f\u5217\u590d\u5236\u5230\u65b0\u7684\u5b57\u8282\u5e8f\u5217\u4e2d\uff08\u53ef\u80fd\u6d89\u53ca\u7c7b\u578b\u8f6c\u6362\uff09</li> <li>\u4e00\u4e2a\u6574\u6570\uff0c\u521b\u5efa\u5bf9\u5e94\u957f\u5ea6\u7684\u7a7a\u5b57\u8282\u5bf9\u8c61</li> </ul> <p>\u5982\uff0c\u4ece<code>array.array</code>\u5bf9\u8c61\u521b\u5efa\u5b57\u8282\u5e8f\u5217\uff1a</p> <pre><code>&gt;&gt;&gt; import array  \n&gt;&gt;&gt; import random\n&gt;&gt;&gt; a = array.array(\"H\", [51417, 45016, 65120, 9976])\n&gt;&gt;&gt; b = bytes(a)\n&gt;&gt;&gt; b\nb'\\xd9\\xc8\\xd8\\xaf`\\xfe\\xf8&amp;'\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/bytes/#_2","title":"\u7ed3\u6784\u4f53","text":"<p><code>struct</code>\u6a21\u5757\u63d0\u4f9b\u4e86\u5c06\u5b57\u8282\u5e8f\u5217\u8f6c\u6362\u4e3a\u4e0d\u540c\u7c7b\u578b\u5b57\u6bb5\u7684\u5143\u7ec4\uff0c\u7c7b\u4f3c\u4e8eC\u8bed\u8a00\u7ed3\u6784\u4f53\u7684\u529f\u80fd\u3002</p>"},{"location":"coding/python/bytes/#_3","title":"\u7ed3\u6784\u5b9a\u4e49","text":"<p>\u7ed3\u6784\u5b9a\u4e49\u5305\u542b\u4e24\u4e2a\u90e8\u5206\uff0c\u5373\u5b57\u8282\u987a\u5e8f\u4e0e\u5b57\u6bb5\u3002<code>struct</code>\u6a21\u5757\u5141\u8bb8\u591a\u79cd\u5b57\u8282\u987a\u5e8f</p> \u5b57\u7b26 \u5b57\u8282\u987a\u5e8f \u5927\u5c0f \u5bf9\u9f50\u65b9\u5f0f <code>@</code> native native native <code>=</code> native standard none <code>&lt;</code> little-endian standard none <code>&gt;</code> big-endian standard none <code>!</code> network (= big-endian) standard none <p>\u9ed8\u8ba4\u7684\u5b57\u8282\u987a\u5e8f\u4e3a<code>@</code>\u3002</p> <p><code>struct</code>\u6a21\u5757\u7684\u5b57\u6bb5\u5b9a\u4e49\u5982\u4e0b\uff0c\u6240\u6709\u7684\u5b57\u6bb5\u5728C\u8bed\u8a00\u4e2d\u90fd\u6709\u5bf9\u5e94\u7684\u7c7b\u578b\uff1a</p> \u5b57\u7b26 C \u7c7b\u578b Python \u7c7b\u578b \u5b57\u5bbd <code>x</code> \uff08\u586b\u5145\u5b57\u8282\uff09 N/A <code>c</code> <code>char</code> \u957f\u5ea6\u4e3a1\u7684\u5b57\u8282 1 <code>b</code> <code>signed char</code> <code>int</code> 1 <code>B</code> <code>unsigned char</code> <code>int</code> 1 <code>?</code> <code>_Bool</code> <code>bool</code> 1 <code>h</code> <code>short</code> <code>int</code> 2 <code>H</code> <code>unsigned short</code> <code>int</code> 2 <code>i</code> <code>int</code> <code>int</code> 4 <code>I</code> <code>unsigned int</code> <code>int</code> 4 <code>l</code> <code>long</code> <code>int</code> 4 <code>L</code> <code>unsigned long</code> <code>int</code> 4 <code>q</code> <code>long long</code> <code>int</code> 8 <code>Q</code> <code>unsigned long long</code> <code>int</code> 8 <code>n</code> <code>ssize_t</code> <code>int</code> \uff08\u4ec5\u9002\u7528\u4e8e\u9ed8\u8ba4\u6216<code>@</code>\u5b57\u8282\u987a\u5e8f\uff09 <code>N</code> <code>size_t</code> <code>int</code> \uff08\u4ec5\u9002\u7528\u4e8e\u9ed8\u8ba4\u6216<code>@</code>\u5b57\u8282\u987a\u5e8f\uff09 <code>e</code> \uff08\u534a\u7cbe\u5ea6\uff09 <code>float</code> 2 <code>f</code> <code>float</code> <code>float</code> 4 <code>d</code> <code>double</code> <code>float</code> 8 <code>s</code> <code>char[]</code> <code>bytes</code> \u4e0e\u5b57\u7b26\u4e32\u957f\u5ea6\u6709\u5173 <code>p</code> <code>char[]</code> <code>bytes</code> \u4e0e\u5b57\u7b26\u4e32\u957f\u5ea6\u6709\u5173 <code>P</code> <code>void *</code> <code>int</code> <p>\u5f53\u8bd5\u56fe\u5c06\u975e\u6574\u6570\u5bf9\u8c61\u6253\u5305\u4e3a\u6574\u6570\u7c7b\u578b\u65f6\uff0c\u4f1a\u8c03\u7528\u5bf9\u8c61\u7684<code>__index__</code>\u65b9\u6cd5\u3002</p> <p>\u4e00\u4e2a\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6309\u7167\u5982\u4e0b\u7ed3\u6784\u7ec4\u7ec7\uff1a</p> <ol> <li>\u7b2c\u4e00\u4e2a\u5b57\u7b26\u8868\u793a\u5b57\u8282\u987a\u5e8f</li> <li>\u6b64\u540e\u7684\u5b57\u7b26\u4e32\u8868\u793a\u7ed3\u6784\u4f53\u4e2d\u7684\u5b57\u6bb5\u7c7b\u578b</li> <li>\u9664<code>s</code>\u548c<code>p</code>\u4ee5\u5916\uff0c\u5b57\u6bcd\u524d\u7684\u6570\u5b57\u8868\u660e\u8be5\u5b57\u6bb5\u91cd\u590d\u51fa\u73b0\u7684\u6b21\u6570</li> <li><code>s</code>\u3001<code>p</code>\u524d\u7684\u6570\u5b57\u8868\u660e\u5b57\u7b26\u4e32\u7684\u957f\u5ea6</li> </ol> <p>\u7ed3\u6784\u4f53\u5b57\u7b26\u4e32\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a<code>struct.Struct</code>\u5bf9\u8c61\uff0c\u4e24\u8005\u5b9e\u73b0\u76f8\u540c\u7684\u529f\u80fd\u3002</p>"},{"location":"coding/python/bytes/#_4","title":"\u7ed3\u6784\u64cd\u4f5c","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u5b9a\u4e49\u7684\u7ed3\u6784\u4f53\uff0c\u53ef\u4ee5\u5c06\u6570\u636e\u6309\u7167\u7ed3\u6784\u4f53\u8fdb\u884c\u6253\u5305\uff0c\u6216\u5c06\u7ed3\u6784\u4f53\u4e2d\u7684\u6570\u636e\u89e3\u5305\uff0c\u4e5f\u53ef\u4ee5\u663e\u793a\u7ed3\u6784\u4f53\u7684\u5927\u5c0f\u3002</p> <pre><code>&gt;&gt;&gt; import struct   \n&gt;&gt;&gt; struct.pack('&lt;hhf', 1, 2, 3)\nb'\\x01\\x00\\x02\\x00\\x00\\x00@@'\n&gt;&gt;&gt; struct.unpack('&lt;hhf', b'\\x01\\x00\\x02\\x00\\x00\\x00@@')\n(1, 2, 3.0)\n&gt;&gt;&gt;\n</code></pre> <p>New in version 3.4</p> <p><code>struct</code>\u5bf9\u8c61\u65b0\u589e\u4e86<code>iter_unpack</code>\u5bf9\u8c61\uff0c\u4e0d\u540c\u4e8e<code>unpack</code>\u51fd\u6570\uff0c<code>iter_unpack</code>\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002</p> <p><code>struct</code>\u6a21\u5757\u4e0d\u4f1a\u5bf9\u5b57\u8282\u987a\u5e8f\u8fdb\u884c\u68c0\u6d4b\uff0c\u56e0\u6b64\u5bf9\u4e8e\u540c\u4e00\u4e2a\u5b57\u8282\u5e8f\u5217\uff0c\u4e0d\u540c\u7684\u7ed3\u6784\u4f53\u5b9a\u4e49\u5728\u89e3\u5305\u540e\u4f1a\u6709\u4e0d\u540c\u7684\u7ed3\u679c\uff1a</p> <pre><code>&gt;&gt;&gt; struct.unpack('&gt;hhf', b'\\x01\\x00\\x02\\x00\\x00\\x00@@') \n(256, 512, 2.304855714121459e-41)\n&gt;&gt;&gt;\n</code></pre> <p>\u6bcf\u4e2a\u5b57\u6bb5\u90fd\u6709\u8303\u56f4\u9650\u5236\uff0c\u5f53\u4f20\u5165\u7684\u53c2\u6570\u8d85\u8fc7\u5b57\u6bb5\u6240\u5141\u8bb8\u7684\u8303\u56f4\uff0c\u5219\u4f1a\u629b\u51fa\u5f02\u5e38\uff1a</p> <pre><code>&gt;&gt;&gt; struct.pack('&lt;hhf', 32768, -32769, 3)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nstruct.error: short format requires (-32768) &lt;= number &lt;= 32767\n&gt;&gt;&gt;\n</code></pre> <p>\u5f53\u89e3\u5305\u7684\u5b57\u8282\u957f\u5ea6\u4e0e\u7ed3\u6784\u4f53\u7684\u957f\u5ea6\u4e0d\u5bf9\u5e94\u65f6\uff0c\u4e5f\u4f1a\u629b\u51fa\u5f02\u5e38\uff1a</p> <pre><code>&gt;&gt;&gt; struct.unpack('&gt;hhf', b'\\x01\\x00\\x02\\x00\\x00\\x00@')  \nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nstruct.error: unpack requires a buffer of 8 bytes\n&gt;&gt;&gt;\n</code></pre> <p>\u5bf9\u4e8e\u4efb\u4f55\u7ed3\u6784\u4f53\uff0c<code>struct</code>\u6a21\u5757\u63d0\u4f9b\u4e86<code>calcsize</code>\u65b9\u6cd5\u7528\u4e8e\u68c0\u67e5\u7ed3\u6784\u4f53\u957f\u5ea6\u3002</p>"},{"location":"coding/python/bytes/#_5","title":"\u5185\u5b58\u89c6\u56fe","text":"<p>\u5185\u5b58\u89c6\u56fe\u63d0\u4f9b\u4e86\u5728\u4e0d\u540c\u5bf9\u8c61\u95f4\u5171\u4eab\u5185\u5b58\u7684\u65b9\u5f0f\u3002</p> <p>\u6709\u5173\u5185\u5b58\u89c6\u56fe\u7684\u5185\u5bb9\uff0c\u8bf7\u53c2\u89c1\u5e8f\u5217\u7c7b\u578b\u7684\u5185\u5b58\u89c6\u56fe\u90e8\u5206\u3002</p>"},{"location":"coding/python/bytes/#_6","title":"\u5b57\u7b26\u4e32","text":"<p>\u6b64\u5904\u7740\u91cd\u8ba8\u8bba\u5b57\u7b26\u4e32\u7684\u76f8\u5173\u95ee\u9898</p>"},{"location":"coding/python/bytes/#_7","title":"\u7f16\u7801\u4e0e\u89e3\u7801","text":"<p>\u5982\u524d\u6240\u8ff0\uff0c<code>str.encode</code>\u65b9\u6cd5\u63d0\u4f9b\u4e86\u4ece\u5b57\u7b26\u4e32\u5230\u5b57\u8282\u5e8f\u5217\u7684\u8f6c\u6362\u65b9\u5f0f\uff0c<code>encoding</code>\u53c2\u6570\u6307\u660e\u4e86\u6240\u4f7f\u7528\u7684\u7f16\u7801\u5668\u3002</p> <pre><code>&gt;&gt;&gt; \"\u6d4b\u8bd5\".encode(\"utf-8\") \nb'\\xe6\\xb5\\x8b\\xe8\\xaf\\x95'\n&gt;&gt;&gt; \"\u6d4b\u8bd5\".encode(\"utf-16\")\nb'\\xff\\xfeKm\\xd5\\x8b'\n&gt;&gt;&gt; \"\u6d4b\u8bd5\".encode(\"gb2312\")  \nb'\\xb2\\xe2\\xca\\xd4'\n&gt;&gt;&gt;\n</code></pre> <p>\u5f53\u7f16\u7801\u8fc7\u7a0b\u51fa\u73b0\u9519\u8bef\uff0c\u5982\u7f16\u7801\u5668\u65e0\u6cd5\u8bc6\u522b\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u65f6\uff0c\u4f1a\u629b\u51fa<code>UnicodeEncodeError</code>\u5f02\u5e38\u3002</p> <pre><code>&gt;&gt;&gt; \"\u6d4b\u8bd5\".encode(\"latin-1\")\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nUnicodeEncodeError: 'latin-1' codec can't encode characters in position 0-1: ordinal not in range(256)\n&gt;&gt;&gt;\n</code></pre> <p>\u51fa\u73b0\u9519\u8bef\u65f6\uff0c\u6709\u4ee5\u4e0b\u89e3\u51b3\u65b9\u5f0f\uff0c\u53ef\u4ee5\u901a\u8fc7<code>errors</code>\u53c2\u6570\u6307\u5b9a\uff1a</p> <ul> <li><code>ignore</code>\uff1a\u8df3\u8fc7\u65e0\u6cd5\u7f16\u7801\u7684\u5b57\u7b26</li> <li><code>replace</code>\uff1a\u5c06\u65e0\u6cd5\u7f16\u7801\u7684\u5b57\u7b26\u66ff\u6362\u4e3a<code>?</code></li> <li><code>xmlcharrefreplace</code>\uff1a\u5c06\u65e0\u6cd5\u7f16\u7801\u7684\u5b57\u7b26\u66ff\u6362\u4e3a<code>xml</code>\u5b9e\u4f53\uff08\u5373XML\u4e2d\u6240\u4f7f\u7528\u7684\u5b57\u7b26\u8f6c\u6362\u65b9\u5f0f\uff09</li> </ul> <pre><code>&gt;&gt;&gt; \"\u6d4b\u8bd5\".encode(\"latin-1\", errors=\"ignore\")\nb''\n&gt;&gt;&gt; \"\u6d4b\u8bd5\".encode(\"latin-1\", errors=\"replace\")\nb'??'\n&gt;&gt;&gt; \"\u6d4b\u8bd5\".encode(\"latin-1\", errors=\"xmlcharrefreplace\")\nb'&amp;#27979;&amp;#35797;'\n&gt;&gt;&gt;\n</code></pre> <p>\u5bf9\u5e94\u5730\uff0c\u89e3\u7801\u5668\u65e0\u6cd5\u8bc6\u522b\u5b57\u8282\u5e8f\u5217\u7684\u5b57\u8282\u65f6\u4f1a\u4ea7\u751f<code>UnicodeDecodeError</code>\u5f02\u5e38\u3002\u4f46\u4e0d\u629b\u51fa\u5f02\u5e38\u4e0d\u4ee3\u8868\u89e3\u7801\u6210\u529f\uff0c\u89e3\u7801\u5f97\u5230\u7684\u6570\u636e\u53ef\u80fd\u662f\u65e0\u7528\u6570\u636e\u3002<code>errors</code>\u53c2\u6570\u6307\u5b9a\u4e86\u89e3\u7801\u5668\u5728\u51fa\u9519\u65f6\u7684\u884c\u4e3a\uff0c<code>replace</code>\u5c06\u65e0\u6cd5\u7f16\u7801\u7684\u5b57\u7b26\u66ff\u6362\u4e3a<code>\ufffd</code>\u3002</p> <p><code>chardet</code>\u662f\u4e00\u4e2a\u57fa\u4e8ePython\u7684\u5b57\u7b26\u7f16\u7801\u68c0\u6d4b\u5de5\u5177\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e8c\u8fdb\u5236\u5e8f\u5217\u5bf9\u539f\u59cb\u5b57\u7b26\u4e32\u7684\u7f16\u7801\u65b9\u5f0f\u8fdb\u884c\u63a8\u65ad\u3002\u4e0d\u8fc7\u63a8\u65ad\u4ec5\u9002\u7528\u4e8e\u8f83\u957f\u7684\u5b57\u7b26\u4e32\uff0c\u56e0\u4e3a\u4efb\u4f55\u5b57\u7b26\u4e32\u4f1a\u6709\u591a\u4e2a\u7f16\u7801\u65b9\u5f0f\u9002\u7528\u4e8e\u540c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u65e0\u6cd5\u5b8c\u5168\u786e\u5b9a\u5b57\u7b26\u4e32\u7684\u7f16\u7801\u65b9\u5f0f\u3002</p>"},{"location":"coding/python/bytes/#bom","title":"BOM","text":"<p>BOM\u662f\u5b57\u8282\u5e8f\u6807\u8bb0\uff0c\u5bf9\u5e94\u7684Unicode\u5b57\u7b26\u4e3a<code>U+FEFF</code>\uff08\u4e0d\u5b58\u5728<code>U+FFFE</code>\u5b57\u7b26\uff0c\u56e0\u6b64\u8be5\u5b57\u7b26\u53ef\u4ee5\u7528\u4e8e\u63a8\u65ad\u5b57\u8282\u987a\u5e8f\uff09</p> <p>\u5728UTF-16\u7f16\u7801\u7684\u5b57\u8282\u5e8f\u5217\u5f00\u5934\u4f1a\u5199\u5165BOM\uff0c\u5982\u679c\u5f00\u5934\u662f<code>b'\\xff\\xfe'</code>\u4e24\u4e2a\u5b57\u8282\uff0c\u6307\u660e\u7f16\u7801\u65f6\u4f7f\u7528little endian\u5b57\u8282\u7f16\u7801\u987a\u5e8f\u3002\u5982\u679c\u662f<code>b'\\xfe\\xff'</code>\u4e24\u4e2a\u5b57\u8282\uff0c\u8bf4\u660e\u7f16\u7801\u65f6\u4f7f\u7528\u7684\u662fbig endian\u5b57\u8282\u987a\u5e8f\u3002\u5982\u679c\u6307\u660eUTF-16\u6240\u4f7f\u7528\u7684\u5b57\u8282\u987a\u5e8f\uff0c\u5982UTF-16LE\u6216UTF-16BE\uff0c\u5219\u4e0d\u4f1a\u751f\u6210BOM\u3002</p> <p>BOM\u4ec5\u7528\u4e8e\u63a8\u65ad\u5b57\u8282\u987a\u5e8f\u800c\u4e0d\u4f1a\u51fa\u73b0\u5728\u6700\u7ec8\u89e3\u7801\u7684\u5b57\u7b26\u4e32\u3002</p>"},{"location":"coding/python/bytes/#_8","title":"\u6587\u672c\u6587\u4ef6","text":"<p>\u4f7f\u7528<code>open</code>\u51fd\u6570\u4ee5\u6587\u672c\u6a21\u5f0f\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u65f6\uff0c\u6700\u597d\u6307\u5b9a\u6587\u4ef6\u7684\u7f16\u7801\u65b9\u5f0f\u3002</p> <p>\u4e0d\u8981\u4f7f\u7528\u4e8c\u8fdb\u5236\u65b9\u5f0f\u6253\u5f00\u6587\u672c\u6587\u4ef6\u3002</p>"},{"location":"coding/python/bytes/#unicode","title":"Unicode\u89c4\u8303\u5316","text":"<p>\u8003\u8651\u5982\u4e0b\u4e24\u4e2a\u5b57\u7b26\u4e32\uff1a</p> <pre><code>&gt;&gt;&gt; a = 'caf\u00e9'\n&gt;&gt;&gt; b = 'cafe\\u0301'             \n&gt;&gt;&gt; print(a, b)\ncaf\u00e9 cafe\u0301\n&gt;&gt;&gt; a == b\nFalse\n&gt;&gt;&gt;\n</code></pre> <p>\u76f8\u540c\u7684\u6253\u5370\u7ed3\u679c\uff0c\u5374\u5bf9\u5e94\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\uff0c\u539f\u56e0\u5728\u4e8e\u5b57\u7b26\u4e32<code>b</code>\u4f7f\u7528\u4e86<code>U+0301</code>\u5b57\u7b26\u4f5c\u4e3a\u91cd\u97f3\u6807\u8bb0\uff08\u7ec4\u5408\u5b57\u7b26\uff09\uff0c\u591a\u4f7f\u7528\u4e86\u4e00\u4e2a\u5b57\u8282\u3002\u5bf9\u4e8ePython\u800c\u8a00\uff0c\u8fd9\u4e00\u6bb5\u5b57\u7b26\u4e32\u7684\u5b57\u8282\u5e8f\u5217\u5e76\u4e0d\u76f8\u540c\uff0c\u56e0\u6b64\u8ba4\u4e3a<code>a != b</code>\u3002</p> <pre><code>&gt;&gt;&gt; a.encode(\"utf-8\")     \nb'caf\\xc3\\xa9'\n&gt;&gt;&gt; b.encode(\"utf-8\") \nb'cafe\\xcc\\x81'\n&gt;&gt;&gt;\n</code></pre> <p><code>unicodedata</code>\u6a21\u5757\u4e2d\u7684<code>normalize</code>\u51fd\u6570\u63d0\u4f9b\u4e86Unicode\u89c4\u8303\u5316\u7684\u529f\u80fd\uff0c\u8be5\u51fd\u6570\u63a5\u6536\u5982\u4e0b\u53c2\u6570\u7528\u4e8e\u786e\u5b9a\u8f6c\u6362\u6807\u51c6\uff1a</p> <ul> <li><code>'NFC'</code>\uff1a\u4f7f\u7528\u6700\u5c11\u7801\u4f4d\u6784\u6210\u7b49\u4ef7\u7684\u5b57\u7b26\u4e32</li> <li><code>'NFD'</code>\uff1a\u5c06\u7ec4\u5408\u5b57\u7b26\u5206\u89e3\u4e3a\u57fa\u5b57\u7b26\u4e0e\u5355\u72ec\u7684\u7ec4\u5408\u5b57\u7b26\uff08\u5982<code>U+0301</code>\uff09\uff0c\u53ef\u4ee5\u7528\u4e8e\u53bb\u9664\u5b57\u7b26\u4e32\u4e2d\u7684\u53d8\u97f3\u7b26\u53f7</li> <li><code>NFKC</code>\u3001<code>NFKD</code>\u4f1a\u989d\u5916\u5c06\u517c\u5bb9\u5b57\u7b26\u5206\u89e3\u4e3a\u4e00\u4e2a\u6216\u591a\u4e2a\u517c\u5bb9\u5206\u89e3\uff0c\u4f1a\u5bfc\u81f4\u6570\u636e\u635f\u5931\uff0c\u5982\u4e0b\u6240\u793a\uff1a</li> </ul> <pre><code>&gt;&gt;&gt; from unicodedata import normalize\n&gt;&gt;&gt; normalize('NFKC', '\u337f') \n'\u682a\u5f0f\u4f1a\u793e'\n&gt;&gt;&gt;\n</code></pre> <p><code>NKFC</code>\u3001<code>NFKD</code>\u89c4\u8303\u5316\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5b57\u7b26\u4e32\u7684\u539f\u610f\u53d8\u5316\uff0c\u4f46\u53ef\u4ee5\u7528\u4e8e\u641c\u7d22\u5f15\u64ce\u3002</p> <p><code>str.casefold</code>\u51fd\u6570\u63d0\u4f9b\u4e86\u53e6\u4e00\u79cd\u89c4\u8303\u5316\u65b9\u5f0f\uff0c\u5373\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5927\u5199\u5b57\u6bcd\u8f6c\u4e3a\u5c0f\u5199\u3002\u4e0e<code>str.lower</code>\u4e0d\u540c\uff0c\u90e8\u5206\u5b57\u7b26\u4f1a\u88ab\u66ff\u6362\u6210\u65b0\u7684\u5b57\u7b26\u3002</p>"},{"location":"coding/python/bytes/#_9","title":"\u5b57\u7b26\u4e32\u6392\u5e8f","text":"<p>\u5b57\u7b26\u4e32\u7684\u6392\u5e8f\u4e0e\u5176\u4ed6\u6570\u636e\u7684\u6392\u5e8f\u65b9\u5f0f\u76f8\u540c\uff0c\u90fd\u662f\u6309\u7167\u7801\u4f4d\u5347\u5e8f\u6392\u5e8f\u3002\u5bf9\u4e8e\u975e<code>ASCII</code>\u5b57\u7b26\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u95ee\u9898\uff0c\u5982\uff1a</p> <pre><code>&gt;&gt;&gt; sorted(['caf\u00e9', 'cafu'])       \n['cafu', 'caf\u00e9']\n&gt;&gt;&gt;\n</code></pre> <p>\u6a21\u5757<code>locale</code>\u63d0\u4f9b\u4e86<code>strxfrm</code>\u51fd\u6570\uff0c\u7528\u4e8e\u6309\u7167\u533a\u57df\u8bbe\u7f6e\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u6392\u5e8f\u3002\u5982\u679c\u64cd\u4f5c\u7cfb\u7edf\u652f\u6301\uff0c\u533a\u57df\u8bbe\u7f6e\u53ef\u4ee5\u5728<code>setlocale</code>\u51fd\u6570\u4e2d\u5168\u5c40\u6307\u5b9a\u3002</p> <pre><code>&gt;&gt;&gt; import locale\n&gt;&gt;&gt; locale.setlocale(locale.LC_COLLATE, \"en_US.UTF-8\")\n'en_US.UTF-8'\n&gt;&gt;&gt; sorted(['caf\u00e9', 'cafu'], key=locale.strxfrm)\n['caf\u00e9', 'cafu']\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/bytes/#api","title":"API","text":"<p>\u90e8\u5206\u6d89\u53ca\u5230\u5b57\u7b26\u4e32\u7684\u4e00\u4e9b\u51fd\u6570\u53ef\u4ee5\u8f93\u5165\u5b57\u7b26\u4e32\u6216\u5b57\u8282\u5e8f\u5217\u3002</p>"},{"location":"coding/python/bytes/#re","title":"re\u6a21\u5757","text":"<p>\u4e0d\u540c\u4e8e\u4f7f\u7528\u5b57\u7b26\u4e32\u6784\u9020\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4f7f\u7528\u5b57\u8282\u5e8f\u5217\u6784\u9020\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c<code>\\d</code>\u4e0e<code>\\w</code>\u53ea\u80fd\u5339\u914dASCII\u5b57\u7b26\u3002</p>"},{"location":"coding/python/bytes/#os","title":"os\u6a21\u5757","text":"<p><code>os</code>\u6a21\u5757\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u4e32\u53c2\u6570\u90fd\u53ef\u4ee5\u4f7f\u7528\u5b57\u8282\u5e8f\u5217\u66ff\u6362\u3002\u5bf9\u4e8e\u5b57\u7b26\u4e32\uff0c\u51fd\u6570\u4f1a\u4f7f\u7528<code>sys.getfilesystemencoding()</code>\u51fd\u6570\u53d6\u5f97\u5408\u9002\u7684\u7f16\u7801\u5668\u3002\u6b64\u5916\uff0c<code>os</code>\u6a21\u5757\u63d0\u4f9b<code>fsencode</code>\u4e0e<code>fsdecode</code>\u51fd\u6570\u7528\u4e8e\u624b\u52a8\u8fdb\u884c\u7f16\u7801\u4e0e\u89e3\u7801\u64cd\u4f5c\u3002</p>"},{"location":"coding/python/decorator/","title":"\u88c5\u9970\u5668","text":"<p>\u88c5\u9970\u5668\u662f\u4e00\u4e2a\u53ef\u8c03\u7528\u5bf9\u8c61\uff0c\u63a5\u53d7\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\uff0c\u5982\u4e0b\u5b9a\u4e49\u4e86\u4e00\u4e2a\u88c5\u9970\u5668\uff1a</p> <pre><code>&gt;&gt;&gt; def decorator(x):\n...     print(x)\n...     return x\n...\n&gt;&gt;&gt;\n</code></pre> <p>\u88c5\u9970\u5668\u5728\u51fd\u6570\u5b9a\u4e49\u524d\u4f7f\u7528\uff0c<code>@</code>\u6807\u8bb0\u4e00\u4e2a\u88c5\u9970\u5668\uff1a</p> <pre><code>&gt;&gt;&gt; @decorator    \n... def target(x):\n...     return x + 1\n... \n&lt;function target at ...&gt;\n&gt;&gt;&gt;\n</code></pre> <p><code>@decorator</code>\u7b49\u4ef7\u4e8e\u5982\u4e0b\u4ee3\u7801\uff0c\u51fd\u6570\u88ab\u88c5\u9970\u5668\u8fd4\u56de\u7684\u51fd\u6570\u66ff\u6362</p> <pre><code>&gt;&gt;&gt; def target(x):\n...     return x + 1\n... \n&gt;&gt;&gt; target = decorator(target)\n&lt;function target at ...&gt;\n&gt;&gt;&gt;\n</code></pre> <p>\u88c5\u9970\u5668\u5728\u88ab\u4fee\u9970\u7684\u51fd\u6570\u5b9a\u4e49\u540e\u7acb\u5373\u8fd0\u884c\u3002\u56e0\u6b64\uff0c\u5f53\u5bfc\u5165\u6a21\u5757\u65f6\uff0c\u88c5\u9970\u5668\u51fd\u6570\u4f1a\u7acb\u5373\u6267\u884c\uff0c\u800c\u88ab\u88c5\u9970\u7684\u51fd\u6570\u53ea\u4f1a\u8c03\u7528\u6267\u884c\u3002</p> <pre><code>&gt;&gt;&gt; src = \"\"\"def decorator(_):\n...     print(_)\n...     return _\n... print(\"Before A\")\n... @decorator\n... def a():\n...     return 1\n... print(\"Before B\")\n... @decorator  \n... def b():\n...     return 1\n... print(\"After B\")\n... \"\"\"\n&gt;&gt;&gt; exec(src)\nBefore A\n&lt;function a at ...&gt;\nBefore B\n&lt;function b at ...&gt;\nAfter B\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/decorator/#_2","title":"\u53d8\u91cf\u7684\u4f5c\u7528\u57df","text":"<p>Python\u4f1a\u81ea\u52a8\u5224\u65ad\u51fd\u6570\u4ee3\u7801\u4e2d\u7684\u53d8\u91cf\u662f\u5426\u4e3a\u5c40\u90e8\u53d8\u91cf\u3002\u6240\u6709\u5728\u51fd\u6570\u4ee3\u7801\u5185\u51fa\u73b0\u7684\u53d8\u91cf\u88ab\u89c6\u4e3a\u5c40\u90e8\u53d8\u91cf\u3002</p> <pre><code>&gt;&gt;&gt; b = 2\n&gt;&gt;&gt; def A():\n...     print(b)\n... \n&gt;&gt;&gt; def B():\n...     print(b)\n...     b = 2\n... \n&gt;&gt;&gt; A()\n2\n&gt;&gt;&gt; B()\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"&lt;stdin&gt;\", line 2, in B\nUnboundLocalError: local variable 'b' referenced before assignment\n&gt;&gt;&gt;\n</code></pre> <p>\u56e0\u6b64\uff0c\u5982\u679c\u9700\u8981\u5728\u51fd\u6570\u5185\u90e8\u8bbf\u95ee\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u4f7f\u7528<code>global</code>\u5173\u952e\u5b57\u58f0\u660e\u3002</p> <pre><code>&gt;&gt;&gt; def C():\n...     global b\n...     print(b)\n...     b = 3\n... \n&gt;&gt;&gt; b\n2\n&gt;&gt;&gt; C()\n2\n&gt;&gt;&gt; b\n3\n&gt;&gt;&gt;\n</code></pre> <p>\u68c0\u67e5\u7f16\u8bd1\u540e\u7684\u5b57\u8282\u7801\uff0c\u53d1\u73b0<code>global</code>\u5173\u952e\u5b57\u58f0\u660e\u53d8\u91cf\u7531<code>LOAD_FAST</code>\u4e0e<code>STORE_FAST</code>\u6539\u4e3a\u4e86<code>LOAD_GLOBAL</code>\u4e0e<code>STORE_GLOBAL</code>\uff1a</p>"},{"location":"coding/python/decorator/#_3","title":"\u95ed\u5305","text":"<p>\u95ed\u5305\u662f\u6269\u5c55\u4e86\u51fd\u6570\u4f5c\u7528\u57df\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u8bbf\u95ee\u51fd\u6570\u5b9a\u4e49\u4e4b\u5916\u7684\u5c40\u90e8\u53d8\u91cf\u3002\u4ee5\u4e0b\u901a\u8fc7\u4e0d\u540c\u65b9\u5f0f\u5b9e\u73b0\u6ed1\u52a8\u5e73\u5747\u503c\u7684\u8ba1\u7b97\uff1a</p> <ul> <li>\u4f7f\u7528\u7c7b</li> </ul> <pre><code>&gt;&gt;&gt; class avg1():\n...     def __init__(self):\n...             self.values = []\n...     def __call__(self, value):\n...             self.values.append(value)\n...             return sum(self.values) / len(self.values)\n... \n&gt;&gt;&gt; avg = avg1()\n&gt;&gt;&gt; avg(10)\n10.0\n&gt;&gt;&gt; avg(11)\n10.5\n&gt;&gt;&gt;\n</code></pre> <ul> <li>\u4f7f\u7528\u9ad8\u9636\u51fd\u6570</li> </ul> <pre><code>&gt;&gt;&gt; def avg2():\n...     values = []\n...     def avg(value): \n...             values.append(value)\n...             return sum(values) / len(values)\n...     return avg\n&gt;&gt;&gt; \n&gt;&gt;&gt; avg = avg2()\n&gt;&gt;&gt; avg(10)\n10.0\n&gt;&gt;&gt; avg(11)\n10.5\n&gt;&gt;&gt;\n</code></pre> <p>\u5728<code>avg2</code>\u51fd\u6570\u7ed3\u675f\u540e\uff0c\u5c40\u90e8\u53d8\u91cf<code>values</code>\u539f\u6709\u7684\u4f5c\u7528\u57df\u6d88\u5931\uff0c\u6210\u4e3a\u81ea\u7531\u53d8\u91cf\u3002\u81ea\u7531\u53d8\u91cf\u6307\u6ca1\u6709\u5728\u672c\u5730\u4f5c\u7528\u57df\u4e2d\u7ed1\u5b9a\u7684\u53d8\u91cf\u3002<code>values</code>\u53d8\u91cf\u7684\u5f15\u7528\u5b58\u50a8\u5728<code>avg</code>\u51fd\u6570\u7684<code>__closure__</code>\u5c5e\u6027\u4e2d\u3002\u5373\u4f7f<code>avg2</code>\u51fd\u6570\u5df2\u7ecf\u7ed3\u675f\u6267\u884c\uff0c<code>avg</code>\u51fd\u6570\u4ecd\u7136\u80fd\u8bbf\u95ee<code>values</code>\u53d8\u91cf\u3002</p>"},{"location":"coding/python/functions/","title":"Python\u4e2d\u7684\u51fd\u6570","text":"<p>\u201c\u4e00\u7b49\u5bf9\u8c61\u201d\u6307\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\u7684\u5bf9\u8c61\uff1a</p> <ul> <li>\u5728\u7a0b\u5e8f\u6267\u884c\u65f6\u521b\u5efa</li> <li>\u80fd\u591f\u8d4b\u503c\u7ed9\u53d8\u91cf\u6216\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u5143\u7d20</li> <li>\u80fd\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u4e0e\u8fd4\u56de\u503c</li> </ul> <p>Python\u4e2d\u7684\u51fd\u6570\u662f\u4e00\u7b49\u5bf9\u8c61</p>"},{"location":"coding/python/functions/#_1","title":"\u51fd\u6570\u4e0e\u9ad8\u9636\u51fd\u6570","text":"<p>\u51fd\u6570\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u901a\u5e38\u4f7f\u7528<code>def</code>\u5173\u952e\u5b57\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff1a</p> <pre><code>&gt;&gt;&gt; def constant():  \n...     return 1\n... \n&gt;&gt;&gt; type(constant)\n&lt;class 'function'&gt;\n&gt;&gt;&gt;\n</code></pre> <p>\u51fd\u6570\u53ef\u4ee5\u5b9a\u4e49\u5728\u5176\u4ed6\u51fd\u6570\u5185\u90e8\uff1a</p> <pre><code>&gt;&gt;&gt; def outer():\n...     def inner():\n...             return \"ok\"\n...     return inner\n... \n&gt;&gt;&gt; func = outer()\n&gt;&gt;&gt; func()\n'ok'\n&gt;&gt;&gt;\n</code></pre> <p>\u9ad8\u9636\u51fd\u6570\u662f\u63a5\u53d7\u53e6\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u6216\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\u7684\u51fd\u6570\uff0c\u5982<code>map</code>\u3001<code>filter</code>\u7b49\u3002</p> <p>\u9664\u4f7f\u7528<code>def</code>\u5173\u952e\u5b57\u5b9a\u4e49\u51fd\u6570\u4ee5\u5916\uff0c<code>lambda</code>\u63d0\u4f9b\u4e86\u53e6\u4e00\u79cd\u521b\u5efa\u7b80\u5355\u51fd\u6570\u7684\u65b9\u6cd5\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5e38\u7528\u4e8e\u5411\u9ad8\u9636\u51fd\u6570\u4f20\u9012\u53c2\u6570\u3002<code>lambda</code>\u8868\u8fbe\u5f0f\u53ea\u80fd\u52a0\u5165\u8868\u8fbe\u5f0f\u800c\u65e0\u6cd5\u6dfb\u52a0\u63a7\u5236\u903b\u8f91\uff1a</p> <pre><code>&gt;&gt;&gt; a = lambda : \"ok\"  \n&gt;&gt;&gt; a()\n'ok'\n&gt;&gt;&gt;\n</code></pre> <p><code>lambda</code>\u8868\u8fbe\u5f0f\u53ef\u4ee5\u521b\u5efa\u4e0d\u540c\u53c2\u6570\u6570\u91cf\u7684\u51fd\u6570\uff1a</p> <ul> <li>\u6ca1\u6709\u53c2\u6570\uff0c\u5982<code>lambda : \"ok\"</code></li> <li>\u7ed9\u5b9a\u6570\u91cf\u53c2\u6570\uff0c\u5982<code>lambda x, y : x + y</code></li> <li>\u4efb\u610f\u53c2\u6570\uff0c\u5982<code>lambda *_ : sum(_)</code>\uff08\u65e0\u540d\u53c2\u6570\uff09\u6216<code>lambda **_ : sum(_)</code>\uff08\u5177\u540d\u53c2\u6570\uff09</li> </ul> <p>\u82e5<code>lambda</code>\u8868\u8fbe\u5f0f\u7684\u53f3\u4fa7\u662f\u9017\u53f7\u5206\u9694\u7684\u8868\u8fbe\u5f0f\uff0c\u751f\u6210\u7684\u662f<code>lambda</code>\u5bf9\u8c61\u7ec4\u6210\u7684\u5143\u7ec4\u3002</p> <p>\u4f7f\u7528<code>dir()</code>\u67e5\u770b\u51fd\u6570\u7684\u5185\u7f6e\u5c5e\u6027\u3002\u76f8\u6bd4\u4e8e\u4e00\u822c\u5bf9\u8c61\uff0c\u51fd\u6570\u6709\u4ee5\u4e0b\u7684\u989d\u5916\u5c5e\u6027\uff1a</p> <pre><code>&gt;&gt;&gt; class Obj():\n...     pass\n... \n&gt;&gt;&gt; def func():\n...     pass\n... \n&gt;&gt;&gt; sorted(list(set(dir(func)) - set(dir(Obj())))) # doctest: +SKIP\n['__annotations__', '__call__', '__closure__', '__code__', '__defaults__', '__get__', '__globals__', '__kwdefaults__', '__name__', '__qualname__']\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/functions/#_2","title":"\u5e7f\u4e49\u51fd\u6570","text":"<p>\u4efb\u4f55\u5b9e\u73b0\u4e86<code>__call__</code>\u65b9\u6cd5\u7684\u5bf9\u8c61\u90fd\u662f\u53ef\u8c03\u7528\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u4e8e\u51fd\u6570\u8c03\u7528\u7684\u65b9\u5f0f\u8fdb\u884c\u8c03\u7528\u3002\u4ee5\u4e0b\u7c7b\u578b\u4e3a\u53ef\u8c03\u7528\u5bf9\u8c61\uff1a</p> <ul> <li>\u51fd\u6570\u6216<code>lambda</code>\u8868\u8fbe\u5f0f</li> <li>\u5185\u7f6e\u51fd\u6570\u6216\u7c7b\u578b\u65b9\u6cd5</li> <li>\u7c7b\u578b\u65b9\u6cd5</li> <li>\u7c7b\uff08\u76f8\u5f53\u4e8e\u4e00\u4e2a\u8fd4\u56de\u7c7b\u5bf9\u8c61\u7684\u51fd\u6570\uff09</li> <li>\u5b9e\u73b0\u4e86<code>__call__</code>\u7684\u5bf9\u8c61</li> <li>\u751f\u6210\u5668\u51fd\u6570</li> </ul> <p>\u5185\u7f6e\u51fd\u6570<code>callable()</code>\u7528\u4e8e\u68c0\u6d4b\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u662f\u53ef\u8c03\u7528\u5bf9\u8c61\u3002</p>"},{"location":"coding/python/functions/#_3","title":"\u51fd\u6570\u7684\u53c2\u6570","text":"<p>Python\u4e2d\uff0c\u51fd\u6570\u7684\u53c2\u6570\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u4f20\u9012\uff1a</p> <ul> <li>\u9017\u53f7\u5206\u9694\uff0c\u6309\u51fd\u6570\u58f0\u660e\u987a\u5e8f\u4f20\u5165\u53c2\u6570</li> <li>\u5173\u952e\u5b57\u53c2\u6570\uff0c\u5373\u53c2\u6570\u540d=\u53c2\u6570\u503c</li> <li>\u6709\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u53ef\u4ee5\u7701\u7565</li> <li><code>*</code>\u89e3\u5305\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08\u6309\u53c2\u6570\u4f4d\u7f6e\u4f20\u9012\uff09\u6216<code>**</code>\u89e3\u5305\u6620\u5c04\u5bf9\u8c61\uff08\u6309\u5173\u952e\u5b57\u4f20\u9012\uff09</li> </ul> <p>\u5bf9\u5e94\u5730\uff0c\u51fd\u6570\u5bf9\u53c2\u6570\u6709\u5982\u4e0b\u5904\u7406\u65b9\u5f0f\uff1a</p> <ul> <li>\u6309\u7167\u53c2\u6570\u4f4d\u7f6e\u4e0e\u53c2\u6570\u540d\u83b7\u53d6\u53c2\u6570</li> <li>\u5176\u4ed6\u7684\u65e0\u8bb0\u540d\u53c2\u6570\u88ab<code>*</code>\u53c2\u6570\u83b7\u53d6\uff0c\u5355\u4e2a<code>*</code>\u6216<code>*</code>\u53c2\u6570\u540e\u7684\u666e\u901a\u53c2\u6570\u53ea\u80fd\u6309\u7167\u5173\u952e\u5b57\u53c2\u6570\u7684\u65b9\u5f0f\u4f20\u9012</li> <li>\u5176\u4ed6\u7684\u8bb0\u540d\u53c2\u6570\u88ab<code>**</code>\u53c2\u6570\u83b7\u53d6</li> </ul> <p>\u51fd\u6570\u58f0\u660e\u4e2d\u51fa\u73b0\u7684\u5355\u4e2a<code>*</code>\u4e0d\u4f1a\u88ab\u89c6\u4e3a\u53c2\u6570\uff0c\u53ea\u7528\u4e8e\u9650\u5b9a\u6b64\u540e\u6240\u6709\u53c2\u6570\u7684\u4f20\u5165\u65b9\u5f0f\uff1a</p> <pre><code>&gt;&gt;&gt; def a(*, a, b):\n...     return a + b\n... \n&gt;&gt;&gt; a(1, 2) \nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: a() takes 0 positional arguments but 2 were given\n&gt;&gt;&gt; a(a=1, b=2)\n3\n&gt;&gt;&gt;\n</code></pre> <p>\u51fd\u6570\u4f20\u53c2\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u5373\u503c\u4f20\u9012\u4e0e\u5f15\u7528\u4f20\u9012\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53ef\u53d8\u5bf9\u8c61\u6309\u5f15\u7528\u4f20\u9012\uff0c\u4e0d\u53ef\u53d8\u5bf9\u8c61\u6309\u503c\u4f20\u9012\uff1a</p> <pre><code>&gt;&gt;&gt; def argPass(x):\n...     x += x      \n...           \n&gt;&gt;&gt; a = \"test\"      \n&gt;&gt;&gt; b = [\"test\"]\n&gt;&gt;&gt; argPass(a)\n&gt;&gt;&gt; argPass(b)\n&gt;&gt;&gt; a\n'test'\n&gt;&gt;&gt; b\n['test', 'test']\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/functions/#_4","title":"\u51fd\u6570\u5185\u7701","text":"<p>\u51fd\u6570\u5bf9\u8c61\u7279\u6709\u7684\u5c5e\u6027\u63d0\u4f9b\u4e86\u6709\u5173\u51fd\u6570\u7684\u4fe1\u606f\uff1a</p> \u5c5e\u6027\u540d \u5c5e\u6027\u7c7b\u578b \u5c5e\u6027\u8bf4\u660e <code>__annotations__</code> <code>dict</code> \u51fd\u6570\u53c2\u6570\u548c\u51fd\u6570\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u6ce8\u89e3\uff0c\u952e\u4e3a\u53c2\u6570\u540d\uff0c\u503c\u4e3a\u53c2\u6570\u7c7b\u578b <code>__call__</code> <code>method-wrapper</code> \u5b9e\u73b0\u53ef\u8c03\u7528\u5bf9\u8c61\u7684\u8c03\u7528\u65b9\u6cd5 <code>__closure__</code> <code>tuple</code> \u51fd\u6570\u95ed\u5305\uff0c\u53c2\u89c1\u76f8\u5173\u7ae0\u8282 <code>__code__</code> <code>code</code> \u7f16\u8bd1\u6210\u4e8c\u8fdb\u5236\u683c\u5f0f\u7684\u51fd\u6570\u5143\u6570\u636e\u548c\u5b9a\u4e49\u4f53 <code>__defaults__</code> <code>tuple</code> \u5f62\u53c2\u7684\u9ed8\u8ba4\u503c\u5217\u8868 <code>__get__</code> <code>method-wrapper</code> \u5b9e\u73b0\u53ea\u8bfb\u63cf\u8ff0\u7b26\u534f\u8bae <code>__globals__</code> <code>dict</code> \u51fd\u6570\u6240\u5728\u6a21\u5757\u4e2d\u7684\u5168\u5c40\u53d8\u91cf <code>__kwdefaults__</code> <code>dict</code> \u9650\u5b9a\u5173\u952e\u5b57\u5f62\u5f0f\u8bbf\u95ee\u7684\u5f62\u53c2\u9ed8\u8ba4\u503c <code>__name__</code> <code>str</code> \u51fd\u6570\u540d\u79f0 <code>__qualname__</code> <code>str</code> \u51fd\u6570\u7684\u9650\u5b9a\u540d\u79f0 <pre><code>&gt;&gt;&gt; def dummy(a, b: int, c = 10, *args, d, e=50, **kwargs):\n...     return (a, b, c, args, d, e, kwargs) \n... \n&gt;&gt;&gt; dummy.__annotations__\n{'b': &lt;class 'int'&gt;}\n&gt;&gt;&gt; dummy.__defaults__\n(10,)\n&gt;&gt;&gt; dummy.__kwdefaults__\n{'e': 50}\n&gt;&gt;&gt;\n</code></pre> <p>\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u4e0e\u6570\u91cf\u5b58\u50a8\u5728<code>__code__</code>\u5c5e\u6027\u4e2d\uff1a</p> <pre><code>&gt;&gt;&gt; dummy.__code__.co_varnames\n('a', 'b', 'c', 'd', 'e', 'args', 'kwargs')\n&gt;&gt;&gt; dummy.__code__.co_argcount\n3\n&gt;&gt;&gt;\n</code></pre> <p><code>inspect</code>\u6a21\u5757\u63d0\u4f9b\u4e86\u68c0\u67e5\u51fd\u6570\u53c2\u6570\u4fe1\u606f\u7684\u5de5\u5177\u3002</p> <pre><code>&gt;&gt;&gt; import inspect\n&gt;&gt;&gt; inspect.signature(dummy)\n&lt;Signature (a, b: int, c=10, *args, d, e=50, **kwargs)&gt;\n&gt;&gt;&gt; sig = inspect.signature(dummy) \n&gt;&gt;&gt; sig.parameters\nmappingproxy(OrderedDict([('a', &lt;Parameter \"a\"&gt;), ('b', &lt;Parameter \"b: int\"&gt;), ('c', &lt;Parameter \"c=10\"&gt;), ('args', &lt;Parameter \"*args\"&gt;), ('d', &lt;Parameter \"d\"&gt;), ('e', &lt;Parameter \"e=50\"&gt;), ('kwargs', &lt;Parameter \"**kwargs\"&gt;)]))\n&gt;&gt;&gt;\n</code></pre> <p><code>parameters</code>\u5b58\u50a8\u4e86\u53c2\u6570\u540d\u4e0e\u53c2\u6570\u4fe1\u606f\u7684\u6620\u5c04\u5173\u7cfb\u3002\u6bcf\u4e2a<code>Parameter</code>\u5bf9\u8c61\u6709<code>name</code>\u3001<code>default</code>\u548c<code>kind</code>\u5c5e\u6027\u3002<code>dummy</code>\u51fd\u6570\u5404\u4e2a\u53c2\u6570\u7684\u5c5e\u6027\u4fe1\u606f\u5982\u4e0b\uff0c<code>inspect._empty</code>\u8868\u793a\u53c2\u6570\u6ca1\u6709\u9ed8\u8ba4\u503c\uff1a</p> <pre><code>&gt;&gt;&gt; par = sig.parameters \n&gt;&gt;&gt; for parName in par:\n...     print(par[parName].name, par[parName].default, par[parName].kind)\n... \na &lt;class 'inspect._empty'&gt; POSITIONAL_OR_KEYWORD\nb &lt;class 'inspect._empty'&gt; POSITIONAL_OR_KEYWORD\nc 10 POSITIONAL_OR_KEYWORD\nargs &lt;class 'inspect._empty'&gt; VAR_POSITIONAL\nd &lt;class 'inspect._empty'&gt; KEYWORD_ONLY\ne 50 KEYWORD_ONLY\nkwargs &lt;class 'inspect._empty'&gt; VAR_KEYWORD\n&gt;&gt;&gt;\n</code></pre> <p>\u4ece\u8f93\u51fa\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c<code>dummy</code>\u5171\u6709\u56db\u79cd\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u5373\uff1a</p> <ul> <li><code>POSITIONAL_OR_KEYWORD</code>\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4f4d\u53c2\u6570\u6216\u5173\u952e\u5b57\u53c2\u6570\u4f20\u5165</li> <li><code>VAR_POSITIONAL</code>\uff0c\u591a\u4f59\u7684\u5b9a\u4f4d\u53c2\u6570\u7ec4\u6210\u7684\u5143\u7ec4</li> <li><code>KEYWORD_ONLY</code>\uff0c\u53ea\u80fd\u901a\u8fc7\u5173\u952e\u5b57\u53c2\u6570\u4f20\u5165</li> <li><code>VAR_KEYWORD</code>\uff0c\u591a\u4f59\u7684\u5173\u952e\u5b57\u53c2\u6570\u7ec4\u6210\u7684\u5b57\u5178</li> </ul> <p>\u53e6\u4e00\u79cd\u53c2\u6570\u7c7b\u578b\u662f\u53ea\u80fd\u901a\u8fc7\u5b9a\u4f4d\u53c2\u6570\u4f20\u5165\u7684\u53c2\u6570\uff0c\u5373<code>POSITIONAL_ONLY</code>\uff0cPython\u8bed\u6cd5\u4e0d\u652f\u6301\u58f0\u660e\u8fd9\u79cd\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u5728C\u8bed\u8a00API\u4e2d\u53ef\u80fd\u51fa\u73b0\u3002</p> <p>Changed in version 3.8</p> <p>\u5728\u51fd\u6570\u5b9a\u4e49\u4e2d\u53ef\u4ee5\u4f7f\u7528<code>/</code>\u5206\u9694\u53c2\u6570\u5217\u8868\uff0c\u51fa\u73b0\u5728<code>/</code>\u4e4b\u524d\u7684\u53c2\u6570\u5fc5\u987b\u901a\u8fc7\u5b9a\u4f4d\u53c2\u6570\u4f20\u5165\u3002</p> <pre><code>&gt;&gt;&gt; def test(a, /, b, *args, c, **kwargs):\n...     pass\n...\n&gt;&gt;&gt; import inspect\n&gt;&gt;&gt; sig = inspect.signature(test)\n&gt;&gt;&gt; for val in sig.parameters.values():\n...     print(val.name, val.kind)\n...\na POSITIONAL_ONLY\nb POSITIONAL_OR_KEYWORD\nargs VAR_POSITIONAL\nc KEYWORD_ONLY\nkwargs VAR_KEYWORD\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/functions/#_5","title":"\u53c2\u6570\u7684\u7c7b\u578b\u9650\u5236","text":"<p>Python\u4e2d\u5bf9\u51fd\u6570\u53c2\u6570\u7684\u7c7b\u578b\u68c0\u67e5\u4ee5\u51fd\u6570\u6ce8\u89e3\u7684\u5f62\u5f0f\u5b9e\u73b0\u3002\u51fd\u6570\u6ce8\u89e3\u89c4\u5b9a\u4e86\u51fd\u6570\u53ef\u4ee5\u63a5\u53d7\u7684\u53c2\u6570\u7c7b\u578b\u3002</p> <p>\u51fd\u6570\u6ce8\u89e3\u53ef\u4ee5\u4e3a\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002<code>:</code>\u7528\u4e8e\u5bf9\u53c2\u6570\u7684\u6ce8\u89e3\uff0c<code>-&gt;</code>\u8868\u793a\u5bf9\u8fd4\u56de\u503c\u7684\u6ce8\u89e3\uff1a</p> <pre><code>&gt;&gt;&gt; def another_dummy(x: int) -&gt; int:       \n...     return -x\n... \n&gt;&gt;&gt;\n</code></pre> <p>\u6ce8\u610f\uff0c\u6ce8\u89e3\u5e76\u4e0d\u4f1a\u5bfc\u81f4Python\u5bf9\u4f20\u5165\u53c2\u6570\u7684\u7c7b\u578b\u8fdb\u884c\u68c0\u67e5\u3002</p> <pre><code>&gt;&gt;&gt; another_dummy(0.5)         \n-0.5\n&gt;&gt;&gt;\n</code></pre> <p>\u6240\u6709\u7684\u6ce8\u89e3\u5b58\u50a8\u5728\u51fd\u6570\u7684<code>__annotations__</code>\u5c5e\u6027\u4e2d\u3002</p> <pre><code>&gt;&gt;&gt; another_dummy.__annotations__\n{'x': &lt;class 'int'&gt;, 'return': &lt;class 'int'&gt;}\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/functions/#_6","title":"\u51fd\u6570\u5f0f\u7f16\u7a0b","text":""},{"location":"coding/python/functions/#operator","title":"operator\u6a21\u5757","text":"<p><code>operator</code>\u6a21\u5757\u63d0\u4f9b\u4e86Python\u4e2d\u90e8\u5206\u8fd0\u7b97\u7b26\u6216\u64cd\u4f5c\u7684\u51fd\u6570\u5f0f\u5b9e\u73b0\u3002</p> <pre><code>&gt;&gt;&gt; import operator\n&gt;&gt;&gt; operator.add(5, 3)\n8\n&gt;&gt;&gt;\n</code></pre> <p>\u6b64\u5916\uff0c<code>__getitem__</code>\u3001<code>__getattribute__</code>\u65b9\u6cd5\u5728<code>operator</code>\u6a21\u5757\u4e2d\u4e5f\u6709\u5bf9\u5e94\u5b9e\u73b0\uff0c\u4e3a<code>itemgetter</code>\u3001<code>attrgetter</code>\u3002<code>methodcaller</code>\u53ef\u4ee5\u7528\u4e8e\u8c03\u7528\u5bf9\u8c61\u5185\u7684\u67d0\u4e2a\u65b9\u6cd5\uff0c\u4e0e<code>operator</code>\u6a21\u5757\u4e2d\u7684\u5176\u4ed6\u51fd\u6570\u4e0d\u540c\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a\u53ef\u8c03\u7528\u5bf9\u8c61\u3002</p> <pre><code>&gt;&gt;&gt; sort = operator.methodcaller('sort')\n&gt;&gt;&gt; sort_rev = operator.methodcaller('sort', reverse=True)\n&gt;&gt;&gt; a = [1, 3, 2]\n&gt;&gt;&gt; sort(a)\n&gt;&gt;&gt; a\n[1, 2, 3]\n&gt;&gt;&gt; sort_rev(a)\n&gt;&gt;&gt; a\n[3, 2, 1]\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/functions/#functools","title":"functools\u6a21\u5757","text":"<p>functools\u63d0\u4f9b\u4e86\u4e0e\u51fd\u6570\u5f0f\u7f16\u7a0b\u76f8\u5173\u7684\u4e00\u7cfb\u5217\u51fd\u6570\u5de5\u5177\u3002</p> <p><code>partial</code>\u7528\u4e8e\u9501\u5b9a\u51fd\u6570\u7684\u4e00\u90e8\u5206\u53c2\u6570\u3002\u5176\u4f59\u53c2\u6570\u53ef\u4ee5\u5728\u8c03\u7528\u65f6\u6307\u5b9a\uff08\u5b9a\u4f4d\u53c2\u6570\u53ea\u80fd\u6309\u987a\u5e8f\u6307\u5b9a\uff0c\u5173\u952e\u5b57\u53c2\u6570\u53ef\u4ee5\u4efb\u610f\u6307\u5b9a\uff09\uff1a</p> <pre><code>&gt;&gt;&gt; from functools import partial\n&gt;&gt;&gt; part = partial(divmod, 3) \n&gt;&gt;&gt; part(2)\n(1, 1)\n&gt;&gt;&gt;\n</code></pre> <p><code>reduce</code>\u5c06\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\u7684\u51fd\u6570\u5e94\u7528\u5230\u4e00\u4e2a\u5e8f\u5217\u4e0a\uff0c\u5f97\u5230\u4e00\u4e2a\u7ed3\u679c\u3002\u501f\u52a9<code>operator</code>\u6a21\u5757\u4e2d\u63d0\u4f9b\u7684\u8fd0\u7b97\u7b26\uff0c<code>reduce</code>\u6a21\u5757\u53ef\u4ee5\u5b9e\u73b0\u9636\u4e58\u7b49\u9700\u8981\u5faa\u73af\u624d\u80fd\u5b9e\u73b0\u7684\u8fd0\u7b97\u64cd\u4f5c\uff1a</p> <pre><code>&gt;&gt;&gt; from functools import reduce\n&gt;&gt;&gt; def fact(x: int):\n...     return reduce(operator.mul, range(1, x + 1))\n... \n&gt;&gt;&gt; fact(5)\n120\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/killable-thread/","title":"Python\u5173\u95ed\u7ebf\u7a0b","text":"<p>\u4f7f\u7528<code>PyThreadState_SetAsyncExc</code>\u51fd\u6570\u5728\u5b50\u7ebf\u7a0b\u4e2d\u5f15\u53d1\u5f02\u5e38\uff0c\u4ece\u800c\u4f7f\u7ebf\u7a0b\u63d0\u524d\u7ed3\u675f\u3002</p> <p>\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>import threading \nimport ctypes \nimport time \n\nclass thread_with_exception(threading.Thread): \n    def __init__(self, name): \n        threading.Thread.__init__(self) \n        self.name = name \n\n    def run(self): \n\n        # target function of the thread class \n        try: \n            while True: \n                print('running ' + self.name) \n        finally: \n            print('ended') \n\n    def get_id(self): \n\n        # returns id of the respective thread \n        if hasattr(self, '_thread_id'): \n            return self._thread_id \n        for id, thread in threading._active.items(): \n            if thread is self: \n                return id\n\n    def raise_exception(self): \n        thread_id = self.get_id() \n        res = ctypes.pythonapi.PyThreadState_SetAsyncExc(thread_id, \n              ctypes.py_object(SystemExit)) \n        if res &gt; 1: \n            ctypes.pythonapi.PyThreadState_SetAsyncExc(thread_id, 0) \n            print('Exception raise failure') \n\nt1 = thread_with_exception('Thread 1') \nt1.start() \ntime.sleep(2) \nt1.raise_exception() \nt1.join() \n</code></pre> <p>\u628a<code>run()</code>\u4e2d\u6267\u884c\u7684\u64cd\u4f5c\u4ee5\u53c2\u6570\u7684\u5f62\u5f0f\u4f20\u9012\uff1a</p> <pre><code>class KillableThread(threading.Thread):\n\"\"\"\n    A thread class extending threading.Thread, provides a kill() method to stop the thread and a getResult() method to get the return value of the thread.\n    \"\"\"\n\n    def __init__(self, func: Callable, *args, **kwargs):\n        super().__init__()\n        self.func: Callable = func\n        self.funcArg: dict = kwargs\n        self.funcTup: Tuple = args\n        self.result: Any = None\n        self.exception: Any = None\n\n    def run(self):\n\"\"\"\n        Executes the function here\n        \"\"\"\n        try:\n            self.result = self.func(*self.funcTup, **self.funcArg)\n        except BaseException as e:\n            self.exception = e\n\n    def get_id(self):\n\"\"\"\n        Get the id of the thread\n        \"\"\"\n        if hasattr(self, '_thread_id'):\n            return self._thread_id\n        for id, thread in threading._active.items():\n            if thread is self:\n                return id\n\n    def kill(self):\n\"\"\"\n        Stops the thread\n        \"\"\"\n        thread_id = self.get_id()\n        res = ctypes.pythonapi.PyThreadState_SetAsyncExc(thread_id,\n                                                         ctypes.py_object(SystemExit))\n        if res &gt; 1:\n            ctypes.pythonapi.PyThreadState_SetAsyncExc(thread_id, 0)\n            print('Exception raise failure')\n\n    def getResult(self):\n        if self.exception is None:\n            return self.result\n        else:\n            raise self.exception\n</code></pre> <p>\u6765\u6e90\uff1ahttps://www.geeksforgeeks.org/python-different-ways-to-kill-a-thread</p>"},{"location":"coding/python/magic-functions/","title":"\u9b54\u672f\u65b9\u6cd5","text":"<p>\u672c\u6587\u4e3b\u8981\u6db5\u76d6Python\u5bf9\u8c61\u4e2d\u7684\u9b54\u672f\u65b9\u6cd5\u3002\u9b54\u672f\u65b9\u6cd5\u662f\u7c7b\u5bf9\u8c61\u4e2d\u7684\u4e00\u79cd\u7279\u6b8a\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u62e5\u6709\u56fa\u5b9a\u7684\u53c2\u6570\u5217\u8868\u548c\u7279\u6b8a\u7684\u8c03\u7528\u65f6\u673a\u3002</p> <p>\u9b54\u672f\u65b9\u6cd5\u4ee5\u53cc\u4e0b\u5212\u7ebf<code>__</code>\u5f00\u5934\uff0c\u4ee5\u53cc\u4e0b\u5212\u7ebf\u7ed3\u5c3e\u3002</p> <p>Python\u4e2d\u7684\u8fd0\u7b97\u7b26\u91cd\u8f7d\u901a\u8fc7\u9b54\u672f\u65b9\u6cd5\u5b9e\u73b0\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u9b54\u672f\u65b9\u6cd5\u5206\u4e3a\u4e0e\u8fd0\u7b97\u7b26\u65e0\u5173\u7684\u7279\u6b8a\u65b9\u6cd5\u53ca\u4e0e\u8fd0\u7b97\u7b26\u6709\u5173\u7684\u7279\u6b8a\u65b9\u6cd5</p>"},{"location":"coding/python/magic-functions/#_2","title":"\u4e0e\u8fd0\u7b97\u7b26\u65e0\u5173\u7684\u9b54\u672f\u65b9\u6cd5","text":"<p>\u6d89\u53ca\u5230\u5b57\u7b26\u4e32\u4e0e\u5b57\u8282\u5e8f\u5217\u7684\u9b54\u672f\u65b9\u6cd5\uff1a</p> \u65b9\u6cd5\u540d \u53c2\u6570\u5217\u8868 \u8c03\u7528\u65f6\u673a \u8fd4\u56de\u503c\u7c7b\u578b \u5907\u6ce8 <code>__repr__</code> <code>self</code> \u5f53\u8c03\u7528<code>repr()</code>\u51fd\u6570\u65f6 <code>str</code> \u8fd4\u56de\u503c\u5e94\u4e3a\u91cd\u5efa\u8be5\u5bf9\u8c61\u7684Python\u8868\u8fbe\u5f0f\uff08\u5982\u679c\u53ef\u80fd\uff09\uff0c\u6216\u5305\u542b\u5176\u4ed6\u4fe1\u606f\u7684\u5b57\u7b26\u4e32<code>&lt;...&gt;</code> <code>__str__</code> <code>self</code> \u5f53\u8c03\u7528<code>str()</code>\u51fd\u6570\u65f6 <code>str</code> \u8c03\u7528<code>print()</code>\u7b49\u5176\u4ed6\u51fd\u6570\u65f6\u4f1a\u9690\u5f0f\u8c03\u7528<code>__str__()</code>\uff0c\u5f53\u4e0d\u5b58\u5728<code>__str__()</code>\u65f6\u4f1a\u81ea\u52a8\u8c03\u7528<code>__repr__()</code> <code>__format__</code> <code>self, format_spec</code> \u5f53\u8c03\u7528<code>format()</code>\u51fd\u6570\u65f6 <code>str</code> <code>object.__format__(x, '')</code>\u7b49\u4ef7\u4e8e<code>str(x)</code> <code>__bytes__</code> <code>self</code> \u5f53\u8c03\u7528<code>bytes()</code>\u51fd\u6570\u65f6 <code>bytes</code> \u8fd4\u56de\u503c\u662f\u5bf9\u8c61\u7684\u5b57\u8282\u8868\u793a <p>\u6d89\u53ca\u5230\u6570\u503c\u7c7b\u578b\u8f6c\u6362\u7684\u9b54\u672f\u65b9\u6cd5\uff1a</p> \u65b9\u6cd5\u540d \u53c2\u6570\u5217\u8868 \u8c03\u7528\u65f6\u673a \u8fd4\u56de\u503c\u7c7b\u578b \u5907\u6ce8 <code>__bool__</code> <code>self</code> \u8c03\u7528<code>bool()</code>\u51fd\u6570\u65f6 <code>bool</code> \u5f53<code>__bool__</code>\u51fd\u6570\u6ca1\u6709\u5b9a\u4e49\u65f6\uff0c\u4f1a\u9690\u5f0f\u8c03\u7528<code>__len__</code>\uff0c\u5982\u679c<code>__len__</code>\u4e5f\u6ca1\u6709\u5b9a\u4e49\uff0c\u5219\u8fd4\u56de<code>True</code> <code>__complex__</code> <code>self</code> \u8c03\u7528<code>commplex()</code>\u51fd\u6570\u65f6 <code>complex</code> <code>__int__</code> <code>self</code> \u8c03\u7528<code>int()</code>\u51fd\u6570\u65f6 <code>int</code> <code>__float__</code> <code>self</code> \u8c03\u7528<code>float()</code>\u51fd\u6570\u65f6 <code>float</code> <code>__hash__</code> <code>self</code> \u8c03\u7528<code>hash()</code> \u51fd\u6570\u65f6 <code>hash()</code>\u51fd\u6570\u5c06<code>__hash__()</code>\u7684\u8fd4\u56de\u503c\u622a\u65ad\u5230<code>Py_ssize_t</code>\u7684\u8303\u56f4\u5185\uff0c64\u4f4d\u7cfb\u7edf\u4e0b<code>Py_ssize_t</code>\u4e3a8\u5b57\u8282\uff1b<code>set</code>\u7b49\u7c7b\u578b\u7684\u64cd\u4f5c\u4e5f\u4f1a\u8c03\u7528\u5bf9\u8c61\u7684<code>__hash__</code>\u51fd\u6570 <code>__index__</code> <code>self</code> \u8c03\u7528<code>operator.index()</code>\u6216Python\u9700\u8981\u6574\u6570\u503c\u65f6 <code>int</code> \u5f53<code>__int__</code>\u3001<code>__float__</code>\u3001<code>__complex__</code>\u6ca1\u6709\u5b9e\u73b0\u65f6\uff0c\u8fd9\u4e9b\u51fd\u6570\u9690\u5f0f\u5730\u8c03\u7528<code>__index__</code> <p>\u96c6\u5408\u76f8\u5173\u64cd\u4f5c</p> \u65b9\u6cd5\u540d \u53c2\u6570\u5217\u8868 \u8c03\u7528\u65f6\u673a \u8fd4\u56de\u503c\u7c7b\u578b \u5907\u6ce8 <code>__len__</code> <code>self</code> \u8c03\u7528<code>len()</code>\u51fd\u6570\u65f6 <code>int</code> \u8fd4\u56de\u503c\u5fc5\u987b\u4e3a\u975e\u8d1f\u6574\u6570\uff0c\u5728CPython\u4e2d\u8fd4\u56de\u503c\u4e0d\u80fd\u8d85\u8fc7<code>sys.maxsize</code>\u4e2d\u5b9a\u4e49\u7684\u503c\uff0c\u5426\u5219<code>len()</code>\u7b49\u51fd\u6570\u4f1a\u629b\u51fa<code>OverflowError</code>\u7b49\u5f02\u5e38 <code>__getitemm__</code> <code>self, key</code> \u4f7f\u7528<code>[]</code>\u8fd0\u7b97\u7b26\u65f6\uff08\u53f3\u503c\uff09 <code>key</code>\u53ef\u4ee5\u4e3a\u5408\u6cd5\u7684\u6570\u7ec4\u4e0b\u6807\uff0c\u4e5f\u53ef\u4ee5\u662f\u53cd\u5411\u7684\u4e0b\u6807\uff0c\u4e5f\u53ef\u4ee5\u662f\u5e8f\u5217\u7684\u5207\u7247\uff0c\u8be5\u51fd\u6570\u5e94\u5728<code>key</code>\u7c7b\u578b\u4e0d\u5bf9\u5e94\u65f6\u629b\u51fa<code>TypeError</code>\uff0c<code>key</code>\u8d85\u51fa\u8303\u56f4\u65f6\u629b\u51fa<code>IndexError</code>\u6216<code>KeyError</code>\uff08\u5bf9\u4e8e\u6620\u5c04\u7c7b\u578b\uff09 <code>__setitem__</code> <code>self, key, value</code> \u4f7f\u7528<code>[]</code>\u8fd0\u7b97\u7b26\u65f6\uff08\u5de6\u503c\uff09 <code>None</code> <code>key</code>\u53c2\u6570\u7684\u53d6\u503c\u53ca\u5f02\u5e38\u5904\u7406\u4e0e<code>__getitem__</code>\u51fd\u6570\u76f8\u540c <code>__delitem__</code> <code>self, key</code> \u4f7f\u7528<code>del</code>\u5220\u9664\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u65f6 <code>None</code> \u5bf9\u4e8e\u4e0d\u53ef\u5220\u9664\u7684\u5e8f\u5217\u6216\u6620\u5c04\uff0c\u65e0\u9700\u5b9e\u73b0\u8be5\u51fd\u6570\uff0c\u5176\u4ed6\u540c<code>__getitem__</code> <code>__contains__</code> <code>self, item</code> \u4f7f\u7528<code>in</code>\u4f5c\u4e3a\u8fd0\u7b97\u7b26\u65f6 <code>bool</code> \u5bf9\u4e8e\u6620\u5c04\u7c7b\u578b\uff0c<code>__contains__</code>\u63a5\u6536\u7684<code>item</code>\u53c2\u6570\u5bf9\u5e94\u6620\u5c04\u7684<code>key</code>\u90e8\u5206\u800c\u4e0d\u662f<code>value</code>\u90e8\u5206\u3002\u82e5\u6ca1\u6709\u5b9a\u4e49\u8be5\u51fd\u6570\uff0cPython\u9996\u5148\u901a\u8fc7<code>__iter__</code>\u8fdb\u884c\u67e5\u627e\uff0c\u5176\u6b21\u4f7f\u7528<code>__getitem__</code>\u8fdb\u884c\u67e5\u627e <p>\u8fed\u4ee3\u5668\u4e0e\u679a\u4e3e\u7c7b\u578b</p> \u65b9\u6cd5\u540d \u53c2\u6570\u5217\u8868 \u8c03\u7528\u65f6\u673a \u8fd4\u56de\u503c\u7c7b\u578b \u5907\u6ce8 <code>__iter__</code> <code>self</code> \u8c03\u7528<code>iter()</code>\u51fd\u6570\u6216\u4f7f\u7528\u5faa\u73af\u65f6 \u8fd4\u56de\u503c\u5e94\u4e3a\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u5bf9\u4e8e\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c<code>__iter__</code>\u51fd\u6570\u8fd4\u56de\u81ea\u8eab <code>__reversed__</code> <code>self</code> \u8c03\u7528<code>reversed()</code>\u51fd\u6570\u65f6 \u8fd4\u56de\u503c\u5e94\u4e3a\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u4e14\u662f\u539f\u5e8f\u5217\u7684\u9006\u5e8f <code>__next__</code> <code>self</code> \u8c03\u7528<code>next()</code>\u51fd\u6570\u65f6 \u8fd4\u56de\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u5f53\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u65f6\u629b\u51fa<code>StopIteration</code> <p>\u51fd\u6570\u8c03\u7528</p> \u65b9\u6cd5\u540d \u53c2\u6570\u5217\u8868 \u8c03\u7528\u65f6\u673a \u8fd4\u56de\u503c\u7c7b\u578b \u5907\u6ce8 <code>__call__</code> <code>self, *args, **kwargs</code> \u5f53\u5bf9\u8c61\u4ee5\u51fd\u6570\u7684\u65b9\u5f0f\u88ab\u8c03\u7528\u65f6 \u5b9a\u4e49\u4e86<code>__call__</code>\u65b9\u6cd5\u7684\u5bf9\u8c61\u5c5e\u4e8e<code>typing.Callable</code>\u7c7b\u578b <p>\u4e0a\u4e0b\u6587\u7ba1\u7406\uff08<code>with</code>\uff09\u5173\u952e\u8bcd\uff1a</p> \u65b9\u6cd5\u540d \u53c2\u6570\u5217\u8868 \u8c03\u7528\u65f6\u673a \u8fd4\u56de\u503c\u7c7b\u578b \u5907\u6ce8 <code>__enter__</code> <code>self</code> \u4f7f\u7528<code>with</code>\u5173\u952e\u8bcd\u58f0\u660e\u4e0a\u4e0b\u6587\u65f6 <code>Any</code> \u8fd4\u56de\u503c\u5206\u914d\u7ed9<code>as</code>\u5173\u952e\u8bcd\u6307\u660e\u7684\u5bf9\u8c61 <code>__exit__</code> <code>self, exc_type, exc_value, traceback</code> \u79bb\u5f00<code>with</code>\u5757\u65f6 <code>Any</code> \u82e5<code>with</code>\u5757\u6267\u884c\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u51fa\u73b0\u5f02\u5e38\uff0c\u5219<code>exc_type, exc_value, traceback</code>\u53c2\u6570\u5747\u4e3a<code>None</code>\uff0c\u5426\u5219<code>exit</code>\u5757\u53ef\u4ee5\u5bf9\u5f02\u5e38\u8fdb\u884c\u5904\u7406 <p>\u5bf9\u8c61\u7ba1\u7406</p> \u65b9\u6cd5\u540d \u53c2\u6570\u5217\u8868 \u8c03\u7528\u65f6\u673a \u8fd4\u56de\u503c\u7c7b\u578b \u5907\u6ce8 <code>__new__</code> <code>cls[, ...]</code> \u521b\u5efa\u7c7b\u5b9e\u4f8b\u65f6 <code>Any</code> <code>__new__</code>\u4e3a\u9759\u6001\u65b9\u6cd5\u4e14\u5148\u4e8e<code>__init__</code>\u6267\u884c\uff0c<code>__new__</code>\u7684\u5176\u4f59\u53c2\u6570\u4f1a\u4f20\u9012\u7ed9<code>__init__</code>\u3002\u82e5<code>__new__</code>\u8fd4\u56de\u7684\u7c7b\u578b\u4e0e\u521b\u5efa\u7684\u7c7b\u578b\u4e0d\u5bf9\u5e94\uff0c\u5219\u4e0d\u4f1a\u6267\u884c<code>__init__</code> <code>__init__</code> <code>self, ...</code> \u521d\u59cb\u5316\u7c7b\u5b9e\u4f8b\u65f6 <code>None</code> \u82e5\u57fa\u7c7b\u5b9a\u4e49\u4e86<code>__init__</code>\uff0c\u5219\u5728\u5b50\u7c7b\u7684<code>__init__</code>\u4e2d\u5fc5\u987b\u6709<code>super().__init()</code>\u7684\u663e\u5f0f\u8c03\u7528 <code>__del__</code> <code>self</code> \u5bf9\u8c61\u9500\u6bc1\u65f6 <code>None</code> \u5f53\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\u51cf\u4e3a0\u65f6\uff0c\u5bf9\u8c61\u624d\u53ef\u80fd\u88ab\u5220\u9664 <p>\u5c5e\u6027\u7ba1\u7406</p> \u65b9\u6cd5\u540d \u53c2\u6570\u5217\u8868 \u8c03\u7528\u65f6\u673a \u8fd4\u56de\u503c\u7c7b\u578b \u5907\u6ce8 <code>__getattribute__</code> <code>self, name</code> \u4f7f\u7528<code>self.name</code>\u8bbf\u95ee\u5bf9\u8c61\u7684\u5c5e\u6027\u65f6 <code>Any</code> \u4e3a\u907f\u514d\u65e0\u9650\u9012\u5f52\uff0c\u5b50\u7c7b\u7684<code>__getattribute__</code>\u65b9\u6cd5\u7684\u5b9e\u73b0\u4e2d\u5fc5\u987b\u5305\u542b\u7236\u7c7b\u7684<code>__getattribute__</code>\u65b9\u6cd5\u8c03\u7528 <code>__getattr__</code> <code>self, name</code> \u4f7f\u7528<code>self.name</code>\u8bbf\u95ee\u5bf9\u8c61\u7684\u4e0d\u5b58\u5728\u5c5e\u6027\u6216<code>__getattribute__</code>\u51fd\u6570\u629b\u51fa<code>AttributeError</code>\u5f02\u5e38 <code>Any</code> \u5f53<code>__getattribute__</code>\u6b63\u5e38\u6267\u884c\u65f6<code>__getattr__</code>\u4e0d\u4f1a\u6267\u884c <code>__setattr__</code> <code>self, name, value</code> \u4f7f\u7528<code>self.name</code>\u8bbe\u7f6e\u5c5e\u6027\u7684\u503c\u65f6 <code>None</code> \u5f53\u8bd5\u56fe\u901a\u8fc7<code>__setattr__</code>\u5411\u5bf9\u8c61\u8bbe\u7f6e\u5c5e\u6027\u503c\u65f6\u5fc5\u987b\u901a\u8fc7\u7c7b\u578b\u7684<code>__setattr__</code>\u65b9\u6cd5\u8fdb\u884c\u8bbe\u7f6e <code>__delattr__</code> <code>self, name</code> \u6267\u884c<code>del self.name</code>\u65f6 <code>None</code> \u4ec5\u5f53<code>del self.name</code>\u8bed\u53e5\u6709\u610f\u4e49\u65f6\uff0c\u624d\u9700\u8981\u5b9e\u73b0\u8be5\u65b9\u6cd5 <code>__dir__</code> <code>self</code> \u6267\u884c<code>dir()</code>\u51fd\u6570\u65f6 <code>Sequence</code> <code>dir()</code>\u4f1a\u81ea\u52a8\u8fdb\u884c\u6392\u5e8f\u5904\u7406"},{"location":"coding/python/magic-functions/#_3","title":"\u4e0e\u8fd0\u7b97\u7b26\u6709\u5173\u7684\u9b54\u672f\u65b9\u6cd5","text":"<p>\u4e00\u5143\u8fd0\u7b97\u7b26</p> \u63cf\u8ff0 \u65b9\u6cd5\u540d \u8fd0\u7b97\u7b26 \u53d6\u8d1f <code>__neg__</code> <code>-</code> \u53d6\u6b63 <code>__pos__</code> <code>+</code> \u7edd\u5bf9\u503c <code>__abs__</code> <code>abs()</code> <p>\u6bd4\u8f83\u8fd0\u7b97\u7b26</p> \u63cf\u8ff0 \u65b9\u6cd5\u540d \u8fd0\u7b97\u7b26 \u5c0f\u4e8e <code>__lt__</code> <code>&lt;</code> \u5c0f\u4e8e\u7b49\u4e8e <code>__le__</code> <code>&lt;=</code> \u7b49\u4e8e <code>__eq__</code> <code>==</code> \u4e0d\u7b49\u4e8e <code>__ne__</code> <code>!=</code> \u5927\u4e8e <code>__gt__</code> <code>&gt;</code> \u5927\u4e8e\u7b49\u4e8e <code>__ge__</code> <code>&gt;=</code> <p>\u7b97\u672f\u8fd0\u7b97\u7b26</p> \u63cf\u8ff0 \u65b9\u6cd5\u540d \u8fd0\u7b97\u7b26 \u76f8\u52a0 <code>__add__</code> <code>+</code> \u76f8\u51cf <code>__sub__</code> <code>-</code> \u76f8\u4e58 <code>__mul__</code> <code>*</code> \u5b9e\u6570\u9664 <code>__truediv__</code> <code>/</code> \u6574\u6570\u9664 <code>__floordiv__</code> <code>//</code> \u53d6\u4f59 <code>__mod__</code> <code>%</code> \u6574\u6570\u9664+\u53d6\u4f59 <code>__divmod__</code> <code>divmod()</code> \u4e58\u65b9 <code>__pow__</code> <code>**</code> \u53d6\u6574 <code>__round__</code> <code>round()</code> <p>\u53cd\u5411\u7b97\u672f\u8fd0\u7b97\u7b26\u5728\u65b9\u6cd5\u540d\u524d\u9762\u52a0<code>r</code>\uff0c\u5982<code>__radd__</code>\u3002\u589e\u91cf\u8d4b\u503c\u7b97\u672f\u8fd0\u7b97\u7b26\u5728\u65b9\u6cd5\u540d\u524d\u9762\u52a0<code>i</code>\uff0c\u5982<code>__iadd__</code>\u3002</p> <p>\u4f4d\u8fd0\u7b97\u7b26</p> \u63cf\u8ff0 \u65b9\u6cd5\u540d \u8fd0\u7b97\u7b26 \u6309\u4f4d\u53d6\u53cd <code>__invert__</code> <code>~</code> \u5de6\u79fb <code>__lshift__</code> <code>&lt;&lt;</code> \u53f3\u79fb <code>__rshift__</code> <code>&gt;&gt;</code> \u6309\u4f4d\u4e0e <code>__and__</code> <code>&amp;</code> \u6309\u4f4d\u6216 <code>__or__</code> <code>|</code> \u6309\u4f4d\u5f02\u6216 <code>__xor__</code> <code>^</code> <p>\u53cd\u5411\u7b97\u672f\u8fd0\u7b97\u7b26\u5728\u65b9\u6cd5\u540d\u524d\u9762\u52a0<code>r</code>\uff0c\u589e\u91cf\u8d4b\u503c\u7b97\u672f\u8fd0\u7b97\u7b26\u5728\u65b9\u6cd5\u540d\u524d\u9762\u52a0<code>i</code>\u3002</p>"},{"location":"coding/python/mapping/","title":"Python\u4e2d\u7684\u6620\u5c04\u7c7b\u578b","text":"<p>Python\u4e2d\u6700\u5e38\u89c1\u7684\u6620\u5c04\u7c7b\u578b\u662f\u5b57\u5178\u3002\u672c\u6587\u5c06\u4ece\u5b57\u5178\u5165\u624b\u5bf9Python\u4e2d\u7684\u6620\u5c04\u7c7b\u578b\u8fdb\u884c\u63a2\u8ba8\u3002</p>"},{"location":"coding/python/mapping/#_1","title":"\u5b57\u5178","text":"<p>\u5b57\u5178\u7c7b\u578b<code>dict</code>\u5bf9\u5e94\u7684\u62bd\u8c61\u57fa\u7c7b\u4e3a<code>MutableMapping</code>\u3002\u800c<code>MutableMapping</code>\u662f<code>Mapping</code>\u7684\u5b50\u7c7b\u3002</p> <p><code>dict</code>\u4e2d\u7684\u6570\u636e\u7ec4\u7ec7\u4e3a\u952e-\u503c\u5bf9\u7684\u5f62\u5f0f\uff0c\u5b57\u5178\u5bf9\u503c\u7684\u7c7b\u578b\u6ca1\u6709\u8981\u6c42\uff0c\u4f46\u8981\u6c42\u952e\u7684\u7c7b\u578b\u5fc5\u987b\u53ef\u6563\u5217\uff08hashable\uff09\u3002\u7531\u6b64\u53ef\u89c1\uff0c\u5b57\u5178\u7ed3\u6784\u7684\u5e95\u5c42\u5b9e\u73b0\u7c7b\u4f3c\u6563\u5217\u8868\uff0c\u4ee5\u52a0\u5feb\u5b57\u5178\u5185\u5143\u7d20\u7684\u8bbf\u95ee\u901f\u5ea6\u3002\u5b57\u5178\u7684\u6267\u884c\u6548\u7387\u8fdc\u9ad8\u4e8e\u5217\u8868\u3002</p> <p>Python 3.6\u53ca\u4ee5\u540e\uff0c<code>dict</code>\u7c7b\u578b\u5728\u5b9e\u73b0\u4e0a\u662f\u6709\u5e8f\u7684\uff0c\u952e\u7684\u987a\u5e8f\u53d6\u51b3\u4e8e\u6dfb\u52a0\u987a\u5e8f\uff0c\u4f46\u6807\u51c6\u5e76\u6ca1\u6709\u89c4\u5b9a<code>dict</code>\u7c7b\u578b\u7684\u6709\u5e8f\u6027\u3002\u56e0\u6b64\u4e24\u4e2a\u952e\u987a\u5e8f\u4e0d\u540c\u7684\u5b57\u5178\u88ab\u89c6\u4e3a\u76f8\u540c\u3002</p> <pre><code>&gt;&gt;&gt; a = {1: 2, 2: 1}\n&gt;&gt;&gt; b = {2: 1, 1: 2}\n&gt;&gt;&gt; a == b\nTrue\n&gt;&gt;&gt;\n</code></pre> <p>New in version 3.9</p> <p>Python 3.9\u4e2d\uff0c\u5b57\u5178\u5bf9\u8c61\u652f\u6301<code>|</code>\u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u5c06\u4e24\u4e2a\u5b57\u5178\u5408\u5e76\u4e3a\u4e00\u4e2a\u3002\u5f53\u4e24\u4e2a\u5b57\u5178\u4e2d\u51fa\u73b0\u91cd\u590d\u503c\u65f6\u53f3\u4fa7\u5b57\u5178\u4e2d\u7684\u503c\u4f18\u5148\u3002</p> <pre><code>&gt;&gt;&gt; import sys \n&gt;&gt;&gt; ver = sys.version_info\n&gt;&gt;&gt; if ver.major == 3 and ver.minor &gt; 8:\n...     a = {1: 2}\n...     b = {3: 4}\n...     print(a | b == {1: 2, 3: 4})\n... else:\n...     print(True)\nTrue\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/mapping/#_2","title":"\u8fed\u4ee3","text":"<p><code>dict</code>\u5bf9\u8c61\u662f\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u5f53\u5bf9<code>dict</code>\u5bf9\u8c61\u8fdb\u884c\u8fed\u4ee3\u65f6\uff0c\u5b9e\u9645\u4e0a\u662f\u8fed\u4ee3<code>dict</code>\u7684\u952e\u3002</p> <pre><code>&gt;&gt;&gt; for key in {1: 2, 3: 4}:\n...     print(key)\n...\n1\n3\n&gt;&gt;&gt;\n</code></pre> <ul> <li><code>dict.keys()</code>\u65b9\u6cd5\u8fd4\u56de\u7531\u5b57\u5178\u4e2d\u7684\u952e\u7ec4\u6210\u7684\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff1b</li> <li><code>dict.values()</code>\u65b9\u6cd5\u8fd4\u56de\u7531\u5b57\u5178\u4e2d\u7684\u503c\u7ec4\u6210\u7684\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff1b</li> <li><code>dict.items()</code>\u65b9\u6cd5\u8fd4\u56de\u7531\u952e-\u503c\u5143\u7ec4\u7ec4\u6210\u7684\u53ef\u8fed\u4ee3\u5bf9\u8c61\u3002</li> </ul> <p>\u6ce8\u610f\uff0c\u6bcf\u6b21\u8c03\u7528<code>values</code>\u65b9\u6cd5\u65f6\uff0c\u90fd\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u8fed\u4ee3\u5668\u3002\u56e0\u6b64\uff0c\u5373\u4f7f\u662f\u5bf9\u540c\u4e00\u4e2a\u5b57\u5178\u8c03\u7528\u591a\u6b21<code>values</code>\u65b9\u6cd5\uff0c\u5176\u8fd4\u56de\u503c\u4e5f\u4e0d\u60f3\u7b49\u3002</p> <p>Changed in version 3.8</p> <p>\u5185\u7f6e\u51fd\u6570<code>reversed</code>\u652f\u6301\u4f20\u9012\u5b57\u5178\u4f5c\u4e3a\u53c2\u6570\uff0c\u8fd4\u56de\u5b57\u5178\u4e2d\u7684\u952e\u9006\u5e8f\u7ec4\u6210\u7684\u53ef\u8fed\u4ee3\u5bf9\u8c61\u3002</p> <p>\u6620\u5c04\u7c7b\u578b\u901a\u5e38\u662f\u53ef\u4fee\u6539\u7684\uff0c\u4f7f\u7528<code>types.MappingProxyType</code>\u4f1a\u521b\u5efa\u4e00\u4e2a\u539f\u6620\u5c04\u7684\u89c6\u56fe\u3002\u5bf9\u539f\u6620\u5c04\u7684\u4efb\u4f55\u4fee\u6539\u90fd\u4f1a\u53cd\u6620\u5728\u89c6\u56fe\u4e2d\uff0c\u4f46\u4e0d\u80fd\u5bf9\u89c6\u56fe\u8fdb\u884c\u4efb\u4f55\u76f4\u63a5\u7684\u4fee\u6539\u3002\u6b64\u65b9\u6cd5\u95f4\u63a5\u5730\u521b\u5efa\u4e00\u4e2a\u4e0d\u53ef\u4fee\u6539\u7684\u6620\u5c04\u7c7b\u578b\u3002</p> <pre><code>&gt;&gt;&gt; from types import MappingProxyType\n&gt;&gt;&gt; a = {1: 2, 3: 4}\n&gt;&gt;&gt; b = MappingProxyType(a)\n&gt;&gt;&gt; b\nmappingproxy({1: 2, 3: 4})\n&gt;&gt;&gt; a.update({1: 5})\n&gt;&gt;&gt; b\nmappingproxy({1: 5, 3: 4})\n&gt;&gt;&gt; b[1] = 2\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: 'mappingproxy' object does not support item assignment\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/mapping/#_3","title":"\u53ef\u6563\u5217\u7c7b\u578b","text":"<p>\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\u7684\u5bf9\u8c61\u79f0\u4e3a\u53ef\u6563\u5217\u5bf9\u8c61\uff1a</p> <ol> <li>\u5982\u679c\u8be5\u5bf9\u8c61\u53ef\u6563\u5217\uff0c\u5219\u5728\u5176\u751f\u547d\u5468\u671f\u4e2d\uff0c\u8be5\u6563\u5217\u503c\u4e0d\u53d8</li> <li>\u5bf9\u8c61\u5b9e\u73b0\u4e86<code>__hash__()</code>\u4e0e<code>__eq__()</code>\u65b9\u6cd5\uff08\u6ca1\u6709\u5b9e\u73b0<code>__eq__()</code>\u65b9\u6cd5\u7684\u5bf9\u8c61\u4e0d\u5e94\u5b9e\u73b0<code>__hash__()</code>\u65b9\u6cd5\uff09</li> <li>\u5982\u679c\u5b83\u548c\u53e6\u4e00\u4e2a\u5bf9\u8c61\u76f8\u7b49\uff0c\u5219\u4e24\u8005\u6709\u76f8\u540c\u7684\u6563\u5217\u503c</li> </ol> <p>\u5982\uff1a</p> <pre><code>&gt;&gt;&gt; a = \"abc\"\n&gt;&gt;&gt; b = \"\".join([\"a\", \"b\", \"c\"])\n&gt;&gt;&gt; a is b\nFalse\n&gt;&gt;&gt; hash(a) == hash(b)\nTrue\n&gt;&gt;&gt;\n</code></pre> <p>\u6ce8\uff1a\u82e5\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7c7b\u578b\u5b9a\u4e49\u4e86<code>__eq__</code>\uff0c\u4e14\u6ca1\u6709\u5b9a\u4e49<code>__hash__</code>\uff0c<code>__hash__</code>\u4f1a\u88ab\u8bbe\u4e3a<code>None</code>\u3002\u53ef\u6563\u5217\u7684\u81ea\u5b9a\u4e49\u5bf9\u8c61\u5fc5\u987b\u6709<code>__hash__</code>\u65b9\u6cd5\u3002</p> <p>\u4ee5\u4e0b\u5185\u5bb9\u6765\u81ea\u4e8ePython\u6587\u6863 </p> <p>\u6839\u636e\u5982\u4e0a\u89c4\u5219\u53ef\u4ee5\u5224\u65ad\u4e00\u4e9b\u5185\u7f6e\u6570\u636e\u7ed3\u6784\u662f\u5426\u4e3a\u53ef\u6563\u5217\u5bf9\u8c61</p> <ul> <li>\u53ef\u53d8\u5e8f\u5217\u5728\u751f\u547d\u5468\u671f\u4e2d\u5e8f\u5217\u7684\u5185\u5bb9\u53ef\u80fd\u53d1\u751f\u53d8\u5316\uff0c\u56e0\u6b64\u53ef\u53d8\u5e8f\u5217\uff08\u5982<code>list</code>\u3001<code>set</code>\u7b49\uff09\u4e0d\u662f\u53ef\u6563\u5217\u5bf9\u8c61\u3002</li> <li>\u539f\u5b50\u4e0d\u53ef\u53d8\u6570\u636e\u7c7b\u578b\u6ee1\u8db3\u5982\u4e0a\u6240\u6709\u6761\u4ef6\uff0c\u662f\u53ef\u6563\u5217\u5bf9\u8c61</li> <li>\u5bb9\u5668<code>frozenset</code>\u8981\u6c42\u5176\u4e2d\u7684\u6240\u6709\u5143\u7d20\u5747\u4e3a\u53ef\u6563\u5217\u5bf9\u8c61\uff0c\u5e76\u4e14\u5176\u4e2d\u5185\u5bb9\u5728\u6574\u4e2a\u751f\u547d\u5468\u671f\u4e2d\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u56e0\u6b64\u662f\u53ef\u6563\u5217\u5bf9\u8c61</li> <li>\u5bb9\u5668<code>tuple</code>\u4e2d\u53ef\u4ee5\u5bb9\u7eb3\u4e0d\u53ef\u6563\u5217\u5bf9\u8c61\uff0c\u56e0\u6b64<code>tuple</code>\u4e0d\u662f\u53ef\u6563\u5217\u5bf9\u8c61\uff0c\u4f46\u4e0d\u542b\u53ef\u6563\u5217\u5bf9\u8c61\u7684\u5143\u7ec4\u662f\u53ef\u6563\u5217\u5bf9\u8c61\u3002</li> </ul> <pre><code>&gt;&gt;&gt; t1 = hash((1, 2))\n&gt;&gt;&gt; t2 = hash((1, [2]))\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: unhashable type: 'list'\n&gt;&gt;&gt;\n</code></pre> <p>\u4f7f\u7528<code>hash</code>\u51fd\u6570\u53ef\u4ee5\u53d6\u5f97\u53ef\u6563\u5217\u5bf9\u8c61\u7684\u6563\u5217\u503c\u3002\u4e3a\u4e86\u907f\u514dDOS\u653b\u51fb\uff0c\u5728\u8ba1\u7b97\u6563\u5217\u503c\u65f6\u4f1a\u52a0\u4e0a\u4e00\u4e2a\u968f\u673a\u7684\u566a\u58f0\u3002\u566a\u58f0\u7684\u503c\u4ec5\u5728\u540c\u4e00Python\u5b9e\u4f8b\u4e2d\u76f8\u540c\u3002\u5bf9\u4e8e\u4e00\u4e2a\u6574\u6570\uff0c\u82e5\u5b83\u7684\u503c\u5c0f\u4e8e\u6563\u5217\u503c\u6240\u5141\u8bb8\u7684\u6700\u5927\u503c\uff08\u5373\u53ef\u4ee5\u88ab\u653e\u8fdb\u6563\u5217\u503c\u6240\u9650\u5b9a\u7684\u7a7a\u95f4\u5185\uff09\uff0c\u5219\u6563\u5217\u7684\u503c\u5c31\u662f\u8be5\u6574\u6570\u7684\u503c\u3002</p> <p>\u6563\u5217\u8868\u7684\u4f7f\u7528\u662f\u201c\u7a7a\u95f4\u6362\u65f6\u95f4\u201d\u7b56\u7565\u7684\u5178\u578b\u4f53\u73b0\u3002\u4e3a\u4e86\u5c3d\u53ef\u80fd\u51cf\u5c11\u51b2\u7a81\uff0c\u6563\u5217\u8868\u5fc5\u987b\u6709\u8f83\u4f4e\u7684\u88c5\u586b\u56e0\u5b50\uff0c\u8fd9\u610f\u5473\u7740\u6563\u5217\u8868\u4f1a\u5360\u7528\u66f4\u591a\u7684\u5185\u5b58\u7a7a\u95f4\u3002</p>"},{"location":"coding/python/mapping/#_4","title":"\u6784\u9020","text":"<p>\u5b57\u5178\u63d0\u4f9b\u4e86\u591a\u79cd\u6784\u9020\u65b9\u5f0f\uff0c\u5982\u4e0b\u6784\u9020\u5b57\u5178<code>{'a': 1, 'b': 2}</code></p> <ol> <li>\u82b1\u62ec\u53f7\u6784\u9020\uff0c\u5982<code>{'a': 1, 'b': 2}</code></li> <li>\u901a\u8fc7\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u5982<code>dict(a=1, b=2)</code></li> <li>\u901a\u8fc7\u5143\u7ec4/\u5217\u8868\uff08\u53ea\u9700\u662f\u957f\u5ea6\u4e3a2\u7684\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff09\u6784\u9020\uff0c\u5982<code>dict([('a', 1), ['b', 2]])</code></li> <li>\u901a\u8fc7<code>zip</code>\u6253\u5305\u6784\u9020\uff0c\u5982<code>dict(zip(['a', 'b'], [1, 2]))</code></li> <li>\u901a\u8fc7\u5b57\u5178\u63a8\u5bfc\u6784\u9020\uff0c\u5982<code>{chr(97 + _): _ + 1 for _ in range(2)}</code></li> </ol>"},{"location":"coding/python/mapping/#_5","title":"\u53d8\u79cd","text":"<p><code>collections</code>\u63d0\u4f9b\u4e86\u5b57\u5178\u7684\u4e24\u4e2a\u53d8\u79cd\uff0c\u5373<code>defaultdict</code>\u4e0e<code>OrderDict</code></p>"},{"location":"coding/python/mapping/#defaultdict","title":"defaultdict","text":"<p>\u5f53\u5728\u4e00\u4e2a\u5b57\u5178<code>d</code>\u4e2d\u627e\u4e0d\u5230\u952e<code>k</code>\u65f6\uff0cPython\u4f1a\u4ea7\u751f<code>KeyError</code>\u5f02\u5e38\u3002\u4f7f\u7528<code>d.get(k, default)</code>\u53ef\u4ee5\u4e3a\u627e\u4e0d\u5230\u7684\u952e\u8bbe\u7f6e\u9ed8\u8ba4\u8fd4\u56de\u503c\u3002\u4f46<code>dict.get</code>\u51fd\u6570\u4e0d\u4f1a\u5bf9\u5b57\u5178\u8fdb\u884c\u66f4\u65b0\uff0c\u63d2\u5165\u627e\u4e0d\u5230\u7684\u952e\u3002</p> <p><code>dict.setdefault</code>\u63d0\u4f9b\u4e86\u53e6\u4e00\u79cd\u4ece\u5b57\u5178\u4e2d\u83b7\u53d6\u503c\u7684\u65b9\u6cd5\u3002<code>setdefault</code>\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a<code>key</code>\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u53ef\u9009\u7684\u9ed8\u8ba4\u503c<code>default</code>\u3002\u5f53\u5b57\u5178\u4e2d\u627e\u5230<code>key</code>\u6240\u5bf9\u5e94\u7684\u5143\u7d20\u65f6\uff0c<code>setdefault</code>\u76f4\u63a5\u8fd4\u56de\u8be5\u503c\uff0c\u5426\u5219<code>setdefault</code>\u4f1a\u5728\u5b57\u5178\u4e2d\u6dfb\u52a0\u952e\u503c\u5bf9<code>key: default</code>\uff0c\u7136\u540e\u8fd4\u56de<code>default</code>\u3002</p> <pre><code>&gt;&gt;&gt; a = {}\n&gt;&gt;&gt; a.setdefault(0, True)\nTrue\n&gt;&gt;&gt; a[0] = False\n&gt;&gt;&gt; a.setdefault(0, False) \nFalse\n&gt;&gt;&gt;\n</code></pre> <p>\u4f7f\u7528<code>setdefault</code>\u4ece\u5b57\u5178\u4e2d\u83b7\u53d6\u503c\u65f6\uff0c\u53ef\u4ee5\u51cf\u5c11\u5b57\u5178\u7684\u67e5\u8be2\u6b21\u6570\uff0c\u63d0\u9ad8\u5b57\u5178\u6267\u884c\u7684\u6548\u7387\uff1a</p> <pre><code>&gt;&gt;&gt; a = {}\n&gt;&gt;&gt; try:\n...     a[0].append(True)\n... except KeyError:\n...     a[0] = []\n...     a[0].append(True)\n...        \n&gt;&gt;&gt; a\n{0: [True]}\n&gt;&gt;&gt;\n</code></pre> <p>\u5982\u4e0a\u4f7f\u7528<code>try-except</code>\u7ed3\u6784\u5904\u7406\u5b57\u5178\u4e2d\u627e\u4e0d\u5230\u503c\u7684\u7ed3\u679c\uff0c\u5982\u679c\u4f7f\u7528<code>setdefault</code>\u51fd\u6570\uff0c\u5219\u53ef\u4ee5\u6709\u6548\u51cf\u5c11\u4ee3\u7801\u957f\u5ea6\uff0c\u589e\u52a0\u4ee3\u7801\u53ef\u8bfb\u6027\u3002</p> <pre><code>&gt;&gt;&gt; a = {}\n&gt;&gt;&gt; a.setdefault(0, []).append(True)\n&gt;&gt;&gt; a\n{0: [True]}\n&gt;&gt;&gt;\n</code></pre> <p><code>defaultdict</code>\u53ef\u4ee5\u7528\u4e8e\u5904\u7406\u5b57\u5178\u4e2d\u7f3a\u5931\u7684\u952e\u3002\u51c6\u786e\u5730\u8bf4\uff0c<code>defaultdict</code>\u5728\u521b\u5efa\u65f6\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u53ef\u8c03\u7528\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\uff0c\u5b57\u5178\u4e2d\u627e\u4e0d\u5230\u952e\u65f6\uff0c<code>defaultdict</code>\u4f1a\u901a\u8fc7\u8c03\u7528\u8fd9\u4e2a\u53ef\u8c03\u7528\u5bf9\u8c61\u6765\u5f97\u5230\u8be5\u952e\u5bf9\u5e94\u7684\u9ed8\u8ba4\u503c\u3002</p> <pre><code>&gt;&gt;&gt; from collections import defaultdict\n&gt;&gt;&gt; a = defaultdict(list)\n&gt;&gt;&gt; a\ndefaultdict(&lt;class 'list'&gt;, {})\n&gt;&gt;&gt; a[False] = {}\n&gt;&gt;&gt; a[False]\n{}\n&gt;&gt;&gt; a[True]\n[]\n&gt;&gt;&gt; a\ndefaultdict(&lt;class 'list'&gt;, {False: {}, True: []})\n&gt;&gt;&gt;\n</code></pre> <p>\u5982\u679c\u521b\u5efa<code>defaultdict</code>\u65f6\u6ca1\u6709\u6307\u5b9a\u53c2\u6570\uff0c\u8bbf\u95ee\u4e0d\u5b58\u5728\u7684\u952e\u65f6\u4ecd\u4f1a\u629b\u51fa<code>KeyError</code>\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0c<code>__getitem__</code>\u901a\u8fc7\u7279\u6b8a\u65b9\u6cd5<code>__missing__</code>\u5904\u7406\u5b57\u5178\u4e2d\u7f3a\u5931\u7684\u952e\u3002\u624b\u52a8\u8c03\u7528<code>__missing__</code>\u65b9\u6cd5\u80fd\u5b9e\u73b0\u76f8\u540c\u7684\u6548\u679c\uff1a</p> <pre><code>&gt;&gt;&gt; from collections import defaultdict \n&gt;&gt;&gt; a = defaultdict(list)\n&gt;&gt;&gt; a \ndefaultdict(&lt;class 'list'&gt;, {})\n&gt;&gt;&gt; a.__missing__(0)  \n[]\n&gt;&gt;&gt; a\ndefaultdict(&lt;class 'list'&gt;, {0: []})\n&gt;&gt;&gt;\n</code></pre> <p><code>__missing__</code>\u65b9\u6cd5\u7684\u53c2\u6570\u4e3a<code>self, key</code>\uff0c\u5176\u4e2d<code>key</code>\u4e3a\u7f3a\u5931\u7684\u952e\u3002\u5373\u4f7f<code>__missing__</code>\u6b63\u5e38\u6267\u884c\uff0c\u8fd4\u56de\u503c\u4e5f\u4e0d\u4f1a\u88ab\u6dfb\u52a0\u5230\u5b57\u5178\u4e2d\u3002</p> <pre><code>&gt;&gt;&gt; class NumDict(dict):\n...     def __init__(self, *args, **kwargs):\n...             super().__init__(*args, **kwargs)\n...     def __missing__(self, key):\n...             if isinstance(key, int):\n...                     return 0\n...             else:\n...                     raise KeyError(key)\n...\n&gt;&gt;&gt; a = NumDict([(1, 2), (\"a\", \"b\")])\n&gt;&gt;&gt; a\n{1: 2, 'a': 'b'}\n&gt;&gt;&gt; a[0]\n0\n&gt;&gt;&gt; a['b']\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"&lt;stdin&gt;\", line 8, in __missing__\nKeyError: 'b'\n&gt;&gt;&gt; a\n{1: 2, 'a': 'b'}\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/mapping/#ordereddict","title":"OrderedDict","text":"<p><code>OrderedDict</code>\u662f\u4e25\u683c\uff08\u5728\u4efb\u4f55\u7248\u672c\u4e2d\uff09\u4fdd\u6301\u987a\u5e8f\u7684\u5b57\u5178\u3002\u5728\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\u952e\u7684\u987a\u5e8f\u4fdd\u6301\u4e00\u81f4\u3002</p> <p><code>OrderedDict</code>\u65b0\u589e\u4e86<code>popitem</code>\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u79fb\u9664\u5e76\u8fd4\u56de\u5b57\u5178\u4e2d\u6700\u540e\u6dfb\u52a0\u7684\u4e00\u4e2a\u5143\u7d20\u3002\u5982\u679c\u624b\u52a8\u6307\u5b9a<code>last</code>\u53c2\u6570\u4e3a<code>False</code>\uff0c\u5219\u79fb\u9664\u5e76\u8fd4\u56de\u5b57\u5178\u4e2d\u7b2c\u4e00\u4e2a\u6dfb\u52a0\u7684\u5143\u7d20\u3002\u540c\u65f6\uff0c<code>move_to_end</code>\u662f\u4e0e\u4e4b\u914d\u5408\u7684\u79fb\u52a8\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06\u5b57\u5178\u4e2d\u7684\u952e\u503c\u5bf9\uff08\u7531<code>key</code>\u53c2\u6570\u6307\u5b9a\uff09\u79fb\u52a8\u5230\u5b57\u5178\u4e00\u7aef\uff08\u7531<code>last</code>\u53c2\u6570\u6307\u5b9a\uff09\u3002</p>"},{"location":"coding/python/mapping/#chainmap","title":"ChainMap","text":"<p><code>ChainMap</code>\u53ef\u4ee5\u89c6\u4e3a\u4e00\u79cd\u5bb9\u7eb3\u6620\u5c04\u7684\u5e8f\u5217\u3002\u76f8\u6bd4\u4e8e\u4f7f\u7528<code>dict.update()</code>\u6216<code>|</code>\u8fd0\u7b97\u7b26\u9010\u4e2a\u5408\u5e76\u6620\u5c04\uff0c<code>ChainMap</code>\u6709\u66f4\u9ad8\u7684\u6548\u7387\u3002</p> <p><code>ChainMap</code>\u4e5f\u53ef\u4ee5\u88ab\u89c6\u4e3a\u6620\u5c04\uff0c\u5f53\u5728<code>ChainMap</code>\u5bf9\u8c61\u4e2d\u67e5\u8be2\u65f6\uff0c<code>ChainMap</code>\u4f1a\u9010\u4e2a\u67e5\u8be2\u5176\u4e2d\u7684\u6620\u5c04\u3002\u5f53\u540c\u4e00\u4e2a\u952e\u51fa\u73b0\u5728\u4e0d\u540c\u7684\u6620\u5c04\u4e2d\u65f6\uff0c<code>ChainMap</code>\u8fd4\u56de\u67e5\u8be2\u5230\u7684\u7b2c\u4e00\u4e2a\u7ed3\u679c\u3002</p> <pre><code>&gt;&gt;&gt; from collections import ChainMap\n&gt;&gt;&gt; a = ChainMap({'a': 1, 'b': 2}, {'a': 3, 'b': 4})\n&gt;&gt;&gt; a['b']\n2\n&gt;&gt;&gt; a['a']\n1\n&gt;&gt;&gt;\n</code></pre> <p>\u5b58\u50a8\u7684\u6620\u5c04\u5728<code>ChainMap.maps</code>\u5c5e\u6027\u4e2d\uff0c\u5bf9\u8be5\u5c5e\u6027\u7684\u4fee\u6539\u4f1a\u540c\u65f6\u53cd\u6620\u5728<code>ChainMap</code>\u5bf9\u8c61\u4e2d\u3002<code>parents</code>\u662f\u4e00\u4e2a\u901a\u8fc7\u5c5e\u6027\u65b9\u5f0f\u8bbf\u95ee\u7684\u65b9\u6cd5\uff0c\u8fd4\u56de\u53bb\u9664\u539f<code>ChainMap</code>\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6620\u5c04\u540e\u7684\u65b0<code>ChainMap</code>\uff0c\u539f<code>ChainMap</code>\u4fdd\u6301\u4e0d\u53d8\u3002</p> <p><code>new_child</code>\u63d0\u4f9b\u4e86\u5411<code>ChainMap</code>\u4e2d\u6dfb\u52a0\u6620\u5c04\u7684\u65b9\u6cd5\u3002\u65b0\u7684\u6620\u5c04\u88ab\u6dfb\u52a0\u5230<code>ChainMap</code>\u7684\u5f00\u5934\uff0c\u5982\u679c\u6ca1\u6709\u63d0\u4f9b\u6620\u5c04\uff0c\u5219\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u5b57\u5178\u3002</p> <p><code>ChainMap</code>\u5e76\u6ca1\u6709\u5408\u5e76\u539f\u6709\u7684\u6620\u5c04\uff0c\u56e0\u6b64\u8fed\u4ee3<code>ChainMap</code>\u5bf9\u8c61\u6216\u5bf9<code>ChainMap</code>\u5bf9\u8c61\u8c03\u7528<code>dict()</code>\u65f6\u53ea\u4f1a\u5e94\u7528\u5230\u5176\u4e2d\u5305\u542b\u7684\u7b2c\u4e00\u4e2a\u6620\u5c04\u3002</p> <pre><code>&gt;&gt;&gt; dict(a)\n{'a': 1, 'b': 2}\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/mapping/#counter","title":"Counter","text":"<p><code>Counter</code>\u63d0\u4f9b\u4e86\u5bf9\u4e00\u7cfb\u5217\u503c\u7684\u7edf\u8ba1\u65b9\u6cd5\u3002\u53ef\u4ee5\u4f7f\u7528\u53ef\u8fed\u4ee3\u5bf9\u8c61\u521d\u59cb\u5316<code>Counter</code>\u7c7b\u578b\uff0c<code>Counter</code>\u4f1a\u81ea\u52a8\u7edf\u8ba1\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u6bcf\u4e2a\u503c\u7684\u51fa\u73b0\u987a\u5e8f\u3002</p> <p><code>Counter</code>\u4e0d\u4f1a\u5bf9\u8f93\u5165\u7684\u503c\u8fdb\u884c\u68c0\u67e5\uff0c\u5982\u679c\u4f7f\u7528\u5b57\u5178\u521d\u59cb\u5316\u5e76\u63d0\u4f9b\u975e\u6574\u6570\u7c7b\u578b\u7684\u503c\uff0c\u5728\u8c03\u7528<code>Counter.most_common()</code>\u65b9\u6cd5\u6216\u8fed\u4ee3<code>Counter.elements()</code>\u7684\u8fd4\u56de\u503c\u65f6\u4f1a\u629b\u51fa<code>TypeError</code>\u5f02\u5e38\u3002 <pre><code>&gt;&gt;&gt; from collections import Counter\n&gt;&gt;&gt; a = Counter({'0': '0'})\n&gt;&gt;&gt; for i in a.elements():\n...     pass\n...\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: 'str' object cannot be interpreted as an integer\n</code></pre></p> <p>\u8fd9\u4e00\u70b9\u5728Python\u6587\u6863\u4e2d\u6709\u76f8\u5e94\u8bf4\u660e\uff1a</p> <p></p> <pre><code>&gt;&gt;&gt; from collections import Counter \n&gt;&gt;&gt; a = Counter([1, 1, 1, 2, 2, 3])          \n&gt;&gt;&gt; a\nCounter({1: 3, 2: 2, 3: 1})\n&gt;&gt;&gt;\n</code></pre> <p>\u66f4\u65b0<code>Counter</code>\u5bf9\u8c61\u65f6\uff0c\u8ba1\u6570\u5668\u4f1a\u76f8\u5e94\u5730\u66f4\u65b0\uff1a</p> <pre><code>&gt;&gt;&gt; a.update([3, 3, 3, 2, 2, 1])\n&gt;&gt;&gt; a\nCounter({1: 4, 2: 4, 3: 4})\n&gt;&gt;&gt;\n</code></pre> <p><code>Counter.elements()</code>\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u6bcf\u4e2a\u5143\u7d20\u6309\u7167\u5176\u51fa\u73b0\u6b21\u6570\u91cd\u590d\u3002<code>Counter.most_common</code>\u65b9\u6cd5\u8fd4\u56de\u8ba1\u6570\u5668\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5143\u7d20\u3002</p> <p><code>Counter</code>\u7c7b\u578b\u63d0\u4f9b\u4e86<code>+</code>\u3001<code>-</code>\u3001<code>&amp;</code>\u548c<code>|</code>\u8fd0\u7b97\u7b26\uff0c\u5206\u522b\u5bf9\u5e94\u8ba1\u6570\u5668\u7684\u76f8\u52a0\u3001\u76f8\u51cf\u3001\u4ea4\u548c\u5e76\u64cd\u4f5c\u3002\u5f53<code>+</code>\u3001<code>-</code>\u88ab\u7528\u4f5c\u4e00\u5143\u8fd0\u7b97\u7b26\u65f6\uff0c\u53e6\u4e00\u4e2a\u64cd\u4f5c\u6570\u9ed8\u8ba4\u4e3a\u7a7a\u8ba1\u6570\u5668\u3002</p>"},{"location":"coding/python/mapping/#_6","title":"\u6269\u5c55","text":"<p><code>collections.UserDict</code>\u7c7b\u662f\u5bf9<code>dict</code>\u7684Python\u5b9e\u73b0\uff0c\u53ef\u4ee5\u7528\u4e8e\u81ea\u5b9a\u4e49\u6620\u5c04\u7c7b\u578b\u7684\u5b9e\u73b0\u3002</p> <p><code>UserDict</code>\u4e0d\u662f<code>dict</code>\u7684\u5b50\u7c7b\uff0c\u4f46<code>UserDict</code>\u4e2d\u6709\u4e00\u4e2a<code>dict</code>\u7c7b\u578b\u7684<code>data</code>\u5c5e\u6027\uff0c\u662f<code>UserDict</code>\u5b58\u50a8\u6570\u636e\u7684\u6700\u7ec8\u4f4d\u7f6e\u3002\u76f8\u6bd4\u4e8e\u76f4\u63a5\u5bf9<code>dict</code>\u7c7b\u578b\u8fdb\u884c\u6269\u5c55\uff0c<code>data</code>\u5c5e\u6027\u4fdd\u8bc1\u4e86<code>__getitem__</code>\u65b9\u6cd5\u4e0d\u4f1a\u4ea7\u751f\u5faa\u73af\u9012\u5f52\u7684\u60c5\u51b5\u3002</p> <p><code>UserDict</code>\u7c7b\u7ee7\u627f\u81ea<code>_collections_abc.MutableMapping</code>\u4e0e<code>_collections_abc.Mapping</code>\u7c7b\u3002<code>MutableMapping</code>\u63d0\u4f9b\u4e86<code>update()</code>\u65b9\u6cd5\u3002\u65b9\u6cd5\u7684\u5185\u90e8\u5b9e\u73b0\u8868\u660e\uff0c<code>update()</code>\u5728\u5185\u90e8\u901a\u8fc7<code>__setitem__</code>\u5b9e\u73b0\u3002<code>Mapping</code>\u63d0\u4f9b\u4e86<code>get()</code>\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5728\u5185\u90e8\u901a\u8fc7<code>__getitem__</code>\u5b9e\u73b0\u3002</p> <pre><code>&gt;&gt;&gt; from collections import UserDict\n&gt;&gt;&gt; class myDict(UserDict):\n...     def __init__(self, *args, **kwargs):\n...             super().__init__(*args, **kwargs)  \n...     def __setitem__(self, index, value):\n...             print(\"Modification: \", index, \":\", value)\n...             super().__setitem__(index, value)\n... \n&gt;&gt;&gt; a = myDict()\n&gt;&gt;&gt; a.update(a=5, b=4)\nModification:  a : 5\nModification:  b : 4\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/mapping/#_7","title":"\u96c6\u5408","text":"<p>\u96c6\u5408<code>set</code>\u662f\u4e00\u79cd\u5e8f\u5217\u7c7b\u578b\uff0c\u96c6\u5408\u4e2d\u7684\u5404\u4e2a\u5143\u7d20\u6700\u591a\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002\u4efb\u4f55\u975e\u7a7a\u96c6\u5408\u53ef\u4ee5\u4f7f\u7528\u5b57\u9762\u8868\u793a\u6cd5<code>{}</code>\u8fdb\u884c\u8868\u793a\uff0c\u7a7a\u96c6\u53ea\u80fd\u7528<code>set()</code>\u8868\u793a\u3002\u96c6\u5408\u540c\u6837\u9002\u7528\u4e8e\u4e0e\u5217\u8868\u63a8\u5bfc\u76f8\u4f3c\u7684\u63a8\u5bfc\u65b9\u5f0f\u3002</p> <p>\u96c6\u5408\u6709\u5bf9\u5e94\u7684\u53ea\u8bfb\u53d8\u79cd<code>frozenset</code>\u3002<code>set</code>\u53ef\u4ee5\u901a\u8fc7\u5b57\u9762\u8868\u793a\u6cd5\u8fdb\u884c\u6784\u9020\uff0c\u6216\u4f7f\u7528\u53ef\u8fed\u4ee3\u5bf9\u8c61\u8fdb\u884c\u6784\u9020\u3002<code>frozenset</code>\u53ea\u80fd\u4f7f\u7528\u53ef\u8fed\u4ee3\u5bf9\u8c61\u6784\u9020\u3002</p> <p>\u53ef\u4ee5\u5229\u7528<code>set</code>\u4e2d\u5143\u7d20\u7684\u552f\u4e00\u6027\u53bb\u9664\u5217\u8868\u4e2d\u7684\u91cd\u590d\u503c\uff1a</p> <pre><code>&gt;&gt;&gt; src_list = [1, 1, 2, 3, 4, 2, 3]\n&gt;&gt;&gt; list(set(src_list))\n[1, 2, 3, 4]\n&gt;&gt;&gt;\n</code></pre> <p>\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u901a\u8fc7<code>collections.Counter</code>\u53bb\u91cd\u3002</p> <pre><code>&gt;&gt;&gt; from collections import Counter\n&gt;&gt;&gt; src_list = [1, 1, 2, 3, 4, 2, 3]\n&gt;&gt;&gt; list(Counter(src_list).keys())\n[1, 2, 3, 4]\n&gt;&gt;&gt;\n</code></pre> <p>\u548c\u5b57\u5178\u7684\u952e\u4e00\u6837\uff0c\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u5fc5\u987b\u662f\u53ef\u6563\u5217\u7684\u3002<code>set</code>\u7c7b\u578b\u672c\u8eab\u4e0d\u53ef\u6563\u5217\uff0c<code>frozenset</code>\u7c7b\u578b\u53ef\u6563\u5217\u3002</p>"},{"location":"coding/python/mapping/#_8","title":"\u8fd0\u7b97","text":"<p>\u96c6\u5408\u6709\u5982\u4e0b\u8fd0\u7b97\uff0c\u7531\u4e8e\u96c6\u5408\u7684\u5e95\u5c42\u6570\u636e\u7ed3\u6784\u662f\u6563\u5217\u8868\uff0c\u8fd9\u4e9b\u8fd0\u7b97\u65b9\u6cd5\u6709\u8f83\u9ad8\u7684\u8ba1\u7b97\u6548\u7387\u3002</p> <ul> <li>\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6\u3001\u5bf9\u79f0\u5dee\uff0c\u5373<code>&amp;</code>\u3001<code>|</code>\u3001<code>-</code>\u4e0e<code>^</code>\uff1b</li> <li>\u5b50\u96c6\u3001\u771f\u5b50\u96c6\u3001\u8d85\u96c6\u3001\u771f\u8d85\u96c6\uff0c\u5373<code>&lt;=</code>\u3001<code>&lt;</code>\u3001<code>&gt;=</code>\u4e0e<code>&gt;</code>\uff1b</li> <li>\u5c5e\u4e8e\uff0c\u5373<code>in</code></li> </ul> <p>\u4ee5<code>in</code>\u64cd\u4f5c\u4e3a\u4f8b\uff0c<code>set</code>\u53ef\u4ee5\u76f4\u63a5\u67e5\u8be2\u6563\u5217\u8868\u83b7\u53d6\u7ed3\u679c\uff0c\u4f46<code>list</code>\u5fc5\u987b\u626b\u63cf\u4e00\u904d\u5217\u8868\u624d\u80fd\u83b7\u53d6\u7ed3\u679c\u3002\u5bf9\u4e8e\u542b\u6709\u8bb8\u591a\u5143\u7d20\u7684\u5e8f\u5217\uff0c\u4e24\u8005\u5728\u6267\u884c\u901f\u5ea6\u4e0a\u6709\u660e\u663e\u7684\u5dee\u522b\u3002</p> <p><code>set</code>\u8fd8\u652f\u6301<code>add</code>\u3001<code>clear</code>\u3001<code>copy</code>\u3001<code>pop</code>\u3001<code>remove</code>\u7b49\u65b9\u6cd5\u3002</p>"},{"location":"coding/python/pyguide/","title":"Python Style Guide","text":""},{"location":"coding/python/pyguide/#google-python-style-guide","title":"Google Python Style Guide","text":"Table of Contents <ul> <li>Google Python Style Guide</li> <li>1 Background</li> <li>2 Python Language Rules<ul> <li>2.1 Lint</li> <li>2.1.1 Definition</li> <li>2.1.2 Pros</li> <li>2.1.3 Cons</li> <li>2.1.4 Decision</li> <li>2.2 Imports</li> <li>2.2.1 Definition</li> <li>2.2.2 Pros</li> <li>2.2.3 Cons</li> <li>2.2.4 Decision</li> <li>2.3 Packages</li> <li>2.3.1 Pros</li> <li>2.3.2 Cons</li> <li>2.3.3 Decision</li> <li>2.4 Exceptions</li> <li>2.4.1 Definition</li> <li>2.4.2 Pros</li> <li>2.4.3 Cons</li> <li>2.4.4 Decision</li> <li>2.5 Global variables</li> <li>2.5.1 Definition</li> <li>2.5.2 Pros</li> <li>2.5.3 Cons</li> <li>2.5.4 Decision</li> <li>2.6 Nested/Local/Inner Classes and Functions</li> <li>2.6.1 Definition</li> <li>2.6.2 Pros</li> <li>2.6.3 Cons</li> <li>2.6.4 Decision</li> <li>2.7 Comprehensions &amp; Generator Expressions</li> <li>2.7.1 Definition</li> <li>2.7.2 Pros</li> <li>2.7.3 Cons</li> <li>2.7.4 Decision</li> <li>2.8 Default Iterators and Operators</li> <li>2.8.1 Definition</li> <li>2.8.2 Pros</li> <li>2.8.3 Cons</li> <li>2.8.4 Decision</li> <li>2.9 Generators</li> <li>2.9 Definition</li> <li>2.9.2 Pros</li> <li>2.9.3 Cons</li> <li>2.9.4 Decision</li> <li>2.10 Lambda Functions</li> <li>2.10.1 Definition</li> <li>2.10.2 Pros</li> <li>2.10.3 Cons</li> <li>2.10.4 Decision</li> <li>2.11 Conditional Expressions</li> <li>2.11.1 Definition</li> <li>2.11.2 Pros</li> <li>2.11.3 Cons</li> <li>2.11.4 Decision</li> <li>2.12 Default Argument Values</li> <li>2.12.1 Definition</li> <li>2.12.2 Pros</li> <li>2.12.3 Cons</li> <li>2.12.4 Decision</li> <li>2.13 Properties</li> <li>2.13.1 Definition</li> <li>2.13.2 Pros</li> <li>2.13.3 Cons</li> <li>2.13.4 Decision</li> <li>2.14 True/False Evaluations</li> <li>2.14.1 Definition</li> <li>2.14.2 Pros</li> <li>2.14.3 Cons</li> <li>2.14.4 Decision</li> <li>2.16 Lexical Scoping</li> <li>2.16.1 Definition</li> <li>2.16.2 Pros</li> <li>2.16.3 Cons</li> <li>2.16.4 Decision</li> <li>2.17 Function and Method Decorators</li> <li>2.17.1 Definition</li> <li>2.17.2 Pros</li> <li>2.17.3 Cons</li> <li>2.17.4 Decision</li> <li>2.18 Threading</li> <li>2.19 Power Features</li> <li>2.19.1 Definition</li> <li>2.19.2 Pros</li> <li>2.19.3 Cons</li> <li>2.19.4 Decision</li> <li>2.20 Modern Python: Python 3 and from __future__ imports</li> <li>2.20.1 Definition</li> <li>2.20.2 Pros</li> <li>2.20.3 Cons</li> <li>2.20.4 Decision<ul> <li>from __future__ imports</li> <li>The six, future, and past libraries</li> </ul> </li> <li>2.21 Type Annotated Code</li> <li>2.21.1 Definition</li> <li>2.21.2 Pros</li> <li>2.21.3 Cons</li> <li>2.21.4 Decision</li> </ul> </li> <li>3 Python Style Rules<ul> <li>3.1 Semicolons</li> <li>3.2 Line length</li> <li>3.3 Parentheses</li> <li>3.4 Indentation</li> <li>3.4.1 Trailing commas in sequences of items?</li> <li>3.5 Blank Lines</li> <li>3.6 Whitespace</li> <li>3.7 Shebang Line</li> <li>3.8 Comments and Docstrings</li> <li>3.8.1 Docstrings</li> <li>3.8.2 Modules</li> <li>3.8.3 Functions and Methods</li> <li>3.8.4 Classes</li> <li>3.8.5 Block and Inline Comments</li> <li>3.8.6 Punctuation, Spelling, and Grammar</li> <li>3.10 Strings</li> <li>3.10.1 Logging</li> <li>3.10.2 Error Messages</li> <li>3.11 Files and Sockets</li> <li>3.12 TODO Comments</li> <li>3.13 Imports formatting</li> <li>3.14 Statements</li> <li>3.15 Accessors</li> <li>3.16 Naming</li> <li>3.16.1 Names to Avoid</li> <li>3.16.2 Naming Conventions</li> <li>3.16.3 File Naming</li> <li>3.16.4 Guidelines derived from Guido's Recommendations</li> <li>3.17 Main</li> <li>3.18 Function length</li> <li>3.19 Type Annotations</li> <li>3.19.1 General Rules</li> <li>3.19.2 Line Breaking</li> <li>3.19.3 Forward Declarations</li> <li>3.19.4 Default Values</li> <li>3.19.5 NoneType</li> <li>3.19.6 Type Aliases</li> <li>3.19.7 Ignoring Types</li> <li>3.19.8 Typing Variables</li> <li>3.19.9 Tuples vs Lists</li> <li>3.19.10 TypeVars</li> <li>3.19.11 String types</li> <li>3.19.12 Imports For Typing</li> <li>3.19.13 Conditional Imports</li> <li>3.19.14 Circular Dependencies</li> <li>3.19.15 Generics</li> </ul> </li> <li>4 Parting Words</li> </ul>"},{"location":"coding/python/pyguide/#1-background","title":"1 Background","text":"<p>Python is the main dynamic language used at Google. This style guide is a list of dos and don'ts for Python programs.</p> <p>To help you format code correctly, we've created a settings file for Vim. For Emacs, the default settings should be fine.</p> <p>Many teams use the yapf auto-formatter to avoid arguing over formatting.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2-python-language-rules","title":"2 Python Language Rules","text":""},{"location":"coding/python/pyguide/#21-lint","title":"2.1 Lint","text":"<p>Run <code>pylint</code> over your code using this pylintrc.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#211-definition","title":"2.1.1 Definition","text":"<p><code>pylint</code> is a tool for finding bugs and style problems in Python source code. It finds problems that are typically caught by a compiler for less dynamic languages like C and C++. Because of the dynamic nature of Python, some warnings may be incorrect; however, spurious warnings should be fairly infrequent.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#212-pros","title":"2.1.2 Pros","text":"<p>Catches easy-to-miss errors like typos, using-vars-before-assignment, etc.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#213-cons","title":"2.1.3 Cons","text":"<p><code>pylint</code> isn't perfect. To take advantage of it, sometimes we'll need to write around it, suppress its warnings or fix it.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#214-decision","title":"2.1.4 Decision","text":"<p>Make sure you run <code>pylint</code> on your code.</p> <p>Suppress warnings if they are inappropriate so that other issues are not hidden. To suppress warnings, you can set a line-level comment:</p> <pre><code>dict = 'something awful'  # Bad Idea... pylint: disable=redefined-builtin\n</code></pre> <p><code>pylint</code> warnings are each identified by symbolic name (<code>empty-docstring</code>) Google-specific warnings start with <code>g-</code>.</p> <p>If the reason for the suppression is not clear from the symbolic name, add an explanation.</p> <p>Suppressing in this way has the advantage that we can easily search for suppressions and revisit them.</p> <p>You can get a list of <code>pylint</code> warnings by doing:</p> <pre><code>pylint --list-msgs\n</code></pre> <p>To get more information on a particular message, use:</p> <pre><code>pylint --help-msg=C6409\n</code></pre> <p>Prefer <code>pylint: disable</code> to the deprecated older form <code>pylint: disable-msg</code>.</p> <p>Unused argument warnings can be suppressed by deleting the variables at the beginning of the function. Always include a comment explaining why you are deleting it. \"Unused.\" is sufficient. For example:</p> <pre><code>def viking_cafe_order(spam, beans, eggs=None):\n    del beans, eggs  # Unused by vikings.\n    return spam + spam + spam\n</code></pre> <p>Other common forms of suppressing this warning include using '<code>_</code>' as the identifier for the unused argument or prefixing the argument name with '<code>unused_</code>', or assigning them to '<code>_</code>'. These forms are allowed but no longer encouraged. These break callers that pass arguments by name and do not enforce that the arguments are actually unused.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#22-imports","title":"2.2 Imports","text":"<p>Use <code>import</code> statements for packages and modules only, not for individual classes or functions. Note that there is an explicit exemption for imports from the typing module.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#221-definition","title":"2.2.1 Definition","text":"<p>Reusability mechanism for sharing code from one module to another.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#222-pros","title":"2.2.2 Pros","text":"<p>The namespace management convention is simple. The source of each identifier is indicated in a consistent way; <code>x.Obj</code> says that object <code>Obj</code> is defined in module <code>x</code>.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#223-cons","title":"2.2.3 Cons","text":"<p>Module names can still collide. Some module names are inconveniently long.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#224-decision","title":"2.2.4 Decision","text":"<ul> <li>Use <code>import x</code> for importing packages and modules.</li> <li>Use <code>from x import y</code> where <code>x</code> is the package prefix and <code>y</code> is the module     name with no prefix.</li> <li>Use <code>from x import y as z</code> if two modules named <code>y</code> are to be imported or if     <code>y</code> is an inconveniently long name.</li> <li>Use <code>import y as z</code> only when <code>z</code> is a standard abbreviation (e.g., <code>np</code> for     <code>numpy</code>).</li> </ul> <p>For example the module <code>sound.effects.echo</code> may be imported as follows:</p> <pre><code>from sound.effects import echo\n...\necho.EchoFilter(input, output, delay=0.7, atten=4)\n</code></pre> <p>Do not use relative names in imports. Even if the module is in the same package, use the full package name. This helps prevent unintentionally importing a package twice.</p> <p>Imports from the typing module and the six.moves module are exempt from this rule.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#23-packages","title":"2.3 Packages","text":"<p>Import each module using the full pathname location of the module.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#231-pros","title":"2.3.1 Pros","text":"<p>Avoids conflicts in module names or incorrect imports due to the module search path not being what the author expected. Makes it easier to find modules.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#232-cons","title":"2.3.2 Cons","text":"<p>Makes it harder to deploy code because you have to replicate the package hierarchy. Not really a problem with modern deployment mechanisms.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#233-decision","title":"2.3.3 Decision","text":"<p>All new code should import each module by its full package name.</p> <p>Imports should be as follows:</p> <p>Yes:</p> <pre><code># Reference absl.flags in code with the complete name (verbose).\nimport absl.flags\nfrom doctor.who import jodie\n\nFLAGS = absl.flags.FLAGS\n</code></pre> <pre><code># Reference flags in code with just the module name (common).\nfrom absl import flags\nfrom doctor.who import jodie\n\nFLAGS = flags.FLAGS\n</code></pre> <p>No: (assume this file lives in <code>doctor/who/</code> where <code>jodie.py</code> also exists)</p> <pre><code># Unclear what module the author wanted and what will be imported.  The actual\n# import behavior depends on external factors controlling sys.path.\n# Which possible jodie module did the author intend to import?\nimport jodie\n</code></pre> <p>The directory the main binary is located in should not be assumed to be in <code>sys.path</code> despite that happening in some environments. This being the case, code should assume that <code>import jodie</code> refers to a third party or top level package named <code>jodie</code>, not a local <code>jodie.py</code>.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#24-exceptions","title":"2.4 Exceptions","text":"<p>Exceptions are allowed but must be used carefully.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#241-definition","title":"2.4.1 Definition","text":"<p>Exceptions are a means of breaking out of normal control flow to handle errors or other exceptional conditions.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#242-pros","title":"2.4.2 Pros","text":"<p>The control flow of normal operation code is not cluttered by error-handling code. It also allows the control flow to skip multiple frames when a certain condition occurs, e.g., returning from N nested functions in one step instead of having to plumb error codes through.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#243-cons","title":"2.4.3 Cons","text":"<p>May cause the control flow to be confusing. Easy to miss error cases when making library calls.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#244-decision","title":"2.4.4 Decision","text":"<p>Exceptions must follow certain conditions:</p> <ul> <li> <p>Make use of built-in exception classes when it makes sense. For example,     raise a <code>ValueError</code> to indicate a programming mistake like a violated     precondition (such as if you were passed a negative number but required a     positive one). Do not use <code>assert</code> statements for validating argument values     of a public API. <code>assert</code> is used to ensure internal correctness, not to     enforce correct usage nor to indicate that some unexpected event occurred.     If an exception is desired in the latter cases, use a raise statement. For     example:</p> <pre><code>Yes:\n  def connect_to_next_port(self, minimum):\n\"\"\"Connects to the next available port.\n\n    Args:\n      minimum: A port value greater or equal to 1024.\n\n    Returns:\n      The new minimum port.\n\n    Raises:\n      ConnectionError: If no available port is found.\n    \"\"\"\n    if minimum &lt; 1024:\n      # Note that this raising of ValueError is not mentioned in the doc\n      # string's \"Raises:\" section because it is not appropriate to\n      # guarantee this specific behavioral reaction to API misuse.\n      raise ValueError(f'Min. port must be at least 1024, not {minimum}.')\n    port = self._find_next_open_port(minimum)\n    if not port:\n      raise ConnectionError(\n          f'Could not connect to service on port {minimum} or higher.')\n    assert port &gt;= minimum, (\n        f'Unexpected port {port} when minimum was {minimum}.')\n    return port\n</code></pre> <pre><code>No:\n  def connect_to_next_port(self, minimum):\n\"\"\"Connects to the next available port.\n\n    Args:\n      minimum: A port value greater or equal to 1024.\n\n    Returns:\n      The new minimum port.\n    \"\"\"\n    assert minimum &gt;= 1024, 'Minimum port must be at least 1024.'\n    port = self._find_next_open_port(minimum)\n    assert port is not None\n    return port\n</code></pre> </li> <li> <p>Libraries or packages may define their own exceptions. When doing so they     must inherit from an existing exception class. Exception names should end in     <code>Error</code> and should not introduce stutter (<code>foo.FooError</code>).</p> </li> <li> <p>Never use catch-all <code>except:</code> statements, or catch <code>Exception</code> or     <code>StandardError</code>, unless you are</p> <ul> <li>re-raising the exception, or</li> <li>creating an isolation point in the program where exceptions are not     propagated but are recorded and suppressed instead, such as protecting a     thread from crashing by guarding its outermost block.</li> </ul> <p>Python is very tolerant in this regard and <code>except:</code> will really catch everything including misspelled names, sys.exit() calls, Ctrl+C interrupts, unittest failures and all kinds of other exceptions that you simply don't want to catch.</p> </li> <li> <p>Minimize the amount of code in a <code>try</code>/<code>except</code> block. The larger the body     of the <code>try</code>, the more likely that an exception will be raised by a line of     code that you didn't expect to raise an exception. In those cases, the     <code>try</code>/<code>except</code> block hides a real error.</p> </li> <li> <p>Use the <code>finally</code> clause to execute code whether or not an exception is     raised in the <code>try</code> block. This is often useful for cleanup, i.e., closing a     file.</p> </li> </ul> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#25-global-variables","title":"2.5 Global variables","text":"<p>Avoid global variables.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#251-definition","title":"2.5.1 Definition","text":"<p>Variables that are declared at the module level or as class attributes.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#252-pros","title":"2.5.2 Pros","text":"<p>Occasionally useful.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#253-cons","title":"2.5.3 Cons","text":"<p>Has the potential to change module behavior during the import, because assignments to global variables are done when the module is first imported.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#254-decision","title":"2.5.4 Decision","text":"<p>Avoid global variables.</p> <p>While they are technically variables, module-level constants are permitted and encouraged. For example: <code>MAX_HOLY_HANDGRENADE_COUNT = 3</code>. Constants must be named using all caps with underscores. See Naming below.</p> <p>If needed, globals should be declared at the module level and made internal to the module by prepending an <code>_</code> to the name. External access must be done through public module-level functions. See Naming below.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#26-nestedlocalinner-classes-and-functions","title":"2.6 Nested/Local/Inner Classes and Functions","text":"<p>Nested local functions or classes are fine when used to close over a local variable. Inner classes are fine.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#261-definition","title":"2.6.1 Definition","text":"<p>A class can be defined inside of a method, function, or class. A function can be defined inside a method or function. Nested functions have read-only access to variables defined in enclosing scopes.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#262-pros","title":"2.6.2 Pros","text":"<p>Allows definition of utility classes and functions that are only used inside of a very limited scope. Very ADT-y. Commonly used for implementing decorators.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#263-cons","title":"2.6.3 Cons","text":"<p>Nested functions and classes cannot be directly tested. Nesting can make the outer function longer and less readable.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#264-decision","title":"2.6.4 Decision","text":"<p>They are fine with some caveats. Avoid nested functions or classes except when closing over a local value. Do not nest a function just to hide it from users of a module. Instead, prefix its name with an _ at the module level so that it can still be accessed by tests.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#27-comprehensions-generator-expressions","title":"2.7 Comprehensions &amp; Generator Expressions","text":"<p>Okay to use for simple cases.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#271-definition","title":"2.7.1 Definition","text":"<p>List, Dict, and Set comprehensions as well as generator expressions provide a concise and efficient way to create container types and iterators without resorting to the use of traditional loops, <code>map()</code>, <code>filter()</code>, or <code>lambda</code>.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#272-pros","title":"2.7.2 Pros","text":"<p>Simple comprehensions can be clearer and simpler than other dict, list, or set creation techniques. Generator expressions can be very efficient, since they avoid the creation of a list entirely.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#273-cons","title":"2.7.3 Cons","text":"<p>Complicated comprehensions or generator expressions can be hard to read.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#274-decision","title":"2.7.4 Decision","text":"<p>Okay to use for simple cases. Each portion must fit on one line: mapping expression, <code>for</code> clause, filter expression. Multiple <code>for</code> clauses or filter expressions are not permitted. Use loops instead when things get more complicated.</p> <pre><code>Yes:\n  result = [mapping_expr for value in iterable if filter_expr]\n\n  result = [{'key': value} for value in iterable\n            if a_long_filter_expression(value)]\n\n  result = [complicated_transform(x)\n            for x in iterable if predicate(x)]\n\n  descriptive_name = [\n      transform({'key': key, 'value': value}, color='black')\n      for key, value in generate_iterable(some_input)\n      if complicated_condition_is_met(key, value)\n  ]\n\n  result = []\n  for x in range(10):\n      for y in range(5):\n          if x * y &gt; 10:\n              result.append((x, y))\n\n  return {x: complicated_transform(x)\n          for x in long_generator_function(parameter)\n          if x is not None}\n\n  squares_generator = (x**2 for x in range(10))\n\n  unique_names = {user.name for user in users if user is not None}\n\n  eat(jelly_bean for jelly_bean in jelly_beans\n      if jelly_bean.color == 'black')\n</code></pre> <pre><code>No:\n  result = [complicated_transform(\n                x, some_argument=x+1)\n            for x in iterable if predicate(x)]\n\n  result = [(x, y) for x in range(10) for y in range(5) if x * y &gt; 10]\n\n  return ((x, y, z)\n          for x in range(5)\n          for y in range(5)\n          if x != y\n          for z in range(5)\n          if y != z)\n</code></pre> <p></p> <p></p>"},{"location":"coding/python/pyguide/#28-default-iterators-and-operators","title":"2.8 Default Iterators and Operators","text":"<p>Use default iterators and operators for types that support them, like lists, dictionaries, and files.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#281-definition","title":"2.8.1 Definition","text":"<p>Container types, like dictionaries and lists, define default iterators and membership test operators (\"in\" and \"not in\").</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#282-pros","title":"2.8.2 Pros","text":"<p>The default iterators and operators are simple and efficient. They express the operation directly, without extra method calls. A function that uses default operators is generic. It can be used with any type that supports the operation.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#283-cons","title":"2.8.3 Cons","text":"<p>You can't tell the type of objects by reading the method names (e.g. <code>has_key()</code> means a dictionary). This is also an advantage.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#284-decision","title":"2.8.4 Decision","text":"<p>Use default iterators and operators for types that support them, like lists, dictionaries, and files. The built-in types define iterator methods, too. Prefer these methods to methods that return lists, except that you should not mutate a container while iterating over it.</p> <pre><code>Yes:  for key in adict: ...\n      if key not in adict: ...\n      if obj in alist: ...\n      for line in afile: ...\n      for k, v in adict.items(): ...\n      for k, v in six.iteritems(adict): ...\n</code></pre> <pre><code>No:   for key in adict.keys(): ...\n      if not adict.has_key(key): ...\n      for line in afile.readlines(): ...\n      for k, v in dict.iteritems(): ...\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#29-generators","title":"2.9 Generators","text":"<p>Use generators as needed.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#29-definition","title":"2.9 Definition","text":"<p>A generator function returns an iterator that yields a value each time it executes a yield statement. After it yields a value, the runtime state of the generator function is suspended until the next value is needed.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#292-pros","title":"2.9.2 Pros","text":"<p>Simpler code, because the state of local variables and control flow are preserved for each call. A generator uses less memory than a function that creates an entire list of values at once.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#293-cons","title":"2.9.3 Cons","text":"<p>None.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#294-decision","title":"2.9.4 Decision","text":"<p>Fine. Use \"Yields:\" rather than \"Returns:\" in the docstring for generator functions.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#210-lambda-functions","title":"2.10 Lambda Functions","text":"<p>Okay for one-liners. Prefer generator expressions over <code>map()</code> or <code>filter()</code> with a <code>lambda</code>.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2101-definition","title":"2.10.1 Definition","text":"<p>Lambdas define anonymous functions in an expression, as opposed to a statement.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2102-pros","title":"2.10.2 Pros","text":"<p>Convenient.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2103-cons","title":"2.10.3 Cons","text":"<p>Harder to read and debug than local functions. The lack of names means stack traces are more difficult to understand. Expressiveness is limited because the function may only contain an expression.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2104-decision","title":"2.10.4 Decision","text":"<p>Okay to use them for one-liners. If the code inside the lambda function is longer than 60-80 chars, it's probably better to define it as a regular nested function.</p> <p>For common operations like multiplication, use the functions from the <code>operator</code> module instead of lambda functions. For example, prefer <code>operator.mul</code> to <code>lambda x, y: x * y</code>.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#211-conditional-expressions","title":"2.11 Conditional Expressions","text":"<p>Okay for simple cases.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2111-definition","title":"2.11.1 Definition","text":"<p>Conditional expressions (sometimes called a \u201cternary operator\u201d) are mechanisms that provide a shorter syntax for if statements. For example: <code>x = 1 if cond else 2</code>.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2112-pros","title":"2.11.2 Pros","text":"<p>Shorter and more convenient than an if statement.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2113-cons","title":"2.11.3 Cons","text":"<p>May be harder to read than an if statement. The condition may be difficult to locate if the expression is long.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2114-decision","title":"2.11.4 Decision","text":"<p>Okay to use for simple cases. Each portion must fit on one line: true-expression, if-expression, else-expression. Use a complete if statement when things get more complicated.</p> <pre><code>Yes:\n    one_line = 'yes' if predicate(value) else 'no'\n    slightly_split = ('yes' if predicate(value)\n                      else 'no, nein, nyet')\n    the_longest_ternary_style_that_can_be_done = (\n        'yes, true, affirmative, confirmed, correct'\n        if predicate(value)\n        else 'no, false, negative, nay')\n</code></pre> <pre><code>No:\n    bad_line_breaking = ('yes' if predicate(value) else\n                         'no')\n    portion_too_long = ('yes'\n                        if some_long_module.some_long_predicate_function(\n                            really_long_variable_name)\n                        else 'no, false, negative, nay')\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#212-default-argument-values","title":"2.12 Default Argument Values","text":"<p>Okay in most cases.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2121-definition","title":"2.12.1 Definition","text":"<p>You can specify values for variables at the end of a function's parameter list, e.g., <code>def foo(a, b=0):</code>. If <code>foo</code> is called with only one argument, <code>b</code> is set to 0. If it is called with two arguments, <code>b</code> has the value of the second argument.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2122-pros","title":"2.12.2 Pros","text":"<p>Often you have a function that uses lots of default values, but on rare occasions you want to override the defaults. Default argument values provide an easy way to do this, without having to define lots of functions for the rare exceptions. As Python does not support overloaded methods/functions, default arguments are an easy way of \"faking\" the overloading behavior.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2123-cons","title":"2.12.3 Cons","text":"<p>Default arguments are evaluated once at module load time. This may cause problems if the argument is a mutable object such as a list or a dictionary. If the function modifies the object (e.g., by appending an item to a list), the default value is modified.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2124-decision","title":"2.12.4 Decision","text":"<p>Okay to use with the following caveat:</p> <p>Do not use mutable objects as default values in the function or method definition.</p> <pre><code>Yes: def foo(a, b=None):\n         if b is None:\n             b = []\nYes: def foo(a, b: Optional[Sequence] = None):\n         if b is None:\n             b = []\nYes: def foo(a, b: Sequence = ()):  # Empty tuple OK since tuples are immutable\n         ...\n</code></pre> <pre><code>No:  def foo(a, b=[]):\n         ...\nNo:  def foo(a, b=time.time()):  # The time the module was loaded???\n         ...\nNo:  def foo(a, b=FLAGS.my_thing):  # sys.argv has not yet been parsed...\n         ...\nNo:  def foo(a, b: Mapping = {}):  # Could still get passed to unchecked code\n         ...\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#213-properties","title":"2.13 Properties","text":"<p>Use properties for accessing or setting data where you would normally have used simple, lightweight accessor or setter methods.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2131-definition","title":"2.13.1 Definition","text":"<p>A way to wrap method calls for getting and setting an attribute as a standard attribute access when the computation is lightweight.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2132-pros","title":"2.13.2 Pros","text":"<p>Readability is increased by eliminating explicit get and set method calls for simple attribute access. Allows calculations to be lazy. Considered the Pythonic way to maintain the interface of a class. In terms of performance, allowing properties bypasses needing trivial accessor methods when a direct variable access is reasonable. This also allows accessor methods to be added in the future without breaking the interface.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2133-cons","title":"2.13.3 Cons","text":"<p>Can hide side-effects much like operator overloading. Can be confusing for subclasses.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2134-decision","title":"2.13.4 Decision","text":"<p>Use properties in new code to access or set data where you would normally have used lightweight accessor or setter methods. Properties should be created with the <code>@property</code> decorator.</p> <p>Inheritance with properties can be non-obvious if the property itself is not overridden. Thus one must make sure that accessor methods are called indirectly to ensure methods overridden in subclasses are called by the property (using the template method design pattern).</p> <pre><code>Yes: import math\n\n     class Square:\n\"\"\"A square with two properties: a writable area and a read-only perimeter.\n\n         To use:\n         &gt;&gt;&gt; sq = Square(3)\n         &gt;&gt;&gt; sq.area\n         9\n         &gt;&gt;&gt; sq.perimeter\n         12\n         &gt;&gt;&gt; sq.area = 16\n         &gt;&gt;&gt; sq.side\n         4\n         &gt;&gt;&gt; sq.perimeter\n         16\n         \"\"\"\n\n         def __init__(self, side):\n             self.side = side\n\n         @property\n         def area(self):\n\"\"\"Area of the square.\"\"\"\n             return self._get_area()\n\n         @area.setter\n         def area(self, area):\n             return self._set_area(area)\n\n         def _get_area(self):\n\"\"\"Indirect accessor to calculate the 'area' property.\"\"\"\n             return self.side ** 2\n\n         def _set_area(self, area):\n\"\"\"Indirect setter to set the 'area' property.\"\"\"\n             self.side = math.sqrt(area)\n\n         @property\n         def perimeter(self):\n             return self.side * 4\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#214-truefalse-evaluations","title":"2.14 True/False Evaluations","text":"<p>Use the \"implicit\" false if at all possible.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2141-definition","title":"2.14.1 Definition","text":"<p>Python evaluates certain values as <code>False</code> when in a boolean context. A quick \"rule of thumb\" is that all \"empty\" values are considered false, so <code>0, None, [], {}, ''</code> all evaluate as false in a boolean context.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2142-pros","title":"2.14.2 Pros","text":"<p>Conditions using Python booleans are easier to read and less error-prone. In most cases, they're also faster.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2143-cons","title":"2.14.3 Cons","text":"<p>May look strange to C/C++ developers.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2144-decision","title":"2.14.4 Decision","text":"<p>Use the \"implicit\" false if possible, e.g., <code>if foo:</code> rather than <code>if foo != []:</code>. There are a few caveats that you should keep in mind though:</p> <ul> <li> <p>Always use <code>if foo is None:</code> (or <code>is not None</code>) to check for a <code>None</code> value.     E.g., when testing whether a variable or argument that defaults to <code>None</code>     was set to some other value. The other value might be a value that's false     in a boolean context!</p> </li> <li> <p>Never compare a boolean variable to <code>False</code> using <code>==</code>. Use <code>if not x:</code>     instead. If you need to distinguish <code>False</code> from <code>None</code> then chain the     expressions, such as <code>if not x and x is not None:</code>.</p> </li> <li> <p>For sequences (strings, lists, tuples), use the fact that empty sequences     are false, so <code>if seq:</code> and <code>if not seq:</code> are preferable to <code>if len(seq):</code>     and <code>if not len(seq):</code> respectively.</p> </li> <li> <p>When handling integers, implicit false may involve more risk than benefit     (i.e., accidentally handling <code>None</code> as 0). You may compare a value which is     known to be an integer (and is not the result of <code>len()</code>) against the     integer 0.</p> <pre><code>Yes: if not users:\n         print('no users')\n\n     if foo == 0:\n         self.handle_zero()\n\n     if i % 10 == 0:\n         self.handle_multiple_of_ten()\n\n     def f(x=None):\n         if x is None:\n             x = []\n</code></pre> <pre><code>No:  if len(users) == 0:\n         print('no users')\n\n     if foo is not None and not foo:\n         self.handle_zero()\n\n     if not i % 10:\n         self.handle_multiple_of_ten()\n\n     def f(x=None):\n         x = x or []\n</code></pre> </li> <li> <p>Note that <code>'0'</code> (i.e., <code>0</code> as string) evaluates to true.</p> </li> </ul> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#216-lexical-scoping","title":"2.16 Lexical Scoping","text":"<p>Okay to use.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2161-definition","title":"2.16.1 Definition","text":"<p>A nested Python function can refer to variables defined in enclosing functions, but cannot assign to them. Variable bindings are resolved using lexical scoping, that is, based on the static program text. Any assignment to a name in a block will cause Python to treat all references to that name as a local variable, even if the use precedes the assignment. If a global declaration occurs, the name is treated as a global variable.</p> <p>An example of the use of this feature is:</p> <pre><code>def get_adder(summand1):\n\"\"\"Returns a function that adds numbers to a given number.\"\"\"\n    def adder(summand2):\n        return summand1 + summand2\n\n    return adder\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2162-pros","title":"2.16.2 Pros","text":"<p>Often results in clearer, more elegant code. Especially comforting to experienced Lisp and Scheme (and Haskell and ML and ...) programmers.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2163-cons","title":"2.16.3 Cons","text":"<p>Can lead to confusing bugs. Such as this example based on PEP-0227:</p> <pre><code>i = 4\ndef foo(x):\n    def bar():\n        print(i, end='')\n    # ...\n    # A bunch of code here\n    # ...\n    for i in x:  # Ah, i *is* local to foo, so this is what bar sees\n        print(i, end='')\n    bar()\n</code></pre> <p>So <code>foo([1, 2, 3])</code> will print <code>1 2 3 3</code>, not <code>1 2 3 4</code>.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2164-decision","title":"2.16.4 Decision","text":"<p>Okay to use.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#217-function-and-method-decorators","title":"2.17 Function and Method Decorators","text":"<p>Use decorators judiciously when there is a clear advantage. Avoid <code>staticmethod</code> and limit use of <code>classmethod</code>.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2171-definition","title":"2.17.1 Definition","text":"<p>Decorators for Functions and Methods (a.k.a \"the <code>@</code> notation\"). One common decorator is <code>@property</code>, used for converting ordinary methods into dynamically computed attributes. However, the decorator syntax allows for user-defined decorators as well. Specifically, for some function <code>my_decorator</code>, this:</p> <pre><code>class C:\n    @my_decorator\n    def method(self):\n        # method body ...\n</code></pre> <p>is equivalent to:</p> <pre><code>class C:\n    def method(self):\n        # method body ...\n    method = my_decorator(method)\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2172-pros","title":"2.17.2 Pros","text":"<p>Elegantly specifies some transformation on a method; the transformation might eliminate some repetitive code, enforce invariants, etc.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2173-cons","title":"2.17.3 Cons","text":"<p>Decorators can perform arbitrary operations on a function's arguments or return values, resulting in surprising implicit behavior. Additionally, decorators execute at import time. Failures in decorator code are pretty much impossible to recover from.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2174-decision","title":"2.17.4 Decision","text":"<p>Use decorators judiciously when there is a clear advantage. Decorators should follow the same import and naming guidelines as functions. Decorator pydoc should clearly state that the function is a decorator. Write unit tests for decorators.</p> <p>Avoid external dependencies in the decorator itself (e.g. don't rely on files, sockets, database connections, etc.), since they might not be available when the decorator runs (at import time, perhaps from <code>pydoc</code> or other tools). A decorator that is called with valid parameters should (as much as possible) be guaranteed to succeed in all cases.</p> <p>Decorators are a special case of \"top level code\" - see main for more discussion.</p> <p>Never use <code>staticmethod</code> unless forced to in order to integrate with an API defined in an existing library. Write a module level function instead.</p> <p>Use <code>classmethod</code> only when writing a named constructor or a class-specific routine that modifies necessary global state such as a process-wide cache.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#218-threading","title":"2.18 Threading","text":"<p>Do not rely on the atomicity of built-in types.</p> <p>While Python's built-in data types such as dictionaries appear to have atomic operations, there are corner cases where they aren't atomic (e.g. if <code>__hash__</code> or <code>__eq__</code> are implemented as Python methods) and their atomicity should not be relied upon. Neither should you rely on atomic variable assignment (since this in turn depends on dictionaries).</p> <p>Use the Queue module's <code>Queue</code> data type as the preferred way to communicate data between threads. Otherwise, use the threading module and its locking primitives. Prefer condition variables and <code>threading.Condition</code> instead of using lower-level locks.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#219-power-features","title":"2.19 Power Features","text":"<p>Avoid these features.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2191-definition","title":"2.19.1 Definition","text":"<p>Python is an extremely flexible language and gives you many fancy features such as custom metaclasses, access to bytecode, on-the-fly compilation, dynamic inheritance, object reparenting, import hacks, reflection (e.g. some uses of <code>getattr()</code>), modification of system internals, etc.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2192-pros","title":"2.19.2 Pros","text":"<p>These are powerful language features. They can make your code more compact.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2193-cons","title":"2.19.3 Cons","text":"<p>It's very tempting to use these \"cool\" features when they're not absolutely necessary. It's harder to read, understand, and debug code that's using unusual features underneath. It doesn't seem that way at first (to the original author), but when revisiting the code, it tends to be more difficult than code that is longer but is straightforward.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2194-decision","title":"2.19.4 Decision","text":"<p>Avoid these features in your code.</p> <p>Standard library modules and classes that internally use these features are okay to use (for example, <code>abc.ABCMeta</code>, <code>dataclasses</code>, and <code>enum</code>).</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#220-modern-python-python-3-and-from-__future__-imports","title":"2.20 Modern Python: Python 3 and from __future__ imports","text":"<p>Python 3 is here! While not every project is ready to use it yet, all code should be written to be 3 compatible (and tested under 3 when possible).</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2201-definition","title":"2.20.1 Definition","text":"<p>Python 3 is a significant change in the Python language. While existing code is often written with 2.7 in mind, there are some simple things to do to make code more explicit about its intentions and thus better prepared for use under Python 3 without modification.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2202-pros","title":"2.20.2 Pros","text":"<p>Code written with Python 3 in mind is more explicit and easier to get running under Python 3 once all of the dependencies of your project are ready.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2203-cons","title":"2.20.3 Cons","text":"<p>Some people find the additional boilerplate to be ugly. It's unusual to add imports to a module that doesn't actually require the features added by the import.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2204-decision","title":"2.20.4 Decision","text":""},{"location":"coding/python/pyguide/#from-__future__-imports","title":"from __future__ imports","text":"<p>Use of <code>from __future__ import</code> statements is encouraged. All new code should contain the following and existing code should be updated to be compatible when possible:</p> <pre><code>from __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n</code></pre> <p>For more information on these imports, see absolute imports, <code>/</code> division behavior, and the <code>print</code> function.</p> <p>Please don't omit or remove these imports, even if they're not currently used in the module, unless the code is Python 3 only. It is better to always have the future imports in all files so that they are not forgotten during later edits when someone starts using such a feature.</p> <p>There are other <code>from __future__</code> import statements. Use them as you see fit. We do not include <code>unicode_literals</code> in our recommendations as it is not a clear win due to implicit default codec conversion consequences it introduces in many places within Python 2.7. Most code is better off with explicit use of <code>b''</code> and <code>u''</code> bytes and unicode string literals as necessary.</p>"},{"location":"coding/python/pyguide/#the-six-future-and-past-libraries","title":"The six, future, and past libraries","text":"<p>When your project needs to actively support use under both Python 2 and 3, use the six, future, and past libraries as you see fit. They exist to make your code cleaner and life easier.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#221-type-annotated-code","title":"2.21 Type Annotated Code","text":"<p>You can annotate Python 3 code with type hints according to PEP-484, and type-check the code at build time with a type checking tool like pytype.</p> <p>Type annotations can be in the source or in a stub pyi file. Whenever possible, annotations should be in the source. Use pyi files for third-party or extension modules.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2211-definition","title":"2.21.1 Definition","text":"<p>Type annotations (or \"type hints\") are for function or method arguments and return values:</p> <pre><code>def func(a: int) -&gt; List[int]:\n</code></pre> <p>You can also declare the type of a variable using similar PEP-526 syntax:</p> <pre><code>a: SomeType = some_func()\n</code></pre> <p>Or by using a type comment in code that must support legacy Python versions.</p> <pre><code>a = some_func()  # type: SomeType\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2212-pros","title":"2.21.2 Pros","text":"<p>Type annotations improve the readability and maintainability of your code. The type checker will convert many runtime errors to build-time errors, and reduce your ability to use Power Features.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2213-cons","title":"2.21.3 Cons","text":"<p>You will have to keep the type declarations up to date. You might see type errors that you think are valid code. Use of a type checker may reduce your ability to use Power Features.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#2214-decision","title":"2.21.4 Decision","text":"<p>You are strongly encouraged to enable Python type analysis when updating code. When adding or modifying public APIs, include type annotations and enable checking via pytype in the build system. As static analysis is relatively new to Python, we acknowledge that undesired side-effects (such as wrongly inferred types) may prevent adoption by some projects. In those situations, authors are encouraged to add a comment with a TODO or link to a bug describing the issue(s) currently preventing type annotation adoption in the BUILD file or in the code itself as appropriate.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#3-python-style-rules","title":"3 Python Style Rules","text":""},{"location":"coding/python/pyguide/#31-semicolons","title":"3.1 Semicolons","text":"<p>Do not terminate your lines with semicolons, and do not use semicolons to put two statements on the same line.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#32-line-length","title":"3.2 Line length","text":"<p>Maximum line length is 80 characters.</p> <p>Explicit exceptions to the 80 character limit:</p> <ul> <li>Long import statements.</li> <li>URLs, pathnames, or long flags in comments.</li> <li>Long string module level constants not containing whitespace that would be     inconvenient to split across lines such as URLs or pathnames.<ul> <li>Pylint disable comments. (e.g.: <code># pylint: disable=invalid-name</code>)</li> </ul> </li> </ul> <p>Do not use backslash line continuation except for <code>with</code> statements requiring three or more context managers.</p> <p>Make use of Python's implicit line joining inside parentheses, brackets and braces. If necessary, you can add an extra pair of parentheses around an expression.</p> <pre><code>Yes: foo_bar(self, width, height, color='black', design=None, x='foo',\n             emphasis=None, highlight=0)\n\n     if (width == 0 and height == 0 and\n         color == 'red' and emphasis == 'strong'):\n</code></pre> <p>When a literal string won't fit on a single line, use parentheses for implicit line joining.</p> <pre><code>x = ('This will build a very long long '\n     'long long long long long long string')\n</code></pre> <p>Within comments, put long URLs on their own line if necessary.</p> <pre><code>Yes:  # See details at\n      # http://www.example.com/us/developer/documentation/api/content/v2.0/csv_file_name_extension_full_specification.html\n</code></pre> <pre><code>No:  # See details at\n     # http://www.example.com/us/developer/documentation/api/content/\\\n     # v2.0/csv_file_name_extension_full_specification.html\n</code></pre> <p>It is permissible to use backslash continuation when defining a <code>with</code> statement whose expressions span three or more lines. For two lines of expressions, use a nested <code>with</code> statement:</p> <pre><code>Yes:  with very_long_first_expression_function() as spam, \\\n           very_long_second_expression_function() as beans, \\\n           third_thing() as eggs:\n          place_order(eggs, beans, spam, beans)\n</code></pre> <pre><code>No:  with VeryLongFirstExpressionFunction() as spam, \\\n          VeryLongSecondExpressionFunction() as beans:\n       PlaceOrder(eggs, beans, spam, beans)\n</code></pre> <pre><code>Yes:  with very_long_first_expression_function() as spam:\n          with very_long_second_expression_function() as beans:\n              place_order(beans, spam)\n</code></pre> <p>Make note of the indentation of the elements in the line continuation examples above; see the indentation section for explanation.</p> <p>In all other cases where a line exceeds 80 characters, and the yapf auto-formatter does not help bring the line below the limit, the line is allowed to exceed this maximum.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#33-parentheses","title":"3.3 Parentheses","text":"<p>Use parentheses sparingly.</p> <p>It is fine, though not required, to use parentheses around tuples. Do not use them in return statements or conditional statements unless using parentheses for implied line continuation or to indicate a tuple.</p> <pre><code>Yes: if foo:\n         bar()\n     while x:\n         x = bar()\n     if x and y:\n         bar()\n     if not x:\n         bar()\n     # For a 1 item tuple the ()s are more visually obvious than the comma.\n     onesie = (foo,)\n     return foo\n     return spam, beans\n     return (spam, beans)\n     for (x, y) in dict.items(): ...\n</code></pre> <pre><code>No:  if (x):\n         bar()\n     if not(x):\n         bar()\n     return (foo)\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#34-indentation","title":"3.4 Indentation","text":"<p>Indent your code blocks with 4 spaces.</p> <p>Never use tabs or mix tabs and spaces. In cases of implied line continuation, you should align wrapped elements either vertically, as per the examples in the line length section; or using a hanging indent of 4 spaces, in which case there should be nothing after the open parenthesis or bracket on the first line.</p> <pre><code>Yes:   # Aligned with opening delimiter\n       foo = long_function_name(var_one, var_two,\n                                var_three, var_four)\n       meal = (spam,\n               beans)\n\n       # Aligned with opening delimiter in a dictionary\n       foo = {\n           long_dictionary_key: value1 +\n                                value2,\n           ...\n       }\n\n       # 4-space hanging indent; nothing on first line\n       foo = long_function_name(\n           var_one, var_two, var_three,\n           var_four)\n       meal = (\n           spam,\n           beans)\n\n       # 4-space hanging indent in a dictionary\n       foo = {\n           long_dictionary_key:\n               long_dictionary_value,\n           ...\n       }\n</code></pre> <pre><code>No:    # Stuff on first line forbidden\n       foo = long_function_name(var_one, var_two,\n           var_three, var_four)\n       meal = (spam,\n           beans)\n\n       # 2-space hanging indent forbidden\n       foo = long_function_name(\n         var_one, var_two, var_three,\n         var_four)\n\n       # No hanging indent in a dictionary\n       foo = {\n           long_dictionary_key:\n           long_dictionary_value,\n           ...\n       }\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#341-trailing-commas-in-sequences-of-items","title":"3.4.1 Trailing commas in sequences of items?","text":"<p>Trailing commas in sequences of items are recommended only when the closing container token <code>]</code>, <code>)</code>, or <code>}</code> does not appear on the same line as the final element. The presence of a trailing comma is also used as a hint to our Python code auto-formatter YAPF to direct it to auto-format the container of items to one item per line when the <code>,</code> after the final element is present.</p> <pre><code>Yes:   golomb3 = [0, 1, 3]\nYes:   golomb4 = [\n           0,\n           1,\n           4,\n           6,\n       ]\n</code></pre> <pre><code>No:    golomb4 = [\n           0,\n           1,\n           4,\n           6\n       ]\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#35-blank-lines","title":"3.5 Blank Lines","text":"<p>Two blank lines between top-level definitions, be they function or class definitions. One blank line between method definitions and between the <code>class</code> line and the first method. No blank line following a <code>def</code> line. Use single blank lines as you judge appropriate within functions or methods.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#36-whitespace","title":"3.6 Whitespace","text":"<p>Follow standard typographic rules for the use of spaces around punctuation.</p> <p>No whitespace inside parentheses, brackets or braces.</p> <pre><code>Yes: spam(ham[1], {eggs: 2}, [])\n</code></pre> <pre><code>No:  spam( ham[ 1 ], { eggs: 2 }, [ ] )\n</code></pre> <p>No whitespace before a comma, semicolon, or colon. Do use whitespace after a comma, semicolon, or colon, except at the end of the line.</p> <pre><code>Yes: if x == 4:\n         print(x, y)\n     x, y = y, x\n</code></pre> <pre><code>No:  if x == 4 :\n         print(x , y)\n     x , y = y , x\n</code></pre> <p>No whitespace before the open paren/bracket that starts an argument list, indexing or slicing.</p> <pre><code>Yes: spam(1)\n</code></pre> <pre><code>No:  spam (1)\n</code></pre> <pre><code>Yes: dict['key'] = list[index]\n</code></pre> <pre><code>No:  dict ['key'] = list [index]\n</code></pre> <p>No trailing whitespace.</p> <p>Surround binary operators with a single space on either side for assignment (<code>=</code>), comparisons (<code>==, &lt;, &gt;, !=, &lt;&gt;, &lt;=, &gt;=, in, not in, is, is not</code>), and Booleans (<code>and, or, not</code>). Use your better judgment for the insertion of spaces around arithmetic operators (<code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>//</code>, <code>%</code>, <code>**</code>, <code>@</code>).</p> <pre><code>Yes: x == 1\n</code></pre> <pre><code>No:  x&lt;1\n</code></pre> <p>Never use spaces around <code>=</code> when passing keyword arguments or defining a default parameter value, with one exception: when a type annotation is present, do use spaces around the <code>=</code> for the default parameter value.</p> <pre><code>Yes: def complex(real, imag=0.0): return Magic(r=real, i=imag)\nYes: def complex(real, imag: float = 0.0): return Magic(r=real, i=imag)\n</code></pre> <pre><code>No:  def complex(real, imag = 0.0): return Magic(r = real, i = imag)\nNo:  def complex(real, imag: float=0.0): return Magic(r = real, i = imag)\n</code></pre> <p>Don't use spaces to vertically align tokens on consecutive lines, since it becomes a maintenance burden (applies to <code>:</code>, <code>#</code>, <code>=</code>, etc.):</p> <pre><code>Yes:\n  foo = 1000  # comment\n  long_name = 2  # comment that should not be aligned\n\n  dictionary = {\n      'foo': 1,\n      'long_name': 2,\n  }\n</code></pre> <pre><code>No:\n  foo       = 1000  # comment\n  long_name = 2     # comment that should not be aligned\n\n  dictionary = {\n      'foo'      : 1,\n      'long_name': 2,\n  }\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#37-shebang-line","title":"3.7 Shebang Line","text":"<p>Most <code>.py</code> files do not need to start with a <code>#!</code> line. Start the main file of a program with <code>#!/usr/bin/env python3</code> (to support virtualenvs) or <code>#!/usr/bin/python3</code> per PEP-394.</p> <p>This line is used by the kernel to find the Python interpreter, but is ignored by Python when importing modules. It is only necessary on a file intended to be executed directly.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#38-comments-and-docstrings","title":"3.8 Comments and Docstrings","text":"<p>Be sure to use the right style for module, function, method docstrings and inline comments.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#381-docstrings","title":"3.8.1 Docstrings","text":"<p>Python uses docstrings to document code. A docstring is a string that is the first statement in a package, module, class or function. These strings can be extracted automatically through the <code>__doc__</code> member of the object and are used by <code>pydoc</code>. (Try running <code>pydoc</code> on your module to see how it looks.) Always use the three double-quote <code>\"\"\"</code> format for docstrings (per PEP 257). A docstring should be organized as a summary line (one physical line not exceeding 80 characters) terminated by a period, question mark, or exclamation point. When writing more (encouraged), this must be followed by a blank line, followed by the rest of the docstring starting at the same cursor position as the first quote of the first line. There are more formatting guidelines for docstrings below.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#382-modules","title":"3.8.2 Modules","text":"<p>Every file should contain license boilerplate. Choose the appropriate boilerplate for the license used by the project (for example, Apache 2.0, BSD, LGPL, GPL)</p> <p>Files should start with a docstring describing the contents and usage of the module. <pre><code>\"\"\"A one line summary of the module or program, terminated by a period.\n\nLeave one blank line.  The rest of this docstring should contain an\noverall description of the module or program.  Optionally, it may also\ncontain a brief description of exported classes and functions and/or usage\nexamples.\n\n  Typical usage example:\n\n  foo = ClassFoo()\n  bar = foo.FunctionBar()\n\"\"\"\n</code></pre></p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#383-functions-and-methods","title":"3.8.3 Functions and Methods","text":"<p>In this section, \"function\" means a method, function, or generator.</p> <p>A function must have a docstring, unless it meets all of the following criteria:</p> <ul> <li>not externally visible</li> <li>very short</li> <li>obvious</li> </ul> <p>A docstring should give enough information to write a call to the function without reading the function's code. The docstring should be descriptive-style (<code>\"\"\"Fetches rows from a Bigtable.\"\"\"</code>) rather than imperative-style (<code>\"\"\"Fetch rows from a Bigtable.\"\"\"</code>), except for <code>@property</code> data descriptors, which should use the same style as attributes. A docstring should describe the function's calling syntax and its semantics, not its implementation. For tricky code, comments alongside the code are more appropriate than using docstrings.</p> <p>A method that overrides a method from a base class may have a simple docstring sending the reader to its overridden method's docstring, such as <code>\"\"\"See base class.\"\"\"</code>. The rationale is that there is no need to repeat in many places documentation that is already present in the base method's docstring. However, if the overriding method's behavior is substantially different from the overridden method, or details need to be provided (e.g., documenting additional side effects), a docstring with at least those differences is required on the overriding method.</p> <p>Certain aspects of a function should be documented in special sections, listed below. Each section begins with a heading line, which ends with a colon. All sections other than the heading should maintain a hanging indent of two or four spaces (be consistent within a file). These sections can be omitted in cases where the function's name and signature are informative enough that it can be aptly described using a one-line docstring.</p> Args: List each parameter by name. A description should follow the name, and be separated by a colon followed by either a space or newline. If the description is too long to fit on a single 80-character line, use a hanging indent of 2 or 4 spaces more than the parameter name (be consistent with the rest of the docstrings in the file). The description should include required type(s) if the code does not contain a corresponding type annotation. If a function accepts <code>*foo</code> (variable length argument lists) and/or <code>**bar</code> (arbitrary keyword arguments), they should be listed as <code>*foo</code> and <code>**bar</code>. Returns: (or Yields: for generators) Describe the type and semantics of the return value. If the function only returns None, this section is not required. It may also be omitted if the docstring starts with Returns or Yields (e.g. <code>\"\"\"Returns row from Bigtable as a tuple of strings.\"\"\"</code>) and the opening sentence is sufficient to describe return value. Raises: List all exceptions that are relevant to the interface followed by a description. Use a similar exception name + colon + space or newline and hanging indent style as described in Args:. You should not document exceptions that get raised if the API specified in the docstring is violated (because this would paradoxically make behavior under violation of the API part of the API). <pre><code>def fetch_smalltable_rows(table_handle: smalltable.Table,\n                          keys: Sequence[Union[bytes, str]],\n                          require_all_keys: bool = False,\n) -&gt; Mapping[bytes, Tuple[str]]:\n\"\"\"Fetches rows from a Smalltable.\n\n    Retrieves rows pertaining to the given keys from the Table instance\n    represented by table_handle.  String keys will be UTF-8 encoded.\n\n    Args:\n        table_handle: An open smalltable.Table instance.\n        keys: A sequence of strings representing the key of each table\n          row to fetch.  String keys will be UTF-8 encoded.\n        require_all_keys: Optional; If require_all_keys is True only\n          rows with values set for all keys will be returned.\n\n    Returns:\n        A dict mapping keys to the corresponding table row data\n        fetched. Each row is represented as a tuple of strings. For\n        example:\n\n        {b'Serak': ('Rigel VII', 'Preparer'),\n         b'Zim': ('Irk', 'Invader'),\n         b'Lrrr': ('Omicron Persei 8', 'Emperor')}\n\n        Returned keys are always bytes.  If a key from the keys argument is\n        missing from the dictionary, then that row was not found in the\n        table (and require_all_keys must have been False).\n\n    Raises:\n        IOError: An error occurred accessing the smalltable.\n    \"\"\"\n</code></pre> <p>Similarly, this variation on <code>Args:</code> with a line break is also allowed:</p> <pre><code>def fetch_smalltable_rows(table_handle: smalltable.Table,\n                          keys: Sequence[Union[bytes, str]],\n                          require_all_keys: bool = False,\n) -&gt; Mapping[bytes, Tuple[str]]:\n\"\"\"Fetches rows from a Smalltable.\n\n    Retrieves rows pertaining to the given keys from the Table instance\n    represented by table_handle.  String keys will be UTF-8 encoded.\n\n    Args:\n      table_handle:\n        An open smalltable.Table instance.\n      keys:\n        A sequence of strings representing the key of each table row to\n        fetch.  String keys will be UTF-8 encoded.\n      require_all_keys:\n        Optional; If require_all_keys is True only rows with values set\n        for all keys will be returned.\n\n    Returns:\n      A dict mapping keys to the corresponding table row data\n      fetched. Each row is represented as a tuple of strings. For\n      example:\n\n      {b'Serak': ('Rigel VII', 'Preparer'),\n       b'Zim': ('Irk', 'Invader'),\n       b'Lrrr': ('Omicron Persei 8', 'Emperor')}\n\n      Returned keys are always bytes.  If a key from the keys argument is\n      missing from the dictionary, then that row was not found in the\n      table (and require_all_keys must have been False).\n\n    Raises:\n      IOError: An error occurred accessing the smalltable.\n    \"\"\"\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#384-classes","title":"3.8.4 Classes","text":"<p>Classes should have a docstring below the class definition describing the class. If your class has public attributes, they should be documented here in an <code>Attributes</code> section and follow the same formatting as a function's <code>Args</code> section.</p> <pre><code>class SampleClass:\n\"\"\"Summary of class here.\n\n    Longer class information....\n    Longer class information....\n\n    Attributes:\n        likes_spam: A boolean indicating if we like SPAM or not.\n        eggs: An integer count of the eggs we have laid.\n    \"\"\"\n\n    def __init__(self, likes_spam=False):\n\"\"\"Inits SampleClass with blah.\"\"\"\n        self.likes_spam = likes_spam\n        self.eggs = 0\n\n    def public_method(self):\n\"\"\"Performs operation blah.\"\"\"\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#385-block-and-inline-comments","title":"3.8.5 Block and Inline Comments","text":"<p>The final place to have comments is in tricky parts of the code. If you're going to have to explain it at the next code review, you should comment it now. Complicated operations get a few lines of comments before the operations commence. Non-obvious ones get comments at the end of the line.</p> <pre><code># We use a weighted dictionary search to find out where i is in\n# the array.  We extrapolate position based on the largest num\n# in the array and the array size and then do binary search to\n# get the exact number.\n\nif i &amp; (i-1) == 0:  # True if i is 0 or a power of 2.\n</code></pre> <p>To improve legibility, these comments should start at least 2 spaces away from the code with the comment character <code>#</code>, followed by at least one space before the text of the comment itself.</p> <p>On the other hand, never describe the code. Assume the person reading the code knows Python (though not what you're trying to do) better than you do.</p> <pre><code># BAD COMMENT: Now go through the b array and make sure whenever i occurs\n# the next element is i+1\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#386-punctuation-spelling-and-grammar","title":"3.8.6 Punctuation, Spelling, and Grammar","text":"<p>Pay attention to punctuation, spelling, and grammar; it is easier to read well-written comments than badly written ones.</p> <p>Comments should be as readable as narrative text, with proper capitalization and punctuation. In many cases, complete sentences are more readable than sentence fragments. Shorter comments, such as comments at the end of a line of code, can sometimes be less formal, but you should be consistent with your style.</p> <p>Although it can be frustrating to have a code reviewer point out that you are using a comma when you should be using a semicolon, it is very important that source code maintain a high level of clarity and readability. Proper punctuation, spelling, and grammar help with that goal.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#310-strings","title":"3.10 Strings","text":"<p>Use an f-string, the <code>%</code> operator, or the <code>format</code> method for formatting strings, even when the parameters are all strings. Use your best judgment to decide between <code>+</code> and <code>%</code> (or <code>format</code>) though. Do not use <code>%</code> or the <code>format</code> method for pure concatenation.</p> <pre><code>Yes: x = a + b\n     x = '%s, %s!' % (imperative, expletive)\n     x = '{}, {}'.format(first, second)\n     x = 'name: %s; score: %d' % (name, n)\n     x = 'name: {}; score: {}'.format(name, n)\n     x = f'name: {name}; score: {n}'\n</code></pre> <pre><code>No: x = '%s%s' % (a, b)  # use + in this case\n    x = '{}{}'.format(a, b)  # use + in this case\n    x = first + ', ' + second\n    x = 'name: ' + name + '; score: ' + str(n)\n</code></pre> <p>Avoid using the <code>+</code> and <code>+=</code> operators to accumulate a string within a loop. In some conditions, accumulating a string with addition can lead to quadratic rather than linear running time. Although common accumulations of this sort may be optimized on CPython, that is an implementation detail. The conditions under which an optimization applies are not easy to predict and may change. Instead, add each substring to a list and <code>''.join</code> the list after the loop terminates, or write each substring to an <code>io.StringIO</code> buffer. These techniques consistently have amortized-linear run time complexity.</p> <pre><code>Yes: items = ['&lt;table&gt;']\n     for last_name, first_name in employee_list:\n         items.append('&lt;tr&gt;&lt;td&gt;%s, %s&lt;/td&gt;&lt;/tr&gt;' % (last_name, first_name))\n     items.append('&lt;/table&gt;')\n     employee_table = ''.join(items)\n</code></pre> <pre><code>No: employee_table = '&lt;table&gt;'\n    for last_name, first_name in employee_list:\n        employee_table += '&lt;tr&gt;&lt;td&gt;%s, %s&lt;/td&gt;&lt;/tr&gt;' % (last_name, first_name)\n    employee_table += '&lt;/table&gt;'\n</code></pre> <p>Be consistent with your choice of string quote character within a file. Pick <code>'</code> or <code>\"</code> and stick with it. It is okay to use the other quote character on a string to avoid the need to <code>\\\\</code> escape within the string.</p> <pre><code>Yes:\n  Python('Why are you hiding your eyes?')\n  Gollum(\"I'm scared of lint errors.\")\n  Narrator('\"Good!\" thought a happy Python reviewer.')\n</code></pre> <pre><code>No:\n  Python(\"Why are you hiding your eyes?\")\n  Gollum('The lint. It burns. It burns us.')\n  Gollum(\"Always the great lint. Watching. Watching.\")\n</code></pre> <p>Prefer <code>\"\"\"</code> for multi-line strings rather than <code>'''</code>. Projects may choose to use <code>'''</code> for all non-docstring multi-line strings if and only if they also use <code>'</code> for regular strings. Docstrings must use <code>\"\"\"</code> regardless.</p> <p>Multi-line strings do not flow with the indentation of the rest of the program. If you need to avoid embedding extra space in the string, use either concatenated single-line strings or a multi-line string with <code>textwrap.dedent()</code> to remove the initial space on each line:</p> <pre><code>  No:\n  long_string = \"\"\"This is pretty ugly.\nDon't do this.\n\"\"\"\n</code></pre> <pre><code>  Yes:\n  long_string = \"\"\"This is fine if your use case can accept\n      extraneous leading spaces.\"\"\"\n</code></pre> <pre><code>  Yes:\n  long_string = (\"And this is fine if you cannot accept\\n\" +\n                 \"extraneous leading spaces.\")\n</code></pre> <pre><code>  Yes:\n  long_string = (\"And this too is fine if you cannot accept\\n\"\n                 \"extraneous leading spaces.\")\n</code></pre> <pre><code>  Yes:\n  import textwrap\n\n  long_string = textwrap.dedent(\"\"\"\\\n      This is also fine, because textwrap.dedent()\n      will collapse common leading spaces in each line.\"\"\")\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#3101-logging","title":"3.10.1 Logging","text":"<p>For logging functions that expect a pattern-string (with %-placeholders) as their first argument: Always call them with a string literal (not an f-string!) as their first argument with pattern-parameters as subsequent arguments. Some logging implementations collect the unexpanded pattern-string as a queryable field. It also prevents spending time rendering a message that no logger is configured to output.</p> <pre><code>  Yes:\n  import tensorflow as tf\n  logger = tf.get_logger()\n  logger.info('TensorFlow Version is: %s', tf.__version__)\n</code></pre> <pre><code>  Yes:\n  import os\n  from absl import logging\n\n  logging.info('Current $PAGER is: %s', os.getenv('PAGER', default=''))\n\n  homedir = os.getenv('HOME')\n  if homedir is None or not os.access(homedir, os.W_OK):\n    logging.error('Cannot write to home directory, $HOME=%r', homedir)\n</code></pre> <pre><code>  No:\n  import os\n  from absl import logging\n\n  logging.info('Current $PAGER is:')\n  logging.info(os.getenv('PAGER', default=''))\n\n  homedir = os.getenv('HOME')\n  if homedir is None or not os.access(homedir, os.W_OK):\n    logging.error(f'Cannot write to home directory, $HOME={homedir!r}')\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#3102-error-messages","title":"3.10.2 Error Messages","text":"<p>Error messages (such as: message strings on exceptions like <code>ValueError</code>, or messages shown to the user) should follow three guidelines:</p> <ol> <li> <p>The message needs to precisely match the actual error condition.</p> </li> <li> <p>Interpolated pieces need to always be clearly identifiable as such.</p> </li> <li> <p>They should allow simple automated processing (e.g. grepping).</p> </li> </ol> <pre><code>  Yes:\n  if not 0 &lt;= p &lt;= 1:\n    raise ValueError(f'Not a probability: {p!r}')\n\n  try:\n    os.rmdir(workdir)\n  except OSError as error:\n    logging.warning('Could not remove directory (reason: %r): %r',\n                    error, workdir)\n</code></pre> <pre><code>  No:\n  if p &lt; 0 or p &gt; 1:  # PROBLEM: also false for float('nan')!\n    raise ValueError(f'Not a probability: {p!r}')\n\n  try:\n    os.rmdir(workdir)\n  except OSError:\n    # PROBLEM: Message makes an assumption that might not be true:\n    # Deletion might have failed for some other reason, misleading\n    # whoever has to debug this.\n    logging.warning('Directory already was deleted: %s', workdir)\n\n  try:\n    os.rmdir(workdir)\n  except OSError:\n    # PROBLEM: The message is harder to grep for than necessary, and\n    # not universally non-confusing for all possible values of `workdir`.\n    # Imagine someone calling a library function with such code\n    # using a name such as workdir = 'deleted'. The warning would read:\n    # \"The deleted directory could not be deleted.\"\n    logging.warning('The %s directory could not be deleted.', workdir)\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#311-files-and-sockets","title":"3.11 Files and Sockets","text":"<p>Explicitly close files and sockets when done with them.</p> <p>Leaving files, sockets or other file-like objects open unnecessarily has many downsides:</p> <ul> <li>They may consume limited system resources, such as file descriptors. Code     that deals with many such objects may exhaust those resources unnecessarily     if they're not returned to the system promptly after use.</li> <li>Holding files open may prevent other actions such as moving or deleting     them.</li> <li>Files and sockets that are shared throughout a program may inadvertently be     read from or written to after logically being closed. If they are actually     closed, attempts to read or write from them will throw exceptions, making     the problem known sooner.</li> </ul> <p>Furthermore, while files and sockets are automatically closed when the file object is destructed, tying the lifetime of the file object to the state of the file is poor practice:</p> <ul> <li>There are no guarantees as to when the runtime will actually run the file's     destructor. Different Python implementations use different memory management     techniques, such as delayed garbage collection, which may increase the     object's lifetime arbitrarily and indefinitely.</li> <li>Unexpected references to the file, e.g. in globals or exception tracebacks,     may keep it around longer than intended.</li> </ul> <p>The preferred way to manage files is using the <code>with</code> statement:</p> <pre><code>with open(\"hello.txt\") as hello_file:\n    for line in hello_file:\n        print(line)\n</code></pre> <p>For file-like objects that do not support the <code>with</code> statement, use <code>contextlib.closing()</code>:</p> <pre><code>import contextlib\n\nwith contextlib.closing(urllib.urlopen(\"http://www.python.org/\")) as front_page:\n    for line in front_page:\n        print(line)\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#312-todo-comments","title":"3.12 TODO Comments","text":"<p>Use <code>TODO</code> comments for code that is temporary, a short-term solution, or good-enough but not perfect.</p> <p>A <code>TODO</code> comment begins with the string <code>TODO</code> in all caps and a parenthesized name, e-mail address, or other identifier of the person or issue with the best context about the problem. This is followed by an explanation of what there is to do.</p> <p>The purpose is to have a consistent <code>TODO</code> format that can be searched to find out how to get more details. A <code>TODO</code> is not a commitment that the person referenced will fix the problem. Thus when you create a <code>TODO</code>, it is almost always your name that is given.</p> <pre><code># TODO(kl@gmail.com): Use a \"*\" here for string repetition.\n# TODO(Zeke) Change this to use relations.\n</code></pre> <p>If your <code>TODO</code> is of the form \"At a future date do something\" make sure that you either include a very specific date (\"Fix by November 2009\") or a very specific event (\"Remove this code when all clients can handle XML responses.\").</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#313-imports-formatting","title":"3.13 Imports formatting","text":"<p>Imports should be on separate lines; there are exceptions for <code>typing</code> imports.</p> <p>E.g.:</p> <pre><code>Yes: import os\n     import sys\n     from typing import Mapping, Sequence\n</code></pre> <pre><code>No:  import os, sys\n</code></pre> <p>Imports are always put at the top of the file, just after any module comments and docstrings and before module globals and constants. Imports should be grouped from most generic to least generic:</p> <ol> <li> <p>Python future import statements. For example:</p> <pre><code>from __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n</code></pre> <p>See above for more information about those.</p> </li> <li> <p>Python standard library imports. For example:</p> <pre><code>import sys\n</code></pre> </li> <li> <p>third-party module     or package imports. For example:</p> <pre><code>import tensorflow as tf\n</code></pre> </li> <li> <p>Code repository     sub-package imports. For example:</p> <pre><code>from otherproject.ai import mind\n</code></pre> </li> <li> <p>Deprecated: application-specific imports that are part of the same     top level     sub-package as this file. For example:</p> <pre><code>from myproject.backend.hgwells import time_machine\n</code></pre> <p>You may find older Google Python Style code doing this, but it is no longer required. New code is encouraged not to bother with this. Simply treat application-specific sub-package imports the same as other sub-package imports.</p> </li> </ol> <p>Within each grouping, imports should be sorted lexicographically, ignoring case, according to each module's full package path (the <code>path</code> in <code>from path import ...</code>). Code may optionally place a blank line between import sections.</p> <pre><code>import collections\nimport queue\nimport sys\n\nfrom absl import app\nfrom absl import flags\nimport bs4\nimport cryptography\nimport tensorflow as tf\n\nfrom book.genres import scifi\nfrom myproject.backend import huxley\nfrom myproject.backend.hgwells import time_machine\nfrom myproject.backend.state_machine import main_loop\nfrom otherproject.ai import body\nfrom otherproject.ai import mind\nfrom otherproject.ai import soul\n\n# Older style code may have these imports down here instead:\n#from myproject.backend.hgwells import time_machine\n#from myproject.backend.state_machine import main_loop\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#314-statements","title":"3.14 Statements","text":"<p>Generally only one statement per line.</p> <p>However, you may put the result of a test on the same line as the test only if the entire statement fits on one line. In particular, you can never do so with <code>try</code>/<code>except</code> since the <code>try</code> and <code>except</code> can't both fit on the same line, and you can only do so with an <code>if</code> if there is no <code>else</code>.</p> <pre><code>Yes:\n\n  if foo: bar(foo)\n</code></pre> <pre><code>No:\n\n  if foo: bar(foo)\n  else:   baz(foo)\n\n  try:               bar(foo)\n  except ValueError: baz(foo)\n\n  try:\n      bar(foo)\n  except ValueError: baz(foo)\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#315-accessors","title":"3.15 Accessors","text":"<p>If an accessor function would be trivial, you should use public variables instead of accessor functions to avoid the extra cost of function calls in Python. When more functionality is added you can use <code>property</code> to keep the syntax consistent.</p> <p>On the other hand, if access is more complex, or the cost of accessing the variable is significant, you should use function calls (following the Naming guidelines) such as <code>get_foo()</code> and <code>set_foo()</code>. If the past behavior allowed access through a property, do not bind the new accessor functions to the property. Any code still attempting to access the variable by the old method should break visibly so they are made aware of the change in complexity.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#316-naming","title":"3.16 Naming","text":"<p><code>module_name</code>, <code>package_name</code>, <code>ClassName</code>, <code>method_name</code>, <code>ExceptionName</code>, <code>function_name</code>, <code>GLOBAL_CONSTANT_NAME</code>, <code>global_var_name</code>, <code>instance_var_name</code>, <code>function_parameter_name</code>, <code>local_var_name</code>.</p> <p>Function names, variable names, and filenames should be descriptive; eschew abbreviation. In particular, do not use abbreviations that are ambiguous or unfamiliar to readers outside your project, and do not abbreviate by deleting letters within a word.</p> <p>Always use a <code>.py</code> filename extension. Never use dashes.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#3161-names-to-avoid","title":"3.16.1 Names to Avoid","text":"<ul> <li> <p>single character names, except for specifically allowed cases:</p> <ul> <li>counters or iterators (e.g. <code>i</code>, <code>j</code>, <code>k</code>, <code>v</code>, et al.)</li> <li><code>e</code> as an exception identifier in <code>try/except</code> statements.</li> <li><code>f</code> as a file handle in <code>with</code> statements</li> </ul> <p>Please be mindful not to abuse single-character naming. Generally speaking, descriptiveness should be proportional to the name's scope of visibility. For example, <code>i</code> might be a fine name for 5-line code block but within multiple nested scopes, it is likely too vague.</p> </li> <li> <p>dashes (<code>-</code>) in any package/module name</p> </li> <li> <p><code>__double_leading_and_trailing_underscore__</code> names (reserved by Python)</p> </li> <li> <p>offensive terms</p> </li> <li> <p>names that needlessly include the type of the variable (for example:     <code>id_to_name_dict</code>)</p> </li> </ul> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#3162-naming-conventions","title":"3.16.2 Naming Conventions","text":"<ul> <li> <p>\"Internal\" means internal to a module, or protected or private within a     class.</p> </li> <li> <p>Prepending a single underscore (<code>_</code>) has some support for protecting module     variables and functions (linters will flag protected member access). While     prepending a double underscore (<code>__</code> aka \"dunder\") to an instance variable     or method effectively makes the variable or method private to its class     (using name mangling); we discourage its use as it impacts readability and     testability, and isn't really private.</p> </li> <li> <p>Place related classes and top-level functions together in a     module.     Unlike Java, there is no need to limit yourself to one class per module.</p> </li> <li> <p>Use CapWords for class names, but lower_with_under.py for module names.     Although there are some old modules named CapWords.py, this is now     discouraged because it's confusing when the module happens to be named after     a class. (\"wait -- did I write <code>import StringIO</code> or <code>from StringIO import     StringIO</code>?\")</p> </li> <li> <p>Underscores may appear in unittest method names starting with <code>test</code> to     separate logical components of the name, even if those components use     CapWords. One possible pattern is <code>test&lt;MethodUnderTest&gt;_&lt;state&gt;</code>; for     example <code>testPop_EmptyStack</code> is okay. There is no One Correct Way to name     test methods.</p> </li> </ul> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#3163-file-naming","title":"3.16.3 File Naming","text":"<p>Python filenames must have a <code>.py</code> extension and must not contain dashes (<code>-</code>). This allows them to be imported and unittested. If you want an executable to be accessible without the extension, use a symbolic link or a simple bash wrapper containing <code>exec \"$0.py\" \"$@\"</code>.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#3164-guidelines-derived-from-guidos-recommendations","title":"3.16.4 Guidelines derived from Guido's Recommendations","text":"Type Public Internal Packages <code>lower_with_under</code> Modules <code>lower_with_under</code> <code>_lower_with_under</code> Classes <code>CapWords</code> <code>_CapWords</code> Exceptions <code>CapWords</code> Functions <code>lower_with_under()</code> <code>_lower_with_under()</code> Global/Class Constants <code>CAPS_WITH_UNDER</code> <code>_CAPS_WITH_UNDER</code> Global/Class Variables <code>lower_with_under</code> <code>_lower_with_under</code> Instance Variables <code>lower_with_under</code> <code>_lower_with_under</code> (protected) Method Names <code>lower_with_under()</code> <code>_lower_with_under()</code> (protected) Function/Method Parameters <code>lower_with_under</code> Local Variables <code>lower_with_under</code>"},{"location":"coding/python/pyguide/#317-main","title":"3.17 Main","text":"<p>In Python, <code>pydoc</code> as well as unit tests require modules to be importable. If a file is meant to be used as an executable, its main functionality should be in a <code>main()</code> function, and your code should always check <code>if __name__ == '__main__'</code> before executing your main program, so that it is not executed when the module is imported.</p> <p>When using absl, use <code>app.run</code>:</p> <pre><code>from absl import app\n...\n\ndef main(argv):\n    # process non-flag arguments\n    ...\n\nif __name__ == '__main__':\n    app.run(main)\n</code></pre> <p>Otherwise, use:</p> <pre><code>def main():\n    ...\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>All code at the top level will be executed when the module is imported. Be careful not to call functions, create objects, or perform other operations that should not be executed when the file is being <code>pydoc</code>ed.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#318-function-length","title":"3.18 Function length","text":"<p>Prefer small and focused functions.</p> <p>We recognize that long functions are sometimes appropriate, so no hard limit is placed on function length. If a function exceeds about 40 lines, think about whether it can be broken up without harming the structure of the program.</p> <p>Even if your long function works perfectly now, someone modifying it in a few months may add new behavior. This could result in bugs that are hard to find. Keeping your functions short and simple makes it easier for other people to read and modify your code.</p> <p>You could find long and complicated functions when working with some code. Do not be intimidated by modifying existing code: if working with such a function proves to be difficult, you find that errors are hard to debug, or you want to use a piece of it in several different contexts, consider breaking up the function into smaller and more manageable pieces.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#319-type-annotations","title":"3.19 Type Annotations","text":""},{"location":"coding/python/pyguide/#3191-general-rules","title":"3.19.1 General Rules","text":"<ul> <li>Familiarize yourself with     PEP-484.</li> <li>In methods, only annotate <code>self</code>, or <code>cls</code> if it is necessary for proper     type information. e.g., <code>@classmethod def create(cls: Type[T]) -&gt; T: return     cls()</code></li> <li>If any other variable or a returned type should not be expressed, use <code>Any</code>.</li> <li>You are not required to annotate all the functions in a module.<ul> <li>At least annotate your public APIs.</li> <li>Use judgment to get to a good balance between safety and clarity on the     one hand, and flexibility on the other.</li> <li>Annotate code that is prone to type-related errors (previous bugs or     complexity).</li> <li>Annotate code that is hard to understand.</li> <li>Annotate code as it becomes stable from a types perspective. In many     cases, you can annotate all the functions in mature code without losing     too much flexibility.</li> </ul> </li> </ul>"},{"location":"coding/python/pyguide/#3192-line-breaking","title":"3.19.2 Line Breaking","text":"<p>Try to follow the existing indentation rules.</p> <p>After annotating, many function signatures will become \"one parameter per line\".</p> <pre><code>def my_method(self,\n              first_var: int,\n              second_var: Foo,\n              third_var: Optional[Bar]) -&gt; int:\n  ...\n</code></pre> <p>Always prefer breaking between variables, and not, for example, between variable names and type annotations. However, if everything fits on the same line, go for it.</p> <pre><code>def my_method(self, first_var: int) -&gt; int:\n  ...\n</code></pre> <p>If the combination of the function name, the last parameter, and the return type is too long, indent by 4 in a new line.</p> <pre><code>def my_method(\n    self, first_var: int) -&gt; Tuple[MyLongType1, MyLongType1]:\n  ...\n</code></pre> <p>When the return type does not fit on the same line as the last parameter, the preferred way is to indent the parameters by 4 on a new line and align the closing parenthesis with the <code>def</code>.</p> <pre><code>Yes:\ndef my_method(\n    self, other_arg: Optional[MyLongType]\n) -&gt; Dict[OtherLongType, MyLongType]:\n  ...\n</code></pre> <p><code>pylint</code> allows you to move the closing parenthesis to a new line and align with the opening one, but this is less readable.</p> <pre><code>No:\ndef my_method(self,\n              other_arg: Optional[MyLongType]\n             ) -&gt; Dict[OtherLongType, MyLongType]:\n  ...\n</code></pre> <p>As in the examples above, prefer not to break types. However, sometimes they are too long to be on a single line (try to keep sub-types unbroken).</p> <pre><code>def my_method(\n    self,\n    first_var: Tuple[List[MyLongType1],\n                     List[MyLongType2]],\n    second_var: List[Dict[\n        MyLongType3, MyLongType4]]) -&gt; None:\n  ...\n</code></pre> <p>If a single name and type is too long, consider using an alias for the type. The last resort is to break after the colon and indent by 4.</p> <pre><code>Yes:\ndef my_function(\n    long_variable_name:\n        long_module_name.LongTypeName,\n) -&gt; None:\n  ...\n</code></pre> <pre><code>No:\ndef my_function(\n    long_variable_name: long_module_name.\n        LongTypeName,\n) -&gt; None:\n  ...\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#3193-forward-declarations","title":"3.19.3 Forward Declarations","text":"<p>If you need to use a class name from the same module that is not yet defined -- for example, if you need the class inside the class declaration, or if you use a class that is defined below -- use a string for the class name.</p> <pre><code>class MyClass:\n\n  def __init__(self,\n               stack: List[\"MyClass\"]) -&gt; None:\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#3194-default-values","title":"3.19.4 Default Values","text":"<p>As per PEP-008, use spaces around the <code>=</code> only for arguments that have both a type annotation and a default value.</p> <pre><code>Yes:\ndef func(a: int = 0) -&gt; int:\n  ...\n</code></pre> <pre><code>No:\ndef func(a:int=0) -&gt; int:\n  ...\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#3195-nonetype","title":"3.19.5 NoneType","text":"<p>In the Python type system, <code>NoneType</code> is a \"first class\" type, and for typing purposes, <code>None</code> is an alias for <code>NoneType</code>. If an argument can be <code>None</code>, it has to be declared! You can use <code>Union</code>, but if there is only one other type, use <code>Optional</code>.</p> <p>Use explicit <code>Optional</code> instead of implicit <code>Optional</code>. Earlier versions of PEP 484 allowed <code>a: Text = None</code> to be interpreted as <code>a: Optional[Text] = None</code>, but that is no longer the preferred behavior.</p> <pre><code>Yes:\ndef func(a: Optional[Text], b: Optional[Text] = None) -&gt; Text:\n  ...\ndef multiple_nullable_union(a: Union[None, Text, int]) -&gt; Text\n  ...\n</code></pre> <pre><code>No:\ndef nullable_union(a: Union[None, Text]) -&gt; Text:\n  ...\ndef implicit_optional(a: Text = None) -&gt; Text:\n  ...\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#3196-type-aliases","title":"3.19.6 Type Aliases","text":"<p>You can declare aliases of complex types. The name of an alias should be CapWorded. If the alias is used only in this module, it should be _Private.</p> <p>For example, if the name of the module together with the name of the type is too long:</p> <pre><code>_ShortName = module_with_long_name.TypeWithLongName\nComplexMap = Mapping[Text, List[Tuple[int, int]]]\n</code></pre> <p>Other examples are complex nested types and multiple return variables from a function (as a tuple).</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#3197-ignoring-types","title":"3.19.7 Ignoring Types","text":"<p>You can disable type checking on a line with the special comment <code># type: ignore</code>.</p> <p><code>pytype</code> has a disable option for specific errors (similar to lint):</p> <pre><code># pytype: disable=attribute-error\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#3198-typing-variables","title":"3.19.8 Typing Variables","text":"<p>If an internal variable has a type that is hard or impossible to infer, you can specify its type in a couple ways.</p> Type Comments: Use a <code># type:</code> comment on the end of the line <pre><code>a = SomeUndecoratedFunction()  # type: Foo\n</code></pre> Annotated Assignments Use a colon and type between the variable name and value, as with function arguments. <pre><code>a: Foo = SomeUndecoratedFunction()\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#3199-tuples-vs-lists","title":"3.19.9 Tuples vs Lists","text":"<p>Typed lists can only contain objects of a single type. Typed tuples can either have a single repeated type or a set number of elements with different types. The latter is commonly used as the return type from a function.</p> <pre><code>a = [1, 2, 3]  # type: List[int]\nb = (1, 2, 3)  # type: Tuple[int, ...]\nc = (1, \"2\", 3.5)  # type: Tuple[int, Text, float]\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#31910-typevars","title":"3.19.10 TypeVars","text":"<p>The Python type system has generics. The factory function <code>TypeVar</code> is a common way to use them.</p> <p>Example:</p> <pre><code>from typing import List, TypeVar\nT = TypeVar(\"T\")\n...\ndef next(l: List[T]) -&gt; T:\n  return l.pop()\n</code></pre> <p>A TypeVar can be constrained:</p> <pre><code>AddableType = TypeVar(\"AddableType\", int, float, Text)\ndef add(a: AddableType, b: AddableType) -&gt; AddableType:\n  return a + b\n</code></pre> <p>A common predefined type variable in the <code>typing</code> module is <code>AnyStr</code>. Use it for multiple annotations that can be <code>bytes</code> or <code>unicode</code> and must all be the same type.</p> <pre><code>from typing import AnyStr\ndef check_length(x: AnyStr) -&gt; AnyStr:\n  if len(x) &lt;= 42:\n    return x\n  raise ValueError()\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#31911-string-types","title":"3.19.11 String types","text":"<p>The proper type for annotating strings depends on what versions of Python the code is intended for.</p> <p>For Python 3 only code, prefer to use <code>str</code>. <code>Text</code> is also acceptable. Be consistent in using one or the other.</p> <p>For Python 2 compatible code, use <code>Text</code>. In some rare cases, <code>str</code> may make sense; typically to aid compatibility when the return types aren't the same between the two Python versions. Avoid using <code>unicode</code>: it doesn't exist in Python 3.</p> <p>The reason this discrepancy exists is because <code>str</code> means different things depending on the Python version.</p> <pre><code>No:\ndef py2_code(x: str) -&gt; unicode:\n  ...\n</code></pre> <p>For code that deals with binary data, use <code>bytes</code>.</p> <pre><code>def deals_with_binary_data(x: bytes) -&gt; bytes:\n  ...\n</code></pre> <p>For Python 2 compatible code that processes text data (<code>str</code> or <code>unicode</code> in Python 2, <code>str</code> in Python 3), use <code>Text</code>. For Python 3 only code that process text data, prefer <code>str</code>.</p> <pre><code>from typing import Text\n...\ndef py2_compatible(x: Text) -&gt; Text:\n  ...\ndef py3_only(x: str) -&gt; str:\n  ...\n</code></pre> <p>If the type can be either bytes or text, use <code>Union</code>, with the appropriate text type.</p> <pre><code>from typing import Text, Union\n...\ndef py2_compatible(x: Union[bytes, Text]) -&gt; Union[bytes, Text]:\n  ...\ndef py3_only(x: Union[bytes, str]) -&gt; Union[bytes, str]:\n  ...\n</code></pre> <p>If all the string types of a function are always the same, for example if the return type is the same as the argument type in the code above, use AnyStr.</p> <p>Writing it like this will simplify the process of porting the code to Python 3.</p> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#31912-imports-for-typing","title":"3.19.12 Imports For Typing","text":"<p>For classes from the <code>typing</code> module, always import the class itself. You are explicitly allowed to import multiple specific classes on one line from the <code>typing</code> module. Ex:</p> <pre><code>from typing import Any, Dict, Optional\n</code></pre> <p>Given that this way of importing from <code>typing</code> adds items to the local namespace, any names in <code>typing</code> should be treated similarly to keywords, and not be defined in your Python code, typed or not. If there is a collision between a type and an existing name in a module, import it using <code>import x as y</code>.</p> <pre><code>from typing import Any as AnyType\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#31913-conditional-imports","title":"3.19.13 Conditional Imports","text":"<p>Use conditional imports only in exceptional cases where the additional imports needed for type checking must be avoided at runtime. This pattern is discouraged; alternatives such as refactoring the code to allow top level imports should be preferred.</p> <p>Imports that are needed only for type annotations can be placed within an <code>if TYPE_CHECKING:</code> block.</p> <ul> <li>Conditionally imported types need to be referenced as strings, to be forward     compatible with Python 3.6 where the annotation expressions are actually     evaluated.</li> <li>Only entities that are used solely for typing should be defined here; this     includes aliases. Otherwise it will be a runtime error, as the module will     not be imported at runtime.</li> <li>The block should be right after all the normal imports.</li> <li>There should be no empty lines in the typing imports list.</li> <li>Sort this list as if it were a regular imports list. <pre><code>import typing\nif typing.TYPE_CHECKING:\n  import sketch\ndef f(x: \"sketch.Sketch\"): ...\n</code></pre></li> </ul> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#31914-circular-dependencies","title":"3.19.14 Circular Dependencies","text":"<p>Circular dependencies that are caused by typing are code smells. Such code is a good candidate for refactoring. Although technically it is possible to keep circular dependencies, various build systems will not let you do so because each module has to depend on the other.</p> <p>Replace modules that create circular dependency imports with <code>Any</code>. Set an alias with a meaningful name, and use the real type name from this module (any attribute of Any is Any). Alias definitions should be separated from the last import by one line.</p> <pre><code>from typing import Any\n\nsome_mod = Any  # some_mod.py imports this module.\n...\n\ndef my_method(self, var: \"some_mod.SomeType\") -&gt; None:\n  ...\n</code></pre> <p> </p> <p></p>"},{"location":"coding/python/pyguide/#31915-generics","title":"3.19.15 Generics","text":"<p>When annotating, prefer to specify type parameters for generic types; otherwise, the generics' parameters will be assumed to be <code>Any</code>.</p> <pre><code>def get_names(employee_ids: List[int]) -&gt; Dict[int, Any]:\n  ...\n</code></pre> <pre><code># These are both interpreted as get_names(employee_ids: List[Any]) -&gt; Dict[Any, Any]\ndef get_names(employee_ids: list) -&gt; Dict:\n  ...\n\ndef get_names(employee_ids: List) -&gt; Dict:\n  ...\n</code></pre> <p>If the best type parameter for a generic is <code>Any</code>, make it explicit, but remember that in many cases <code>TypeVar</code> might be more appropriate:</p> <pre><code>def get_names(employee_ids: List[Any]) -&gt; Dict[Any, Text]:\n\"\"\"Returns a mapping from employee ID to employee name for given IDs.\"\"\"\n</code></pre> <pre><code>T = TypeVar('T')\ndef get_names(employee_ids: List[T]) -&gt; Dict[T, Text]:\n\"\"\"Returns a mapping from employee ID to employee name for given IDs.\"\"\"\n</code></pre> <p></p> <p></p>"},{"location":"coding/python/pyguide/#4-parting-words","title":"4 Parting Words","text":"<p>BE CONSISTENT.</p> <p>If you're editing code, take a few minutes to look at the code around you and determine its style. If they use spaces around all their arithmetic operators, you should too. If their comments have little boxes of hash marks around them, make your comments have little boxes of hash marks around them too.</p> <p>The point of having style guidelines is to have a common vocabulary of coding so people can concentrate on what you're saying rather than on how you're saying it. We present global style rules here so people know the vocabulary, but local style is also important. If code you add to a file looks drastically different from the existing code around it, it throws readers out of their rhythm when they go to read it. Avoid this.</p>"},{"location":"coding/python/sequence/","title":"Python\u4e2d\u7684\u5e8f\u5217\u7c7b\u578b","text":"<p>\u5e8f\u5217\u6307\u53ef\u4ee5\u5b58\u50a8\u591a\u4e2a\u6570\u636e\u7684\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u6309\u7167\u5b58\u50a8\u7684\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u5206\u4e3a\uff1a</p> <ul> <li>\u5bb9\u5668\u53ef\u4ee5\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\uff0c\u8fd9\u90e8\u5206\u7c7b\u578b\u6709<code>list</code>\u3001<code>tuple</code>\u3001<code>collections.deque</code></li> <li>\u6241\u5e73\u5e8f\u5217\u53ea\u80fd\u5b58\u50a8\u67d0\u79cd\u7c7b\u578b\u7684\u6570\u636e\uff0c\u8fd9\u90e8\u5206\u7c7b\u578b\u6709<code>str</code>\u3001<code>bytes</code>\u3001<code>bytearray</code>\u3001<code>memoryview</code>\u3001<code>array.array</code></li> </ul> <p>\u6309\u7167\u5e8f\u5217\u662f\u5426\u53ef\u4ee5\u4fee\u6539\u53ef\u4ee5\u5206\u4e3a</p> <ul> <li>\u53ef\u53d8\u5e8f\u5217\uff1a<code>list</code>\u3001<code>bytearray</code>\u3001<code>array.array</code>\u3001<code>collections.deque</code>\u3001<code>memoryview</code></li> <li>\u4e0d\u53ef\u53d8\u5e8f\u5217\uff1a<code>tuple</code>\u3001<code>str</code>\u3001<code>bytes</code></li> </ul>"},{"location":"coding/python/sequence/#_1","title":"\u5217\u8868","text":"<p>\u5217\u8868\u662f\u53ef\u4ee5\u4fee\u6539\u7684\u5e8f\u5217\uff0c\u53ef\u4ee5\u5b58\u50a8\u591a\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u7ed3\u6784\u3002\u5982\u4e0b\u7740\u91cd\u8ba8\u8bba\u5217\u8868\u63a8\u5bfc\u7684\u4e66\u5199\u5f62\u5f0f\u3002</p> <p>\u5217\u8868\u63a8\u5bfc\u53ef\u7528\u4e8e\u4ece\u4e00\u4e2a\u5217\u8868\u751f\u6210\u65b0\u7684\u5217\u8868\uff0c\u76f8\u6bd4\u4e8efor\u5faa\u73af\u52a0<code>append()</code>\u65b9\u6cd5\uff0c\u5217\u8868\u63a8\u5bfc\u7684\u5199\u6cd5\u6709\u66f4\u597d\u7684\u53ef\u8bfb\u6027\u3002</p> <p>\u5217\u8868\u63a8\u5bfc\u793a\u4f8b\uff1a</p> <pre><code>a = [1, 2, 3]\nb = [_ ** 2 for _ in a]\n</code></pre> <p>Python 3.x\u4e2d\u7684\u5217\u8868\u63a8\u5bfc\u4e0d\u4f1a\u4ea7\u751f\u53d8\u91cf\u6cc4\u9732\u7684\u95ee\u9898\uff0c\u5982\u4e0b\uff1a</p> <pre><code>x = 'ABC'\ny = [x for x in x]\nprint(x)\n</code></pre> <p>\u8f93\u51fa\u4e3a<code>ABC</code>\uff0c\u8bf4\u660e\u5217\u8868\u63a8\u5bfc\u53d8\u91cf<code>x</code>\u7684\u503c\u6ca1\u6709\u4f20\u9012\u5230\u5916\u90e8\u3002</p> <p>\u5217\u8868\u63a8\u5bfc\u7b49\u4ef7\u4e8e<code>map</code>\u4e0e<code>filter</code>\u7684\u7ed3\u5408\u3002<code>map</code>\u51fd\u6570\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u51fd\u6570\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u3002<code>map</code>\u51fd\u6570\u8fed\u4ee3\u5730\u5c06\u51fd\u6570\u4f5c\u7528\u4e8e\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u4ece\u800c\u5f97\u5230\u7ed3\u679c\u3002</p> <p>\u5217\u8868\u63a8\u5bfc\u53ef\u4ee5\u7528\u4e8e\u8ba1\u7b97\u5217\u8868\u7684\u7b1b\u5361\u5c14\u79ef\uff0c\u5982\u4e0b\u5217\u4ee3\u7801\uff1a</p> <pre><code>[(x, y) for x in range(10) for y in range(11, 20)]\n</code></pre> <p>\u5faa\u73af\u7684\u987a\u5e8f\u4e0e<code>for</code>\u5faa\u73af\u4e00\u81f4\uff0c\u5148\u6267\u884c\u5916\u5c42\u7684\u5faa\u73af\uff0c\u518d\u6267\u884c\u5185\u5c42\u7684\u5faa\u73af\u3002</p> <p>\u5c06\u5217\u8868\u63a8\u5bfc\u7684\u65b9\u62ec\u53f7\u5706\u62ec\u53f7\uff0c\u5373\u4e3a\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u3002\u5982\u679c\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u662f\u51fd\u6570\u8c03\u7528\u7684\u552f\u4e00\u53c2\u6570\uff0c\u5706\u62ec\u53f7\u53ef\u4ee5\u7701\u7565\u3002</p>"},{"location":"coding/python/sequence/#_2","title":"\u5143\u7ec4","text":"<p>\u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u7684\u5e8f\u5217\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u5b57\u6bb5\u7684\u96c6\u5408\uff0c\u5bf9\u5e94\u6570\u636e\u8868\u4e2d\u7684\u67d0\u4e00\u884c\u3002\u5982\u4e0b\u7740\u91cd\u8ba8\u8bba\u5143\u7ec4\u89e3\u5305\u7684\u5185\u5bb9\u3002</p> <p>\u5e73\u884c\u8d4b\u503c\u53ef\u4ee5\u5c06\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u7684\u5143\u7d20\u590d\u5236\u5230\u4e00\u7ec4\u53d8\u91cf\u4e2d\u3002\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e0d\u8981\u6c42\u662f\u5143\u7ec4\u3002\u5982\uff1a</p> <pre><code>a, b = (1, 2)\nc, d = [3, 4]\ne, f = {1: 2, 3: 4} # \u6309\u7167key\u7684\u53d6\u503c\u8fdb\u884c\u5206\u914d\n</code></pre> <p><code>*</code>\u8fd0\u7b97\u7b26\u53ef\u4ee5\u7528\u4e8e\u89e3\u5305\u5143\u7ec4\u4e2d\u7684\u503c\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\uff0c\u5982\uff1a</p> <pre><code>print(*(1, 2))\n</code></pre> <p><code>*</code>\u8fd0\u7b97\u7b26\u53ef\u4ee5\u7528\u4e8e\u4ece\u51fd\u6570\u4e2d\u83b7\u53d6\u53ef\u53d8\u6570\u91cf\u7684\u53c2\u6570\uff0c\u5e38\u89c1\u7528\u6cd5\u4e3a<code>*args</code>\u4e0e<code>**kwargs</code>\u3002</p> <p><code>*</code>\u8fd0\u7b97\u7b26\u8fd8\u53ef\u4ee5\u7528\u4e8e\u5e73\u884c\u8d4b\u503c\u4e2d\uff0c\u4f46\u5e73\u884c\u8d4b\u503c\u4e2d\u7684\u4e00\u7ec4\u53d8\u91cf\u53ea\u80fd\u51fa\u73b0\u4e00\u4e2a<code>*</code>\u8fd0\u7b97\u7b26\u3002\u5e26<code>*</code>\u7684\u53d8\u91cf\u89e3\u5305\u540e\u6210\u4e3a\u5217\u8868\u3002</p> <pre><code>a, b, c, *d = range(5) # d = [3, 4]\na, b, *c, d = range(5) # c = [2, 3]\n</code></pre> <p>\u5f53\u5f85\u89e3\u5305\u7684\u5143\u7ec4\u672c\u8eab\u662f\u5143\u7ec4\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u62ec\u53f7\u89e3\u5305\uff0c\u5982\uff1a</p> <pre><code>a, (b, c), d = (1, (2, 3), 4)\n</code></pre> <p>\u5143\u7ec4\u4e0d\u652f\u6301\u5217\u8868\u7684<code>append</code>\u3001<code>clear</code>\u3001<code>copy</code>\u3001<code>extend</code>\u3001<code>insert</code>\u3001<code>pop</code>\u3001<code>remove</code>\u3001<code>reverse</code>\u7b49\u65b9\u6cd5\u3002</p>"},{"location":"coding/python/sequence/#_3","title":"\u5177\u540d\u5143\u7ec4","text":"<p><code>collections.namedtuple</code>\u63d0\u4f9b\u4e86\u7528\u4e8e\u521b\u5efa\u5177\u540d\u5143\u7ec4\u7c7b\u578b\u7684\u65b9\u6cd5\uff0c\u5176\u53c2\u6570\u5217\u8868\u5982\u4e0b\uff1a</p> <pre><code>collections.namedtuple(typename, field_names, *, rename=False, defaults=None, module=None)\n</code></pre> <ul> <li><code>typename</code>\u6307\u7c7b\u578b\u7684\u540d\u79f0\uff0c\u8be5\u53d8\u91cf\u88ab\u5199\u5165<code>__repr__</code>\u65b9\u6cd5\u4e2d\u3002\u8be5\u53c2\u6570\u7684\u53d6\u503c\u4e0e\u4ee3\u7801\u4e2d\u7c7b\u578b\u88ab\u5b9e\u9645\u5206\u914d\u7684\u540d\u79f0\u65e0\u5173\u3002</li> <li><code>field_names</code>\u662f\u5143\u7ec4\u4e2d\u5b57\u6bb5\u7684\u540d\u79f0</li> <li>\u5f53<code>rename</code>\u4e3a<code>True</code>\u91cd\u590d\u6216\u4e0e\u5173\u952e\u5b57\u51b2\u7a81\u7684\u5b57\u6bb5\u540d\u79f0\u4f1a\u88ab\u81ea\u52a8\u5904\u7406\uff0c\u5426\u5219\u4f1a\u629b\u51fa<code>ValueError</code></li> <li><code>defaults</code>\u4e3a\u5b57\u6bb5\u7684\u9ed8\u8ba4\u503c\uff0c\u8be5\u5217\u8868\u4e0e\u5b57\u6bb5\u540d\u79f0\u5217\u8868\u6309\u53f3\u5bf9\u9f50\u8fdb\u884c\u5339\u914d\u3002</li> <li>\u82e5\u63d0\u4f9b\u4e86<code>module</code>\u53c2\u6570\uff0c\u8be5\u503c\u4f1a\u88ab\u5199\u5165<code>__module__</code>\u5c5e\u6027\u4e2d\u3002</li> </ul> <p><code>namedtuple</code>\u8fd4\u56de\u53ef\u4ee5\u7528\u4e8e\u521b\u5efa\u5bf9\u8c61\u7684\u7c7b\u578b\u3002</p> <pre><code>&gt;&gt;&gt; from collections import namedtuple\n&gt;&gt;&gt; Point = namedtuple('Point', [\"x\", \"y\"], defaults=[1, 2]) \n&gt;&gt;&gt; Point()\nPoint(x=1, y=2)\n&gt;&gt;&gt; Point(2)\nPoint(x=2, y=2)\n&gt;&gt;&gt; Point(2, 3)\nPoint(x=2, y=3)\n&gt;&gt;&gt;\n</code></pre>"},{"location":"coding/python/sequence/#_4","title":"\u5207\u7247","text":"<p>\u5207\u7247\u662f\u5728\u5e8f\u5217\u4e0a\u6267\u884c\u7684\u64cd\u4f5c\uff0c\u5207\u7247\u64cd\u4f5c\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u5e8f\u5217\u3002\u5207\u7247\u4ee5<code>s[a:b:c]</code>\u7684\u5f62\u5f0f\u6307\u5b9a\uff0c<code>a</code>\u4e3a\u8d77\u59cb\u4e0b\u6807\u3001<code>b</code>\u4e3a\u7ec8\u6b62\u4e0b\u6807\uff08\u4e0d\u5305\u542b\uff09\u3001<code>c</code>\u4e3a\u6b65\u957f\uff08\u53ef\u4ee5\u4e3a\u8d1f\uff09\u3002</p> <ul> <li><code>s[::-1]</code>\u7b49\u4ef7\u4e8e\u53cd\u8f6c<code>s</code>\u4e2d\u7684\u5143\u7d20</li> <li>\u5207\u7247\u5e76\u6ca1\u6709\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\uff0c\u5bf9\u5207\u7247\u7684\u4fee\u6539\u4f1a\u53cd\u6620\u5230\u539f\u5e8f\u5217\u4e2d\u3002\u4f46\u5bf9\u5207\u7247\u7684\u4fee\u6539\u5fc5\u987b\u6ee1\u8db3\u5143\u7d20\u6570\u91cf\u76f8\u540c\u7684\u6761\u4ef6\uff0c\u5426\u5219\u4f1a\u629b\u51fa<code>ValueError</code>\u3002</li> </ul> <p>\u53e6\u4e00\u79cd\u5207\u7247\u7684\u65b9\u5f0f\u4e3a<code>s[slice(a, b, c)]</code>\uff0c\u7701\u7565\u7684\u53c2\u6570\u4f7f\u7528<code>None</code>\u8868\u793a\u3002\u56e0\u6b64<code>s[::-1]</code>\u7b49\u4ef7\u4e8e<code>s[slice(None, None, -1)]</code>\u3002\u4e8b\u5b9e\u4e0a\uff0cPython\u5728\u5904\u7406\u5f62\u5982<code>s[a:b:c]</code>\u7684\u5207\u7247\u65f6\u4f1a\u8c03\u7528<code>s.__getitem__(slice(start, stop, step))</code></p> <p>\u5728NumPy\u6570\u7ec4\u7684\u5207\u7247\u4e2d\u6709\u65f6\u4f1a\u51fa\u73b0\u7701\u7565\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528<code>...</code>\u3002<code>...</code>\u7b26\u53f7\u4f1a\u88abPython\u89e3\u91ca\u4e3a<code>EllipsisType</code>\u7c7b\u578b\u7684\u5e38\u91cf\u3002</p>"},{"location":"coding/python/sequence/#_5","title":"\u5e8f\u5217\u8fd0\u7b97","text":"<p>\u5e8f\u5217\u901a\u5e38\u652f\u6301<code>+</code>\u8fd0\u7b97\u4e0e<code>*</code>\u8fd0\u7b97\u3002\u4e0e\u5207\u7247\u4e0d\u540c\uff0c\u8fd9\u4e24\u4e2a\u8fd0\u7b97\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5e8f\u5217\u3002</p> <pre><code>&gt;&gt;&gt; a = [1]\n&gt;&gt;&gt; b = [2] \n&gt;&gt;&gt; c = a + b\n&gt;&gt;&gt; c is a\nFalse\n&gt;&gt;&gt;\n</code></pre> <p><code>+</code>\u8fd0\u7b97\u5c40\u9650\u4e8e\u76f8\u540c\u7c7b\u578b\uff0c\u5bf9\u4e8e<code>list</code>\u7b49\u53ef\u53d8\u7c7b\u578b\uff0c<code>a + b</code>\u7b49\u4ef7\u4e8e<code>a.extend(b)</code>\u3002\u4f46<code>a.extend(b)</code>\u65b9\u6cd5\u5bf9<code>b</code>\u7684\u7c7b\u578b\u65e0\u8981\u6c42\uff0c\u4ec5\u9700\u8981<code>b</code>\u53ef\u8fed\u4ee3\u3002</p> <p><code>*</code>\u8fd0\u7b97\u7b26\u7684\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570<code>y</code>\u5fc5\u987b\u4e3a\u6574\u6570\uff0c\u8868\u793a\u5c06\u5e8f\u5217\u91cd\u590d<code>y</code>\u6b21\u3002\u82e5<code>y&lt;=0</code>\uff0c\u5219\u8fd4\u56de\u7a7a\u5217\u8868</p> <p>\u6ce8\u610f\uff0c<code>*</code>\u8fd0\u7b97\u7b26\u5f97\u5230\u7684\u5217\u8868\u4e2d\uff0c\u5217\u8868\u591a\u6b21\u91cd\u590d\u7684\u90e8\u5206\u4ee5\u5f15\u7528\u7684\u5f62\u5f0f\u5b58\u50a8\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>&gt;&gt;&gt; b = [[]] * 3\n&gt;&gt;&gt; b[0].append(1)\n&gt;&gt;&gt; b\n[[1], [1], [1]]\n&gt;&gt;&gt;\n</code></pre> <p><code>append</code>\u5904\u7406\u53ef\u53d8\u5bf9\u8c61\u7684\u65b9\u5f0f\u540c\u6837\u662f\u590d\u5236\u5f15\u7528\u800c\u4e0d\u662f\u590d\u5236\u503c\uff0c\u56e0\u6b64\u4e5f\u4f1a\u9020\u6210\u76f8\u540c\u7684\u95ee\u9898\uff1a</p> <pre><code>&gt;&gt;&gt; a = []\n&gt;&gt;&gt; b = []\n&gt;&gt;&gt; for i in range(3):\n...     a.append(b)\n... \n&gt;&gt;&gt; a[0].append(1)\n&gt;&gt;&gt; a\n[[1], [1], [1]]\n&gt;&gt;&gt;\n</code></pre> <p>\u56e0\u6b64\u8981\u907f\u514d\u4f7f\u7528<code>*</code>\u8fd0\u7b97\u7b26\u5904\u7406\u5305\u542b\u53ef\u53d8\u5bf9\u8c61\u7684\u5217\u8868\u3002\u5efa\u8bae\u4f7f\u7528\u5217\u8868\u63a8\u5bfc\u521b\u5efa\u5d4c\u5957\u5217\u8868\u3002</p> <p>\u4e0e\u5e8f\u5217\u7684\u8fd0\u7b97\u4e0d\u540c\uff0c\uff08\u53ef\u53d8\uff09\u5e8f\u5217\u7684\u589e\u91cf\u8fd0\u7b97<code>+=</code>\u3001<code>*=</code>\u662f\u5728\u539f\u5e8f\u5217\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u7684\uff0c\u4e0d\u4f1a\u521b\u5efa\u65b0\u7684\u5e8f\u5217\u5bf9\u8c61\u3002\u4e0d\u53ef\u53d8\u5e8f\u5217\u4e0d\u652f\u6301\u589e\u91cf\u8fd0\u7b97\u3002</p> <p>\u8003\u8651\u5982\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>&gt;&gt;&gt; a = [1, 2, 3]\n&gt;&gt;&gt; a[2] += 5\n&gt;&gt;&gt; a\n[1, 2, 8]\n&gt;&gt;&gt;\n</code></pre> <p>\u53ef\u53d8\u5e8f\u5217\u901a\u8fc7<code>__setitem__</code>\u65b9\u6cd5\u5b9e\u73b0\u4e86\u5207\u7247\u7684\u4fee\u6539\u3002\u82e5<code>a</code>\u4e3a\u4e0d\u53ef\u53d8\u5e8f\u5217\uff0c\u6267\u884c\u7ed3\u679c\u5e94\u4e3a\u4f55\uff1f</p> <p>\u5bf9\u4e8e\u4e0d\u53ef\u53d8\u5e8f\u5217\uff0c\u5176\u672c\u8eab\u4e0d\u652f\u6301\u5bf9\u5143\u7d20\u8fdb\u884c\u7684\u4fee\u6539\uff0c\u56e0\u6b64\u5e8f\u5217\u672c\u8eab\u7684\u503c\u4e0d\u4f1a\u6539\u53d8\u3002</p> <pre><code>&gt;&gt;&gt; a = (1, 2, 3)\n&gt;&gt;&gt; a[2] += 5\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: 'tuple' object does not support item assignment\n&gt;&gt;&gt; a\n(1, 2, 3)\n&gt;&gt;&gt;\n</code></pre> <p>\u4f46\u5982\u679c\u8981\u4fee\u6539\u7684\u5143\u7d20\u672c\u8eab\u662f\u5f15\u7528\uff0c\u5982\u4e00\u4e2a\u53ef\u53d8\u5e8f\u5217\uff0c\u6b64\u65f6\u5bf9\u53ef\u53d8\u5e8f\u5217\u7684\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u5230\u5f15\u7528\u672c\u8eab\uff0c\u56e0\u6b64<code>+=</code>\u8fd0\u7b97\u4ecd\u4f1a\u6b63\u5e38\u4f5c\u7528\u3002\u589e\u91cf\u64cd\u4f5c\u4e0d\u662f\u539f\u5b50\u64cd\u4f5c\u3002</p> <pre><code>&gt;&gt;&gt; t = (1, 2, [30, 40])\n&gt;&gt;&gt; t[2] += [50, 60]\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: 'tuple' object does not support item assignment\n&gt;&gt;&gt; t\n(1, 2, [30, 40, 50, 60])\n&gt;&gt;&gt;\n</code></pre> <p>\u5982\u679c\u4f7f\u7528<code>append</code>\u6216<code>extend</code>\u65b9\u6cd5\uff0c\u5219\u53ef\u4ee5\u907f\u514d\u5f02\u5e38\u7684\u4ea7\u751f\u3002\u53ef\u53d8\u5e8f\u5217\u88ab \u6b63\u5e38\u4fee\u6539 \u3002\u4e3a\u4fdd\u8bc1\u6570\u636e\u4e0d\u88ab\u9519\u8bef\u5730\u4fee\u6539\uff0c\u5e94\u907f\u514d\u5728\u4e0d\u53ef\u53d8\u5e8f\u5217\u4e2d\u5bb9\u7eb3\u53ef\u53d8\u5bf9\u8c61\u3002</p>"},{"location":"coding/python/sequence/#_6","title":"\u6392\u5e8f","text":"<p><code>list.sort</code>\u65b9\u6cd5\u4f5c\u7528\u4e0e\u5217\u8868\u672c\u8eab\u800c\u4e0d\u8fd4\u56de\uff08\u8fd4\u56de\u503c\u4e3a<code>None</code>\uff09\u3002\u8981\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u5df2\u6392\u5e8f\u5217\u8868\u800c\u4e0d\u5f71\u54cd\u539f\u5217\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528<code>sorted()</code>\u5185\u7f6e\u51fd\u6570\u3002</p> <pre><code>&gt;&gt;&gt; a = [6, 3, 2, 1]\n&gt;&gt;&gt; b = sorted(a)\n&gt;&gt;&gt; b is a\nFalse\n&gt;&gt;&gt;\n</code></pre> <p><code>sorted</code>\u4e0e<code>list.sort</code>\u652f\u6301\u6309\u7167\u5176\u4ed6\u89c4\u5219\u5bf9\u5e8f\u5217\u8fdb\u884c\u6392\u5e8f\uff0c\u5373<code>key</code>\u53c2\u6570\u3002<code>key</code>\u53c2\u6570\u4e3a\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\u7684\u51fd\u6570\uff0c\u5982<code>key=len</code>\u5373\u4e3a\u5bf9\u5b57\u7b26\u4e32\u957f\u5ea6\u5347\u5e8f\u6392\u5e8f\uff0c<code>key=lower</code>\u5373\u4e3a\u5ffd\u7565\u5b57\u7b26\u4e32\u5927\u5c0f\u5199\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002</p> <p>Python\u7684<code>bisect</code>\u6a21\u5757\u63d0\u4f9b\u4e86\u5bf9\u4e8c\u5206\u67e5\u627e\u7684\u652f\u6301\u3002<code>bisect.bisect</code>\u4e3a\u4e8c\u5206\u67e5\u627e\u51fd\u6570\uff0c\u8fd4\u56de\u5728\u76ee\u6807\u6570\u7ec4\u4e2d\u5927\u4e8e\u5f85\u67e5\u5143\u7d20\u7684\u7b2c\u4e00\u4e2a\u503c\u7684\u4f4d\u7f6e\u3002<code>bisect.insort</code>\u4e3a\u63d2\u5165\u51fd\u6570\uff0c\u5728<code>bisect</code>\u51fd\u6570\u67e5\u8be2\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20\u3002</p> <p><code>bisect</code>\u4e0e<code>insort</code>\u51fd\u6570\u6709\u53d8\u79cd<code>bisect_left</code>\u4e0e<code>insort_left</code>\u3002<code>bisect_left</code>\u8fd4\u56de\u5728\u76ee\u6807\u6570\u7ec4\u4e2d\u4e0d\u5927\u4e8e\u5f85\u67e5\u5143\u7d20\u7684\u6700\u540e\u4e00\u4e2a\u503c\u7684\u4f4d\u7f6e\u3002</p>"},{"location":"coding/python/sequence/#_7","title":"\u5176\u4ed6\u5e8f\u5217\u7c7b\u578b","text":""},{"location":"coding/python/sequence/#_8","title":"\u6570\u7ec4","text":"<p><code>array</code>\u6a21\u5757\u63d0\u4f9b\u4e86\u6570\u7ec4\u7ed3\u6784\u7684\u652f\u6301\u3002\u6570\u7ec4\u662f\u53ea\u80fd\u5b58\u50a8\u4e00\u79cd\u7c7b\u578b\u5143\u7d20\u7684\u53ef\u53d8\u5e8f\u5217\uff0c\u652f\u6301<code>list</code>\u7684\u591a\u6570\u65b9\u6cd5\u3002\u540c\u65f6\u6570\u7ec4\u63d0\u4f9b\u4e86<code>fromfile, tofile</code>\u4e0e<code>frombytes, tobytes</code>\uff0c\u4ece\u800c\u652f\u6301\u76f4\u63a5\u8bfb\u5199\u6587\u4ef6\u6216\u6bd4\u7279\u6d41\u3002</p> <p>\u5728\u521b\u5efa\u6570\u7ec4\u65f6\u9700\u8981\u6307\u5b9a\u7c7b\u578b\u7801\uff0c\u5373\u6570\u7ec4\u4e2d\u5b58\u50a8\u7684\u6570\u636e\u7c7b\u578b\u3002\u6bcf\u4e00\u4e2a\u7c7b\u578b\u7801\u5bf9\u5e94\u7684\u7c7b\u578b\u53ea\u5360\u7528\u6709\u9650\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u5728\u5b58\u50a8\u5927\u91cf\u6570\u636e\u65f6\u4f18\u4e8e\u5217\u8868\u7b49\u5176\u4ed6\u53ef\u53d8\u5e8f\u5217\u3002</p> \u7c7b\u578b\u7801 C \u7c7b\u578b Python \u7c7b\u578b \u5b57\u5bbd <code>'b'</code> <code>signed char</code> <code>int</code> 1 <code>'B'</code> <code>unsigned char</code> <code>int</code> 1 <code>'u'</code> <code>wchar_t</code> Unicode character 2 <code>'h'</code> <code>signed short</code> <code>int</code> 2 <code>'H'</code> <code>unsigned short</code> <code>int</code> 2 <code>'i'</code> <code>signed int</code> <code>int</code> 2 <code>'I'</code> <code>unsigned int</code> <code>int</code> 2 <code>'l'</code> <code>signed long</code> <code>int</code> 4 <code>'L'</code> <code>unsigned long</code> <code>int</code> 4 <code>'q'</code> <code>signed long long</code> <code>int</code> 8 <code>'Q'</code> <code>unsigned long long</code> <code>int</code> 8 <code>'f'</code> <code>float</code> <code>float</code> 4 <code>'d'</code> <code>double</code> <code>float</code> 8 <p>\u6570\u7ec4\u4e0d\u652f\u6301\u5217\u8868\u7684\u5982\u4e0b\u65b9\u6cd5\uff1a</p> <ul> <li><code>clear</code></li> <li><code>copy</code></li> <li><code>sort</code></li> </ul> <p>\u4f46\u6570\u7ec4\u652f\u6301\u4ece\u5217\u8868\u6dfb\u52a0\u5bf9\u8c61\uff0c\u5373<code>fromlist</code>\u65b9\u6cd5\u3002\u5f53\u5217\u8868\u4e2d\u4e00\u4e2a\u5143\u7d20\u5728\u6dfb\u52a0\u8fc7\u7a0b\u4e2d\u51fa\u9519\uff0c\u5219\u6240\u6709\u7684\u6dfb\u52a0\u90fd\u4f1a\u88ab\u56de\u6eda\u3002</p> <pre><code>&gt;&gt;&gt; import array\n&gt;&gt;&gt; a = array.array('f')\n&gt;&gt;&gt; b = [1.0, 2.0, 'a']\n&gt;&gt;&gt; a\narray('f')\n&gt;&gt;&gt; a.fromlist(b)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: must be real number, not str\n&gt;&gt;&gt; a\narray('f')\n&gt;&gt;&gt;\n</code></pre> <p>\u6570\u7ec4\u662fbytes-like object\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u4e8e\u5185\u5b58\u89c6\u56fe\u4e2d\u3002</p>"},{"location":"coding/python/sequence/#_9","title":"\u5185\u5b58\u89c6\u56fe","text":"<p><code>memoryview</code>\u5141\u8bb8\u4f7f\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u8bfb\u5199\u540c\u4e00\u5757\u5185\u5b58\u7684\u6570\u636e\u3002</p> <p>\u5982\u4e0b\u521b\u5efa\u4e00\u4e2a\u6620\u5c04\u5230\u5b57\u8282\u5e8f\u5217\u7684<code>memoryview</code>\uff0c\u5728\u4e0d\u6267\u884c\u64cd\u4f5c\u65f6\uff0c<code>memory</code>\u7684\u6570\u636e\u5185\u5bb9\u4e0e\u539f\u5e8f\u5217\u7684\u6570\u636e\u5185\u5bb9\u76f8\u540c\u3002</p> <pre><code>&gt;&gt;&gt; a = [1, 2, 3, 4]\n&gt;&gt;&gt; b = memoryview(array.array('i', a))\n&gt;&gt;&gt; b[0]\n1\n&gt;&gt;&gt;\n</code></pre> <p>\u4f7f\u7528<code>memoryview.cast</code>\u65b9\u6cd5\u53ef\u4ee5\u5c06<code>memoryview</code>\u6620\u5c04\u7684\u5185\u5b58\u533a\u57df\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u8fdb\u884c\u89e3\u91ca\u3002</p> <pre><code>&gt;&gt;&gt; c = b.cast('B')\n&gt;&gt;&gt; list(c)\n[1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0]\n&gt;&gt;&gt;\n</code></pre> <p><code>memoryview</code>\u7684\u53ef\u53d8\u6027\u53d6\u51b3\u4e8e\u5176\u6240\u6620\u5c04\u5185\u5b58\u533a\u57df\u7684\u6027\u8d28\uff0c\u82e5\u4f7f\u7528\u4e0d\u53ef\u53d8\u5e8f\u5217\u521b\u5efa<code>memoryview</code>\uff0c\u5219<code>memoryview</code>\u4e3a\u4e0d\u53ef\u53d8\u5e8f\u5217\u3002</p> <pre><code>&gt;&gt;&gt; d = memoryview(b\"abc\") \n&gt;&gt;&gt; d[0] = \"d\"\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: cannot modify read-only memory\n&gt;&gt;&gt;\n</code></pre> <p>\u4f5c\u4e3a\u53ef\u53d8\u5e8f\u5217\u7684<code>memoryview</code>\u53ef\u4ee5\u88ab\u4fee\u6539\uff0c\u518d\u8f6c\u6362\u4e3a\u539f\u6765\u7684\u89e3\u91ca\u65b9\u5f0f\uff0c\u5373\u53ef\u5b9e\u73b0\u5bf9\u5e8f\u5217\u4e2d\u67d0\u4e2a\u7279\u5b9a\u5b57\u8282\u7684\u4fee\u6539\u3002</p> <pre><code>&gt;&gt;&gt; c[1] = 1 \n&gt;&gt;&gt; b = c.cast(\"i\")\n&gt;&gt;&gt; list(b)\n[257, 2, 3, 4]\n&gt;&gt;&gt;\n</code></pre> <p><code>memoryview</code>\u7684\u5207\u7247\u662f\u4e00\u4e2a\u65b0\u7684<code>memoryview</code>\u5bf9\u8c61\uff08\u57fa\u4e8e\u539f\u5b57\u8282\u5e8f\u5217\uff09</p>"},{"location":"coding/python/sequence/#_10","title":"\u961f\u5217","text":"<p>\u5217\u8868\u7684<code>append</code>\u4e0e<code>pop</code>\u65b9\u6cd5\u7ec4\u5408\u4f7f\u7528\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u6808\u6216\u961f\u5217\u7684\u6a21\u62df\u3002<code>collection.deque</code>\u63d0\u4f9b\u4e86\u961f\u5217\u7684\u66f4\u9ad8\u6548\u7684\u5b9e\u73b0\uff0c\u5e76\u4e14\u6ee1\u8db3\u7ebf\u7a0b\u5b89\u5168\u7684\u6761\u4ef6\u3002</p> <p>\u5728\u521b\u5efa\u961f\u5217\u65f6\uff0c\u53ef\u9009\u63d0\u4f9b\u961f\u5217\u7684\u6700\u5927\u957f\u5ea6<code>maxlen</code>\u3002\u8be5\u53c2\u6570\u53ea\u80fd\u5728\u6784\u9020\u51fd\u6570\u4e2d\u6307\u5b9a\uff0c\u5728\u5bf9\u8c61\u4e2d\u53ea\u8bfb\u3002</p> <p>\u961f\u5217\u63d0\u4f9b\u5982\u4e0b\u65b9\u6cd5\uff1a</p> <ul> <li><code>rotate</code>\uff0c\u5f53\u53c2\u6570<code>n &gt; 0</code>\u65f6\u5c06\u961f\u5217\u53f3\u4fa7\u7684<code>n</code>\u4e2a\u5143\u7d20\u79fb\u52a8\u5230\u961f\u5217\u5de6\u4fa7\uff0c\u53cd\u4e4b\u5c06\u961f\u5217\u5de6\u4fa7\u7684<code>n</code>\u4e2a\u5143\u7d20\u79fb\u52a8\u5230\u961f\u5217\u53f3\u4fa7</li> <li><code>appendleft</code>\uff0c\u5728\u961f\u5217\u7684\u5de6\u4fa7\u6dfb\u52a0\u5143\u7d20\uff08\u5f53\u8d85\u51fa\u961f\u5217\u957f\u5ea6\u65f6\uff0c\u4f1a\u4ece\u961f\u5217\u53e6\u4e00\u4fa7\u5220\u9664\uff09</li> <li><code>extendleft</code>\uff0c\u5728\u961f\u5217\u7684\u5de6\u4fa7\u6dfb\u52a0\u4e00\u7ec4\u5143\u7d20\uff08\u5f53\u8d85\u51fa\u961f\u5217\u957f\u5ea6\u65f6\uff0c\u4f1a\u4ece\u961f\u5217\u53e6\u4e00\u4fa7\u5220\u9664\uff09</li> <li>\u961f\u5217\u652f\u6301\u5217\u8868\u7684\u5927\u591a\u6570\u65b9\u6cd5\uff0c\u9664<code>copy</code>\u3001<code>sort</code>\u3001<code>insert</code>\u3001<code>index</code>\u7b49\u65b9\u6cd5\uff0c\u961f\u5217\u4ec5\u652f\u6301<code>+=</code>\u8fd0\u7b97\u7b26\u7684\u4f5c\u7528\u3002</li> </ul>"},{"location":"coding/python/snippets/cn_date/","title":"\u516c\u5386\u8f6c\u6362\u4e3a\u519c\u5386","text":"<p>\u8be6\u60c5\u53c2\u89c1 GitHub</p> <pre><code>'''\n\u516c\u5386\u519c\u5386\u8f6c\u6362\n\n\u4f5c\u8005\uff1aHuangFuSL\n\n\u4f9d\u8d56\u5305\uff1apythonnet\n\n\u8f93\u5165\u683c\u5f0f\uff1a\n2022 - \u8f93\u51fa2022\u5e74\u7684\u6240\u6709\u519c\u5386\u65e5\u671f\n202202 - \u8f93\u51fa2022\u5e742\u6708\u7684\u6240\u6709\u519c\u5386\u65e5\u671f\n20220202 - \u8f93\u51fa2022\u5e742\u67082\u65e5\u7684\u519c\u5386\u65e5\u671f\n\u5176\u4ed6 - \u8f93\u51fa\u5f53\u5929\u7684\u519c\u5386\u65e5\u671f\n\n\u8f93\u51fa\u683c\u5f0f\n2022-12-28 \u5341\u4e00\u6708\u521d\u516d\n'''\n\nimport datetime\nimport itertools\nimport sys\nfrom typing import Any, List\n\ntry:\n    import clr\n\n    clr.AddReference(\"System.Globalization\")\n    from System import DateTime  # type: ignore\n    from System.Globalization import ChineseLunisolarCalendar  # type: ignore\nexcept ImportError:\n    sys.exit(-1)\n\n\nclass InvalidInput(Exception):\n\n    def __init__(self, *args) -&gt; None:\n        super().__init__(*args)\n\n    def __str__(self) -&gt; str:\n        return 'Invalid Input'\n\n\nCALENDAR = ChineseLunisolarCalendar()\nNUMBER_LOOKUP = [\n    '\u521d', '\u4e00', '\u4e8c', '\u4e09', '\u56db', '\u4e94', '\u516d', '\u4e03', '\u516b', '\u4e5d', '\u5341', '\u5341\u4e00', '\u5341\u4e8c'\n]\nTEN_LOOKUP = '\u521d\u5341\u5eff\u4e09'\n\n\ndef build_result(cn_month: int, cn_day: int) -&gt; str:\n''' \u6570\u5b57\u8f6c\u6587\u672c '''\n    if cn_day % 10:\n        day = TEN_LOOKUP[cn_day // 10] + NUMBER_LOOKUP[cn_day % 10]\n    else:\n        day = TEN_LOOKUP[cn_day // 10] + '\u5341'\n        if day[0] == '\u5341':\n            day = NUMBER_LOOKUP[0] + '\u5341'\n\n    if cn_month != 1:\n        month = NUMBER_LOOKUP[cn_month] + '\u6708'\n    else:\n        month = '\u6b63\u6708'\n\n    return month + day\n\n\ndef convert(date: DateTime) -&gt; str:\n''' \u8c03\u7528C#\u51fd\u6570\u5e93 '''\n    cn_year = CALENDAR.GetYear(date)\n    cn_month = CALENDAR.GetMonth(date)\n    cn_day = CALENDAR.GetDayOfMonth(date)\n    leap_month = CALENDAR.GetLeapMonth(cn_year)\n    true_month = cn_month if cn_month &lt; leap_month else cn_month - 1\n    return ('\u95f0' if cn_month == leap_month else '') + build_result(true_month, cn_day)\n\n\ndef get_day_iter(y: int, m: int):\n''' \u83b7\u53d6\u6708\u4efd\u5929\u6570 '''\n    lookup = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    days_total = lookup[m] + 1\n    if m == 2 and (y % 4 == 0 and y % 100 != 0 or y % 400 == 0):\n        days_total += 1\n    yield from range(1, days_total)\n\n\nif __name__ == \"__main__\":\n    def to_list(_): return [int(_)]\n    date_str = input().strip()\n\n    try:\n        if len(date_str) == 8:\n            y, m, d = map(to_list, [date_str[:4], date_str[4:6], date_str[6:]])\n        elif len(date_str) == 6:\n            y, m = map(to_list, [date_str[:4], date_str[4:]])\n            d = None\n        elif len(date_str) == 4:\n            y = to_list(date_str[:4])\n            m, d = range(1, 13), None\n        else:\n            raise InvalidInput()\n    except InvalidInput:\n        y, m, d = map(to_list, [datetime.date.today().timetuple()[:3]])\n\n    for a, b in itertools.product(y, m):\n        for c in d if d is not None else get_day_iter(a, b):\n            print(f'{datetime.date(a, b, c):%Y-%m-%d} {convert(DateTime(a, b, c))}')\n</code></pre>"},{"location":"coding/python/snippets/merge_csv/","title":"CSV\u6587\u4ef6\u5408\u5e76","text":"<p>\u8be6\u60c5\u53c2\u89c1 GitHub</p> <pre><code>'''\nCSV\u6587\u4ef6\u5408\u5e76\n\n\u4f5c\u8005\uff1aHuangFuSL\n'''\n\nimport argparse\nimport os\nimport itertools\nimport csv\nfrom typing import Iterator, List, Tuple, TypeVar\n\nT = TypeVar('T')\n\ndef extract_head(s: Iterator[T]) -&gt; Tuple[T, List[T]]:\n    return next(s), list(s)\n\ndef load_csv(file: str):\n    with open(file, 'r', encoding='utf-8', newline='') as f:\n        dialect = csv.Sniffer().sniff(f.read(), delimiters=',')\n        f.seek(0)\n        return extract_head(csv.reader(f, dialect=dialect))\n\n\ndef merge_csv(dest: str, *src: str, encoding: str):\n    dest_head = tuple()\n    wf = open(dest, 'w', encoding=encoding, newline='')\n    writer = csv.writer(wf)\n    for file in src:\n        head, content = load_csv(file)\n        if not dest_head:\n            dest_head = tuple(head)\n            writer.writerow(dest_head)\n\n        writer.writerows(content)\n    wf.close()\n\ndef search(path: str, recursive: bool):\n    if not recursive:\n        yield from [\n            os.path.join(path, f)\n            for f in os.listdir(path)\n                if f.endswith('.csv')\n        ]\n    for root, _, files in os.walk(path):\n        yield from [\n            os.path.join(path, root, f)\n            for f in files\n                if f.endswith('.csv')\n        ]\n\nparser = argparse.ArgumentParser(description='Merge CSV Sheets')\nparser.add_argument(\n    '-o', '--output', nargs=1, default='output.csv',\n    help='Path to output file'\n    )\nparser.add_argument(\n    '-R', '--recursive', action='store_true',\n    help='Search files recursively when directory is specified'\n)\nparser.add_argument(\n    '-e', '--encoding', default='utf-8',\n    help='Output encoding'\n)\nparser.add_argument('files', nargs='*', help='Files to merge')\n\nif __name__ == '__main__':\n    ns = parser.parse_args()\n    files = [_ for _ in ns.files if os.path.isfile(_)]\n    dirs = [_ for _ in ns.files if os.path.isdir(_)]\n    targets = itertools.chain(files, *map(lambda d: search(d, ns.recursive), dirs))\n    merge_csv(ns.output, *targets, encoding=ns.encoding)\n</code></pre>"},{"location":"coding/python/snippets/ncm_decrypt/","title":"\u7f51\u6613\u4e91\u97f3\u4e50NCM\u8f6c\u6362","text":"<p>\u8be6\u60c5\u53c2\u89c1 GitHub</p> <pre><code>'''\n\u7f51\u6613\u4e91\u97f3\u4e50ncm\u683c\u5f0f\u89e3\u5bc6\n\n\u4f5c\u8005\uff1aHuangFuSL\n\n\u4f9d\u8d56\u5305\uff1apycryptodomex\n\n\u53c2\u6570\u683c\u5f0f\uff1a\n\u8f93\u5165\u4e00\u4e2ancm\u6587\u4ef6\u8def\u5f84\u6216\u5305\u542bncm\u7684\u76ee\u5f55\u8def\u5f84\uff0c\u7701\u7565\u5219\u5904\u7406\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709ncm\u6587\u4ef6\n\n\u8f93\u51fa\u683c\u5f0f\n\u89e3\u7801\u540e\u7684\u97f3\u9891\u6587\u4ef6\uff0cmp3\u6216flac\u683c\u5f0f\n'''\nfrom __future__ import annotations\n\nimport base64\nimport functools\nimport io\nimport json\nimport os\nimport sys\nfrom typing import Tuple\n\nfrom Cryptodome.Cipher import AES\n\nNCM_FILEHEAD = b'CTENFDAM'\nNCM_COREKEY = b'hzHRAmso5kInbaxW'\nNCM_SIDEKEY = b\"#14ljk_!\\\\]&amp;0U&lt;'(\"\n\n\ndef unpad(s: str | bytes):\n''' \u6e05\u9664\u6570\u636e\u540e\u9762\u586b\u5145\u7684\u5b57\u8282\u5757 '''\n    return s[0: -s[-1]] if isinstance(s, bytes) else unpad(s.encode('utf-8'))\n\n\ndef aes_decrypt(key: bytes, data: bytes) -&gt; bytes:\n''' AES\u89e3\u5bc6 '''\n    return AES.new(key, AES.MODE_ECB).decrypt(data)\n\n\ndef xor(data: bytes, num: int | bytes):\n''' \u5229\u7528\u6574\u6570\u8fd0\u7b97\u8fdb\u884cbytes\u5bf9\u8c61\u7684\u5feb\u901f\u5f02\u6216 '''\n    if isinstance(num, int):\n        num = bytes([num] * len(data))\n    b2i = functools.partial(int.from_bytes, byteorder='little')\n    return (b2i(data) ^ b2i(num)).to_bytes(len(data), 'little')\n\n\ndef add(a: int, b: int):\n''' \u5305\u542b\u6574\u578b\u6ea2\u51fa\u7684\u76f8\u52a0 '''\n    return (a + b) &amp; 0xff\n\n\ndef build_keybox(decrypted: bytes):\n''' \u6784\u9020\u89e3\u5bc6\u6587\u4ef6\u7684\u51fd\u6570 '''\n    bytemap = bytearray(range(256))\n    b, i = 0, 0\n    for _ in range(256):\n        b = add(bytemap[_], b + decrypted[i])\n        i = (i + 1) % len(decrypted)\n        bytemap[_], bytemap[b] = bytemap[b], bytemap[_]\n    keybox = bytes(\n        bytemap[add(bytemap[add(_, i)], _)]\n        for i, _ in enumerate(bytemap[1:] + bytemap[:1], 1)\n    )\n\n    def apply_keybox(data: bytes):\n        return xor(data, (keybox * (len(data) // 256 + 1))[:len(data)])\n    return apply_keybox\n\n\ndef read_chunk(data: io.BytesIO) -&gt; bytes:\n''' \u5206\u5757\u8bfb\u53d6\u6587\u4ef6\uff0c\u524d4\u5b57\u8282\u8868\u793a\u5757\u957f\u5ea6 '''\n    chunk_size = int.from_bytes(data.read(4), 'little')\n    return data.read(chunk_size)\n\n\ndef ncm_decrypt(data: io.BytesIO) -&gt; Tuple[str, bytes]:\n''' \u89e3\u5bc6ncm\u6587\u4ef6 '''\n    core_key_chunk = read_chunk(data)\n    decrypted = unpad(aes_decrypt(NCM_COREKEY, xor(core_key_chunk, 100)))[17:]\n    keybox = build_keybox(decrypted) # \u7528\u4e8e\u6587\u4ef6\u4e3b\u4f53\u7684\u89e3\u5bc6\n\n    b64_chunk = xor(read_chunk(data), 99) # \u5143\u6570\u636e\u90e8\u5206\n    b64_chunk_data = base64.b64decode(b64_chunk.split(b':', 1)[1])\n    mdc = json.loads(unpad(aes_decrypt(NCM_SIDEKEY, b64_chunk_data)[6:]))\n    file_name = '{musicName} - {artist[0][0]}.{format}'.format(**mdc)\n\n    data.seek(9, 1)\n    image = read_chunk(data) # \u4e13\u8f91\u5c01\u9762\n    w = io.BytesIO()\n    while True:\n        chunk = data.read(32768)\n        if not chunk:\n            break\n        w.write(keybox(chunk))\n\n    return file_name, w.getvalue()\n\n\ndef process_file(path: str, output_dir: str):\n    with open(path, 'rb') as f:\n        if f.read(8) != NCM_FILEHEAD:\n            raise Exception('Not a NCM file')\n        f.seek(2, 1)\n        fn, data = ncm_decrypt(io.BytesIO(f.read()))\n    with open(os.path.join(output_dir, fn), 'wb') as f:\n        f.write(data)\n\n\nif __name__ == \"__main__\":\n    path = sys.argv[1] if len(sys.argv) &gt; 1 else '.'\n    if os.path.isdir(path):\n        for _ in os.listdir(path):\n            if _.endswith('.ncm'):\n                process_file(os.path.join(path, _), path)\n    elif path.endswith('.ncm'):\n        process_file(path, os.path.dirname(path))\n</code></pre>"},{"location":"latex/","title":"LaTeX","text":"<p>\u8bb0\u5f55LaTeX\u7684\u4f7f\u7528\u3002</p> <ul> <li>\u4f7f\u7528LaTeX\u521b\u5efa\u5e7b\u706f\u7247</li> </ul>"},{"location":"latex/#_1","title":"\u57fa\u672c\u6392\u7248","text":"<ul> <li>\u5b57\u4f53\u4e0e\u5b57\u53f7</li> <li>\u5217\u8868</li> </ul>"},{"location":"latex/#_2","title":"\u6570\u5b66\u516c\u5f0f\u6392\u7248","text":"<ul> <li>\u6570\u5b66\u7b26\u53f7</li> <li>\u7b26\u53f7\u5806\u53e0</li> <li>\u7279\u6b8a\u6280\u5de7</li> </ul>"},{"location":"latex/#_3","title":"\u56fe\u8868\u6392\u7248","text":""},{"location":"latex/#tikz","title":"tikz\u7ed8\u56fe","text":"<ul> <li>pgfplots\u56fe\u8868</li> </ul>"},{"location":"latex/#_4","title":"\u8868\u683c\u6392\u7248","text":"<ul> <li>tabular\u73af\u5883</li> </ul>"},{"location":"latex/beamer/","title":"\u4f7f\u7528LaTeX\u521b\u5efa\u5e7b\u706f\u7247","text":"<p>\u9996\u5148\uff0c\u9700\u8981\u6307\u5b9a<code>documentclass</code>\u4e3a<code>beamer</code>\u7c7b\u578b\uff1a</p> <pre><code>\\documentclass{beamer}\n</code></pre> <p>\u6bcf\u4e00\u5f20\u5e7b\u706f\u7247\u4f7f\u7528<code>frame</code>\u73af\u5883\uff0c\u5982\u4e0b\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7a7a\u767d\u5e7b\u706f\u7247\uff1a</p> <pre><code>\\begin{frame}\n\\end{frame}\n</code></pre> <p>\u7b2c\u4e00\u9875PPT\u901a\u5e38\u663e\u793aPPT\u7684\u6807\u9898\u3001\u4f5c\u8005\u7684\u4e2a\u4eba\u4fe1\u606f\u7b49\u5185\u5bb9\uff1a</p> <pre><code>\\title{\u6807\u9898}\n\\subtitle{\u526f\u6807\u9898}\n\\author{\u4f5c\u8005}\n\\institute{\u7ec4\u7ec7}\n\\date{\\today}  % \u663e\u793a\u65e5\u671f\n\\titlepage\n</code></pre>"},{"location":"latex/basics/fonts/","title":"LaTeX\u4e2d\u7684\u5b57\u4f53\u4e0e\u5b57\u53f7","text":""},{"location":"latex/basics/fonts/#_1","title":"\u5b57\u53f7","text":"<p>\\(\\LaTeX\\)\u4e2d\u5171\u6709<code>\\tiny</code>\u3001<code>\\scriptsize</code>\u3001<code>\\footnotesize</code>\u3001<code>\\small</code>\u3001<code>\\normalsize</code>\u3001<code>\\large</code>\u3001<code>\\Large</code>\u3001<code>\\LARGE</code>\u3001<code>\\huge</code>\u3001<code>\\Huge</code>\u7b4910\u79cd\u76f8\u5bf9\u5c3a\u5bf8\u7684\u5b57\u53f7\u8bbe\u7f6e\u3002\u6bcf\u6b21\u4fee\u6539\u5b57\u53f7\u540e\uff0c\u4f1a\u5bf9\u547d\u4ee4\u540e\u6240\u6709\u7684\u6587\u672c\u751f\u6548\u3002\u5982\u679c\u4ec5\u9700\u8981\u4fee\u6539\u4e00\u90e8\u5206\u6587\u5b57\u7684\u5b57\u53f7\uff0c\u53ef\u4ee5\u5c06\u9700\u8981\u8c03\u6574\u5b57\u53f7\u7684\u90e8\u5206\u4f7f\u7528\u82b1\u62ec\u53f7<code>{}</code>\u5305\u56f4\u3002</p> <p>LaTeX\u4e2d\u7684\u5b57\u53f7</p> tex\u4ee3\u7801\u6e32\u67d3\u7ed3\u679c <pre><code>\\centering\n\\tiny tiny \\\\\n\\scriptsize scriptsize \\\\\n\\footnotesize footnotesize \\\\\n\\small small \\\\\n\\normalsize normalsize \\\\\n\\large large \\\\\n\\Large Large \\\\\n\\LARGE LARGE \\\\\n\\huge huge \\\\\n\\Huge Huge \\\\\n</code></pre> <p></p>"},{"location":"latex/basics/lists/","title":"\u5217\u8868","text":"<p>\u5728LaTeX\u4e2d\uff0c<code>enumerate</code>\u73af\u5883\u5b9a\u4e49\u4e86\u7f16\u53f7\u5217\u8868\uff0c<code>itemize</code>\u73af\u5883\u4e0e<code>description</code>\u73af\u5883\u5b9a\u4e49\u4e86\u7b26\u53f7\u5217\u8868\u3002\u6240\u6709\u7684\u5217\u8868\u4f7f\u7528<code>\\item</code>\u547d\u4ee4\u5b9a\u4e49\u5217\u8868\u9879\u3002\u5217\u8868\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4f7f\u7528\u7684\u7f16\u53f7\u4e0e\u7b26\u53f7\u3002</p> <p>\u5f53\u5217\u8868\u88ab\u5d4c\u5957\u65f6\uff0c\u4e0d\u540c\u5c42\u6b21\u7684\u5217\u8868\u4f1a\u4f7f\u7528\u4e0d\u540c\u7684\u7f16\u53f7\u4ee5\u907f\u514d\u6df7\u6dc6\u3002</p>"},{"location":"latex/basics/lists/#_2","title":"\u57fa\u672c\u4f7f\u7528","text":""},{"location":"latex/basics/lists/#enumerate","title":"<code>enumerate</code>\u73af\u5883","text":"<p><code>enumerate</code>\u73af\u5883\u7684\u4f7f\u7528\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>\\begin{enumerate}\n    \\item This is an item.\n    \\item This is an item.\n    \\item This is an item.\n\\end{enumerate}\n</code></pre> <p>\u6e32\u67d3\u540e\u7684\u6548\u679c\uff1a</p> <ol> <li>This is an item.</li> <li>This is an item.</li> <li>This is an item.</li> </ol> <p><code>enumerate</code>\u73af\u5883\u9ed8\u8ba4\u4f7f\u7528<code>1. 2. 3. ...</code>\u8fdb\u884c\u7f16\u53f7\uff0c\u81ea\u5b9a\u4e49\u7f16\u53f7\u901a\u8fc7\u5728<code>\\begin{enumerate}</code>\u540e\u6dfb\u52a0\u53c2\u6570\u5b9e\u73b0\u3002</p> <pre><code>\\begin{enumerate}[A.]\n    \\item This is an item.\n    \\item This is an item.\n    \\item This is an item.\n\\end{enumerate}\n</code></pre> <p>\u6e32\u67d3\u540e\u7684\u6548\u679c\uff1a</p> <p>A. This is an item. B. This is an item. C. This is an item.</p> <p>\u5728<code>enumerate</code>\u4e0e<code>item</code>\u73af\u5883\u4e2d\u53ef\u4ee5\u4f7f\u7528<code>\\setlength</code>\u8c03\u8282\u5217\u8868\u9879\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>\\setlength{\\itemsep}{0pt}\n\\setlength{\\parskip}{0pt}\n\\setlength{\\itemindent}{1em}\n</code></pre> <p>\u81ea\u5b9a\u4e49\u7f16\u53f7\u5217\u8868\u9700\u8981\u5f15\u5165<code>enumerate</code>\u5305\uff1a<code>\\usepackage{enumerate}</code></p>"},{"location":"latex/basics/lists/#itemize","title":"<code>itemize</code>\u73af\u5883","text":"<p><code>itemize</code>\u73af\u5883\u7528\u4e8e\u751f\u6210\u7b26\u53f7\u5217\u8868\uff0c\u4f7f\u7528\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>\\begin{itemize}\n    \\item This is an item.\n    \\item This is an item.\n    \\item This is an item.\n\\end{itemize}\n</code></pre> <p>\u6e32\u67d3\u540e\u7684\u6548\u679c\uff1a</p> <ul> <li>This is an item.</li> <li>This is an item.</li> <li>This is an item.</li> </ul> <p><code>\\item</code>\u547d\u4ee4\u53ef\u4ee5\u4f7f\u7528\u4e2d\u62ec\u53f7\u6307\u5b9a\u5f53\u524d\u9879\u4f7f\u7528\u7684\u7b26\u53f7\uff0c\u5982<code>\\item[-]</code>\u4f7f\u7528<code>-</code>\u4f5c\u4e3a\u7b26\u53f7</p>"},{"location":"latex/math/stack/","title":"LaTeX \u7b26\u53f7\u5806\u53e0","text":""},{"location":"latex/math/stack/#_1","title":"\u7b26\u53f7\u4e0a\u4e0b\u52a0\u6587\u672c","text":"<p>\u90e8\u5206\u5927\u578b\u8fd0\u7b97\u7b26\uff08\u53c2\u89c1\u6570\u5b66\u7b26\u53f7\uff09\u53ef\u4ee5\u52a0\u5165\u4e0a\u4e0b\u6807\u3002\u5bf9\u4e8e\u884c\u95f4\u516c\u5f0f\uff0c\u8fd0\u7b97\u7b26\u7684\u4e0a\u4e0b\u6807\u6709\u4e24\u79cd\u4f4d\u7f6e\u9009\u62e9\uff1a</p> <ul> <li>\u4e0a\u4e0b\u6807\u5728\u7b26\u53f7\u4e0a\u4e0b\u4e24\u4fa7\uff0c\u5982   $$   \\sum_{i=0}^\\infty   $$</li> <li>\u4e0a\u4e0b\u6807\u5728\u7b26\u53f7\u53f3\u4fa7\uff0c\u5982   $$   \\int_0^\\infty   $$</li> </ul> <p>\u884c\u5185\u516c\u5f0f\u9ed8\u8ba4\u6240\u6709\u7684\u4e0a\u4e0b\u6807\u90fd\u5728\u7b26\u53f7\u53f3\u4fa7\uff0c\u5982\\(\\sum_{i=0}^\\infty\\)\u3002\u4f7f\u7528<code>\\limits</code>\u53ef\u4ee5\u5f3a\u5236\u4e0a\u4e0b\u6807\u51fa\u73b0\u5728\u8fd0\u7b97\u7b26\u4e0a\u4e0b\u4e24\u4fa7\uff0c\u5982</p> <p><code>\\limits</code>\u547d\u4ee4</p> LaTeX\u4ee3\u7801\u6e32\u67d3\u7ed3\u679c <pre><code>$\\sum\\limits_{i=0}^\\infty$\n</code></pre> <p>\\(\\sum\\limits_{i=0}^\\infty\\)</p> <p><code>\\overset</code>\u3001<code>\\underset</code>\u53ef\u4ee5\u5b9e\u73b0\u5728\u7b26\u53f7\u4e0a\u4e0b\u63d2\u5165\u7b26\u53f7\u3002<code>\\stackrel</code>\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u4e0e<code>\\overset</code>\u76f8\u540c\u7684\u529f\u80fd\u3002</p> <p><code>\\overset</code>\u547d\u4ee4\u4e0e<code>\\underset</code>\u547d\u4ee4</p> LaTeX\u4ee3\u7801\u6e32\u67d3\u7ed3\u679c <pre><code>\\begin{equation*}\n    \\begin{aligned}\n        &amp;\\overset{above}{\\rightarrow} \\\\\n        &amp;\\underset{below}{\\rightarrow} \\\\\n    \\end{aligned}\n\\end{\\equation*}\n</code></pre> \\[ \\begin{aligned}     &amp;\\overset{above}{\\rightarrow} \\\\     &amp;\\underset{below}{\\rightarrow} \\\\ \\end{aligned} \\] <p>\u5982\u679c\u9700\u8981\u6362\u884c\uff0c\u53ef\u4ee5\u4f7f\u7528<code>\\substack</code>\u547d\u4ee4\uff1a</p> <p><code>\\substack</code>\u547d\u4ee4</p> LaTeX\u4ee3\u7801\u6e32\u67d3\u7ed3\u679c <pre><code>\\begin{equation*}\n    \\begin{aligned}\n        &amp;\\overset{\\substack{above1 \\\\ above2}}{\\rightarrow} \\\\\n        &amp;\\underset{\\substack{below1 \\\\ below2}}{\\rightarrow} \\\\\n    \\end{aligned}\n\\end{\\equation*}\n</code></pre> \\[ \\begin{aligned}     &amp;\\overset{\\substack{above1 \\\\ above2}}{\\rightarrow} \\\\     &amp;\\underset{\\substack{below1 \\\\ below2}}{\\rightarrow} \\\\ \\end{aligned} \\]"},{"location":"latex/math/stack/#_2","title":"\u7bad\u5934\u4e0a\u4e0b\u52a0\u6587\u672c","text":"<p><code>\\overset</code>\u3001<code>\\stackrel</code>\u4e0e<code>\\underset</code>\u53ea\u80fd\u5b9e\u73b0\u7bad\u5934\u4e0a\u4e0b\u52a0\u6587\u672c\uff0c\u7bad\u5934\u7684\u957f\u5ea6\u4e0d\u80fd\u968f\u6587\u672c\u957f\u5ea6\u81ea\u52a8\u8c03\u6574\u3002<code>amsmath</code>\u5b8f\u5305\u63d0\u4f9b\u4e86<code>\\xleftarrow</code>\u4e0e<code>\\xrightarrow</code>\uff0c\u53ef\u4ee5\u5b9e\u73b0\u7bad\u5934\u4e0a\u4e0b\u52a0\u6587\u672c\uff0c\u540c\u65f6\u7bad\u5934\u4f1a\u81ea\u52a8\u9002\u5e94\u6587\u672c\u7684\u957f\u5ea6\u3002<code>extarrows</code>\u5b8f\u5305\u63d0\u4f9b\u4e86<code>\\xlongequal</code>\u547d\u4ee4\uff0c\u5b9e\u73b0\u7b49\u53f7\u4e0a\u4e0b\u52a0\u6587\u672c\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a</p> <p><code>\\xrightarrow</code>\u547d\u4ee4</p> LaTeX\u4ee3\u7801\u6e32\u67d3\u7ed3\u679c <pre><code>\\begin{itemize}\n    \\item $\\xleftarrow[\\text{below}]{\\text{above}}$\n    \\item $\\xrightarrow[\\text{very very long below}]{\\text{very very long above}}$\n    \\item $\\xlongequal[\\text{very very long below}]{\\text{very very long above}}$\n\\end{itemize}\n</code></pre> <p></p> <p>\u5b9a\u4e49\u7b26\u53f7\\(\\triangleq\\)\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528<code>\\triangleq</code>\u8f93\u5165\u3002</p>"},{"location":"latex/math/symbols/","title":"LaTeX \u6570\u5b66\u7b26\u53f7","text":"<p>\u6536\u96c6\\(\\LaTeX\\)\u5e38\u7528\u7684\u6570\u5b66\u7b26\u53f7\u547d\u4ee4</p>"},{"location":"latex/math/symbols/#_1","title":"\u5b57\u6bcd\u53d8\u4f53","text":"<p>\u5e38\u7528\u547d\u4ee4\u6709\uff1a<code>\\mathcal</code>\u3001<code>\\mathbb</code>\u3001<code>\\mathfrak</code>\u3001<code>\\mathsf</code>\u3001<code>\\mathbf</code>\u3001<code>\\boldsymbol</code>\u3001<code>\\mathit</code>\u3001<code>\\mathrm</code>\u7b49\u3002\u5176\u4e2d<code>\\mathcal</code>\u3001<code>\\mathbb</code>\u4ec5\u9002\u7528\u4e8e\u5927\u5199\u5b57\u6bcd\uff0c\u5176\u4f59\u547d\u4ee4\u5927\u5199\u3001\u5c0f\u5199\u5b57\u6bcd\u901a\u7528</p> <ul> <li><code>\\mathcal{A}</code>\uff1a\\(\\mathcal A\\)</li> <li><code>\\mathbb{A}</code>\uff1a\\(\\mathbb A\\)</li> <li><code>\\mathfrak{A}</code>\uff1a\\(\\mathfrak A\\)</li> <li><code>\\mathsf{A}</code>\uff1a\\(\\mathsf A\\)</li> <li><code>\\mathbf{A}</code>\uff1a\\(\\mathbf A\\)</li> <li><code>\\boldsymbol{A}</code>\uff1a\\(\\boldsymbol A\\)</li> <li><code>\\mathit{A}</code>\uff1a\\(\\mathit A\\)\uff08\u65e0\u6548\u679c\uff09</li> <li><code>\\mathrm{A}</code>\uff1a\\(\\mathrm A\\)</li> <li><code>\\mathscr{A}</code>\uff1a\\(\\mathscr A\\)\uff08\u9700\u8981\u5f15\u5165\u5b8f\u5305<code>mathrsfs</code>\uff09</li> </ul>"},{"location":"latex/math/symbols/#_2","title":"\u5e0c\u814a\u5b57\u6bcd","text":"\u5c0f\u5199 \u547d\u4ee4 \u5927\u5199 \u547d\u4ee4 \u53d8\u4f53 \u547d\u4ee4 \\(\\alpha\\) <code>\\alpha</code> \\(A\\) <code>A</code> \\(\\beta\\) <code>\\beta</code> \\(B\\) <code>B</code> \\(\\gamma\\) <code>\\gamma</code> \\(\\Gamma\\) <code>\\Gamma</code> \\(\\varGamma\\) <code>\\varGamma</code> \\(\\delta\\) <code>\\delta</code> \\(\\Delta\\) <code>\\Delta</code> \\(\\varDelta\\) <code>\\varDelta</code> \\(\\epsilon\\) <code>\\epsilonn</code> \\(E\\) <code>E</code> \\(\\varepsilon\\) <code>\\varepsilon</code> \\(\\zeta\\) <code>\\zeta</code> \\(Z\\) <code>Z</code> \\(\\eta\\) <code>\\eta</code> \\(H\\) <code>H</code> \\(\\theta\\) <code>\\theta</code> \\(\\Theta\\) <code>\\Theta</code> \\(\\vartheta,\\varTheta\\) <code>\\vartheta,\\varTheta</code> \\(\\iota\\) <code>\\iota</code> \\(I\\) <code>I</code> \\(\\kappa\\) <code>\\kappa</code> \\(K\\) <code>K</code> \\(\\varkappa\\) <code>\\varkappa</code> \\(\\lambda\\) <code>\\lambda</code> \\(\\Lambda\\) <code>\\Lambda</code> \\(\\varLambda\\) <code>\\varLambda</code> \\(\\mu\\) <code>\\mu</code> \\(M\\) <code>M</code> \\(\\nu\\) <code>\\nu</code> \\(N\\) <code>N</code> \\(\\xi\\) <code>\\xi</code> \\(\\Xi\\) <code>\\Xi</code> \\(\\varXi\\) <code>\\varXi</code> \\(o\\) <code>o</code> \\(O\\) <code>O</code> \\(\\pi\\) <code>\\pi</code> \\(\\Pi\\) <code>\\Pi</code> \\(\\varpi, \\varPi\\) <code>\\varpi,\\varPi</code> \\(\\rho\\) <code>\\rho</code> \\(P\\) <code>P</code> \\(\\varrho\\) <code>\\varrho</code> \\(\\sigma\\) <code>\\sigma</code> \\(\\Sigma\\) <code>\\Sigma</code> \\(\\varsigma, \\varSigma\\) <code>\\varsigma,\\varSigma</code> \\(\\tau\\) <code>\\tau</code> \\(T\\) <code>T</code> \\(\\upsilon\\) <code>\\upsilon</code> \\(\\Upsilon\\) <code>\\Upsilon</code> \\(\\varUpsilon\\) <code>\\varUpsilon</code> \\(\\phi\\) <code>\\phi</code> \\(\\Phi\\) <code>\\Phi</code> \\(\\varphi, \\varPhi\\) <code>\\varphi,\\varPhi</code> \\(\\chi\\) <code>\\chi</code> \\(X\\) <code>X</code> \\(\\psi\\) <code>\\psi</code> \\(\\Psi\\) <code>\\Psi</code> \\(\\varPsi\\) <code>\\varPsi</code> \\(\\omega\\) <code>\\omega</code> \\(\\Omega\\) <code>\\Omega</code> \\(\\varOmega\\) <code>\\varOmega</code>"},{"location":"latex/math/symbols/#_3","title":"\u8fd0\u7b97\u7b26","text":"<p>\u5e38\u89c1\u8fd0\u7b97\u7b26\u5217\u4e8e\u4e0b\u8868\uff1a</p>"},{"location":"latex/math/symbols/#_4","title":"\u6570\u5b66\u8fd0\u7b97","text":"\u8fd0\u7b97\u7b26 \u547d\u4ee4 \\(\\times\\) <code>\\times</code> \\(\\div\\) <code>\\div</code> \\(\\odot\\) <code>\\odot</code> \\(\\oplus\\) <code>\\oplus</code> \\(\\otimes\\) <code>\\otimes</code>"},{"location":"latex/math/symbols/#_5","title":"\u96c6\u5408\u8fd0\u7b97","text":"\u8fd0\u7b97\u7b26 \u547d\u4ee4 \\(\\in\\) <code>\\in</code> \\(\\ni\\) <code>\\ni</code> \\(\\subset\\) <code>\\subset</code> \\(\\subseteq\\) <code>\\subseteq</code> \\(\\subseteqq\\) <code>\\oplsubseteqqu</code> \\(\\subsetneq\\) <code>\\subsetneq</code> \\(\\subsetneqq\\) <code>\\subsetneqq</code> \\(\\supset\\) <code>\\subset</code> \\(\\supseteq\\) <code>\\subseteq</code> \\(\\supseteqq\\) <code>\\oplsubseteqqu</code> \\(\\supsetneq\\) <code>\\subsetneq</code> \\(\\supsetneqq\\) <code>\\subsetneqq</code> \\(\\cap\\) <code>\\cap</code> \\(\\cup\\) <code>\\cup</code>"},{"location":"latex/math/symbols/#_6","title":"\u5173\u7cfb\u8fd0\u7b97\u7b26","text":"\u8fd0\u7b97\u7b26 \u547d\u4ee4 \\(\\geq\\) <code>\\geq</code> \\(\\geqq\\) <code>\\geqq</code> \\(\\geqslant\\) <code>\\geqslant</code> \\(\\gg\\) <code>\\gg</code> \\(\\ggg\\) <code>\\ggg</code> \\(\\leq\\) <code>\\leq</code> \\(\\leqq\\) <code>\\leqq</code> \\(\\leqslant\\) <code>\\leqslant</code> \\(\\ll\\) <code>\\ll</code> \\(\\lll\\) <code>\\lll</code> \\(\\sim\\) <code>\\sim</code> \\(\\approx\\) <code>\\approx</code>"},{"location":"latex/math/symbols/#_7","title":"\u903b\u8f91\u8fd0\u7b97\u7b26","text":"\u8fd0\u7b97\u7b26 \u547d\u4ee4 \\(\\lnot\\) <code>\\lnot</code> \\(\\land\\) <code>\\land</code> \\(\\lor\\) <code>\\lor</code> \\(\\forall\\) <code>\\forall</code> \\(\\exists\\) <code>\\exists</code>"},{"location":"latex/math/symbols/#_8","title":"\u51fd\u6570\u4e0e\u590d\u6742\u8fd0\u7b97","text":"\u8fd0\u7b97\u7b26 \u547d\u4ee4 \\(\\frac ab\\) <code>\\frac{a}{b}</code> \\(\\sum_i^n f\\) <code>\\sum_{i}^{n} f</code> \\(\\prod_i^n f\\) <code>\\prod_{i}^{n} f</code> \\(\\sqrt[x]{y}\\) <code>\\sqrt[x]{y}</code> \\(\\int_a^bf(x)\\mathrm dx\\) <code>\\int_a^bf(x)\\mathrm dx</code> \\(\\oint_Df(x)\\mathrm dx\\) <code>\\oint_Df(x)\\mathrm dx</code> \\(\\iint_Df(x)\\mathrm dx\\) <code>\\iint_Df(x)\\mathrm dx</code> \\(\\iiint_Df(x)\\mathrm dx\\) <code>\\iiint_Df(x)\\mathrm dx</code> \\(\\partial\\) <code>\\partial</code> \\(\\log\\) <code>\\log</code> \\(\\ln\\) <code>\\ln</code> \\(\\lg\\) <code>\\lg</code> \\(\\exp\\) <code>\\exp</code> \\(a\\mod b\\) <code>a\\mod b</code> \\(\\max\\) <code>\\max</code> \\(\\min\\) <code>\\min</code> \\(\\arg\\) <code>\\arg</code> \\(\\sin\\) <code>\\sin</code> \\(\\cos\\) <code>\\cos</code> \\(\\tan\\) <code>\\tan</code> \\(\\cot\\) <code>\\cot</code> \\(\\sinh\\) <code>\\sinh</code> \\(\\cosh\\) <code>\\cosh</code> \\(\\tanh\\) <code>\\tanh</code> \\(\\coth\\) <code>\\coth</code> \\(\\arcsin\\) <code>\\arcsin</code> \\(\\arccos\\) <code>\\arccos</code> \\(\\arctan\\) <code>\\arctan</code> \\(\\ker\\) <code>\\ker</code> \\(\\dim\\) <code>\\dim</code> \\(\\det\\) <code>\\det</code> \\(\\lim\\) <code>\\lim</code> \\(\\inf\\) <code>\\inf</code>"},{"location":"latex/math/symbols/#_9","title":"\u62ec\u53f7","text":"\u8fd0\u7b97\u7b26 \u547d\u4ee4 \\(\\{\\) <code>\\{</code> \\(\\}\\) <code>\\}</code> \\(\\langle\\) <code>\\langle</code> \\(\\rangle\\) <code>\\rangle</code> \\(\\lceil\\) <code>\\lceil</code> \\(\\rceil\\) <code>\\rceil</code> \\(\\lfloor\\) <code>\\lfloor</code> \\(\\rfloor\\) <code>\\rfloor</code> \\(\\|\\) <code>\\|</code>"},{"location":"latex/math/tricks/","title":"\u7279\u6b8a\u6280\u5de7","text":""},{"location":"latex/math/tricks/#_2","title":"\u516c\u5f0f\u5185\u4e2d\u6587","text":"<p>\u4f7f\u7528\u547d\u4ee4<code>\\text</code>\u6216<code>\\mbox</code>\u53ef\u4ee5\u5728\u516c\u5f0f\u4e2d\u52a0\u5165\u4e2d\u6587\u6587\u672c\u3002\u5982\u679c\u4f7f\u7528<code>\\mathrm</code>\uff0c\u5219\u4e0d\u4f1a\u663e\u793a\u4e2d\u6587\u3002</p>"},{"location":"latex/math/tricks/#_3","title":"\u9690\u5f62\u5b57\u7b26","text":"<p><code>\\phantom</code>\u547d\u4ee4\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5360\u636e\u4e00\u5b9a\u7a7a\u95f4\u7684\u7a7a\u767d\uff0c\u7a7a\u767d\u7684\u957f\u5bbd\u7531\u53c2\u6570\u7684\u5c3a\u5bf8\u51b3\u5b9a\uff1a</p> \\[ \\begin{aligned}     \\bbox[border: 2px solid magenta]{\\phantom{\\int_0^1 x\\mathrm dx}} \\; &amp; \\bbox[border: 2px solid magenta]{\\int_0^1 x\\mathrm dx} \\\\     \\bbox[border: 2px solid magenta]{\\int_0^1 x\\mathrm dx} \\; &amp; \\end{aligned} \\] <p>\u6b64\u5916\uff0c<code>\\phantom</code>\u6709\u4e24\u4e2a\u53d8\u79cd<code>\\vphantom</code>\u4e0e<code>\\hphantom</code>\uff0c\u524d\u8005\u521b\u9020\u4e00\u4e2a\u5bbd\u5ea6\u4e3a0\uff0c\u9ad8\u5ea6\u4e3a\u6307\u5b9a\u9ad8\u5ea6\u7684\u7a7a\u767d\uff1b\u540e\u8005\u521b\u9020\u4e00\u4e2a\u9ad8\u5ea6\u4e3a0\uff0c\u5bbd\u5ea6\u4e3a\u6307\u5b9a\u5bbd\u5ea6\u7684\u7a7a\u767d\u3002\u5728\u5c3a\u5bf8\u6839\u636e\u5185\u5bb9\u800c\u53d8\u7684\u5bb9\u5668\u4e2d\uff0c<code>\\phantom</code>\u7b49\u4e00\u7cfb\u5217\u547d\u4ee4\u53ef\u4ee5\u7528\u4e8e\u63a7\u5236\u5bb9\u5668\u7684\u5927\u5c0f\u3002</p> <p><code>\\vphantom</code>\u4f7f\u7528\u573a\u666f</p> <p>\u5728<code>\\left</code>\u3001<code>\\right</code>\u7b49\u547d\u4ee4\u53ea\u80fd\u5728\u4e00\u884c\u4e0a\u63a7\u5236\u5de6\u53f3\u4e24\u4fa7\u62ec\u53f7\u7684\u5927\u5c0f\uff0c\u800c\u5f53\u516c\u5f0f\u4e2d\u51fa\u73b0\u8de8\u884c\uff0c<code>\\left</code>\u3001<code>\\right</code>\u5219\u65e0\u6cd5\u6b63\u786e\u5339\u914d\u3002\u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528<code>\\vphantom</code>\u547d\u4ee4\u5c06\u62ec\u53f7\u6491\u5f00\u3002</p> \u4e0d\u4f7f\u7528<code>\\vphantom</code>\u4f7f\u7528<code>\\vphantom</code> <pre><code>\\begin{equation}\n    \\begin{aligned}\n        \\frac{\\partial ^2\\Pi(x, t)}{\\partial x\\partial t} =\n        &amp; -(p-s)\\mathbb E_{Q, B, L}\\left[D(t)|Q(t)\\leq x\\right]f_{Q(t)}(x) \\\\\n        &amp; + h\\mathbb P(t &lt; B + L) - h\\mathbb E_{B, L} \\\\\n        &amp; \\times \\left[\\int_{t}^\\mathbb{B+L}\\mathbb E_Q\\left[D(t)|Q(t) - Q(\\tau)\\leq x, B\\leq t, L\\right]\\right. \\\\\n        &amp; \\color{magenta} \\times \\left. f_{Q(t) - Q(\\tau) | B\\leq t}(x)\\mathbb P(B\\leq t)\\mathrm d \\tau\\right]\n    \\end{aligned}\n\\end{equation}\n</code></pre> \\[ \\begin{aligned}     \\frac{\\partial ^2\\Pi(x, t)}{\\partial x\\partial t} =     &amp; -(p-s)\\mathbb E_{Q, B, L}\\left[D(t)|Q(t)\\leq x\\right]f_{Q(t)}(x) \\\\     &amp; + h\\mathbb P(t &lt; B + L) - h\\mathbb E_{B, L} \\\\     &amp; \\times \\left[\\int_{t}^\\mathbb{B+L}\\mathbb E_Q\\left[D(t)|Q(t) - Q(\\tau)\\leq x, B\\leq t, L\\right]\\right. \\\\     &amp; \\color{magenta} \\times \\left. f_{Q(t) - Q(\\tau) | B\\leq t}(x)\\mathbb P(B\\leq t)\\mathrm d \\tau\\right] \\end{aligned} \\] <pre><code>\\begin{equation}\n    \\begin{aligned}\n        \\frac{\\partial ^2\\Pi(x, t)}{\\partial x\\partial t} =\n        &amp; -(p-s)\\mathbb E_{Q, B, L}\\left[D(t)|Q(t)\\leq x\\right]f_{Q(t)}(x) \\\\\n        &amp; + h\\mathbb P(t &lt; B + L) - h\\mathbb E_{B, L} \\\\\n        &amp; \\times \\left[\\int_{t}^\\mathbb{B+L}\\mathbb E_Q\\left[D(t)|Q(t) - Q(\\tau)\\leq x, B\\leq t, L\\right]\\right. \\\\\n        &amp; \\color{magenta} \\times \\left.\\vphantom{\\int_t^{B+L}} f_{Q(t) - Q(\\tau) | B\\leq t}(x)\\mathbb P(B\\leq t)\\mathrm d \\tau\\right]\n    \\end{aligned}\n\\end{equation}\n</code></pre> \\[ \\begin{aligned}     \\frac{\\partial ^2\\Pi(x, t)}{\\partial x\\partial t} =     &amp; -(p-s)\\mathbb E_{Q, B, L}\\left[D(t)|Q(t)\\leq x\\right]f_{Q(t)}(x) \\\\     &amp; + h\\mathbb P(t &lt; B + L) - h\\mathbb E_{B, L} \\\\     &amp; \\times \\left[\\int_{t}^\\mathbb{B+L}\\mathbb E_Q\\left[D(t)|Q(t) - Q(\\tau)\\leq x, B\\leq t, L\\right]\\right. \\\\     &amp; \\color{magenta} \\times \\left.\\vphantom{\\int_t^{B+L}} f_{Q(t) - Q(\\tau) | B\\leq t}(x)\\mathbb P(B\\leq t)\\mathrm d \\tau\\right] \\end{aligned} \\]"},{"location":"latex/tables/tabular/","title":"tabular\u73af\u5883","text":"<p><code>tabular</code>\u73af\u5883\u662f\\(\\LaTeX{}\\)\u7528\u4e8e\u521b\u5efa\u8868\u683c\u7684\u73af\u5883\u3002</p>"},{"location":"latex/tables/tabular/#_1","title":"\u57fa\u672c\u4f7f\u7528","text":"<p>\u5982\u4e0b\u4ee3\u7801\u6f14\u793a\u4e86<code>tabular</code>\u8bed\u53e5\u7684\u4f7f\u7528\u65b9\u6cd5,\u751f\u6210\u4e00\u4e2a3\u884c3\u5217\u7684\u8868\u683c\u3002</p> <p>tabular\u57fa\u672c\u4f7f\u7528</p> tex\u4ee3\u7801\u6e32\u67d3\u7ed3\u679c <pre><code>\\begin{tabular}{|c|c|c|}\n    \\hline 2    &amp; 9     &amp; 4     \\\\\n    \\hline 7    &amp; 5     &amp; 3     \\\\\n    \\hline 6    &amp; 1     &amp; 8     \\\\\n    \\hline\n\\end{tabular}\n</code></pre> <p></p>"},{"location":"latex/tables/tabular/#_2","title":"\u5bfc\u8a00\u533a","text":"<p><code>\\begin{tabular}</code>\u5176\u540e\u7d27\u8ddf\u7684\u4e00\u5bf9\u62ec\u53f7\u5185\u662f\u5bfc\u8a00\u533a\uff0c\u5bfc\u8a00\u533a\u89c4\u5b9a\u4e86\u5355\u5143\u683c\u7684\u7eb5\u5411\u8fb9\u6846\u548c\u5355\u5143\u683c\u5185\u5143\u7d20\u7684\u5bf9\u9f50\u65b9\u5f0f\u3002</p> <ul> <li><code>l</code>\u3001<code>c</code>\u3001<code>r</code>\u5206\u522b\u5bf9\u5e94\u5de6\u5bf9\u9f50\uff0c\u5c45\u4e2d\uff0c\u53f3\u5bf9\u9f50</li> <li><code>|</code>\u3001<code>||</code>\u5bf9\u5e94\u8868\u683c\u7eb5\u5411\u6846\u7ebf\u7c7b\u578b\uff08\u5355\u7ebf\u6216\u53cc\u7ebf\uff09</li> <li><code>@{exp}</code>\u6307\u5b9a\u63d2\u5165\u5230\u5217\u4e2d\u7684\u6587\u672c</li> <li><code>*{n}{pre}</code>\u6307\u91cd\u590d<code>pre</code>\u5185\u5bb9<code>n</code>\u6b21</li> <li><code>p{len}</code>\u5c06\u5bf9\u5e94\u7684\u5217\u653e\u5165\u4e00\u4e2aparbox\u4e2d</li> </ul> <p>\u6839\u636e\u5982\u4e0a\u8868\u8ff0\uff0c\u5bfc\u8a00\u533a<code>{|c|c|c|}</code>\u7b49\u4ef7\u4e8e<code>{*{3}{|c}|}</code></p> <p>\u5bfc\u8a00\u533a</p> tex\u4ee3\u7801\u6e32\u67d3\u7ed3\u679c <pre><code>\\begin{tabular}{||l|c|r||}\n    \\hline 2    &amp; 91    &amp; 4     \\\\\n    \\hline 71   &amp; 5     &amp; 32    \\\\\n    \\hline 652  &amp; 251   &amp; 89    \\\\\n    \\hline\n\\end{tabular}\n</code></pre> <p></p>"},{"location":"latex/tables/tabular/#_3","title":"\u5408\u5e76\u5355\u5143\u683c","text":"<p>\u6a2a\u5411\u5408\u5e76\u5355\u5143\u683c\u53ef\u4ee5\u4f7f\u7528<code>\\multicolumn</code>\u547d\u4ee4\uff0c\u7eb5\u5411\u5408\u5e76\u5355\u5143\u683c\u9700\u8981\u4f7f\u7528<code>multirow</code>\u5b8f\u5305\u4e2d\u7684<code>\\multirow</code>\u547d\u4ee4\uff1a</p> <ul> <li><code>\\multicolumn</code>\u547d\u4ee4\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u5408\u5e76\u5217\u7684\u6570\u91cf\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5408\u5e76\u540e\u5355\u5143\u683c\u7684\u5bfc\u8a00\u5217</li> <li><code>\\multirow</code>\u547d\u4ee4\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u5408\u5e76\u884c\u7684\u6570\u91cf\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9aLaTeX\u81ea\u884c\u8bbe\u7f6e\u5bbd\u5ea6\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u4e3a\u5355\u5143\u683c\u5185\u5bb9</li> </ul> <p>\u5408\u5e76\u5355\u5143\u683c</p> tex\u4ee3\u7801\u6e32\u67d3\u7ed3\u679c <pre><code>\\begin{tabular}{|ccc|}\n    \\hline\n    2   &amp; 9     &amp; 4\\\\\n    7   &amp; \\multicolumn{2}{c|} {\\multirow{2}*{{?}}} \\\\\n    6   &amp;       &amp;\\\\\n    \\hline\n\\end{tabular}\n</code></pre> <p></p>"},{"location":"latex/tables/tabular/#_4","title":"\u4e09\u7ebf\u8868","text":"<p>LaTeX\u4e2d\u4f7f\u7528\u4e09\u7ebf\u8868\u9700\u8981\u7528\u5230<code>booktabs</code>\u5b8f\u5305\uff0c\u52a0\u5165\u5b8f\u5305\u540e\u53ef\u4ee5\u4f7f\u7528<code>\\toprule</code>\u3001<code>\\midrule</code>\u4e0e<code>\\bottomrule</code>\u753b\u7ebf\uff08\u4e0d\u5e94\u518d\u4f7f\u7528<code>\\hline</code>\u547d\u4ee4\uff09\u3002</p> <p>\u4e09\u7ebf\u8868</p> tex\u4ee3\u7801\u6e32\u67d3\u7ed3\u679c <pre><code>\\begin{tabular}{ccc}\n    \\toprule\n    2   &amp; 91    &amp; 4     \\\\\n    \\midrule\n    71  &amp; 5     &amp; 32    \\\\\n    652 &amp; 251   &amp; 89    \\\\\n    \\bottomrule\n\\end{tabular}\n</code></pre> <p></p>"},{"location":"latex/tables/tabular/#_5","title":"\u989c\u8272\u586b\u5145","text":"<p>\u989c\u8272\u586b\u5145\u9700\u8981\u4f7f\u7528<code>colortbl</code>\u5b8f\u5305\uff0c\u4f7f\u7528<code>\\rowcolor</code>\u547d\u4ee4\u6307\u5b9a\u884c\u7684\u586b\u5145\u989c\u8272\uff0c\u6216<code>\\cellcolor</code>\u547d\u4ee4\u6307\u5b9a\u5355\u5143\u683c\u7684\u586b\u5145\u989c\u8272\u3002\u586b\u5145\u989c\u8272\u53ef\u4ee5\u9009\u62e9\u7070\u5ea6<code>[gray]</code>\u6216\u5f69\u8272<code>[rgb]</code>\u3002</p> <p>\u989c\u8272\u586b\u5145</p> tex\u4ee3\u7801\u6e32\u67d3\u7ed3\u679c <pre><code>\\begin{tabular}{ccc}\n    \\rowcolor[gray]{0.6} 2    &amp; 9     &amp; 4     \\\\\n    \\rowcolor[gray]{0.7} 7    &amp; 5     &amp; 3     \\\\\n    \\rowcolor[gray]{0.8} 6    &amp; 1     &amp; 8     \\\\\n\\end{tabular}\n</code></pre> <p></p>"},{"location":"latex/tables/tabular/#_6","title":"\u659c\u7ebf\u8868\u5934","text":"<p>\u659c\u7ebf\u8868\u5934\u7531<code>diagbox</code>\u5b8f\u5305\u63d0\u4f9b\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a</p> <p>\u659c\u7ebf\u8868\u5934</p> tex\u4ee3\u7801\u6e32\u67d3\u7ed3\u679c <pre><code>\\begin{tabular}{|l|ccc|}\n    \\hline\n    \\diagbox{Time}{Room}{Day} &amp; Mon &amp; Tue &amp; Wed \\\\\n    \\hline\n    Morning &amp; used &amp; used &amp; \\\\\n    Afternoon &amp; &amp; used &amp; used \\\\\n    \\hline\n\\end{tabular}\n</code></pre> <p></p>"},{"location":"latex/tikz/pgfplots/","title":"TikZ \u56fe\u7247","text":"<p><code>tikzpicture</code> \u73af\u5883\u5b9a\u4e49\u4e86\u4e00\u5f20TikZ\u56fe\u7247\u3002</p>"},{"location":"latex/tikz/pgfplots/#pgfplots","title":"pgfplots\u5b8f\u5305","text":"<p>\u501f\u52a9\u5b8f\u5305<code>pgfplots</code>\uff0c\u53ef\u4ee5\u4f7f\u7528TikZ\u7ed8\u5236\u6298\u7ebf\u56fe\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p>pgfplots\u7ed8\u5236\u6298\u7ebf\u56fe</p> tex\u4ee3\u7801\u6e32\u67d3\u7ed3\u679c <pre><code>\\begin{figure}[htbp]\n    \\begin{tikzpicture}\n        \\begin{axis}[sharp plot]\n            \\addplot coordinates{(0, 5)(1, 9)(2, 7)(3, 4)(4, 10)};\n        \\end{axis}\n    \\end{tikzpicture}\n\\end{figure}\n</code></pre> <p></p> <p><code>axis</code>\u63a7\u5236\u4e00\u4e2a\u56fe\u50cf\uff0c<code>\\begin{axis}</code>\u540e\u53ef\u4ee5\u52a0\u4e00\u5bf9\u65b9\u62ec\u53f7\uff0c\u7528\u4e8e\u8bbe\u5b9a\u56fe\u7247\u7684\u53c2\u6570\u3002<code>addplot</code>\u63a7\u5236\u56fe\u50cf\u4e2d\u7684\u4e00\u4e2a\u5e8f\u5217\uff0c\u5176\u540e\u540c\u6837\u53ef\u4ee5\u52a0\u4e00\u5bf9\u65b9\u62ec\u53f7\u7528\u4e8e\u63a7\u5236\u53c2\u6570\u3002</p>"},{"location":"latex/tikz/pgfplots/#axis","title":"<code>axis</code>\u73af\u5883","text":"<p><code>axis</code>\u73af\u5883\u53ef\u7528\u7684\u53c2\u6570\u5982\u4e0b\u6240\u5217\uff1a</p> <ul> <li><code>[sharp plot, smooth]</code>\u7b49\uff0c\u8868\u660e\u6298\u7ebf\u56fe\u7684\u66f2\u7ebf\u662f\u5426\u7ecf\u8fc7\u5e73\u6ed1</li> <li><code>xlabel</code>\u4e0e<code>ylabel</code>\uff0c\u63a7\u5236\u5750\u6807\u8f74\u7684\u6807\u6ce8\u3002</li> <li><code>title</code>\u63a7\u5236\u56fe\u50cf\u7684\u6807\u9898</li> <li><code>xmode</code>\u4e0e<code>ymode</code>\u63a7\u5236\u5750\u6807\u8f74\u662f\u7ebf\u6027\u5750\u6807\u8f74\uff08<code>normal</code>\uff09\u8fd8\u662f\u5bf9\u6570\u5750\u6807\u8f74\uff08<code>log</code>\uff09</li> <li><code>xtick distance</code>\u4e0e<code>ytick distance</code>\u63a7\u5236\u5750\u6807\u8f74\u523b\u5ea6\u5927\u5c0f</li> <li><code>xmin, xmax</code>\u4e0e<code>ymin, ymax</code>\u63a7\u5236\u5750\u6807\u8f74\u7684\u8303\u56f4<ul> <li>\u5f53\u6307\u5b9a\u5750\u6807\u8f74\u8303\u56f4\u65f6\uff0c\u5982\u679c<code>enlargelimits</code>\u6307\u5b9a\u4e3a<code>true</code>\uff0c\u5219\u5750\u6807\u8f74\u4f1a\u81ea\u52a8\u653e\u5927\u4ee5\u7b26\u5408\u8f93\u5165\u6570\u636e</li> </ul> </li> </ul> <p>\u5982\u4e0b\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684\u56fe\u50cf\uff0cx\u5750\u6807\u8f74\u4e3a\u7ebf\u6027\uff0cy\u5750\u6807\u8f74\u4e3a\u5bf9\u6570\uff1a</p> <p>axis\u53c2\u6570\u793a\u4f8b</p> tex\u4ee3\u7801\u6e32\u67d3\u7ed3\u679c <pre><code>\\begin{figure}[htbp]\n    \\begin{tikzpicture}\n        \\begin{axis}[\n            xlabel=Year,\n            ylabel=Inventory,\n            xmin=2019, xmax=2021,\n            ymin=100, ymax=1000,\n            xtick distance=1,\n            title=Inventory Graph,\n            xmode=normal, ymode=log\n        ]\n        \\end{axis}\n    \\end{tikzpicture}\n\\end{figure}\n</code></pre> <p></p> <p>\u6709\u5173\u66f4\u591a\u53c2\u6570\uff0c\u8bf7\u53c2\u89c1pgfplots \u624b\u518c</p>"},{"location":"latex/tikz/pgfplots/#addplot","title":"<code>\\addplot</code>\u547d\u4ee4","text":"<p><code>\\addplot</code>\u547d\u4ee4\u53ef\u4ee5\u5411\u56fe\u50cf\u4e2d\u6dfb\u52a0\u6298\u7ebf\u56fe\u6216\u51fd\u6570\u3002\u5982\u4e0b\u7ed8\u5236\u4e00\u4e2a\u6298\u7ebf\u56fe\u53ca\u5bf9\u5e94\u7684\u62df\u5408\u7ed3\u679c\uff1a</p> <p>axis\u53c2\u6570\u793a\u4f8b</p> tex\u4ee3\u7801\u6e32\u67d3\u7ed3\u679c <pre><code>\\begin{figure}[htbp]\n    \\begin{tikzpicture}\n        \\begin{axis}[\n            xlabel=$x$ variable,\n            ylabel=$y$ variable,\n            xmin=0, xmax=7,\n            title=Regression Example,\n        ]\n            \\addplot coordinates{(0, 5)(1, 9)(2, 7)(3, 4)(4, 10)};\n            \\addlegendentry{\\small Data}\n            \\addplot [smooth, red]{0.5*x + 6};\n            \\addlegendentry{\\small Regressor}\n        \\end{axis}\n    \\end{tikzpicture}\n\\end{figure}\n</code></pre> <p></p> <p><code>\\addplot</code>\u6709\u5982\u4e0b\u53c2\u6570\uff1a</p> <ul> <li><code>smooth</code>\u5982\u679c\u5b58\u5728\uff0c\u7ed8\u5236\u4e0d\u5305\u542b\u70b9\u5750\u6807\u7684\u5e73\u6ed1\u56fe\u50cf</li> <li><code>coordinates</code>\u6307\u5b9a\u6298\u7ebf\u56fe\u7684\u5750\u6807\u70b9</li> <li><code>[color]</code>\u6307\u660e\u989c\u8272</li> </ul> <p>\u5982\u679c\u4e0d\u4f7f\u7528<code>coordinates</code>\uff0c<code>\\addplot</code>\u53ef\u4ee5\u7528\u4e8e\u7ed8\u5236\u51fd\u6570\u56fe\u50cf\u3002</p>"},{"location":"math/","title":"\u6570\u5b66","text":"<p>\u4ee5\u4e0b\u6574\u7406\u4e86\u6570\u5b66\u8bfe\u4e0a\u7684\u5185\u5bb9</p> <ol> <li>\u5fae\u79ef\u5206</li> <li>\u7ebf\u6027\u4ee3\u6570</li> <li>\u79bb\u6563\u6570\u5b66</li> <li>\u6982\u7387\u8bba\u4e0e\u6570\u7406\u7edf\u8ba1</li> <li>\u8fd0\u7b79\u5b66</li> <li>\u5bf9\u7b56\u3001\u51b3\u7b56\u4e0e\u6392\u961f\u8bba</li> <li>\u52a8\u6001\u7cfb\u7edf\u5206\u6790\u4e0e\u63a7\u5236</li> <li>\u751f\u4ea7\u4e0e\u8fd0\u4f5c\u7ba1\u7406</li> <li>\u968f\u673a\u8fc7\u7a0b</li> <li>\u51f8\u4f18\u5316</li> </ol>"},{"location":"math/#_2","title":"\u6269\u5c55\u9605\u8bfb","text":""},{"location":"math/#_3","title":"\u6570\u5b66\u5206\u6790","text":"<ul> <li>\u521d\u4e2d\u7ade\u8d5b:\\(x+y+z=1\\)\uff0c\u6c42\\(xy+2yz+3zx\\)\u7684\u6700\u5927\u503c? - \u4e88\u4e00\u4eba\u7684\u56de\u7b54 - \u77e5\u4e4e</li> <li>\u628a\\([-0.5,0.5]\\)\u5185\u6240\u6709\u5b9e\u6570\u76f8\u52a0\uff0c\u5f97\u51fa\u7684\u7ed3\u679c\u662f\\(0\\)\u5417\uff1f - Be2SiO4\u7684\u56de\u7b54 - \u77e5\u4e4e</li> <li>\u5982\u4f55\u6c42\u5fae\u5206\u65b9\u7a0b \\(y'' + y = 0\\) \u7684\u901a\u89e3\uff1f - \u4e88\u4e00\u4eba\u7684\u56de\u7b54 - \u77e5\u4e4e</li> <li>\u4e3a\u4ec0\u4e48 \\(\\ln x\\) \u6c42\u5bfc\u662f \\(1/x\\)\uff1f - \u8881\u8d85\u7684\u56de\u7b54 - \u77e5\u4e4e</li> <li>\\(\\ln x (x&gt;1, x\\in \\mathbb Z)\\) \u53ef\u80fd\u662f\u6709\u7406\u6570\u5417\uff1f - \u4e88\u4e00\u4eba\u7684\u56de\u7b54 - \u77e5\u4e4e</li> <li>\u79ef\u5206\u7b26\u53f7\u5185\u53d6\u5fae\u5206\u662f\u4e00\u79cd\u4ec0\u4e48\u65b9\u6cd5\uff1f - \u77e5\u4e4e</li> <li>\u4e00\u6761\u4ece\\((0,0)\\)\u51fa\u53d1\u7684\u957f\u5ea6\u4e3a\\(1\\)\u7684\u66f2\u7ebf\uff0c\u56f4\u7ed5\\(x\\)\u8f74\u65cb\u8f6c\u4ea7\u751f\u7684\u65cb\u8f6c\u4f53\u7684\u6700\u5927\u4f53\u79ef\u662f\u591a\u5c11\uff1f - \u865a\u8c03\u5b50\u7684\u56de\u7b54 - \u77e5\u4e4e</li> </ul>"},{"location":"math/#_4","title":"\u6982\u7387\u8bba\u4e0e\u968f\u673a\u8fc7\u7a0b","text":"<ul> <li>\u6570\u5b66\u671f\u671b\u5927\u4e8e\u96f6\u7684\u6e38\u620f\u4e00\u5b9a\u80fd\u8d5a\u94b1\u5417 - \u9648\u58a8\u77b3nono\u7684\u6587\u7ae0 - \u77e5\u4e4e</li> <li>\u7532\u4e59\u4e24\u4eba\u4e0b\u56f4\u68cb\uff0c\u7532\u80dc\u7684\u6982\u7387\u4e3a\\(a\\)\uff0c\u4e59\u80dc\u7684\u6982\u7387\u4e3a\\(b\\)\uff0c\\(a+b=1\\)\uff0c\u6bd4\u5bf9\u65b9\u591a\u8d62\u4e24\u5c40\u8005\u83b7\u80dc\uff0c\u6c42\u7532\u8d62\u7684\u6982\u7387? - Dylaaan\u7684\u56de\u7b54 - \u77e5\u4e4e</li> <li>\u5f3a\u5927\u6570\u5f8b\uff08SLLN) - \u4f55\u5bb6\u5fd7\u7684\u6587\u7ae0 - \u77e5\u4e4e</li> <li>\u5982\u679c\u6211\u6709 \\(2^{-n}\\) \u6982\u7387\u83b7\u5f97 \\(2^n\\) \u5143\uff0c\u90a3\u83b7\u5f97\u94b1\u7684\u6570\u5b66\u671f\u671b\u503c\u5e94\u8be5\u662f\u65e0\u7a77\uff0c\u4f46\u5b9e\u9645\u4e0d\u662f\u8fd9\u6837\uff0c\u4e3a\u4ec0\u4e48\uff1f - ClefRybak\u7684\u56de\u7b54 - \u77e5\u4e4e</li> </ul>"},{"location":"math/#_5","title":"\u7ebf\u6027\u4ee3\u6570","text":"<ul> <li>\u5982\u4f55\u5224\u5b9a\u4e0d\u53ef\u7ea6\u591a\u9879\u5f0f\uff1f - \u5982\u8564\u7684\u56de\u7b54 - \u77e5\u4e4e</li> <li>\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e00\uff1a\u57fa\u7840\u53d8\u6362\u77e9\u9635\u603b\u7ed3(\u7f29\u653e\uff0c\u65cb\u8f6c\uff0c\u4f4d\u79fb)</li> </ul>"},{"location":"math/#_6","title":"\u79bb\u6563\u6570\u5b66\u4e0e\u6570\u8bba","text":"<ul> <li>\u4e00\u822c\u4e00\u5143\u4e94\u6b21\u65b9\u7a0b\u6ca1\u6709\u6839\u5f0f\u89e3\u7684\u79d8\u5bc6\u7a76\u7adf\u5728\u54ea\u91cc\uff1f\u82b1\u8d39\u4eba\u7c7b\u4e09\u767e\u5e74.? - Geometrie\u7684\u56de\u7b54 - \u77e5\u4e4e</li> <li>\u7ec4\u5408\u6570\u5b66\u5b66\u4e60\u7b14\u8bb0\uff08\u5341\uff09 - sola\u7684\u6587\u7ae0 - \u77e5\u4e4e</li> <li>ACM\u2014\u2014\u5e38\u89c1\u7684\u51e0\u79cd\u5206\u89e3\u8d28\u56e0\u5b50\u7684\u65b9\u6cd5 - \u4e25\u683c\u9e3d\u7684\u6587\u7ae0 - \u77e5\u4e4e</li> </ul>"},{"location":"math/#_7","title":"\u5176\u4ed6","text":"<ul> <li>\u4e94\u4e2a\u56da\u72af\u5148\u540e\u4ece100\u9897\u7eff\u8c46\u4e2d\u6293\u7eff\u8c46\u3002\u6293\u5f97\u6700\u591a\u548c\u6700\u5c11\u7684\u4eba\u5c06\u88ab\u5904\u6b7b\uff0c\u4e0d\u80fd\u4ea4\u6d41\uff0c\u53ef\u4ee5\u6478\u51fa\u5269\u4e0b\u7eff\u8c46\u7684\u6570\u91cf\uff0c\u8c01\u7684\u5b58\u6d3b\u51e0\u7387\u6700\u5927\uff1f - \u66fe\u52a0\u7684\u56de\u7b54 - \u77e5\u4e4e</li> <li>1000\u6876\u6c34\uff0c\u5176\u4e2d\u4e00\u6876\u6709\u6bd2\uff0c\u732a\u559d\u6bd2\u6c34\u540e\u4f1a\u572815\u5206\u949f\u5185\u6b7b\u53bb\uff0c\u60f3\u7528\u4e00\u4e2a\u5c0f\u65f6\u627e\u5230\u8fd9\u6876\u6bd2\u6c34\uff0c\u81f3\u5c11\u9700\u8981\u51e0\u5934\u732a\uff1f - \u82d7\u534e\u680b\u7684\u56de\u7b54 - \u77e5\u4e4e</li> <li>\u9664\u4e86 3\uff0c4\uff0c5 \u4ee5\u5916\u662f\u5426\u8fd8\u6709\u522b\u7684\u4e09\u89d2\u5f62\uff0c\u5b83\u7684\u4e09\u6761\u8fb9\u662f\u8fde\u7eed\u81ea\u7136\u6570\uff0c\u5b83\u7684\u9762\u79ef\u4e5f\u662f\u81ea\u7136\u6570\uff1f - Pandora Eartha\u7684\u56de\u7b54 - \u77e5\u4e4e</li> <li>\u72b6\u6001\u7a7a\u95f4\u8868\u8fbe\u5f0f\u7684\u89e3 - Anonymity67\u7684\u6587\u7ae0 - \u77e5\u4e4e</li> <li>\u5982\u4f55\u6c42\u6570\u5217\\(a_{n+1} = a_n^2 - 2a_n\\)? - Reuental\u7684\u56de\u7b54 - \u77e5\u4e4e</li> </ul>"},{"location":"math/applied-statistics/","title":"\u5e94\u7528\u6570\u7406\u7edf\u8ba1","text":"<p>\u7edf\u8ba1\u5b66\u4e2d\u7684\u4e24\u4e2a\u6982\u5ff5\uff1a\u6837\u672c\u4e0e\u603b\u4f53\u3002</p> <ul> <li>\u6982\u7387\uff1a\u5728\u603b\u4f53\u4e2d\u8fdb\u884c\u62bd\u6837\uff0c\u5f97\u5230\u6837\u672c</li> <li>\u7edf\u8ba1\uff1a\u6839\u636e\u6837\u672c\u7684\u7edf\u8ba1\u6307\u6807\u5bf9\u603b\u4f53\u8fdb\u884c\u63a8\u65ad</li> </ul>"},{"location":"math/applied-statistics/#_2","title":"\u8bfe\u7a0b\u5185\u5bb9","text":"<ul> <li>\u6709\u76d1\u7763\u6a21\u578b<ul> <li>\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u3001\u5e7f\u4e49\u7ebf\u6027\u56de\u5f52\u6a21\u578b</li> <li>Discriminant analysis</li> <li>Cross validation and boostrap</li> <li>Regularization</li> <li>Survival analysis</li> <li>Tree-based methods</li> </ul> </li> <li>\u65e0\u76d1\u7763\u6a21\u578b<ul> <li>\u805a\u7c7b\u5206\u6790</li> <li>\u8d1d\u53f6\u65af\u5206\u6790</li> <li>Gibbs sampling and MCMC</li> </ul> </li> </ul>"},{"location":"math/applied-statistics/#_3","title":"\u6982\u7387\u8bba\u56de\u987e","text":"<ol> <li>\u6761\u4ef6\u6982\u7387\uff1a\\(P(A|B) = P(AB) / P(B)\\)</li> <li>\u4e8b\u4ef6\u72ec\u7acb\u6027\uff1a\\(P(A) = P(A|B)\\)</li> <li>\u8d1d\u53f6\u65af\u5b9a\u7406\uff1a\\(P(A_i|B) = P(A_i) P(B|A_i) / P(B)\\)</li> <li>\u968f\u673a\u53d8\u91cf<ol> <li>\u79bb\u6563\u968f\u673a\u53d8\u91cf </li> </ol> </li> </ol>"},{"location":"math/convex-optimization/","title":"\u51f8\u4f18\u5316","text":""},{"location":"math/convex-optimization/#_2","title":"\u76ee\u5f55","text":"<ul> <li>\u51f8\u96c6</li> </ul>"},{"location":"math/convex-optimization/#notations-and-definitions","title":"Notations and Definitions","text":"<p>\u672c\u8282\u5217\u4e3e\u51f8\u4f18\u5316\u4e2d\u6240\u7528\u7b26\u53f7\u7684\u8868\u8ff0\uff0c\u5e76\u501f\u6b64\u56de\u987e\u76f8\u5173\u7684\u6570\u5b66\u6982\u5ff5</p>"},{"location":"math/convex-optimization/#_3","title":"\u6570\u57df","text":"<ul> <li>\\(\\mathbb R, \\mathbb N, \\mathbb Z, \\mathbb C\\)\uff1a\u5b9e\u6570\u57df\u3001\u81ea\u7136\u6570\u57df\u3001\u6574\u6570\u57df\u3001\u590d\u6570\u57df</li> <li>\u4e0b\u6807 $ {}+, {}} $ \u5728\u5b9e\u6570\u57df\u548c\u5b9e\u5411\u91cf\u57df\u4e0a\u5206\u522b\u8868\u793a\u975e\u8d1f\u3001\u4e25\u683c\u6b63\uff0c\u5728\u5b9e\u77e9\u9635\u57df\u4e0a\u8868\u793a\u534a\u6b63\u5b9a\u3001\u6b63\u5b9a\u3002"},{"location":"math/convex-optimization/#_4","title":"\u77e9\u9635\u4e0e\u5411\u91cf","text":"<p>\\(A\\in \\mathbb R^{m\\times n}\\)\u8868\u793a\\(A\\)\u662f\u4e00\u4e2a\\(m\\)\u884c\\(n\\)\u5217\u7684\u5b9e\u77e9\u9635\uff0c\u5176\u4e2d\u7684\u5143\u7d20\u4e3a\\(a_{ij}\\)\uff0c\u67d0\u5217\uff08\u6216\u67d0\u884c\uff09\u7684\u5207\u7247\u4e3a\\(A_{\\cdot j}\\)</p> <p>\\(\\boldsymbol x\\in \\mathbb R^m\\)\u8868\u793a\\(\\boldsymbol x\\)\u662f\u4e00\u4e2a\\(m\\)\u7ef4\u7684\u5b9e\u5411\u91cf\uff0c\\(\\boldsymbol 1\\)\u8868\u793a\u6240\u6709\u5206\u91cf\u5747\u4e3a\\(1\\)\u7684\u5411\u91cf\u3002</p> <p>\u65b9\u9635\u662f\u884c\u6570\u4e0e\u5217\u6570\u76f8\u7b49\u7684\u77e9\u9635\uff0c\\(A\\in \\mathbb R^{n\\times n}\\)\u3002\u5bf9\u79f0\u77e9\u9635\u6ee1\u8db3\\(A^\\top = A\\)\uff0c\u53cd\u5bf9\u79f0\u77e9\u9635\u6ee1\u8db3\\(A^\\top = - A\\)\u3002\u6b63\u5b9a\u77e9\u9635\u6ee1\u8db3\\(\\forall x\\in \\mathbb R^n, x^\\top Ax &gt; 0\\)\uff0c\u8bb0\u4f5c\\(A\\succ 0\\)\uff1b\u534a\u6b63\u5b9a\u77e9\u9635\u6ee1\u8db3\\(\\forall x\\in \\mathbb R^n, x^\\top Ax \\geq 0\\)\uff0c\u8bb0\u4f5c\\(A\\succeq 0\\)\u3002\u5bf9\u4e8e\u590d\u65b9\u9635\\(A\\in \\mathbb C^{n\\times n}\\)\uff0c\u5b9a\u4e49\u5171\u8f6d\u8f6c\u7f6e\uff08Hermitian\uff09\u77e9\u9635\u4e3a\\(A^* = \\overline {A^\\top}\\)\u3002\u5168\u4f53\\(k\\)\u9636\u5bf9\u79f0\u77e9\u9635\u7684\u96c6\u5408\u4e3a\\(\\mathbb S^k\\)\u3002</p> <p>\u77e9\u9635\u7684\u8ff9\u662f\u5bf9\u89d2\u7ebf\u4e0a\u5404\u4e2a\u5143\u7d20\u4e4b\u548c</p> \\[ \\mathrm {tr}(A) = \\sum_{i=1}^n a_{ii} \\] \u8ff9\u7684\u6027\u8d28 <ol> <li>\\(\\mathrm {tr}(A) = \\mathrm {tr}(A^\\top)\\)</li> <li>\\(\\mathrm {tr}(A+B) = \\mathrm {tr}(A) + \\mathrm {tr}(B)\\)</li> <li>\\(\\mathrm {tr}(t\\cdot A) = t\\cdot \\mathrm {tr}(A)\\)</li> <li>\\(\\mathrm {tr}(AB) = \\mathrm {tr}(BA)\\)\uff08\u4e0d\u8981\u6c42\\(A, B, \\cdots\\)\u4e3a\u65b9\u9635\uff0c\u53ea\u9700\u8981\u6ee1\u8db3\u8fd0\u7b97\u7ed3\u679c\u4e3a\u65b9\u9635\u5373\u53ef\uff1b\u5bf9\u4e8e\u591a\u4e2a\u5143\u7d20\uff0c\u4e58\u6cd5\u987a\u5e8f\u9700\u8981\u6ee1\u8db3\u8f6e\u6362\u5bf9\u79f0\u6027\u624d\u80fd\u4fdd\u8bc1\u7b49\u5f0f\u6210\u7acb\uff09</li> </ol> <p>\u5b9a\u4e49\u4e24\u4e2a\u77e9\u9635\\(X, Y\\)\u7684\u5185\u79ef\u4e3a\u5176\u4e58\u79ef\u7684\u8ff9\\(\\mathrm{tr}(XY)\\)</p>"},{"location":"math/convex-optimization/#_5","title":"\u8303\u6570","text":"<p>\u8303\u6570\u662f\u6ee1\u8db3\u4ee5\u4e0b\u6027\u8d28\u7684\u51fd\u6570\\(f\\)</p> <ol> <li>\u975e\u8d1f\u6027\uff1a\\(f(\\boldsymbol{x}) \\geq 0\\)</li> <li>\u89c4\u8303\u6027\uff1a\\(f(\\boldsymbol{x}) = 0 \\Leftrightarrow \\boldsymbol x = 0\\)</li> <li>\u9f50\u6b21\u6027\uff1a\\(f(t\\cdot \\boldsymbol{x}) = t\\cdot f(\\boldsymbol{x})\\)</li> <li>\u4e09\u89d2\u4e0d\u7b49\u5f0f\uff1a\\(f(\\boldsymbol x + \\boldsymbol y)\\leq f(\\boldsymbol x) + f(\\boldsymbol y)\\)</li> </ol> \u5e38\u89c1\u7684\u8303\u6570 <ol> <li>1-\u8303\u6570\uff1a\\(f(\\boldsymbol{x}) = \\sum_{i=1}^n \\left|x_i\\right|\\)</li> <li>2-\u8303\u6570\uff1a\\(f(\\boldsymbol{x}) = \\sqrt{\\sum_{i=1}^n \\left|x_i^2\\right|}\\)</li> <li>\\(\\infty\\)-\u8303\u6570\uff1a\\(f(\\boldsymbol{x}) = \\sqrt[\\infty]{\\sum_{i=1}^n \\left|x_i^\\infty\\right|}\\)</li> <li>0-\u8303\u6570\uff08\u4e0d\u6ee1\u8db3\u5b9a\u4e493\uff0c\u56e0\u6b64\u4e0d\u662f\u8303\u6570\uff09\uff1a\\(f(\\boldsymbol{x}) = \\sum_{i=1}^n \\boldsymbol{1}_{\\{x_i \\not = 0\\}}\\)</li> <li>\\(l_p\\)-\u8303\u6570\uff1a\\(f(\\boldsymbol{x}) = \\sqrt[p]{\\sum_{i=1}^n \\left|x_i^p\\right|}\\)</li> <li>Frobenius\u8303\u6570\uff1a\\(f(A) = \\sqrt{\\sum_i\\sum_j a_{ij}^2} = \\sqrt{\\mathrm{tr}(A^\\top A)}\\)</li> </ol> <p>\u8303\u6570\u7b49\u4ef7\u5b9a\u7406\uff1a\u5bf9\u4e8e\u4e24\u4e2a\u8303\u6570\\(f, g\\)\uff0c\u5b58\u5728\u6b63\u5e38\u6570\\(c\\)\u4f7f\u5f97\\(\\forall \\boldsymbol{x}, f(\\boldsymbol{x}) \\leq cg(\\boldsymbol{x})\\)</p> <p>\u8bbe\\(f\\)\u4e3a\\(\\mathbb R^n\\)\u4e0a\u7684\u8303\u6570\uff0c\u5bf9\u5076\u8303\u6570\\(f_*\\)\u5b9a\u4e49\u5982\u4e0b</p> \\[ f_*(\\boldsymbol{x}) = \\sup_{\\boldsymbol{x}} \\{\\boldsymbol{z^\\top x} | f(\\boldsymbol{x}) \\leq 1\\} \\] \u5bf9\u5076\u8303\u6570 <ul> <li>\u5bf9\u5076\u8303\u6570\u7684\u5bf9\u5076\u8303\u6570\u4e0d\u4e00\u5b9a\u662f\u539f\u8303\u6570\u3002</li> <li> <p>\\(p\\)-\u8303\u6570\u7684\u5bf9\u5076\u8303\u6570\u662f\\(q\\)-\u8303\u6570\uff0c\u6ee1\u8db3</p> \\[ \\frac{1}{p} + \\frac{1}{q} = 1\\qquad p, q\\geq 1 \\] </li> </ul> <p>\u6839\u636e\u8303\u6570\u53ef\u4ee5\u5b9a\u4e49\u7403\u7684\u6982\u5ff5</p> \u7403 <p>\u7ed9\u5b9a\\(\\mathbb R^n\\)\u7a7a\u95f4\u4e2d\u7684\u8303\u6570\\(\\Vert\\cdot\\Vert\\)\uff0c\\(B(x, r)\\)\u8868\u793a\u8303\u6570\\(\\Vert \\cdot\\Vert\\)\u4e2d\u7684\uff08\u5f00\uff09\u7403\uff0c\u5373</p> \\[ B(x, r) = \\{y | \\Vert y - x\\Vert &lt; r\\} \\] <p>\\(\\bar B(x, r)\\)\u8868\u793a\u4e00\u4e2a\u95ed\u7403</p> \\[ \\bar B(x, r) = \\{y | \\Vert y - x\\Vert \\leq r\\} \\]"},{"location":"math/convex-optimization/#_6","title":"\u96c6\u5408","text":"<p>\u8bbe\u96c6\u5408\\(C\\subseteq \\mathbb R^n, x\\in C\\)\uff0c\u4f7f\u75282-\u8303\u6570\u5ea6\u91cf\u8ddd\u79bb\u3002</p> <ul> <li>\u82e5\\(\\exists r \\in \\mathbb R_{, B(x, r)\\subseteq C\\)\uff0c\u79f0\\(x\\)\u4e3a\u5185\u70b9\u3002\u5168\u4f53\u5185\u70b9\u6784\u6210\u96c6\u5408\u7684\u5185\u90e8\\(C^\\circ\\)\uff0c\u663e\u7136\\(C^\\circ \\subseteq C\\)\u3002</li> <li>\u82e5\\(\\forall r\\in \\mathbb R_{+}, B(x, r)\\cap C \\not = \\varnothing, B(x, r) \\cap C^C \\not = \\varnothing\\)\uff0c\u79f0\\(x\\)\u4e3a\u8fb9\u754c\u70b9\u3002\u5168\u4f53\u8fb9\u754c\u70b9\u6784\u6210\u96c6\u5408\u7684\u8fb9\u754c\\(\\partial C\\)\u3002<ul> <li>\u6839\u636e\u8fb9\u754c\u70b9\u7684\u5b9a\u4e49\uff0c\u6709\\(\\partial C = \\partial C^C\\)\u3002</li> </ul> </li> <li>\u82e5\\(x\\)\u4e0d\u662f\u5185\u70b9\uff0c\u5219\\(x\\)\u4e3a\u8fb9\u754c\u70b9\uff0c\u5373\\(\\partial C \\cup C^\\circ = C, \\partial C\\cap C^\\circ = \\varnothing\\)\u3002</li> </ul> <p>\u82e5\u96c6\u5408\\(C\\)\u4e2d\u7684\u6240\u6709\u70b9\u90fd\u662f\u5185\u70b9\uff0c\u5373\\(C^\\circ = C\\)\uff0c\u79f0\\(C\\)\u4e3a\u5f00\u96c6\u3002\u82e5\\(C\\)\u4e0d\u662f\u5f00\u96c6\uff0c\u5219\\(C\\)\u4e3a\u95ed\u96c6\u3002\u5f00\u96c6\u7684\u8865\u96c6\u662f\u95ed\u96c6\u3002</p> <p>\u5b9a\u4e49\u95ed\u5305\u4e3a</p> \\[ \\mathbf{cl}C = \\{x \\in \\mathbb R^n| \\forall r\\in \\mathbb R_{++}, B(x, r)\\cap C\\not = \\varnothing\\} \\] <p>\u76f4\u89c2\u4e0a\uff0c\u95ed\u5305\u53ef\u4ee5\u7406\u89e3\u4e3a\\(C\\cup \\partial C^C\\)\uff0c\u5373\u96c6\u5408\u4e0e\u5176\u8865\u96c6\u7684\u8fb9\u754c\u7684\u5e76\u3002</p> <p>\\(\\varnothing, \\mathbb R^n\\)\u65e2\u662f\u5f00\u96c6\u4e5f\u662f\u95ed\u96c6\uff1a</p> <ul> <li>\\(\\varnothing\\)\u7684\u95ed\u5305\u4ecd\u4e3a\\(\\varnothing\\)\uff0c\u6240\u4ee5\u662f\u95ed\u96c6\uff1b\u7136\u800c\\(\\varnothing^\\circ = \\varnothing\\)\uff0c\u6240\u4ee5\u662f\u5f00\u96c6\u3002</li> <li>\\(\\varnothing^C = \\mathbb R^n\\)\uff0c\u6240\u4ee5\\(\\mathbb R^n\\)\u65e2\u662f\u5f00\u96c6\u4e5f\u662f\u95ed\u96c6\u3002</li> </ul>"},{"location":"math/convex-optimization/convex-set/","title":"\u51f8\u96c6","text":"<p>\u4ece\u76f4\u89c2\u610f\u4e49\u4e0a\u8bb2\uff0c\u51f8\u96c6\u5c31\u662f\u6ca1\u6709\u51f9\u8fdb\u53bb\u7684\u90e8\u5206\u7684\u96c6\u5408\u3002</p>"},{"location":"math/convex-optimization/convex-set/#_2","title":"\u5b9a\u4e49","text":""},{"location":"math/convex-optimization/convex-set/#_3","title":"\u76f4\u7ebf","text":"<p>\u8bbe\\(x_1 \\not = x_2\\)\u4e3a\\(\\mathbb R^n\\)\u4e0a\u7684\u4e24\u4e2a\u70b9\uff0c\u5219</p> <ul> <li>\\(y = \\theta x_1 + (1 - \\theta) x_2\\) \u5b9a\u4e49\u4e86\u4e00\u6761\u76f4\u7ebf\u3002</li> <li>\\(y = \\theta x_1 + (1 - \\theta) x_2, 0\\leq\\theta\\leq 1\\) \u5b9a\u4e49\u4e86\u4e00\u6761\u7ebf\u6bb5\u3002</li> </ul> <p>\u76f4\u7ebf\\(y = \\theta x_1 + (1 - \\theta) x_2\\)\u662f\u4e00\u6761\u4ece\\(x_2\\)\u51fa\u53d1\uff0c\u6cbf\u5411\u91cf\\(x_1 - x_2\\)\u65b9\u5411\u5ef6\u4f38\u7684\u76f4\u7ebf\u3002</p>"},{"location":"math/convex-optimization/convex-set/#_4","title":"\u4eff\u5c04\u96c6\u5408","text":"<p>\u5bf9\u4e8e\\(\\mathbb R^n\\)\u4e2d\u7684\\(m\\)\u4e2a\u70b9\\(x_1, \\ldots, x_m\\)\uff0c\u82e5\\(\\sum_{i = 1}^m \\theta_i = 1\\)\uff0c\u5219\u79f0\\(\\sum_{i=1}^m \\theta_ix_i\\)\u4e3a\\(x_1, \\ldots, x_m\\)\u7684\u4eff\u5c04\u7ec4\u5408\u3002</p> <p>\u5982\u679c\u4e00\u7ec4\u5411\u91cf\\(x_1, \\ldots, x_m\\)\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5411\u91cf\u90fd\u4e0d\u80fd\u7531\u5176\u4ed6\u5411\u91cf\u7ecf\u4eff\u5c04\u7ec4\u5408\u5f97\u5230\uff0c\u79f0\u8fd9\u7ec4\u5411\u91cf\u4eff\u5c04\u65e0\u5173\u3002</p> \u4eff\u5c04\u65e0\u5173\u4e0e\u7ebf\u6027\u65e0\u5173 <p>\u4e00\u7ec4\u5411\u91cf\\(x_0, x_1, \\ldots, x_m\\)\u4eff\u5c04\u65e0\uff08\u76f8\uff09\u5173\u7b49\u4ef7\u4e8e\u5411\u91cf\\(x_1 - x_0, \\ldots, x_m - x_0\\)\u7ebf\u6027\u65e0\uff08\u76f8\uff09\u5173\u3002</p> <p>\u8bbe\u96c6\u5408\\(C \\subseteq \\mathbb R^n\\)\uff0c\u82e5\u96c6\u5408\\(C\\)\u4e2d\u7684\u4efb\u610f\u4e24\u4e2a\u4e0d\u540c\u70b9\u6784\u6210\u7684\u76f4\u7ebf\uff08\u5373\u5b83\u4eec\u7684\u4eff\u5c04\u7ec4\u5408\uff09\u4ecd\u7136\u4f4d\u4e8e\u96c6\u5408\u4e2d\uff0c\u5219\\(C\\)\u4e3a\u4eff\u5c04\u96c6\u5408\u3002</p> \\[ \\forall x_1, x_2 \\in C, x_1 \\not = x_2, \\forall \\theta\\in \\mathbb R, y = \\theta x_1 + (1 - \\theta) x_2\\in C \\] <p>\u4eff\u5c04\u96c6\u5408\\(C\\)\u6ee1\u8db3\u5982\u4e0b\u6027\u8d28</p> <ul> <li>\\(C\\)\u4e2d\u5305\u542b\u5176\u4e2d\u4efb\u610f\u4e2a\u70b9\u7684\u4eff\u5c04\u7ec4\u5408\u3002</li> <li>\u96c6\u5408\\(V = \\{x - x_0 | x \\in C\\}\\)\u4e3a\\(\\mathbb R^n\\)\u7684\u5b50\u7a7a\u95f4\uff0c\u4e14\u5176\u7ef4\u6570\u4e0e\u504f\u79fb\\(x_0\\)\u65e0\u5173\u3002\u5b9a\u4e49\u4eff\u5c04\u96c6\u5408\u7684\u7ef4\u6570\u4e3a\\(V\\)\u7684\u7ef4\u6570\u3002</li> </ul> <p>\u8bbe\\(C\\)\u4e3a\u4efb\u610f\u96c6\u5408\uff0c\u5219\\(C\\)\u4e2d\u6240\u6709\u70b9\u7684\u4eff\u5c04\u7ec4\u5408\u79f0\u4e3a\\(C\\)\u7684\u4eff\u5c04\u5305\uff0c\u8bb0\u4f5c\\(\\mathbf{aff} C\\)\uff0c\u4eff\u5c04\u5305\u662f\u5305\u542b\u96c6\u5408\\(C\\)\u7684\u6700\u5c0f\uff08\u5373\u7ef4\u6570\u6700\u4f4e\u7684\uff09\u4eff\u5c04\u96c6\u5408\uff0c\u5176\u7ef4\u6570\u79f0\u4e3a\u4eff\u5c04\u7ef4\u6570\u3002</p> <p>\u5f53\u4e00\u4e2a\u96c6\u5408\\(C\\)\u7684\u4eff\u5c04\u7ef4\u6570\\(\\dim \\mathbf{aff} C &lt; n\\)\u65f6\uff0c\\(C^\\circ = \\varnothing\\)\u3002\u6b64\u65f6\u9700\u8981\u5b9a\u4e49\u76f8\u5bf9\u5185\u90e8\u4e0e\u76f8\u5bf9\u8fb9\u754c\u3002</p> <ul> <li>\u96c6\u5408\\(C\\)\u7684\u76f8\u5bf9\u5185\u90e8\u5b9a\u4e49\u4e3a\\(\\mathbf{relint}C = \\{x\\in C | \\exists r\\in \\mathbb R_{ + + }, B(x, r)\\cap \\mathbf{aff} C \\subseteq C\\}\\)</li> <li>\u96c6\u5408\\(C\\)\u7684\u76f8\u5bf9\u8fb9\u754c\u5b9a\u4e49\u4e3a\\(\\mathbf{cl} C - \\mathbf{relint}C\\)\u3002</li> </ul>"},{"location":"math/convex-optimization/convex-set/#_5","title":"\u51f8\u96c6","text":"<p>\u5bf9\u4e8e\u96c6\u5408\\(C\\subseteq \\mathbb R^n\\)\u4e2d\u7684\\(m\\)\u4e2a\u70b9\\(x_1, \\ldots, x_m\\)\uff0c\u82e5\\(\\sum_{i=1}^m \\theta_i = 1, \\theta_i \\geq 0\\)\uff0c\u5219\u79f0\\(\\sum_{i=1}^m \\theta_i x_i\\)\u4e3a\\(x_1, \\ldots, x_m\\)\u7684\u51f8\u7ec4\u5408\u3002</p> <p>\u82e5\u4e00\u4e2a\u96c6\u5408\u5185\u4efb\u610f\u4e24\u70b9\u7684\u51f8\u7ec4\u5408\u90fd\u5728\u8be5\u96c6\u5408\u4e2d\uff0c\u79f0\u8be5\u96c6\u5408\u4e3a\u51f8\u96c6\u3002</p> \\[ \\forall x_1, x_2\\in C, \\forall 0\\leq \\theta\\leq 1, \\theta x_1 + (1 - \\theta) x_2\\in C \\] <p>\u96c6\u5408\\(C\\)\u7684\u6240\u6709\u70b9\u7684\u51f8\u7ec4\u5408\u79f0\u4e3a\u51f8\u5305\uff0c\u8bb0\u4f5c\\(\\mathbf{conv}C\\)\uff0c\\(C\\)\u7684\u51f8\u5305\u662f\u5305\u542b\\(C\\)\u7684\u6700\u5c0f\u51f8\u96c6\u3002</p>"},{"location":"math/convex-optimization/convex-set/#_6","title":"\u9525","text":"<p>\u5bf9\u4e8e\u96c6\u5408\\(C\\)\uff0c\u82e5\\(\\forall x\\in C, \\forall \\theta\\geq 0, \\theta x\\in C\\)\uff0c\u5219\u79f0\\(C\\)\u4e3a\u9525\u3002\u82e5\\(C\\)\u8fd8\u662f\u51f8\u96c6\uff0c\u5219\u79f0\u4e3a\u51f8\u9525\u3002\u51f8\u9525\u6ee1\u8db3</p> \\[ \\forall x_1, x_2\\in C, \\forall \\theta_1, \\theta_2 \\geq 0, \\theta_1x_1 + \\theta_2x_2 \\in C \\] <p>\u5bf9\u4e8e\u96c6\u5408\\(C\\subseteq \\mathbb R^n\\)\u4e2d\u7684\\(m\\)\u4e2a\u70b9\\(x_1, \\ldots, x_m\\)\uff0c\u82e5\\(\\theta_i \\geq 0\\)\uff0c\u5219\u79f0\\(\\sum_{i=1}^m \\theta_i x_i\\)\u4e3a\\(x_1, \\ldots, x_m\\)\u7684\u9525\u7ec4\u5408\u3002</p> <p>\u96c6\u5408\\(C\\)\u4e2d\u6240\u6709\u5143\u7d20\u7ec4\u6210\u7684\u6240\u6709\u9525\u7ec4\u5408\u79f0\u4e3a\u9525\u5305\uff0c\\(C\\)\u7684\u9525\u5305\u662f\u5305\u542b\\(C\\)\u7684\u6700\u5c0f\u51f8\u9525\u3002</p>"},{"location":"math/convex-optimization/convex-set/#_7","title":"\u5e38\u89c1\u7684\u51f8\u96c6","text":"<p>\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e73\u51e1\u51f8\u96c6\uff1a</p> <ul> <li>\u7a7a\u96c6\\(\\varnothing\\)\u3001\u5355\u70b9\u96c6\\(\\{x_0\\}\\)\u3001\u5168\u7a7a\u95f4\\(\\mathbb R^n\\)\u53ca\u5176\u5b50\u7a7a\u95f4\u90fd\u662f\u4eff\u5c04\u96c6\uff08\u4e5f\u662f\u51f8\u96c6\uff09\u3002</li> <li>\u4efb\u610f\u76f4\u7ebf\u90fd\u662f\u51f8\u96c6\uff1b\u8fc7\u539f\u70b9\u7684\u76f4\u7ebf\u662f\u4eff\u5c04\u96c6\uff1b\u7ebf\u6bb5\u662f\u51f8\u96c6\uff1b\u5c04\u7ebf\u662f\u51f8\u96c6\uff1b\u8d77\u70b9\u5728\u539f\u70b9\u7684\u5c04\u7ebf\u662f\u51f8\u9525\u3002</li> </ul>"},{"location":"math/convex-optimization/convex-set/#_8","title":"\u8d85\u5e73\u9762\u4e0e\u534a\u7a7a\u95f4","text":"<p>\u8bbe\\(a\\in \\mathbb R^n, a \\not = 0, b\\in \\mathbb R\\)\uff0c\u65b9\u7a0b\\(a^\\top x = b\\)\u786e\u5b9a\u4e86\u7ebf\u6027\u7a7a\u95f4\\(\\mathbb R^n\\)\u5185\u7684\u4e00\u4e2a\u8d85\u5e73\u9762\uff0c\u8fd9\u4e2a\u8d85\u5e73\u9762\u5c06\u7a7a\u95f4\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u79f0\u4e3a\u5f00\u534a\u7a7a\u95f4\uff0c\u6bcf\u4e00\u90e8\u5206\u52a0\u4e0a\u8d85\u5e73\u9762\u79f0\u4e3a\u534a\u7a7a\u95f4\u3002</p> <ul> <li>\u8d85\u5e73\u9762\u53ef\u4ee5\u8868\u793a\u4e3a\\(\\{x | a^\\top x = b\\}\\)</li> <li>\u534a\u7a7a\u95f4\u53ef\u4ee5\u8868\u793a\u4e3a\\(\\{x | a^\\top x\\leq b\\}\\)</li> </ul> <p>\u5411\u91cf\\(a\\)\u4e3a\u8d85\u5e73\u9762\u7684\u6cd5\u7ebf\u65b9\u5411\uff0c\u8d85\u5e73\u9762\u4e0a\u7684\u6240\u6709\u70b9\u90fd\u53ef\u4ee5\u7531\u4e00\u4e2a\u8d77\u70b9\\(x_0\\)\u52a0\u4e0a\u4e0e\\(a\\)\u6b63\u4ea4\u7684\u6240\u6709\u5411\u91cf\u5f97\u5230\u3002</p>"},{"location":"math/convex-optimization/convex-set/#_9","title":"\u7403","text":"<p>\\(\\mathbb R^n\\)\u4e2d\u7684\u6b27\u6c0f\u7403\u4e3a2-\u8303\u6570\u4e0b\u7684\u7403\uff0c\u5373</p> \\[ B(x, r) = \\{y | \\Vert y - x\\Vert_2\\leq r\\} \\] <p>\u5176\u4e2d\\(x\\in \\mathbb R^n\\)\u4e3a\u6b27\u6c0f\u7403\u7684\u7403\u5fc3\uff0c\\(r\\in \\mathbb R_}\\)\u4e3a\u5176\u534a\u5f84\u3002 <p>\u692d\u7403\u662f\u5404\u4e2a\u65b9\u5411\u5ef6\u4f38\u7a0b\u5ea6\u4e0d\u540c\u7684\u6b27\u6c0f\u7403\uff0c\u5ef6\u4f38\u7a0b\u5ea6\u7531\u77e9\u9635\\(P\\in \\mathbb S_{\\)\u786e\u5b9a\uff0c\u534a\u8f74\u957f\u5ea6\u4e3a\\(\\sqrt{\\lambda_i}\\)\u3002</p> \\[ \\mathcal E = \\{y | (x - y)^\\top P^{-1}(x - y)\\leq 1\\} \\] <p>\u5f53\\(P = r^2I\\)\u65f6\uff0c\\(\\mathcal E = B(x, r)\\)\u3002</p> <p>\u5c06\u6b27\u6c0f\u7403\u4e2d\u76842-\u8303\u6570\u6362\u6210\u5176\u4ed6\u7684\u8303\u6570\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u8303\u6570\u7403\uff1a</p> \\[ B_*(x, r) = \\{y | \\Vert y - x\\Vert_* \\leq r\\} \\]"},{"location":"math/convex-optimization/convex-set/#_10","title":"\u9525","text":"<p>\u65b9\u7a0b\\(\\Vert x\\Vert_2 \\leq t\\)\u5728\\(R^{n+1}\\)\u4e0a\u5b9a\u4e49\u4e86\u4e00\u4e2a\u9525\uff0c\u79f0\u4e3a\u4e8c\u9636\u9525\u3002\u9525\u53ef\u4ee5\u89c6\u4e3a\u7531\u4f4e\u4e00\u7ef4\u7684\u7403\u5806\u79ef\u5f97\u5230\u3002</p> <p>\u5c062-\u8303\u6570\u66ff\u6362\u4e3a\u5176\u4ed6\u8303\u6570\u53ef\u4ee5\u5f97\u5230\u8303\u6570\u9525\u3002</p>"},{"location":"math/convex-optimization/convex-set/#_11","title":"\u591a\u9762\u4f53","text":"<p>\u6709\u9650\u4e2a\u7ebf\u6027\u7b49\u5f0f\u548c\u4e0d\u7b49\u5f0f\u7684\u89e3\u96c6\u6784\u6210\u591a\u9762\u4f53\u3002</p> \\[ \\begin{aligned}     \\mathcal P &amp;= \\{x | a_i^\\top x\\leq b_i, i = 1, \\ldots, m, c_j^\\top x = d_j, j = 1, \\ldots, p\\} \\\\     &amp;= \\{x | Ax\\preceq b, Cx = d\\} \\end{aligned} \\] <p>\u591a\u9762\u4f53\u53ef\u4ee5\u662f\u9525\uff0c\u5982\u975e\u8d1f\u8c61\u9650\u3002</p> <p>\u5355\u7eaf\u5f62\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u591a\u9762\u4f53\uff0c\u4e00\u7ec4\u4eff\u5c04\u65e0\u5173\u7684\u70b9\\(x_0, x_1, \\ldots, x_m\\)\u7684\u51f8\u7ec4\u5408\u786e\u5b9a\u4e86\u4e00\u4e2a\u5355\u7eaf\u5f62\uff0c\u7528\\(\\mathbf{conv}\\{x_0, \\ldots, x_m\\}\\)\u8868\u793a\uff0c\u5176\u4eff\u5c04\u7ef4\u5ea6\u4e3a\\(m\\)\u3002</p> \\[ \\mathbf{conv}\\{x_0, \\ldots, x_m\\} = \\left\\{\\theta_0x_0 + \\theta_1x_1 + \\cdots + \\theta_mx_m \\middle| \\theta_i \\geq 0, \\sum_{i=1}^m \\theta_i = 1\\right\\} \\] <ul> <li>\u5355\u4f4d\u5355\u7eaf\u5f62\u662f\u96f6\u5411\u91cf\u548c\u5355\u4f4d\u5411\u91cf\u786e\u5b9a\u7684\\(n\\)\u7ef4\u5355\u7eaf\u5f62\uff0c\u5373\\(\\{x | x\\geq 0, \\mathbf{1}^\\top x \\leq 1\\}\\)\u3002</li> <li>\u6982\u7387\u5355\u7eaf\u5f62\u662f\u5355\u4f4d\u5411\u91cf\u786e\u5b9a\u7684\\(n-1\\)\u7ef4\u5355\u7eaf\u5f62\uff0c\u5373\\(\\{x | \\mathbf 1^\\top x = 1\\}\\)\u3002</li> </ul> \u5355\u7eaf\u5f62\u4e0e\u591a\u9762\u4f53 <p>\u5355\u7eaf\u5f62\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u591a\u9762\u4f53\u3002\u8bbe\u5355\u7eaf\u5f62\\(C\\)\u7531\u4eff\u5c04\u65e0\u5173\u7684\u5411\u91cf\\(x_0, \\ldots, x_m\\)\u786e\u5b9a\uff0c\u5219</p> \\[ B = \\begin{bmatrix}     x_1 - x_0 &amp; \\cdots &amp; x_m - x_0 \\end{bmatrix} \\] <p>\\(B\\)\u662f\u4e00\u4e2a\\(n\\times m\\)\u7ef4\u7684\u6ee1\u79e9\u77e9\u9635\u3002\u4ee4\\(\\theta = \\begin{pmatrix}\\theta_0 &amp; \\theta_1 &amp; \\cdots &amp; \\theta_m\\end{pmatrix}, \\theta' = \\begin{pmatrix}\\theta_1 &amp; \\cdots &amp; \\theta_m\\end{pmatrix}\\)\u3002\u5f53\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9\\(x\\)\u6ee1\u8db3\\(x\\in C\\)\u65f6\uff0c\u6709</p> \\[ \\exists \\theta\\succeq 0, \\mathbf 1^\\top \\theta = 1, x = \\sum_{i=0}^m \\theta_i x_i \\Longleftrightarrow \\exists \\theta'\\succeq 0, \\mathbf 1^\\top \\theta' \\leq 1, x = x_0 + B\\theta' \\] <p>\u800c\\(B\\)\u662f\u6ee1\u79e9\u77e9\u9635\uff0c\u5219\u5b58\u5728\u6ee1\u79e9\u77e9\u9635\\(A\\)\u4f7f\u5f97</p> \\[ AB = \\begin{bmatrix}     A_1 \\\\ A_2 \\end{bmatrix}B = \\begin{bmatrix}     I \\\\ 0 \\end{bmatrix} \\] <p>\u5219</p> \\[ Ax = \\begin{bmatrix}     A_1 \\\\ A_2 \\end{bmatrix}x = \\begin{bmatrix}     A_1x \\\\ A_2x \\end{bmatrix} = \\begin{bmatrix}     A_1x_0 + \\theta' \\\\ A_2x_0 \\end{bmatrix} \\] <p>\u8be5\u5355\u7eaf\u5f62\u7684\u591a\u9762\u4f53\u8868\u793a\u4e3a\uff1a</p> \\[ C = \\{x | A_1x\\succeq A_1x_0, A_2x = A_2x_0, \\mathbf 1^\\top A_1x - \\mathbf 1^\\top A_1x_0\\leq 1\\} \\]"},{"location":"math/convex-optimization/convex-set/#_12","title":"\u534a\u6b63\u5b9a\u9525","text":"<p>\u8bbe\\(\\mathbb S^n_{+}\\)\u8868\u793a\u5168\u4f53\\(n\\)\u9636\u5bf9\u79f0\u534a\u6b63\u5b9a\u77e9\u9635\u7684\u96c6\u5408\uff0c\u5219\\(\\mathbb S^n_+\\)\u662f\u4e00\u4e2a\u51f8\u9525\u3002\uff08\u6ce8\u610f\u6b64\u5904\u5bf9\u9525\u7684\u7406\u89e3\u548c\u8303\u6570\u9525\u4e0d\u540c\uff09\u3002</p> \\[ A\\succeq 0, B\\succeq 0\\Longrightarrow x^\\top (\\theta_1 A + \\theta_2 B)x \\geq 0\\Longrightarrow (\\theta_1A + \\theta_2B)\\succeq 0 \\]"},{"location":"math/convex-optimization/convex-set/#_13","title":"\u4fdd\u51f8\u8fd0\u7b97","text":"<p>\u4fdd\u51f8\u8fd0\u7b97\u662f\u5728\u8fd0\u7b97\u524d\u540e\u4fdd\u6301\u96c6\u5408\u51f8\u6027\u7684\u8fd0\u7b97\u3002</p> <ol> <li>\u90e8\u5206\u548c\\(\\{(x, y_1 + y_2) | (x, y_1) \\in A, (x, y_2)\\in B\\}\\)\uff0c\u6709\u4e24\u79cd\u6781\u7aef\u60c5\u51b5</li> <li>\\(\\dim y_1 = \\dim y_2 = 0\\)\u65f6\u9000\u5316\u4e3a\u4ea4\u8fd0\u7b97\\(\\cap\\)\uff1a\u4e00\u4e2a\u51f8\u96c6\u53ef\u4ee5\u8868\u793a\u4e3a\u4e00\u7cfb\u5217\u534a\u7a7a\u95f4\u7684\u4ea4\u96c6\u3002</li> <li>\\(\\dim x = 0\\)\u65f6\u9000\u5316\u4e3a\u548c\\(+: A + B = \\{x + y | x\\in A, y\\in B\\}\\)\u3002</li> <li>\u7ebf\u6027\u53d8\u6362\\(f: \\mathbb R^n\\rightarrow \\mathbb R^m = Ax + b\\)\u3002</li> <li>\u76f4\u79ef\\(\\times, A\\times B = \\{(x, y) | x\\in A, y\\in B\\}\\)\u3002</li> <li>\u6295\u5f71\u51fd\u6570\\(P: \\mathbb R^n\\times \\mathbb R_}\\rightarrow \\mathbb R^n\\)\uff0c\\(P(z, t) = z / t\\)\u3002\u6295\u5f71\u51fd\u6570\u5c06\\(\\mathbb R^{n}\\times \\mathbb R_{\\)\u7a7a\u95f4\u4e2d\u7684\u70b9\u6295\u5f71\u5230\u5e73\u9762\\(x_{n+1} = 1\\)\u4e0a\u3002 <li>\u7ebf\u6027\u53d8\u6362\u548c\u6295\u5f71\u51fd\u6570\u7684\u7ec4\u5408\uff0c\u79f0\u4e3a\u7ebf\u6027\u5206\u5f0f\u51fd\u6570\u3002</li>"},{"location":"math/convex-optimization/convex-set/#_14","title":"\u5e7f\u4e49\u4e0d\u7b49\u5f0f","text":"<p>\u5b9a\u4e49\u6b63\u5e38\u9525\u4e3a\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\u7684\u9525\uff1a</p> <ul> <li>\u662f\u51f8\u9525\u3002</li> <li>\u662f\u95ed\u96c6\uff08\u5b58\u5728\u8fb9\u754c\uff09</li> <li>\u5b58\u5728\u5185\u90e8\u3002</li> <li>\u4e0d\u5305\u542b\u76f4\u7ebf\uff08\\(x\\in K, -x\\in K\\Longleftrightarrow x = 0\\)\uff09</li> </ul> <p>\u6b63\u5e38\u9525\\(K\\)\u53ef\u4ee5\u5728\u7a7a\u95f4\\(\\mathbb R^n\\)\u4e0a\u5b9a\u4e49\u5e7f\u4e49\u4e0d\u7b49\u5f0f\uff1a</p> \\[ \\begin{gathered}     x \\preceq_K y \\triangleq y - x\\in K \\\\     x \\prec_K y \\triangleq y - x\\in K^\\circ \\end{gathered} \\] <ul> <li>\u82e5\\(K = \\mathbb R_+\\)\uff0c\u5e7f\u4e49\u4e0d\u7b49\u5f0f\u7b49\u4ef7\u4e8e\u5b9e\u6570\u57df\u4e0a\u7684\u4e0d\u7b49\u5f0f\u3002</li> <li>\u82e5\\(K = \\mathbb R^n_+\\)\uff0c\u5e7f\u4e49\u4e0d\u7b49\u5f0f\u7b49\u4ef7\u4e8e\\(\\mathbb R^n\\)\u7a7a\u95f4\u4e2d\u5411\u91cf\u7684\u5206\u91cf\u4e0d\u7b49\u5f0f\u3002</li> <li>\u82e5\\(K = \\mathbb S^n_+\\)\uff0c\u5e7f\u4e49\u4e0d\u7b49\u5f0f\u7b49\u4ef7\u4e8e\u77e9\u9635\u4e0d\u7b49\u5f0f\u3002</li> </ul> <p>\u5e7f\u4e49\u4e0d\u7b49\u5f0f\u6ee1\u8db3\u5982\u4e0b\u6027\u8d28</p> <ul> <li>\\(x\\preceq_K y, u\\preceq_K v\\Longrightarrow x + u\\preceq_K y + v\\)\uff0c\u5bf9\\(\\prec_K\\)\u4e5f\u6210\u7acb\u3002</li> <li>\\(x\\preceq_K y, y\\preceq_K z\\Longrightarrow x\\preceq_K z\\)\uff0c\u5bf9\\(\\prec_K\\)\u4e5f\u6210\u7acb\u3002</li> <li>\\(x\\preceq_K y, \\alpha\\geq 0\\Longrightarrow \\alpha x\\preceq_K \\alpha y\\)\uff0c\u5f53\\(\\alpha &gt; 0\\)\u65f6\u5bf9\\(\\prec_K\\)\u4e5f\u6210\u7acb\u3002</li> <li>\\(x\\prec_K y\\Longrightarrow x\\preceq_K y\\)</li> <li>\\(x\\preceq_K x, x\\not\\prec_K x\\)</li> <li>\\(x\\preceq_K y, y\\preceq_K x\\Longrightarrow x = y\\)</li> <li>\\(\\forall i\\in \\mathbb N, x_i\\preceq_K y_i, \\lim_{i\\rightarrow\\infty} x_i = x, \\lim_{i\\rightarrow\\infty} y_i = y\\Longrightarrow x\\preceq_K y\\)</li> <li>\\(x\\preceq_K y\\Longrightarrow \\exists u, \\exists v, x + u\\prec_K y+ v\\)</li> </ul> <p>\u5e7f\u4e49\u4e0d\u7b49\u5f0f\u4e0d\u662f\u7ebf\u6027\u7684\uff0c\u5373\\(\\exists x, \\exists y, x\\not \\preceq_K y, y\\not \\preceq_K x\\)\uff0c\u6b64\u65f6\u79f0\\(x, y\\)\u4e0d\u53ef\u6bd4\u3002</p> <p>\u5b9a\u4e49\u4e86\u504f\u5e8f\u5173\u7cfb\u540e\u5c31\u53ef\u4ee5\u5728\u6b64\u57fa\u7840\u4e0a\u5b9a\u4e49\u6781\u5c0f\u503c\u4e0e\u6700\u5c0f\u503c\u3002</p> <ul> <li>\\(x\\in S\\)\u662f\u6700\u5c0f\u5143\u5f53\u4e14\u4ec5\u5f53\\(S\\subseteq \\{y | y\\succeq_K x\\}\\)\uff0c\u5373\\(S\\)\u4e2d\u5143\u7d20\u5168\u90e8\u4e0e\\(x\\)\u53ef\u6bd4\u4e14\u5927\u4e8e\u7b49\u4e8e\\(x\\)\u3002</li> <li>\\(x\\in S\\)\u662f\u6781\u5c0f\u5143\u5f53\u4e14\u4ec5\u5f53\\(S\\cap \\{y | y\\preceq_K x\\} = \\{x\\}\\)\uff0c\u5373\\(S\\)\u4e2d\u4e0d\u5b58\u5728\u548c\\(x\\)\u53ef\u6bd4\u4e14\u6bd4\\(x\\)\u66f4\u5c0f\u7684\u5143\u7d20\u3002</li> </ul>"},{"location":"math/convex-optimization/convex-set/#_15","title":"\u8d85\u5e73\u9762\u4e0e\u51f8\u96c6","text":""},{"location":"math/convex-optimization/convex-set/#_16","title":"\u5206\u79bb\u8d85\u5e73\u9762","text":"<p>\u7ed9\u5b9a\u51f8\u96c6\\(A, B\\)\u6ee1\u8db3\\(A\\cap B = \\varnothing\\)\uff0c\u5219\u5b58\u5728\\(a\\in \\mathbb R^n, b\\in \\mathbb R, a\\not = 0\\)\u4f7f\u5f97</p> \\[ \\forall x\\in A, \\forall y\\in B, a^\\top x - b\\leq 0, a^\\top y - b\\geq 0 \\] <p>\u79f0\\(\\{x | a^\\top x = b\\}\\)\u4e3a\u96c6\u5408\\(A, B\\)\u7684\u5206\u79bb\u8d85\u5e73\u9762\u3002</p> <p>\u82e5\u8d85\u5e73\u9762\\(\\{x | a^\\top x = b\\}\\)\u6ee1\u8db3</p> \\[ \\forall x\\in A, \\forall y\\in B, a^\\top x - b &lt; 0, a^\\top y - b &gt; 0 \\] <p>\u79f0\\(\\{x | a^\\top x = b\\}\\)\u4e25\u683c\u5206\u79bb\\(A, B\\)\uff0c\u4e25\u683c\u5206\u79bb\u7684\u8d85\u5e73\u9762\u4e0d\u4e00\u5b9a\u5b58\u5728\u3002</p> \u4e0d\u5b58\u5728\u4e25\u683c\u5206\u79bb\u7684\u4f8b\u5b50 <p>\u8bbe\u96c6\u5408\\(A = \\{(x, y) | xy\\geq 1\\}, B = \\{(x, y) | x\\leq 0, y\\leq 0\\}\\)\uff0c\u5219\u96c6\u5408\\(A, B\\)\u88ab\u8d85\u5e73\u9762\\(\\{(x, y) | x = 0\\}\\)\u548c\\(\\{(x, y) | y = 0\\}\\)\u5206\u79bb\uff0c\u4f46\u4e0d\u5b58\u5728\u4e25\u683c\u5206\u79bb\u4e24\u4e2a\u96c6\u5408\u7684\u8d85\u5e73\u9762\u3002</p> <p></p> <p>\u540c\u7406\uff0c\\(\\{(x, y) | y\\leq \\ln x\\}\\)\u548c\\(\\{(x, y) | x\\leq 0\\}\\)\u4e4b\u95f4\u4e5f\u4e0d\u5b58\u5728\u4e25\u683c\u5206\u79bb\u7684\u8d85\u5e73\u9762</p> <p>\u8d85\u5e73\u9762\u5206\u79bb\u7684\u9006\u5b9a\u7406\u4e0d\u6210\u7acb\u3002</p>"},{"location":"math/convex-optimization/convex-set/#_17","title":"\u652f\u6491\u8d85\u5e73\u9762","text":"<p>\u8bbe\u96c6\u5408\\(C\\subseteq \\mathbb R^n\\)\uff0c\u5bf9\u4e8e\\(x_0\\in \\partial C\\)\uff0c\u82e5\u5b58\u5728\\(a\\not = 0\\)\u6ee1\u8db3</p> \\[ \\forall x\\in C, a^\\top x\\leq a^\\top x_0 \\] <p>\u79f0\\(\\{x| a^\\top x = a^\\top x_0\\}\\)\u4e3a\\(C\\)\u5728\\(x_0\\)\u5904\u7684\u652f\u6491\u8d85\u5e73\u9762\u3002\u5bf9\u4e8e\u8fb9\u754c\u4e0a\u7684\u67d0\u4e2a\u70b9\uff0c\u652f\u6491\u8d85\u5e73\u9762\u4e0d\u4e00\u5b9a\u552f\u4e00\u3002</p> <p>\u82e5\u96c6\u5408\\(C\\)\u662f\u51f8\u96c6\uff0c\u5219\u5176\u8fb9\u754c\u4e0a\u6240\u6709\u70b9\u90fd\u5b58\u5728\u4e00\u4e2a\u652f\u6491\u8d85\u5e73\u9762\u3002\u7ed9\u5b9a\\(C\\)\u662f\u95ed\u96c6\u4e14\\(C^\\circ\\not =\\varnothing\\)\uff0c\u5219\u9006\u5b9a\u7406\u4e5f\u6210\u7acb\u3002</p>"},{"location":"math/convex-optimization/convex-set/#_18","title":"\u5bf9\u5076\u9525","text":"<p>\u7ed9\u5b9a\u9525\\(K\\)\uff0c\u82e5\\(K^*\\)\u6ee1\u8db3</p> \\[ y\\in K^* \\Longleftrightarrow \\forall x\\in K, x^\\top y\\geq 0 \\] <p>\u79f0\\(K^*\\)\u4e3a\\(K\\)\u7684\u5bf9\u5076\u9525\u3002\u5bf9\u5076\u9525\u5fc5\u5b9a\u662f\u51f8\u9525\u3002</p> \u5bf9\u5076\u9525\u7684\u51f8\u6027 <p>\u7ed9\u5b9a\u9525\\(K\\)\uff0c\u6709\\(\\forall x\\in K, \\forall \\theta\\geq 0, \\theta x \\in K\\)\uff0c\u5219\u5bf9\u4e8e\u4efb\u610f\\(y\\in K^*\\)</p> \\[ \\theta x^\\top y = x^\\top (\\theta y)\\geq 0\\Longrightarrow \\theta y\\in K^* \\] <p>\u56e0\u6b64\\(K^*\\)\u662f\u9525\u3002\u8bbe\\(y_1, y_2\\in K^*, x\\in K, 0\\leq \\theta\\leq 1\\)\uff0c\u5219</p> \\[ x^\\top (\\theta y_1)\\geq 0, x^\\top(1 - \\theta)y_2\\geq 0\\Longrightarrow x^\\top (\\theta y_1 + (1 - \\theta)y_2)\\geq 0 \\] <p>\u56e0\u6b64\\(K^*\\)\u662f\u51f8\u7684\u3002</p> <p>\u5bf9\u5076\u9525\u53ef\u80fd\u548c\u539f\u9525\u76f8\u7b49\uff0c\u5982\\(\\mathbb R^n_{+}, \\mathbb S^n_{+}\\)\u7684\u5bf9\u5076\u5206\u522b\u662f\u5176\u672c\u8eab\u3002</p> <ul> <li>\\(K^*\\)\u662f\u95ed\u51f8\u9525\u3002</li> <li>\\(K_1\\subseteq K_2\\Longrightarrow K_2^*\\subseteq K_1^*\\)</li> <li>\u82e5\\(K^\\circ\\not = \\varnothing\\)\uff0c\u5219\\(K^*\\)\u662f\u5c16\u7684\u3002</li> <li>\u82e5\\(\\mathbf{cl}K\\)\u662f\u5c16\u7684\uff0c\u5219\\((K^*)^\\circ\\not = \\varnothing\\)</li> <li>\\(K^{**} = \\mathbf{cl}K\\)</li> </ul> <p>\u5bf9\u4e8e\u6b63\u5e38\u9525\\(K\\)\uff0c\u5b58\u5728\u4e00\u4e2a\u5bf9\u5076\u9525\\(K^*\\)\uff0c\u4e24\u8005\u90fd\u80fd\u7528\u4e8e\u5b9a\u4e49\u5e7f\u4e49\u4e0d\u7b49\u5f0f\\(\\preceq_K\\)\uff0c\u79f0\\(\\preceq_{K^*}\\)\u4e3a\\(\\preceq_K\\)\u7684\u5bf9\u5076\u3002</p> <p>\u5e7f\u4e49\u4e0d\u7b49\u5f0f\u7684\u5bf9\u5076\\(\\preceq_{K^*}\\)\u6ee1\u8db3</p> <ul> <li>\\(x\\preceq_K y\\Longleftrightarrow \\forall \\lambda\\succeq_{K^*}0, \\lambda^\\top x\\leq \\lambda^\\top y\\)</li> <li>\\(x\\prec_K y\\Longleftrightarrow \\forall \\lambda\\succeq_{K^*}0, \\lambda\\not = 0, \\lambda^\\top x &lt; \\lambda^\\top y\\)</li> </ul> <p>\u5bf9\u4e8e\u96c6\u5408\\(S\\)\u4e2d\u7684\u5143\u7d20\\(x\\in S\\)\uff1a</p> <ul> <li>\\(x\\)\u5173\u4e8e\\(\\preceq_K\\)\u662f\u6700\u5c0f\u5143\u7b49\u4ef7\u4e8e\\(\\forall \\lambda \\succeq_{K^\\ast}0\\)\uff0c\\(x\\)\u662f\u6781\u5c0f\u5316\\(\\lambda^\\top z, z\\in S\\)\u7684\u552f\u4e00\u6700\u4f18\u89e3\uff0c\u5373\\(\\forall \\lambda \\succeq_{K^\\ast}0, \\{z | \\lambda^\\top x = \\lambda^\\top z\\}\\)\u662f\u4e00\u4e2a\u4e25\u683c\u652f\u6491\u8d85\u5e73\u9762\u3002</li> <li>\u82e5\\(x\\)\u5173\u4e8e\\(\\preceq_K\\)\u662f\u6781\u5c0f\u5143\uff0c\u5219\u5b58\u5728\\(\\lambda\\succ_{K^*} 0\\)\uff0c\\(\\forall z\\in S, \\lambda^\\top z\\geq \\lambda^\\top x\\)\uff0c\u4e5f\u5373\u5b58\u5728\u4e00\u4e2a\u4e25\u683c\u652f\u6491\u8d85\u5e73\u9762\u3002\u5f53\\(S\\)\u4e3a\u51f8\u96c6\u65f6\uff0c\u9006\u5b9a\u7406\u5bf9\u4e8e\u5b58\u5728\\(\\lambda\\succeq_{K^*}0\\)\u6210\u7acb\u3002</li> </ul>"},{"location":"math/discrete-mathematics/","title":"\u79bb\u6563\u6570\u5b66","text":"<p>\u6839\u636e\u300a\u6570\u7406\u903b\u8f91\u4e0e\u96c6\u5408\u8bba\u300b\uff0c\u77f3\u7eaf\u4e00\u7b49\uff0c\u6e05\u534e\u5927\u5b66\u51fa\u7248\u793e\u4e0e\u6e05\u534e\u5927\u5b66\u8ba1\u7b97\u673a\u7cfb\u201c\u79bb\u6563\u6570\u5b66\u201d\u8bfe\u7a0b\u6574\u7406\u3002</p> <ul> <li>\u7b2c\u4e00\u7ae0 \u547d\u9898\u903b\u8f91\u7684\u57fa\u672c\u6982\u5ff5</li> <li>\u7b2c\u4e8c\u7ae0 \u547d\u9898\u903b\u8f91\u7684\u7b49\u503c\u548c\u63a8\u7406\u6f14\u7b97</li> <li>\u7b2c\u4e09\u7ae0 \u547d\u9898\u903b\u8f91\u7684\u516c\u7406\u5316</li> <li>\u7b2c\u56db\u7ae0 \u8c13\u8bcd\u903b\u8f91\u7684\u57fa\u672c\u6982\u5ff5</li> <li>\u7b2c\u4e94\u7ae0 \u8c13\u8bcd\u903b\u8f91\u7684\u7b49\u503c\u548c\u63a8\u7406\u6f14\u7b97</li> <li>\u7b2c\u4e5d\u7ae0 \u96c6\u5408</li> </ul>"},{"location":"math/discrete-mathematics/chapter-1/","title":"\u547d\u9898\u903b\u8f91\u7684\u57fa\u672c\u6982\u5ff5","text":"<p>\u547d\u9898\u662f\u4e00\u4e2a\u975e\u771f\u5373\u5047\u7684\u9648\u8ff0\u53e5\u3002</p> <ul> <li>\u547d\u9898\u4e0d\u53ef\u80fd\u975e\u771f\u975e\u5047\uff0c\u4e5f\u4e0d\u53ef\u80fd\u65e2\u771f\u53c8\u5047</li> <li>\u547d\u9898\u7684\u771f\u5047\u6027\u53ef\u4ee5\u5f85\u5b9a</li> </ul> <p>\u547d\u9898\u7684\u771f\u5047\u53ef\u4ee5\u7528True\u6216False\u8868\u793a\uff0c\u4e5f\u53ef\u4ee5\u75281\u62160\u8868\u793a</p> <p>\u547d\u9898\u53ef\u4ee5\u901a\u8fc7\u4e0e\u3001\u6216\u3001\u975e\u7b49\u903b\u8f91\u8054\u7ed3\u8bcd\u8fde\u63a5\uff0c\u5f97\u5230\u590d\u5408\u547d\u9898</p> <p>\u5f53\u4e0d\u6307\u5b9a\u547d\u9898\u7684\u5177\u4f53\u5185\u5bb9\u65f6\uff0c\u79f0\u8be5\u547d\u9898\u4e3a\u547d\u9898\u53d8\u9879\uff0c\u5bf9\u5e94\u7684\u5177\u4f53\u547d\u9898\u79f0\u4e3a\u8be5\u547d\u9898\u53d8\u9879\u7684\u4e00\u4e2a\u89e3\u91ca\u3002\u547d\u9898\u53d8\u9879\u7684\u89e3\u91ca\u53ef\u4ee5\u662f\u4efb\u610f\u547d\u9898\u3002</p>"},{"location":"math/discrete-mathematics/chapter-1/#_2","title":"\u903b\u8f91\u8054\u7ed3\u8bcd","text":"<p>\u547d\u9898\u903b\u8f91\u4e2d\u5e38\u7528\u7684\u903b\u8f91\u8054\u7ed3\u8bcd\u4e3a\u4e0e\uff08\\(\\land\\)\uff0c\u5408\u53d6\uff09\u3001\u6216\uff08\\(\\lor\\)\uff0c\u6790\u53d6\uff09\u3001\u975e\uff08\\(\\lnot\\)\uff0c\u5426\u5b9a\uff09\u3001\u8574\u542b\uff08\\(\\rightarrow\\)\uff09\u3001\u53cc\u8574\u542b\uff08\\(\\leftrightarrow\\)\uff09\u7b49\u3002\u9664\\(\\lnot\\)\u4e3a\u4e00\u5143\u8fd0\u7b97\u7b26\u4ee5\u5916\uff0c\u5176\u4f59\u903b\u8f91\u8fd0\u7b97\u7b26\u5747\u4e3a\u4e8c\u5143\u8fd0\u7b97\u7b26\u3002\u8fd9\u4e9b\u8fd0\u7b97\u7b26\u7684\u771f\u503c\u8868\u5982\u4e0b\u6240\u5217\uff1a</p> <ul> <li>\u4e0e</li> </ul> \\(P\\) \\(Q\\) \\(P\\land Q\\) 0 0 0 0 1 0 1 0 0 1 1 1 <ul> <li>\u6216</li> </ul> \\(P\\) \\(Q\\) \\(P\\lor Q\\) 0 0 0 0 1 1 1 0 1 1 1 1 <ul> <li>\u975e</li> </ul> \\(P\\) \\(\\lnot P\\) 0 1 1 0 <ul> <li>\u8574\u542b</li> </ul> \\(P\\) \\(Q\\) \\(P\\rightarrow Q\\) 0 0 1 0 1 1 1 0 0 1 1 1 <ul> <li>\u53cc\u8574\u542b</li> </ul> \\(P\\) \\(Q\\) \\(P\\leftrightarrow Q\\) 0 0 1 0 1 0 1 0 0 1 1 1 <p>\u6b64\u5916\uff0c\u5982\u4e0b\u903b\u8f91\u8054\u7ed3\u8bcd\u4e5f\u8f83\u4e3a\u5e38\u7528\uff1a</p> <ul> <li>\u4e0e\u975e\uff1a\\(A\\uparrow B = \\lnot (A\\land B)\\)</li> <li>\u6216\u975e\uff1a\\(A\\downarrow B = \\lnot (A\\lor B)\\)</li> <li>\u5f02\u6216\uff1a\\(A\\overline \\lor B = (A\\lor B)\\land (\\lnot A\\lor \\lnot B)\\)</li> </ul>"},{"location":"math/discrete-mathematics/chapter-1/#_3","title":"\u5408\u5f0f\u516c\u5f0f","text":"<p>\u5408\u5f0f\u516c\u5f0f\uff08\u7b80\u79f0\u516c\u5f0f\uff09\u6309\u7167\u5982\u4e0b\u89c4\u5219\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <ul> <li>\u7b80\u5355\u547d\u9898\u662f\u5408\u5f0f\u516c\u5f0f</li> <li>\u82e5\\(A\\)\u4e3a\u5408\u5f0f\u516c\u5f0f\uff0c\\(\\lnot A\\)\u4e3a\u5408\u5f0f\u516c\u5f0f</li> <li>\u82e5\\(A, B\\)\u4e3a\u5408\u5f0f\u516c\u5f0f\uff0c\\(A\\land B, A\\lor B, A\\rightarrow B, A\\leftrightarrow B\\)\u5747\u4e3a\u5408\u5f0f\u516c\u5f0f</li> <li>\u5f53\u4e14\u4ec5\u5f53\u7ecf\u8fc7\u6709\u9650\u6b21\u5e94\u7528\u524d\u4e09\u6761\u89c4\u5219\u6240\u5f97\u5230\u7684\u516c\u5f0f\u79f0\u4e3a\u5408\u5f0f\u516c\u5f0f</li> </ul> <p>\u5408\u5f0f\u516c\u5f0f\u4e2d\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u6392\u5217\u5982\u4e0b\uff1a</p> \\[ \\lnot &gt; \\land &gt; \\lor &gt; \\rightarrow &gt; \\leftrightarrow \\] <p>\u5982\u679c\u5408\u5f0f\u516c\u5f0f\u4e2d\u7684\u6240\u6709\u547d\u9898\u53d8\u9879\u5728\u4efb\u610f\u89e3\u91ca\u4e0b\u90fd\u4e3a\u771f\uff0c\u79f0\u5408\u5f0f\u516c\u5f0f\u4e3a\u91cd\u8a00\u5f0f\u6216\u6c38\u771f\u5f0f\u3002\u5982\u679c\u5408\u5f0f\u516c\u5f0f\u5728\u67d0\u4e2a\u89e3\u91ca\u4e0b\u4e3a\u771f\uff0c\u79f0\u5408\u5f0f\u516c\u5f0f\u53ef\u6ee1\u8db3\u3002\u5982\u679c\u5408\u5f0f\u516c\u5f0f\u4e2d\u7684\u6240\u6709\u547d\u9898\u53d8\u9879\u5728\u4efb\u610f\u89e3\u91ca\u4e0b\u90fd\u4e3a\u5047\uff0c\u79f0\u5408\u5f0f\u516c\u5f0f\u4e3a\u77db\u76fe\u5f0f\u6216\u6c38\u5047\u5f0f\u3002\u4e24\u4e2a\u91cd\u8a00\u5f0f\u4f7f\u7528\\(\\land, \\lor, \\rightarrow, \\leftrightarrow\\)\u8fde\u63a5\u540e\u5f97\u5230\u7684\u5408\u5f0f\u516c\u5f0f\u4ecd\u4e3a\u91cd\u8a00\u5f0f\u3002</p>"},{"location":"math/discrete-mathematics/chapter-1/#_4","title":"\u91cd\u8a00\u5f0f\u7684\u4ee3\u5165\u89c4\u5219","text":"<p>\u82e5\\(A\\)\u4e3a\u91cd\u8a00\u5f0f\uff0c\u5c06\\(A\\)\u4e2d\u7684\u6240\u6709\u547d\u9898\u53d8\u9879\\(C\\)\u66ff\u6362\u4e3a\u5408\u5f0f\u516c\u5f0f\\(D\\)\uff0c\u5219\u66ff\u6362\u540e\u7684\u5408\u5f0f\u516c\u5f0f\u4ecd\u4e3a\u91cd\u8a00\u5f0f\u3002\u8bb0\u4f5c\\(\\frac CD\\)</p> <ul> <li>\u4ee3\u5165\u89c4\u5219\u53ea\u80fd\u5bf9\u516c\u5f0f\u4e2d\u7684\u547d\u9898\u53d8\u9879\u8fdb\u884c\u66ff\u4ee3\uff0c\u800c\u4e0d\u80fd\u66ff\u4ee3\u516c\u5f0f\u4e2d\u7684\u4e00\u4e2a\u590d\u5408\u547d\u9898</li> <li>\u5bf9\u516c\u5f0f\u4e2d\u7684\u67d0\u4e2a\u547d\u9898\u53d8\u9879\u8fdb\u884c\u4ee3\u5165\u65f6\uff0c\u5fc5\u987b\u4ee3\u5165\u516c\u5f0f\u4e2d\u51fa\u73b0\u7684\u6240\u6709\u547d\u9898\u53d8\u9879</li> </ul>"},{"location":"math/discrete-mathematics/chapter-2/","title":"\u547d\u9898\u903b\u8f91\u7684\u7b49\u503c\u548c\u63a8\u7406\u6f14\u7b97","text":"<p>\u7b49\u503c\uff1a\u8bbe\\(A, B\\)\u4e3a\u516c\u5f0f\uff0c\\(P_1, \\dots, P_n\\)\u662f\u51fa\u73b0\u5728\\(A, B\\)\u4e2d\u6240\u6709\u7684\u547d\u9898\u53d8\u9879\uff0c\u82e5\u5bf9\u4e8e\u4efb\u610f\u7684\u4e00\u7ec4\\(\\left\\langle P_1, \\dots, P_n\\right\\rangle\\)\uff0c\u90fd\u6709\\(A=B\\)\uff0c\u5219\u79f0\u516c\u5f0f\\(A\\)\u4e0e\u516c\u5f0f\\(B\\)\u7b49\u503c\uff08\u7b49\u4ef7\uff09\uff0c\u8bb0\u4e3a\\(A\\Leftrightarrow B\\)\u6216\\(A=B\\)\u3002</p> <p>\u7b49\u503c\u5173\u7cfb\u6ee1\u8db3\u81ea\u53cd\u6027\u3001\u5bf9\u79f0\u6027\u4e0e\u4f20\u9012\u6027\uff1a</p> <ul> <li>\\(A=A\\)</li> <li>\u82e5\\(A=B\\)\uff0c\u5219\\(B=A\\)</li> <li>\u82e5\\(A=B, B=C\\)\uff0c\u5219\\(A=C\\)</li> </ul> <p>\\(A=B\\)\u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u662f\\(A\\leftrightarrow B\\)\u4e3a\u91cd\u8a00\u5f0f\u3002</p>"},{"location":"math/discrete-mathematics/chapter-2/#_2","title":"\u7b49\u503c\u516c\u5f0f","text":"<p>\u57fa\u672c\u7684\u7b49\u503c\u516c\u5f0f\u5217\u4e3e\u5982\u4e0b\uff1a</p> <ul> <li>\u53cc\u91cd\u5426\u5b9a\u5f8b</li> <li>\\(P = \\lnot \\lnot P\\)</li> <li>\u7ed3\u5408\u5f8b</li> <li>\\((P\\lor Q)\\lor R = P \\lor (Q\\lor R)\\)</li> <li>\\((P\\land Q)\\land R = P \\land (Q\\land R)\\)</li> <li>\\((P\\leftrightarrow Q)\\leftrightarrow R = P \\leftrightarrow (Q\\leftrightarrow R)\\)</li> <li>\u8fd0\u7b97\u7b26\\(\\rightarrow\\)\u4e0d\u6ee1\u8db3\u7ed3\u5408\u5f8b</li> <li>\u4ea4\u6362\u5f8b</li> <li>\\(P\\lor Q = Q\\lor P\\)</li> <li>\\(P\\land Q = Q\\land P\\)</li> <li>\\(P\\leftrightarrow Q = Q\\leftrightarrow P\\)</li> <li>\u8fd0\u7b97\u7b26\\(\\rightarrow\\)\u4e0d\u6ee1\u8db3\u4ea4\u6362\u5f8b</li> <li>\u5206\u914d\u5f8b</li> <li>\\(P\\lor (Q\\land R) = (P\\lor Q)\\land (P\\lor R)\\)</li> <li>\\(P\\land (Q\\lor R) = (P\\land Q)\\lor (P\\land R)\\)</li> <li>\\(P\\rightarrow (Q\\rightarrow R) = (P\\rightarrow Q)\\rightarrow (P\\rightarrow R)\\)</li> <li>\u8fd0\u7b97\u7b26\\(\\leftrightarrow\\)\u4e0d\u6ee1\u8db3\u5206\u914d\u5f8b</li> <li>\u6052\u7b49\u5f8b</li> <li>\\(P\\lor P = P\\)</li> <li>\\(P\\land P = P\\)</li> <li>\\(P\\rightarrow P = T\\)</li> <li>\\(P\\leftrightarrow P = T\\)</li> <li>\u5438\u6536\u7387</li> <li>\\(P\\lor (P\\land Q) = P\\)</li> <li>\\(P\\land (P\\lor Q) = P\\)</li> <li>\u6469\u6839\u5f8b</li> <li>\\(\\lnot (P\\lor Q) = \\lnot P\\land \\lnot Q\\)</li> <li>\\(\\lnot (P\\land Q) = \\lnot P\\lor \\lnot Q\\)</li> <li>\\(\\lnot (P\\rightarrow Q) = P\\land \\lnot Q\\)</li> <li>\\(\\lnot (P\\leftrightarrow Q) = (P\\land \\lnot Q) \\lor (\\lnot P\\land Q)\\)</li> <li>\u540c\u4e00\u5f8b</li> <li>\\(P\\lor F = P\\)</li> <li>\\(P\\land P = T\\)</li> <li>\\(T\\rightarrow P = P\\)</li> <li>\\(T\\leftrightarrow P = P\\)</li> <li>\\(P\\rightarrow F = \\lnot P\\)</li> <li>\\(P\\leftrightarrow F = \\lnot P\\)</li> <li>\u96f6\u5f8b</li> <li>\\(P\\lor T = T\\)</li> <li>\\(P\\land F = F\\)</li> <li>\\(P\\rightarrow T = T\\)</li> <li>\\(F\\rightarrow P = T\\)</li> <li>\u8865\u4f59\u5f8b</li> <li>\\(P\\lor \\lnot P = T\\)</li> <li>\\(P\\land \\lnot P = F\\)</li> <li>\\(P\\rightarrow \\lnot P = \\lnot P\\)</li> <li>\\(P\\leftrightarrow \\lnot P = F\\)</li> <li>\u5176\u4ed6\u5e38\u7528\u7684\u7b49\u503c\u516c\u5f0f</li> <li>\\(P\\rightarrow Q = \\lnot Q\\rightarrow \\lnot P\\)\uff08\u9006\u5426\u547d\u9898\uff09</li> <li>\\(P\\rightarrow (Q\\rightarrow R) = (P\\land Q)\\rightarrow R\\)</li> <li>\\((P\\rightarrow R)\\land (Q\\rightarrow R) = (P\\lor Q) \\rightarrow R\\)</li> </ul> <p>\u7531\u516c\u5f0f2\u7684\u76f4\u63a5\u63a8\u8bba\uff1a\\(P\\rightarrow (Q\\rightarrow R) = Q\\rightarrow (P\\rightarrow R)\\)</p> <p>\u7f6e\u6362\uff1a\u5bf9\u516c\u5f0f\\(A\\)\u7684\u5b50\u516c\u5f0f\\(B\\)\uff0c\u4f7f\u7528\u4e0e\u4e4b\u7b49\u503c\u7684\u516c\u5f0f\u8fdb\u884c\u4ee3\u6362\u79f0\u4e3a\u7f6e\u6362</p> <p>\u8bbe\u7f6e\u6362\u540e\u7684\u516c\u5f0f\u4e3a\\(C\\)\uff0c\u5219\u5fc5\u6709\\(A=C\\)</p>"},{"location":"math/discrete-mathematics/chapter-2/#_3","title":"\u4ece\u771f\u503c\u8868\u8ba1\u7b97\u751f\u6210\u547d\u9898\u516c\u5f0f","text":"<p>\u4ece\u771f\u503c\u8868\u751f\u6210\u547d\u9898\u516c\u5f0f\u6709\u4e24\u79cd\u65b9\u6cd5\uff0c\u65e2\u53ef\u4ee5\u901a\u8fc7\u503c\u4e3a\\(T\\)\u7684\u884c\u751f\u6210\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u503c\u4e3a\\(F\\)\u7684\u884c\u751f\u6210</p>"},{"location":"math/discrete-mathematics/chapter-2/#t","title":"\u4ece\u503c\u4e3aT\u7684\u884c\u751f\u6210","text":"<p>\u5bf9\u4e8e\u5305\u542b\\(n\\)\u4e2a\u547d\u9898\u53d8\u5143\\(P_1, \\dots, P_n\\)\u7684\u547d\u9898\u516c\u5f0f\uff0c\u5199\u51fa\u5982\u4e0b\u5408\u53d6\u5f0f\uff1a</p> \\[ P_1\\land P_2\\land \\dots \\land P_n \\] <p>\u5bf9\u4e8e\u771f\u503c\u8868\u7684\u6bcf\u4e2a\u53d6\u503c\u4e3a\\(T\\)\u7684\u884c\uff0c\u82e5\u5bf9\u5e94\u7684\\(P_i\\)\u4e3a\\(F\\)\uff0c\u5219\u5c06\u5408\u53d6\u5f0f\u4e2d\u7684\u5bf9\u5e94\\(P_i\\)\u66ff\u6362\u4e3a\\(\\lnot P_i\\)\u3002\u5c06\u6240\u5f97\u7684\u516c\u5f0f\u4f7f\u7528\u6790\u53d6\u8fd0\u7b97\u7b26\u8fde\u63a5\u5373\u5f97\u7b26\u5408\u771f\u503c\u8868\u7684\u547d\u9898\u516c\u5f0f\u3002</p>"},{"location":"math/discrete-mathematics/chapter-2/#f","title":"\u4ece\u503c\u4e3aF\u7684\u884c\u751f\u6210","text":"<p>\u5bf9\u4e8e\u5305\u542b\\(n\\)\u4e2a\u547d\u9898\u53d8\u5143\\(P_1, \\dots, P_n\\)\u7684\u547d\u9898\u516c\u5f0f\uff0c\u5199\u51fa\u5982\u4e0b\u6790\u53d6\u5f0f\uff1a</p> \\[ P_1\\lor P_2\\lor \\dots \\lor P_n \\] <p>\u5bf9\u4e8e\u771f\u503c\u8868\u7684\u6bcf\u4e2a\u53d6\u503c\u4e3a\\(F\\)\u7684\u884c\uff0c\u82e5\u5bf9\u5e94\u7684\\(P_i\\)\u4e3a\\(T\\)\uff0c\u5219\u5c06\u6790\u53d6\u5f0f\u4e2d\u7684\u5bf9\u5e94\\(P_i\\)\u66ff\u6362\u4e3a\\(\\lnot P_i\\)\u3002\u5c06\u6240\u5f97\u7684\u516c\u5f0f\u4f7f\u7528\u5408\u53d6\u8fd0\u7b97\u7b26\u8fde\u63a5\u5373\u5f97\u7b26\u5408\u771f\u503c\u8868\u7684\u547d\u9898\u516c\u5f0f\u3002</p>"},{"location":"math/discrete-mathematics/chapter-2/#_4","title":"\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6","text":"<p>\u8bbe\u96c6\u5408\\(A\\)\u4e3a\u7531\u8054\u7ed3\u8bcd\u7ec4\u6210\u7684\u96c6\u5408\uff0c\u82e5\u4efb\u610f\u547d\u9898\u516c\u5f0f\u90fd\u6709\u901a\u8fc7\u547d\u9898\u516c\u5f0f\u4f7f\u7528\\(A\\)\u4e2d\u7684\u8054\u7ed3\u8bcd\u7ec4\u5408\u800c\u6210\u7684\u516c\u5f0f\u4e0e\u4e4b\u7b49\u503c\uff0c\u5219\\(A\\)\u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6</p> <p>\u901a\u8fc7\u5982\u4e0a\u5bf9\u771f\u503c\u8868\u7684\u5206\u6790\uff0c\u4efb\u4f55\u771f\u503c\u8868\u90fd\u80fd\u4f7f\u7528\\(\\{\\land, \\lor, \\lnot\\}\\)\u4e09\u4e2a\u8fd0\u7b97\u7b26\u8868\u793a\u51fa\u4e00\u4e2a\u547d\u9898\u516c\u5f0f\u3002\u5047\u8bbe\u5b58\u5728\u4e00\u4e2a\u516c\u5f0f\\(P\\)\uff0c\u4e0d\u5b58\u5728\\(\\{\\land, \\lor, \\lnot\\}\\)\u7ec4\u6210\u7684\u516c\u5f0f\u4e0e\u4e4b\u7b49\u503c\u3002\u4f46\u901a\u8fc7\\(P\\)\u7684\u771f\u503c\u8868\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u4e2a\u547d\u9898\u516c\u5f0f\\(Q\\)\uff0c\u5219\\(Q\\)\u4e0e\\(P\\)\u7684\u771f\u503c\u8868\u76f8\u540c\uff0c\\(P=Q\\)\uff0c\u77db\u76fe\u3002\u56e0\u6b64\\(\\{\\land, \\lor, \\lnot\\}\\)\u662f\u5b8c\u5907\u7684\u3002</p> <p>\u4ee5\u4e0b\u5217\u51fa\u4e86\u4e00\u90e8\u5206\u8054\u7ed3\u8bcd\u7684\u6700\u5c0f\u5b8c\u5907\u96c6\uff1a</p> <ul> <li>\\(\\{\\lor, \\lnot\\}\\)</li> <li>\\(\\{\\land, \\lnot\\}\\)</li> <li>\\(\\{\\uparrow\\}\\)</li> <li>\\(\\{\\downarrow\\}\\)</li> <li>\\(\\{\\lnot, \\rightarrow\\}\\)</li> </ul> <p>\u5982\u679c\\(A\\)\u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6\uff0c\u96c6\u5408\\(B\\)\u4e2d\u7684\u8054\u7ed3\u8bcd\u53ef\u4ee5\u901a\u8fc7\u7ec4\u5408\u5f97\u5230\u4e0e\\(A\\)\u4e2d\u8054\u7ed3\u8bcd\u7b49\u4ef7\u7684\u8054\u7ed3\u8bcd\uff0c\u5219\\(B\\)\u4e5f\u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6\u3002</p> <p>\u8bc1\u660e\uff1a\\(\\{\\lor, \\lnot\\}\\)\u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6\uff1a</p> \\[ P\\land Q = \\lnot (\\lnot P\\lor \\lnot Q) \\] <p>\u8bc1\u660e\uff1a\\(\\{\\land, \\lnot\\}\\)\u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6\uff1a</p> \\[ P\\lor Q = \\lnot (\\lnot P\\land \\lnot Q) \\] <p>\u8bc1\u660e\uff1a\\(\\{\\uparrow\\}\\)\u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6\uff1a</p> <ul> <li>\u8bc1\u660e\\(\\lnot P\\)\u53ef\u4ee5\u4ec5\u4f7f\u7528\\(\\uparrow\\)\u8fd0\u7b97\u7b26\u8868\u793a\uff1a</li> </ul> <p>$$   \\begin{aligned}   \\lnot P &amp;= \\lnot (P\\land P) \\   &amp;= P\\uparrow P   \\end{aligned}   $$</p> <ul> <li>\u8bc1\u660e\\(P\\land Q\\)\u53ef\u4ee5\u4ec5\u4f7f\u7528\\(\\uparrow\\)\u8fd0\u7b97\u7b26\u8868\u793a\uff1a</li> </ul> <p>$$   \\begin{aligned}   P\\land Q&amp;= \\lnot \\lnot (P\\land Q) \\   &amp;= \\lnot (P\\uparrow Q) \\   &amp;= (P\\uparrow Q) \\uparrow (P\\uparrow Q)   \\end{aligned}   $$</p> <p>\u8bc1\u660e\uff1a\\(\\{\\downarrow\\}\\)\u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6\uff1a</p> <ul> <li>\u8bc1\u660e\\(\\lnot P\\)\u53ef\u4ee5\u4ec5\u4f7f\u7528\\(\\downarrow\\)\u8fd0\u7b97\u7b26\u8868\u793a\uff1a</li> </ul> <p>$$   \\begin{aligned}   \\lnot P &amp;= \\lnot (P\\lor P) \\   &amp;= P\\downarrow P   \\end{aligned}   $$</p> <ul> <li>\u8bc1\u660e\\(P\\lor Q\\)\u53ef\u4ee5\u4ec5\u4f7f\u7528\\(\\downarrow\\)\u8fd0\u7b97\u7b26\u8868\u793a\uff1a</li> </ul> <p>$$   \\begin{aligned}   P\\lor Q&amp;= \\lnot \\lnot (P\\lor Q) \\   &amp;= \\lnot (P\\downarrow Q) \\   &amp;= (P\\downarrow Q) \\downarrow (P\\downarrow Q)   \\end{aligned}   $$</p> <p>\u8bc1\u660e\uff1a\\(\\{\\rightarrow, \\lnot\\}\\)\u662f\u8054\u7ed3\u8bcd\u7684\u5b8c\u5907\u96c6\uff1a</p> <p>\\(P\\lor Q = \\lnot \\lnot P\\lor Q = \\lnot P\\rightarrow Q\\)</p>"},{"location":"math/discrete-mathematics/chapter-2/#_5","title":"\u5bf9\u5076\u5f0f","text":"<p>\u8bbe\\(A\\)\u4e3a\u547d\u9898\u516c\u5f0f\uff0c\u5c06\\(A\\)\u4e2d\u51fa\u73b0\u7684\\(\\lor, \\land, T, F\\)\u5206\u522b\u4f7f\u7528\\(\\land, \\lor, F, T\\)\u8fdb\u884c\u66ff\u6362\uff0c\u6240\u5f97\u5230\u7684\u516c\u5f0f\u79f0\u4e3a\\(A\\)\u7684\u5bf9\u5076\u5f0f\uff0c\u8bb0\u4e3a\\(A^*\\)</p> <p>\u8bbe\\(A\\)\u4e3a\u547d\u9898\u516c\u5f0f\uff0c\u5c06\\(A\\)\u4e2d\u51fa\u73b0\u7684\u6240\u6709\u547d\u9898\u53d8\u9879\\(P_1,\\dots, P_n\\)\u66ff\u6362\u4e3a\\(\\lnot P_1, \\dots, \\lnot P_n\\)\uff0c\u6240\u5f97\u5230\u7684\u516c\u5f0f\u79f0\u4e3a\\(A\\)\u7684\u5426\u547d\u9898\uff0c\u8bb0\u4e3a\\(A^-\\)</p> <p>\u5219\u53d6\u5bf9\u5076\u5f0f\u8fd0\u7b97\u3001\u53d6\u5426\u547d\u9898\u8fd0\u7b97\u6709\u5982\u4e0b\u6027\u8d28\uff1a</p> <ol> <li>\\(\\lnot (A^*) = (\\lnot A)^*, \\lnot (A^-) = (\\lnot A)^-\\)</li> <li>\\((A^*)^*=A, (A^-)^- =A\\)</li> <li>\\(A^{*-}=\\lnot A\\)</li> <li>\\(A=B\\Rightarrow A^*=B^*\\)</li> <li>\u5bf9\\(A\\rightarrow B\\)\u53d6\u5bf9\u5076\u5f0f\u53ef\u5f97\\(A\\rightarrow B=T\\Rightarrow B^*\\rightarrow A^*=T\\)</li> </ol> <p>\u6839\u636e\u5bf9\u5076\u5f0f\u548c\u5426\u547d\u9898\u7684\u5b9a\u4e49\uff0c2\u5f0f\u81ea\u7136\u6210\u7acb\u30021\u5f0f\u548c3\u5f0f\u53ef\u4ee5\u901a\u8fc7\u6570\u5b66\u5f52\u7eb3\u6cd5\u8fdb\u884c\u8bc1\u660e\u3002</p>"},{"location":"math/discrete-mathematics/chapter-2/#_6","title":"\u8303\u5f0f","text":"<p>\u5b9a\u4e49\u5982\u4e0b\u6982\u5ff5\uff1a</p> <ul> <li>\u6587\u5b57\uff1a\u7b80\u5355\u547d\u9898\\(P\\)\u53ca\u5176\u5426\u5b9a\u5f62\u5f0f</li> <li>\u5408\u53d6\u5f0f\uff1a\u4e00\u4e9b\u6587\u5b57\u7684\u5408\u53d6\uff0c\u5f62\u5982\\(P_1\\land \\dots \\land P_n\\)</li> <li>\u6790\u53d6\u5f0f\uff08\u5b50\u53e5\uff09\uff1a\u4e00\u4e9b\u6587\u5b57\u7684\u6790\u53d6\uff0c\u5f62\u5982\\(P_1\\lor \\dots\\lor P_n\\)</li> <li>\u4e92\u8865\u5bf9\uff1a\u6587\u5b57\u4e0e\u5176\u5bf9\u5e94\u7684\u5426\u5b9a\u5f62\u5f0f</li> <li>\u6790\u53d6\u8303\u5f0f\uff1a\u5408\u53d6\u5f0f\u901a\u8fc7\u6790\u53d6\u8054\u7ed3\u8bcd\u8fde\u63a5\u7684\u516c\u5f0f\uff0c\u5f62\u5982\\(A_1\\lor \\dots\\lor A_n\\)\uff0c\u5176\u4e2d\\(A_i\\)\u4e3a\u5408\u53d6\u5f0f</li> <li>\u5408\u53d6\u8303\u5f0f\uff1a\u6790\u53d6\u5f0f\u901a\u8fc7\u5408\u53d6\u8054\u7ed3\u8bcd\u8fde\u63a5\u7684\u516c\u5f0f\uff0c\u5f62\u5982\\(A_1\\land \\dots \\land A_n\\)\uff0c\u5176\u4e2d\\(A_i\\)\u4e3a\u6790\u53d6\u5f0f</li> </ul> <p>\u7531\u6b64\uff0c\u53ef\u4ee5\u5bfc\u51fa\u8303\u5f0f\u5b9a\u7406\uff0c\u5373\u4efb\u4e00\u547d\u9898\u516c\u5f0f\u90fd\u5b58\u5728\u6709\u4e0e\u4e4b\u7b49\u503c\u7684\u5408\u53d6\u8303\u5f0f\u4e0e\u6790\u53d6\u8303\u5f0f\u3002\u8303\u5f0f\u5b9a\u7406\u7684\u6b63\u786e\u6027\u53ef\u4ee5\u901a\u8fc7\u5217\u5199\u547d\u9898\u516c\u5f0f\u7684\u771f\u503c\u8868\u4e0e\u4ece\u771f\u503c\u8868\u5217\u5199\u547d\u9898\u516c\u5f0f\u8bc1\u660e\u3002</p> <p>\u8ba1\u7b97\u5408\u53d6\u8303\u5f0f\u4e0e\u6790\u53d6\u8303\u5f0f\uff1a</p> <ol> <li>\u6d88\u53bb\u903b\u8f91\u8054\u7ed3\u8bcd\\(A\\rightarrow B\\)\u4e0e\\(A\\leftrightarrow B\\)\uff0c\u66ff\u6362\u4e3a\\(\\lnot A\\lor B\\)\u4e0e\\((\\lnot A\\lor B)\\land (A\\lor \\lnot B)\\)</li> <li>\u4f7f\u7528\u6469\u6839\u5f8b\u4e0e\u53cc\u91cd\u5426\u5b9a\u5f8b\u6d88\u9664\\(\\lor\\)\u6216\\(\\land\\)\uff0c\u5e76\u6d88\u9664\u591a\u4f59\u7684\\(\\lnot\\)</li> <li>\u5c06\u6240\u6709\u7684\\(\\lnot\\)\u79fb\u52a8\u5230\u547d\u9898\u53d8\u9879\\(P_i\\)\u524d</li> <li>\u4f7f\u7528\u5206\u914d\u5f8b\u5c06\u516c\u5f0f\u5316\u4e3a\u8303\u5f0f</li> </ol>"},{"location":"math/discrete-mathematics/chapter-2/#_7","title":"\u4e3b\u8303\u5f0f","text":"<p>\u5bf9\u4e8e\u516c\u5f0f\\(Q = Q_1\\land \\dots \\land Q_n\\)\uff0c\u5f0f\u4e2d\\(Q_i=P_i\\)\u6216\\(Q_i=\\lnot P_i\\)\u3002\u5219\\(Q\\)\u4e3a\u6781\u5c0f\u9879\uff0c\u8bb0\u4e3a\\(m_i\\)\u3002</p> <ul> <li>\u6781\u5c0f\u9879\u4e2d\u5fc5\u987b\u51fa\u73b0\u6240\u6709\u7684\u547d\u9898\u53d8\u9879</li> <li>\\(n\\)\u4e2a\u547d\u9898\u53d8\u9879\u53ef\u4ee5\u7ec4\u6210\\(2^n\\)\u4e2a\u6781\u5c0f\u9879\uff0c\u4f9d\u6b21\u8868\u793a\u4e3a\\(m_1, \\dots m_{2^n}\\)</li> </ul> <p>\u5bf9\u4e8e\u516c\u5f0f\\(R = R_1\\lor \\dots \\lor R_n\\)\uff0c\u5f0f\u4e2d\\(R_i = P_i\\)\u6216\\(R_i = \\lnot P_i\\)\u3002\u5219\\(R\\)\u4e3a\u6781\u5927\u9879\uff0c\u8bb0\u4e3a\\(M_i\\)</p> <p>\u4e0e\u6781\u5c0f\u9879\u76f8\u540c\uff0c\u6240\u6709\u7684\u547d\u9898\u53d8\u9879\u5fc5\u987b\u90fd\u51fa\u73b0\u5728\u6781\u5927\u9879\u4e2d\uff0c\u4e14\\(n\\)\u4e2a\u547d\u9898\u53d8\u9879\u53ef\u4ee5\u7ec4\u6210\\(2^n\\)\u4e2a\u6781\u5927\u9879\u3002</p> <p>\u4efb\u610f\u516c\u5f0f\\(A\\)\u7684\u8303\u5f0f\u4e2d\uff0c\u4ec5\u7531\u6781\u5c0f\u9879\u6784\u6210\u7684\u6790\u53d6\u8303\u5f0f\u4e3a\u4e3b\u6790\u53d6\u8303\u5f0f\uff0c\u4ec5\u7531\u6781\u5927\u9879\u6784\u6210\u7684\u5408\u53d6\u8303\u5f0f\u4e3a\u4e3b\u5408\u53d6\u8303\u5f0f\u3002\u4e3b\u6790\u53d6\u8303\u5f0f\u4e0e\u4e3b\u5408\u53d6\u8303\u5f0f\u90fd\u662f\u552f\u4e00\u7684\u3002</p> <p>\u6781\u5927\u9879\u3001\u6781\u5c0f\u9879\u6ee1\u8db3\u5982\u4e0b\u6027\u8d28</p> <ol> <li>\u6781\u5927\u9879\u3001\u6781\u5c0f\u9879\u7684\u6570\u91cf\u7b49\u4e8e\u516c\u5f0f\u53ef\u80fd\u7684\u89e3\u91ca\u6570\u91cf\uff0c\u5373\\(2^n\\)</li> <li>\u6bcf\u4e2a\u6781\u5c0f\u9879\u4ec5\u5728\u516c\u5f0f\u7684\u4e00\u4e2a\u89e3\u91ca\u4e0b\u4e3a\\(T\\)\uff0c\u6bcf\u4e2a\u6781\u5927\u9879\u4ec5\u5728\u516c\u5f0f\u7684\u4e00\u4e2a\u89e3\u91ca\u4e0b\u4e3a\\(F\\)</li> <li>\u6781\u5c0f\u9879\u3001\u6781\u5927\u9879\u4e24\u4e24\u4e0d\u7b49\u503c\uff0c\u6709\\(m_i\\land m_j\\leftrightarrow i=j, M_i\\lor M_j\\leftrightarrow i\\not= j\\)\u3002</li> <li>\u4efb\u4e00\u542b\u6709\\(n\\)\u4e2a\u547d\u9898\u53d8\u9879\u7684\u516c\u5f0f\u90fd\u53ef\u4ee5\u7528\\(k\\leq n\\)\u4e2a\u6781\u5c0f\u9879\u6216\\(k\\leq n\\)\u4e2a\u6781\u5927\u9879\u8868\u793a\u3002</li> <li>\\(\\bigwedge _{i=0} ^{2^n-1} M_i=F, \\bigvee _{i=0}^{2^n-1} m_i = T\\)</li> </ol>"},{"location":"math/discrete-mathematics/chapter-2/#_8","title":"\u63a8\u7406\u5f62\u5f0f","text":"<p>\u5c06\u81ea\u7136\u8bed\u53e5\u63cf\u8ff0\u7684\u63a8\u7406\u5173\u7cfb\u7ecf\u62bd\u8c61\u5316\u540e\u4f7f\u7528\u6761\u4ef6\u5f0f\u7684\u8868\u793a</p> <p>\u82e5\\(A\\rightarrow B=T\\)\uff0c\u79f0\\(A\\)\u91cd\u8a00\u8574\u542b\\(B\\)\uff0c\u8bb0\u4f5c\\(A\\Rightarrow B\\)\u3002\u91cd\u8a00\u8574\u542b\u5173\u7cfb\u5177\u6709\u5982\u4e0b\u6027\u8d28\uff1a</p> <ol> <li>\u82e5\\(A=T\\)\uff0c\u4e14\\(A\\Rightarrow B\\)\uff0c\u5219\\(B=T\\)</li> <li>\u82e5\\(A\\Rightarrow B\\land B\\Rightarrow A\\)\uff0c\u5219\\(A=B\\)</li> <li>\u82e5\\(A\\Rightarrow B\\land B\\Rightarrow C\\)\uff0c\u5219\\(A\\Rightarrow C\\)</li> <li>\u82e5\\(A\\Rightarrow B\\land A\\Rightarrow C\\)\uff0c\u5219\\(A\\Rightarrow (B\\land C)\\)</li> <li>\u82e5\\(A\\Rightarrow C\\land B\\Rightarrow C\\)\uff0c\u5219\\((A\\lor B)\\Rightarrow C\\)</li> </ol> <p>\u8981\u8bc1\u660e\u4e00\u4e2a\u5f0f\u5b50\u4e3a\u91cd\u8a00\u8574\u542b\u5f0f\uff0c\u53ef\u4ee5\u8bc1\u660e\\(A\\rightarrow B\\)\u4e3a\u91cd\u8a00\u5f0f\u6216\\(\\lnot A\\land B\\)\u4e3a\u77db\u76fe\u5f0f\u3002</p>"},{"location":"math/discrete-mathematics/chapter-2/#_9","title":"\u57fa\u672c\u7684\u63a8\u7406\u516c\u5f0f","text":"<p>\u5982\u4e0b\u5217\u51fa\u4e00\u4e9b\u57fa\u672c\u7684\u63a8\u7406\u516c\u5f0f\uff0c\u5f0f\u4e2d\\(P,Q,R,S\\)\u5747\u4e3a\u4efb\u610f\u547d\u9898\u53d8\u9879</p> <ul> <li>\\(P\\land Q\\Rightarrow P\\)</li> <li>\\(\\lnot(P\\rightarrow Q)\\Rightarrow P\\)</li> <li>\\(\\lnot(P\\rightarrow Q)\\Rightarrow \\lnot Q\\)</li> <li>\\(P\\Rightarrow P\\lor Q\\)</li> <li>\\(\\lnot P\\Rightarrow P\\rightarrow Q\\)</li> <li>\\(Q\\Rightarrow P\\rightarrow Q\\)</li> <li>\\(\\lnot P \\land(P\\lor Q)\\Rightarrow Q\\)</li> <li>\\(P\\land (P\\rightarrow Q) \\Rightarrow Q\\)\uff0c\u5206\u79bb\u89c4\u5219</li> <li>\\(\\lnot Q\\land (P\\rightarrow Q)\\Rightarrow \\lnot P\\)</li> <li>\\((P\\rightarrow Q)\\land (Q\\rightarrow R)\\Rightarrow P\\rightarrow R\\)\uff0c\u4e09\u6bb5\u8bba</li> <li>\\((P\\leftrightarrow Q)\\land (Q\\leftrightarrow R)\\Rightarrow P\\leftrightarrow R\\)</li> <li>\\((P\\rightarrow R)\\land (Q\\rightarrow R)\\land (P\\lor Q)\\Rightarrow R\\)</li> <li>\\((R\\rightarrow Q)\\land (R\\rightarrow S)\\land (P\\lor R)\\Rightarrow Q\\lor S\\)</li> <li>\\((P\\rightarrow Q)\\land (R\\rightarrow S)\\land (\\lnot Q\\lor \\lnot S)\\Rightarrow (\\lnot P\\lor \\lnot R)\\)</li> <li>\\(Q\\rightarrow R\\Rightarrow ((P\\lor Q)\\rightarrow (P\\lor R))\\)</li> <li>\\(Q\\rightarrow R\\Rightarrow ((P\\rightarrow Q)\\rightarrow (P\\rightarrow R))\\)</li> </ul>"},{"location":"math/discrete-mathematics/chapter-2/#_10","title":"\u63a8\u7406\u6f14\u7b97","text":"<p>\u63a8\u7406\u6f14\u7b97\u8fc7\u7a0b\u4e2d\uff0c\u6709\u5982\u4e0b\u89c4\u5219\u53ef\u4ee5\u4f7f\u7528\uff1a</p> <ul> <li>\u524d\u63d0\u5f15\u5165\u89c4\u5219\uff1a\u63a8\u7406\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u968f\u65f6\u5f15\u5165\u524d\u63d0</li> <li>\u7ed3\u8bba\u5f15\u7528\u89c4\u5219\uff1a\u63a8\u7406\u8fc7\u7a0b\u4e2d\u7684\u4e2d\u95f4\u7ed3\u8bba\u53ef\u4ee5\u4f5c\u4e3a\u540e\u7eed\u63a8\u7406\u7684\u524d\u63d0</li> <li>\u4ee3\u5165\u89c4\u5219\uff1a\u63a8\u7406\u8fc7\u7a0b\u4e2d\u5bf9\u91cd\u8a00\u5f0f\u7684\u547d\u9898\u53d8\u9879\u53ef\u4ee5\u4f7f\u7528\u4ee3\u5165\u89c4\u5219</li> <li>\u7f6e\u6362\u89c4\u5219\uff1a\u63a8\u7406\u8fc7\u7a0b\u4e2d\u4efb\u4f55\u90e8\u5206\u90fd\u53ef\u4ee5\u7528\u4e0e\u4e4b\u7b49\u503c\u7684\u547d\u9898\u516c\u5f0f\u8fdb\u884c\u66ff\u6362</li> <li>\u5206\u79bb\u89c4\u5219\uff1a\u82e5\\(A\\)\u4e14\\(A\\rightarrow B\\)\u5219\\(B\\)</li> <li>\u6761\u4ef6\u8bc1\u660e\u89c4\u5219\uff1a\\(A_1\\land A_2\\Rightarrow B \\Leftrightarrow A_1\\Rightarrow A_2\\rightarrow B\\)</li> </ul>"},{"location":"math/discrete-mathematics/chapter-2/#_11","title":"\u5f52\u7ed3\u63a8\u7406","text":"<p>\u601d\u8def\uff1a\u8981\u8bc1\u660e\\(A\\Rightarrow B\\)\uff0c\u53ef\u8bc1\u660e\\(A\\land \\lnot B=F\\)\u3002</p> <ul> <li>\u5c06\\(C = A\\land \\lnot B\\)\u5316\u4e3a\u5408\u53d6\u8303\u5f0f\\(Q_1\\land \\dots \\land Q_n\\)\uff0c\u5f0f\u4e2d\u7684\u6240\u6709\u6790\u53d6\u5f0f\u6784\u6210\u5b50\u53e5\u96c6\u5408\\(\\{Q_1,\\dots, Q_n\\}\\)</li> <li>\u6d88\u53bb\u5b50\u53e5\u96c6\u5408\u4e2d\u7684\u4e92\u8865\u5bf9\uff0c\u5982\\(P\\lor R\\)\u4e0e\\(\\lnot P\\lor \\lnot Q\\)\u5f52\u7ed3\u5f97\u5230\\(R\\lor \\lnot Q\\)\u3002\u4e0d\u65ad\u91cd\u590d\u6d88\u53bb\u8fc7\u7a0b\u3002</li> <li>\u76f4\u5230\u5b50\u53e5\u96c6\u5408\u4e3a\u7a7a\uff0c\u5f97\u5230\u7a7a\u5b50\u53e5\\(\\square\\)\uff0c\u8bc1\u660e\\(A\\land \\lnot B\\)\u662f\u77db\u76fe\u5f0f</li> </ul>"},{"location":"math/discrete-mathematics/chapter-3/","title":"\u547d\u9898\u903b\u8f91\u7684\u516c\u7406\u5316","text":"<p>\u516c\u7406\u7cfb\u7edf\u5305\u542b\u5982\u4e0b\u7ed3\u6784\uff1a</p> <ul> <li>\u521d\u59cb\u7b26\u53f7\uff1a\u5b9a\u4e49\u4e86\u516c\u7406\u7cfb\u7edf\u4e2d\u5141\u8bb8\u51fa\u73b0\u7684\u7b26\u53f7\u96c6\u5408</li> <li>\u5f62\u6210\u89c4\u5219\uff1a\u5b9a\u4e49\u4e86\u7b26\u53f7\u5e8f\u5217\u7684\u5408\u6cd5\u6027</li> <li>\u516c\u7406\uff1a\u516c\u7406\u7cfb\u7edf\u4e2d\u6700\u57fa\u672c\u7684\u91cd\u8a00\u5f0f\uff0c\u662f\u63a8\u6f14\u5176\u4ed6\u6240\u6709\u91cd\u8a00\u5f0f\u7684\u4f9d\u636e</li> <li>\u53d8\u5f62\u89c4\u5219\uff1a\u516c\u7406\u7cfb\u7edf\u6240\u89c4\u5b9a\u7684\u63a8\u6f14\u89c4\u5219\uff0c\u516c\u7406\u901a\u8fc7\u53d8\u5f62\u89c4\u5219\u5f97\u5230\u7684\u516c\u5f0f\u4e3a\u91cd\u8a00\u5f0f\uff0c\u79f0\u4e3a\u5b9a\u7406</li> </ul>"},{"location":"math/discrete-mathematics/chapter-3/#_2","title":"\u547d\u9898\u903b\u8f91\u7684\u516c\u7406\u7cfb\u7edf","text":"<p>\u4f9d\u636e\u516c\u7406\u7cfb\u7edf\u7684\u7ed3\u6784\u5efa\u7acb\u547d\u9898\u903b\u8f91\u7684\u516c\u7406\u7cfb\u7edf\u3002\u5e94\u5f53\u6ce8\u610f\u5230\uff0c\u547d\u9898\u903b\u8f91\u7684\u516c\u7406\u7cfb\u7edf\u4e0d\u662f\u552f\u4e00\u7684\u3002</p>"},{"location":"math/discrete-mathematics/chapter-3/#_3","title":"\u521d\u59cb\u7b26\u53f7","text":"<p>\u5927\u5199\u82f1\u6587\u5b57\u6bcd\\(A,\\dots ,Z\\)\u8868\u793a\u547d\u9898 \\(\\lnot, \\lor\\)\u8868\u793a\u8054\u7ed3\u8bcd \\((, )\\)\u4e00\u5bf9\u62ec\u53f7\u89c4\u5b9a\u4e86\u8054\u7ed3\u8bcd\u8fd0\u7b97\u7684\u4f18\u5148\u987a\u5e8f \\(\\vdash\\)\u8868\u660e\u4e00\u4e2a\u516c\u5f0f\u662f\u6c38\u771f\u5f0f</p>"},{"location":"math/discrete-mathematics/chapter-3/#_4","title":"\u5f62\u6210\u89c4\u5219","text":"<p>\u79f0\u521d\u59cb\u7b26\u53f7\u6784\u6210\u7684\u7b26\u53f7\u5e8f\u5217\u4e3a\u516c\u5f0f\uff0c\u53ea\u6709\u7b26\u5408\u4ee5\u4e0b\u6761\u4ef6\u7684\u7b26\u53f7\u5e8f\u5217\u662f\u5408\u5f0f\u516c\u5f0f\uff1a</p> <ol> <li>\u5355\u4e2a\u7b26\u53f7\\(\\pi\\)\uff0c\\(\\pi\\)\u662f\u5927\u5199\u82f1\u6587\u5b57\u6bcd</li> <li>\u82e5\\(A\\)\u4e3a\u5408\u5f0f\u516c\u5f0f\uff0c\\(\\lnot A\\)\u662f\u5408\u5f0f\u516c\u5f0f</li> <li>\u82e5\\(A, B\\)\u4e3a\u5408\u5f0f\u516c\u5f0f\uff0c\\((A\\lor B)\\)\u662f\u5408\u5f0f\u516c\u5f0f</li> </ol> <p>\u4e3a\u7b80\u5316\u5176\u4ed6\u5408\u5f0f\u516c\u5f0f\u7684\u8868\u8fbe\uff0c\u5f15\u5165\u5982\u4e0b\u6240\u793a\u7684\u516c\u5f0f\uff1a</p> <ul> <li>\\((A\\rightarrow B):= (\\lnot A\\lor B)\\)</li> <li>\\((A\\land B):= \\lnot (\\lnot A\\lor \\lnot B)\\)</li> <li>\\((A\\leftrightarrow B):= ((A\\rightarrow B)\\land (B\\rightarrow A))\\)</li> </ul>"},{"location":"math/discrete-mathematics/chapter-3/#_5","title":"\u516c\u7406","text":"<p>\u5728\u516c\u7406\u7cfb\u7edf\u4e2d\u5f15\u5165\u5982\u4e0b\u516c\u7406\uff1a</p> <ul> <li>\\(\\vdash ((P\\lor P)\\rightarrow P)\\)</li> <li>\\(\\vdash (P\\rightarrow (P\\lor Q))\\)</li> <li>\\(\\vdash ((P\\lor Q) \\rightarrow (Q\\lor P))\\)</li> <li>\\(\\vdash ((Q\\rightarrow R)\\rightarrow ((P\\lor Q)\\rightarrow (P\\lor R)))\\)</li> </ul>"},{"location":"math/discrete-mathematics/chapter-3/#_6","title":"\u63a8\u7406\u89c4\u5219","text":"<p>\u4ee3\u5165\u89c4\u5219\u3001\u5206\u79bb\u89c4\u5219\u3001\u7f6e\u6362\u89c4\u5219\u662f\u547d\u9898\u903b\u8f91\u516c\u7406\u7cfb\u7edf\u4e2d\u7684\u63a8\u7406\u89c4\u5219</p>"},{"location":"math/discrete-mathematics/chapter-3/#_7","title":"\u738b\u6d69\u7b97\u6cd5","text":""},{"location":"math/discrete-mathematics/chapter-3/#_8","title":"\u521d\u59cb\u7b26\u53f7","text":"<p>\u5927\u5199\u5b57\u6bcd\\(A, \\dots, Z\\)\u8868\u793a\u547d\u9898 \\(\\lnot, \\land, \\lor, \\rightarrow, \\leftrightarrow\\)\u8868\u793a\u8054\u7ed3\u8bcd \\((, ), ,\\)\u8868\u793a\u5706\u62ec\u53f7\u4e0e\u9017\u53f7 \\(\\alpha, \\beta, \\dots, \\omega\\)\u8868\u793a\u516c\u5f0f\u4e32</p>"},{"location":"math/discrete-mathematics/chapter-3/#_9","title":"\u5f62\u6210\u89c4\u5219","text":"<p>\u7b26\u5408\u4ee5\u4e0b\u6761\u4ef6\u7684\u7b26\u53f7\u5e8f\u5217\u79f0\u4e3a\u5408\u5f0f\u516c\u5f0f\uff1a</p> <ol> <li>\u5355\u4e2a\u7b26\u53f7\\(\\pi\\)\uff0c\\(\\pi\\)\u662f\u5927\u5199\u82f1\u6587\u5b57\u6bcd</li> <li>\u82e5\\(A\\)\u4e3a\u5408\u5f0f\u516c\u5f0f\uff0c\u5219\\(\\lnot A\\)\u4e3a\u5408\u5f0f\u516c\u5f0f</li> <li>\u82e5\\(A, B\\)\u4e3a\u5408\u5f0f\u516c\u5f0f\uff0c\u5219\\((A\\lnot B), (A\\lor B), (A\\rightarrow B), (A\\leftrightarrow B)\\)\u662f\u5408\u5f0f\u516c\u5f0f</li> </ol> <p>\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u79f0\u4e3a\u516c\u5f0f\u4e32\uff1a</p> <ol> <li>\u7a7a\u7b26\u53f7\u4e32\u662f\u516c\u5f0f\u4e32</li> <li>\u5408\u5f0f\u516c\u5f0f\u662f\u516c\u5f0f\u4e32</li> <li>\u5982\u679c\\(\\alpha\\)\u548c\\(\\beta\\)\u662f\u516c\u5f0f\u4e32\uff0c\u5219\\(\\alpha, \\beta\\)\u662f\u516c\u5f0f\u4e32</li> </ol> <p>\u516c\u5f0f\u4e32\u4e0e\u7ec4\u6210\u516c\u5f0f\u4e32\u7684\u5408\u5f0f\u516c\u5f0f\u7684\u987a\u5e8f\u65e0\u5173\u3002</p>"},{"location":"math/discrete-mathematics/chapter-3/#_10","title":"\u5b9a\u4e49","text":"<ol> <li>\u5b9a\u4e49\u76f8\u7ee7\u5f0f\u4e3a\\(\\alpha\\stackrel s\\rightarrow\\beta\\)\uff0c\u5176\u4e2d\\(\\alpha, \\beta\\)\u90fd\u662f\u516c\u5f0f\u4e32</li> <li>\u524d\u4ef6\u4e2d\u7684\\(,\\)\u89e3\u91ca\u4e3a\\(\\land\\)\uff0c\u540e\u4ef6\u4e2d\u7684\\(,\\)\u89e3\u91ca\u4e3a\\(\\lor\\)</li> <li>\u82e5\\(\\alpha\\stackrel s\\rightarrow \\beta\\)\u4e3a\u91cd\u8a00\u5f0f\uff0c\u53ef\u4ee5\u8bb0\u4f5c\\(\\alpha\\stackrel s\\Rightarrow \\beta\\)</li> </ol>"},{"location":"math/discrete-mathematics/chapter-3/#_11","title":"\u516c\u7406","text":"<p>\u82e5\\(\\alpha\\)\u548c\\(\\beta\\)\u7684\u516c\u5f0f\u4ec5\u4e3a\u547d\u9898\u53d8\u9879\uff0c\u4e0d\u5305\u542b\u8054\u7ed3\u8bcd\uff0c\u5219\\(\\alpha\\stackrel s\\rightarrow \\beta\\)\u4e3a\u91cd\u8a00\u5f0f\u7b49\u4ef7\u4e8e\\(\\alpha\\)\u4e0e\\(\\beta\\)\u4e2d\u81f3\u5c11\u542b\u6709\u4e00\u4e2a\u76f8\u540c\u7684\u547d\u9898\u53d8\u9879</p>"},{"location":"math/discrete-mathematics/chapter-3/#_12","title":"\u63a8\u7406\u89c4\u5219","text":"<p>\u5bf9\u4e8e\u5b58\u5728\u4e8e\u524d\u4ef6\u4e2d\u7684\u8fd0\u7b97\u7b26\uff0c\u63a8\u7406\u89c4\u5219\u5982\u4e0b\uff1a</p> <ul> <li>\\(\\lnot\\)\uff1a\u82e5\\(\\alpha, \\beta \\stackrel s\\Rightarrow X, \\gamma\\)\uff0c\u5219\\(\\alpha, \\lnot X, \\beta \\stackrel x\\Rightarrow \\gamma\\)</li> <li>\\(\\land\\)\uff1a\u82e5\\(X, Y, \\alpha, \\beta\\stackrel s\\Rightarrow \\gamma\\)\uff0c\u5219\\(\\alpha, X\\land Y, \\beta\\stackrel s\\Rightarrow Y\\)</li> <li>\\(\\lor\\)\uff1a\u82e5\\(X, \\alpha, \\beta \\stackrel s\\Rightarrow \\gamma\\)\u4e14\\(Y, \\alpha, \\beta \\stackrel s\\Rightarrow X, \\gamma\\)\uff0c\u5219\\(\\alpha, X\\lor Y, \\beta\\stackrel s\\Rightarrow \\gamma\\)</li> <li>\\(\\rightarrow\\)\uff1a\u82e5\\(Y, \\alpha, \\beta\\stackrel s\\Rightarrow \\gamma\\)\u4e14\\(\\alpha, \\beta\\stackrel s\\Rightarrow X, \\gamma\\)\uff0c\u5219\\(\\alpha, X\\rightarrow Y, \\beta\\stackrel s\\Rightarrow \\gamma\\)</li> <li>\\(\\leftrightarrow\\)\uff1a\u82e5\\(X, Y, \\alpha, \\beta\\stackrel s\\Rightarrow \\gamma\\)\u4e14\\(\\alpha, \\beta\\stackrel s\\Rightarrow X, Y, \\gamma\\)\uff0c\u5219\\(\\alpha, X\\leftrightarrow Y, \\beta\\stackrel s\\Rightarrow \\gamma\\)</li> </ul> <p>\u5bf9\u4e8e\u5b58\u5728\u4e8e\u540e\u4ef6\u4e2d\u7684\u8fd0\u7b97\u7b26\uff0c\u63a8\u7406\u89c4\u5219\u5982\u4e0b\uff1a</p> <ul> <li>\\(\\lnot\\)\uff1a\u82e5\\(X, \\alpha\\stackrel s\\Rightarrow \\beta, \\gamma\\)\uff0c\u5219\\(\\alpha\\stackrel s\\Rightarrow\\beta, \\lnot X, \\gamma\\)</li> <li>\\(\\land\\)\uff1a\u82e5\\(\\alpha\\stackrel s\\Rightarrow X, \\beta, \\gamma\\)\u4e14\\(\\alpha\\stackrel s\\Rightarrow\\)</li> <li>\\(\\land\\)\uff1a\u82e5\\(\\alpha\\stackrel s\\Rightarrow X, \\beta, \\gamma\\)\u4e14\\(\\alpha\\stackrel s\\Rightarrow Y, \\beta, \\gamma\\)\uff0c\u5219\\(\\alpha \\stackrel s\\Rightarrow\\beta, X\\land Y, \\gamma\\)</li> <li>\\(\\lor\\)\uff1a\u82e5\\(\\alpha\\stackrel s\\Rightarrow X, Y, \\beta, \\gamma\\)\uff0c\u5219\\(\\alpha\\stackrel s\\Rightarrow \\beta, X\\lor Y, \\gamma\\)</li> <li>\\(\\rightarrow\\)\uff1a\u82e5\\(X, \\alpha\\stackrel s\\Rightarrow Y, \\beta, \\gamma\\)\uff0c\u5219\\(\\alpha\\stackrel s\\Rightarrow \\beta, X\\rightarrow Y, \\gamma\\)</li> <li>\\(\\leftrightarrow\\)\uff1a\u82e5\\(X, \\alpha\\stackrel s\\Rightarrow Y, \\beta, \\gamma\\)\u4e14\\(Y, \\alpha\\stackrel s\\Rightarrow X, \\beta, \\gamma\\)\uff0c\u5219\\(\\alpha \\stackrel s\\Rightarrow \\beta, X\\leftrightarrow Y, \\gamma\\)</li> </ul> <p>\u5b9a\u7406\u7684\u63a8\u6f14\u8fc7\u7a0b\uff1a</p> <ol> <li>\u5c06\u8981\u8bc1\u660e\u7684\u5b9a\u7406\u5199\u6210\u76f8\u7ee7\u5f0f\u5f62\u5f0f</li> <li>\u4ece\u76f8\u7ee7\u5f0f\u51fa\u53d1\u4f7f\u7528\u53d8\u5f62\u89c4\u5219\u6d88\u53bb\u76f8\u7ee7\u5f0f\u4e24\u4fa7\u7684\u6240\u6709\u903b\u8f91\u8054\u7ed3\u8bcd</li> <li>\u82e5\u5f97\u5230\u7684\u6240\u6709\u76f8\u7ee7\u5f0f\u90fd\u662f\u516c\u7406\uff0c\u5219\u5b9a\u7406\u6210\u7acb</li> </ol>"},{"location":"math/discrete-mathematics/chapter-3/#_13","title":"\u547d\u9898\u903b\u8f91\u7684\u81ea\u7136\u6f14\u7ece\u7cfb\u7edf","text":""},{"location":"math/discrete-mathematics/chapter-3/#_14","title":"\u521d\u59cb\u7b26\u53f7","text":"<p>\u547d\u9898\u903b\u8f91\u7684\u81ea\u7136\u6f14\u7ece\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\u521d\u59cb\u7b26\u53f7\u7ee7\u627f\u81ea\u547d\u9898\u903b\u8f91\u7684\u516c\u7406\u7cfb\u7edf\u3002\u6b64\u5916\uff0c\u547d\u9898\u903b\u8f91\u7684\u81ea\u7136\u6f14\u7ece\u7cfb\u7edf\u8fd8\u5305\u542b\u5982\u4e0b\u521d\u59cb\u7b26\u53f7\uff1a</p> \\[ \\varGamma = \\{A_1, \\dots, A_n\\}=A_1, \\dots, A_n \\] <p>\u8868\u793a\u6709\u9650\u4e2a\u547d\u9898\u516c\u5f0f\u96c6\u5408\uff0c\u5b9a\u4e49\\(\\varGamma \\vdash A\\)\u8868\u793a\\(\\varGamma, A\\)\u4e4b\u95f4\u6709\u5f62\u5f0f\u63a8\u7406\u5173\u7cfb\uff0c\\(\\varGamma\\)\u4e3a\u5f62\u5f0f\u524d\u63d0\uff0c\\(A\\)\u4e3a\u5f62\u5f0f\u7ed3\u8bba\u3002</p>"},{"location":"math/discrete-mathematics/chapter-3/#_15","title":"\u5f62\u6210\u89c4\u5219","text":"<p>\u547d\u9898\u903b\u8f91\u7684\u81ea\u7136\u6f14\u7ece\u7cfb\u7edf\u7684\u5f62\u6210\u89c4\u5219\u4e0e\u547d\u9898\u903b\u8f91\u7684\u516c\u7406\u7cfb\u7edf\u7684\u5f62\u6210\u89c4\u5219\u76f8\u540c</p>"},{"location":"math/discrete-mathematics/chapter-3/#_16","title":"\u53d8\u5f62\u89c4\u5219","text":"<p>\u547d\u9898\u903b\u8f91\u7684\u81ea\u7136\u6f14\u7ece\u7cfb\u7edf\u6709\u5982\u4e0b\u53d8\u5f62\u89c4\u5219\uff1a</p> <ol> <li>\\(A_1, \\dots, A_n\\vdash A_i(i=1, \\dots, n)\\)\uff0c\u5373\u524d\u63d0\u4e2d\u7684\u4efb\u4f55\u547d\u9898\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u7ed3\u8bba\u51fa\u73b0</li> <li>\u4f20\u9012\u5f8b\uff1a\u82e5\\(\\varGamma \\vdash A\\)\u4e14\\(A\\vdash B\\)\uff0c\u5219\\(\\varGamma\\vdash B\\)</li> <li>\u53cd\u8bc1\u5f8b\uff1a\u82e5\\(\\varGamma, \\lnot A\\vdash B\\)\u4e14\\(\\varGamma, \\lnot A\\vdash \\lnot B\\)\uff0c\u5219\\(\\varGamma \\vdash A\\)\uff08\u7b49\u4ef7\u4e8e\u8bc1\u660e\\(\\varGamma \\land \\lnot A=F\\)\uff09</li> <li>\u5206\u79bb\u89c4\u5219\uff1a\\(A, A\\rightarrow B\\vdash B\\)</li> <li>\u8574\u542b\u8bcd\u5f15\u5165\uff1a\u82e5\\(\\varGamma, A\\vdash B\\)\uff0c\u5219\\(\\varGamma\\vdash A\\rightarrow B\\)</li> </ol>"},{"location":"math/discrete-mathematics/chapter-3/#_17","title":"\u5b9a\u7406","text":"<p>\u547d\u9898\u903b\u8f91\u7684\u81ea\u7136\u6f14\u7ece\u7cfb\u7edf\u5305\u542b\u7684\u5b9a\u7406\u4e0e\u547d\u9898\u903b\u8f91\u7684\u516c\u7406\u7cfb\u7edf\u5305\u542b\u7684\u5b9a\u7406\u76f8\u540c</p>"},{"location":"math/discrete-mathematics/chapter-3/#_18","title":"\u975e\u6807\u51c6\u903b\u8f91","text":"<ol> <li>\u591a\u503c\u903b\u8f91\uff0c\u82e5\\(P\\)\u53d6\u503c\u4e8e\\([0,1]\\)\uff0c\u53ef\u4ee5\u89e3\u91ca\u4e3a<ul> <li>\\(P=0\\)\u8868\u793a\\(P\\)\u771f</li> <li>\\(P=1\\)\u8868\u793a\\(P\\)\u5047</li> <li>\\(0&lt;P&lt;1\\)\u8868\u793a\\(P\\)\u4e3a\u771f\u7684\u6982\u7387\u4e3a\\(1-P\\) </li> </ul> </li> <li>\u4e09\u503c\u903b\u8f91<ul> <li>Kleene\u903b\u8f91\uff1a\\(T, F, U\\)\uff0c\\(U\\)\u8868\u793a\u672a\u77e5</li> <li>Lukasiewicz\u903b\u8f91\uff1a\\(T, F, I\\)\uff0c\\(I\\)\u8868\u793a\u5c06\u6765\u53ef\u80fd\uff0c\u76ee\u524d\u4e0d\u5177\u5907\u771f\u503c</li> <li>Bochvar\u903b\u8f91\uff1a\\(T, F, M\\)\uff0c\\(M\\)\u8868\u793a\u6096\u8bba</li> </ul> </li> </ol>"},{"location":"math/discrete-mathematics/chapter-4/","title":"\u8c13\u8bcd\u903b\u8f91\u7684\u57fa\u672c\u6982\u5ff5","text":"<p>\u8c13\u8bcd\u8868\u793a\u4e86\u591a\u4e2a\u4e2a\u4f53\u8bcd\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u8fdb\u4e00\u6b65\u5730\u8bb2\u662f\u7ed9\u5b9a\u7684\u4e2a\u4f53\u8bcd\u5230\u96c6\u5408\\(\\{T, F\\}\\)\u4e0a\u7684\u4e00\u4e2a\u6620\u5c04\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u5176\u5199\u4e3a\u51fd\u6570\u7684\u5f62\u5f0f\uff0c\u5982\\(P(x, y)\\)</p> <p>\u51fd\u6570\u8868\u793a\u4ece\u4e00\u4e2a\u96c6\u5408\u5230\u53e6\u4e00\u4e2a\u96c6\u5408\u7684\u6620\u5c04\uff0c\u901a\u5e38\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd\u8fdb\u884c\u8868\u793a\u3002</p> <p>\u6709\u4e24\u79cd\u91cf\u8bcd\uff0c\u5373\u5168\u79f0\u91cf\u8bcd\u4e0e\u5b58\u5728\u91cf\u8bcd\u3002\u53d7\u5230\u91cf\u8bcd\u7ea6\u675f\u7684\u53d8\u5143\u79f0\u4e3a\u7ea6\u675f\u53d8\u5143\uff0c\u5426\u5219\u79f0\u4e3a\u81ea\u7531\u53d8\u5143\u3002\u91cf\u8bcd\u53ea\u80fd\u4f5c\u7528\u4e8e\u53d8\u5143\u800c\u4e0d\u80fd\u4f5c\u7528\u4e8e\u547d\u9898\u53d8\u9879\u4e0e\u8c13\u8bcd\u53d8\u9879\u3002\u53d8\u5143\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd\u8868\u793a\u3002</p>"},{"location":"math/discrete-mathematics/chapter-4/#_2","title":"\u5408\u5f0f\u516c\u5f0f","text":"<p>\u5408\u5f0f\u516c\u5f0f\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <ol> <li>\u547d\u9898\u5e38\u9879\u3001\u547d\u9898\u53d8\u9879\u548c\u539f\u5b50\u8c13\u8bcd\u516c\u5f0f\u90fd\u662f\u5408\u5f0f\u516c\u5f0f</li> <li>\u82e5\\(A\\)\u4e3a\u5408\u5f0f\u516c\u5f0f\uff0c\u5219\\(\\lnot A\\)\u4e3a\u5408\u5f0f\u516c\u5f0f</li> <li>\u82e5\\(A, B\\)\u4e3a\u5408\u5f0f\u516c\u5f0f\uff0c\u4e14\\(A, B\\)\u4e2d\u65e0\u53d8\u5143\u5728\u4e00\u4e2a\u4e2d\u7ea6\u675f\u800c\u5728\u53e6\u4e00\u4e2a\u4e2d\u81ea\u7531\uff0c\u5219\\((A\\land B), (A\\lor B), (A\\rightarrow B), (A\\leftrightarrow B)\\)\u4e3a\u5408\u5f0f\u516c\u5f0f\u3002</li> <li>\u82e5\\(A\\)\u4e3a\u5408\u5f0f\u516c\u5f0f\uff0c\\(x\\)\u5728\\(A\\)\u4e2d\u4e3a\u81ea\u7531\u53d8\u5143\uff0c\u5219\\((\\forall x)A, (\\exists x)A\\)\u4e3a\u5408\u5f0f\u516c\u5f0f</li> </ol> <p>\u5728\u6709\u9650\u8bba\u57df\u4e0b\uff0c\u5168\u79f0\u91cf\u8bcd\u4e0e\u7279\u79f0\u91cf\u8bcd\u53ef\u4e0ei\u8868\u793a\u4e3a\u547d\u9898\u903b\u8f91\u4e0b\u7684\u5408\u5f0f\u516c\u5f0f\uff1a</p> <ul> <li>\\((\\forall x)P(x) = P(1)\\land P(2)\\land \\dots \\land P(k)\\)</li> <li>\\((\\exists x)P(x) = P(1)\\lor P(2)\\lor \\dots \\lor P(k)\\)\\</li> </ul> <p>\u5bf9\u4e8e\u8c13\u8bcd\u516c\u5f0f\uff0c\u82e5\u5728\u4efb\u4f55\u89e3\u91ca\u4e0b\u771f\u503c\u90fd\u4e3a\u771f\uff0c\u79f0\u8c13\u8bcd\u516c\u5f0f\u4e3a\u666e\u904d\u6709\u6548\u7684\u8c13\u8bcd\u516c\u5f0f\uff1b\u82e5\u5728\u67d0\u4e2a\u89e3\u91ca\u4e0b\u771f\u503c\u4e3a\u771f\uff0c\u79f0\u8c13\u8bcd\u516c\u5f0f\u4e3a\u53ef\u6ee1\u8db3\u7684\u8c13\u8bcd\u516c\u5f0f\uff0c\u5426\u5219\u79f0\u4e3a\u4e0d\u53ef\u6ee1\u8db3\u7684\u8c13\u8bcd\u516c\u5f0f\u3002</p> <ul> <li>\u8c13\u8bcd\u903b\u8f91\u662f\u4e0d\u53ef\u5224\u5b9a\u7684</li> <li>\u53ea\u542b\u6709\u4e00\u5143\u8c13\u8bcd\u53d8\u9879\u7684\u8c13\u8bcd\u516c\u5f0f\u662f\u53ef\u5224\u5b9a\u7684</li> <li>\u4e2a\u4f53\u57df\u6709\u9650\u7684\u8c13\u8bcd\u516c\u5f0f\u662f\u53ef\u5224\u5b9a\u7684</li> </ul>"},{"location":"math/discrete-mathematics/chapter-5/","title":"\u8c13\u8bcd\u903b\u8f91\u7684\u7b49\u503c\u548c\u63a8\u7406\u6f14\u7b97","text":"<p>\u5bf9\u4e8e\u4e24\u4e2a\u8c13\u8bcd\u516c\u5f0f\\(A, B\\)\uff0c\u82e5\u5728\\(A, B\\)\u7684\u4efb\u4e00\u89e3\u91ca\u4e0b\uff0c\\(A, B\\)\u90fd\u6709\u76f8\u540c\u7684\u771f\u503c\uff0c\u5373\\(A\\leftrightarrow B\\)\uff0c\u79f0\\(A, B\\)\u7b49\u503c\u3002\u8bb0\u4e3a\\(A=B\\)\u6216\\(A\\Leftrightarrow B\\)\u3002</p>"},{"location":"math/discrete-mathematics/chapter-5/#_2","title":"\u7b49\u503c\u5f0f","text":"<ol> <li>\u5c06\u8c13\u8bcd\u516c\u5f0f\u4ee3\u5165\u547d\u9898\u903b\u8f91\u4e0b\u7684\u7b49\u503c\u516c\u5f0f\u5373\u53ef\u5f97\u5230\u8c13\u8bcd\u903b\u8f91\u7684\u7b49\u503c\u516c\u5f0f</li> <li>\u5426\u5b9a\u578b\u7b49\u503c\u5f0f</li> <li>\\(\\lnot (\\forall x)P(x) = (\\exists x)\\lnot P(x)\\)</li> <li>\\(\\lnot (\\exists x)P(x) = (\\forall x)\\lnot P(x)\\)</li> <li>\u91cf\u8bcd\u5206\u914d\u7b49\u503c\u5f0f\uff08\\(q\\)\u4e3a\u547d\u9898\u53d8\u9879\uff0c\\(x\\)\u4e3a\u53d8\u5143\uff09</li> <li>\\((\\forall x)(P(x)\\lor q) = (\\forall x)P(x)\\lor q\\)</li> <li>\\((\\exists x)(P(x)\\lor q) = (\\exists x)P(x)\\lor q\\)</li> <li>\\((\\forall x)(P(x)\\land q) = (\\forall x)P(x)\\land q\\)</li> <li>\\((\\exists x)(P(x)\\land q) = (\\forall x)P(x)\\land q\\)</li> <li>\u5bf9\\(\\rightarrow\\)\u7684\u5206\u914d\u5f8b</li> <li>\\((\\forall x)(P(x)\\rightarrow q) = (\\exists x)P(x)\\rightarrow q\\)</li> <li>\\((\\exists x)(P(x)\\rightarrow q) = (\\forall x)P(x)\\rightarrow q\\)</li> <li>\\((\\forall x)(p\\rightarrow Q(x)) = p\\rightarrow (\\forall x)Q(x)\\)</li> <li>\\((\\exists x)(p\\rightarrow Q(x)) = p\\rightarrow (\\exists x)Q(x)\\)</li> <li>\u91cf\u8bcd\\(\\forall\\)\u5bf9\\(\\land\\)\u3001\u91cf\u8bcd\\(\\exists\\)\u5bf9\\(\\lor\\)\u7684\u5206\u914d\u5f8b</li> <li>\\((\\forall x)(P(x)\\land Q(x)) = (\\forall x)P(x) \\land (\\forall x)Q(x)\\)</li> <li>\\((\\exists x)(P(x)\\lor Q(x)) = (\\exists x)P(x) \\lor (\\exists x)Q(x)\\)</li> <li>\u53d8\u5143\u6613\u540d\u7684\u5206\u914d\u5f8b</li> <li>\\((\\forall x)(\\forall y)(P(x)\\lor Q(y)) = (\\forall x)P(x) \\lor (\\forall x)Q(x)\\)</li> <li>\\((\\exists x)(\\exists y)(P(x)\\land Q(y)) = (\\forall x)P(x) \\land (\\forall x)Q(x)\\)</li> </ol>"},{"location":"math/discrete-mathematics/chapter-5/#_3","title":"\u8303\u5f0f","text":"<p>\u82e5\u8c13\u8bcd\u516c\u5f0f\\(A\\)\u4e2d\u7684\u4e00\u5207\u91cf\u8bcd\u90fd\u4f4d\u4e8e\u516c\u5f0f\u7684\u6700\u5de6\u4fa7\uff0c\u4e14\u91cf\u8bcd\u7684\u4f5c\u7528\u57df\u5ef6\u4f38\u5230\u516c\u5f0f\u7684\u672b\u7aef\uff0c\u5219\u79f0\u8c13\u8bcd\u516c\u5f0f\\(A\\)\u4e3a\u524d\u675f\u8303\u5f0f\u3002\u524d\u675f\u8303\u5f0f\u7684\u4e00\u822c\u5f62\u5f0f\u5982\u4e0b\uff1a</p> \\[ (Q_1x_1)\\dots (Q_nx_n)M(x_1, \\dots, x_n) \\] <p>\u5176\u4e2d\\(Q_i\\)\u4e3a\u5168\u79f0\u91cf\u8bcd\\(\\forall\\)\u6216\u7279\u79f0\u91cf\u8bcd\\(\\exists\\)\uff0c\\(M\\)\u79f0\u4e3a\u6bcd\u5f0f\uff0c\u4e0d\u542b\u6709\u91cf\u8bcd\u3002</p> <p>\u4efb\u4f55\u8c13\u8bcd\u516c\u5f0f\u90fd\u6709\u4e0e\u4e4b\u7b49\u503c\u7684\u524d\u675f\u8303\u5f0f\uff0c\u4f46\u524d\u675f\u8303\u5f0f\u4e0d\u552f\u4e00\u3002\u901a\u8fc7\u5982\u4e0b\u6d41\u7a0b\u53ef\u4ee5\u5c06\u8c13\u8bcd\u516c\u5f0f\u5316\u4e3a\u524d\u675f\u8303\u5f0f\uff1a</p> <ul> <li>\u5c06\u8c13\u8bcd\u516c\u5f0f\u4e2d\u7684\\(\\rightarrow\\)\u8054\u7ed3\u8bcd\u4e0e\\(\\leftrightarrow\\)\u8054\u7ed3\u8bcd\u6d88\u53bb</li> <li>\u4f7f\u7528\u6469\u6839\u5f8b\uff0c\u5c06\\(\\lnot\\)\u5185\u79fb\u5230\u547d\u9898\u53d8\u9879\u6216\u8c13\u8bcd\u4e4b\u524d</li> <li>\u4f7f\u7528\u91cf\u8bcd\u5206\u914d\u7b49\u503c\u5f0f\u5c06\u91cf\u8bcd\u79fb\u52a8\u5230\u5de6\u4fa7</li> <li>\u4f7f\u7528\u53d8\u5143\u6613\u540d\u5206\u914d\u7b49\u503c\u5f0f\u5408\u5e76\u8c13\u8bcd</li> </ul>"},{"location":"math/discrete-mathematics/chapter-5/#skolem","title":"Skolem\u6807\u51c6\u578b","text":"<p>\u79f0\u4e00\u4e2a\u8c13\u8bcd\u516c\u5f0f\u4e3a\\(\\exists\\)\u524d\u675f\u8303\u5f0f\u5f53\u4e14\u4ec5\u5f53\u8c13\u8bcd\u516c\u5f0f\u4e2d\u7684\u5b58\u5728\u91cf\u8bcd\u90fd\u5728\u5168\u79f0\u91cf\u8bcd\u7684\u5de6\u8fb9\uff0c\u5e76\u4e14\u53ef\u4ee5\u4fdd\u6301\u516c\u5f0f\u4e2d\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u5b58\u5728\u91cf\u8bcd\u3002\u6bcd\u5f0f\u4e2d\u4e0d\u542b\u6709\u4efb\u4f55\u91cf\u8bcd\uff0c\u4e5f\u4e0d\u542b\u81ea\u7531\u4e2a\u4f53\u53d8\u9879\u3002 \u79f0\u4e00\u4e2a\u8c13\u8bcd\u516c\u5f0f\u4e3a\u4ec5\u4fdd\u7559\u5168\u79f0\u91cf\u8bcd\u7684\u524d\u675f\u578b\u5f53\u4e14\u4ec5\u5f53\u8c13\u8bcd\u516c\u5f0f\u4e2d\u53ea\u5305\u542b\u5168\u79f0\u91cf\u8bcd\u800c\u4e0d\u5305\u542b\u5b58\u5728\u91cf\u8bcd\u3002\u6bcd\u5f0f\u4e2d\u4e0d\u542b\u6709\u4efb\u4f55\u91cf\u8bcd\uff0c\u4e5f\u4e0d\u542b\u81ea\u7531\u4e2a\u4f53\u53d8\u9879\u3002</p> <ul> <li>\u4e00\u4e2a\u8c13\u8bcd\u516c\u5f0f\\(A\\)\u53ef\u4ee5\u5316\u6210\u76f8\u5e94\u7684\\(\\exists\\)\u524d\u675f\u8303\u5f0f\uff0c\\(A\\)\u666e\u904d\u6709\u6548\u5f53\u4e14\u4ec5\u5f53\\(\\exists\\)\u524d\u675f\u8303\u5f0f\u666e\u904d\u6709\u6548</li> <li>\u4e00\u4e2a\u8c13\u8bcd\u516c\u5f0f\\(A\\)\u53ef\u4ee5\u5316\u6210\u76f8\u5e94\u7684\u4ec5\u4fdd\u7559\u5168\u79f0\u91cf\u8bcd\u7684\u524d\u675f\u578b\uff0c\\(A\\)\u4e0d\u53ef\u6ee1\u8db3\u5f53\u4e14\u4ec5\u5f53\u4ec5\u4fdd\u7559\u5168\u79f0\u91cf\u8bcd\u7684\u524d\u675f\u578b\u4e0d\u53ef\u6ee1\u8db3</li> </ul>"},{"location":"math/discrete-mathematics/chapter-9/","title":"\u96c6\u5408","text":"<p>\u96c6\u5408\u662f\u4e00\u4e9b\u786e\u5b9a\u7684\u3001\u53ef\u4ee5\u533a\u5206\u7684\u4e8b\u7269\u6c47\u805a\u5728\u4e00\u8d77\u7ec4\u6210\u7684\u4e00\u4e2a\u6574\u4f53\uff0c\u7ec4\u6210\u4e00\u4e2a\u96c6\u5408\u7684\u6bcf\u4e2a\u4e8b\u7269\u79f0\u4e3a\u8be5\u96c6\u5408\u7684\u4e00\u4e2a\u5143\u7d20\u3002</p> <ul> <li>\u96c6\u5408\u7684\u5143\u7d20\u53ef\u4ee5\u662f\u4efb\u4f55\u4e8b\u7269\uff0c\u4e5f\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a\u96c6\u5408\uff0c\u4f46\u4e0d\u80fd\u662f\u81ea\u8eab</li> <li>\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u6ee1\u8db3\u552f\u4e00\u6027\uff0c\u4e0d\u4f1a\u51fa\u73b0\u76f8\u540c\u7684\u5143\u7d20</li> <li>\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u6ca1\u6709\u987a\u5e8f\u5173\u7cfb</li> <li>\u5143\u7d20\u4e0e\u96c6\u5408\u7684\u5173\u7cfb\u662f\u786e\u5b9a\u7684\uff0c\u5373\u5c5e\u4e8e\uff08\\(\\in\\)\uff09\u4e0e\u4e0d\u5c5e\u4e8e\uff08\\(\\not\\in\\)\uff09</li> </ul>"},{"location":"math/discrete-mathematics/chapter-9/#_2","title":"\u96c6\u5408\u7684\u8868\u793a","text":"<p>\u4ee5\u4e0b\u5217\u4e3e\u51fa\u5e38\u89c1\u7684\u96c6\u5408\uff1a</p> <ul> <li>\\(\\mathbf N\\)\u8868\u793a\u5168\u4f53\u81ea\u7136\u6570\u7ec4\u6210\u7684\u96c6\u5408</li> <li>\\(\\mathbf Z\\)\u8868\u793a\u5168\u4f53\u6574\u6570\u7ec4\u6210\u7684\u96c6\u5408</li> <li>\\(\\mathbf Q\\)\u8868\u793a\u5168\u4f53\u6709\u7406\u6570\u7ec4\u6210\u7684\u96c6\u5408</li> <li>\\(\\mathbf R\\)\u8868\u793a\u5168\u4f53\u5b9e\u6570\u7ec4\u6210\u7684\u96c6\u5408</li> <li>\\(\\mathbf C\\)\u8868\u793a\u5168\u4f53\u590d\u6570\u7ec4\u6210\u7684\u96c6\u5408</li> </ul> <p>\u53ef\u4ee5\u7528\u5916\u5ef6\u8868\u793a\u6cd5\u6216\u5185\u6db5\u8868\u793a\u6cd5\u8868\u793a\u4e00\u4e2a\u96c6\u5408\uff1a</p> <ul> <li>\u5916\u5ef6\u8868\u793a\u6cd5\uff1a\u4e00\u4e00\u5217\u4e3e\u51fa\u96c6\u5408\u7684\u5168\u4f53\u5143\u7d20</li> <li>\u5185\u6db5\u8868\u793a\u6cd5\uff1a\u4f7f\u7528\u8c13\u8bcd\u8868\u8ff0\u96c6\u5408\u4e2d\u5143\u7d20\u7684\u6027\u8d28</li> </ul>"},{"location":"math/discrete-mathematics/chapter-9/#_3","title":"\u96c6\u5408\u7684\u8fd0\u7b97","text":""},{"location":"math/discrete-mathematics/chapter-9/#_4","title":"\u96c6\u5408\u7684\u5173\u7cfb\u8fd0\u7b97","text":"<p>\u96c6\u5408\u4e0e\u5143\u7d20\u5b58\u5728\u5c5e\u4e8e\u4e0e\u4e0d\u5c5e\u4e8e\u5173\u7cfb\uff0c\u8bb0\u4f5c\\(\\in, \\not\\in\\)</p> <p>\u96c6\u5408\u4e4b\u95f4\u53ef\u4ee5\u5b9a\u4e49\u5173\u7cfb\\(=, \\subseteq, \\subset, \\supseteq, \\supset\\)\u3002</p> <ul> <li>\\(A=B\\Leftrightarrow (\\forall x)(x\\in A\\leftrightarrow x\\in B)\\)</li> <li>\\(A\\subseteq B\\Leftrightarrow (\\forall x)(x\\in A\\rightarrow x\\in B)\\)</li> <li>\\(A\\subset B\\Leftrightarrow (\\forall x)(x\\in A\\rightarrow x\\in B)\\land A\\not =B\\)</li> <li>\\(A\\supseteq B\\Leftrightarrow B\\subseteq A\\)</li> <li>\\(A\\supset B\\Leftrightarrow B\\subset A\\)</li> </ul> <p>\\(\\subseteq, \\supseteq, =\\)\u5173\u7cfb\u6ee1\u8db3\u81ea\u53cd\u6027\u3001\u4f20\u9012\u6027\uff0c\\(=\\)\u5173\u7cfb\u6ee1\u8db3\u5bf9\u79f0\u6027\u3002</p> <p>\\(A\\subseteq B\\land B\\subseteq A\\Leftrightarrow A=B\\)</p> <p>\u5b9a\u4e49\u7a7a\u96c6\u4e3a\u4e0d\u542b\u4efb\u4f55\u5143\u7d20\u7684\u96c6\u5408\uff0c\u8bb0\u4f5c\\(\\varnothing\\)\uff0c\u5176\u5185\u6db5\u8868\u793a\u4e3a\\(\\varnothing = \\{x|x\\not= x\\}\\)\uff0c\u7a7a\u96c6\u6ee1\u8db3\u5982\u4e0b\u6027\u8d28\uff1a</p> <ul> <li>\u7a7a\u96c6\u662f\u4efb\u4f55\u96c6\u5408\u7684\u5b50\u96c6</li> <li>\u7a7a\u96c6\u662f\u552f\u4e00\u7684</li> </ul> <p>\u5b9a\u4e49\u5168\u96c6\u4e3a\u6240\u6709\u4e8b\u7269\u7684\u96c6\u5408\uff0c\u8bb0\u4f5c\\(E\\)\uff0c\u5176\u5185\u6db5\u8868\u793a\u4e3a\\(E=\\{x|x=x\\}\\)</p>"},{"location":"math/discrete-mathematics/chapter-9/#_5","title":"\u96c6\u5408\u7684\u57fa\u672c\u8fd0\u7b97","text":"<p>\u96c6\u5408\u5305\u542b\u5982\u4e0b\u57fa\u672c\u8fd0\u7b97\uff1a</p> <ul> <li>\u5e76\u96c6\uff1a\\(A\\cup B = \\{x\\in A\\lor x\\in B\\}\\)</li> <li>\u4ea4\u96c6\uff1a\\(A\\cap B = \\{x\\in A\\land x\\in B\\}\\)</li> <li>\u5dee\u96c6\uff1a\\(A-B = \\{x\\in A\\land x\\not \\in B\\}\\)</li> <li>\u8865\u96c6\uff1a\\(-A=E-A=\\{x|x\\not\\in A\\}\\)</li> <li>\u5bf9\u79f0\u5dee\uff1a\\(A\\oplus B=(A-B)\\cup (B-A) = \\{x| x\\in A\\overline\\lor x\\in B\\}\\)</li> </ul> <p>\u57fa\u4e8e\u5e76\u96c6\u4e0e\u4ea4\u96c6\u8fd0\u7b97\u53ef\u4ee5\u62d3\u5c55\u51fa\u5e7f\u4e49\u5e76\u548c\u5e7f\u4e49\u4ea4\u7684\u6982\u5ff5\uff0c\u8bbe\u96c6\u5408\\(A\\)\u7684\u6240\u6709\u5143\u7d20\u90fd\u662f\u96c6\u5408\uff0c\u5b9a\u4e49$A\u7684\u5e7f\u4e49\u5e76\u3001\u5e7f\u4e49\u4ea4\u5982\u4e0b\uff1a</p> <ul> <li>\u5e7f\u4e49\u5e76\uff1a\\(\\cup A=\\{x| (\\exists z)(z\\in A\\land x\\in z)\\}\\)</li> <li>\u5e7f\u4e49\u4ea4\uff1a\\(\\cap A=\\{x| (\\forall z)(z\\in A\\rightarrow x\\in z)\\}\\)</li> </ul> <p>\u5373\uff1a\u96c6\u5408\\(A\\)\u7684\u5e7f\u4e49\u5e76\u662f\u96c6\u5408\u4e2d\u6240\u6709\u5143\u7d20\u7684\u5e76\u96c6\uff0c\u96c6\u5408\\(A\\)\u7684\u5e7f\u4e49\u4ea4\u662f\u96c6\u5408\u4e2d\u6240\u6709\u5143\u7d20\u7684\u4ea4\u96c6\u3002</p> <p>\u5b9a\u4e49\u5e42\u96c6\u4e3a\u96c6\u5408\u6240\u6709\u5b50\u96c6\uff08\u5305\u62ec\u81ea\u8eab\uff09\u7ec4\u6210\u7684\u96c6\u5408\uff0c\u8bb0\u4f5c\\(P(A)\\)</p> <p>\u5b9a\u4e49\u7b1b\u5361\u5c14\u79ef\\(A\\times B\\)\u4e3a\u4e8c\u5143\u7ec4\uff08\u6709\u5e8f\u5bf9\uff09\\(\\langle x, y\\rangle\\)\u7684\u96c6\u5408\uff0c\u5176\u4e2d\\(x\\in A, y\\in B\\)\u3002\u6709\u5e8f\u5bf9\u7684\u5b9a\u4e49\u4e0d\u4e00\u5b9a\u552f\u4e00\uff0c\u5982\u96c6\u5408\\(\\{x, \\{x, y\\}\\}\\)\u5373\u53ef\u8868\u793a\u4e00\u4e2a\u6709\u5e8f\u5bf9\u3002\u6709\u5e8f\u5bf9\u6ee1\u8db3\u5982\u4e0b\u6027\u8d28\uff1a</p> <ul> <li>\\(x\\not = y\\Rightarrow \\langle x,y\\rangle \\not =\\langle y,x\\rangle\\)</li> <li>\\(\\langle x,y\\rangle = \\langle u,v\\rangle\\Leftrightarrow x=u\\land y=v\\)</li> </ul> <p>\u53ef\u4ee5\u5728\u4e8c\u5143\u7ec4\u7684\u57fa\u7840\u4e0a\u62d3\u5c55\\(n\\)\u5143\u7ec4\u7684\u5b9a\u4e49\uff1a\\(\\langle x_1, \\dots, x_n\\rangle =\\langle\\dots\\langle x_1, x_2\\rangle, \\dots, x_n\\rangle\\)\u3002\u7531\u6b64\\(n\\)\u9636\u7b1b\u5361\u5c14\u79ef\\(A_1\\times A_2\\times\\dots\\times A_n\\)\u5373\u4e3a\\(\\{\\langle x_1, \\dots, x_n\\rangle|x_1\\in A_1\\land \\dots\\land x_n\\in A_n\\}\\)</p>"},{"location":"math/discrete-mathematics/chapter-9/#_6","title":"\u96c6\u5408\u8fd0\u7b97\u7684\u4f18\u5148\u7ea7","text":"<p>\u96c6\u5408\u8fd0\u7b97\u7684\u4f18\u5148\u7ea7\u5217\u4e3e\u5982\u4e0b\uff1a</p> \\[ \\begin{aligned}     &amp;-A, P(A), \\cap A, \\cup A \\\\     &amp;-, \\cap, \\cup, \\oplus, \\times \\\\     &amp;=, \\subseteq , \\subset, \\in \\\\     &amp;\\lnot \\\\     &amp;\\land, \\lor, \\rightarrow, \\leftrightarrow \\\\     &amp;\\Leftrightarrow, \\Rightarrow \\end{aligned} \\]"},{"location":"math/discrete-mathematics/chapter-9/#_7","title":"\u96c6\u5408\u8fd0\u7b97\u7684\u6027\u8d28","text":"<p>\u96c6\u5408\u7684\u57fa\u672c\u8fd0\u7b97\u6ee1\u8db3\u5982\u4e0b\u6027\u8d28\uff1a</p> <ol> <li>\u4ea4\u6362\u5f8b</li> <li>\\(A\\cap B=B\\cap A\\)</li> <li>\\(A\\cup B=B\\cup A\\)</li> <li>\u7ed3\u5408\u5f8b</li> <li>\\((A\\cup B)\\cup C = A\\cup (B\\cup C)\\)</li> <li>\\((A\\cap B)\\cap C = A\\cap (B\\cap C)\\)</li> </ol>"},{"location":"math/discrete-mathematics/chapter-9/#_8","title":"\u96c6\u5408\u7684\u56fe\u793a\u6cd5","text":"<ul> <li>\u5bf9\u4e8e\u96c6\u5408\u7684\u57fa\u672c\u8fd0\u7b97\uff0c\u53ef\u4ee5\u4f7f\u7528\u6587\u6c0f\u56fe\u8868\u793a</li> <li>\u5bf9\u4e8e\u5e42\u96c6\u8fd0\u7b97\uff0c\u53ef\u4ee5\u4f7f\u7528\u7f51\u7edc\u56fe\u8868\u793a</li> <li>\u5bf9\u4e8e\u7b1b\u5361\u5c14\u79ef\u8fd0\u7b97\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e8c\u7ef4\u5750\u6807\u7cfb\u8868\u793a</li> </ul>"},{"location":"math/dynamic-system/","title":"\u52a8\u6001\u7cfb\u7edf\u5206\u6790\u4e0e\u63a7\u5236","text":"<ul> <li>\u7b2c\u4e00\u7ae0 \u53e4\u5178\u63a7\u5236\u7406\u8bba\u6982\u8ff0</li> </ul>"},{"location":"math/dynamic-system/chapter-1/","title":"\u53e4\u5178\u63a7\u5236\u7406\u8bba\u6982\u8ff0","text":"<p>\u4e00\u4e2a\u7cfb\u7edf\u53ef\u4ee5\u901a\u8fc7\u4e09\u79cd\u65b9\u5f0f\u8fdb\u884c\u63cf\u8ff0\uff0c\u5373\uff1a</p> <ol> <li>\u72b6\u6001\u65b9\u7a0b</li> <li>\u5fae\uff08\u5dee\uff09\u5206\u65b9\u7a0b</li> <li>\u4f20\u9012\u51fd\u6570</li> </ol> <p>\u501f\u52a9\u4e8e Laplace \u53d8\u6362\uff0c\u53ef\u4ee5\u5c06\u5fae\u5206\u65b9\u7a0b\u63cf\u8ff0\u7684\u7cfb\u7edf\u8f6c\u53d8\u4e3a\u4f20\u9012\u51fd\u6570\u63cf\u8ff0\u3002</p> <p>Laplace \u53d8\u6362</p> <p>\u5b9a\u4e49\uff1a \u5bf9\u4e8e\u5b9a\u4e49\u57df\u5305\u542b\\([0, +\\infty)\\)\u7684\u51fd\u6570\\(f(t)\\)\uff0c\\(f(t)\\)\u7684 Laplace \u53d8\u6362\u7528\\(\\mathcal {L[f(t)](s)}\\)\u8868\u793a\uff0c\u6709\uff1a</p> \\[ \\mathcal {L}[f(t)](s) = \\frac {1}{s} \\int_{0}^{\\infty} f(t) e^{-st} dt, s=\\sigma + j\\omega \\in \\mathbb C \\] <p>\u82e5\u8be5\u79ef\u5206\u5b58\u5728\uff0c\u5219\\(f(t)\\)\u7684 Laplace \u53d8\u6362\u5b58\u5728\u3002</p> <p>\u901a\u5e38\u5730\uff0c\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\u7684\u51fd\u6570\uff0c\u5b58\u5728 Laplace \u53d8\u6362\uff1a</p> <ol> <li>\\(f(t)\\)\u5728\\([0, +\\infty)\\)\u7684\u6709\u9650\u4e2a\u5b50\u533a\u95f4\\(t\\in [t_1, T], t_1 \\geq 0\\)\u4e0a\u8fde\u7eed\u6216\u5206\u6bb5\u8fde\u7eed\u3002</li> <li>\\(f(t)=0, \\forall t&lt;0\\)</li> <li>\\(\\forall s_{0}, \\exists d, \\forall t, e^{-s_0t}|f(t)| &lt; d\\)</li> </ol> <p>Laplace \u53d8\u6362\u6ee1\u8db3\u5982\u4e0b\u6027\u8d28\uff1a</p> <ul> <li>\u7ebf\u6027\u53d8\u6362</li> </ul> \\[ \\mathcal {L}[Af_{1}(t) + Bf_{2}(t)](s) = A\\mathcal {L}[f_{1}(t)](s) + B\\mathcal {L}[f_{2}(t)](s) \\] <ul> <li>\u5fae\u5206\u5b9a\u7406</li> </ul> \\[ \\mathcal {L}\\left[\\frac{\\mathrm d^nf}{\\mathrm dt^n}(t)\\right](s) = s\\mathcal{L}[f(s)] - \\left[s^{n-1}f(0) + \\sum_{i=1}^{n-1}\\left(s^{n-1-i}\\frac{\\mathrm d^{i}f}{\\mathrm dt^{i}}\\left| _{t=0}\\right.\\right)\\right] \\] <ul> <li>\u79ef\u5206\u5b9a\u7406</li> </ul> \\[ \\mathcal L\\left[\\int _0^t f(\\tau)\\mathrm d\\tau\\right] = \\frac{F(s)}s + \\frac{f^{-1}(0)}{s} \\] <p>\u5176\u4e2d\\(f^{-1}(0) = \\int_{0}^tf(\\tau)\\mathrm d\\tau\\)\u5728\\(t=0\\)\u65f6\u7684\u503c\u3002</p> <ul> <li> <p>\u521d\u503c\u5b9a\u7406</p> </li> <li> <p>\u7ec8\u503c\u5b9a\u7406</p> </li> </ul>"},{"location":"math/empirical-methods/potential-outcome-framework/","title":"Potential Outcome Framework","text":"<ul> <li>Unit of analysis\uff1a\u4e0d\u540c\u65f6\u95f4\u4e0b\u7684\u540c\u4e00\u4e2a\u4e2a\u4f53\u5e94\u5f53\u770b\u4f5c\u4e0d\u540c\u7684\u4e2a\u4f53</li> <li>Treatment \\(D\\)\uff1a\u901a\u5e38\u5212\u5206\u4e3a\u5b9e\u9a8c\u7ec4\uff08\\(D=1\\)\uff09\u4e0e\u5bf9\u7167\u7ec4\uff08\\(D=0\\)\uff09\uff0c\u4f46\\(D\\)\u4e5f\u53ef\u4ee5\u53d6\u591a\u503c\u6216\u8fde\u7eed</li> <li>Potential outcome \\(Y(d)\\)\uff1a\u5f53\u5e72\u9884\u6c34\u5e73\u4e3a\\(d\\)\u65f6\u5e94\u5f53\u51fa\u73b0\u7684\u7ed3\u679c\u3002</li> <li>Counterfactual outcome\uff1a\u5f53\u5e72\u9884\u6c34\u5e73\u4e3a\\(D\\)\u65f6\u6240\u6709\\(d\\not = D\\)\u7684\u7ed3\u679c\u2014\u2014\u5b58\u5728\u4f46\u65e0\u6cd5\u89c2\u6d4b\u5230</li> <li>Casual effect\uff1a\u6bd4\u8f83\u4e24\u4e2a\u5e73\u884c\u7ed3\u679c\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\\(Y(1) - Y(0)\\)</li> </ul> <p>\u5047\u8bbe\uff1a</p> <ol> <li>\u6bcf\u4e2a\u4e2a\u4f53\u7684\u7ed3\u679c\u4e0d\u53d7\u5230\u5176\u4ed6\u4e2a\u4f53\u5e72\u9884\u6c34\u5e73\u7684\u5f71\u54cd\uff08no interference\uff09</li> <li>\u4e0d\u5b58\u5728\u5e72\u9884\u6c34\u5e73\u7684\u9690\u85cf\u72b6\u6001</li> </ol> <p>\u8003\u8651\u603b\u4f53\u7684\u671f\u671b\u5e72\u9884\u6548\u679c</p> \\[ \\tau = \\mathbb E[Y(1) - Y(0)] \\] <p>\u7531\u4e8e\u5bf9\u4e8e\u4e2a\u4f53\\(i\\)\uff0c\u65e0\u6cd5\u540c\u65f6\u89c2\u6d4b\\(Y_i(1), Y_i(0)\\)\uff0c\u56e0\u6b64\\(\\tau\\)\u7684\u786e\u5207\u6570\u503c\u540c\u6837\u65e0\u6cd5\u89c2\u6d4b\u3002</p> \\[ \\begin{aligned}     \\hat\\tau &amp;= \\frac{1}{n_1} \\sum_{i;D_i = 1}Y_i - \\frac{1}{n_0} \\sum_{i;D_i = 0}Y_i \\\\     &amp;= \\mathbb E[Y(1) | D = 1] - \\mathbb E[Y(0) | D = 0] \\end{aligned} \\] <p>\u9700\u8981\u8003\u8651\\(D\\)\u7684\u5206\u5e03\uff0c\u5373\u5b9e\u9a8c\u7ec4\u4e0e\u5bf9\u7167\u7ec4\u5982\u4f55\u4ea7\u751f\uff0c\u6216\\(Y, D\\)\u7684\u72ec\u7acb\u6027\u3002</p> <p>\u8003\u8651\u5982\u4e0b\u573a\u666f\uff1a</p> <ol> <li>\u4e00\u7fa4\u88ab\u8bd5\u968f\u673a\u63a5\u53d7\u836f\u7269\u8bd5\u9a8c</li> <li>\u88ab\u8bd5\u4e2d\u75c7\u72b6\u6bd4\u8f83\u4e25\u91cd\u7684\u4e2a\u4f53\u63a5\u53d7\u836f\u7269\u5b9e\u9a8c</li> </ol> <ol> <li>\u968f\u673a\u8bd5\u9a8c\u6307\u5206\u914d\u673a\u5236\u7531\u7814\u7a76\u8005\u53ef\u63a7\u3002\u5982\u6309\u7167\\(p = 0.5\\)\u7684\u6982\u7387\u8fdb\u884c\u4f2f\u52aa\u5229\u5b9e\u9a8c\u968f\u673a\u5206\u914d\uff0c\u5219\\((Y(1)\uff0c Y(0))\\bot D\\)\uff0c\u6b64\u65f6\u6709\\(\\hat\\tau = \\tau\\)</li> <li>\u89c2\u6d4b\u7814\u7a76\u6307\u5206\u914d\u673a\u5236\u4e0d\u7531\u7814\u7a76\u8005\u63a7\u5236\u3002\u5982\u88ab\u8bd5\u6839\u636e\u4e2a\u4f53\u611f\u53d7\u81ea\u884c\u51b3\u5b9a\u5403\u836f\u3002\u6b64\u65f6\u5b58\u5728\u6df7\u6dc6\u56e0\u5b50\\(X\\)<ol> <li>\\(X\\)\u4f1a\u5f71\u54cd\u5206\u914d\uff0c\u5373\\(X\\not \\bot D\\)</li> <li>\\(X\\)\u4f1a\u5f71\u54cd\u7ed3\u679c\uff0c\u5373\\(X\\not \\bot (Y(1)\uff0c Y(0))\\)</li> </ol> </li> </ol> <p>Unconfoundeness\u5047\u8bbe</p> \\[ (Y(1), Y(0)) \\bot D|X \\] <p>\u63a7\u5236\u6df7\u6dc6\u56e0\u5b50\uff0c\u6b64\u65f6\u6709</p> \\[\\begin{aligned}     &amp; \\mathbb E [\\mathbb E[Y | D = 1, X] - \\mathbb E[Y | D = 0, X]] \\\\     =&amp; \\mathbb E [\\mathbb E[Y(1) | D = 1, X] - \\mathbb E[Y(0) | D = 0, X]] \\\\     =&amp; \\mathbb E [\\mathbb E[Y(1) | X] - \\mathbb E[Y(0) | X]] \\\\     =&amp; \\mathbb E [\\mathbb E[Y(1) - Y(0) | X]] \\\\     =&amp; \\mathbb E[Y(1) - Y(0)] \\end{aligned} \\]"},{"location":"math/linear-algebra/","title":"\u7ebf\u6027\u4ee3\u6570","text":"<ul> <li>\u7b2c\u4e00\u7ae0\uff1a\u884c\u5217\u5f0f</li> </ul>"},{"location":"math/linear-algebra/chapter-1/","title":"1 \u884c\u5217\u5f0f","text":""},{"location":"math/linear-algebra/chapter-1/#11","title":"1.1 \u884c\u5217\u5f0f\u7684\u5b9a\u4e49","text":"<p>\u8003\u8651\u5982\u4e0b\u5f62\u5f0f\u7684\u65b9\u7a0b\u7ec4\uff1a</p> \\[ \\left\\{\\begin{aligned}     a_1x + b_1y &amp;= d_1 \\\\     a_2x + b_2y &amp;= d_2 \\end{aligned}\\right. \\] <p>\u89e3\u5f97\uff1a</p> \\[ \\begin{aligned}     (a_1b_2-b_1a_2)x &amp;= d_1b_2-b_1d_2 \\\\     (a_1b_2-b_1a_2)y &amp;= a_1d_2-d_1a_2 \\end{aligned} \\] <p>\u5f53\\(a_1b_2-b_1a_2\\not = 0\\)\u65f6\uff0c\u6b64\u65f6\u6709\u65b9\u7a0b\u7ec4\u6709\u552f\u4e00\u89e3\\(\\left\\{\\begin{aligned}x&amp;=\\frac{d_1b_2-b_1d_2}{a_1b_2-b_1a_2}\\\\ y&amp;=\\frac{a_1d_2-d_1a_2}{a_1b_2-b_1a_2}\\end{aligned}\\right.\\)</p> <p>\u4ee4\uff1a</p> \\[ \\begin{aligned}     D &amp;= \\begin{vmatrix} a_1 &amp; b_1 \\\\ a_2 &amp; b_2 \\end{vmatrix} = a_1b_2-b_1a_2 \\\\     D_1 &amp;= \\begin{vmatrix} d_1 &amp; b_1 \\\\ d_2 &amp; b_2 \\end{vmatrix} = d_1b_2-b_1d_2 \\\\     D_2 &amp;= \\begin{vmatrix} a_1 &amp; d_1 \\\\ a_2 &amp; d_2 \\end{vmatrix} = a_1d_2-d_1a_2 \\end{aligned} \\] <p>\u5219\u65b9\u7a0b\u7684\u89e3\u53ef\u4ee5\u8bb0\u4e3a\\(\\left\\{\\begin{aligned}x &amp;= \\frac{D_1}{D} \\\\ y &amp;= \\frac{D_2}{D}\\end{aligned}\\right.\\)</p> <p>\u540c\u6837\u5730\uff0c\u4ece\u4e09\u9636\u65b9\u7a0b\u7ec4\u53ef\u4ee5\u5f15\u5165\u4e09\u9636\u884c\u5217\u5f0f\uff1a</p> \\[ \\begin{aligned} \\begin{vmatrix} a_{11} &amp; a_{12} &amp; a_{13} \\\\ a_{21} &amp; a_{22} &amp; a_{23} \\\\ a_{31} &amp; a_{32} &amp; a_{33} \\end{vmatrix} = &amp;a_{11}a_{22}a_{33}+a_{12}a_{23}a_{31} + a_{13}a_{21}a_{32} \\\\ &amp;- a_{31}a_{22}a_{13} - a_{21}a_{12}a_{33} - a_{32}a_{23}a_{11} \\end{aligned} \\] <p>\u4ece\u4e09\u9636\u884c\u5217\u5f0f\u8f6c\u6362\u4e3a\\(n\\)\u9636\u884c\u5217\u5f0f\uff0c\u9700\u8981\u5f15\u5165\u6392\u5217\u7684\u6982\u5ff5\u3002</p> <p>\u5b9a\u4e49 \\(n\\)\u9636\u6392\u5217\u662f\u7531\u6574\u6570\\(1, 2, \\dots, n\\)\u7ec4\u6210\u7684\u6709\u5e8f\u6570\u7ec4\u3002</p> <p>\u5b9a\u4e49\u6392\u5217\u4e2d\u7684\u9006\u5e8f\u5bf9\u4e0e\u9006\u5e8f\u6570\uff1a</p> <p>\u5b9a\u4e49 \u5bf9\u4e8e\u4e00\u4e2a\\(n\\)\u9636\u6392\u5217\\(a_1, \\dots, a_n\\)\uff0c\u9006\u5e8f\u5bf9\\(a_i, a_j:=a_j&lt;a_i, i&lt;j\\)\u3002 \u5b9a\u4e49 \u5bf9\u4e8e\u4e00\u4e2a\\(n\\)\u9636\u6392\u5217\\(a_1, \\dots, a_n\\)\uff0c\u5b9a\u4e49\u8be5\u6392\u5217\u7684\u9006\u5e8f\u6570\u7b49\u4e8e\u6392\u5217\u4e2d\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u3002\u79f0\u9006\u5e8f\u6570\u4e3a\u5947\u6570\u7684\u6392\u5217\u4e3a\u5947\u6392\u5217\uff0c\u9006\u5e8f\u6570\u4e3a\u5076\u6570\u7684\u6392\u5217\u4e3a\u5076\u6392\u5217\uff0c\u9006\u5e8f\u6570\u4e3a0\u7684\u6392\u5217\u4e3a\u81ea\u7136\u6392\u5217\u3002</p> <p>\u5bf9\u4e8e\u6392\u5217\uff0c\u6709\u5982\u4e0b\u7ed3\u8bba\uff1a</p> <p>\u5b9a\u74061.1 \u5bf9\u6362\u6392\u5217\u4e2d\u7684\u4efb\u610f\u4e24\u4e2a\u5143\u7d20\uff0c\u6392\u5217\u7684\u5947\u5076\u6027\u6539\u53d8\uff1b \u5b9a\u74061.2 \u5947\u6392\u5217\u7684\u4e2a\u6570\u4e0e\u5076\u6392\u5217\u7684\u4e2a\u6570\u76f8\u7b49\uff1b \u5b9a\u74061.3 \u53ef\u4ee5\u901a\u8fc7\u6709\u9650\u6b21\u5bf9\u6362\u64cd\u4f5c\u5c06\u4efb\u4f55\u6392\u5217\u8f6c\u53d8\u4e3a\u81ea\u7136\u6392\u5217  </p> <p>\u6839\u636e\u9006\u5e8f\u6570\u7684\u5b9a\u4e49\u3001\u5b9a\u74061.1\u4e0e\u5b9a\u74061.3\uff0c\u53ef\u4ee5\u63a8\u51fa\u5982\u4e0b\u7ed3\u8bba\uff1a</p> <p>\u5b9a\u74061.4 \u5c06\u4efb\u610f\u6392\u5217\u8f6c\u53d8\u4e3a\u81ea\u7136\u6392\u5217\u6240\u9700\u8981\u7684\u6700\u5c11\u4ea4\u6362\u6b21\u6570\u7b49\u4e8e\u6392\u5217\u7684\u9006\u5e8f\u6570\uff0c\u4ea4\u6362\u6b21\u6570\u7684\u5947\u5076\u6027\u548c\u6392\u5217\u7684\u5947\u5076\u6027\u76f8\u540c\u3002</p> <p>\u5b9a\u4e49\u6392\u5217\u7684\u6982\u5ff5\u540e\uff0c\\(n\\)\u9636\u884c\u5217\u5f0f\u53ef\u4ee5\u4f5c\u5982\u4e0b\u5b9a\u4e49\uff1a</p> \\[ \\boxed{ \\begin{aligned}     \\begin{vmatrix}     a_{11} &amp; a_{12} &amp; \\cdots &amp; a_{1n} \\\\     a_{21} &amp; a_{22} &amp; \\cdots &amp; a_{2n} \\\\     \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\     a_{n1} &amp; a_{n2} &amp; \\cdots &amp; a_{nn}     \\end{vmatrix} = \\sum_{j_1j_2\\cdots j_n}(-1)^{\\mathrm r(j_1j_2\\cdots j_n)}a_{1j_1}a_{2j_2}\\cdots a_{nj_n} \\end{aligned}} \\] <p>\u5176\u4e2d\uff1a</p> <ol> <li>\\(j_1j_2\\cdots j_n\\)\u4e3a\\(1, 2, \\cdots, n\\)\u7ec4\u6210\u7684\u4e00\u7ec4\u6392\u5217\uff0c\u7b49\u5f0f\u53f3\u4fa7\u5bf9\u6240\u6709\u53ef\u80fd\u7684\u6392\u5217\u8fdb\u884c\u6c42\u548c</li> <li>\u51fd\u6570\\(\\mathrm r(j_1j_2\\cdots j_n)\\)\u5b9a\u4e49\u4e3a\u8ba1\u7b97\u4e00\u4e2a\u6392\u5217\u7684\u9006\u5e8f\u6570</li> </ol>"},{"location":"math/linear-algebra/chapter-1/#12","title":"1.2 \u884c\u5217\u5f0f\u7684\u6027\u8d28","text":"<p>\u6839\u636e\u884c\u5217\u5f0f\u7684\u8ba1\u7b97\u89c4\u5219\uff0c\u884c\u5217\u5f0f\u5177\u6709\u5982\u4e0b\u6027\u8d28\uff1a</p> <p>\u5b9a\u4e49 \u5f62\u5982\u4e0b\u5f0f\u7684\u884c\u5217\u5f0f\u79f0\u4e3a\u4e0a\u4e09\u89d2\u884c\u5217\u5f0f\uff0c\u5373\\((\\forall i)(\\forall j)(j&lt; i\\rightarrow a_{ij} = 0)\\) \\(\\begin{vmatrix} a_{11} &amp; a_{12} &amp; \\cdots &amp; a_{1n} \\\\   0      &amp; a_{22} &amp; \\cdots &amp; a_{2n} \\\\   \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\   0      &amp; 0      &amp; \\cdots &amp; a_{nn} \\\\  \\end{vmatrix}\\) \u540c\u7406\u53ef\u4ee5\u5b9a\u4e49\u4e0b\u4e09\u89d2\u884c\u5217\u5f0f\u4e3a\u5404\u5143\u7d20\\(a_{ij}\\)\u6ee1\u8db3\\((\\forall i)(\\forall j)(j&gt; i\\rightarrow a_{ij} = 0)\\)\u7684\u884c\u5217\u5f0f\u3002</p> <p>\u4e0a\u4e09\u89d2\u884c\u5217\u5f0f\u662f\u7ed3\u6784\u8f83\u4e3a\u7b80\u5355\u7684\u884c\u5217\u5f0f\uff1a</p> <p>\u5b9a\u74062.1 \u4e0a\u4e09\u89d2\u884c\u5217\u5f0f\u7b49\u4e8e\u4e3b\u5bf9\u89d2\u7ebf\u4e0a\u5143\u7d20\u7684\u4e58\u79ef\uff0c\u5373\uff1a \\(\\begin{vmatrix} a_{11} &amp; a_{12} &amp; \\cdots &amp; a_{1n} \\\\ 0      &amp; a_{22} &amp; \\cdots &amp; a_{2n} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ 0      &amp; 0      &amp; \\cdots &amp; a_{nn} \\\\ \\end{vmatrix} = a_{11}a_{22}\\cdots a_{nn} = \\prod _{i=1}^na_{ii}\\)</p> <p>\u7279\u6b8a\u5730\uff0c\u5bf9\u89d2\u884c\u5217\u5f0f\uff08\u9664\u4e3b\u5bf9\u89d2\u7ebf\u5143\u7d20\u4ee5\u5916\u5176\u4f59\u5143\u7d20\u5747\u4e3a0\u7684\u884c\u5217\u5f0f\uff09\u7b49\u4e8e\u4e3b\u5bf9\u89d2\u7ebf\u4e0a\u5143\u7d20\u7684\u4e58\u79ef\u3002</p> <p>\u4ee5\u4e0b\u4e0d\u52a0\u8bc1\u660e\u5730\u7ed9\u51fa\u884c\u5217\u5f0f\u7684\u90e8\u5206\u6027\u8d28\uff1a</p> <p>\u5b9a\u74062.2 \u8f6c\u7f6e\u64cd\u4f5c\u4e0d\u6539\u53d8\u884c\u5217\u5f0f\u7684\u503c\uff0c\u5373 \\(\\begin{vmatrix}a_{11} &amp; a_{12} &amp; \\cdots &amp; a_{1n} \\\\ a_{21} &amp; a_{22} &amp; \\cdots &amp; a_{2n} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ a_{n1} &amp; a_{n2} &amp; \\cdots &amp; a_{nn} \\end{vmatrix} = \\begin{vmatrix} a_{11} &amp; a_{21} &amp; \\cdots &amp; a_{n1} \\\\ a_{12} &amp; a_{22} &amp; \\cdots &amp; a_{n2} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ a_{1n} &amp; a_{2n} &amp; \\cdots &amp; a_{nn} \\end{vmatrix}\\)</p> <p>\u5b9a\u74062.3 \u82e5\u884c\u5217\u5f0f\u7684\u67d0\u884c\uff08\u6216\u67d0\u5217\uff09\u6709\u516c\u56e0\u5b50\u65f6\uff0c\u8be5\u516c\u56e0\u5b50\u53ef\u4ee5\u63d0\u53d6\u51fa\u884c\u5217\u5f0f\uff0c\u5373\uff1a \\(\\begin{vmatrix}a_{11} &amp; a_{12} &amp; \\cdots &amp; a_{1n} \\\\\\vdots &amp; \\vdots &amp;        &amp; \\vdots \\\\ka_{p1} &amp; ka_{p2} &amp; \\cdots &amp; ka_{pn} \\\\\\vdots &amp; \\vdots &amp;        &amp; \\vdots \\\\a_{n1} &amp; a_{n2} &amp; \\cdots &amp; a_{nn}\\end{vmatrix} = k\\begin{vmatrix}a_{11} &amp; a_{12} &amp; \\cdots &amp; a_{1n} \\\\\\vdots &amp; \\vdots &amp;        &amp; \\vdots \\\\a_{p1} &amp; a_{p2} &amp; \\cdots &amp; a_{pn} \\\\\\vdots &amp; \\vdots &amp;        &amp; \\vdots \\\\a_{n1} &amp; a_{n2} &amp; \\cdots &amp; a_{nn}\\end{vmatrix}\\)</p> <p>\u5b9a\u74062.4 \uff08 \u5b9a\u74062.3 \u63a8\u8bba\uff09\u82e5\u884c\u5217\u5f0f\u7684\u67d0\u884c\uff08\u6216\u67d0\u5217\uff09\u5168\u4e3a0\uff0c\u5219\u884c\u5217\u5f0f\u4e3a0  </p> <p>\u5b9a\u74062.5 \uff08 \u5b9a\u74062.3 \u63a8\u8bba\uff09\u82e5\u884c\u5217\u5f0f\u7684\u67d0\u4e24\u884c\uff08\u5217\uff09\u6210\u6bd4\u4f8b\uff0c\u5219\u884c\u5217\u5f0f\u4e3a0</p> <p>\u5b9a\u74062.6 \u884c\u5217\u5f0f\u53ef\u4ee5\u6309\u4e0b\u5f0f\u5206\u4e3a\u4e24\u4e2a\u884c\u5217\u5f0f\u4e4b\u548c \\(\\begin{vmatrix}a_{11} &amp; a_{12} &amp; \\cdots &amp; a_{1n} \\\\\\vdots &amp; \\vdots &amp;        &amp; \\vdots \\\\a_{p1} + a'_{p1} &amp; a_{p2} + a'_{p2} &amp; \\cdots &amp; a_{pn} + a'_{pn} \\\\\\vdots &amp; \\vdots &amp;        &amp; \\vdots \\\\a_{n1} &amp; a_{n2} &amp; \\cdots &amp; a_{nn}\\end{vmatrix} = \\begin{vmatrix}a_{11} &amp; a_{12} &amp; \\cdots &amp; a_{1n} \\\\\\vdots &amp; \\vdots &amp;        &amp; \\vdots \\\\a_{p1} &amp; a_{p2} &amp; \\cdots &amp; a_{pn} \\\\\\vdots &amp; \\vdots &amp;        &amp; \\vdots \\\\a_{n1} &amp; a_{n2} &amp; \\cdots &amp; a_{nn}\\end{vmatrix} + \\begin{vmatrix}a_{11} &amp; a_{12} &amp; \\cdots &amp; a_{1n} \\\\\\vdots &amp; \\vdots &amp;        &amp; \\vdots \\\\a'_{p1} &amp; a'_{p2} &amp; \\cdots &amp; a'_{pn} \\\\\\vdots &amp; \\vdots &amp;        &amp; \\vdots \\\\a_{n1} &amp; a_{n2} &amp; \\cdots &amp; a_{nn}\\end{vmatrix}\\) </p> <p>\u5b9a\u74062.7 \u5bf9\u6362\u884c\u5217\u5f0f\u4e2d\u4e24\u884c\u7684\u4f4d\u7f6e\uff0c\u884c\u5217\u5f0f\u53cd\u53f7  </p> <p>\u5b9a\u74062.8 \uff08 \u5b9a\u74062.5\u3001\u5b9a\u74062.6 \u63a8\u8bba\uff09\u5c06\u4e00\u884c\uff08\u5217\uff09\u7684\u67d0\u4e2a\u500d\u6570\u52a0\u5230\u53e6\u4e00\u884c\uff08\u5217\uff09\uff0c\u884c\u5217\u5f0f\u7684\u503c\u4e0d\u53d8</p>"},{"location":"math/linear-algebra/chapter-1/#13","title":"1.3 \u884c\u5217\u5f0f\u7684\u5c55\u5f00","text":"<p>\u5b9a\u4e49 \u5bf9\u4e8e\u884c\u5217\u5f0f\\(B=|b_{ij}|_n\\)\uff0c\u5b9a\u4e49\u884c\u5217\u5f0f\\(M_{ij}\\)\u4e3a\\(B\\)\u5212\u53bb\u7b2c\\(i\\)\u884c\u548c\u7b2c\\(j\\)\u5217\u5269\u4f59\u7684\u90e8\u5206\uff0c\u79f0\\(M_{ij}\\)\u4e3a\\(b_{ij}\\)\u7684\u4f59\u5b50\u5f0f\uff0c\u79f0\\(A_{ij} = (-1)^{i+j} M_{ij}\\)\u79f0\u4e3a\\(b_{ij}\\)\u7684\u4ee3\u6570\u4f59\u5b50\u5f0f</p> <p>\u6839\u636e\u4f59\u5b50\u5f0f\u53ef\u4ee5\u5c06\u884c\u5217\u5f0f\u5206\u89e3\u4e3a\u9636\u6570\u964d\u4e00\u9636\u7684\u884c\u5217\u5f0f\u4e4b\u548c\uff1a</p> <p>\u5b9a\u74063.1 \\(n\\)\u9636\u884c\u5217\u5f0f</p>"},{"location":"math/operating-research/","title":"\u8fd0\u7b79\u5b66","text":"<ul> <li>\u7ebf\u6027\u89c4\u5212</li> <li>\u8fd0\u8f93\u95ee\u9898</li> <li>\u76ee\u6807\u89c4\u5212</li> </ul>"},{"location":"math/operating-research/chapter-1/","title":"\u7ebf\u6027\u89c4\u5212","text":"<p>\u5b9a\u4e49</p> <p>\u89c4\u5212\u95ee\u9898\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u76ee\u6807\u51fd\u6570\\(f(x_1, \\dots, x_n)\\)\u548c\u4e00\u7cfb\u5217\u7ea6\u675f\u6761\u4ef6\uff0c\u6c42\u6ee1\u8db3\u6240\u6709\u7ea6\u675f\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\uff0c\u6539\u53d8\u51b3\u7b56\u53d8\u91cf\\(x_1, x_2, \\cdots, x_n\\)\u4f7f\u5f97\u76ee\u6807\u51fd\u6570\u6240\u80fd\u8fbe\u5230\u7684\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c\u3002\u5f53\u76ee\u6807\u51fd\u6570\u53d6\u6700\u5927\uff08\u6700\u5c0f\uff09\u503c\u65f6\uff0c\u51b3\u7b56\u53d8\u91cf\u7684\u503c\u79f0\u89c4\u5212\u95ee\u9898\u7684\u89e3\u3002</p> <p>\u7ebf\u6027\u89c4\u5212\uff1a\u76ee\u6807\u51fd\u6570\u548c\u7ea6\u675f\u6761\u4ef6\u5747\u4e3a \u7ebf\u6027 \u7684\u4f18\u5316\u95ee\u9898</p> <p>\u7ebf\u6027\u89c4\u5212\u6a21\u578b\u7684\u6807\u51c6\u5f62\u5f0f\u4e3a\uff1a</p> \\[ \\begin{aligned} &amp;\\max z = c_1x_1 + c_2x_2 + \\cdots + c_nx_n \\\\ s.t. &amp; \\left\\{     \\begin{aligned}         &amp; a_{11}x_1 + a_{12}x_2 + \\cdots + a_{1n}x_n = b_1 \\\\         &amp; a_{21}x_1 + a_{22}x_2 + \\cdots + a_{2n}x_n = b_2 \\\\         &amp; \\vdots \\\\         &amp; a_{m1}x_1 + a_{m2}x_2 + \\cdots + a_{mn}x_n = b_m \\\\         &amp; x_j \\in \\mathbb R \\land x_j \\geq 0, j = 1, \\cdots, n     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u5176\u4e2d\\(a_{ij}, b_i, c_i\\)\u4e3a\u5e38\u6570\uff0c\u5206\u522b\u4f7f\u7528\u77e9\u9635\\(A, b, c^T\\)\u8fdb\u884c\u8868\u793a\u3002\u51b3\u7b56\u53d8\u91cf\\((x_1, x_2, \\cdots, x_n)^T\\)\u4f7f\u7528\u5411\u91cf\\(x\\)\u8fdb\u884c\u8868\u793a\uff0c\u5219\u6807\u51c6\u578b\u53ef\u4ee5\u5199\u4f5c\uff1a</p> \\[ \\begin{aligned}     &amp; \\max z = CX \\\\     &amp; s.t. \\left\\{     \\begin{aligned}         &amp; Ax = b \\\\         &amp; x \\geq 0     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u5982\u679c\\(\\mathrm r(A) &lt; m\\)\uff0c\u5219\u90e8\u5206\u7ea6\u675f\u6761\u4ef6\u53ef\u4ee5\u76f8\u4e92\u62b5\u6d88\uff0c\u4ee5\u4e0a\u53ea\u8ba8\u8bba\\(\\mathrm r(A) = m\\)\u7684\u60c5\u51b5\u3002</p> <p>\u5982\u679c\u7ea6\u675f\u4e2d\u542b\u6709\u4e0d\u7b49\u5f0f\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u677e\u5f1b\u53d8\u91cf\u4e0e\u5269\u4f59\u53d8\u91cf\u8f6c\u53d8\u4e3a\u7b49\u5f0f</p> <ul> <li>\u677e\u5f1b\u53d8\u91cf\uff1a\\(a_{i1}x_1 + a_{i2}x_2 + \\cdots + a_{in}x_n \\leq b_i\\)\u52a0\u5165\u677e\u5f1b\u53d8\u91cf\\(x_{n+1}\\)\u540e\u8f6c\u4e3a\\(a_{i1}x_1 + a_{i2}x_2 + \\cdots + a_{in}x_n + x_{n+1}= b_i\\)</li> <li>\u5269\u4f59\u53d8\u91cf\uff1a\\(a_{j1}x_1 + a_{j2}x_2 + \\cdots + a_{jn}x_n \\geq b_j\\)\u52a0\u5165\u5269\u4f59\u53d8\u91cf\\(x_{n+1}\\)\u540e\u8f6c\u4e3a\\(a_{j1}x_1 + a_{j2}x_2 + \\cdots + a_{jn}x_n - x_{n+1}= b_j\\)</li> </ul> <p>\u82e5\u67d0\u4e2a\u51b3\u7b56\u53d8\u91cf\\(x_i\\)\u7684\u53d6\u503c\u8303\u56f4\u4e3a\\(\\leq\\)\uff0c\u5219\u5c06\\(x_i\\)\u66ff\u6362\u4e3a\\(x_i' = -x_i\\)\u3002</p> <p>\u5bf9\u4e8e\u7ebf\u6027\u89c4\u5212\u4e2d\u7684\u4e0d\u7b49\u5f0f\u7ea6\u675f\uff0c\u82e5\u5728\u6700\u4f18\u65f6\u8be5\u7ea6\u675f\u4e3a\u7b49\u5f0f\uff0c\u5219\u79f0\u4e3a\u7d27\u7ea6\u675f\uff0c\u5426\u5219\u79f0\u4e3a\u975e\u7d27\u7ea6\u675f\u3002</p>"},{"location":"math/operating-research/chapter-1/#_2","title":"\u6c42\u89e3\u7ebf\u6027\u89c4\u5212","text":"<p>\u7ebf\u6027\u89c4\u5212\u53ef\u4ee5\u901a\u8fc7\u56fe\u5f62\u6cd5\u3001\u5355\u7eaf\u5f62\u6cd5\u7b49\u65b9\u6cd5\u6c42\u89e3</p>"},{"location":"math/operating-research/chapter-1/#_3","title":"\u56fe\u5f62\u6cd5","text":"<p>\u56fe\u5f62\u6cd5\u53ea\u80fd\u7528\u4e8e\u6c42\u89e3\u5305\u542b\u4e24\u4e2a\u51b3\u7b56\u53d8\u91cf\u7684\u7ebf\u6027\u89c4\u5212\u95ee\u9898\u3002\u6b65\u9aa4\u53ef\u4ee5\u5217\u4e3e\u5982\u4e0b\uff1a</p> <ol> <li>\u5728\u5750\u6807\u8f74\u4e0a\u7ed8\u5236\u51fa\u6240\u6709\u7684\u7ea6\u675f\u6761\u4ef6\uff0c\u786e\u5b9a\u53ef\u884c\u57df</li> <li>\u5c06\u76ee\u6807\u51fd\u6570\\(z = c_1x_1 + c_2x_2\\)\u6539\u5199\u4e3a\\(x_2 = \\frac{z - c_1x_1}{c_2}\\)\uff0c\u5176\u659c\u7387\u4e3a\\(-\\frac{c_1}{c_2}\\)</li> <li>\u5728\u53ef\u884c\u57df\u4e2d\u5bfb\u627e\u4f7f\u5f97\u622a\u8ddd\u6700\u5927\uff08\u6700\u5c0f\uff09\u4e14\u659c\u7387\u4e3a\\(-\\frac{c_1}{c_2}\\)\u7684\u76f4\u7ebf\u3002\u8be5\u622a\u8ddd\u4e3a\u76ee\u6807\u51fd\u6570\u7684\\(1/c_2\\)<ul> <li>\u82e5\u53ef\u884c\u57df\u4e3a\u7a7a\uff0c\u5219\u7ebf\u6027\u89c4\u5212\u65e0\u89e3</li> <li>\u82e5\u76f4\u7ebf\u53ef\u4ee5\u65e0\u9650\u5411\u4f18\u5316\u65b9\u5411\u5e73\u79fb\uff0c\u5219\u7ebf\u6027\u89c4\u5212\u65e0\u754c</li> <li>\u82e5\u6700\u4f18\u65f6\u76f4\u7ebf\u4e0e\u7ea6\u675f\u6761\u4ef6\u7684\u659c\u7387\u76f8\u540c\uff0c\u5219\u7ebf\u6027\u89c4\u5212\u6709\u65e0\u6570\u89e3</li> <li>\u5426\u5219\u7ebf\u6027\u89c4\u5212\u6709\u552f\u4e00\u6700\u4f18\u89e3</li> </ul> </li> </ol>"},{"location":"math/operating-research/chapter-1/#_4","title":"\u5355\u7eaf\u5f62\u6cd5","text":"<p>\u5df2\u77e5\u77e9\u9635\\(A\\)\u6ee1\u79e9\uff0c\u6784\u6210\u77e9\u9635\\(A\\)\u7684\u5217\u5411\u91cf\u7684\u6781\u5927\u7ebf\u6027\u65e0\u5173\u7ec4\u5305\u542b\\(m\\)\u4e2a\u5217\u5411\u91cf\u3002\u56e0\u6b64\u53ef\u4ee5\u5c06\u77e9\u9635\\(A\\)\u4f5c\u5982\u4e0b\u5212\u5206\uff1a</p> \\[ A = [B, N] \\] <p>\u76f8\u4f3c\u5730\uff0c\u5411\u91cf\\(x\\)\u4e5f\u53ef\u4ee5\u4f5c\u5982\u4e0b\u5212\u5206\uff1a</p> \\[ x = \\begin{bmatrix}     x_B \\\\ x_N \\end{bmatrix} \\] <p>\u5176\u4e2d\\(B\\)\u4e3a\u53ef\u9006\u77e9\u9635\u3002\u82e5\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u77e9\u9635\uff0c\u5c06\u77e9\u9635\\(A\\)\u7684\u5404\u5217\u8fdb\u884c\u4ea4\u6362\u5373\u53ef\u3002</p> <p>\u57fa\u3001\u57fa\u5411\u91cf\u4e0e\u57fa\u53d8\u91cf</p> <p>\u77e9\u9635\\(B\\)\u79f0\u4e3a\u7ebf\u6027\u89c4\u5212\u7684 \u57fa \u3002 \u57fa \u4e2d\u7684\u5404\u4e2a\u5217\u5411\u91cf\\(P_j\\)\u4e3a \u57fa\u5411\u91cf \uff0c\u5bf9\u5e94\u7684\u51b3\u7b56\u53d8\u91cf\u79f0\u4e3a \u57fa\u53d8\u91cf \u3002\u5206\u5272\u540e\u975e\u9f50\u6b21\u7ebf\u6027\u65b9\u7a0b\u7ec4\\(Ax=b\\)\u8f6c\u5316\u4e3a\uff1a</p> \\[ \\begin{bmatrix}     B &amp; N \\end{bmatrix}\\begin{bmatrix}     x_B \\\\ x_N \\end{bmatrix} = Bx_B + Nx_N = b \\] <p>\u7531\u4e8e\u65b9\u9635\\(B\\)\u6ee1\u79e9\uff0c\u6709\\(x_B = B^{-1}(b - Nx_N)\\)\u3002\u5176\u4e2d\\(x_N\\)\u4e3a\u81ea\u7531\u53d8\u91cf\u3002\\(-B^{-1}N\\)\u4e2d\u7684\u5217\u5411\u91cf\u4e3a\u65b9\u7a0b\\(Ax=b\\)\u7684\u57fa\u7840\u89e3\u7cfb\u3002\u4e0d\u59a8\u8bbe\\(x_N = 0\\)\uff0c\u5219\\(x_B = B^{-1}b\\)\u4e3a\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u4e00\u4e2a\u89e3\uff0c\u79f0\u4e3a\u57fa\u89e3\u3002</p> <p>\u53ef\u884c\u89e3\u4e0e\u53ef\u884c\u57fa</p> <p>\u82e5\\(x_B\\geq 0\\)\uff0c\u5219\u89e3\\(x = \\begin{bmatrix} x_B \\\\ x_N \\end{bmatrix}\\)\u6ee1\u8db3\u975e\u8d1f\u7ea6\u675f\uff0c\u4e3a \u57fa\u53ef\u884c\u89e3 \uff0c\u5bf9\u5e94\u7684\u57fa\u79f0\u4e3a \u53ef\u884c\u57fa \u3002</p> <p>\u57fa\u89e3\u4e0e\u57fa\u53ef\u884c\u89e3\u6ee1\u8db3\u5982\u4e0b\u6027\u8d28\uff1a</p> <ul> <li>\u7531\u4e8e\u77e9\u9635\\(A\\)\u5171\\(n\\)\u5217\uff0c\u4ece\u5176\u4e2d\u9009\u53d6\\(m\\)\u5217\uff0c\u6709\\(\\binom{n}{m}\\)\u79cd\u9009\u53d6\u65b9\u5f0f\uff0c\u800c\u53ea\u6709\u7ec4\u6210\u7ebf\u6027\u65e0\u5173\u7684\\(m\\)\u4e2a\u5411\u91cf\u624d\u80fd\u6784\u6210\u4e00\u7ec4\u57fa\uff0c\u56e0\u6b64\u57fa\u89e3\u7684\u6570\u76ee\u4e0d\u4f1a\u8d85\u8fc7\\(\\binom nm\\)\u3002</li> <li>\\(X\\)\u4e3a\u57fa\u53ef\u884c\u89e3\u5f53\u4e14\u4ec5\u5f53\\(X\\)\u7684\u975e\u96f6\u5206\u91cf\u5bf9\u5e94\u7684\u5217\u5411\u91cf\u7ebf\u6027\u65e0\u5173\u3002\u57fa\u53ef\u884c\u89e3\u662f\u53ef\u884c\u57df\u7684\u9876\u70b9\u3002</li> </ul>"},{"location":"math/operating-research/chapter-1/#_5","title":"\u539f\u7406","text":"<p>\u5982\u4e0b\u9488\u5bf9\u76ee\u6807\u51fd\u6570\u6781\u5927\u5316\u7684\u7ebf\u6027\u89c4\u5212\u95ee\u9898\uff0c\u5bf9\u4e8e\u76ee\u6807\u51fd\u6570\u6781\u5c0f\u5316\u7684\u7ebf\u6027\u89c4\u5212\u95ee\u9898\uff0c\u53ef\u4ee5\u5c06\u76ee\u6807\u51fd\u6570\u53d6\u8d1f\uff0c\u5373\u5f97\u5230\u9700\u8981\u6781\u5927\u5316\u7684\u76ee\u6807\u51fd\u6570\u3002</p> <p>\u5355\u7eaf\u5f62\u6cd5\u7684\u601d\u8def\uff1a</p> <ol> <li>\u5148\u627e\u51fa\u4e00\u4e2a\u57fa\u53ef\u884c\u89e3</li> <li>\u5224\u65ad\u5f53\u524d\u57fa\u53ef\u884c\u89e3\u662f\u5426\u6700\u4f18<ol> <li>\u82e5\u6700\u4f18\uff0c\u7ed3\u675f</li> <li>\u82e5\u4e0d\u662f\u6700\u4f18\uff0c\u5219\u8f6c\u5411\u76f8\u90bb\u7684\u57fa\u53ef\u884c\u89e3</li> </ol> </li> </ol>"},{"location":"math/operating-research/chapter-1/#_6","title":"\u72b6\u6001\u8f6c\u79fb","text":"<p>\u8bbe\u521d\u59cb\u57fa\u4e3a\\(B\\)\u3002\u5c06\u65b9\u7a0b\\(Ax=b\\)\u5de6\u53f3\u4e24\u8fb9\u540c\u65f6\u5de6\u4e58\\(B^{-1}\\)\uff0c\u6709\\((B^{-1}A)x = B^{-1}b\\)\uff0c\u5373\uff1a</p> \\[ \\begin{bmatrix}     I &amp; B^{-1}N \\end{bmatrix}\\begin{bmatrix}     x_B \\\\ x_N \\end{bmatrix} = B^{-1}b \\] <p>\u8bbe\\(B^{-1}N = \\{d_{ij}\\}_{m\\times(n-m)}\\)\u3002\u6839\u636e\\(x_B = B^{-1}b - B^{-1}Nx_N\\)\uff0c\u5bf9\u4e8e\u7b2c\\(i\\)\u4e2a\u5206\u91cf\uff0c\u6709\uff1a</p> \\[ x_i = b_i - \\sum_{j = 1}^{(n - m)}d_{ij}x_j, 1\\leq j\\leq (n-m) \\]"},{"location":"math/operating-research/chapter-1/#_7","title":"\u76ee\u6807\u51fd\u6570\u503c","text":"<p>\u5bf9\u7ebf\u6027\u89c4\u5212\u7ea6\u675f\u6761\u4ef6\u8fdb\u884c\u53ef\u9006\u7ebf\u6027\u53d8\u6362\uff08\u53f3\u4e58\u53ef\u9006\u77e9\u9635\uff09\u4e0d\u4f1a\u6539\u53d8\u7ebf\u6027\u89c4\u5212\u7684\u89e3\u3002\u4e3a\u7b80\u5316\u8ba1\u7b97\uff0c\u4e0d\u59a8\u5047\u8bbe\u77e9\u9635\\(A\\)\u7684\u4e00\u4e2a\u57fa\u77e9\u9635\u4e3a\u5355\u4f4d\u77e9\u9635\uff0c\u5373\uff1a</p> \\[ A = \\begin{bmatrix}     1 &amp; 0 &amp; \\cdots &amp; 0 &amp; a_{1(m + 1)} &amp; a_{1(m + 2)} &amp; \\cdots &amp;  a_{1n} \\\\     0 &amp; 1 &amp; \\cdots &amp; 0 &amp; a_{2(m + 1)} &amp; a_{2(m + 2)} &amp; \\cdots &amp;  a_{2n} \\\\     \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\     0 &amp; 0 &amp; \\cdots &amp; 1 &amp; a_{m(m + 1)} &amp; a_{m(m + 2)} &amp; \\cdots &amp;  a_{mn} \\\\ \\end{bmatrix} \\] <p>\u663e\u7136\uff0c\u5355\u4f4d\u77e9\u9635\\(I\\)\u662f\\(A\\)\u7684\u57fa\uff0c\u5bf9\u5e94\u7684\u57fa\u89e3\\(x_B=b - Nx_N\\)\u3002\u5c06\u5411\u91cf\\(c\\)\u5206\u4e3a\\(c_B\\)\u4e0e\\(c_N\\)\uff0c\u5206\u522b\u5bf9\u5e94\\(x_B\\)\u4e0e\\(x_N\\)\uff0c\u6b64\u65f6\u76ee\u6807\u51fd\u6570\u53ef\u4ee5\u8ba1\u7b97\u4e3a\uff1a</p> \\[ \\begin{aligned}     z &amp;= c^Tx \\\\     &amp;= c_B^Tx_B + c_N^T x_N \\\\     &amp;= c_B^Tb + c_N^Tx_N - c_B^TNx_N \\\\     &amp;= c_B^Tb + (c_N - c_B^TN)x_N \\end{aligned} \\] <p>\u8bbe\u5411\u91cf\\(\\lambda = c_N - c_B^TN\\)\uff0c\u5219\\(\\frac{\\partial z}{\\partial x_N} = \\lambda\\)\u3002</p> <p>\u5b9a\u7406</p> <ul> <li>\u82e5\u5bf9\u4e8e\u67d0\u4e2a\u57fa\u53ef\u884c\u89e3\\(x\\)\uff0c\u6709\\(\\lambda &lt; 0\\)\uff0c\u8bf4\u660e\\(x\\)\u4e3a\u6700\u4f18\u89e3</li> <li>\u82e5\u5bf9\u4e8e\u67d0\u4e2a\u57fa\u53ef\u884c\u89e3\\(x\\)\uff0c\u6709\\(\\lambda \\leq 0\\)\u4e14\\(\\lambda\\)\u5b58\u5728\u4e3a\u96f6\u7684\u5206\u91cf\uff0c\u8bf4\u660e\u539f\u95ee\u9898\u6709\u65e0\u6570\u4e2a\u6700\u4f18\u89e3</li> <li>\u82e5\u5bf9\u4e8e\u67d0\u4e2a\u57fa\u53ef\u884c\u89e3\\(x\\)\uff0c\u5411\u91cf\\(\\lambda\\)\u5b58\u5728\u4e00\u4e2a\\(\\lambda_{m + i} &gt; 0\\)\uff0c\u4e14\u77e9\u9635\\(A\\)\u5bf9\u5e94\u7684\u5217\u5411\u91cf\\(P_{m + i}\\leq 0\\)\uff0c\u5219\u539f\u95ee\u9898\u65e0\u754c</li> </ul>"},{"location":"math/operating-research/chapter-1/#_8","title":"\u57fa\u7684\u8fed\u4ee3","text":"<p>\u5728\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\u9700\u8981\u51b3\u5b9a\u6362\u5165\u7684\u57fa\u4e0e\u6362\u51fa\u7684\u57fa\uff1a</p> <ul> <li>\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u9009\u62e9\u6362\u5165\u7684\u57fa\uff0c\u9009\u62e9\u68af\u5ea6\u6700\u5927\uff08\u4e0e\\(\\lambda\\)\u6700\u5927\u6b63\u5206\u91cf\u5bf9\u5e94\uff09\u7684\u51b3\u7b56\u53d8\u91cf\u6362\u5165\uff0c\\(i = \\arg\\max \\lambda\\)</li> <li>\u5bf9\u4e8e\u6362\u5165\u53d8\u91cf\\(x_i\\)\uff0c\u6362\u51fa\u7684\u57fa\\(x_j\\)\u5e94\u5f53\u5c3d\u53ef\u80fd\u4fdd\u8bc1\u662f\u53ef\u884c\u89e3\u3002\u6839\u636e\\(x_B = b - Nx_N\\geq 0\\)\uff0c\u5f97\\(Nx_N \\leq b - x_B\\)\uff0c\u6709\\(j = \\arg\\min _{j} \\frac{b_j}{a_{ij}}\\)</li> </ul> <p>\u4e3e\u4f8b</p> <p>\u5bf9\u4e8e\u5982\u4e0b\u7ebf\u6027\u89c4\u5212\u95ee\u9898\uff1a</p> \\[ \\begin{aligned}     &amp; \\max z = 3x_1 - 3x_2 + 5x_4 - x_5 \\\\     &amp;s.t. \\left\\{     \\begin{aligned}         &amp;x_1 &amp; &amp; -2x_3 &amp; +2x_4 &amp; &amp;=12 \\\\         &amp;&amp; x_2 &amp;-2x_3 &amp; &amp; &amp;=1 \\\\         &amp;&amp;&amp; -4x_3 &amp;+3x_4 &amp;+x_5 &amp;=27     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u5217\u51fa\u5355\u7eaf\u5f62\u8868\u5982\u4e0b\u6240\u793a\uff1a</p> <p></p> <p>\u5c06\u53d8\u91cf\\(x_4\\)\u8f6c\u5165\u57fa\u53d8\u91cf\uff0c\\(x_1\\)\u8f6c\u51fa\u57fa\u53d8\u91cf\uff0c\u5f97\u5230\u5982\u4e0b\u5355\u7eaf\u5f62\u8868\uff1a</p> <p></p>"},{"location":"math/operating-research/chapter-1/#_9","title":"\u4e24\u9636\u6bb5\u6cd5","text":"<p>\u5f53\\(A\\)\u4e0d\u4fbf\u4e8e\u8ba1\u7b97\u51fa\u57fa\\(B\\)\u65f6\uff0c\u53ef\u4ee5\u5728\u6bcf\u4e00\u4e2a\u7ea6\u675f\u6761\u4ef6\u4e2d\u5f15\u5165\u4eba\u5de5\u53d8\u91cf\u3002\u7b2c\u4e00\u9636\u6bb5\u7684\u5f00\u59cb\u72b6\u6001\uff0c\u6240\u6709\u7684\u57fa\u53d8\u91cf\u90fd\u662f\u4eba\u5de5\u53d8\u91cf\uff0c\u76ee\u6807\u51fd\u6570\u4e3a\u4eba\u5de5\u53d8\u91cf\u4e4b\u548c\uff0c\u5411\u6700\u5c0f\u503c\u65b9\u5411\u4f18\u5316\u3002\u901a\u8fc7\u5355\u7eaf\u5f62\u6cd5\u9010\u6b65\u5c06\u4eba\u5de5\u53d8\u91cf\u6362\u51fa\u57fa\u53d8\u91cf\u3002</p> <p>\u6ce8\u610f</p> <p>\u5982\u679c\u67d0\u4e2a\u4eba\u5de5\u53d8\u91cf\u5728\u57fa\u53d8\u91cf\u4e2d\uff0c\u4f46\\(\\lambda \\leq 0\\)\uff0c\u5219\u7ebf\u6027\u89c4\u5212\u65e0\u53ef\u884c\u89e3\u3002</p> <p>\u5c06\u6240\u6709\u7684\u4eba\u5de5\u53d8\u91cf\u6362\u51fa\u57fa\u53d8\u91cf\uff0c\u6b64\u65f6\u6240\u6709\u7684\u4eba\u5de5\u53d8\u91cf\u53d6\\(0\\)\u3002\u5220\u53bb\u4eba\u5de5\u53d8\u91cf\u5e76\u5c06\u76ee\u6807\u51fd\u6570\u66ff\u6362\u4e3a\u539f\u95ee\u9898\u7684\u76ee\u6807\u51fd\u6570\uff0c\u5f97\u5230\u7b2c\u4e8c\u9636\u6bb5\u5f00\u59cb\u72b6\u6001\u7684\u5355\u7eaf\u5f62\u8868\u3002</p>"},{"location":"math/operating-research/chapter-1/#_10","title":"\u7ebf\u6027\u89c4\u5212\u89e3\u7684\u6027\u8d28","text":"<p>\u6839\u636e\u56fe\u89e3\u6cd5\uff0c\u6709\u5982\u4e0b\u7ed3\u8bba\uff1a</p> <ul> <li>\u53ef\u884c\u57df\u662f\u4e00\u4e2a\u51f8\u96c6\u3002\u5bf9\u4e8e\u53ef\u884c\u57df\\(X\\)\u4e2d\u7684\u4efb\u610f\u4e24\u70b9\\(x = (x_1, x_2, \\cdots, x_n)\\in S\\)\u4e0e\\(y = (y_1, y_2, \\cdots, y_n)\\in S\\)\uff0c\u6709\\(\\alpha x + (1 - \\alpha) y \\in S, 0\\leq \\alpha \\leq 1\\)<ul> <li>\u51f8\u96c6\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u70b9\u90fd\u53ef\u4ee5\u8868\u793a\u4e3a\u51f8\u96c6\u5404\u4e2a\u9876\u70b9\u7684\u51f8\u7ec4\u5408</li> </ul> </li> <li>\u6700\u4f18\u89e3\uff08\u5982\u679c\u5b58\u5728\uff09\u5728\u53ef\u884c\u57df\u7684\u8fb9\u754c\u4e0a\uff0c\u4e14\u53ef\u884c\u57df\u7684\u81f3\u5c11\u4e00\u4e2a\u9876\u70b9\u662f\u6700\u4f18\u89e3</li> </ul>"},{"location":"math/operating-research/chapter-1/#_11","title":"\u7ebf\u6027\u89c4\u5212\u7684\u5bf9\u5076\u95ee\u9898","text":"<p>\u6bcf\u4e2a\u539f\u95ee\u9898\u5bf9\u5e94\u4e14\u4ec5\u5bf9\u5e94\u4e00\u4e2a\u5bf9\u5076\u95ee\u9898\uff0c\u5bf9\u5076\u95ee\u9898\u7684\u5bf9\u5076\u95ee\u9898\u662f\u539f\u95ee\u9898\u3002</p> <p>\u5bf9\u4e8e\u5982\u4e0b\u5f62\u5f0f\u7684\u539f\u95ee\u9898\uff1a</p> \\[ \\begin{aligned}     &amp; \\max z = c_1x_1 + c_2x_2 + c_3x_3 \\\\     &amp; s.t. \\left\\{     \\begin{aligned}         &amp; a_{11}x_1 + a_{12}x_2 + a_{13}x_3 \\leq b_1 \\\\         &amp; a_{21}x_1 + a_{22}x_2 + a_{23}x_3 = b_2 \\\\         &amp; a_{31}x_1 + a_{32}x_2 + a_{33}x_3 \\geq b_3 \\\\         &amp; x_1 \\leq 0 \\\\         &amp; x_3 \\geq 0     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u5176\u5bf9\u5076\u95ee\u9898\u4e3a\uff1a</p> \\[ \\begin{aligned}     &amp; \\min w = b_1y_1 + b_2y_2 + b_3y_3 \\\\     &amp; s.t. \\left\\{     \\begin{aligned}         &amp; a_{11}y_1 + a_{21}y_2 + a_{31}y_3 \\leq c_1 \\\\         &amp; a_{12}y_1 + a_{22}y_2 + a_{32}y_3 = c_2 \\\\         &amp; a_{13}y_1 + a_{23}y_2 + a_{33}y_3 \\geq c_3 \\\\         &amp; y_1 \\geq 0 \\\\         &amp; y_3 \\leq 0     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u5047\u8bbe\u539f\u95ee\u9898\u5411\u6781\u5927\u503c\u4f18\u5316\uff0c\u5bf9\u5076\u95ee\u9898\u6709\u5982\u4e0b\u6027\u8d28</p> <ul> <li>\u5bf9\u5076\u95ee\u9898\u5411\u6781\u5c0f\u503c\u4f18\u5316</li> <li>\u76ee\u6807\u51fd\u6570\u7684\u7cfb\u6570\u662f\u539f\u95ee\u9898\u7684\u7ea6\u675f\u6761\u4ef6\u7cfb\u6570</li> <li>\u7ea6\u675f\u6761\u4ef6\u7cfb\u6570\u662f\u539f\u95ee\u9898\u76ee\u6807\u51fd\u6570\u7684\u7cfb\u6570</li> <li>\u539f\u95ee\u9898\u4e2d\\(\\geq 0\\)\u3001\\(\\leq 0\\)\u7684\u53d8\u91cf\u5206\u522b\u5bf9\u5e94\u5bf9\u5076\u95ee\u9898\u4e2d\\(\\geq\\)\u3001\\(\\leq\\)\u7c7b\u578b\u7684\u7ea6\u675f</li> <li>\u539f\u95ee\u9898\u4e2d\\(\\geq\\)\u3001\\(\\leq\\)\u7c7b\u578b\u7684\u7ea6\u675f\u5206\u522b\u5bf9\u5e94\u5bf9\u5076\u95ee\u9898\u4e2d\\(\\leq 0\\)\u3001\\(\\geq 0\\)\u7684\u53d8\u91cf</li> <li>\u4efb\u4f55\\(=\\)\u7c7b\u578b\u7684\u7ea6\u675f\u5bf9\u5e94\u81ea\u7531\u53d8\u91cf\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002</li> </ul> <p>\u539f\u95ee\u9898\u7684\u6700\u4f18\u76ee\u6807\u51fd\u6570\u7b49\u4e8e\u5bf9\u5076\u95ee\u9898\u7684\u6700\u4f18\u76ee\u6807\u51fd\u6570\u3002\u4e14\u5bf9\u5076\u95ee\u9898\u6700\u4f18\u89e3\u4f1a\u4ee5\u8d1f\u503c\u7684\u5f62\u5f0f\u51fa\u73b0\u5728\u539f\u95ee\u9898\u6700\u4f18\u5355\u7eaf\u5f62\u8868\u7684\\(\\lambda\\)\u90e8\u5206\u3002\u5373\uff0c\\(\\lambda = -Y^*\\)</p>"},{"location":"math/operating-research/chapter-1/#_12","title":"\u7ebf\u6027\u89c4\u5212\u7684\u5bf9\u5076\u6027","text":"<p>\u8003\u8651\u5982\u4e0b\u5f62\u5f0f\u7684\u539f\u95ee\u9898\\((P)\\)\u4e0e\u5bf9\u5076\u95ee\u9898\\((D)\\)</p> \\[ \\begin{aligned}     &amp; (P) &amp; \\begin{aligned}         &amp; \\max z=c^Tx \\\\         &amp; s.t. \\left\\{         \\begin{aligned}             &amp; AX \\leq b \\\\             &amp; X\\geq 0         \\end{aligned}         \\right .     \\end{aligned} \\\\     &amp; (D) &amp; \\begin{aligned}         &amp; \\min w=b^Ty \\\\         &amp; s.t. \\left\\{         \\begin{aligned}             &amp; A^Ty \\geq c \\\\             &amp; y\\geq 0         \\end{aligned}         \\right .     \\end{aligned} \\end{aligned} \\]"},{"location":"math/operating-research/chapter-1/#_13","title":"\u5bf9\u5076\u5b9a\u7406","text":""},{"location":"math/operating-research/chapter-1/#_14","title":"\u5f31\u5bf9\u5076\u5b9a\u7406","text":"<p>\u8bbe\\((P), (D)\\)\u7684\u4e00\u7ec4\u53ef\u884c\u89e3\u5206\u522b\u4e3a\\(x, y\\)\uff0c\u5219\u6709\\(c^Tx \\leq b^Ty\\)</p> <p>\u8bc1\u660e</p> <p>\u8003\u8651\\(y^TAx\\)\uff0c\u6709\uff1a</p> <ol> <li>\\(y^TAx = (A^Ty)^TX \\geq c^TX\\)</li> <li>\\(y^TAx \\leq y^Tb = b^T y\\)</li> </ol> <p>\u6839\u636e\u5f31\u5bf9\u5076\u5b9a\u7406\uff0c\u53ef\u4ee5\u5f97\u51fa\u5982\u4e0b\u7ed3\u8bba\uff1a</p> <ol> <li>\u539f\u95ee\u9898\u7684\u76ee\u6807\u51fd\u6570\u503c\u662f\u5bf9\u5076\u95ee\u9898\u76ee\u6807\u51fd\u6570\u503c\u7684\u4e0b\u754c\uff0c\u5bf9\u5076\u95ee\u9898\u76ee\u6807\u51fd\u6570\u503c\u662f\u539f\u95ee\u9898\u76ee\u6807\u51fd\u6570\u503c\u7684\u4e0a\u754c</li> <li>\u82e5\u539f\u95ee\u9898\u76ee\u6807\u51fd\u6570\u503c\u65e0\u4e0a\u754c\u7b49\u4ef7\u4e8e\u5bf9\u5076\u95ee\u9898\u65e0\u89e3\uff0c\u82e5\u5bf9\u5076\u95ee\u9898\u76ee\u6807\u51fd\u6570\u503c\u65e0\u4e0b\u754c\u7b49\u4ef7\u4e8e\u539f\u95ee\u9898\u65e0\u89e3</li> </ol>"},{"location":"math/operating-research/chapter-1/#_15","title":"\u6700\u4f18\u6027\u5b9a\u7406","text":"<p>\u8bbe\\((P), (D)\\)\u7684\u4e00\u7ec4\u53ef\u884c\u89e3\u5206\u522b\u4e3a\\(x^*, y^*\\)\uff0c\u82e5\\(c^Tx^* = b^Ty^*\\)\uff0c\u5219\\(x^*, y^*\\)\u5206\u522b\u4e3a\u5404\u81ea\u95ee\u9898\u7684\u6700\u4f18\u89e3\u3002</p> <p>\u8bc1\u660e</p> <p>\u6839\u636e\u5f31\u5bf9\u5076\u5b9a\u7406\uff0c\u6709\\(c^Tx\\leq b^Ty^* = c^Tx^*\\leq b^Ty\\)</p>"},{"location":"math/operating-research/chapter-1/#_16","title":"\u6700\u4f18\u89e3\u7684\u5bf9\u5076\u6027","text":"<p>\u82e5\\(B\\)\u4e3a\\((P)\\)\u7684\u6700\u4f18\u57fa\uff0c\u5219\\((D)\\)\u7684\u6700\u4f18\u89e3\u4e3a\\(y^* = c_BB^{-1}\\)\u3002\u82e5\\((P)\\)\u548c\\((D)\\)\u5747\u6709\u53ef\u884c\u89e3\uff0c\u5219\u4e24\u8005\u5747\u6709\u6709\u754c\u6700\u4f18\u89e3\uff0c\u5e76\u4e14\u4e24\u8005\u7684\u6700\u4f18\u76ee\u6807\u51fd\u6570\u503c\u76f8\u7b49\u3002</p>"},{"location":"math/operating-research/chapter-1/#_17","title":"\u4e92\u8865\u677e\u5f1b\u5b9a\u7406","text":"<p>\u5982\u679c\u539f\u95ee\u9898\\((P)\\)\u4e2d\u67d0\u4e00\u7ea6\u675f\u6761\u4ef6\u5bf9\u5e94\u7684\u5bf9\u5076\u53d8\u91cf\u503c\u5927\u4e8e\\(0\\)\uff0c\u5219\u4e0e\u8be5\u5bf9\u5076\u53d8\u91cf\u5bf9\u5e94\u7684\u7ea6\u675f\u6761\u4ef6\u53d6\u7b49\u5f0f\u3002\u76f8\u53cd\uff0c\u5982\u679c\u67d0\u4e00\u7ea6\u675f\u6761\u4ef6\u53d6\u4e0d\u7b49\u5f0f\uff0c\u5219\u5bf9\u5e94\u7684\u5bf9\u5076\u53d8\u91cf\u503c\u4e3a\\(0\\)\u3002</p> <p>\u6ce8\u610f</p> <p>\u8be5\u5b9a\u7406\u7684\u9006\u547d\u9898\u4e0d\u6210\u7acb\uff0c\u5373\u5f53\u539f\u95ee\u9898\u4e2d\u67d0\u4e00\u7ea6\u675f\u6761\u4ef6\u53d6\u7b49\u5f0f\u65f6\uff0c\u5bf9\u5e94\u7684\u5bf9\u5076\u53d8\u91cf\u503c\u65e0\u6cd5\u786e\u5b9a\u662f\u5426\u4e3a\\(0\\)</p> <p>\u5229\u7528\u4e92\u8865\u677e\u5f1b\u6027\u53ef\u4ee5\u901a\u8fc7\u6c42\u89e3\u5bf9\u5076\u95ee\u9898\u7684\u6700\u4f18\u89e3\u4ece\u800c\u7b80\u5316\u539f\u95ee\u9898\u7684\u6c42\u89e3</p>"},{"location":"math/operating-research/chapter-1/#_18","title":"\u5f71\u5b50\u4ef7\u683c","text":"<p>\u8003\u8651\u5f62\u5982\\((P)\\)\u7684\u7ebf\u6027\u89c4\u5212\u95ee\u9898\uff0c\u5f53\u67d0\u4e2a\u7ea6\u675f\u6761\u4ef6\u7684\u6570\u503c\u53d8\u52a8\u4e00\u4e2a\u5355\u4f4d\u800c\u5176\u4ed6\u7ea6\u675f\u6761\u4ef6\u4fdd\u6301\u4e0d\u53d8\u65f6\uff0c\u8be5\u53d8\u52a8\u5bf9\u6700\u4f18\u76ee\u6807\u51fd\u6570\u9020\u6210\u7684\u5f71\u54cd\u3002\u5bf9\u5e94\u7ecf\u6d4e\u5b66\u4e2d\u8fb9\u9645\u6210\u672c\u7684\u6982\u5ff5\u3002</p> <ul> <li>\u6bcf\u4e2a\u7ea6\u675f\u5bf9\u5e94\u4e00\u4e2a\u5f71\u5b50\u4ef7\u683c</li> <li>\\(y = \\frac{\\partial z}{\\partial b}\\)</li> </ul> <p>\u5f71\u5b50\u4ef7\u683c\u53cd\u6620\u8d44\u6e90\u5728\u7cfb\u7edf\u5185\u7684\u7a00\u7f3a\u7a0b\u5ea6\uff0c\u5f53\u7ea6\u675f\u6761\u4ef6\u4e3a\u4e0d\u6ee1\u8db3\u65f6\uff0c\u8be5\u8d44\u6e90\u7684\u91cf\u5728\u7cfb\u7edf\u4e2d\u5b9e\u9645\u4e0a\u4e0d\u53d7\u7ea6\u675f\uff0c\u56e0\u6b64\u5f71\u5b50\u4ef7\u683c\u4e3a\\(0\\)\u3002</p>"},{"location":"math/operating-research/chapter-1/#_19","title":"\u5bf9\u5076\u5355\u7eaf\u5f62\u6cd5","text":"<p>\u6c42\u89e3\u5f62\u5982\\((P)\\)\u7684\u7ebf\u6027\u89c4\u5212\u95ee\u9898\u7684\u601d\u8def\u4e3a\u63a7\u5236\\(B^{-1}b \\geq 0\\)\u5bfb\u627e\u4f7f\u5f97\\(C-C_{B}B^{-1}A\\leq 0\\)\u7684\u57fa\u3002\u5bf9\u5076\u5355\u7eaf\u5f62\u6cd5\u4e0e\u4e4b\u76f8\u53cd\uff0c\u4fdd\u6301\\(C-C_{B}B^{-1}A\\leq 0\\)\uff0c\u5bfb\u627e\u4f7f\u5f97\\(B^{-1}b \\geq 0\\)\u7684\u4e00\u7ec4\u57fa\u3002</p> <p>\u6362\u5165\u53d8\u91cf\u7684\u786e\u5b9a\u4e0e\u5355\u7eaf\u5f62\u6cd5\u76f8\u540c</p>"},{"location":"math/operating-research/chapter-1/#_20","title":"\u7ebf\u6027\u89c4\u5212\u7684\u7075\u654f\u5ea6","text":"<p>\u7075\u654f\u5ea6\u8ba8\u8bba\u7ebf\u6027\u89c4\u5212\u4e2d\u53c2\u6570\u53d8\u5316\u5bf9\u7ebf\u6027\u89c4\u5212\u76ee\u6807\u51fd\u6570\u503c\u7684\u5f71\u54cd\uff0c\u5e94\u5f53\u6ce8\u610f\uff0c\u5982\u679c\u53c2\u6570\u53d8\u52a8\u8fc7\u5927\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7ebf\u6027\u89c4\u5212\u89e3\u53d1\u751f\u53d8\u5316\u3002</p> <p>\u8003\u8651\u5f62\u5982\u4e0b\u5f0f\u7684\u7ebf\u6027\u89c4\u5212\uff1a</p> \\[ \\begin{aligned}     &amp; \\max Z = 5x_1 + 8x_2 + 6x_3 \\\\     s.t. &amp; \\left\\{     \\begin{aligned}         x_1 &amp; + &amp; x_2 + &amp; x_3 + &amp; x_4 &amp; &amp;= &amp; 12 \\\\         x_1 &amp; + &amp; 2x_2 + &amp; 2x_3 + &amp; &amp; x_5 &amp;= &amp; 20 \\\\         x_i &amp;\\geq 0     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u5176\u6700\u4f18\u5355\u7eaf\u5f62\u8868\u4e3a\uff1a</p> <p> </p> <p>\u4efb\u4f55\u7cfb\u6570\u7684\u53d8\u5316\u90fd\u4f1a\u9020\u6210\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\u6700\u4f18\u89e3\u4e0d\u53d1\u751f\u53d8\u5316</li> <li>\u6700\u4f18\u89e3\u53d1\u751f\u53d8\u5316</li> </ol>"},{"location":"math/operating-research/chapter-1/#_21","title":"\u76ee\u6807\u51fd\u6570\u7cfb\u6570\u7684\u7075\u654f\u5ea6","text":"<p>\u5f53\u76ee\u6807\u51fd\u6570\u7cfb\u6570\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u5982\u679c\u6700\u4f18\u89e3\u4e0d\u53d1\u751f\u53d8\u5316\uff0c\u5219\\(\\frac{\\partial Z}{\\partial C} = X\\)\u3002</p> <ul> <li>\u4e00\u4e2a\u76ee\u6807\u51fd\u6570\u7cfb\u6570\u53d1\u751f\u53d8\u5316\uff0c\u6700\u4f18\u89e3\u4e0d\u53d1\u751f\u53d8\u5316\u7684\u5145\u8981\u6761\u4ef6\u662f\u53d8\u5316\u540e\u7684\u68c0\u9a8c\u6570\u4ecd\u4e0d\u8d85\u8fc7\\(0\\)\u3002</li> <li>\u591a\u4e2a\u76ee\u6807\u51fd\u6570\u7cfb\u6570\u53d1\u751f\u53d8\u5316\uff0c\u6700\u4f18\u89e3\u4e0d\u53d1\u751f\u53d8\u5316\u7684\u5145\u5206\u6761\u4ef6\u662f\u5404\u4e2a\u7cfb\u6570\u53d8\u5316\u7684\u5e45\u5ea6\u6ee1\u8db3\\(100\\%\\)\u6cd5\u5219\u3002</li> </ul> <p>100%\u6cd5\u5219</p> <p>\u5b9a\u4e49\\(r_i = |\\frac{\\Delta c_i}{u_i}|\\)\uff0c\u5176\u4e2d\\(u_i\\)\u4e3a\u7cfb\u6570\\(c_i\\)\u5141\u8bb8\u53d8\u5316\u7684\u6700\u5927\u5e45\u5ea6\u3002\u82e5\\(\\sum r_i &lt; 1\\)\uff0c\u5219\u6700\u4f18\u89e3\u4e0d\u53d1\u751f\u53d8\u5316\u3002</p>"},{"location":"math/operating-research/chapter-1/#_22","title":"\u7ea6\u675f\u6761\u4ef6\u7684\u7075\u654f\u5ea6","text":"<p>\u5f53\u7ea6\u675f\u6761\u4ef6\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u5982\u679c\u5355\u7eaf\u5f62\u8868\u4e2d\u7684\\(b' = B^{-1}b\\)\u4e0d\u53d1\u751f\u53d8\u5316\uff0c\u5219\u6700\u4f18\u57fa\u4e0d\u53d1\u751f\u53d8\u5316\uff0c\u5426\u5219\u53ef\u4ee5\u4f7f\u7528\u5bf9\u5076\u5355\u7eaf\u5f62\u6cd5\u6c42\u51fa\u65b0\u7684\u6700\u4f18\u57fa\u3002</p> <p>\u6ce8\u610f</p> <p>\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f\u6700\u4f18\u57fa\u4e0d\u53d1\u751f\u53d8\u5316\uff0c\u6700\u4f18\u89e3\u4e5f\u4f1a\u53d1\u751f\u53d8\u5316\u3002</p> <p>\u8bbe\u539f\u95ee\u9898\u4e2d\\(b_1\\)\u5141\u8bb8\u53d8\u5316\u7684\u8303\u56f4\u4e3a\\(\\lambda\\)\uff0c\u5219\uff1a</p> \\[ b' = B^{-1}b = \\begin{bmatrix}     1 &amp; 1 \\\\ 1 &amp; 2 \\end{bmatrix} ^{-1} \\begin{bmatrix}     \\lambda \\\\ 0 \\end{bmatrix} = \\begin{bmatrix}     4 + 2\\lambda \\\\ 8 - \\lambda \\end{bmatrix} \\] <p>\u5982\u679c\u6700\u4f18\u57fa\u4e0d\u53d8\uff0c\u5219\u5bf9\u5076\u95ee\u9898\u7684\u6700\u4f18\u89e3\u4e0d\u53d8\uff0c\u5373\u5f71\u5b50\u4ef7\u683c\u4e0d\u53d8\u3002\u5f71\u5b50\u4ef7\u683c\u7684\u53d8\u5316\u89c4\u5f8b\u4ecd\u6ee1\u8db3\\(100\\%\\)\u6cd5\u5219\u3002</p>"},{"location":"math/operating-research/chapter-1/#_23","title":"\u6dfb\u52a0\u65b0\u53d8\u91cf\u6216\u65b0\u7ea6\u675f\u7684\u7075\u654f\u5ea6","text":"<p>\u6dfb\u52a0\u65b0\u53d8\u91cf\u65f6\uff0c\u8ba1\u7b97\u65b0\u53d8\u91cf\u7684\u68c0\u9a8c\u6570\uff0c\u5982\u679c\u68c0\u9a8c\u6570\u5c0f\u4e8e\u7b49\u4e8e\\(0\\)\uff0c\u5219\u65b0\u52a0\u5165\u7684\u53d8\u91cf\u7684\u6700\u4f18\u89e3\u4e3a\\(0\\)\uff0c\u4e0d\u4f1a\u5bf9\u539f\u6700\u4f18\u89e3\u4ea7\u751f\u5f71\u54cd\u3002</p> <p>\u6dfb\u52a0\u65b0\u7ea6\u675f\u65f6\uff0c\u8ba1\u7b97\u7ea6\u675f\u5728\u5f53\u524d\u7ed3\u679c\u4e0b\u662f\u5426\u6ee1\u8db3\uff0c\u5982\u679c\u7ea6\u675f\u6ee1\u8db3\u5219\u6700\u4f18\u89e3\u4e0d\u53d8\uff0c\u5426\u5219\u6700\u4f18\u89e3\u6539\u53d8\uff0c\u53ef\u4ee5\u4f7f\u7528\u5bf9\u5076\u5355\u7eaf\u5f62\u6cd5\u8fdb\u884c\u6c42\u89e3\u3002</p>"},{"location":"math/operating-research/chapter-1/#_24","title":"\u6539\u53d8\u7cfb\u6570\u77e9\u9635\u7684\u7075\u654f\u5ea6","text":"<p>\u8ba1\u7b97\\(A' = B^{-1}A\\)\uff0c\u7136\u540e\u4f7f\u7528\u5355\u7eaf\u5f62\u6cd5\u6216\u5bf9\u5076\u5355\u7eaf\u5f62\u6cd5\u8fdb\u884c\u6c42\u89e3\u3002</p>"},{"location":"math/operating-research/chapter-2/","title":"\u8fd0\u8f93\u95ee\u9898","text":"<p>\u8fd0\u8f93\u95ee\u9898\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7ebf\u6027\u89c4\u5212\u95ee\u9898\uff0c\u5177\u6709\u5982\u4e0b\u7684\u6570\u5b66\u5f62\u5f0f\uff1a</p> <ul> <li>\u7269\u8d44\u7684\u4ea7\u5730\u4e3a\\(A_i,\\; i=1, 2, \\dots m\\)\uff0c\u4ea7\u91cf\u4e3a\\(a_i\\)</li> <li>\u7269\u8d44\u7684\u9500\u5730\u4e3a\\(B_j,\\; j=1, 2, \\dots n\\)\uff0c\u9500\u91cf\u4e3a\\(b_j\\)</li> <li>\u4ece\\(i\\)\u5230\\(j\\)\u7684\u5355\u4f4d\u8fd0\u4ef7\\(c_{ij}\\)</li> <li>\u4f18\u5316\u8fd0\u8f93\u5b89\u6392\u4f7f\u5f97\u603b\u8fd0\u4ef7\u6700\u5c0f</li> </ul> <p>\u5176\u7ebf\u6027\u89c4\u5212\u5f62\u5f0f\u5982\u4e0b\uff1a</p> \\[ \\begin{aligned}     &amp; \\min Z = \\sum_{i=1}^m \\sum_{i=1}^n c_{ij}x_{ij} \\\\     s.t. &amp; \\left\\{     \\begin{aligned}         &amp; \\sum_{i = 1}^m x_{ij} = b_{j} \\\\         &amp; \\sum_{j = 1}^n x_{ij} = a_{i} \\\\         &amp; x_{ij} \\geq 0     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u5bf9\u5076\u95ee\u9898\u4e3a\uff1a</p> \\[ \\begin{aligned}     &amp; \\max W = \\sum_{i=1}^m a_iu_i + \\sum_{j=1}^n b_jv_j \\\\     s.t. &amp; \\left\\{         \\begin{aligned}             &amp; u_j + v_j \\leq c_{ij} \\\\             &amp; u_i \\geq 0 \\\\             &amp; v_j \\geq 0 \\\\             &amp; i = 1, 2, \\dots m \\\\             &amp; j = 1, 2, \\dots n         \\end{aligned}     \\right . \\end{aligned} \\] <p>\u5982\u679c\u8fd0\u8f93\u95ee\u9898\u7684\u4ea7\u9500\u5e73\u8861\uff0c\u5373\\(\\sum a_i = \\sum b_j\\)\uff0c\u5219\u8fd0\u8f93\u95ee\u9898\u5fc5\u6709\u6709\u9650\u6700\u4f18\u89e3\u3002\u57fa\u53ef\u884c\u89e3\u4e2d\u57fa\u53d8\u91cf\u7684\u4e2a\u6570\u4e3a\\(m + n - 1\\)</p>"},{"location":"math/operating-research/chapter-2/#_2","title":"\u8868\u4e0a\u4f5c\u4e1a\u6cd5","text":"<p>\u8868\u683c\u7684\u901a\u5e38\u683c\u5f0f\u5982\u4e0b\uff1a</p> <p> </p> <ol> <li>\u8ba1\u7b97\u521d\u59cb\u57fa\u53ef\u884c\u89e3\uff0c\u5373\u5728\u8868\u683c\u4e0a\u586b\u5165\\(m + n - 1\\)\u4e2a\u6570\u5b57</li> <li>\u8ba1\u7b97\u8868\u4e2d\u5404\u7a7a\u683c\uff08\u975e\u57fa\u53d8\u91cf\uff09\u7684\u68c0\u9a8c\u6570\uff0c\u5224\u65ad\u5f53\u524d\u89e3\u662f\u5426\u6700\u4f18\u89e3</li> <li>\u82e5\u5f53\u524d\u89e3\u4e0d\u662f\u6700\u4f18\u89e3\uff0c\u5219\u8fed\u4ee3\u5230\u4e0b\u4e00\u4e2a\u57fa</li> </ol> <p>\u6ce8\u610f</p> <p>\u57fa\u53d8\u91cf\u4e0d\u80fd\u6784\u6210\u95ed\u56de\u8def\uff0c\u6784\u6210\u4e00\u7ec4\u95ed\u56de\u8def\u7684\u53d8\u91cf\u4e2d\u5fc5\u7136\u5305\u542b\u81f3\u5c11\u4e00\u4e2a\u975e\u57fa\u53d8\u91cf\u3002</p> <p>\u95ed\u56de\u8def\u793a\u610f\u56fe\u5982\u4e0b\uff1a</p> <p> </p> <p>\u4e00\u4e2a\u95ed\u56de\u8def\u4e2d\u542b\u6709\u5076\u6570\u4e2a\u5355\u5143\u683c\u3002</p> <p>\u5982\u4e0b\u4f7f\u7528 \u7a7a\u683c \u8868\u793a\\(x_{ij} = 0\\)\u7684\u5355\u5143\u683c\uff0c\u4f7f\u7528 \u6570\u5b57\u683c \u8868\u793a\\(x_{ij} &gt; 0\\)\u7684\u5355\u5143\u683c</p>"},{"location":"math/operating-research/chapter-2/#_3","title":"\u786e\u5b9a\u521d\u59cb\u57fa\u53ef\u884c\u89e3","text":"<p>\u6709\u4e09\u79cd\u65b9\u6cd5\u7528\u4e8e\u786e\u5b9a\u521d\u59cb\u57fa\u53ef\u884c\u89e3\uff1a</p> <ol> <li>\u6700\u5c0f\u5143\u7d20\u6cd5</li> <li>\u897f\u5317\u89d2\u6cd5</li> <li>Vogol\u6cd5</li> </ol>"},{"location":"math/operating-research/chapter-2/#_4","title":"\u6700\u5c0f\u5143\u7d20\u6cd5","text":"<p>\u6700\u5c0f\u5143\u7d20\u6cd5\u4f18\u5148\u5bfb\u627e\u8fd0\u4ef7\u8f83\u4f4e\u7684\u53d8\u91cf\u4f5c\u4e3a\u57fa\u53d8\u91cf\u3002\u5982\u679c\u9009\u53d6\u51fa\u7684\\(x_{ij}\\)\u6b63\u5206\u91cf\u4e0d\u5305\u542b\u95ed\u56de\u8def\uff0c\u5219\\(\\{x_{ij}\\}\\)\u4e3a\u57fa\u53ef\u884c\u89e3\u3002</p>"},{"location":"math/operating-research/chapter-2/#_5","title":"\u897f\u5317\u89d2\u6cd5","text":"<p>\u897f\u5317\u89d2\u6cd5\u4ece\u5de6\u4e0a\u5f00\u59cb\uff0c\u4f18\u5148\u6700\u5927\u5316\u6ee1\u8db3\u5de6\u4e0a\u89d2\u7684\u8fd0\u8f93\u9700\u6c42\u3002\u5982\u679c\u4f9b\u7ed9\u65b9\u9700\u6c42\u5df2\u7ecf\u6ee1\u8db3\uff0c\u5219\u5212\u53bb\u4f9b\u7ed9\u65b9\u6240\u5728\u7684\u884c\uff0c\u5426\u5219\u5212\u53bb\u9700\u6c42\u65b9\u6240\u5728\u7684\u5217\u3002\u91cd\u590d\u4ee5\u4e0a\u8fc7\u7a0b\u76f4\u5230\u53f3\u4e0b\u89d2\u3002</p>"},{"location":"math/operating-research/chapter-2/#vogol","title":"Vogol\u6cd5","text":"<p>Vogol\u6cd5\u8ba1\u7b97\u5404\u884c\u5404\u5217\u4e2d\u6700\u5c0f\\(c_{ij}\\)\u4e0e\u6b21\u5c0f\\(c_{ij}\\)\u7684\u5dee\u4f5c\u4e3a\u7f5a\u6570\uff0c\u4f18\u5148\u5b89\u6392\u7f5a\u6570\u6bd4\u8f83\u5927\u7684\u4ea7\u5730-\u9500\u5730\u3002\u9009\u53d6\u7f5a\u6570\u6700\u5927\u7684\u884c\u6216\u5217\uff0c\u5e76\u586b\u5165\u6700\u5c0f\u7684\\(c_{ij}\\)\uff0c\u7136\u540e\u5212\u53bb\u8be5\u884c\u6216\u5217\uff0c\u91cd\u65b0\u8ba1\u7b97\u7f5a\u6570\u3002</p> <p>Vogol\u6cd5\u901a\u5e38\u80fd\u591f\u5f97\u5230\u66f4\u4f18\u7684\u521d\u59cb\u57fa\u53ef\u884c\u89e3\u3002</p>"},{"location":"math/operating-research/chapter-2/#_6","title":"\u6700\u4f18\u6027\u68c0\u9a8c","text":""},{"location":"math/operating-research/chapter-2/#_7","title":"\u95ed\u56de\u8def\u6cd5","text":"<p>\u5b9a\u7406</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u7a7a\u683c\uff0c\u90fd\u5b58\u5728\u4e00\u6761\u95ed\u56de\u8def\uff1a</p> <ol> <li>\u7a7a\u683c\u4f4d\u4e8e\u8be5\u95ed\u56de\u8def\u7684\u62d0\u70b9\u4e0a</li> <li>\u95ed\u56de\u8def\u7684\u5176\u4ed6\u62d0\u70b9\u662f\u6570\u5b57\u683c</li> </ol> <p>\u5c06\u4ece\u7a7a\u683c\u51fa\u53d1\uff0c\u5076\u6570\u5355\u5143\u683c\u7684\u8fd0\u4ef7\u548c\u4e0e\u5947\u6570\u5355\u5143\u683c\u7684\u8fd0\u4ef7\u548c\u4e4b\u5dee\u8bb0\u4e3a\\(\\lambda_{ij}\\)\uff0c\u82e5\u5bf9\u4e8e\u6240\u6709\u7a7a\u683c\uff0c\u90fd\u6709\\(\\lambda_{ij} \\leq 0\\)\uff0c\u5219\u5f53\u524d\u7684\\(\\{x_{ij}\\}\\)\u4e3a\u6700\u4f18\u89e3\u3002</p>"},{"location":"math/operating-research/chapter-2/#_8","title":"\u4f4d\u52bf\u6cd5","text":"<p>\u8bbe\\((u_{i}, v_{j})\\)\u4e3a\u5bf9\u5076\u95ee\u9898\u7684\u53ef\u884c\u89e3\uff0c\\(\\{x_{ij}\\}\\)\u4e3a\u539f\u95ee\u9898\u7684\u53ef\u884c\u89e3\u3002\u6839\u636e\u4e92\u8865\u677e\u5f1b\u6027\uff0c\u82e5\\(x_{ij}(c_{ij} - u_i - v_j) = 0\\)\uff0c\u5219\u4e24\u7ec4\u89e3\u5206\u522b\u4e3a\u5bf9\u5e94\u95ee\u9898\u7684\u6700\u4f18\u89e3\u3002</p> <p>\u5df2\u77e5\u5f53\u524d\u4e00\u7ec4\u57fa\u53ef\u884c\u89e3\\(\\{x_{ij}\\}\\)\uff1a</p> <ol> <li>\u5bf9\u4e8e\u57fa\u53d8\u91cf\\(\\{x_{ij}\\}\\)\uff0c\u5217\u51fa\u65b9\u7a0b\\(u_i + v_j = c_{ij}\\)\uff0c\u7ec4\u5408\u6210\u65b9\u7a0b\u7ec4</li> <li>\u8be5\u65b9\u7a0b\u7ec4\u6709\\(m+n\\)\u4e2a\u53d8\u91cf\u4f46\u53ea\u6709\\(m + n - 1\\)\u4e2a\u65b9\u7a0b\uff0c\u56e0\u6b64\u6709\u65e0\u6570\u89e3\uff0c\u4efb\u9009\u4e00\u7ec4\u89e3\u5373\u53ef</li> <li>\u5bf9\u4e8e\u975e\u57fa\u53d8\u91cf\\(x_{ij}\\)\uff0c\u8ba1\u7b97\\(\\lambda_{ij} = c_{ij} - u_i - v_j\\)</li> <li>\u82e5\\(\\lambda _{ij}\\)\u5168\u90e8\\(\\geq 0\\)\uff0c\u5219\u5f53\u524d\u89e3\u4e3a\u6700\u4f18\u89e3</li> <li>\u5426\u5219\u8f6c\u51fa\\((i, j) = \\arg\\max_{(i, j)} -\\lambda_{ij}\\)\uff0c\u8c03\u6574\u8be5\u7a7a\u683c\u6240\u5728\u7684\u95ed\u56de\u8def</li> </ol>"},{"location":"math/operating-research/chapter-2/#_9","title":"\u8fd0\u8f93\u95ee\u9898\u7684\u53d8\u79cd","text":""},{"location":"math/operating-research/chapter-2/#_10","title":"\u4e24\u5730\u65e0\u8fde\u63a5","text":"<p>\u5982\u679c\u6a21\u578b\u4e2d\u5b58\u5728\u4e24\u4e2a\u5730\u70b9\u4e4b\u95f4\u4e0d\u80fd\u8fd0\u8f93\uff0c\u5219\u53ef\u4ee5\u5c06\u4e24\u5730\u95f4\u7684\u8fd0\u4ef7\u8bbe\u4e3a\u8db3\u591f\u9ad8\u7684\u6b63\u6570\u3002</p>"},{"location":"math/operating-research/chapter-2/#_11","title":"\u4ea7\u9500\u4e0d\u5e73\u8861","text":"<p>\u5f53\u95ee\u9898\u4e2d\u4ea7\u91cf\u4e0e\u9500\u91cf\u4e0d\u76f8\u7b49\u65f6\uff1a</p> <ul> <li>\u5982\u679c\u4ea7\u91cf\u5927\u4e8e\u9500\u552e\u91cf\uff0c\u5219\u6dfb\u52a0\u4e00\u4e2a\u865a\u62df\u4e70\u65b9\uff0c\u589e\u52a0\\(m\\)\u4e2a\u677e\u5f1b\u53d8\u91cf</li> <li>\u5982\u679c\u9500\u552e\u91cf\u5927\u4e8e\u4ea7\u91cf\uff0c\u5219\u6dfb\u52a0\u4e00\u4e2a\u865a\u62df\u5356\u65b9\uff0c\u589e\u52a0\\(n\\)\u4e2a\u677e\u5f1b\u53d8\u91cf</li> </ul>"},{"location":"math/operating-research/chapter-2/#_12","title":"\u9700\u6c42\u8303\u56f4","text":"<p>\u5982\u679c\u4e70\u65b9\u7684\u9700\u6c42\u5728\u4e00\u4e2a\u8303\u56f4\u4e2d\uff0c\u5219\u53ef\u4ee5\u5c06\u5b58\u5728\u8303\u56f4\u9700\u6c42\u7684\u4e70\u65b9\u62c6\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u5373\u5fc5\u987b\u6ee1\u8db3\u7684\u9700\u6c42\u90e8\u5206\u4e0e\u53ef\u9009\u6ee1\u8db3\u7684\u9700\u6c42\u90e8\u5206\uff0c\u4e24\u90e8\u5206\u5230\u5356\u65b9\u7684\u8fd0\u4ef7\u76f8\u540c\u3002\u540c\u65f6\u52a0\u5165\u4e00\u4e2a\u865a\u62df\u5356\u65b9\uff0c\u865a\u62df\u5356\u65b9\u5230\u5fc5\u987b\u6ee1\u8db3\u7684\u865a\u62df\u4e70\u5bb6\u7684\u8fd0\u4ef7\u4e3a\u8db3\u591f\u5927\u7684\u6b63\u6570\uff0c\u865a\u62df\u5356\u65b9\u5230\u53ef\u9009\u6ee1\u8db3\u7684\u865a\u62df\u4e70\u5bb6\u7684\u8fd0\u4ef7\u4e3a\\(0\\)\u3002</p>"},{"location":"math/operating-research/chapter-2/#_13","title":"\u4f9b\u5e94\u95ee\u9898","text":"<p>\u8003\u8651\u6309\u6708\u751f\u4ea7\u7684\u5356\u65b9\u4e0e\u6309\u6708\u4ea7\u751f\u9700\u6c42\u7684\u4e70\u65b9\uff0c\u4e0d\u5141\u8bb8\u5ef6\u671f\u4ea4\u8d27\u3002\u5356\u65b9\u751f\u4ea7\u7684\u4ea7\u54c1\u5f53\u6708\u53ef\u4ee5\u4e0d\u9500\u552e\u3002\u5219\u8be5\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u8fd0\u8f93\u95ee\u9898\u3002</p>"},{"location":"math/operating-research/chapter-2/#_14","title":"\u591a\u7ef4\u8fd0\u8f93\u95ee\u9898","text":"<p>\u5047\u8bbe\u4e24\u5730\u4e4b\u95f4\u5b58\u5728\\(k\\)\u4e2a\u4e2d\u95f4\u8282\u70b9\\(c_k\\)\uff0c\u4ece\\(A\\)\u5230\\(B\\)\u7684\u6240\u6709\u8def\u5f84\u90fd\u5fc5\u987b\u7ecf\u8fc7\u8282\u70b9\\(C\\)\uff0c\u6c42\u6700\u4f18\u8fd0\u8f93\u65b9\u6848\u3002</p>"},{"location":"math/operating-research/chapter-3/","title":"\u76ee\u6807\u89c4\u5212","text":"<p>\u76ee\u6807\u89c4\u5212\u89e3\u51b3\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u591a\u76ee\u6807\u51b3\u7b56\u95ee\u9898\u3002</p> <p>\u8bbe\u7ebf\u6027\u89c4\u5212\\((P)\\)\uff1a</p> \\[ \\begin{aligned}     &amp; \\max z=c^Tx \\\\     &amp; s.t. \\left\\{     \\begin{aligned}         &amp; AX \\leq b \\\\         &amp; X\\geq 0     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u5047\u8bbe\u4f18\u5316\u95ee\u9898\u7684\u76ee\u6807\u8c03\u6574\u4e3a\uff1a</p> <p>\u5bfb\u627e\u4f7f\u5f97\\(z\\geq z_0\\)\u7684\\(X\\)\uff0c\u5176\u4e2d\\(z_0\\)\u4e3a\u6307\u5b9a\u7684\u76ee\u6807\u3002\u5141\u8bb8\\(z &gt; z_0\\)\u4f46\u4e0d\u5141\u8bb8\\(z &lt; z_0\\)</p> <p>\u6b64\u65f6\u7684\u4f18\u5316\u95ee\u9898\u5373\u4e3a\u76ee\u6807\u89c4\u5212\uff0c\u5f15\u5165\u4e24\u4e2a\u677e\u5f1b\u53d8\u91cf\\(d^+, d^-\\)\uff0c\u5206\u522b\u8868\u793a\u76ee\u6807\u51fd\u6570\u8d85\u51fa\u76ee\u6807\u503c\u7684\u90e8\u5206\u4e0e\u4e0d\u8db3\u76ee\u6807\u503c\u7684\u90e8\u5206\uff0c\u4e3a\u4fdd\u8bc1\u76ee\u6807\u51fd\u6570\u8d85\u8fc7\u76ee\u6807\u503c\uff0c\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u5efa\u6a21\uff1a</p> \\[ \\begin{aligned}     &amp; \\max w = d^- \\\\     &amp; s.t. \\left\\{     \\begin{aligned}         &amp; c^Tx - d^+ + d^- = z_0 \\\\         &amp; AX \\leq b \\\\         &amp; X\\geq 0     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u7531\u6b64\u53ef\u89c1\uff0c\u76ee\u6807\u89c4\u5212\u76f8\u5f53\u4e8e\u5728\u7ebf\u6027\u89c4\u5212\u4e2d\u5f15\u5165\u4e00\u79cd\u65b0\u7684\u7ea6\u675f\u6761\u4ef6\uff0c\u5373\u76ee\u6807\u7ea6\u675f\u3002\u6bcf\u4e2a\u76ee\u6807\u7ea6\u675f\u90fd\u9700\u8981\u5f15\u5165\u4e00\u5bf9\u53d8\u91cf\\(d^+\\)\u4e0e\\(d^-\\)\u3002\u5982\u679c\u4f18\u5316\u95ee\u9898\u4e2d\u5b58\u5728\u591a\u4e2a\u76ee\u6807\u4e14\u4e4b\u95f4\u5b58\u5728\u4f18\u5148\u7ea7\u5173\u7cfb\uff0c\u53ef\u4ee5\u4f7f\u7528\\(P_i\\)\u4f5c\u4e3a\u9700\u8981\u4f18\u5316\u7684\u76ee\u6807\u51fd\u6570\u7cfb\u6570\u3002\\(P_i\\)\u6ee1\u8db3\\(P_1 \\gg P_2 \\gg \\dots \\gg P_n\\)\u5e76\u4e14\u5404\\(P_i\\)\u4e3a\u8db3\u591f\u5927\u7684\u6b63\u6570\u3002</p> <p>\u76ee\u6807\u89c4\u5212\u7684\u76ee\u6807\u51fd\u6570\u4e2d\u53ea\u6709\u504f\u5dee\u53d8\u91cf\uff0c\u76ee\u6807\u89c4\u5212\u7684\u4f18\u5316\u76ee\u6807\u662f\u6700\u5c0f\u5316\u504f\u5dee\u53d8\u91cf\u3002\u5982\u679c\u6700\u4f18\u6761\u4ef6\u4e0b\\(Z=0\\)\uff0c\u8bf4\u660e\u6240\u6709\u76ee\u6807\u53ef\u4ee5\u540c\u65f6\u6ee1\u8db3\u3002</p>"},{"location":"math/operating-research/chapter-3/#_2","title":"\u76ee\u6807\u89c4\u5212\u7684\u6c42\u89e3\u65b9\u6cd5","text":"<p>\u53ef\u4ee5\u4f7f\u7528\u56fe\u89e3\u6cd5\u6216\u5355\u7eaf\u5f62\u6cd5\u5bf9\u76ee\u6807\u89c4\u5212\u8fdb\u884c\u6c42\u89e3</p>"},{"location":"math/operating-research/chapter-3/#_3","title":"\u56fe\u89e3\u6cd5","text":"<p>\u4f7f\u7528\u56fe\u89e3\u6cd5\u6c42\u89e3\u76ee\u6807\u89c4\u5212\u65f6\uff0c\u9996\u5148\u9700\u8981\u753b\u51fa\u76ee\u6807\u7ea6\u675f\u4e2d\u7684\u786c\u7ea6\u675f\uff0c\u518d\u6309\u7167\u76ee\u6807\u7ea6\u675f\u7684\u4f18\u5148\u7ea7\u753b\u51fa\u8f6f\u7ea6\u675f\uff0c\u5e76\u6ce8\u660e\u7ea6\u675f\u504f\u5dee\u65b9\u5411\u3002\u6309\u7167\u7ea6\u675f\u7684\u4f18\u5148\u7ea7\u4f9d\u6b21\u5212\u5206\u80fd\u591f\u6ee1\u8db3\u7ea6\u675f\u7684\u53ef\u884c\u57df\u3002\u76f4\u5230\u53ef\u884c\u57df\u4e3a\u7a7a\u6216\u7ea6\u675f\u5168\u90e8\u6ee1\u8db3\u3002</p>"},{"location":"math/operating-research/chapter-3/#_4","title":"\u5355\u7eaf\u5f62\u6cd5","text":"<p>\u9996\u5148\u9700\u8981\u5c06\u5355\u7eaf\u5f62\u6cd5\u4e2d\u7684\u786c\u7ea6\u675f\u5316\u4e3a\u6807\u51c6\u578b\u3002\u5217\u51fa\u5355\u7eaf\u5f62\u8868\u540e\uff0c\u9010\u6b65\u5c06\u5305\u542b\u5728\u76ee\u6807\u51fd\u6570\u4e2d\u7684\u504f\u5dee\u4ece\u57fa\u4e2d\u6362\u51fa\u3002\u5e76\u4e14\u5c3d\u53ef\u80fd\u4f7f\u5f97\u975e\u57fa\u53d8\u91cf\u7684\u68c0\u9a8c\u6570\u4e3a\u6b63\uff08\u56e0\u76ee\u6807\u89c4\u5212\u7684\u4f18\u5316\u65b9\u5411\u4e3a\u6700\u5c0f\u5316\uff09\u3002</p>"},{"location":"math/operating-research/chapter-4/","title":"\u6574\u6570\u89c4\u5212","text":"<p>\u6574\u6570\u89c4\u5212\u662f\u90e8\u5206\uff08\u6216\u5168\u90e8\uff09\u51b3\u7b56\u53d8\u91cf\u5747\u53d6\u6574\u6570\u7684\u7ebf\u6027\u89c4\u5212\u3002\u5168\u90e8\u51b3\u7b56\u53d8\u91cf\u5747\u53d6\u6574\u6570\u7684\u6574\u6570\u89c4\u5212\u79f0\u4e3a\u7eaf\u6574\u6570\u89c4\u5212\u3002\u5982\u679c\u6574\u6570\u53d8\u91cf\u53ea\u80fd\u53d60-1\u4e24\u4e2a\u503c\uff0c\u5219\u79f0\u4e3a0-1\u6574\u6570\u89c4\u5212\u3002</p>"},{"location":"math/operating-research/chapter-4/#_2","title":"\u6574\u6570\u89c4\u5212\u7684\u6c42\u89e3\u65b9\u6cd5","text":"<p>\u6c42\u89e3\u6574\u6570\u89c4\u5212\u76ee\u524d\u6709\u5982\u4e0b\u7b97\u6cd5\uff1a</p> <ol> <li>\u5272\u5e73\u9762\u6cd5</li> <li>\u5206\u652f\u5b9a\u754c\u6cd5</li> <li>\u9690\u679a\u4e3e\u6cd5\uff08\u9002\u7528\u4e8e\u6c42\u89e30-1\u6574\u6570\u89c4\u5212\uff09</li> <li>\u542f\u53d1\u5f0f\u7b97\u6cd5</li> </ol> <p>\u8003\u8651\u5982\u4e0b\u5f62\u5f0f\u7684\u7eaf\u6574\u6570\u89c4\u5212\u95ee\u9898\uff1a</p> \\[ \\begin{aligned}     &amp; \\max z=c^Tx \\\\     &amp; s.t. \\left\\{     \\begin{aligned}         &amp; AX \\leq b \\\\         &amp; X\\geq 0     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u5176\u4e2d\\(A, b, x\\)\u5747\u4e3a\u6574\u6570\u3002</p>"},{"location":"math/operating-research/chapter-4/#_3","title":"\u5272\u5e73\u9762\u6cd5","text":"<p>\u79f0\u6d88\u9664\u6574\u6570\u7ea6\u675f\u7684\u6574\u6570\u89c4\u5212\u4e3a\u677e\u5f1b\u95ee\u9898\uff0c\u5272\u5e73\u9762\u6cd5\u9996\u5148\u9700\u8981\u6c42\u89e3\u677e\u5f1b\u95ee\u9898\u7684\u6700\u4f18\u89e3\uff0c\u8bbe\u4e3a\\(X^*\\)\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\\(X^*\\)\u4e0d\u662f\u6574\u6570\u6216\u4e0d\u5168\u662f\u6574\u6570\u3002\u5355\u7eaf\u5f62\u8868\u5982\u4e0b\u6240\u793a\uff1a</p> <p> </p> <p>\u8bbe\u5355\u7eaf\u5f62\u8868\u4e2d\u7684\u7b2c\\(i\\)\u884c\u5bf9\u5e94\u7684\\(b'_i\\)\u4e0d\u4e3a\u6574\u6570\uff0c\u5bf9\u4e8e\u8fd9\u4e00\u884c\uff0c\u6709\uff1a</p> \\[ x_i + \\sum_{j=m+1}^n a'_{ij}x_j = b'_i \\] <p>\u5c06\\(a'_{ij}, b'_i\\)\u5212\u5206\u4e3a\u6574\u6570\u90e8\u5206\u4e0e\u5c0f\u6570\u90e8\u5206\uff0c\u5373\uff1a</p> \\[ \\begin{aligned}     a'_{ij} &amp;= \\tilde a_{ij} + \\alpha_{ij}, \\; \\tilde a_{ij} = \\lfloor a'_{ij}\\rfloor \\\\     b'_{i} &amp;= \\tilde b_{i} + \\beta_{i}, \\; \\tilde b_{ij} = \\lfloor b'_{i}\\rfloor \\end{aligned} \\] <p>\u5c06\u8fd9\u4e00\u884c\u7b49\u5f0f\u53d8\u5f62\uff0c\u5f97\u5230\uff1a</p> \\[ \\beta_i - \\sum_{j=m+1}^n\\alpha_{ij}y_j = x_i - \\tilde b_i + \\sum_{j=m+1}^n \\tilde \\alpha_{ij}y_j \\] <p>\u6574\u6570\u89c4\u5212\u7684\u6761\u4ef6\u8981\u6c42\u7b49\u5f0f\u53f3\u4fa7\u4e3a\u6574\u6570\uff0c\u56e0\u6b64\u7b49\u5f0f\u5de6\u4fa7\u540c\u6837\u9700\u8981\u4e3a\u6574\u6570\uff0c\u5219\u6709\\(\\beta_i - \\sum_{j=m+1}^n\\alpha_{ij}y_j + s_i = 0\\)\uff0c\u5176\u4e2d\\(s_i\\)\u4e3a\u975e\u8d1f\u6574\u6570\u3002</p> <p>\u79f0\u65b9\u7a0b</p> \\[ \\beta_i - \\sum_{j=m+1}^n\\alpha_{ij}y_j + s_i = 0 \\] <p>\u4e3a\u5272\u5e73\u9762\u65b9\u7a0b\uff0c\u5272\u5e73\u9762\u65b9\u7a0b\u4f5c\u4e3a\u7ea6\u675f\u6761\u4ef6\uff0c\u6d88\u53bb\u4e86\u975e\u6574\u6570\u6700\u4f18\u89e3\uff0c\u7559\u4e0b\u6574\u6570\u89e3\u3002\u5411\u677e\u5f1b\u95ee\u9898\u7684\u6700\u4f18\u5355\u7eaf\u5f62\u8868\u4e2d\u52a0\u5165\u5272\u5e73\u9762\u65b9\u7a0b\u4f5c\u4e3a\u65b0\u7684\u7ea6\u675f\u6761\u4ef6\uff0c\u7ee7\u7eed\u6c42\u89e3\u7ebf\u6027\u89c4\u5212\u5373\u53ef\u5f97\u5230\u6574\u6570\u89c4\u5212\u7684\u6700\u4f18\u89e3\u3002</p>"},{"location":"math/operating-research/chapter-4/#_4","title":"\u5206\u652f\u5b9a\u754c\u6cd5","text":"<p>\u5148\u6c42\u89e3\u6574\u6570\u89c4\u5212\u5bf9\u5e94\u7684\u677e\u5f1b\u95ee\u9898\uff0c\u5e76\u4f30\u8ba1\u4e00\u4e2a\u975e\u6700\u4f18\u7684\u76ee\u6807\u51fd\u6570\u503c\u4f5c\u4e3a\u8bb0\u5f55\u7684\u6700\u4f18\u503c\u3002\u5bf9\u4e8e\u6700\u4f18\u89e3\u4e2d\u7684\u975e\u6574\u6570\u51b3\u7b56\u53d8\u91cf\uff0c\u9009\u62e9\u5176\u4e2d\u4e00\u4e2a\\(x_i\\)\u8fdb\u884c\u5206\u652f\uff1a</p> <ol> <li>\u6dfb\u52a0\u7ea6\u675f\\(x'_i \\leq \\lfloor x_i \\rfloor\\)</li> <li>\u6dfb\u52a0\u7ea6\u675f\\(x'_i \\geq \\lceil x_i \\rceil\\)</li> </ol> <p>\u6dfb\u52a0\u7ea6\u675f\u540e\u91cd\u65b0\u6c42\u89e3\u7ebf\u6027\u89c4\u5212\uff0c\u5982\u679c\u7ebf\u6027\u89c4\u5212\u7684\u89e3\u6ee1\u8db3\u6574\u6570\u7ea6\u675f\uff0c\u5219\u5c06\u76ee\u6807\u51fd\u6570\u503c\u4e0e\u8bb0\u5f55\u7684\u6700\u4f18\u503c\u76f8\u6bd4\u8f83\u3002\u5982\u679c\u76ee\u6807\u51fd\u6570\u66f4\u4f18\uff0c\u5219\u66f4\u65b0\u6700\u4f18\u503c\uff0c\u5426\u5219\u505c\u6b62\u5411\u4e0b\u63a2\u7d22\uff08\u526a\u679d\uff09\u3002</p> <p>\u5206\u652f\u53ef\u4ee5\u91c7\u53d6\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u6216\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3002</p>"},{"location":"math/operating-research/chapter-4/#_5","title":"\u9690\u679a\u4e3e\u6cd5","text":"<p>\u8003\u8651\u5982\u4e0b\u5f62\u5f0f\u76840-1\u6574\u6570\u89c4\u5212\uff1a</p> \\[ \\begin{aligned}     &amp; \\max z=c^Tx \\\\     &amp; s.t. \\left\\{     \\begin{aligned}         &amp; AX \\leq b \\\\         &amp; x_i \\in \\{0, 1\\}     \\end{aligned}     \\right . \\end{aligned} \\] <p>\u9996\u5148\u8bd5\u63a2\u51fa\u4e00\u4e2a\u53ef\u884c\u89e3\uff0c\u5bf9\u5e94\u7684\u76ee\u6807\u51fd\u6570\u503c\u4f5c\u4e3a\u8bb0\u5f55\u7684\u6700\u4f18\u503c\\(Z_0\\)\uff0c\u518d\u679a\u4e3e\u6240\u6709\u7684\u53ef\u884c\u89e3\uff0c\u82e5\u89e3\u7684\u76ee\u6807\u51fd\u6570\u503c\u8d85\u8fc7\u6700\u4f18\u503c\u5219\u66f4\u65b0\u6700\u4f18\u503c\u3002</p>"},{"location":"math/operating-research/chapter-4/#_6","title":"\u6307\u6d3e\u95ee\u9898","text":"<p>\u6307\u6d3e\u95ee\u9898\u662f\u7279\u6b8a\u76840-1\u6574\u6570\u89c4\u5212\u95ee\u9898\uff0c\u5176\u76ee\u6807\u662f\u5c06\\(n\\)\u4e2a\u5de5\u4eba\u5728\\(n\\)\u4e2a\u5de5\u4f5c\u4e2d\u5206\u914d\uff0c\u6bcf\u4e2a\u5de5\u4eba\\(i\\)\u5728\u8fdb\u884c\u5de5\u4f5c\\(j\\)\u65f6\uff0c\u90fd\u4f1a\u4ea7\u751f\u6210\u672c\\(c_{ij}\\)\uff0c\u51b3\u7b56\u95ee\u9898\u7684\u76ee\u6807\u662f\u6700\u5c0f\u5316\u603b\u6210\u672c\u3002\u8bb0\u6210\u672c\u77e9\u9635\u4e3a</p> \\[ A = \\begin{bmatrix}     c_{11} &amp; c_{12} &amp; \\cdots &amp; c_{1n} \\\\     c_{21} &amp; c_{22} &amp; \\cdots &amp; c_{2n} \\\\     \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\     c_{n1} &amp; c_{n2} &amp; \\cdots &amp; c_{nn} \\end{bmatrix} \\] <p>\u6027\u8d28</p> <p>\u82e5\u7cfb\u6570\u77e9\u9635\\(A\\)\u7684\u67d0\u4e00\u884c\u6216\u67d0\u4e00\u5217\u51cf\u53bb\u5206\u522b\u51cf\u53bb\u4e00\u4e2a\u5e38\u6570\\(k\\)\uff0c\u4e0d\u5f71\u54cd\u6307\u6d3e\u95ee\u9898\u7684\u89e3\u3002</p> <p>\u4f7f\u7528\u5308\u7259\u5229\u7b97\u6cd5\u6c42\u89e3\u6574\u6570\u89c4\u5212\u95ee\u9898\u3002\u9996\u5148\u5bf9\u7cfb\u6570\u77e9\u9635\u5148\u51cf\u53bb\u6bcf\u884c\u7684\u6700\u5c0f\u503c\uff0c\u518d\u51cf\u53bb\u6bcf\u5217\u7684\u6700\u5c0f\u503c\u3002\u4ece\u800c\u6bcf\u884c\u3001\u6bcf\u5217\u4e2d\u81f3\u5c11\u51fa\u73b0\u4e00\u4e2a\u96f6\u3002\u5b9a\u4e49\u201c\u72ec\u7acb\u96f6\u201d\u4e3a\u7cfb\u6570\u77e9\u9635\u4e2d\u65e2\u4e0d\u5904\u4e8e\u540c\u4e00\u884c\u3001\u4e5f\u4e0d\u5904\u4e8e\u540c\u4e00\u5217\u7684\\(0\\)\u7684\u6700\u5927\u4e2a\u6570\u3002</p> <ol> <li>\u82e5\u201c\u72ec\u7acb\u96f6\u201d\u7684\u4e2a\u6570\u7b49\u4e8e\u65b9\u9635\u7684\u7ef4\u5ea6\uff0c\u5219\u5f97\u5230\u6307\u6d3e\u95ee\u9898\u7684\u6700\u4f18\u89e3\uff0c\u6700\u4f18\u89e3\u7684\u6307\u6d3e\u65b9\u6848\u4e0e\u72ec\u7acb\u96f6\u7684\u4f4d\u7f6e\u5206\u5e03\u76f8\u540c\u3002</li> <li>\u82e5\u201c\u72ec\u7acb\u96f6\u201d\u7684\u4e2a\u6570\u5c0f\u4e8e\u65b9\u9635\u7684\u7ef4\u5ea6\u3002\u9996\u5148\u627e\u51fa\u65b9\u9635\u4e2d\u80fd\u591f\u8986\u76d6\u6240\u6709\u96f6\u5143\u7d20\u7684\u6700\u5c11\u76f4\u7ebf\u6570\u3002\u5728\u4e0d\u88ab\u76f4\u7ebf\u8986\u76d6\u7684\u5143\u7d20\u4e2d\u5bfb\u627e\u6700\u5c0f\u503c\uff0c\u5c06\u6240\u5728\u884c\u6216\u5217\u51cf\u53bb\u8fd9\u4e2a\u6700\u5c0f\u503c\u3002\u7136\u540e\u5bf9\u4ea7\u751f\u7684\u8d1f\u503c\u8fdb\u884c\u8c03\u6574\uff0c\u76f4\u5230\u77e9\u9635\u4e2d\u4e0d\u5b58\u5728\u8d1f\u503c\u3002\u7ed3\u675f\u540e\u7ee7\u7eed\u68c0\u67e5\u72ec\u7acb\u96f6\u7684\u4e2a\u6570\u3002</li> </ol>"},{"location":"math/operations-mamagement/","title":"\u9ad8\u7b49\u8fd0\u4f5c\u7ba1\u7406","text":"<ul> <li>\u9884\u6d4b\u6280\u672f</li> <li>\u9884\u6d4b\u4e0e\u9700\u6c42\u5efa\u6a21</li> <li>\u7efc\u5408\u751f\u4ea7\u8ba1\u5212</li> <li>\u786e\u5b9a\u9700\u6c42\u4e0b\u7684\u5e93\u5b58\u63a7\u5236</li> <li>\u968f\u673a\u9700\u6c42\u4e0b\u7684\u5e93\u5b58\u63a7\u5236</li> </ul>"},{"location":"math/operations-mamagement/#todo","title":"TODO","text":"<ul> <li> \u5468\u671f\u68c0\u67e5\u6a21\u578b\u2014\u2014\\((s, S)\\)\u7b56\u7565</li> <li> \u591a\u7ea7\u7cfb\u7edf\u4e0e\u534f\u8c03\u8ba2\u8d27</li> </ul>"},{"location":"math/operations-mamagement/aggregrate-planning/","title":"\u7efc\u5408\u751f\u4ea7\u8ba1\u5212","text":""},{"location":"math/operations-mamagement/aggregrate-planning/#_2","title":"\u6a21\u578b\u8bbe\u5b9a","text":"<p>\u6a21\u578b\u4e2d\u5305\u542b\u4e00\u4e2a\u4f01\u4e1a\uff0c\u4f01\u4e1a\u901a\u8fc7\u96c7\u4f63\u5de5\u4eba\u751f\u4ea7\u5e76\u9500\u552e\u4ea7\u54c1\u4f5c\u4e3a\u6536\u5165\u3002\u76f8\u5173\u7684\u53c2\u6570\u5982\u4e0b\uff1a</p> <ul> <li>\u6210\u672c\u53c2\u6570</li> <li>\u5e93\u5b58\u76f8\u5173\uff1a\u539f\u6750\u6599\u6210\u672c\u3001\u6301\u6709\u6210\u672c\u3001\u7f3a\u8d27\u6210\u672c</li> <li>\u4eba\u5458\u76f8\u5173\uff1a\u96c7\u4f63\u6210\u672c\u3001\u89e3\u96c7\u6210\u672c\u3001\u5de5\u65f6\u6210\u672c\u3001\u95f2\u7f6e\u6210\u672c\u4e0e\u52a0\u73ed\u6210\u672c</li> <li>\u751f\u4ea7\u529b\u76f8\u5173\uff1a\u8f6c\u5305\u6210\u672c</li> <li>\u6536\u76ca\u53c2\u6570\uff1a\u5355\u4f4d\u4ea7\u54c1\u552e\u4ef7</li> <li>\u751f\u4ea7\u53c2\u6570</li> <li>\u5355\u4f4d\u4ea7\u54c1\u751f\u4ea7\u5de5\u65f6</li> <li>\u65e5\u5e38\u5de5\u4f5c\u5de5\u65f6</li> <li>\u5e93\u5b58\u53c2\u6570</li> <li>\u671f\u521d\u5b58\u91cf\u4e0e\u671f\u672b\u5b58\u91cf</li> <li>\u9700\u6c42\u91cf</li> </ul> \u53d8\u91cf \u8bf4\u660e \u53d8\u91cf \u8bf4\u660e \\(c_F\\) \u89e3\u96c7\u6210\u672c \\(c_H\\) \u96c7\u4f63\u6210\u672c \\(c_I\\) \u6301\u6709\u6210\u672c \\(c_P\\) \u7f3a\u8d27\u6210\u672c \\(c_R\\) \u65e5\u5e38\u751f\u4ea7\u6210\u672c \\(c_O\\) \u52a0\u73ed\u751f\u4ea7\u6210\u672c \\(c_S\\) \u8f6c\u5305\u6210\u672c \\(c_U\\) \u751f\u4ea7\u529b\u7684\u95f2\u7f6e\u6210\u672c \\(D_t\\) \\(t\\)\u5468\u671f\u7684\u9700\u6c42 \\(n_t\\) \\(t\\)\u5468\u671f\u7684\u5de5\u65f6\u6570 \\(F_t\\) \\(t\\)\u5468\u671f\u7684\u89e3\u96c7\u4eba\u6570 \\(H_t\\) \\(t\\)\u5468\u671f\u7684\u96c7\u4f63\u4eba\u6570 \\(K\\) \u5355\u4f4d\u5de5\u65f6\u4ea7\u91cf \\(W_t\\) \\(t\\)\u5468\u671f\u7684\u5458\u5de5\u4eba\u6570 \\(P_t\\) \\(t\\)\u5468\u671f\u7684\u603b\u5de5\u65f6 \\(O_t\\) \\(t\\)\u5468\u671f\u7684\u603b\u52a0\u73ed\u5de5\u65f6 \\(U_t\\) \\(t\\)\u5468\u671f\u7684\u603b\u95f2\u7f6e\u5de5\u65f6 \\(S_t\\) \\(t\\)\u5468\u671f\u7684\u5916\u5305\u4ea7\u91cf \\(I_t^+\\) \\(t\\)\u5468\u671f\u7684\u591a\u4f59\u5e93\u5b58 \\(I_t^-\\) \\(t\\)\u5468\u671f\u7684\u7f3a\u8d27\u6c34\u5e73 <p>\u4e0a\u8868\u4e2d\\(I_t^\\pm, W_t\\)\u5206\u522b\u6307\u7b2c\\(t\\)\u4e2a\u5468\u671f\u7ed3\u675f\u65f6\u7684\u6570\u503c\u3002\u7279\u522b\u5730\uff0c\u5bf9\u4e8e\u521d\u59cb\u72b6\u6001\uff0c\u6709</p> <ul> <li>\\(I_0\\)\u4e3a\u521d\u59cb\u5e93\u5b58</li> <li>\\(W_0\\)\u4e3a\u521d\u59cb\u5458\u5de5\u6570</li> </ul>"},{"location":"math/operations-mamagement/aggregrate-planning/#_3","title":"\u7b56\u7565\u5206\u7c7b","text":"<p>\u6839\u636e\u4e0d\u540c\u7684\u6210\u672c\u7b56\u7565\u4e0e\u98ce\u9669\u504f\u597d\uff0c\u7efc\u5408\u8ba1\u5212\u7c7b\u578b\u53ef\u4ee5\u5206\u4e3a\u591a\u79cd\u4e0d\u540c\u7684\u8ba1\u5212\u7c7b\u578b\uff0c\u5982\uff1a</p> <ol> <li>\u8ffd\u9010\u7b56\u7565\uff08\u6700\u5c0f\u5316\u5e93\u5b58\uff09</li> <li>\u5e73\u7a33\u7b56\u7565\uff08\u6700\u5c0f\u5316\u5458\u5de5\u7684\u53d8\u52a8\uff09</li> <li>\u5f39\u6027\u5de5\u4f5c\u65f6\u95f4\u7b56\u7565</li> <li>\u6df7\u5408\u7b56\u7565</li> </ol>"},{"location":"math/operations-mamagement/aggregrate-planning/#_4","title":"\u6c42\u89e3\uff1a\u7ebf\u6027\u89c4\u5212","text":"<p>\u5bf9\u4e8e\u5e93\u5b58\uff0c\u6709\u5982\u4e0b\u7ea6\u675f\uff1a</p> \\[ \\begin{aligned}     I_t &amp;= I_t^+ - I_t^- \\\\     I_t &amp;= I_{t-1} + P_t + S_t - D_t \\end{aligned} \\] <p>\u5bf9\u4e8e\u5458\u5de5\u7684\u96c7\u4f63\u4e0e\u89e3\u96c7\uff0c\u6709\u5982\u4e0b\u7ea6\u675f\uff1a</p> \\[ \\begin{aligned}     W_t &amp;= W_{t-1} + H_t - F_t \\\\     0 &amp;= H_t\\cdot F_t \\end{aligned} \\] <p>\u5bf9\u4e8e\u5458\u5de5\u7684\u751f\u4ea7\u5de5\u65f6\uff0c\u6709\u5982\u4e0b\u7ea6\u675f\uff1a</p> \\[ \\begin{aligned}     P_t &amp;= Kn_t W_t + O_t - U_t \\\\     0 &amp;= O_t \\cdot U_t \\end{aligned} \\] <p>\u7ebf\u6027\u89c4\u5212\u7684\u76ee\u6807\u51fd\u6570\u4e3a\u6700\u5c0f\u5316\u5404\u9879\u6210\u672c\u3002</p>"},{"location":"math/operations-mamagement/fdm/","title":"\u9884\u6d4b\u4e0e\u9700\u6c42\u5efa\u6a21","text":"<p>\u7ecf\u5178\u6a21\u578b\uff08\u5982\u6ed1\u52a8\u5e73\u5747\u3001\u6307\u6570\u5e73\u6ed1\u7b49\uff09\u7684\u7f3a\u9677\u5728\u4e8e\uff1a</p> <ul> <li>\u7ecf\u5178\u6a21\u578b\u6301\u7eed\u4f9d\u8d56\u4e8e\u5386\u53f2\u89c2\u6d4b\u6570\u636e</li> <li>\u90e8\u5206\u6a21\u578b\uff08\u5982\u6ed1\u52a8\u5e73\u5747\uff09\u4ec5\u9002\u7528\u4e8e\u5e73\u7a33\u5e8f\u5217</li> <li>\u4ea7\u54c1\u7684\u751f\u547d\u5468\u671f\u4e0d\u540c\uff0c\u5982\u679c\u4e00\u4e2a\u4ea7\u54c1\u7684\u751f\u547d\u5468\u671f\u660e\u663e\u8f83\u77ed\uff0c\u610f\u5473\u7740\u6ca1\u6709\u5145\u8db3\u7684\u5386\u53f2\u6570\u636e\u5bf9\u8be5\u4ea7\u54c1\u8fdb\u884c\u9884\u6d4b\u3002</li> </ul> <p>\u672c\u7ae0\u8ba8\u8bba\u5982\u4e0b\u6a21\u578b\uff0c\u8fd9\u4e9b\u6a21\u578b\u53ef\u4ee5\u7528\u4e8e\u9884\u6d4b\u751f\u547d\u5468\u671f\u8f83\u77ed\u7684\u4ea7\u54c1\u3002</p> <ul> <li>Bass\u6269\u6563\u6a21\u578b</li> <li>\u9886\u5148\u6307\u6807\u6a21\u578b</li> <li>\u9009\u62e9\u6a21\u578b</li> </ul>"},{"location":"math/operations-mamagement/fdm/#bass","title":"Bass\u6269\u6563\u6a21\u578b","text":"<p>Bass\u6a21\u578b\u63d0\u51fa\u4e86\u6269\u6563\u8fc7\u7a0b\u7684\u6982\u5ff5\u3002\uff08\u67d0\u4e00\u7c7b\uff09\u65b0\u4ea7\u54c1\u9996\u6b21\u4e0a\u5e02\u540e\uff0c\u8be5\u4ea7\u54c1\u7684\u8bbe\u8ba1\u7406\u5ff5\u7b49\u5185\u5bb9\u4f1a\u5728\u5e02\u573a\u4e0a\u6269\u6563\uff08\u88ab\u6a21\u4eff\uff09\uff0c\u9020\u6210\u540c\u7c7b\u4ea7\u54c1\u7684\u4ea7\u91cf\u4e0a\u5347\u3002</p> <p>\u524d\u63d0\u5047\u8bbe\uff1a</p> <ul> <li>\u5e02\u573a\u4e0a\u7684\u7528\u6237\u6570\u91cf\u4e0d\u53d8</li> <li>\u7528\u6237\u53ef\u4ee5\u88ab\u7b80\u5355\u5206\u4e3a\u521b\u65b0\u8005\u4e0e\u6a21\u4eff\u8005</li> <li>\u521b\u65b0\u8005\u8d2d\u4e70\u4ea7\u54c1\u7684\u51b3\u7b56\u4e0d\u53d7\u5230\u5176\u4ed6\u4e2a\u4f53\u7684\u5f71\u54cd</li> <li>\u6a21\u4eff\u8005\u8d2d\u4e70\u4ea7\u54c1\u7684\u51b3\u7b56\u53d7\u5230\u5176\u4ed6\u4e2a\u4f53\u7684\u5f71\u54cd\uff0c\u8fd9\u79cd\u5f71\u54cd\u65b9\u5f0f\u901a\u8fc7\u4e2a\u4f53\u95f4\u7684\u4ea4\u6d41\u5b9e\u73b0</li> </ul> <p>\u5b9a\u4e49\uff1a\\(P(t)\\)\u4e3a\u5e02\u573a\u4e2d\u7684\u4e00\u4e2a\u987e\u5ba2\u5728\\(t\\)\u65f6\u523b\u4f5c\u51fa\u8d2d\u4e70\u51b3\u7b56\u7684\u6982\u7387</p> \\[ P(t) = p + \\frac{q}{m} D(t) \\] <ul> <li>\\(p\\)\u4e3a\u521b\u65b0\u7cfb\u6570</li> <li>\\(q\\)\u4e3a\u6a21\u4eff\u7cfb\u6570\uff0c\\(p\\ll q\\)</li> <li>\\(m\\)\u4e3a\u6d88\u8d39\u8005\u7684\u603b\u91cf\uff0c\u4e5f\u5373\u5e02\u573a\u89c4\u6a21\uff0c\u5e38\u6570</li> <li>\\(D(t)\\)\u4e3a\u65f6\u95f4\u4ece\\(0\\)\u5230\\(t\\)\u7684\u7d2f\u79ef\u8d2d\u4e70\u91cf</li> </ul> <p>\u5373\uff0c\u5e02\u573a\u4e0a\u7684\u7d2f\u8ba1\u9700\u6c42\\(D(t)\\)\u8d8a\u5927\uff0c\u6d88\u8d39\u8005\u8d8a\u5bb9\u6613\u4f5c\u51fa\u8d2d\u4e70\u51b3\u7b56\u3002</p> <p>\u4e0d\u59a8\u8bbe\\(d(t) = \\frac{\\mathrm dD}{\\mathrm dt}\\)\uff0c\u5373\\(t\\)\u65f6\u523b\u5e02\u573a\u4e0a\u8d2d\u4e70\u4eba\u6570\uff0c\u6839\u636e\\(P(t)\\)\u7684\u5b9a\u4e49\uff0c\u6709\uff1a</p> \\[ P(t) = \\frac{d(t)}{m - D(t)} \\] <p>\u8054\u7acb\u4e8c\u5f0f\uff0c\u5f97\u5230\uff1a</p> \\[ \\begin{aligned} p + \\frac{q}{m} D(t) &amp;= \\frac{d(t)}{m - D(t)} \\\\ d(t) &amp;= (m-D(t))\\left(p + \\frac qmD(t)\\right) \\\\ d(t) &amp;= -\\frac qmD^2(t) + (q-p)D(t) + pm \\end{aligned} \\] <p>\u89e3\u5fae\u5206\u65b9\u7a0b\\(\\frac{\\mathrm dD}{\\mathrm dt} = -\\frac qmD^2 + (q-p)D + pm\\)\uff0c\u5f97\\(D(t)\\)\uff1a</p> \\[ \\boxed{\\begin{aligned}D(t) &amp;= m\\frac{1-e^{-(p+q)t}}{1+\\frac qp e^{-(p+q)t}} \\\\ d(t) &amp;= m\\frac{p(p+q)^2e^{-(p+q)t}}{\\left(p+qe^{-(p+q)t}\\right)^2}\\end{aligned}} \\] <p>\u5bf9\\(d(t)\\)\u8fdb\u4e00\u6b65\u6c42\u5bfc\uff0c\u5f97\u5f53\u4e14\u4ec5\u5f53\\(t = \\frac{1}{p+q}\\log \\frac{q}{p}\\)\u65f6\uff0c\\(d(t)\\)\u53d6\u5f97\u6700\u5927\u503c\u3002</p> <p>\u6b64\u65f6\uff1a</p> \\[ \\boxed{\\begin{aligned}d(t) &amp;= \\frac{m(p+q)^2}{4q} \\\\ D(t) &amp;= \\frac{m(q-p)}{2q}\\end{aligned}} \\] <p>\u7ed3\u679c\u8bf4\u660e\uff1a</p> <ul> <li>\u5f53\\(p\\)\u5f88\u5c0f\u65f6\uff0c\u610f\u5473\u7740\u9500\u552e\u91cf\u7684\u589e\u957f\u7f13\u6162</li> <li>\u5f53\\(p, q\\)\u5f88\u5927\u65f6\uff0c\u610f\u5473\u7740\u9500\u552e\u91cf\u7684\u589e\u957f\u4e0e\u4e0b\u8dcc\u5747\u8fc5\u901f</li> <li>\u4ec5\u5f53\\(q&gt;p\\)\u65f6\uff0c\u4e0a\u5f0f\u624d\u6709\u610f\u4e49\uff0c\u5426\u5219\u610f\u5473\u7740\u9500\u552e\u91cf\u6301\u7eed\u4e0b\u8dcc</li> </ul>"},{"location":"math/operations-mamagement/forecast/","title":"\u9884\u6d4b\u6280\u672f","text":"<p>\u5e38\u89c1\u7684\u5ba2\u89c2\u9884\u6d4b\u65b9\u6cd5\u6709\u56e0\u679c\u6a21\u578b\u4e0e\u65f6\u95f4\u5e8f\u5217\u65b9\u6cd5\u3002\u8fd9\u4e9b\u65b9\u6cd5\u7684\u524d\u63d0\u5047\u8bbe\u662f\u8fc7\u53bb\u7684\u53d8\u91cf\u53ca\u5176\u76f8\u4e92\u4f5c\u7528\u5173\u7cfb\u5728\u672a\u6765\u5c06\u7ee7\u7eed\u5b58\u5728\u5e76\u53d1\u6325\u4f5c\u7528\u3002</p>"},{"location":"math/operations-mamagement/forecast/#_2","title":"\u56e0\u679c\u6a21\u578b","text":"<p>\u56e0\u679c\u6a21\u578b\u5373\u627e\u5230\u4e00\u4e2a\u51fd\u6570\uff0c\u4f7f\u7528\u4e0e\u9884\u6d4b\u53d8\u91cf\u76f8\u5173\u7684\u5176\u4ed6\u53d8\u91cf\u8fdb\u884c\u9884\u6d4b\u3002</p> \\[ y = f(X_1, \\dots, X_n) \\] <p>\u5176\u4e2d\\(X_1, \\dots, X_n\\)\u662f\u4e0e\\(y\\)\u76f8\u5173\u7684\u5176\u4ed6\u53d8\u91cf\u3002</p> <p>\u5bf9\u4e8e\u7ebf\u6027\u56e0\u679c\u6a21\u578b\uff0c\u51fd\u6570\\(f\\)\u662f\u5173\u4e8e\\(X_1, \\dots, X_n\\)\u7684\u7ebf\u6027\u51fd\u6570\uff0c\u5373\uff1a</p> <p>\\(f(X_1, \\dots, X_n) = \\alpha_0 + \\alpha_1X_1 + \\dots + \\alpha_nX_n\\)</p>"},{"location":"math/operations-mamagement/forecast/#_3","title":"\u65f6\u95f4\u5e8f\u5217\u65b9\u6cd5","text":"<p>\u6b64\u5904\u7684\u65f6\u95f4\u5e8f\u5217\u6307\u5f80\u671f\u5bf9\u67d0\u53d8\u91cf\u89c2\u6d4b\u503c\u7684\u96c6\u5408\u3002\u65f6\u95f4\u5e8f\u5217\u65b9\u6cd5\u4ec5\u4ec5\u4f9d\u9760\u8fd9\u4e9b\u89c2\u6d4b\u503c\u5bf9\u8be5\u53d8\u91cf\u7684\u672a\u6765\u8fdb\u884c\u9884\u6d4b\u3002</p> <p>\u5728\u73b0\u5b9e\u7684\u751f\u4ea7\u8fd0\u4f5c\u4e2d\uff0c\u65f6\u95f4\u5e8f\u5217\u901a\u5e38\u4f1a\u8868\u73b0\u51fa\u4ee5\u4e0b\u6a21\u5f0f\uff1a</p> <ul> <li>\u8d8b\u52bf\uff0c\u5373\u89c2\u6d4b\u503c\u5728\u6574\u4e2a\u65f6\u95f4\u5e8f\u5217\u4e2d\u6240\u8868\u73b0\u51fa\u7684\u8d8b\u52bf</li> <li>\u5b63\u8282\uff0c\u5373\u89c2\u6d4b\u503c\u5728\u65f6\u95f4\u5e8f\u5217\u4e2d\u7684\u4e00\u90e8\u5206\u6240\u8868\u73b0\u51fa\u7684\u8d8b\u52bf</li> <li>\u5468\u671f\uff0c\u5373\u89c2\u6d4b\u503c\u5728\u65f6\u95f4\u5e8f\u5217\u4e2d\u91cd\u590d\u591a\u6b21\u51fa\u73b0\u7684\u8d8b\u52bf</li> <li>\u968f\u673a\uff0c\u6307\u89c2\u6d4b\u503c\u65e0\u89c4\u5219\u7684\u53d8\u52a8</li> </ul> <p>\u5b9e\u9645\u7684\u65f6\u95f4\u5e8f\u5217\u53ef\u80fd\u540c\u65f6\u5305\u542b\u4ee5\u4e0a\u6240\u6709\u7279\u5f81\u3002</p>"},{"location":"math/operations-mamagement/forecast/#_4","title":"\u89c2\u6d4b\u4e0e\u9884\u6d4b","text":"<ol> <li>\\(\\{D_t\\}\\)\u4e3a\u89c2\u6d4b\u53d8\u91cf\u5728\\(1\\sim t\\)\u7684\u65f6\u95f4\u5185\u7684\u89c2\u6d4b\u503c\u7ec4\u6210\u7684\u5e8f\u5217\uff1b</li> <li>\\(F_{t-\\tau, t}\\)\u8868\u793a\u65f6\u95f4\u5e8f\u5217\u5728\\(t-\\tau\\)\u5468\u671f\u5185\u5bf9\\(t\\)\u5468\u671f\u7684\u89c2\u6d4b\u503c\u4f5c\u51fa\u7684\u9884\u6d4b\u3002\u7279\u6b8a\u5730\uff0c\\(F_t=F_{t-1, t}\\)\uff0c\u5373\u4e3a\u63d0\u524d\u4e00\u4e2a\u5468\u671f\u7684\u9884\u6d4b\u3002</li> </ol> <p>\u5982\u4e0b\u6307\u6807\u53ef\u4ee5\u7528\u4e8e\u8861\u91cf\u9884\u6d4b\u6548\u679c\uff0c\u5b9a\u4e49\u504f\u5dee\\(e_t = D_t - F_t\\)</p> <ul> <li>\u5e73\u5747\u7edd\u5bf9\u504f\u5dee\uff08MAD\uff09\uff1a\\(\\frac{1}{n}\\sum_{i=1}^n|e_i|\\)</li> <li>\u5747\u65b9\u8bef\u5dee\uff08MSE\uff09\uff1a\\(\\frac{1}{n}\\sum_{i=1}^ne_i^2\\)</li> <li>\u5e73\u5747\u7edd\u5bf9\u767e\u5206\u8bef\u5dee\uff08MAPE\uff09\uff1a\\(\\frac{1}{n}\\sum_{i=1}^n|e_i/D_i|\\times 100\\%\\)</li> </ul>"},{"location":"math/operations-mamagement/forecast/#_5","title":"\u5e73\u7a33\u5e8f\u5217\u7684\u9884\u6d4b","text":"<p>\u5e73\u7a33\u5e8f\u5217\u662f\u8054\u5408\u6982\u7387\u5206\u5e03\u4e0d\u968f\u65f6\u95f4\u6539\u53d8\uff0c\u5f62\u5982\\(D_t=\\mu + \\epsilon_t\\)\u7684\u5e8f\u5217\u3002</p> <p>\u5bf9\u5e73\u7a33\u5e8f\u5217\uff0c\u5e38\u7528\u4e24\u79cd\u9884\u6d4b\u65b9\u6cd5\uff0c\u5373\u79fb\u52a8\u5e73\u5747\u4e0e\u6307\u6570\u5e73\u6ed1\u3002</p>"},{"location":"math/operations-mamagement/forecast/#_6","title":"\u79fb\u52a8\u5e73\u5747","text":"<p>\u79fb\u52a8\u5e73\u5747\uff0c\\(MA(N)\\)\uff1a</p> \\[ F_t = \\frac{1}{N}\\sum_{i=t-N}^{t-1}\\alpha_{i-t+N+1}D_i \\] <p>\u5f53\\(\\alpha_i=1\\)\u65f6\uff0c\u79f0\u8be5\u79fb\u52a8\u5e73\u5747\u4e3a\u7b80\u5355\u79fb\u52a8\u5e73\u5747\uff0c\u5426\u5219\u4e3a\u52a0\u6743\u79fb\u52a8\u5e73\u5747\u3002</p> <p>\u5bf9\u4e8e\u7b80\u5355\u79fb\u52a8\u5e73\u5747\uff0c\u6839\u636e\u524d\u4e00\u5468\u671f\u7684\u9884\u6d4b\u503c\u548c\u65b0\u7684\u89c2\u6d4b\u503c\u53ef\u4ee5\u8ba1\u7b97\u4e0b\u4e00\u5468\u671f\u7684\u9884\u6d4b\u503c\uff1a</p> \\[ \\begin{aligned} F_{t+1} &amp;= \\frac{1}{N}\\sum_{i=t-N+1}^{t}D_i \\\\ &amp;= \\frac{1}{N}\\sum_{i=t-N}^{t-1} - D_{t-N} + D_t \\\\ &amp;= F_{t} + \\frac 1N \\left(D_t - D_{t-N}\\right) \\end{aligned} \\] <p>\u5bf9\u4e8e\u5e73\u7a33\u5e8f\u5217\uff0c\u79fb\u52a8\u5e73\u5747\u7684\u9884\u6d4b\u901a\u5e38\u6ede\u540e\u4e8e\u8d8b\u52bf\u7684\u53d1\u5c55\u3002</p>"},{"location":"math/operations-mamagement/forecast/#_7","title":"\u6307\u6570\u5e73\u6ed1","text":"<p>\u5f53\u524d\u7684\u9884\u6d4b\u503c\u7b49\u4e8e\u4e0a\u4e00\u6b21\u9884\u6d4b\u503c\u4e0e\u5f53\u524d\u9700\u6c42\u5b9e\u9645\u503c\u7684\u52a0\u6743\u5e73\u5747\uff0c\u5373\uff1a</p> \\[ \\begin{aligned} F_t &amp;= \\alpha D_{t-1} + (1-\\alpha)F_{t-1} \\\\ &amp;= F_{t-1} + \\alpha e_{t-1} \\end{aligned} \\] <p>\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u5bf9\u4e0a\u4e00\u6b21\u9884\u6d4b\u7684\u504f\u5dee\u4f5c\u51fa\u7cfb\u6570\u4e3a\\(\\alpha\\)\u7684\u4fee\u6b63\u3002</p> <p>\u5df2\u77e5\\(t=0\\)\u65f6\u5bf9\\(D_1\\)\u7684\u9884\u6d4b\u4e3a\\(F_1\\)\uff0c\u5219\uff1a</p> \\[ \\begin{aligned}     F_2 &amp;= \\alpha D_1 + (1-\\alpha) F_1 \\\\     F_3 &amp;= \\alpha D_2 + (1-\\alpha) F_2 =\\alpha D_2 + (1-\\alpha)\\alpha D_1 + (1-\\alpha) ^ 2 F_1 \\\\     \\vdots \\\\     F_n &amp;= \\sum_{i=1} ^{n-1} \\alpha(1-\\alpha)^{i-1}D_{n-i} + (1-\\alpha)^{n-1}F_1 \\end{aligned} \\]"},{"location":"math/operations-mamagement/forecast/#_8","title":"\u8d8b\u52bf\u5e8f\u5217","text":"<p>\u5bf9\u8d8b\u52bf\u5e8f\u5217\u7684\u9884\u6d4b\u901a\u5e38\u4f7f\u7528\u56de\u5f52\u5206\u6790\uff0c\u5373\u5047\u8bbe\u89c2\u6d4b\u53d8\u91cf\u4e0e\u9884\u6d4b\u53d8\u91cf\u95f4\u5b58\u5728\u51fd\u6570\u5173\u7cfb\uff0c\u5219\u53ef\u4ee5\u6839\u636e\u89c2\u6d4b\u53d8\u91cf\u548c\u9884\u6d4b\u53d8\u91cf\u7684\u89c2\u6d4b\u503c\u5bf9\u9884\u6d4b\u53d8\u91cf\u8fdb\u884c\u9884\u6d4b\u3002</p>"},{"location":"math/operations-mamagement/forecast/#_9","title":"\u7ebf\u6027\u56de\u5f52","text":"<p>\u5f53\u56de\u5f52\u4f7f\u7528\u5f62\u5982\\(\\hat Y=a+bX\\)\u7684\u7ebf\u6027\u51fd\u6570\u65f6\uff0c\u79f0\u4e3a\u7ebf\u6027\u56de\u5f52\u3002\u7531\u6b64\u53ef\u4ee5\u4f7f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u8fdb\u884c\u62df\u5408\u3002</p> <p>\u6700\u5c0f\u4e8c\u4e58\u6cd5\u4f7f\u5f97\\(\\sum|Y-\\hat Y|^2\\)\u6700\u5c0f\uff0c\u5373\u9884\u6d4b\u70b9\u548c\u89c2\u6d4b\u70b9\u7684\u8ddd\u79bb\u5e73\u65b9\u548c\u6700\u5c0f\u3002\u5047\u8bbe\u89c2\u6d4b\u53d8\u91cf\u4e3a\\(X_1, \\dots, X_m\\)\uff0c\u9884\u6d4b\u53d8\u91cf\u4e3a\\(y\\)\uff0c\u5171\\(n\\)\u7ec4\u6570\u636e\u70b9\uff0c\u5219\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u4e3a\uff1a</p> \\[ \\hat y = X\\vec a \\] <p>\u5176\u4e2d\\(\\vec a, , \\hat y\\)\u4e3a\\(m\\)\u7ef4\u5217\u5411\u91cf\uff0c\\(X\\)\u4e3a\\(n\\times m\\)\u77e9\u9635\u3002</p> <p>\u5219\u6b8b\u5dee\u5e73\u65b9\u548c\u5373\u4e3a\\(f(a; X, y) = (y - \\hat y)^T(y - \\hat y)=(y - Xa)^T(y - Xa)\\)\u3002</p> <p>\u5bf9\\(\\vec a, \\vec b\\)\u6c42\u5bfc\uff0c\u5f97\uff1a</p> \\[     \\frac{\\partial f}{\\partial \\vec a} = 0 \\] <p>\\(\\frac{\\partial f}{\\partial \\vec a} = 0\\)\u5373\uff1a</p> \\[ \\begin{aligned}     \\frac{\\partial f}{\\partial \\vec a} &amp;= 2X^T(X\\vec a - y) \\\\     &amp;= 2X^TX\\vec a + 2X^Ty \\\\     &amp;= \\vec 0 \\end{aligned} \\] <p>\u5f97\\(\\vec a = (X^TX)^{-1}X^Ty\\)</p>"},{"location":"math/operations-mamagement/forecast/#_10","title":"\u53cc\u91cd\u6307\u6570\u5e73\u6ed1","text":"<p>\u53cc\u91cd\u6307\u6570\u5e73\u6ed1\u53ef\u4ee5\u7528\u4e8e\u9884\u6d4b\u5177\u6709\u7ebf\u6027\u8d8b\u52bf\u7684\u65f6\u95f4\u5e8f\u5217\uff0c\u5176\u4e2d\u4f7f\u7528\u4e24\u4e2a\u5e73\u6ed1\u53c2\u6570\u5206\u522b\u9884\u6d4b\u5e8f\u5217\u503c\\(S_t\\)\u548c\u8d8b\u52bf\u503c\\(G_t\\)</p> <ul> <li>\u5e8f\u5217\u503c\u7b49\u4ef7\u4e8e\u66f2\u7ebf\u7684\u622a\u8ddd   $$   S_t = \\alpha D_t + (1 - \\alpha)(S_{t-1} + G_{t-1})   $$</li> <li>\u8d8b\u52bf\u503c\u7b49\u4ef7\u4e8e\u66f2\u7ebf\u7684\u659c\u7387   $$   G_t = \\beta(S_t - S_{t-1})+(1-\\beta)G_{t-1}   $$</li> <li>\u5728\\(t\\)\u65f6\u523b\u63d0\u524d\\(\\tau\\)\u6b65\u4f5c\u51fa\u7684\u9884\u6d4b\\(F_{t, t+\\tau} = S_t+\\tau G_t\\)</li> </ul>"},{"location":"math/operations-mamagement/forecast/#_11","title":"\u5b63\u8282\u6027\u5e8f\u5217","text":"<p>\u5b63\u8282\u6027\u5e8f\u5217\u662f\u6bcf\\(N\\)\u4e2a\u5468\u671f\u91cd\u590d\u4e00\u6b21\u7684\u5e8f\u5217\uff0c\u5176\u4e2d\\(N\\)\u88ab\u79f0\u4e3a\u5b63\u7684\u957f\u5ea6\u3002</p> <p>\u5bf9\u4e8e\u5b63\u8282\u4e2d\u7684\u6bcf\u4e2a\u5468\u671f\uff0c\u90fd\u6709\u4e00\u4e2a\u5b63\u8282\u56e0\u5b50\\(c_t\\)\uff0c\u6307\u5e73\u5747\u610f\u4e49\u4e0b\u7b2c\\(t\\)\u4e2a\u5468\u671f\u7684\u9700\u6c42\u4e0e\u6574\u4f53\u5e73\u5747\u9700\u6c42\u7684\u6bd4\u503c\uff0c\u6709\\(\\sum c_t = N\\)</p> <ul> <li>\u8ba1\u7b97\u6240\u6709\u6570\u636e\u7684\u6837\u672c\u5747\u503c</li> <li>\u5c06\u6bcf\u4e2a\u89c2\u6d4b\u503c\u9664\u4ee5\u6837\u672c\u5747\u503c\uff0c\u5373\u4e3a\u6bcf\u4e2a\u89c2\u6d4b\u5468\u671f\u7684\u5b63\u8282\u56e0\u5b50</li> <li>\u5c06\u6bcf\u5b63\u4e2d\u76f8\u540c\u5468\u671f\u7684\u5b63\u8282\u56e0\u5b50\u53d6\u5747\u503c\uff0c\u5f97\u5230\\(N\\)\u4e2a\u5b63\u8282\u56e0\u5b50</li> </ul> <p>\u5bf9\u4e8e\u540c\u65f6\u5177\u6709\u5b63\u8282\u6027\u6ce2\u52a8\u548c\u8d8b\u52bf\u7684\u5b63\u8282\u6027\u5e8f\u5217\uff0c\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u8fdb\u884c\u9884\u6d4b\uff1a</p> <ul> <li>\u8ba1\u7b97\u5e8f\u5217\u7684\u5b63\u8282\u56e0\u5b50</li> <li>\u5c06\u89c2\u6d4b\u503c\u9664\u4ee5\u5b63\u8282\u56e0\u5b50\uff0c\u5f97\u5230\u6d88\u9664\u5b63\u8282\u6027\u6ce2\u52a8\u7684\u5e8f\u5217</li> <li>\u7528\u8d8b\u52bf\u5e8f\u5217\u7684\u9884\u6d4b\u65b9\u6cd5\u8fdb\u884c\u9884\u6d4b</li> <li>\u9884\u6d4b\u7ed3\u679c\u4e58\u4ee5\u5b63\u8282\u56e0\u5b50\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u9884\u6d4b\u503c</li> </ul> <p>\u7f3a\u70b9\uff1a\u5728\u83b7\u5f97\u65b0\u7684\u89c2\u6d4b\u503c\u540e\uff0c\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u6240\u6709\u7684\u5b63\u8282\u56e0\u5b50\u3002</p>"},{"location":"math/operations-mamagement/forecast/#_12","title":"\u4e09\u91cd\u6307\u6570\u5e73\u6ed1","text":"<p>\u5047\u8bbe\u9700\u6c42\u4e3a\\(D_t = (\\mu +G_t)c_t + \\epsilon_t\\)\uff08\u4e58\u79ef\u578b\uff09\u3002\u8be5\u5f62\u5f0f\u4f7f\u7528\u4e09\u4e2a\u6307\u6570\u5e73\u6ed1\u5bf9\u5e8f\u5217\uff08\u622a\u8ddd\uff09\u3001\u8d8b\u52bf\uff08\u659c\u7387\uff09\u548c\u5b63\u8282\u56e0\u5b50\uff08\u5468\u671f\uff09\u5206\u522b\u8fdb\u884c\u62df\u5408\u3002</p> <ul> <li>\u5e8f\u5217\uff1a\\(S_t = \\alpha \\frac{D_t}{c_{t-N}} + (1-\\alpha) (S_{t-1} + G_{t-1})\\)\uff0c\\(c_{t-N}\\)\u7528\u4e8e\u6d88\u9664\u5b63\u8282\u56e0\u5b50\u7684\u5f71\u54cd\u3002</li> <li>\u8d8b\u52bf\uff1a\\(G_t = \\beta(S_t - S_{t-1}) + (1-\\beta) G_{t-1}\\)</li> <li>\u5b63\u8282\u56e0\u5b50\uff1a\\(c_t = \\gamma\\frac{D_t}{S_t} + (1-\\gamma) c_{t-N}\\)</li> </ul>"},{"location":"math/operations-mamagement/forecast/#box-jenkinsarima","title":"Box-Jenkins\u6a21\u578b\uff1aARIMA","text":"<p>ARIMA\u6a21\u578b\u662f\u5229\u7528\u65f6\u95f4\u5e8f\u5217\u7684\u81ea\u76f8\u5173\u7ed3\u6784\uff1a</p> <p>Auto Regressive Integrated Moving Average</p> <p>\u6784\u5efa\u6b65\u9aa4\uff1a</p> <ol> <li>\u6570\u636e\u8f6c\u6362</li> <li>\u6a21\u578b\u8bc6\u522b</li> <li>\u53c2\u6570\u4f30\u8ba1</li> <li>\u9884\u6d4b</li> <li>\u8bc4\u4ef7</li> </ol>"},{"location":"math/operations-mamagement/forecast/#arp","title":"\u81ea\u56de\u5f52\u8fc7\u7a0b\uff1aAR(p)","text":"<p>\u5bf9\u4e8e\u5e73\u7a33\u5e8f\u5217\uff1a</p> <ol> <li>\u95f4\u9694\u76f8\u540c\u7684\u4efb\u610f\u4e00\u7ec4\u9700\u6c42\u7684\u8054\u5408\u8fb9\u9645\u5206\u5e03\u76f8\u540c-&gt;\u534f\u65b9\u5dee\u76f8\u540c</li> <li>\u4efb\u610f\u4e24\u4e2a\u89c2\u6d4b\u7684\u534f\u65b9\u5dee\u4ec5\u53d6\u51b3\u4e8e\u76f8\u9694\u7684\u5468\u671f\u6570</li> </ol> \\[ \\mathrm{Cov}(D_{t+m}, D_{t+m+k}) = E(D_{t+m}D_{t+m+k}) - E(D_{t+m})E(D_{t+m+k}) \\] <p>\u76f8\u5173\u7cfb\u6570\uff1a\u6ede\u540e\\(k\\)\u671f\u7684\u81ea\u76f8\u5173\u7cfb\u6570</p> \\[ \\rho_k = \\frac{\\mathrm {Cov}(D_{t+m}, D_{t+m+k})}{\\sqrt{\\mathrm {Var}(D_{t+m})}\\sqrt{\\mathrm {Var}(D_{t+m+k})}} \\] <p>\u6837\u672c\u7684\u81ea\u76f8\u5173\u51fd\u6570\uff1a</p> \\[ r_k = \\frac{\\sum_{t=k+1} ^ n(D_t - \\overline D)(D_{t-k} - \\overline D)}{\\sum_{t=1} ^ n(D_t - \\overline D)^2} \\] \\[ D_t = a_0 + a_1D_{t-1} + \\dots + a_pD_{t-p} + \\epsilon_t \\] <p>\\(p\\)\u4e3a\u81ea\u56de\u5f52\u8fc7\u7a0b\u7684\u9636\u6570\uff0c\u4e00\u9636\u81ea\u56de\u5f52\u6a21\u578b\\(AR(1)\\)\uff1a</p> \\[ D_t = a_0 + a_1 D_{t-1} + \\epsilon_t \\] <p>\u81ea\u76f8\u5173\u51fd\u6570\u4e3a\uff1a\\(\\rho_j = a_1^j\\)</p> <p>\u5c06\u6837\u672c\u7684\u81ea\u76f8\u5173\u51fd\u6570\u4e0e\u7406\u8bba\u7684\u81ea\u76f8\u5173\u51fd\u6570\u8fdb\u884c\u6bd4\u8f83\uff0c\u5224\u65adARIMA\u7684\u62df\u5408\u6548\u679c\u3002</p>"},{"location":"math/operations-mamagement/forecast/#maq","title":"\u79fb\u52a8\u5e73\u5747\u8fc7\u7a0b\uff1aMA(q)","text":"\\[ D_t = b_0 - b_1\\epsilon_{t-1} -\\dots - b_q\\epsilon{t-q} +\\epsilon_t \\] <p>\\(AR(1)\\)\u8fc7\u7a0b\u672c\u8d28\u4e0a\u662f\\(MA(\\infty)\\)\u8fc7\u7a0b\u3002</p> <p>\\(MA(1)\\)\u8fc7\u7a0b\uff1a\\(D_t = b_0 - b_1\\epsilon_{t-1} + \\epsilon_t\\)</p> <p>\u5bf9\u5e94\u4e8e\\(AR(1)\\)\u8fc7\u7a0b\u7684\u81ea\u76f8\u5173\u51fd\u6570\uff1a</p> \\[ \\left\\{\\begin{aligned}   \\rho_1 &amp;= \\frac{-b_1}{1+b_1^2} \\\\   \\rho_2 &amp;= \\rho_3 = \\dots = 0 \\end{aligned}\\right. \\]"},{"location":"math/operations-mamagement/forecast/#arma","title":"ARMA\u6a21\u578b","text":"<p>\\(ARMA(p, q)\\)\u6a21\u578b\u662f\\(AR(p)\\)\u6a21\u578b\u4e0e\\(MA(q)\\)\u6a21\u578b\u7684\u7ed3\u5408\uff0c\u5982\\(ARMA(1, 1)\\)\uff1a</p> \\[ D_t = c+a_1D_{t-1} - b_1\\epsilon_{t-1} + \\epsilon_t \\] <p>\u5982\u679c\u5e8f\u5217\u4e0d\u662f\u5e73\u7a33\u5e8f\u5217\uff0c\u800c\u5b58\u5728\u8d8b\u52bf\u6027\u548c/\u6216\u5b63\u8282\u6027\uff0c\u9700\u8981\u5c06\u975e\u5e73\u7a33\u8fc7\u7a0b\u8f6c\u6362\u4e3a\u5e73\u7a33\u8fc7\u7a0b\u3002</p> <ul> <li>\u5f53\\(D_t\\)\u5b58\u5728\u7ebf\u6027\u8d8b\u52bf\u65f6\uff0c\u4f7f\u7528\u5dee\u5206\u65b9\u6cd5\u6d88\u9664\u8d8b\u52bf\u6027\uff1a\\(U_t = D_t - D_{t-1}\\)\uff0c\\(U_t\\)\u662f\u5e73\u7a33\u5e8f\u5217\u3002</li> <li>\u5f53\\(D_t\\)\u5b58\u5728\u5b63\u8282\u6027\u8d8b\u52bf\u65f6\uff0c\u4f7f\u7528\u5dee\u5206\u65b9\u6cd5\u6d88\u9664\u8d8b\u52bf\u6027\uff1a\\(U_t = D_t - D_{t-N}\\)</li> <li>\u5bf9\\(U_t\\)\u8fdb\u884c\u52a0\u548c\uff0c\u5f97\u5230\u521d\u59cb\u7684\\(D_t\\)</li> </ul>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/","title":"\u786e\u5b9a\u9700\u6c42\u4e0b\u7684\u5e93\u5b58\u63a7\u5236","text":"<p>\u5728\u6301\u6709\u6210\u672c\u4e0e\u56fa\u5b9a\u8ba2\u8d27\u6210\u672c\u4e4b\u95f4\u5e73\u8861\u2014\u2014\u5355\u6b21\u8ba2\u8d27\u91cf\\(\\require{boldsymbol} Q\\)</p>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#eoq","title":"EOQ\u6a21\u578b","text":""},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_2","title":"\u8bb0\u53f7","text":"<ul> <li>\u9700\u6c42\u7387\\(\\lambda\\)\uff0c\u5468\u671f\u957f\u5ea6\\(T\\)</li> <li>\u6210\u672c\uff1a\u56fa\u5b9a\u8ba2\u8d27\u6210\u672c\\(K\\)\u3001\u8fb9\u9645\u8ba2\u8d27\u6210\u672c\\(c\\)\u3001\u8fb9\u9645\u6301\u6709\u6210\u672c\\(h\\)</li> </ul> <p>\u8fb9\u9645\u6301\u6709\u6210\u672c\\(h\\)\u901a\u5e38\u4ee5\u5229\u7387\\(I\\)\u7684\u5f62\u5f0f\u8868\u793a\uff0c\u6b64\u65f6\u6709\\(h = Ic\\)</p> <ul> <li>\u8ba2\u8d27\u63d0\u524d\u671f\\(\\tau = 0\\)</li> <li>\u4e0d\u5141\u8bb8\u7f3a\u8d27</li> </ul>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_3","title":"\u63a8\u5bfc","text":"<p>\u8003\u8651\u4e00\u4e2a\u8ba2\u8d27\u5468\u671f\uff0c\u7531\u4e8e\u4e0d\u8003\u8651\u8ba2\u8d27\u63d0\u524d\u91cf\uff0c\u8ba2\u8d27\u540e\u4ea7\u54c1\u4f1a\u7acb\u5373\u5230\u8fbe\uff0c\u56e0\u6b64\u4e3a\u964d\u4f4e\u6301\u6709\u6210\u672c\uff0c\u6700\u4f18\u8ba2\u8d27\u65b9\u5f0f\u4e3a\u5e93\u5b58\u4e3a\u96f6\u65f6\u91cd\u65b0\u8ba2\u8d27\u3002\u56e0\u6b64\u8ba2\u8d27\u5468\u671f\u6ee1\u8db3\\(Q = \\lambda T\\)\u3002\u4e00\u4e2a\u8ba2\u8d27\u5468\u671f\u4e2d\u7684\u6210\u672c\u4e3a\u8ba2\u8d27\u6210\u672c\u548c\u5e93\u5b58\u6210\u672c\u4e4b\u548c\uff0c\u5373\\(C = K + cQ + hQT/2\\)\u3002</p> <p></p> <p>\u5355\u4f4d\u65f6\u95f4\u7684\u6210\u672c</p> \\[ C(Q) = \\frac{C}{T} = \\frac{K\\lambda}{Q} + \\lambda c + \\frac{hQ}{2} \\] <p>\u5bf9\u5355\u4f4d\u65f6\u95f4\u6210\u672c\u6c42\u5bfc\uff0c\u5f97\u5230</p> \\[ C'(Q) = \\frac{h}{2} - \\frac{K\\lambda}{Q^2} \\] <p>\u5f53\u5355\u4f4d\u65f6\u95f4\u6210\u672c\u6700\u5c0f\u65f6\uff0c\\(C'(Q^\\ast) = 0\\)\uff0c\u89e3\u5f97</p> \\[ Q^\\ast = \\sqrt{\\frac{2K\\lambda}{h}} \\] <p>\u4e0e\u6b64\u5bf9\u5e94\u7684\u6700\u5c0f\u6210\u672c\u4e3a</p> \\[ C(Q^\\ast) = \\frac{K\\lambda}{Q^\\ast} + \\lambda c + \\frac{hQ^\\ast}{2} = \\lambda c + \\sqrt{2K\\lambda h} \\]"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_4","title":"\u6a21\u578b\u6269\u5145","text":""},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_5","title":"\u8ba2\u8d27\u63d0\u524d\u671f","text":"<p>\u8bbe\u8ba2\u8d27\u63d0\u524d\u671f\u4e3a\\(\\tau &gt; 0\\)\uff0c\u9996\u5148\u8003\u8651\\(\\tau \\leq T\\)\u7684\u60c5\u51b5\uff0c\u7531\u4e8e\u4e0d\u5141\u8bb8\u7f3a\u8d27\uff0c\u5728\u5e93\u5b58\u63d0\u524d\u671f\u5185\u7684\u6700\u4f4e\u5e93\u5b58\u5e94\u5f53\u4e3a\u96f6\uff0c\u5373\\(R = \\lambda\\tau\\)\u65f6\u5e94\u5f53\u91cd\u65b0\u8ba2\u8d27\uff0c\\(R\\)\u79f0\u4e3a\u91cd\u8ba2\u8d27\u70b9\u3002</p> <p>\u5f53\\(\\tau &gt; T\\)\u65f6\uff0c\u7531\u4e8e\u6a21\u578b\u9762\u5bf9\u5468\u671f\u6027\u7684\u9700\u6c42\uff0c\u53ea\u9700\u6839\u636e\u63d0\u524d\u671f\\(\\tau' = \\tau\\mod T\\)\u8ba1\u7b97\u91cd\u8ba2\u8d27\u70b9\u3002</p>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_6","title":"\u654f\u611f\u6027\u5206\u6790","text":"<p>\u654f\u611f\u6027\u5206\u6790\u6307\\(Q^*\\)\u7684\u4f30\u8ba1\u504f\u5dee\u5bf9\u603b\u6210\u672c\u7684\u5f71\u54cd\u3002\u504f\u5dee\u4ee5\\(C(Q) / C(Q^\\ast)\\)\u8861\u91cf\uff0c\u4e3a\u4fbf\u4e8e\u5206\u6790\uff0c\u8bbe\u8fb9\u9645\u8ba2\u8d27\u6210\u672c\\(c = 0\\)\uff0c\u5219\u603b\u6210\u672c\u7684\u504f\u5dee\u91cf\\(C(Q) / C(Q^\\ast)\\)\u4e3a\uff1a</p> \\[ \\begin{aligned}     \\frac{C(Q)}{C(Q^\\ast)} &amp;= \\frac{\\frac{K\\lambda}{Q}  + \\frac{hQ}{2}}{\\sqrt{2K\\lambda h}} \\\\     &amp;= \\sqrt{\\frac{K\\lambda}{2h}}\\frac{1}{Q} + \\sqrt{\\frac{h}{2K\\lambda}}Q \\\\     &amp;= \\frac{1}{2}\\left(\\frac{Q}{Q^\\ast} + \\frac{Q^\\ast}{Q}\\right) \\end{aligned} \\]"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_7","title":"\u5141\u8bb8\u7f3a\u8d27","text":"<p>\u5f53\u5141\u8bb8\u7f3a\u8d27\u65f6\uff0c\u8bbe\u7f3a\u8d27\u6210\u672c\u4e3a\\(p\\)\uff0c\u6700\u5927\u7f3a\u8d27\u91cf\\(xQ\\)\uff0c\u4e00\u4e2a\u5468\u671f\u5185\u5e93\u5b58\u6c34\u5e73\u53d8\u5316\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u6210\u672c\u51fd\u6570\u4e3a</p> \\[ C(Q, x) = \\frac{C}{T} = \\frac{(1-x)^2 Qh + x^2Qp}{2} + \\frac{K\\lambda}{Q} + \\lambda c \\] <p>\u5206\u522b\u6c42\\(C\\)\u5173\u4e8e\\(Q, x\\)\u7684\u504f\u5bfc\u6570\uff0c\u6709</p> \\[ \\begin{aligned}   \\frac{\\partial C}{\\partial Q} &amp;= \\frac{(1-x)^2h + x^2p}{2} - \\frac{K\\lambda}{Q^2} \\\\   \\frac{\\partial C}{\\partial x} &amp;= xpQ + (x-1)hQ \\end{aligned} \\] <p>\u89e3\u65b9\u7a0b\\(\\partial C/\\partial x =0\\)\u5f97\u5230\\(x^* = h/(h+p)\\)\uff0c\u4ee3\u5165\u65b9\u7a0b\\(\\partial C/\\partial Q =0\\)\uff0c\u89e3\u5f97\uff1a</p> \\[ Q^* = \\sqrt{\\frac{2K\\lambda}{(1-x)^2h+x^2p}} = \\sqrt{\\frac{2K\\lambda(h+p)}{hp}} \\] <p>\u82e5\u5b9a\u4e49\\(h' = hp/(h+p)\\)\u3002\u5219\u6700\u4f18\u8ba2\u8d27\u91cf\u8f6c\u5316\u4e3a\u7c7b\u4f3c\u4e8eEOQ\u7684\u5f62\u5f0f\uff0c\u5373\\(\\sqrt{\\frac{2K\\lambda}{h'}}\\)</p>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_8","title":"\u6709\u9650\u751f\u4ea7\u7387\u6a21\u578b","text":"<p>\u5728\u6709\u9650\u751f\u4ea7\u7387\u6a21\u578b\u4e2d\uff0c\u4ea7\u54c1\u901a\u8fc7\u751f\u4ea7\u800c\u4e0d\u662f\u8ba2\u8d2d\u83b7\u5f97\u3002\u4ea7\u54c1\u7684\u751f\u4ea7\u7387\u4e3a\\(P &gt; \\lambda\\)\uff0c\u751f\u4ea7\u7ebf\u7684\u542f\u52a8\u6210\u672c\u4e3a\\(K\\)\uff0c\u4ea7\u54c1\u7684\u5355\u4f4d\u751f\u4ea7\u6210\u672c\u4e3a\\(c\\)\u3002</p> <p>\u751f\u4ea7\u6210\u672c\uff08\u539f\u8ba2\u8d27\u6210\u672c\uff09\u90e8\u5206\u7684\u5904\u7406\u4e0eEOQ\u6a21\u578b\u76f8\u540c\u3002\u4f46\u6709\u9650\u751f\u4ea7\u7387\u6a21\u578b\u7684\u5e73\u5747\u5e93\u5b58\u6c34\u5e73\u4e0eEOQ\u6a21\u578b\u4e0d\u540c\u3002</p> <ul> <li>\u4e00\u4e2a\u5468\u671f\u4e2dEOQ\u6a21\u578b\u7684\u5e73\u5747\u5e93\u5b58\u6c34\u5e73\uff1a\\(Q/2\\)</li> <li>\u4e00\u4e2a\u5468\u671f\u4e2d\u6709\u9650\u751f\u4ea7\u7387\u6a21\u578b\u7684\u5e73\u5747\u5e93\u5b58\u6c34\u5e73\uff1a\\(Q(P-\\lambda)/2P\\)</li> </ul> <p></p> <p>\u56e0\u6b64\u6709\u9650\u751f\u4ea7\u7387\u6a21\u578b\u7684\u6210\u672c\u51fd\u6570\u4e3a</p> \\[ C(Q) = \\frac{C}{T} = \\frac{K\\lambda}{Q} + \\frac{hQ(P-\\lambda)}{2P} + \\lambda c \\] <p>\u6700\u4f18\u8ba2\u8d27\u91cf\u4e3a</p> \\[ Q^\\ast = \\sqrt{\\frac{2PK\\lambda}{h(P-\\lambda)}} \\] <p>\u82e5\u5b9a\u4e49\\(h' = (P-\\lambda) / P\\)\uff0c\u5219\u6700\u4f18\u8ba2\u8d27\u91cf\u8f6c\u5316\u4e3a\u7c7b\u4f3c\u4e8eEOQ\u7684\u5f62\u5f0f\uff0c\u5373\\(\\sqrt{\\frac{2K\\lambda}{h'}}\\)</p>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_9","title":"\u6570\u91cf\u6298\u6263\u6a21\u578b","text":"<p>\u5728\u6570\u91cf\u6298\u6263\u6a21\u578b\u4e2d\uff0c\u5f53\u6bcf\u4e2a\u5468\u671f\u7684\u8ba2\u8d27\u91cf\u8fbe\u5230\u4e00\u5b9a\u6c34\u5e73\u65f6\uff0c\u4f1a\u83b7\u5f97\u8fb9\u9645\u8ba2\u8d27\u6210\u672c\u7684\u6298\u6263\uff0c\u6298\u6263\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\uff0c\u5373\u5168\u91cf\u6298\u6263\u4e0e\u589e\u91cf\u6298\u6263\u3002</p> <ul> <li>\u5168\u91cf\u6298\u6263\u6307\u5f53\u8ba2\u8d2d\u91cf\u8d85\u8fc7\u4e34\u754c\u503c\u65f6\uff0c\u5c06\u6298\u6263\u5e94\u7528\u4e8e\u5168\u90e8\u7684\u8ba2\u8d2d\u6570\u91cf\u4e0a\u3002</li> <li>\u589e\u91cf\u6298\u6263\u6307\u5f53\u8ba2\u8d2d\u91cf\u8d85\u8fc7\u4e34\u754c\u503c\u65f6\uff0c\u5c06\u6298\u6263\u5e94\u7528\u4e8e\u8d85\u8fc7\u4e34\u754c\u503c\u7684\u90e8\u5206\u4e0a\u3002</li> </ul> <p>\u6570\u91cf\u6298\u6263\u6a21\u578b\u9488\u5bf9\u7684\u662f\u5e93\u5b58\u6210\u672c\u7684\u6539\u53d8\uff0c\u8fb9\u9645\u8ba2\u8d27\u6210\u672c\u7684\u6539\u53d8\u4e0d\u4f1a\u5f71\u54cdEOQ\u6a21\u578b\u7684\u6700\u4f18\u8ba2\u8d27\u91cf\u3002</p> <p>\u901a\u8fc7\u6570\u91cf\u6298\u6263\uff0c\u53ef\u4ee5\u8bf1\u5bfc\u96f6\u552e\u5546\u63d0\u9ad8\u8ba2\u8d27\u6279\u91cf\uff0c\u4ece\u800c\u5b9e\u73b0\u8d85\u91cf\u5e93\u5b58\u7684\u8f6c\u79fb\u3002</p>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_10","title":"\u5168\u91cf\u6298\u6263\u7684\u6c42\u89e3\u8fc7\u7a0b","text":"<p>\u6839\u636eEOQ\u6a21\u578b\u8ba1\u7b97\u51fa\u6bcf\u4e00\u4e2a\u6298\u6263\u4ef7\u683c\\(h_i\\)\u4e0b\u5bf9\u5e94\u7684\u6700\u4f18\u8ba2\u8d27\u91cf\\(Q^*_i\\)\uff0c\u786e\u5b9a\u6700\u5927\u53ef\u884c\u7684\u6700\u4f18\u8ba2\u8d27\u91cf\\(Q^\\ast = \\max Q^\\ast_i\\)\u3002\u53d6\u8be5\u6298\u6263\u70b9\u4ee5\u53ca\u9ad8\u4e8e\u8be5\u6298\u6263\u70b9\u7684\u6240\u6709\u6298\u6263\u70b9\u4e3a\u5019\u9009\uff0c\u5373\\(I = \\{i | i\\geq \\arg\\max_i Q^\\ast_i\\}\\)\u3002\u5206\u522b\u6bd4\u8f83\u6bcf\u4e2a\u6298\u6263\u70b9\u5bf9\u5e94\u7684\u5e73\u5747\u6210\u672c\uff0c\u6210\u672c\u6700\u4f4e\u7684\\(Q\\)\u5373\u4e3a\u6700\u4f18\u8ba2\u8d27\u6279\u91cf\u3002</p> <p></p>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_11","title":"\u589e\u91cf\u6298\u6263\u7684\u6c42\u89e3\u8fc7\u7a0b","text":"<p>\u6839\u636eEOQ\u6a21\u578b\uff0c\u8ba1\u7b97\u51fa\u6240\u6709\u6210\u672c\u66f2\u7ebf\u6700\u4f4e\u70b9\u5bf9\u5e94\u7684\\(Q\\)\u503c\uff0c\u5e76\u7b5b\u9009\u51fa\u6ee1\u8db3\u589e\u91cf\u6298\u6263\u7ea6\u675f\u7684\u8ba2\u8d27\u91cf\uff0c\u5e73\u5747\u6210\u672c\u6700\u4f4e\u7684\\(Q\\)\u5373\u4e3a\u6700\u4f18\u8ba2\u8d27\u6279\u91cf\u3002</p> <p></p>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_12","title":"\u77ed\u671f\u6298\u6263","text":"<p>\u77ed\u671f\u6298\u6263\u5373\u751f\u4ea7\u5546\u53ea\u5728\u4e00\u4e2a\u5468\u671f\u4e2d\u63d0\u4f9b\u6298\u6263\u3002\u4e3a\u7b80\u5316\u5904\u7406\uff0c\u6298\u6263\u65f6\u96f6\u552e\u5546\u7684\u8d2d\u4e70\u91cf\\(Q_d\\)\u4e3aEOQ\u6700\u4f18\u8ba2\u8d27\u91cf\\(Q^*\\)\u7684\u6574\u6570\\(k\\)\u500d\u3002</p>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#eoq_1","title":"\u8d44\u6e90\u7ea6\u675f\u4e0b\u7684EOQ\u6a21\u578b","text":"<p>EOQ\u6a21\u578b\u4ec5\u9002\u7528\u4e8e\u4e00\u79cd\u4ea7\u54c1\u7684\u6700\u4f18\u8ba2\u8d27\u60c5\u5f62\uff0c\u65e0\u6cd5\u5904\u7406\u591a\u79cd\u4ea7\u54c1\u9700\u8981\u534f\u8c03\u8ba2\u8d2d\u7684\u95ee\u9898\u3002\u5728\u591a\u79cd\u4ea7\u54c1\u7684\u8ba2\u8d2d\u573a\u666f\u4e0b\uff0c\u4e0d\u540c\u7684\u4ea7\u54c1\u6709\u4e0d\u540c\u7684\u9700\u6c42\u7387\uff0c\u9700\u8981\u5728\u4e0d\u540c\u4ea7\u54c1\u7684EOQ\u6700\u4f18\u8ba2\u8d27\u91cf\u8fdb\u884c\u5e73\u8861\u3002</p> <p>\u6a21\u578b\u5047\u8bbe\uff1a\u90e8\u5206\u56fa\u5b9a\u8ba2\u8d27\u6210\u672c\u4e0e\u4ea7\u54c1\u79cd\u7c7b\u6709\u5173\u2014\u2014\\(K_i\\)\uff0c\u90e8\u5206\u56fa\u5b9a\u8ba2\u8d27\u6210\u672c\u4e0e\u4ea7\u54c1\u79cd\u7c7b\u65e0\u5173\u2014\u2014\\(K\\)\u3002</p> <p>\u7ea6\u675f\u6761\u4ef6\u5206\u4e3a\u8d44\u91d1\u7ea6\u675f\u4e0e\u5e93\u5b58\u7a7a\u95f4\u7ea6\u675f\u3002\u5982</p> \\[ \\left\\{ \\begin{aligned}   C&amp;\\geq \\sum_{i=1}^n c_iQ_i \\\\   Q_i^{\\mathrm{EOQ}} &amp;= \\sqrt{\\frac{2K_i\\lambda_i}{h_i}} \\end{aligned} \\right. \\] <p>\u5bf9\u4e8e\u7d27\u7ea6\u675f\u7684\u60c5\u51b5\uff0c\u5c06\u7ea6\u675f\u5199\u4f5c\\(\\sum_{i=1}^n c_iQ_i = C\\)\uff0c\u5f15\u5165\u62c9\u683c\u6717\u65e5\u7b97\u5b50\\(\\theta\\)\uff0c\u5c06\u6b8b\u5dee\u9879\u4e0e\u4e58\u5b50\u9879\u76f8\u52a0\uff0c\u5f97\u5230\u62c9\u683c\u6717\u65e5\u4f18\u5316\u7684\u76ee\u6807\u51fd\u6570\\(C(Q_1, \\cdots, Q_n, \\theta)\\)</p> \\[ \\min C(Q_1, \\cdots, Q_n, \\theta) = \\sum_{i=1}^n \\left(\\frac{h_iQ_i}{2} + \\frac{K_i\\lambda_i}{Q_i}\\right) + \\theta\\left(\\sum_{i=1}^n c_iQ_i - C\\right) \\] <p>\u6700\u4f18\u6761\u4ef6\u4e0b\uff0c\u6709\\(\\partial C/\\partial \\theta = \\partial C/\\partial Q_i = 0\\)\uff0c\u5373</p> \\[ \\begin{aligned}   \\sum_{i=1}^n c_iQ_i^* - C &amp;= 0 \\\\   \\frac{h_i}{2} - \\frac{K_i\\lambda_i}{ {Q_i^*}^2} + \\theta c_i &amp;= 0 \\end{aligned} \\] <p>\u89e3\u5f97\\(Q_i^*\\)\uff0c\u4ee3\u5165\u7ea6\u675f\u6761\u4ef6\u5373\u53ef\u89e3\u5f97\u6700\u4f18\u7684\\(\\theta\\)</p> \\[ \\sum_{i=q}^n c_i\\sqrt{\\frac{2K_i\\lambda_i}{h_i + 2\\theta c_i}} = C \\] <p>\u4e0d\u59a8\u8bbe\\(h_i / c_i = I, \\forall i=1, \\cdots, n\\)\u3002\u5219\\(Q_i^* = \\sqrt{\\frac{2K_i\\lambda_i}{h_i}}\\sqrt{\\frac{1}{1 + 2\\theta / I}}\\)\uff0c\u6ce8\u610f\u5230\\(Q_{i}^{\\mathrm{EOQ}} = \\sqrt{\\frac{2K_i\\lambda_i}{h_i}}\\)\uff0c\u5219</p> \\[ \\left\\{ \\begin{aligned}   Q_i^* &amp;= \\sqrt{\\frac{1}{1 + 2\\theta / I}}Q_{i}^{\\mathrm{EOQ}} \\\\   C &amp;= \\sum_{i=1}^n c_iQ_i^* \\end{aligned} \\right. \\] <p>\u89e3\u5f97</p> \\[ \\theta = \\frac{\\sum_{i=1}^n \\left(c_iQ_i^{\\mathrm{EOQ}}\\right) - c}{2c / I} \\]"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#eoq_2","title":"\u591a\u4ea7\u54c1EOQ\u6a21\u578b","text":"<p>\u5728\u591a\u4ea7\u54c1EOQ\u6a21\u578b\u4e2d\uff0c\u7cfb\u7edf\u9700\u8981\u9762\u5bf9\\(U = \\{1, \\cdots, n\\}\\)\u4e2a\u4ea7\u54c1\u7684\u9700\u6c42\uff0c\u6bcf\u4e2a\u4ea7\u54c1\\(i\\)\u6709\u5982\u4e0b\u7684\u53c2\u6570\uff1a</p> <ul> <li>\u9644\u52a0\u8ba2\u8d27\u6210\u672c\\(K_i\\)\u3001\u8fb9\u9645\u8ba2\u8d27\u6210\u672c\\(c_i\\)</li> <li>\u4ee5\u5229\u7387\u5f62\u5f0f\u8868\u793a\u7684\u5e93\u5b58\u6210\u672c\\(h_i = I_ic_i\\)</li> <li>\u9700\u6c42\u7387\\(\\lambda_i\\)</li> <li>\u4e0d\u5141\u8bb8\u7f3a\u8d27</li> </ul> <p>\u5411\u91cf\u5316\u8868\u793a\u7684\u5404\u4e2a\u53c2\u6570\u5206\u522b\u4e3a\\(\\boldsymbol{K}, \\boldsymbol{c}, \\boldsymbol{h}, \\boldsymbol{I}, \\boldsymbol{\\lambda}\\)\u3002\u53e6\u5916\uff0c\u6709\u5168\u5c40\u56fa\u5b9a\u8ba2\u8d27\u6210\u672c\\(K\\)\u3002\u5728\u591a\u4ea7\u54c1EOQ\u6a21\u578b\u4e2d\uff0c\u5047\u8bbe\u67d0\u6b21\u7684\u8ba2\u8d27\u91cf\u4e3a\\(\\boldsymbol Q = (Q_i)_{n}\\)\uff0c\u5219\u8ba2\u8d27\u6210\u672c\u4e3a</p> \\[ \\begin{aligned}   G(\\boldsymbol Q) =&amp; K + \\sum_{i=1}^n K_i\\boldsymbol{1}_{\\{Q_i &gt; 0\\}} &amp; \\text{Setup cost} \\\\   &amp;+\\sum_{i=1}^n c_iQ_i &amp; \\text{Marginal cost} \\end{aligned} \\] <p>\u73b0\u6709\u4e09\u79cd\u8ba2\u8d27\u65b9\u6cd5</p> <ol> <li>\u72ec\u7acb\u8ba2\u8d27\u2014\u2014\u6bcf\u6b21\u8ba2\u8d2d\u90fd\u9700\u8981\u591a\u82b1\u8d39\\(K\\)\u7684\u56fa\u5b9a\u8ba2\u8d27\u6210\u672c</li> <li>\u5b8c\u6574\u8ba2\u8d27\u2014\u2014\u5bf9\u4e8e\u9700\u6c42\u7387\u4e0d\u9ad8\u7684\u4ea7\u54c1\uff0c\u8ba2\u8d27\u8fc7\u4e8e\u9891\u7e41\u5bfc\u81f4\u989d\u5916\u82b1\u8d39\u4e86\\(K_i\\)\u7684\u9644\u52a0\u8ba2\u8d27\u6210\u672c</li> <li>\u8054\u5408\u8ba2\u8d27\uff1a\u4e0d\u9700\u8981\u8ba2\u8d2d\u6240\u6709\u7c7b\u578b\u7684\u4ea7\u54c1</li> </ol> <p>\u4ee5\u4e0b\u5bf9\u4e09\u79cd\u8ba2\u8d27\u65b9\u6cd5\u8fdb\u884c\u8ba8\u8bba</p>"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_13","title":"\u72ec\u7acb\u8ba2\u8d27","text":"<p>\u72ec\u7acb\u8ba2\u8d27\u4e0b\uff0c\u6bcf\u79cd\u4ea7\u54c1\u6309\u5176\u5bf9\u5e94\u7684EOQ\u8ba2\u8d27\u91cf\u8fdb\u884c\u8ba2\u8d27\uff0c\u5219\u5e73\u5747\u6210\u672c</p> \\[ G^* = \\sum_{i=1}^nG_i^* = \\sum_{i=1}^n\\sqrt{2{K + K_i}\\lambda_i h_i} \\]"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_14","title":"\u5b8c\u6574\u8ba2\u8d27","text":"<p>\u5b8c\u6574\u8ba2\u8d27\u4e0b\uff0c\u6bcf\u4e2a\u5468\u671f\u5185\u90fd\u9700\u8981\u8ba2\u8d2d\u6240\u6709\u4ea7\u54c1\uff0c\u8bbe\u8ba2\u8d27\u91cf\u4e3a\\(\\boldsymbol{Q} = T\\boldsymbol\\lambda\\)\uff0c\u7c7b\u6bd4\u4e8eEOQ\u6a21\u578b\uff0c\u53ef\u4ee5\u5f97\u5230\u603b\u6210\u672c\u4e3a</p> \\[ G(Q) = \\frac{K + \\sum_{i} K_i}{T} + \\boldsymbol{c}^\\top\\boldsymbol{\\lambda} + \\frac{T\\boldsymbol{h}^\\top\\boldsymbol \\lambda}{2} \\] <p>\u8f6c\u5316\u4e3a\u5355\u4ea7\u54c1EOQ\u95ee\u9898\uff0c\u6700\u4f18\u89e3\u4e3a</p> \\[ \\begin{aligned}   T^* &amp;= \\sqrt{\\frac{2\\left(K + \\sum_{i} K_i\\right)}{\\boldsymbol{h}^\\top \\boldsymbol{\\lambda}}} \\\\   G^* &amp;= \\sqrt{2\\left(K + \\sum_{i} K_i\\right)\\boldsymbol{h}^\\top \\boldsymbol{\\lambda}} \\\\ \\end{aligned} \\]"},{"location":"math/operations-mamagement/inventory-control-deterministic-demand/#_15","title":"\u8054\u5408\u8ba2\u8d27","text":"<p>\u8054\u5408\u8ba2\u8d27\u6761\u4ef6\u4e0b\uff0c\u6bcf\u6b21\u8ba2\u8d27\u4e0d\u9700\u5305\u542b\u6240\u6709\u7c7b\u578b\u7684\u4ea7\u54c1\uff0c\u4f46\u9700\u6c42\u91cf\u6700\u9ad8\u7684\u4ea7\u54c1\u5fc5\u7136\u5728\u6bcf\u4e2a\u8ba2\u5355\u4e2d\u90fd\u51fa\u73b0\uff0c\u56e0\u6b64\uff0c\u9996\u5148\u8003\u8651EOQ\u6a21\u578b\u4e0b\u4ea7\u54c1\u7684\u8ba2\u8d27\u9891\u7387\uff1a</p> \\[ n_i = \\frac{1}{T_i} = \\sqrt{\\frac{h_i\\lambda_i}{(K + K_i)}} \\] <p>\u4ee5\u8ba2\u8d27\u6700\u9891\u7e41\u7684\u4ea7\u54c1\\(i^\\ast = \\arg\\max\\limits_{i} n_i\\)\u5bf9\u5e94\u7684\u8ba2\u8d27\u9891\u7387\\(\\bar n = n_{i^\\ast}\\)\u3001\u8ba2\u8d27\u5468\u671f\\(\\bar T = T_{i^\\ast}\\)\u4e3a\u57fa\u51c6\uff0c\u8003\u8651\u5176\u4ed6\u7c7b\u578b\u4ea7\u54c1\u7684\u8ba2\u8d27\u9891\u7387\uff1a</p> \\[ m_i = \\left\\lceil\\frac{\\bar n}{n_i}\\right\\rceil \\] <p>\\(m_i\\)\u8868\u793a\u4ea7\u54c1\\(i\\)\u7684\u8ba2\u8d2d\u5468\u671f\u4e3a\\(m_i\\bar T_i\\)\uff0c\u5373\u6700\u9891\u7e41\u8ba2\u5355\u5468\u671f\u7684\\(m_i\\)\u500d\uff0c\u5219\u4e00\u4e2a\u8ba2\u8d27\u5468\u671f\u5185\u7684\u6210\u672c\u4e3a</p> \\[ \\begin{aligned}   G(\\boldsymbol Q) =&amp; \\frac{1}{T}\\left(K + \\sum_i\\frac{K_i}{m_i}\\right) &amp; \\text{Setup cost} \\\\   &amp;+\\frac{h}{2}\\sum_{i}\\lambda_i m_i &amp; \\text{Marginal cost} \\end{aligned} \\] <p>\u56e0\u6b64\uff0c\u6700\u4f18\u8ba2\u8d27\u5468\u671f\u4e0e\u6700\u4f18\u6210\u672c\u4e3a</p> \\[ \\begin{aligned}   T^* &amp;= \\sqrt{\\frac{\\sum_{i} \\lambda_i m_i h}{2\\left(K + \\sum_i\\frac{K_i}{m_i}\\right)}} \\\\   G^* &amp;= \\sqrt{2\\left(\\sum_{i} \\lambda_i m_i h\\right)\\left(K + \\sum_i\\frac{K_i}{m_i}\\right)} \\end{aligned} \\]"},{"location":"math/operations-mamagement/inventory-control-random-demand/","title":"\u968f\u673a\u9700\u6c42\u4e0b\u7684\u5e93\u5b58\u63a7\u5236","text":"<p>\u4f18\u5316\u76ee\u6807\uff1a\u6700\u5c0f\u5316\u6210\u672c\u7684\u6570\u5b66\u671f\u671b</p>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_2","title":"\u5355\u5468\u671f\u5355\u7ea7\u2014\u2014\u62a5\u7ae5\u6a21\u578b","text":"<p>\u62a5\u7ae5\u6a21\u578b\u662f\u5355\u5468\u671f\u4e0b\u7684\u5e93\u5b58\u63a7\u5236\u95ee\u9898</p>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_3","title":"\u8bb0\u53f7","text":"<ul> <li>\\(c_o\\)\u8868\u793a\u8d85\u989d\u8ba2\u8d27\u6210\u672c\uff0c\\(c_u\\)\u8868\u793a\u7f3a\u8d27\u6210\u672c</li> <li>\\(f(\\cdot), F(\\cdot)\\)\u5206\u522b\u4e3a\u9700\u6c42\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e0e\u6982\u7387\u5206\u5e03\u51fd\u6570</li> <li>\\(Q\\)\u4e3a\u8ba2\u8d27\u91cf</li> <li>\\(x^+ = \\max\\{x, 0\\}\\)</li> </ul>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_4","title":"\u63a8\u5bfc","text":"<p>\u62a5\u7ae5\u6a21\u578b\u7684\u6210\u672c\u51fd\u6570\u4e3a</p> \\[ G(Q, D) = c_o\\max\\{0, Q-D\\} + c_u\\max\\{0, D-Q\\} \\] <p>\\(G(Q, D)\\)\u662f\u968f\u673a\u53d8\u91cf\\(D\\)\u7684\u51fd\u6570\uff0c\u56e0\u6b64\u4e5f\u662f\u968f\u673a\u53d8\u91cf\uff0c\u5bf9\\(D\\)\u53d6\u671f\u671b\uff0c\u6709</p> \\[ \\begin{aligned}     C(Q) &amp;= E(G(Q, D) | Q) \\\\     &amp;= \\int_{0}^\\infty G(Q, D)f(x)\\mathrm dx \\\\     &amp;= \\int_{0}^Q c_o(Q-x)f(x)\\mathrm dx + \\int_Q^\\infty c_u(x-Q)f(x)\\mathrm dx \\\\ \\end{aligned} \\] <p>\u5f53\\(C(Q)\\)\u53d6\u6781\u5c0f\u503c\u65f6\uff0c\u6709\\(\\frac{\\mathrm dC}{\\mathrm dD} = 0\\)\uff0c\u5373</p> \\[ \\begin{aligned}     \\frac{\\mathrm dC}{\\mathrm dQ} &amp;= c_o\\int_0^Q f(x)\\mathrm dx + c_u\\int_Q^\\infty -f(x)\\mathrm dx \\\\     &amp;= c_oF(Q) - c_u(1-F(Q)) \\\\     &amp;= 0 \\end{aligned} \\] <p>\u9a8c\u8bc1\uff1a\\(\\frac{\\mathrm d^2 C}{\\mathrm dQ^2} = (c_o + c_u)f(Q) &gt; 0\\)\uff0c\u56e0\u6b64\u4e3a\u6781\u5c0f\u503c\u70b9\u3002\u6b64\u65f6\\(F(Q^*) = c_u / (c_o + c_u)\\)\u3002</p> <p>\u79f0\\(c_u / (c_o + c_u)\\)\u4e3a\u5173\u952e\u6bd4\u4f8b\uff08crucial ratio\uff09</p>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_5","title":"\u5355\u5468\u671f\u6a21\u578b\u6269\u5c55","text":""},{"location":"math/operations-mamagement/inventory-control-random-demand/#_6","title":"\u79bb\u6563\u9700\u6c42\u7684\u6700\u4f18\u7b56\u7565","text":"<p>\u786e\u5b9a\\(\\max_{Q_0}, \\min_{Q_1}\\)\u6ee1\u8db3\\(Q_1 &gt; Q_0\\)\u4e14\\(F(Q_0) &lt; c_u / (c_u + c_o) &lt; F(Q_1)\\)\uff0c\u6b64\u65f6\\(Q_1\\)\u5373\u4e3a\u6700\u4f18\u7684\\(Q^*\\)\u3002\u5373\u9ad8\u4e8e\u6700\u4f18\u5173\u952e\u6bd4\u4f8b\u7684\u6700\u5c0f\u5173\u952e\u6bd4\u4f8b\u5bf9\u5e94\u7684\\(Q\\)</p>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#u","title":"\u5b58\u5728\u521d\u59cb\u5e93\u5b58\\(u\\)","text":"<p>\\(u\\)\u7684\u5b58\u5728\u4e0d\u5f71\u54cd\\(Q^*\\)\uff0c\u56e0\u6b64\uff0c\u8ba2\u8d27\u91cf\\(Q'\\)\u6ee1\u8db3</p> \\[ Q^{*\\prime} = \\max\\{Q^*-u, 0\\} \\]"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_7","title":"\u591a\u7ea7\u7cfb\u7edf","text":"<p>\u591a\u7ea7\u5e93\u5b58\u7cfb\u7edf\u53ef\u4ee5\u5206\u4e3a\u4e32\u884c\u7cfb\u7edf\u3001\u88c5\u914d\u7cfb\u7edf\u548c\u914d\u9001\u7cfb\u7edf\u3002</p> <p>\u8003\u8651\u4e00\u4e2a\u4e32\u884c\u7684\u4f9b\u5e94\u94fe\uff0c\u4f9b\u5e94\u94fe\u4e0b\u6e38\u5411\u4f9b\u5e94\u94fe\u4e0a\u6e38\u91c7\u8d2d\u4ea7\u54c1\u3002\u901a\u5e38\u91c7\u7528\u5d4c\u5957\u7b56\u7565\u7684\u65b9\u5f0f\u8fdb\u884c\u8ba2\u8d27\uff0c\u5373\u5f53\u4e0b\u6e38\u8ba2\u8d27\u65f6\uff0c\u4e0a\u6e38\u624d\u53ef\u80fd\u8fdb\u884c\u8ba2\u8d27\u3002</p>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_8","title":"\u5468\u671f\u68c0\u67e5\u6a21\u578b","text":"<p>\u5728\u5468\u671f\u68c0\u67e5\u6a21\u578b\u4e2d\uff0c\u9996\u5148\u4e0d\u8003\u8651\u56fa\u5b9a\u8ba2\u8d27\u6210\u672c\\(K\\)\u7684\u5f71\u54cd\u3002\u9700\u6c42\u5206\u4e3a\u591a\u4e2a\u5468\u671f\uff0c\u6bcf\u4e2a\u5468\u671f\u7684\u9700\u6c42\u72ec\u7acb\u540c\u5206\u5e03\u3002</p>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_9","title":"\u8bb0\u53f7","text":"<ul> <li>\u5269\u4f59\u5468\u671f\u6570\u4e3a\\(n\\)</li> <li>\u6bcf\u4e2a\u5468\u671f\u7684\u9700\u6c42\u72ec\u7acb\u540c\u5206\u5e03\uff0c\u9700\u6c42\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a\\(f(\\cdot)\\)\uff0c\u6982\u7387\u5206\u5e03\u51fd\u6570\u4e3a\\(F(\\cdot)\\)\u3002</li> <li>\u5468\u671f\u4e4b\u95f4\u7684\u8d34\u73b0\u7387\\(\\alpha\\)\u8868\u793a</li> <li>\u4e0d\u8003\u8651\u8ba2\u8d27\u63d0\u524d\u671f\uff0c\\(L=0\\)</li> <li>\\(y_i\\)\u8868\u793a\u7b2c\\(i\\)\u671f\u7ed3\u675f\u65f6\u7684\u5e93\u5b58\uff0c\\(y_0\\)\u8868\u793a\u671f\u521d\u5e93\u5b58</li> <li>\\(C_n(y_0)\\)\u8868\u793a\u7b2c\\(n\\)\u671f\u603b\u671f\u671b\u8d34\u73b0\u6210\u672c\u7684\u6700\u5c0f\u503c</li> </ul> \\[ C_n(y_0) = \\min_{y\\geq y_0}\\left\\{L(y) - cy_0 + \\alpha\\int_{0}^\\infty C_{n-1}[t(y, x)]f(x)\\mathrm dx\\right\\} \\]"},{"location":"math/operations-mamagement/inventory-control-random-demand/#q-r","title":"\u8fde\u7eed\u68c0\u67e5\u6a21\u578b\uff1a(Q, R)\u6a21\u578b","text":"<p>\u5728\u8fde\u7eed\u68c0\u67e5\u6a21\u578b\u4e2d\uff0c\u9700\u8981\u533a\u5206\u5e93\u5b58\u4f4d\u7f6e\u4e0e\u5e93\u5b58\u6c34\u5e73\u7684\u6982\u5ff5</p> <ul> <li>\u5e93\u5b58\u4f4d\u7f6e\uff08Inventory Position\uff09\uff0c\u6307\u76ee\u524d\u6301\u6709\u7684\u5e93\u5b58\u603b\u91cf\u52a0\u4e0a\u5904\u4e8e\u8ba2\u8d27\u63d0\u524d\u671f\u7684\u5e93\u5b58\u91cf</li> <li>\u5e93\u5b58\u6c34\u5e73\uff08Inventory Level\uff09\uff0c\u6307\u76ee\u524d\u6301\u6709\u7684\u5e93\u5b58\u603b\u91cf</li> </ul>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_10","title":"\u6a21\u578b\u8bbe\u5b9a\u53ca\u63a8\u5bfc","text":"<p>\\((Q, R)\\)\u6a21\u578b\u6709\u5982\u4e0b\u8bbe\u5b9a</p> <ol> <li>\u6bcf\u6b21\u8ba2\u8d27\u7684\u56fa\u5b9a\u6210\u672c\u4e3a\\(K\\)\uff0c\u8fb9\u9645\u8ba2\u8d27\u6210\u672c\u4e3a\\(c\\)\uff0c\u8ba2\u8d27\u63d0\u524d\u671f\u4e3a\\(\\tau\\)\uff1b</li> <li>\u8ba2\u8d27\u63d0\u524d\u671f\u5185\u7684\u9700\u6c42\\(D\\)\u5728\u65f6\u95f4\u4e0a\u8fde\u7eed\uff0c\u5728\u6570\u91cf\u4e0a\u670d\u4ece\u5747\u503c\u4e3a\\(\\mu\\)\u3001\u6807\u51c6\u5dee\u4e3a\\(\\sigma\\)\u7684\u67d0\u4e2a\u6982\u7387\u5206\u5e03\\(f(\\cdot), F(\\cdot)\\)\uff1b\\(\\lambda\\)\u4e3a\u5355\u4f4d\u65f6\u95f4\u7684\u671f\u671b\u9700\u6c42\u7387\uff1b</li> <li>\u5355\u4f4d\u65f6\u95f4\u7684\u8fb9\u9645\u5e93\u5b58\u6210\u672c\u4e3a\\(h = Ic\\)\uff08\u5f0f\u4e2d\\(I\\)\u4e3a\u5229\u7387\uff09</li> <li>\u5141\u8bb8\u7f3a\u8d27\uff0c\u7f3a\u8d27\u6210\u672c\\(p\\)\uff08backorder\uff09\uff1b</li> <li>\u6a21\u578b\u7684\u51b3\u7b56\u53d8\u91cf\u4e3a\u91cd\u8ba2\u8d27\u70b9\\(R\\)\u3001\u4e0e\u8ba2\u8d27\u91cf\\(Q\\)\uff1a\u5f53\u5e93\u5b58\u6c34\u5e73\u964d\u4f4e\u81f3\\(R\\)\u65f6\uff0c\u8ba2\u8d2d\\(Q\\)\u5355\u4f4d\u7684\u5e93\u5b58\u3002\u53d7\u8ba2\u8d27\u91cf\\(Q\\)\u7684\u5f71\u54cd\uff0c\u8ba2\u8d27\u5468\u671f\\(T\\)\u6ee1\u8db3\\(Q = \\lambda T\\)</li> <li> <p>\u6a21\u578b\u4e2d\u4f7f\u7528\u7684\u5176\u4ed6\u8bb0\u53f7\u6709\uff1a</p> <ul> <li>\\(\\mathrm{IP}\\)\uff1a\u5e93\u5b58\u4f4d\u7f6e</li> <li>\\(\\mathrm{IL}\\)\uff1a\u5e93\u5b58\u6c34\u5e73</li> <li>\\(\\mathrm{SS} = R - \\mu\\)\uff1a\u5b89\u5168\u5e93\u5b58</li> </ul> </li> </ol> <p>\\((Q, R)\\)\u6a21\u578b\u8003\u8651\u5982\u4e0b\u6765\u6e90\u7684\u6210\u672c\uff1a</p> <ol> <li> <p>\u8ba2\u8d27\u6210\u672c\uff1a\u6bcf\u6b21\u8ba2\u8d2d\\(Q\\)\u5355\u4f4d\u7684\u5e93\u5b58\uff0c\u603b\u6210\u672c\u4e3a\\(K + cQ\\)\uff1b</p> \\[ \\frac{K + cQ}{T} = \\frac{K\\lambda}{Q} + c\\lambda \\] </li> <li> <p>\u7f3a\u8d27\u6210\u672c\uff1a\u9996\u5148\u8ba1\u7b97\u6bcf\u4e2a\u5468\u671f\u5185\u7684\u671f\u671b\u7f3a\u8d27\u91cf\\(n(R)\\)\uff0c\u6709</p> \\[ n(R) = E(\\max(D - R, 0)) = \\int_R^\\infty (x-R)f(x)\\mathrm dx \\] <p>\u6839\u636e\\(n(R)\\)\uff0c\u5373\u53ef\u5f97\u5230\u4e00\u4e2a\u8ba2\u8d27\u5468\u671f\\(T\\)\u65f6\u95f4\u7684\u5e73\u5747\u7f3a\u8d27\u6210\u672c\\(\\lambda n(R)p/Q\\)</p> </li> <li> <p>\u5e93\u5b58\u6210\u672c\uff1a\u4e00\u4e2a\u5468\u671f\u5185\u671f\u671b\u7684\u5e93\u5b58\u6c34\u5e73\u53d8\u5316\u4e3a\u7ebf\u6027\uff0c\u5f53\u5e93\u5b58\u6c34\u5e73\u964d\u81f3\\(R\\)\u540e\u91cd\u65b0\u8ba2\u8d27\uff0c\u671f\u671b\u5e93\u5b58\u7ee7\u7eed\u4e0b\u964d\uff0c\u76f4\u81f3\u964d\u4f4e\u81f3\\(R - \\lambda\\tau\\)\u65f6\u8ba2\u5355\u5230\u8fbe\uff0c\u5355\u4f4d\u65f6\u95f4\u5185\u7684\u5e93\u5b58\u6210\u672c\u4e3a</p> \\[ h\\left(\\frac{Q}{2} + R - \\lambda\\tau\\right) \\] </li> </ol> <p>\u6839\u636e\u5982\u4e0a\u5206\u6790\uff0c\u5355\u4f4d\u65f6\u95f4\u5185\u7684\u671f\u671b\u6210\u672c\u4e3a</p> \\[ \\begin{aligned} G(Q, R) &amp;= h\\left(\\frac{Q}{2} + R - \\lambda\\tau\\right) + \\frac{K\\lambda}{Q} + \\frac{p\\lambda n(R)}{Q} \\\\ &amp;= \\frac{hQ}{2} + \\lambda(K + pn(R))\\frac{1}{Q} + hR - h\\lambda\\tau \\end{aligned} \\] <p>\\((Q, R)\\)\u6a21\u578b\u7684\u76ee\u6807\u5373\u4e3a\u6c42\u89e3\u51fa\u4f7f\u5f97\\(G(Q, R)\\)\u6700\u5c0f\u7684\\(Q, R\\)\u3002\u82e5\u8868\u793a\u4e3a\\((s, S)\\)\u7b56\u7565\u7684\u5f62\u5f0f\uff0c\u5373\u6709\\(s = R, S = Q + R\\)</p>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_11","title":"\u6c42\u89e3","text":"<p>\u53ef\u4ee5\u4f7f\u7528\u8fed\u4ee3\u7684\u65b9\u5f0f\u903c\u8fd1\\((Q, R)\\)\u6a21\u578b\u7684\u6700\u4f18\u89e3\uff0c\u5206\u522b\u5bf9\\(G\\)\u6c42\\(Q, R\\)\u7684\u504f\u5bfc\u6570\uff0c\u6709</p> \\[ \\begin{aligned}     \\frac{\\partial G}{\\partial Q} &amp;= \\frac{h}{2} - \\lambda (K + pn(R))\\frac{1}{Q^2} \\\\     \\frac{\\partial G}{\\partial R} &amp;= h + \\frac{\\lambda p n'(R)}{Q} \\\\     &amp;= h - \\frac{\\lambda p(1-F(R))}{Q} \\end{aligned} \\] <p>\u8fed\u4ee3\u8fc7\u7a0b\u4eceEOQ\u6a21\u578b\u7684\u6700\u4f18\u89e3\\(Q_{\\mathrm{EOQ}}^* = \\sqrt{\\frac{2K\\lambda}{h}}\\)\u5f00\u59cb\uff0c\u6c42\u51fa\u4f7f\u5f97\\(G\\)\u6700\u4f18\u7684\\(R\\)\u503c\uff0c\u518d\u5c06\\(R\\)\u4ee3\u5165\u6c42\u51fa\u6700\u4f18\u7684\\(Q\\)\u503c\uff0c\u5982\u6b64\u5faa\u73af\uff0c\\(Q, R\\)\u5373\u903c\u8fd1\u6700\u4f18\u7684\\(Q^*, R^*\\)\u53d6\u503c\uff0c\u6700\u4f18\u89e3\u6ee1\u8db3\u5982\u4e0b\u65b9\u7a0b\uff1a</p> \\[ \\begin{aligned}     Q &amp;= \\sqrt{\\frac{2\\lambda (K + pn(R))}{h}} \\\\     F(R) &amp;= 1 - \\frac{hQ}{\\lambda p} \\end{aligned} \\]"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_12","title":"\u670d\u52a1\u6c34\u5e73","text":"<p>\u7c7b\u4f3c\u4e8e\u5468\u671f\u68c0\u67e5\u6a21\u578b\uff0c\u5728\u8fde\u7eed\u68c0\u67e5\u6a21\u578b\u4e2d\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u7b2c\u4e00\u7c7b\u670d\u52a1\u6c34\u5e73\u4e0e\u7b2c\u4e8c\u7c7b\u670d\u52a1\u6c34\u5e73\u7b49\u6307\u6807\u3002\u82e5\u5047\u8bbe\u6bcf\u4e2a\u63d0\u524d\u671f\u5185\u53ea\u6709\u4e00\u4e2a\u5728\u9014\u8ba2\u5355\uff1a</p>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_13","title":"\u7b2c\u4e00\u7c7b\u670d\u52a1\u6c34\u5e73","text":"<p>\u7b2c\u4e00\u7c7b\u670d\u52a1\u6c34\u5e73\u6307\u5728\u8ba2\u8d27\u63d0\u524d\u671f\u4e2d\u4e0d\u53d1\u751f\u7f3a\u8d27\u7684\u6982\u7387\uff0c\u7528\\(\\alpha\\)\u8868\u793a\u3002\u5219\u6709\\(\\alpha = F(R)\\)\u3002\u6c42\u89e3\u6ee1\u8db3\u7b2c\u4e00\u7c7b\u670d\u52a1\u6c34\u5e73\u6761\u4ef6\u7684\\((Q, R)\\)\u7cfb\u7edf\uff0c\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u6b65\u9aa4\u8fdb\u884c</p> <ol> <li>\u6c42\u89e3\u6ee1\u8db3\\(F(R) = \\alpha\\)\u7684\\(R\\)\u503c</li> <li>\\(Q\\)\u503c\u53d6EOQ\u6700\u4f18\u503c\\(\\sqrt{\\frac{2K\\lambda}{h}}\\)\u5373\u53ef</li> </ol>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#fill-rate","title":"\u7b2c\u4e8c\u7c7b\u670d\u52a1\u6c34\u5e73\uff1aFill rate","text":"<p>\u7b2c\u4e8c\u7c7b\u670d\u52a1\u6c34\u5e73\u6307\u6ee1\u8db3\u7684\u9700\u6c42\u5360\u603b\u9700\u6c42\u7684\u6bd4\u4f8b\u6bd4\u4f8b\uff0c\u7528\\(\\beta\\)\u8868\u793a\uff0c\u7531\u4e8e\\(n(R)\\)\u4e3a\u8ba2\u8d27\u63d0\u524d\u671f\u4e2d\u7684\u671f\u671b\u7f3a\u8d27\u91cf\uff0c\u5219\u6709\\(n(R)/Q = 1 - \\beta\\)\u3002\u6839\u636e\\(F(R) = 1 - \\frac{hQ}{\\lambda p}\\)\uff0c\u53ef\u5f97</p> \\[ p = \\frac{Qh}{\\lambda(1 - F(R))} \\] <p>\u5c06\u5176\u4ee3\u5165\\(Q = \\sqrt{\\frac{2\\lambda (K + pn(R))}{h}}\\)\uff0c\u6574\u7406\u5f97\u5230</p> \\[ hQ^2 - \\frac{2hn(R)}{1-F(R)}Q - 2K\\lambda = 0 \\] <p>\u89e3\u5f97</p> \\[ Q = \\frac{n(R)}{1 - F(R)} + \\sqrt{\\frac{2K\\lambda}{h} + \\left(\\frac{n(R)}{1-F(R)}\\right)^2} \\] <p>\u53c8\u6839\u636e\u7b2c\u4e8c\u7c7b\u670d\u52a1\u6c34\u5e73\uff0c\u6709</p> \\[n(R) = (1-\\beta)Q\\] <p>\u8054\u7acb\u5373\u5f97\uff0c\u4e5f\u53ef\u4f7f\u7528\u8fed\u4ee3\u65b9\u5f0f\u6c42\u89e3\u3002</p>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_14","title":"\u5e93\u5b58\u4f4d\u7f6e\u4e0e\u5e93\u5b58\u6c34\u5e73","text":"<p>\u5e93\u5b58\u4f4d\u7f6e\u4e0e\u5e93\u5b58\u6c34\u5e73\u7684\u5173\u7cfb\uff1a</p> \\[ \\mathrm{IL}(t+L) = \\mathrm{IP}(t) - D(t, t+L) \\] <p>\u5f0f\u4e2d\\(D(t, t+L)\\)\u4e3a\\([t, t+L]\\)\u65f6\u95f4\u5185\u7684\u9700\u6c42\u3002\u56e0\u6b64\uff0c\u82e5\u5df2\u77e5\\(\\mathrm{IP}(t), D(t, t+L)\\)\u7684\u5206\u5e03\uff0c\u53ef\u4ee5\u636e\u6b64\u8ba1\u7b97\\(\\mathrm{IL}(t+L)\\)\u7684\u5206\u5e03\u3002</p> <p>\u5bf9\u4e8e\u7a33\u6001\uff0c\u5728\u4efb\u610f\u65f6\u523b\\(t\\)\uff0c\u5e93\u5b58\u4f4d\u7f6e\\(\\mathrm{IP}(t), \\mathrm{IL}(t+L), D(t, t+L)\\)\u5206\u522b\u5bf9\u4e0d\u540c\u7684\\(t\\)\u72ec\u7acb\u540c\u5206\u5e03\u3002\u7531\u6b64\uff0c\u8f6c\u5316\u4e3a\u968f\u673a\u53d8\u91cf\\(\\mathrm{IP}, \\mathrm{IL}, D(L)\\)\u4e4b\u95f4\u7684\u5206\u5e03\u5173\u7cfb\u3002\u5df2\u77e5\\(\\mathrm{IP}\\)\u4e3a\u5747\u5300\u5206\u5e03\uff0c\u8bbe\\(D(L)\\)\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a\\(f(x;L)\\)\uff0c\u5219</p> \\[ \\begin{aligned}     F_{\\mathrm{IL}}(x) &amp;= P(\\mathrm{IL}\\leq x) \\\\     &amp;= \\int_{R}^{R+Q}P(\\mathrm{IP} = u)P(\\mathrm{IP} - \\mathrm{IL} \\geq u-x) \\mathrm du \\\\     &amp;= \\frac{1}{Q}\\int_{R}^{R+Q} P(D \\geq u-x) \\mathrm du \\\\     &amp;= \\frac{1}{Q}\\int_{R}^{R+Q} (1 - F(u-x;L)) \\mathrm du \\end{aligned} \\]"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_15","title":"\u6a21\u578b\u6269\u5c55","text":""},{"location":"math/operations-mamagement/inventory-control-random-demand/#_16","title":"\u6b63\u6001\u5206\u5e03\u9700\u6c42","text":"<p>\u5f53\u63d0\u524d\u671f\u5185\u9700\u6c42\\(D\\)\u670d\u4ece\u6b63\u6001\u5206\u5e03\\(N(\\mu, \\sigma)\\)\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u6b63\u6001\u5206\u5e03\u7684\u6807\u51c6\u635f\u5931\u51fd\u6570\\(L(z)\\)\u7b80\u5316\\(n(R)\\)\u7684\u8ba1\u7b97</p> \\[ n(R) = \\sigma L\\left(\\frac{R-\\mu}{\\sigma}\\right) = \\sigma L(z) \\] <p>\\(L(z)\\)\u53ef\u4ee5\u901a\u8fc7\\(\\phi(z), \\varPhi(z)\\)\u8ba1\u7b97\u5f97\u5230\uff1a</p> \\[ L(z) = \\phi(z) - z + z\\varPhi(z) \\] <p>\u5c06\\(D(L) \\sim N(\\mu, \\sigma)\\)\u4ee3\u5165\u5e93\u5b58\u6c34\u5e73\u7684\u5206\u5e03\uff0c\u5f97\u5230</p> \\[ F_{\\mathrm{IL}}(x) = \\frac{1}{Q}\\int_{R}^{R+Q} \\left[1 - \\varPhi\\left(\\frac{u-x-\\mu}{\\sigma}\\right)\\right] \\mathrm du \\] <p>\u7531\u6b64\u53ef\u5f97\uff0c\u5e93\u5b58\u6c34\u5e73\u7684\u6982\u7387\u5206\u5e03\\(f_{\\mathrm{IL}}(x)\\)\u4e3a</p> \\[ f_{\\mathrm{IL}}(x) = \\frac{1}{Q}\\left[\\varPhi\\left(\\frac{R+Q-x-\\mu}{\\sigma}\\right) - \\varPhi\\left(\\frac{R-x-\\mu}{\\sigma}\\right)\\right] \\]"},{"location":"math/operations-mamagement/inventory-control-random-demand/#lost-sales","title":"Lost-sales","text":"<p>\u4e0d\u5141\u8bb8\u7f3a\u8d27\uff0c\u5219\u5e93\u5b58\u6c34\u5e73\u4e0d\u4f4e\u4e8e0\uff0c\u6b64\u65f6\u5e73\u5747\u5e93\u5b58\u6210\u672c\u53d8\u4e3a</p> \\[ \\frac{Q}{2} + \\max(R-\\mu, 0) \\] <p>\u5176\u4f59\u6210\u672c\u4e0d\u53d8\u3002</p>"},{"location":"math/operations-mamagement/inventory-control-random-demand/#_17","title":"\u968f\u673a\u63d0\u524d\u671f","text":""},{"location":"math/operations-mamagement/inventory-control-random-demand/#one-for-one-policy","title":"One-for-one policy","text":"<p>\u5f53\u8ba2\u8d27\u6279\u91cf\\(Q = 1\\)\u65f6\uff0c\u79f0\u4e3aOne-for-one policy\uff0c\u901a\u5e38\u9002\u7528\u4e8e\u987e\u5ba2\u9700\u6c42\u7387\u8f83\u4f4e\u800c\u4ea7\u54c1\u4ef7\u503c\u8f83\u9ad8\uff0c\u5982\u6c7d\u8f66\u7b49\u5927\u5b97\u5546\u54c1\u3002\u8be5\u7b56\u7565\u4e00\u51fa\u73b0\u9700\u6c42\u5c31\u8ba2\u8d27\uff0c\u4ece\u800c\u4f7f\u5f97\u5e93\u5b58\u4f4d\u7f6e\u59cb\u7ec8\u5904\u4e8e\\(S = Q + R\\)\u3002\u4ee5\u4e0b\u8003\u8651\u9700\u6c42\u79bb\u6563\u7684\u60c5\u51b5\uff1a</p> <ol> <li>\u9700\u6c42\u670d\u4ece\u53c2\u6570\u4e3a\\(\\lambda\\)\u7684\u6cca\u677e\u5206\u5e03</li> <li>\u5141\u8bb8\u5ef6\u671f\u4ea4\u8d27</li> <li>\u5355\u4f4d\u65f6\u95f4\u7684\u5355\u4f4d\u6301\u6709\u6210\u672c\u4e0e\u5355\u4f4d\u7f3a\u8d27\u6210\u672c\u4e3a\\(h, p\\)</li> </ol> <p>\u5f53\u8ba2\u8d27\u63d0\u524d\u671f\u4e3a\u5e38\u6570\\(\\tau\\)\u65f6\uff0c\u5206\u6790\u6301\u6709\u6210\u672c\u4e0e\u7f3a\u8d27\u6210\u672c\u3002\u9996\u5148\u8003\u8651\u5e93\u5b58\u6c34\u5e73\u5904\u4e8e\u4e0d\u540c\u72b6\u6001\u7684\u6982\u7387\uff1a</p> \\[ P(\\mathrm{IL} = i) = P(D = S - i) = \\frac{e^{-\\lambda t}(\\lambda t)^{S-i}}{(S-i)!} \\] <p>\u5df2\u77e5\u5e93\u5b58\u6210\u672c\u4e3a\\(i\\)\uff0c\u5bf9\u5e94\u7684\u5b58\u8d27\u91cf\u4e3a\\(\\max\\{S - D, 0\\}\\)\uff0c\u7f3a\u8d27\u91cf\u4e3a\\(\\max\\{D-S, 0\\}\\)\uff0c\u56e0\u6b64\u5e93\u5b58\u6210\u672c\u4e0e\u7f3a\u8d27\u6210\u672c\u5206\u522b\u4e3a</p> \\[ \\begin{aligned}     c_h &amp;= h\\sum_{D=0}^S (S-D)\\frac{e^{-\\lambda t}(\\lambda t)^{D}}{D!} \\\\     c_u &amp;= p\\sum_{D=S}^\\infty (D-S)\\frac{e^{-\\lambda t}(\\lambda t)^{D}}{D!} \\end{aligned} \\] <p>\u5f53\u8ba2\u8d27\u63d0\u524d\u671f\u968f\u673a\uff0c\u4e0d\u540c\u8ba2\u5355\u7684\u63d0\u524d\u671f\u72ec\u7acb\u540c\u5206\u5e03\u65f6\uff0c\u4e3a\u7b80\u5316\u5904\u7406\uff0c\u8bbe\u63d0\u524d\u671f\u670d\u4ece\u5747\u503c\u4e3a\\(\\tau\\)\u7684\u6307\u6570\u5206\u5e03\uff0c\u5219\u7cfb\u7edf\u7684\u72b6\u6001\u8f6c\u79fb\u56fe\u4e3a</p> <p></p> <p>\u8be5\u7cfb\u7edf\u4e3a\u751f\u706d\u8fc7\u7a0b\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u72b6\u6001\\(i &lt; S\\)\uff0c\u6709</p> \\[ \\left(\\lambda + \\frac{S-i}{\\tau}\\right)P(\\mathrm{IL} = i) = \\lambda P(\\mathrm{IL} = i+1) + \\frac{S-i+1}{\\tau} P(\\mathrm{IL} = i-1) \\] <p>\u5f53\\(i = S\\)\u65f6\uff0c\\(\\lambda P(\\mathrm{IL}  = S) = \\frac{1}{\\tau}P(\\mathrm{IL} = S-1)\\)\u3002\u7531\u6b64\u53ef\u4ee5\u63a5\u7684</p> \\[ \\begin{aligned}     P(\\mathrm{IL} = S) &amp;= e^{-\\lambda\\tau} \\\\     P(\\mathrm{IL} = i) &amp;= \\frac{(\\lambda\\tau)^{S-i}}{(S-i)!}P(\\mathrm{IL} = S) \\\\     &amp;= \\frac{(\\lambda\\tau)^{S-i}e^{-\\lambda\\tau}}{(S-i)!} \\end{aligned} \\] <p>\u5f53\u4e0d\u5141\u8bb8\u5ef6\u671f\u4ea4\u8d27\u65f6\uff0c\\(\\mathrm{IL}\\geq 0\\)\uff0c\u60c5\u51b5\u4e0e\u5141\u8bb8\u5ef6\u671f\u4ea4\u8d27\u65f6\u53c8\u6709\u4e0d\u540c\uff0c\u4ece\u65e0\u9650\u72b6\u6001\u9a6c\u6c0f\u94fe\u8f6c\u6362\u4e3a\u6709\u9650\u72b6\u6001\u9a6c\u6c0f\u94fe\u3002</p>"},{"location":"math/queue-theory/","title":"\u5bf9\u7b56\u3001\u51b3\u7b56\u4e0e\u6392\u961f\u8bba","text":"<p>\u8bfe\u7a0b\u76ee\u5f55\uff1a</p> <ol> <li>Chapter 1\uff0c</li> <li>Chapter 2\uff0c</li> <li>Chapter 3\uff0c</li> <li>Chapter 4\uff0c</li> <li>Chapter 5\uff0c</li> <li>Chapter 6\uff0c</li> <li>Chapter 7\uff0c</li> <li>Chapter 8\uff0c</li> <li>Chapter 9\uff0c</li> <li>Chapter 10\uff0c</li> <li>Chapter 11\uff0c</li> <li>Chapter 12\uff0c\u5e38\u89c1\u7684\u6392\u961f\u6a21\u578b</li> </ol>"},{"location":"math/queue-theory/chapter-12/","title":"\u5e38\u89c1\u6392\u961f\u6a21\u578b","text":"<p>\u4e00\u4e2a\u6392\u961f\u6a21\u578b\u4e3b\u8981\u7531\u4ee5\u4e0b\u90e8\u5206\u7ec4\u6210</p> <ul> <li>\u987e\u5ba2\uff08\u5b9e\u4f53\uff09\u5904\u7406</li> <li>\u5b9e\u4f53\u6392\u961f\u7b49\u5f85\u5904\u7406\uff08\u7cfb\u7edf\u7684\u6392\u961f\u7b56\u7565\u53ef\u80fd\u4e0d\u540c\uff0c\u635f\u5931\u5236\u4e0d\u5141\u8bb8\u6392\u961f\u3001\u6df7\u5408\u5236\u5141\u8bb8\u6392\u6709\u9650\u957f\u5ea6\u7684\u961f\u5217\uff09</li> <li>\u5b9e\u4f53\u5904\u7406\u5b8c\u6bd5\uff0c\u79bb\u5f00\u7cfb\u7edf</li> </ul>"},{"location":"math/queue-theory/chapter-12/#_2","title":"\u6392\u961f\u6a21\u578b\u7684\u63cf\u8ff0","text":""},{"location":"math/queue-theory/chapter-12/#_3","title":"\u8fdb\u5165\u7cfb\u7edf","text":"<p>\u5047\u8bbe\u8fdb\u5165\u7cfb\u7edf\u7684\u5b9e\u4f53\u6570\u91cf\u65e0\u9650\u3002\u8003\u5bdf\u76f8\u90bb\u4e24\u4e2a\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\u7684\u65f6\u95f4\u5dee\uff1a</p> <ol> <li>\u5bf9\u4e8e\u5b9a\u957f\u5206\u5e03\uff0c\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\u7684\u65f6\u95f4\u5dee\u4e3a\u5e38\u91cf\\(t\\)\uff0c\\(t\\)\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a\uff1a</li> </ol> \\[ f(t; \\alpha)=\\left\\{ \\begin{aligned}     &amp; 1 &amp; t=\\alpha \\\\     &amp; 0 &amp; t\\not =\\alpha \\end{aligned} \\right . \\] <ol> <li>Poisson \u6d41\uff0c\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\u7684\u65f6\u95f4\u5dee\u72ec\u7acb\u540c\u5206\u5e03\uff0c\u670d\u4ece\u53c2\u6570\u4e3a\\(\\lambda\\)\u7684\u6307\u6570\u5206\u5e03</li> </ol> \\[ f_{\\xi_i}(t; \\lambda)=\\left\\{ \\begin{aligned}     &amp; \\lambda e^{-\\lambda t} &amp; t\\geq 0 \\\\     &amp; 0 &amp; t &lt; 0 \\end{aligned} \\right . \\] <ol> <li>Erlang \u5206\u5e03\uff0c\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\u7684\u65f6\u95f4\u5dee\u72ec\u7acb\u540c\u5206\u5e03\uff0c\u670d\u4ece\u5982\u4e0b\u516c\u5f0f\u6240\u793a\u7684\u5206\u5e03\u3002\u82e5\u67d0\u4e2a\u7cfb\u7edf\u4e2d\u6709\\(K\\)\u4e2a\u5e76\u8054\u7684\u670d\u52a1\u53f0\uff0c\u8f93\u5165\u5b9e\u4f53\u4e3a Poisson \u6d41\uff0c\u5219\u7b2c\\(K\\)\u4e2a\u670d\u52a1\u53f0\u7684\u987e\u5ba2\u6d41\u4e3a Erlang \u6d41\uff0c\u524d\u9762\u6240\u6709\\(K - 1\\)\u4e2a\u670d\u52a1\u53f0\u5728\u7b2c\u4e00\u4e2a\u5b9e\u4f53\u5230\u8fbe\u4ee5\u540e\u7684\u8f93\u5165\u6d41\u540c\u6837\u4e3a Erlang \u6d41\u3002</li> </ol> \\[ f(t; \\lambda, K)=\\left\\{ \\begin{aligned}     &amp; \\frac{\\lambda(\\lambda t)^{K-1}}{(K-1)!} &amp; t\\geq 0 \\\\     &amp; 0 &amp; t &lt; 0 \\end{aligned} \\right . \\]"},{"location":"math/queue-theory/chapter-12/#_4","title":"\u5b9e\u4f53\u6392\u961f\u4e0e\u5904\u7406","text":"<p>\u7cfb\u7edf\u4e2d\u53ef\u80fd\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u670d\u52a1\u53f0\u3002\u5728\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u670d\u52a1\u53f0\u90fd\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u65f6\uff0c\u65b0\u8fdb\u5165\u7684\u5b9e\u4f53\u65e0\u6cd5\u7acb\u5373\u8fdb\u884c\u5904\u7406\uff0c\u800c\u662f\u8fdb\u5165\u961f\u5217\u6216\u76f4\u63a5\u79bb\u5f00\uff0c\u53d6\u51b3\u4e8e\u7cfb\u7edf\u7684\u6392\u961f\u7b56\u7565\u3002\u6392\u961f\u7b56\u7565\u53ef\u4ee5\u5206\u4e3a\u635f\u5931\u5236\u3001\u7b49\u5f85\u5236\u4e0e\u6df7\u5408\u5236\u3002  </p> <p>\u5728\u635f\u5931\u5236\u7cfb\u7edf\u4e2d\uff0c\u5982\u679c\u65b0\u8fdb\u5165\u7684\u5b9e\u4f53\u4e0d\u80fd\u88ab\u7acb\u5373\u5904\u7406\uff0c\u5219\u4f1a\u79bb\u5f00\u7cfb\u7edf\u3002 \u5728\u7b49\u5f85\u5236\u7cfb\u7edf\u4e2d\uff0c\u5982\u679c\u65b0\u8fdb\u5165\u7684\u5b9e\u4f53\u4e0d\u80fd\u88ab\u7acb\u5373\u5904\u7406\uff0c\u5219\u4f1a\u5728\u961f\u5217\u4e2d\u7b49\u5f85\uff0c\u76f4\u5230\u88ab\u5904\u7406\u3002 \u5728\u6df7\u5408\u5236\u7cfb\u7edf\u4e2d\uff0c\u5982\u679c\u65b0\u8fdb\u5165\u7684\u5b9e\u4f53\u4e0d\u80fd\u88ab\u7acb\u5373\u5904\u7406\u4e14\u6b64\u65f6\u7684\u961f\u5217\u957f\u5ea6\u5927\u4e8e\u67d0\u4e00\u5e38\u6570\u503c\uff0c\u5219\u4f1a\u79bb\u5f00\u7cfb\u7edf\uff0c\u5426\u5219\u4f1a\u8fdb\u5165\u961f\u5217\u7b49\u5f85\u3002</p> <p>\u5b9e\u4f53\u5728\u6392\u961f\u8fc7\u7a0b\u4e2d\u7684\u884c\u4e3a\u53ef\u4ee5\u5206\u4e3a\u5982\u4e0b\u7c7b\u578b\uff1a</p> <ul> <li>\u79bb\u5f00\uff1a\u5f53\u5b9e\u4f53\u5f97\u77e5\u9700\u8981\u7b49\u5f85\u6216\u6ca1\u6709\u8010\u5fc3\u7ee7\u7eed\u7b49\u5f85\u65f6\uff0c\u5b9e\u4f53\u53ef\u80fd\u9000\u51fa\u961f\u5217</li> <li>\u53d8\u6362\uff1a\u5373\u5b9e\u4f53\u4e3a\u51cf\u5c11\u6392\u961f\u65f6\u95f4\u800c\u5728\u4e0d\u540c\u670d\u52a1\u53f0\u7684\u961f\u5217\u4e4b\u95f4\u79fb\u52a8</li> </ul> <p>\u670d\u52a1\u53f0\u4f1a\u6309\u7167\u5982\u4e0b\u53ef\u80fd\u7684\u65b9\u5f0f\u8fdb\u884c\u670d\u52a1\uff1a</p> <ul> <li>FCFS\uff1a\u5148\u8fdb\u5165\u961f\u5217\u7684\u5148\u8fdb\u884c\u5904\u7406</li> <li>LCFS\uff1a\u540e\u8fdb\u5165\u961f\u5217\u7684\u5148\u8fdb\u884c\u5904\u7406</li> <li>\u968f\u673a\u5904\u7406</li> <li>PS\uff1a\u4f18\u5148\u7ea7\u9ad8\u7684\u5b9e\u4f53\u5148\u8fdb\u884c\u5904\u7406</li> <li>\u65ad\u7eed\u5904\u7406\uff1a\u5728\u5904\u7406\u67d0\u4e2a\u5b9e\u4f53\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u8f6c\u800c\u5904\u7406\u53e6\u4e00\u4e2a\u5b9e\u4f53\uff0c\u4e0d\u65ad\u5faa\u73af\u76f4\u5230\u5b9e\u4f53\u5904\u7406\u5b8c\u6210</li> </ul> <p>\u5728\u7cfb\u7edf\u4e2d\u7684\u670d\u52a1\u53f0\u7684\u670d\u52a1\u65f6\u95f4\u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u6982\u7387\u5206\u5e03\u4e3a\u5e38\u6570\u3001\u6307\u6570\u5206\u5e03\u3001K\u7ea7 Erlang \u5206\u5e03\u3001\u4e00\u822c\u5206\u5e03\u7b49\u3002</p>"},{"location":"math/queue-theory/chapter-12/#_5","title":"\u7cfb\u7edf\u7684\u7b26\u53f7\u8868\u793a","text":"<p>Kendall\u8bb0\u53f7\uff0c\u683c\u5f0f\u4e3a\\(X/Y/Z/A/B/C\\)</p> <ul> <li>\\(X\\)\u8868\u793a\u5b9e\u4f53\u5230\u8fbe\u95f4\u9694\u65f6\u95f4\u7684\u5206\u5e03<ul> <li>\\(M\\)\u8868\u793a\u5230\u8fbe\u8fc7\u7a0b\u4e3a Poisson \u8fc7\u7a0b\uff08\u95f4\u9694\u65f6\u95f4\u670d\u4ece\u6307\u6570\u5206\u5e03\uff09\u6216\u8d1f\u6307\u6570\u5206\u5e03</li> <li>\\(D\\)\u8868\u793a\u95f4\u9694\u65f6\u95f4\u4e3a\u5e38\u6570</li> <li>\\(E_k\\)\u8868\u793a\u95f4\u9694\u65f6\u95f4\u670d\u4ece\\(k\\)\u9636 Erlang \u5206\u5e03</li> <li>\\(G\\)\u8868\u793a\u95f4\u9694\u65f6\u95f4\u670d\u4ece\u4e00\u822c\u3001\u76f8\u4e92\u72ec\u7acb\u7684\u968f\u673a\u5206\u5e03</li> </ul> </li> <li>\\(Y\\)\u8868\u793a\u670d\u52a1\u53f0\u5355\u6b21\u670d\u52a1\u65f6\u95f4\u7684\u5206\u5e03\uff0c\u8bb0\u53f7\u4e0e\\(X\\)\u7684\u542b\u4e49\u76f8\u540c</li> <li>\\(Z\\)\u8868\u793a\u670d\u52a1\u53f0\u4e2a\u6570</li> <li>\\(A\\)\u8868\u793a\u7cfb\u7edf\u7684\u7b49\u5f85\u7a7a\u95f4\u5bb9\u91cf\uff0c\\(0\\)\u4e3a\u635f\u5931\u5236\u7cfb\u7edf\uff0c\\(\\infty\\)\u4e3a\u7b49\u5f85\u5236\u7cfb\u7edf\uff0c\u5426\u5219\u4e3a\u6df7\u5408\u5236\u7cfb\u7edf\u3002</li> <li>\\(B\\)\u8868\u793a\u5b9e\u4f53\u7684\u603b\u6570\u91cf\uff0c\\(\\infty\\)\u8868\u793a\u5b9e\u4f53\u6e90\u65e0\u9650</li> <li>\\(C\\)\u8868\u793a\u670d\u52a1\u89c4\u5219</li> </ul> <p>\\(A, B, C\\)\u53c2\u6570\u53ef\u4ee5\u7701\u7565\u3002\u5206\u522b\u7b49\u4ef7\u4e8e\\(\\infty, \\infty, \\mathit{FCFS}\\)</p>"},{"location":"math/queue-theory/chapter-12/#_6","title":"\u7cfb\u7edf\u7684\u89c2\u6d4b\u6307\u6807","text":"<p>\u8861\u91cf\u7cfb\u7edf\u6027\u80fd\u7684\u5e38\u7528\u89c2\u6d4b\u6307\u6807\u4e3a\uff1a</p> <ul> <li>\\(N(L)\\)\uff1a\u7a33\u6001\u7cfb\u7edf\u7684\u961f\u957f\uff08\u6307\u7cfb\u7edf\u5185\u6240\u6709\u7684\u5b9e\u4f53\u6570\u91cf\uff09</li> <li>\\(N_q(L_q)\\)\u7a33\u6001\u7cfb\u7edf\u7684\u6392\u961f\u957f</li> <li>\\(T(W)\\)\uff1a\u987e\u5ba2\u5728\u7a33\u6001\u7cfb\u7edf\u4e2d\u7684\u505c\u7559\u65f6\u95f4\uff08\u5904\u7406+\u7b49\u5f85\uff09</li> <li>\\(T_q(W_q)\\)\uff1a\u987e\u5ba2\u5728\u7a33\u6001\u7cfb\u7edf\u4e2d\u7684\u7b49\u5f85\u65f6\u95f4</li> <li>\\(p_n\\)\uff1a\u7a33\u6001\u7cfb\u7edf\u4efb\u610f\u65f6\u523b\u72b6\u6001\u4e3a\\(n\\)\u7684\u6982\u7387\uff0c\\(p_n=P(N=n)=\\lim_{t\\rightarrow \\infty}P(N(t) = n)\\)</li> <li>\\(\\rho\\)\uff1a\u5229\u7528\u7387</li> <li>\\(p_D\\)\uff1a\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\u65f6\u9700\u8981\u7b49\u5f85\u7684\u6982\u7387</li> </ul> <p>\u82e5\u5c06\u7cfb\u7edf\u89c6\u4e3a\u7ba1\u9053\uff0c\u7cfb\u7edf\u4e2d\u5b9e\u4f53\u7684\u6570\u91cf\u7b49\u4e8e\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\u7684\u901f\u5ea6\u4e0e\u7cfb\u7edf\u5e73\u5747\u54cd\u5e94\uff08\u5904\u7406\uff09\u65f6\u95f4\u4e4b\u79ef\u3002</p> <p>\u5bf9\u4e8e\\(M/M/s\\)\u7cfb\u7edf\uff0c\u4ee4\\(\\lambda\\)\u4e3a\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\u7684\u901f\u5ea6\uff0c\\(\\mu\\)\u4e3a\u670d\u52a1\u53f0\u5904\u7406\u5b9e\u4f53\u7684\u901f\u5ea6\uff0c\\(s\\)\u4e3a\u670d\u52a1\u53f0\u7684\u6570\u91cf\uff0c\u5219\uff1a</p> \\[ \\begin{aligned} L &amp;= \\lambda_e W \\\\ L_q &amp;= \\lambda_e W_q \\end{aligned} \\]"},{"location":"math/queue-theory/chapter-12/#_7","title":"\u968f\u673a\u8fc7\u7a0b","text":"<p>\u5e38\u89c1\u7684\u968f\u673a\u8fc7\u7a0b\u6709 Markov \u8fc7\u7a0b\u3001\u751f\u706d\u8fc7\u7a0b\u3001 Poisson \u8fc7\u7a0b\u7b49\u3002\u6240\u6709\u7684 Poisson \u8fc7\u7a0b\u90fd\u662f\u751f\u706d\u8fc7\u7a0b\uff0c\u6240\u6709\u7684\u751f\u706d\u8fc7\u7a0b\u90fd\u662f Markov \u8fc7\u7a0b\u3002</p>"},{"location":"math/queue-theory/chapter-12/#markov","title":"Markov \u8fc7\u7a0b","text":"<p>\u7279\u70b9\uff1a\\(t_0\\)\u65f6\u523b\u7684\u72b6\u6001\u4e0e\u4efb\u610f\\(t&lt;t_0\\)\u65f6\u7684\u72b6\u6001\u65e0\u5173</p> <p>Markov \u94fe\u7531\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u4e2d\u7684\u79bb\u6563\u72b6\u6001\u7ec4\u5408\u3002\u5bf9\u4e8e Markov \u8fc7\u7a0b\uff0c\u7cfb\u7edf\u65e0\u8bb0\u5fc6\u6027\uff0c\u5f53\u524d\u7684\u72b6\u6001\u4e0d\u4f1a\u5bf9\u540e\u9762\u7684\u72b6\u6001\u4ea7\u751f\u5f71\u54cd\u3002</p> <p>\\(M/M/s\\)\u7cfb\u7edf\u53ef\u4ee5\u4f7f\u7528 Markov \u8fc7\u7a0b\u5efa\u6a21\u3002\u961f\u5217\u4e2d\u5b9e\u4f53\u7684\u6570\u91cf\u662f\u4e00\u4e2a Markov \u94fe\u3002</p>"},{"location":"math/queue-theory/chapter-12/#_8","title":"\u751f\u706d\u8fc7\u7a0b","text":"<p>\u751f\u706d\u8fc7\u7a0b\u6309\u5982\u4e0b\u56fe\u8fdb\u884c\u63cf\u8ff0\uff08\u72b6\u6001\u8f6c\u79fb\u56fe\uff09\uff1a</p> <p></p> <p>\u5047\u8bbe\u5b9e\u4f53\u79bb\u6563\u8fdb\u5165\u7684\\(M/M/s\\)\u7cfb\u7edf\uff0c\u961f\u5217\u4e2d\u7684\u5b9e\u4f53\u6570\u91cf\u670d\u4ece\u751f\u706d\u8fc7\u7a0b</p>"},{"location":"math/queue-theory/chapter-12/#poisson","title":"Poisson \u8fc7\u7a0b","text":"<p>\u5b9e\u4f53\u8fdb\u5165\u7684\u65f6\u95f4\u5dee\u76f8\u4e92\u72ec\u7acb\u4e14\u670d\u4ece\u540c\u4e00\u6307\u6570\u5206\u5e03\u7684\u8fc7\u7a0b</p>"},{"location":"math/queue-theory/chapter-12/#_9","title":"\u751f\u706d\u8fc7\u7a0b","text":"<p>\u5bf9\u4e8e\u751f\u706d\u8fc7\u7a0b\uff0c\u6709\u5982\u4e0b\u5047\u8bbe</p> <ul> <li>\u6bcf\u4e2a\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf</li> <li>\u5b9a\u4e49\u7cfb\u7edf\u7684\u72b6\u6001\u4e3a\u7cfb\u7edf\u4e2d\u7684\u5b9e\u4f53\u6570\u91cf\\(n\\)</li> <li>\u4e00\u4e2a\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\uff0c\u7cfb\u7edf\u7684\u72b6\u6001\u7531\\(n-1\\)\u8f6c\u53d8\u4e3a\\(n\\)</li> <li>\u4e00\u4e2a\u5b9e\u4f53\u79bb\u5f00\u7cfb\u7edf\uff0c\u7cfb\u7edf\u7684\u72b6\u6001\u7531\\(n\\)\u8f6c\u53d8\u4e3a\\(n+1\\)</li> <li>\u7cfb\u7edf\u5904\u4e8e\u72b6\u6001\\(n\\)\u65f6\uff0c\u5b9a\u4e49\u5b9e\u4f53\u8fdb\u5165\u7684\u901f\u5ea6\u4e3a\\(\\lambda _n\\)\uff0c\u7cfb\u7edf\u7684\u5904\u7406\u901f\u5ea6\u4e3a\\(\\mu_n\\)\u3002\u5bf9\u4e8e\\(\\lambda_n\\)\uff0c\\(n\\geq 0\\)\uff1b\u5bf9\u4e8e\\(\\mu_n\\)\uff0c\\(n&gt;0\\)</li> </ul> <p>\u95ee\u9898\uff1a\u7cfb\u7edf\u5904\u4e8e\u7a33\u5b9a\u72b6\u6001\u65f6\uff0c\u751f\u706d\u7cfb\u7edf\u5904\u4e8e\u72b6\u6001\\(n\\)\u7684\u6982\u7387\\(p_n\\)\uff1f</p> <p>\u5bf9\u4e8e\u5904\u4e8e\u72b6\u6001\\(j\\)\u7684\u7cfb\u7edf\uff0c\u8003\u5bdf\u4e00\u4e2a\u6781\u77ed\u7684\u65f6\u95f4\u95f4\u9694\\(\\Delta t\\)\uff0c\u7531\u4e8e\\(\\Delta t\\)\u6781\u77ed\uff0c\u53ef\u4ee5\u5ffd\u7565\\(\\Delta t\\)\u65f6\u95f4\u5185\u4e24\u4e2a\u5b9e\u4f53\u540c\u65f6\u8fdb\u5165/\u79bb\u5f00\u7cfb\u7edf\u6216\u4e00\u4e2a\u5b9e\u4f53\u8fdb\u5165\u3001\u4e00\u4e2a\u5b9e\u4f53\u79bb\u5f00\u7cfb\u7edf\u7684\u60c5\u51b5\u3002\\(\\Delta t\\)\u65f6\u95f4\u5185\u7cfb\u7edf\u53d1\u751f\u53d8\u5316\u7684\u6982\u7387\u5982\u4e0b\uff1a</p> <ul> <li>\u4e00\u4e2a\u5b9e\u4f53\u8fdb\u5165\u7cfb\u7edf\uff1a\\(P(n(t+\\Delta t)=j+1 | n(t) = j)=\\lambda_j\\Delta t\\)</li> <li>\u4e00\u4e2a\u5b9e\u4f53\u79bb\u5f00\u7cfb\u7edf\uff1a\\(P(n(t+\\Delta t)=j-1| n(t) = j) = \\mu_j\\Delta t\\)</li> <li>\u7cfb\u7edf\u5728\\(\\Delta t\\)\u65f6\u95f4\u5185\u6ca1\u6709\u53d1\u751f\u72b6\u6001\u6539\u53d8\uff1a\\(P(n(t+\\Delta t) = j | n(t)=j) = 1 - (\\lambda_j+\\mu_j)\\Delta t\\)</li> </ul> <p>\u6839\u636e\u5047\u8bbe\uff0c\u5904\u4e8e\u72b6\u6001\\(i\\)\u7684\u7cfb\u7edf\u5728\\(t+\\Delta t\\)\u65f6\u53ea\u53ef\u80fd\u5904\u4e8e\\(i-1, i, i+1\\)\u4e09\u79cd\u72b6\u6001\u4e2d\u7684\u4e00\u79cd\u3002\u4e5f\u5373\uff0c\u5904\u4e8e\u72b6\u6001\\(i\\)\u7684\u7cfb\u7edf\u5728\\(t-\\Delta t\\)\u65f6\u53ea\u53ef\u80fd\u5904\u4e8e\\(i-1, i, i+1\\)\u4e09\u79cd\u72b6\u6001\u4e2d\u7684\u4e00\u79cd\u3002\u7531\u6b64\uff0c\u53ef\u4ee5\u5217\u5f0f\u5982\u4e0b\uff1a</p> \\[ \\begin{aligned}   p_0(t+\\Delta t) &amp;= (1-\\lambda_0\\Delta t)p_0(t) + \\mu_1\\Delta tp_1(t) \\\\   p_j(t+\\Delta t) &amp;= \\lambda_{j-1}\\Delta tp_{j-1}(t)+(1-\\mu_j\\Delta t-\\lambda_j\\Delta t)p_j(t)+\\mu_{j+1}\\Delta tp_{j+1}(t) \\end{aligned} \\] <p>\u6574\u7406\u540e\u53d6\u6781\u9650\\(\\Delta t\\rightarrow 0\\)\uff0c\u4e0a\u5f0f\u53d8\u4e3a\u5bfc\u6570\u5f62\u5f0f\uff1a</p> \\[ \\begin{aligned}   &amp;\\lim_{\\Delta t\\rightarrow 0} \\frac{p_j(t+\\Delta t)-p_j(t)}{\\Delta t}=\\lambda_{j-1}p_{j-1}(t)+\\mu_{j+1}p_{j+1}(t) - (\\mu_j+\\lambda_j)p_j(t) \\\\   \\Rightarrow &amp;\\frac{\\mathrm dp_j(t)}{\\mathrm dt}=\\lambda_{j-1}p_{j-1}(t)+\\mu_{j+1}p_{j+1}(t) - (\\mu_j+\\lambda_j)p_j(t) \\end{aligned} \\] <p>\u5f53\\(t\\rightarrow \\infty\\)\u65f6\uff0c\u7cfb\u7edf\u8d8b\u4e8e\u7a33\u6001\uff0c\u5219\u6709\\(\\lim_{t\\rightarrow \\infty}p_j(t) = p_j\\)\uff0c\u6536\u655b\u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u4e3a\\(\\lim_{t\\rightarrow\\infty} \\frac{\\mathrm dp_j(t)}{\\mathrm dt}=0\\)\u3002\u5373\\(\\lambda_{j-1}p_{j-1}(t)+\\mu_{j+1}p_{j+1}(t) - (\\mu_j+\\lambda_j)p_j(t)=0\\)\u3002</p> <p>\u89e3\\(p_{j+1}\\)\uff0c\u89e3\u5f97\uff1a</p> \\[ p_{j+1} = \\left(\\frac{\\mu_j+\\lambda_j}{\\mu_{j+1}}\\right)p_j-\\frac{\\lambda_{j-1}}{\\mu_{j+1}}p_{j-1} \\] <p>\u5bf9\u4e8e\\(p_1\\)\uff0c\u6709\\(p_1=\\frac{\\lambda_0}{\\mu_1}p_0\\)\u3002</p> <p>\u6839\u636e\u9012\u63a8\u516c\u5f0f\uff0c\u53ef\u4ee5\u7528\\(p_0\\)\u8868\u793a\u51fa\\(p_j\\)\uff1a</p> \\[ \\begin{aligned}   p_2&amp;=\\left(\\frac{\\mu_1+\\lambda_1}{\\mu_2}\\right)p_1-\\frac{\\lambda _0}{\\mu_2}p_0 = \\frac{\\lambda_0(\\mu_1+\\lambda_1)}{\\mu_1\\mu_2}p_0-\\frac{\\lambda_0}{\\mu_2}p_0=\\frac{\\lambda_0\\lambda_1}{\\mu_1\\mu_2}p_0 \\\\   p_3&amp;=\\left(\\frac{\\mu_2+\\lambda_2}{\\mu_3}\\right)p_2-\\frac{\\lambda_1}{\\mu_3}p_1=\\frac{\\lambda_0\\lambda_1(\\mu_2+\\lambda_2)}{\\mu_1\\mu_2\\mu_3}p_0-\\frac{\\lambda_0\\lambda_1}{\\mu_1\\mu_3}p_0=\\frac{\\lambda_0\\lambda_1\\lambda_2}{\\mu_1\\mu_2\\mu_3}p_0 \\\\   &amp;\\vdots \\\\   &amp;p_j = \\frac{\\lambda_0\\lambda_1\\cdots\\lambda_{j-1}}{\\mu_1\\mu_2\\cdots\\mu_j}p_0=p_0\\prod_{i = 1}^{j}\\frac{\\lambda_{i-1}}{\\mu_i} \\end{aligned} \\] <p>\u7531\u4e8e\u7cfb\u7edf\u7684\u72b6\u6001\u53ea\u53ef\u80fd\u53d6\\(0\\sim\\infty\\)\u4e4b\u95f4\u7684\u6574\u6570\u503c\uff0c\u6982\u7387\u4e4b\u548c\u4e3a\\(1\\)\uff0c\u53ef\u4ee5\u8ba1\u7b97\u51fa\\(p_0\\)\uff1a</p> \\[ p_0=\\frac{1}{1+\\sum_{n=1}^\\infty \\prod_{i=0}^{n}\\frac{\\lambda_{i-1}}{\\mu_i}} \\]"},{"location":"math/queue-theory/chapter-12/#mm1","title":"M/M/1\u961f\u5217","text":"<p>\u5bf9\u4e8e\\(M/M/1\\)\u7cfb\u7edf\uff0c\\(\\lambda_0=\\lambda_1=\\cdots=\\lambda_n=\\lambda, \\mu_1=\\cdots=\\mu_n=\\mu\\)\u3002</p> <p>\u7531\u6b64\uff0c\u8ba1\u7b97\u51fa\\(M/M/1\\)\u7cfb\u7edf\u5728\u7a33\u6001\u65f6\u5904\u4e8e\\(p_0\\)\u7684\u6982\u7387\uff1a</p> \\[ p_0=\\frac{1}{1+\\sum_{n=1}^\\infty \\prod_{i=0}^{n}\\frac{\\lambda}{\\mu}} = \\frac{1}{1+\\sum_{n=1}^\\infty \\rho^n}=\\frac{1}{\\sum_{n=0}^\\infty \\rho^n}=1-\\rho \\] <p>\u6982\u7387\u5206\u5e03\u4e3a\uff1a\\(P(N=n)=\\rho^n(1-\\rho)\\)</p>"},{"location":"math/queue-theory/chapter-12/#mms","title":"M/M/s\u961f\u5217","text":"<p>\u5bf9\u4e8e\\(M/M/s\\)\u7cfb\u7edf\uff0c\\(\\lambda_i, \\mu_i\\)\u670d\u4ece\u5982\u4e0b\u89c4\u5f8b\uff1a</p> <ul> <li>\\(\\lambda_i = \\lambda \\qquad i=0, 1\\cdots, \\infty\\)</li> <li>\\(\\mu_i = \\max\\{i, s\\}\\mu \\qquad i=1, 2, \\cdots, \\infty\\)</li> </ul> <p>\u8ba1\u7b97\u51fa\\(M/M/s\\)\u7cfb\u7edf\u5728\u7a33\u6001\u65f6\u5904\u4e8e\\(p_0\\)\u7684\u6982\u7387\uff0c\u4ee4\\(\\rho_0=\\frac{\\lambda}{\\mu}\\)\uff1a</p> \\[ \\begin{aligned}   p_0&amp;=\\frac{1}{1+\\sum_{n=1}^\\infty \\prod_{i=0}^{n}\\frac{\\lambda}{\\max\\{i, s\\}\\mu}} \\\\   &amp;= \\frac{1}{\\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}+\\sum_{i=s}^\\infty \\frac{\\rho_0^i}{s!s^{i-s}}} \\\\   &amp;=\\frac{1}{\\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}+\\frac{\\rho_0^s}{s!}\\sum_{i=0}^\\infty \\frac{\\rho_0^i}{s^i}} \\\\   &amp;=\\frac{1}{\\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}} \\end{aligned} \\] <p>\u8bbe\\(\\sum_{i=0}^{s-1}\\frac{\\rho_0^i}{i!}=T\\)\uff0c\\(p_i\\)\u53ef\u4ee5\u901a\u8fc7\\(p_0\\)\u63a8\u5bfc\u5f97\uff1a</p> \\[ p_i=\\frac{\\lambda_0\\lambda_1\\cdots\\lambda_{i-1}}{\\mu_1\\mu_2\\cdots\\mu_i}p_0=\\left\\{ \\begin{aligned} &amp; \\frac{\\rho_0^i}{i!}p_0=\\frac{\\rho_0^i}{i!\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)} &amp; i\\leq s \\\\ &amp; \\frac{\\rho_0^i}{s!s^{i-s}}p_0=\\frac{\\rho_0^i}{s!s^{i-s}\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)} &amp; i &gt; s \\end{aligned} \\right. \\] <p>\u5f53\\(n \\geq s\\)\u65f6\uff0c\u987e\u5ba2\u5230\u8fbe\u7cfb\u7edf\u65f6\u9700\u8981\u7b49\u5f85\uff0c\u5219\u6709\uff1a</p> \\[ p_D=\\sum_{i=s}^\\infty p_i= \\sum_{i=s}^\\infty \\frac{\\rho^i_0}{s!s^{i-s}}p_0 = \\frac{\\rho^s_0p_0}{(s-1)!(s-\\rho_0)}=\\frac{\\rho^s_0}{(s-1)!(s-\\rho_0)T+\\rho_0^s} \\] <p>\u5f53\\(N\\leq s\\)\u65f6\uff0c\u7cfb\u7edf\u4e2d\u6ca1\u6709\u961f\u5217\uff0c\\(L_q=0\\)\uff0c\u5f53\\(N&gt;s\\)\u65f6\uff0c\u961f\u5217\u957f\u5ea6\u4e3a\\(N-s\\)\uff0c\u56e0\u6b64\u7a33\u6001\u65f6\u7684\u5e73\u5747\u6392\u961f\u957f\u4e3a\uff1a</p> \\[ \\begin{aligned}   L_q&amp;=\\sum_{i=s + 1}^\\infty (i - s)p_i \\\\   &amp;=\\sum_{i=s}^\\infty (i-s)\\frac{\\rho^i_0}{s!s^{i-s}}p_0 \\\\   &amp;= \\frac{\\rho^s_0p_0}{s!}\\sum_{i=0}^\\infty \\frac{i\\rho_0^i}{s^i} \\\\   &amp;= \\frac{\\rho^s_0p_0}{s!}\\sum_{i=1}^\\infty \\left(\\frac{\\rho_0}{s}\\right)^i\\frac{s}{s-\\rho_0} \\\\   &amp;= \\frac{\\rho^s_0p_0}{(s-1)!(s-\\rho)}\\frac{\\rho_0/s}{1-\\rho_0/s} \\\\   &amp;= \\frac{\\rho^{s+1}_0p_0}{(s-1)!(s-\\rho_0)^2} \\end{aligned} \\] <p>\u72b6\u6001\u4e3a\\(n\\)\u7684\u7a33\u6001\u65f6\u7cfb\u7edf\u63a5\u53d7\u670d\u52a1\u7684\u5b9e\u4f53\u6570\u91cf\u4e3a\uff1a</p> \\[ \\left\\{ \\begin{aligned} &amp;n &amp; n\\leq s \\\\ &amp;s &amp; n&gt; s \\end{aligned} \\right . \\] <p>\u56e0\u6b64\uff0c\u7a33\u6001\u7cfb\u7edf\u4e2d\u63a5\u53d7\u670d\u52a1\u7684\u5b9e\u4f53\u5e73\u5747\u6570\u91cf\u4e3a\uff1a</p> \\[ \\begin{aligned}   L-L_q&amp;=\\sum_{i=0}^s ip_i+\\sum_{i=s+1}^\\infty sp_i \\\\   &amp;=\\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}p_0+s\\sum_{i=s+1}^\\infty \\frac{\\rho_0^i}{s!s^{i-s}}p_0 \\\\   &amp;= \\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}p_0 + \\frac{\\rho_0^sp_0}{(s-1)!}\\sum_{i=1}^\\infty \\frac{\\rho_0^i}{s^i} \\\\   &amp;= \\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}p_0 + \\frac{\\rho_0^{s+1}p_0}{(s-1)!(s-\\rho_0)} \\\\   &amp;= \\frac{\\sum_{i=0}^s \\frac{\\rho_0^i}{(i-1)!}}{\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)} + \\frac{\\rho_0^{s+1}p_0}{(s-1)!(s-\\rho_0)} \\\\   &amp;= \\frac{\\rho_0 T+1}{T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}} + \\frac{\\rho_0^{s+1}}{(s-1)!(s-\\rho_0)T+\\rho_0^s} \\\\   &amp;= \\frac{(\\rho_0 T+1)(s-1)!(s-\\rho_0) + \\rho_0^{s+1}}{(s-1)!(s-\\rho_0)T+\\rho_0^s}\\\\   &amp;= \\rho_0 + \\frac{(s-1)!(s-\\rho_0)}{(s-1)!(s-\\rho_0)T+\\rho_0^s} \\end{aligned} \\] <p>\u987e\u5ba2\u7684\u5e73\u5747\u9017\u7559\u65f6\u95f4\\(W=\\frac{L}{\\lambda}\\)\uff1a</p> \\[ \\begin{aligned}   W&amp;=\\frac{L}{\\lambda} \\\\   &amp;= \\frac{\\sum_{i=0}^\\infty ip_i}{\\lambda} \\\\   &amp;= \\frac{\\sum_{i=1}^s \\left(\\frac{\\rho_0^i}{(i-1)!\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)}\\right) + \\sum_{i=s+1}^\\infty \\left(i\\frac{\\rho_0^i}{s!s^{i-s}\\left(T+\\frac{\\rho_0^s}{(s-1)!(s-\\rho_0)}\\right)}\\right) }{\\lambda} \\\\   &amp;= \\frac{\\frac{T(s-1)!(s-\\rho_0)}{T(s-1)!(s-\\rho_0) + \\rho_0^s} + \\frac{\\rho_0^{s+1}(s-\\rho_0+1)/(s-\\rho_0)}{T(s-1)!(s-\\rho_0) + \\rho_0^s}}{\\lambda} \\\\   &amp;= \\frac{T(s-1)!(s-\\rho_0) + \\rho_0^{s+1}(s-\\rho_0+1)/(s-\\rho_0)}{\\lambda(T(s-1)!(s-\\rho_0) + \\rho_0^s)} \\end{aligned} \\]"},{"location":"math/random-process/","title":"\u968f\u673a\u8fc7\u7a0b","text":"<ul> <li>\u9884\u5907\u77e5\u8bc6</li> <li>\u6cca\u677e\u8fc7\u7a0b</li> <li>\u8bb0\u53f7</li> </ul>"},{"location":"math/random-process/basics/","title":"\u9884\u5907\u77e5\u8bc6","text":""},{"location":"math/random-process/basics/#_2","title":"\u53ef\u6d4b\u7a7a\u95f4\u3001\u6982\u7387\u7a7a\u95f4\u4e0e\u6982\u7387\u6d4b\u5ea6","text":"<p>\\(\\renewcommand{\\geq}{\\geqslant}\\renewcommand{\\leq}{\\leqslant}\\) \u5f53\u4e00\u4e2a\u8bd5\u9a8c\u7684\u7ed3\u679c\u65e0\u6cd5\u9884\u5148\u786e\u5b9a\u65f6\uff0c\u79f0\u8be5\u5b9e\u9a8c\u4e3a\u968f\u673a\u8bd5\u9a8c\u3002\u968f\u673a\u8bd5\u9a8c\u53ef\u80fd\u51fa\u73b0\u7684\u6240\u6709\u7ed3\u679c\u96c6\u5408\u6784\u6210\u6837\u672c\u7a7a\u95f4\\(\\Omega\\)\uff0c\u6bcf\u4e2a\u53ef\u80fd\u7684\u7ed3\u679c\u79f0\u4e3a\u6837\u672c\u70b9\\(\\omega\\)\u3002\\(\\Omega\\)\u7684\u5b50\u96c6\u6784\u6210\u7684\u96c6\u5408\u79f0\u4e3a\u96c6\u7c7b\\(\\mathcal F\\)\u3002</p> <p>\u53ef\u6d4b\u7a7a\u95f4</p> <p>\u8bbe\\(\\mathcal F\\)\u4e3a\u7531\\(\\Omega\\)\u7684\u67d0\u4e9b\u5b50\u96c6\u6784\u6210\u7684\u975e\u7a7a\u96c6\u7c7b\uff0c\u82e5\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a</p> <ol> <li>\u82e5\\(A\\in \\mathcal F\\)\uff0c\u5219\\(A^C = \\Omega - A\\in \\mathcal F\\)\u3002</li> <li>\u82e5\\(A_n\\in \\mathcal F\\)\uff0c\u5219\\(\\bigcup\\limits_{n=1}^\\infty A_n \\in \\mathcal F\\)</li> </ol> <p>\u79f0\\(\\mathcal F\\)\u4e3a\\(\\sigma\\)\u57df\uff0c\\((\\Omega, \\mathcal F)\\)\u4e3a\u53ef\u6d4b\u7a7a\u95f4\u3002</p> <p>\\(\\sigma\\)\u57df\\(\\mathcal F\\)\u5bf9\\(\\cap, \\cup, -\\)\u8fd0\u7b97\u5c01\u95ed\uff0c\u4efb\u4f55\u5143\u7d20\u7ecf\u8fc7\u53ef\u5217\u6b21\u8fd0\u7b97\u540e\u4ecd\u5c5e\u4e8e\\(\\mathcal F\\)\u3002</p> <p>\u5bf9\u4e8e\u96c6\u7c7b\\(\\mathcal A\\)\uff0c\u5305\u542b\\(\\mathcal A\\)\u7684\\(\\sigma\\)\u57df\u7684\u4ea4\u79f0\u4e3a\\(\\mathcal A\\)\u751f\u6210\u7684\\(\\sigma\\)\u57df\uff0c\u8bb0\u4f5c\\(\\sigma(\\mathcal A)\\)\u3002\u5982\uff1a\\(\\sigma(\\{\\varnothing, A, \\Omega\\}) = \\{\\varnothing, A, A^C, \\Omega\\}\\)\u3002\u7279\u6b8a\u5730\uff0c\u8bb0\\(\\mathcal B = \\sigma(\\{(-\\infty, \\alpha], \\forall \\alpha \\in \\mathbb R\\})\\)\u4e3aBorel\u57df\u3002Borel\u57df\u89e3\u51b3\u4e86\u6837\u672c\u7a7a\u95f4\u5728\\(\\mathbb R\\)\u4e0a\u8fde\u7eed\u7684\u95ee\u9898\u3002\u53ef\u4ee5\u8bc1\u660e\uff0c\\(\\forall a &lt; b, [a, b]\\in \\mathcal B, (a, b]\\in \\mathcal B, [a, b)\\in \\mathcal B, (a, b)\\in \\mathcal B\\)\u3002\u5b9a\u4e49\\(\\mathcal B[a, b]\\)\u4e3a\u9650\u5236\u5728\\([a, b]\\)\u4e0a\u7684Borel\u57df\u3002</p> <p>\u6982\u7387\u6d4b\u5ea6\u4e0e\u6982\u7387\u7a7a\u95f4</p> <p>\u8bbe\\((\\Omega, \\mathcal F)\\)\u4e3a\u53ef\u6d4b\u7a7a\u95f4\uff0c\\(P: \\mathcal F\\rightarrow [0, 1]\\)\u4e3a\u5b9a\u4e49\u5728\\(\\mathcal F\\)\u4e0a\u7684\u96c6\u51fd\u6570\u3002\u4e14\\(P\\)\u6ee1\u8db3</p> <ol> <li>\u975e\u8d1f\u6027\uff1a\\(\\forall A\\in \\mathcal F, P(A)\\geq 0\\)</li> <li>\u89c4\u4e00\u6027\uff1a\\(P(\\Omega) = 1\\)</li> <li> <p>\u53ef\u5217\u53ef\u52a0\u6027\uff1a\u82e5\\(\\forall i\\in \\mathbb N, A_i\\in \\mathcal F\\)\uff0c\u4e14\\(\\forall i\\not = j, A_i\\cap A_j=\\varnothing\\)\uff0c\u5219</p> \\[ P\\left(\\bigcup_{n=0}^\\infty A_n\\right) = \\sum_{n=0}^\\infty P(A_n) \\] </li> </ol> <p>\u79f0\\(P\\)\u4e3a\u53ef\u6d4b\u7a7a\u95f4\\((\\Omega, \\mathcal F)\\)\u4e0a\u7684\u6982\u7387\u6d4b\u5ea6\uff0c\\((\\Omega, \\mathcal F, P)\\)\u4e3a\u6982\u7387\u7a7a\u95f4\u3002\\(\\mathcal F\\)\u4e3a\u4e8b\u4ef6\u57df\uff0c\\(A\\in \\mathcal F\\)\u4e3a\uff08\u968f\u673a\uff09\u4e8b\u4ef6</p> <p>\u6982\u7387\u6d4b\u5ea6\\(P\\)\u6ee1\u8db3\u5982\u4e0b\u6027\u8d28</p> <ol> <li>\u6709\u9650\u53ef\u52a0\u6027\uff1a\u53ef\u4ee5\u4ee4\\(A_{n+1} = A_{n+2} = \\cdots = \\varnothing\\)\uff0c\u7ed3\u5408\u53ef\u5217\u53ef\u52a0\u6027\u63a8\u51fa</li> <li>\\(P(A^C) = 1 - P(A)\\)<ul> <li>\\(P(\\varnothing) = 0\\)</li> </ul> </li> <li>\u96c6\u5408\u7684\u5305\u542b\u5173\u7cfb\uff1a\\(A\\subset B\\Rightarrow P(A)\\leq P(B)\\)</li> <li> <p>\u5bb9\u65a5\u539f\u7406\uff1a</p> \\[ P\\left(\\bigcup_{i=1}^n A_i\\right) = \\sum_{i=1}^n P(A_i) - \\sum_{1\\leq i &lt; j\\leq n}P(A_i\\cap A_j) + \\cdots + (-1)^{n+1}P(A_1\\cap \\cdots \\cap A_n) \\] <ul> <li>\\(P(A\\cup B) = P(A) + P(B) - P(A\\cap B)\\)</li> <li>\\(P(A - B) = P(A\\cup B) - P(B) = P(A) - P(A\\cap B)\\)</li> <li>\\(P\\left(\\bigcup_{i=1}^n A_i\\right)\\leq \\sum_{i=1}^n P(A_i)\\)</li> </ul> </li> </ol> <p>\u6ee1\u8db3\\(A_n\\subset A_{n+1}\\)\u7684\u4e8b\u4ef6\u5217\\(\\{A_n, n\\geq 1\\}\\)\u79f0\u4e3a\u5355\u8c03\u589e\u5e8f\u5217\uff0c\u6ee1\u8db3\\(A_n\\supset A_{n+1}\\)\u7684\u4e8b\u4ef6\u5217\\(\\{A_n, n\\geq 1\\}\\)\u79f0\u4e3a\u5355\u8c03\u51cf\u5e8f\u5217\u3002\u7531\u6b64\u53ef\u4ee5\u5b9a\u4e49\u4e8b\u4ef6\u5217\u7684\u6781\u9650\uff1a</p> <ol> <li>\u82e5\\(\\{A_n, n\\geq 1\\}\\)\u4e3a\u5355\u8c03\u589e\u5e8f\u5217\uff0c\u5219\\(\\lim\\limits_{n\\rightarrow \\infty}A_n = \\bigcup_{i=1}^\\infty A_i\\)</li> <li>\u82e5\\(\\{A_n, n\\geq 1\\}\\)\u4e3a\u5355\u8c03\u51cf\u5e8f\u5217\uff0c\u5219\\(\\lim\\limits_{n\\rightarrow \\infty}A_n = \\bigcap_{i=1}^\\infty A_i\\)</li> </ol> <p>\u4e8b\u4ef6\u5217\u7684\u6781\u9650\u6ee1\u8db3</p> \\[ \\lim_{n\\rightarrow\\infty}P(A_n) = P\\left(\\lim_{n\\rightarrow\\infty} A_n\\right) \\] <p>\u53ef\u4ee5\u8bc1\u660e\uff0c\u5355\u70b9\u96c6\\(\\{a\\}\\)\u4e3a\u4e8b\u4ef6\u5217\\(\\{[a, a+1/n], n &gt; 0\\}\\)\u7684\u6781\u9650\u3002</p> <p>Borel-Cantelli\u5f15\u7406</p> <p>\u8bbe\\(\\{A_n, n\\geq 1\\}\\)\u4e3a\u4e8b\u4ef6\u5e8f\u5217\uff0c\u6ee1\u8db3\\(\\sum_{i=1}^\\infty P(A_i) &lt; \\infty\\)\uff0c\u5219</p> \\[ P\\left(\\lim_{i\\rightarrow\\infty}\\sup A_i\\right) \\triangleq P\\left(\\bigcap_{n=1}^\\infty \\bigcup_{i=n}^\\infty A_i\\right) = 0 \\] <p>\u5b9a\u4e49\u6761\u4ef6\u6982\u7387</p> \\[ P(A|B) = \\frac{P(A\\cap B)}{P(B)} \\] <p>\u82e5\u4e8b\u4ef6\\(A, B\\)\u6ee1\u8db3\\(P(A\\cap B) = P(A)P(B)\\)\uff0c\u5219\u79f0\u4e8b\u4ef6\\(A, B\\)\u76f8\u4e92\u72ec\u7acb\uff0c\u4e14\\(P(A|B) = P(A)\\)\u3002\u540c\u7406\u53ef\u4ee5\u63a8\u5e7f\u81f3\\(n\\)\u4e2a\u4e8b\u4ef6\u76f8\u4e92\u72ec\u7acb\u7684\u60c5\u51b5\u3002\u8bbe\\(A_1, \\cdots, A_n\\in \\mathcal F\\)\uff0c\u82e5\u5bf9\u4e8e\u5176\u4e2d\u4efb\u610f\\(k\\)\u4e2a\u4e8b\u4ef6\uff0c\u90fd\u6709</p> \\[ P(A_{i_1}\\cap\\cdots\\cap A_{i_k}) = P(A_{i_1})\\cdots P(A_{i_k}) \\] <p>\u79f0\\(A_1, \\cdots, A_n\\)\u76f8\u4e92\u72ec\u7acb\u3002</p> <p>\u82e5\\(\\{A_n, n\\geq 1\\}\\)\u4e3a\u76f8\u4e92\u72ec\u7acb\u7684\u4e8b\u4ef6\u5e8f\u5217\uff0c\u4e14\\(\\sum_{n=1}^\\infty P(A_n) = \\infty\\)\uff0c\u5219</p> \\[ P\\left(\\lim_{i\\rightarrow\\infty}\\sup A_i\\right) \\triangleq P\\left(\\bigcap_{n=1}^\\infty \\bigcup_{i=n}^\\infty A_i\\right) = 1 \\]"},{"location":"math/random-process/basics/#_3","title":"\u968f\u673a\u53d8\u91cf\u4e0e\u5206\u5e03\u51fd\u6570","text":"<p>\u8bbe\u6837\u672c\u7a7a\u95f4\u4e3a\\(\\Omega\\)\u3002</p>"},{"location":"math/random-process/basics/#_4","title":"\u968f\u673a\u53d8\u91cf","text":"<p>\u8bbe\\((\\Omega, \\mathcal F, P)\\)\u4e3a\u6982\u7387\u7a7a\u95f4\uff0c\\(X(\\omega)\\)\u4e3a\u5b9a\u4e49\u5728\\(\\Omega\\)\u4e0a\u7684\u5355\u503c\u5b9e\u51fd\u6570\uff0c\u5373\\(X: \\Omega\\rightarrow \\mathbb R\\)\uff0c\u82e5\\(\\forall a\\in \\mathbb R\\)\uff0c\u6709\\(\\{\\omega:  X(\\omega) \\leq a\\}\\in \\mathcal F\\)\uff0c\u79f0\\(X(\\omega)\\)\u4e3a\u968f\u673a\u53d8\u91cf\uff0c\u7b80\u8bb0\u4e3a\\(X\\)\u3002\u5b9a\u4e49\\(F(x) = P(X\\leq x) = P(X\\in (-\\infty, X])\\)\u4e3a\\(X\\)\u7684\u5206\u5e03\u51fd\u6570\u3002</p> <ul> <li>\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\uff1a\u968f\u673a\u53d8\u91cf\\(X\\)\u7684\u53ef\u80fd\u53d6\u503c\u7684\u5168\u4f53\u662f\u53ef\u5217\u96c6\u6216\u8005\u6709\u9650\u96c6\u3002</li> <li> <p>\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\uff1a\u82e5\\(\\forall B\\in \\mathcal F\\)\uff0c\u5b58\u5728\u4e00\u4e2a\u51fd\u6570\\(f(x)\\)\u6ee1\u8db3</p> \\[ P(X\\in B) = \\int_B f(x)\\mathrm dx \\] <p>\u79f0\\(X\\)\u4e3a\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\uff0c\\(f(x)\\)\u4e3a\\(X\\)\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u3002</p> </li> </ul> <p>\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e0e\u6982\u7387\u5206\u5e03\u51fd\u6570</p> <p>\u6839\u636e\u6982\u7387\u5206\u5e03\u51fd\u6570\u7684\u5b9a\u4e49\uff0c\u6709</p> \\[ P(x &lt; X\\leq x + h) = F(x + h) - F(x) = \\int_{x}^{x + h} f(x)\\mathrm dx = f(x)h + o(h) \\] <p>\u4ee4\\(h\\rightarrow 0\\)\u5e76\u53d6\u6781\u9650\uff0c\u5f97\u5230</p> \\[ \\frac{\\mathrm dF(x)}{\\mathrm dx} = \\lim_{h\\rightarrow 0} \\frac{F(x + h) - F(x)}{h} = f(x) \\] <p>\u5bf9\u4e8e\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\\(X, Y\\)\uff0c\u5b9a\u4e49\u8054\u5408\u5206\u5e03\u51fd\u6570\u4e3a\\(F(x, y) = P(X\\leq x, Y\\leq y)\\)\uff0c\u8fb9\u7f18\u5206\u5e03\u4e3a\\(F_X(x) = P(X\\leq x), F_Y = P(Y\\leq y)\\)\u3002\u540c\u7406\u53ef\u4ee5\u5b9a\u4e49\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\\(f(x, y)\\)\uff1a</p> \\[ F(x, y) = \\int_{-\\infty}^x\\int_{-\\infty}^y f(v, u)\\mathrm du\\mathrm dv \\] <p>\u82e5\\(F(x, y) = F_X(x)F_Y(y)\\)\uff0c\u79f0\\(X\\)\u4e0e\\(Y\\)\u76f8\u4e92\u72ec\u7acb\u3002</p>"},{"location":"math/random-process/basics/#_5","title":"\u6570\u5b57\u7279\u5f81","text":"<p>\u8bbe\\(X\\)\u4e3a\u968f\u673a\u53d8\u91cf\uff0c\u5206\u5e03\u51fd\u6570\u4e3a\\(F(x)\\)\uff0c\u82e5\\(\\int_{-\\infty}^\\infty |x|\\mathrm dF(x)\\)\u5b58\u5728\uff0c\u5219\u5b9a\u4e49\\(X\\)\u7684\u671f\u671b\\(E(X)\\)\u4e3a</p> \\[ E(X) = \\int_{-\\infty}^\\infty x\\mathrm dF(x) \\] <p>\u6570\u5b66\u671f\u671b\\(E(X)\\)\u6ee1\u8db3</p> <ul> <li> <p>\u53ef\u52a0\u6027</p> \\[ E\\left(\\sum_{i=1}^n c_iX_i\\right) = \\sum_{i=1}^n c_iE(X_i) \\] </li> <li> <p>\u51fd\u6570</p> \\[ E(g(x)) = \\int_{-\\infty}^\\infty g(x)\\mathrm dF(x) \\] </li> </ul> <p>\u5bf9\u4e8e\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\uff0c\u6709</p> \\[ E(X) = \\sum_{i=1}^\\infty x_nP(X = x_n) \\] <p>\u5bf9\u4e8e\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\uff0c\u6709</p> \\[ E(X) = \\int_{-\\infty}^\\infty xf(x)\\mathrm dx \\] <p>\u82e5\u968f\u673a\u53d8\u91cf\\(X, Y\\)\u76f8\u4e92\u72ec\u7acb\uff0c\u5219\u6709</p> \\[ \\begin{aligned}     E(XY) &amp;= \\int_{-\\infty}^\\infty \\int_{-\\infty}^\\infty xyf(x, y)\\mathrm dx\\mathrm dy \\\\     &amp;= \\int_{-\\infty}^\\infty \\int_{-\\infty}^\\infty xyf_X(x)f_Y(y)\\mathrm dx\\mathrm dy \\\\     &amp;= \\int_{-\\infty}^\\infty xf_X(x)\\mathrm dx\\int_{-\\infty}^\\infty yf_Y(y)\\mathrm dy \\\\     &amp;= E(X)E(Y) \\end{aligned} \\] <p>\u5b9a\u4e49\u968f\u673a\u53d8\u91cf\\(X\\)\u7684\u65b9\u5dee\u4e3a\\(\\sigma_X^2 = D(X) = E(X - E(X)) = E(X^2) - E^2(X)\\)\uff0c\u5b9a\u4e49\u968f\u673a\u53d8\u91cf\\(X, Y\\)\u7684\u534f\u65b9\u5dee\u4e3a\\(\\mathrm{cov}(X, Y) = E(XY) - E(X)E(Y)\\)\uff0c\u76f8\u5173\u7cfb\u6570\u4e3a\\(\\rho = \\mathrm{cov}(X, Y) / (\\sigma_X\\sigma_Y)\\)\uff0c\\(k\\)\u9636\u77e9\u4e3a\\(E(X^k)\\)</p> <p>\u5b9a\u4e49\u968f\u673a\u53d8\u91cf\\(X\\)\u7684\u77e9\u6bcd\u51fd\u6570\u4e3a\\(\\psi(t) = E\\left(e^{tX}\\right)\\)\uff0c\u7279\u5f81\u51fd\u6570\u4e3a\\(\\phi(t) = E\\left(e^{\\mathbf itX}\\right)\\)</p> <p>\u77e9\u6bcd\u51fd\u6570\u6ee1\u8db3\u5982\u4e0b\u6027\u8d28</p> <ol> <li>\\(E\\left(X^k\\right) = \\psi^{(k)}(0)\\)</li> <li>\u8bbe\u968f\u673a\u53d8\u91cf\\(X, Y\\)\u7684\u5206\u5e03\u51fd\u6570\u4e3a\\(F_X(t), F_Y(t)\\)\uff0c\u77e9\u6bcd\u51fd\u6570\u4e3a\\(\\psi_X(t), \\psi_Y(t)\\)\uff0c\u5219\\(\\psi_X(t) = \\psi_Y(t) \\Leftrightarrow F_X(t) = F_Y(t)\\)</li> </ol> <p>\u7279\u5f81\u51fd\u6570\u6ee1\u8db3\u5982\u4e0b\u6027\u8d28</p> <ol> <li>\u8bbe\u968f\u673a\u53d8\u91cf\\(X, Y\\)\u7684\u5206\u5e03\u51fd\u6570\u4e3a\\(F_X(t), F_Y(t)\\)\uff0c\u7279\u5f81\u51fd\u6570\u4e3a\\(\\phi_X(t), \\phi_Y(t)\\)\uff0c\u5219\\(\\phi_X(t) = \\phi_Y(t) \\Leftrightarrow F_X(t) = F_Y(t)\\)</li> <li>\\(i^kE(X^k) = \\phi^{(k)}(0)\\)</li> <li>\u82e5\\(X, Y\\)\u76f8\u4e92\u72ec\u7acb\uff0c\u6709\\(\\phi_{X+Y}(t) = \\phi_{X}(t) + \\phi_{Y}(t)\\)</li> </ol>"},{"location":"math/random-process/basics/#_6","title":"\u5e38\u89c1\u968f\u673a\u53d8\u91cf\u7684\u5206\u5e03","text":"<ol> <li> <p>\u4e8c\u9879\u5206\u5e03\uff1a\\(X\\sim B(n, p)\\)</p> \\[ P(X = k) = \\binom{n}{k} p^k(1 - p)^{n - k} \\] </li> <li> <p>\u6cca\u677e\u5206\u5e03\uff1a\\(X\\sim P(\\lambda)\\)</p> \\[ P(X = k) = \\frac{\\lambda^k}{k!}e^{-\\lambda} \\] </li> <li> <p>\u51e0\u4f55\u5206\u5e03\uff1a\\(X\\sim G(p)\\)</p> \\[ P(X = k) = (1 - p)^{k - 1}p \\] </li> <li> <p>\u5747\u5300\u5206\u5e03\uff1a\\(X\\sim U(a, b)\\)</p> \\[ f(x) = \\left\\{\\begin{aligned}     &amp; \\frac{1}{b-a} &amp; a &lt; x &lt; b \\\\     &amp; 0 &amp; \\text{otherwise} \\end{aligned}\\right. \\] </li> <li> <p>\u6b63\u6001\u5206\u5e03\uff1a\\(X\\sim N(\\mu, \\sigma^2)\\)</p> \\[ f(x) = \\frac{1}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}} \\] </li> <li> <p>\u6307\u6570\u5206\u5e03\uff1a\\(X\\sim E(\\lambda)\\)</p> \\[ f(x) = \\left\\{\\begin{aligned}     &amp; \\lambda e^{-\\lambda x} &amp; x\\geq 0 \\\\     &amp; 0 &amp; x &lt; 0 \\end{aligned}\\right. \\] </li> </ol>"},{"location":"math/random-process/basics/#_7","title":"\u6761\u4ef6\u6570\u5b66\u671f\u671b","text":"<p>\u5bf9\u4e8e\u8fde\u7eed\u968f\u673a\u53d8\u91cf\uff0c\u6761\u4ef6\u6570\u5b66\u671f\u671b\\(E(X|Y = y)\\)\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> \\[ E(X|Y = y) = \\int_{-\\infty}^\\infty x\\frac{f(x, y)}{f_Y(y)}\\mathrm dx \\] <p>\u5b9a\u4e49\\(E(X|Y)\\)\u4e3a\\(X\\)\u5173\u4e8e\\(Y\\)\u7684\u6761\u4ef6\u6570\u5b66\u671f\u671b</p> \\[ E(X|Y) = \\sum_j \\boldsymbol 1_{\\{Y = y_j\\}}(\\omega)E(X|Y=y_j) \\] <p>\u5bf9\u4e8e\u79bb\u6563\u968f\u673a\u53d8\u91cf\uff0c\u6761\u4ef6\u6570\u5b66\u671f\u671b\\(E(X|Y = y)\\)\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> \\[ E(X|Y = y) = \\sum_i x_iP(X=x_i | Y=y) \\] <p>\u663e\u7136\uff0c\\(E(X|Y = y)\\)\u662f\\(y\\)\u7684\u51fd\u6570\uff0c\u5b9a\u4e49\u968f\u673a\u53d8\u91cf\\(E(X|Y)\\)\u4e3a\\(X\\)\u5173\u4e8e\\(Y\\)\u7684\u6761\u4ef6\u671f\u671b\uff0c\u82e5\\(E(X|Y)\\)\u6ee1\u8db3</p> <ol> <li>\\(E(X|Y)\\)\u662f\\(Y\\)\u7684\u51fd\u6570\uff0c\u5f53\\(Y = y\\)\u65f6\uff0c\\(E(X|Y) = E(X|Y = y)\\)</li> <li> <p>\\(\\forall D\\in \\mathcal B\\)\uff0c\u6709</p> \\[ E[E(X|Y)|Y\\in D] = E(X|Y\\in D) \\] </li> </ol> <p>\u6761\u4ef6\u6570\u5b66\u671f\u671b\u7684\u6027\u8d28</p> <p>\u6761\u4ef6\u6570\u5b66\u671f\u671b\u6ee1\u8db3\u5982\u4e0b\u6027\u8d28\uff1a</p> <ol> <li>\\(E(E(X|Y)) = EX\\)</li> <li>\u82e5\\(X, Y\\)\u76f8\u4e92\u72ec\u7acb\uff0c\u5219\\(E(X|Y) = EX\\)</li> <li>\\(E[g(X)h(Y)|Y] = h(Y)E(g(X)|Y)\\quad \\text{a.s.}\\)</li> </ol>"},{"location":"math/random-process/basics/#_8","title":"\u968f\u673a\u8fc7\u7a0b","text":"<p>\u968f\u673a\u8fc7\u7a0b\u662f\u4e00\u65cf\u65e0\u7a77\u591a\u4e2a\uff0c\u76f8\u4e92\u6709\u5173\u7684\u968f\u673a\u53d8\u91cf\u3002\u8bbe\\(X(t, \\omega)\\)\u4e3a\u968f\u673a\u53d8\u91cf\uff0c\u5176\u4e2d\\(t\\in T\\subset \\mathbb R\\)\u4e3a\u53c2\u6570\u3002\u79f0\\(X_T = \\{X(t, \\omega), t\\in T\\}\\)\u4e3a\u968f\u673a\u8fc7\u7a0b\u3002</p> <ol> <li>\\(X(t, \\omega)\\)\u53ef\u4ee5\u7b80\u8bb0\u4e3a\\(X(t)\\)\uff1b</li> <li>\u5f53\\(T\\)\u4e3a\u53ef\u5217\u96c6\u65f6\uff0c\u79f0\\(X_T\\)\u4e3a\u968f\u673a\u5e8f\u5217\uff1b</li> <li>\\(X_T\\)\u7684\u53d6\u503c\u8303\u56f4\u79f0\u4e3a\u72b6\u6001\u7a7a\u95f4\\(S\\)\uff1b</li> <li>\\(X(\\cdot, \\omega), \\omega\\in \\Omega\\)\u662f\u5173\u4e8e\\(t\\)\u7684\u51fd\u6570\uff0c\u79f0\u4e3a\u8f68\u9053\u3002</li> </ol>"},{"location":"math/random-process/notations/","title":"\u8bb0\u53f7","text":"<p>\u968f\u673a\u8fc7\u7a0b\u4e2d\u5e38\u7528\u7684\u8bb0\u53f7\u8868\u793a</p>"},{"location":"math/random-process/notations/#_2","title":"\u9884\u5907\u77e5\u8bc6","text":"<p>\u53ef\u5217\u96c6</p> <p>\u82e5\u4e00\u4e2a\u96c6\u5408\\(A\\)\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u4ee5\u5e8f\u5217\\(\\{a_n\\}\\)\u7684\u5f62\u5f0f\u8868\u793a\uff0c\u5373\u5b58\u5728\u4e00\u4e2a\\(\\mathbb N_+\\rightarrow A\\)\u7684\u53cc\u5c04\uff0c\u79f0\u96c6\u5408\\(A\\)\u4e3a\u53ef\u5217\u96c6\u3002</p> <p>\u51e0\u4e4e\u5904\u5904</p> <p>\u8bbe\\(Z_1, Z_2\\)\u4e3a\u968f\u673a\u53d8\u91cf\uff0c\u4e14\\(P(Z_1 = Z_2) = 1\\)\uff0c\u79f0\\(Z_1, Z_2\\)\u51e0\u4e4e\u5904\u5904\u76f8\u7b49\uff0c\u8bb0\u4f5c\\(Z_1 = Z_2\\quad \\text{a.s.}\\)</p>"},{"location":"math/random-process/notations/#_3","title":"\u6cca\u677e\u8fc7\u7a0b","text":"<p>\u8ba1\u6570\u8fc7\u7a0b</p> <p>\u82e5\u968f\u673a\u8fc7\u7a0b\\(\\{N(t), t\\geq 0\\}\\)\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff0c\u79f0\\(N(t)\\)\u4e3a\u8ba1\u6570\u8fc7\u7a0b\u3002</p> <ol> <li>\\(N(t)\\in \\mathbb N\\)\uff0c\u5373\\(N(t)\\)\u53d6\u503c\u4e3a\u975e\u8d1f\u6574\u6570</li> <li>\\(\\forall t &gt; s, N(t)\\geq N(s)\\)</li> </ol>"},{"location":"math/random-process/poisson/","title":"\u6cca\u677e\u8fc7\u7a0b","text":"<p>\\(\\renewcommand{\\geq}{\\geqslant}\\renewcommand{\\leq}{\\leqslant}\\) \u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\u7684\u968f\u673a\u8fc7\u7a0b\\(\\{N(t), t\\geq 0\\}\\)\u4e3a\u65f6\u9f50\u6cca\u677e\u8fc7\u7a0b\u3002</p> <ol> <li>\\(\\{N(t), t\\geq 0\\}\\)\u4e3a\u8ba1\u6570\u8fc7\u7a0b\uff0c\u4e14\\(N(0) = 0\\)\uff1b</li> <li>\\(\\{N(t), t\\geq 0\\}\\)\u4e3a\u72ec\u7acb\u589e\u91cf\u8fc7\u7a0b\uff1b</li> <li>\\(\\{N(t), t\\geq 0\\}\\)\u5177\u5907\u589e\u91cf\u5e73\u7a33\u6027\uff0c\u5373\\(N(t) - N(s)\\)\u7684\u5206\u5e03\u4ec5\u4e0e\\(t - s\\)\u6709\u5173</li> <li> <p>\u5bf9\u4e8e\u5145\u5206\u5c0f\u7684\\(\\Delta t &gt; 0\\)\uff0c\u6709</p> \\[ \\left\\{ \\begin{aligned}     P(N(t + \\Delta t) - N(t) = 1) &amp;= \\lambda \\Delta t + o(\\Delta t) \\\\     P(N(t + \\Delta t) - N(t) \\geq 2) &amp;= o(\\Delta t) \\end{aligned} \\right. \\] </li> </ol>"},{"location":"math/random-process/poisson/#_2","title":"\u589e\u91cf\u7684\u6982\u7387\u5206\u5e03","text":"<p>\u6cca\u677e\u8fc7\u7a0b\u7684\u589e\u91cf\\(N(t + s) - N(s)\\)\u670d\u4ece\u53c2\u6570\u4e3a\\(\\lambda t\\)\u7684\u6cca\u677e\u5206\u5e03\uff0c\u5373</p> \\[ P[N(t + s) - N(s) = k] = \\frac{(\\lambda t)^k}{k!}e^{-\\lambda t} \\] \u8bc1\u660e <p>\u6839\u636e\u6cca\u677e\u8fc7\u7a0b\u7684\u589e\u91cf\u5e73\u7a33\u6027\uff0c\u6709</p> \\[ P(N(s + t) - N(s) = n) = P(N(t) = n) \\] <ol> <li> <p>\\(n = 0\\)\u65f6\uff0c\u6709\\(\\{N(h + t) = 0, h &gt; 0\\} = \\{N(h+ t) - N(t) = 0, N(t) = 0, h &gt; 0\\}\\)\uff0c\u6839\u636e\u589e\u91cf\u72ec\u7acb\u6027\uff0c\u6709</p> \\[ \\begin{aligned}     P(N(h + t) = 0) &amp;= P(N(h + t) - N(t) = 0) P(N(t) = 0) \\\\     &amp;= P(N(h) = 0) P(N(t) = 0) \\end{aligned} \\] <p>\u6839\u636e\u6cca\u677e\u8fc7\u7a0b\u7684\u6027\u8d28\\(P(N(t + \\Delta t) - N(t) = 1) = \\lambda \\Delta t + o(\\Delta t)\\)\uff0c\u6709\uff1a</p> \\[ \\begin{aligned}     \\lim_{h\\rightarrow 0} \\frac{P(t + h) - P(t)}{h} &amp;= \\lim_{h\\rightarrow 0} \\frac{P(t)(1 - \\lambda h - o(h)) - P(t)}{h} \\\\     &amp;= -\\lambda P(t) - \\lim_{h\\rightarrow 0} \\frac{o(h)}{h} \\\\     &amp;= -\\lambda P(t) \\end{aligned} \\] <p>\u89e3\u5fae\u5206\u65b9\u7a0b\\(P_0'(t) = -\\lambda P_0(t)\\)\uff0c\u89e3\u5f97\\(P_0(t) = e^{-\\lambda t + C}\\)\uff0c\u53c8\u56e0\u4e3a\\(N(0) = 0, P_0(N(0) = 0) = 1\\)\uff0c\u5f97\\(C = 0\\)\uff0c\u4ece\u800c\u6709</p> \\[ P_0(t) = e^{-\\lambda t} \\] </li> <li> <p>\\(n &gt; 0\\)\u65f6\uff0c\\(\\{N(t + h) = n\\} = \\bigcup_{k = 0} ^ n \\{N(t) = k, N(t + h) - N(t) = (n - k)\\}\\)\uff0c\u800c\\(n - k \\geq 2\\)\u65f6\uff0c\u6709\\(P(N(t + h) - N(t) = n - k) = o(h)\\)\uff0c\u7531\u589e\u91cf\u72ec\u7acb\u6027</p> \\[ \\begin{aligned}     P(N(t + h) = n) &amp;= \\sum_{k = 0} ^ n P(N(t) = k) P(N(t + h) - N(t) = n - k) \\\\     &amp;= P(N(t) = n)(1 - \\lambda t - o(h)) + P(N(t) = n - 1)(\\lambda t + o(h)) \\\\     &amp;+ \\sum_{k = 2}^n P(N(t) = n - k)o(h) \\end{aligned} \\] <p>\u7531\u6b64</p> \\[ \\begin{aligned}     &amp;\\lim_{h\\rightarrow 0} \\frac{P(N(t + h) = n) - P(N(t) = n)}{h} \\\\     =&amp; \\lim_{h\\rightarrow 0}\\frac{P(N(t) = n)(\\sum_{k = 2}^n P(N(t) = n - k)o(h) - P(N(t) = n)}{h} \\\\     +&amp; \\lim_{h\\rightarrow 0}\\frac{\\sum_{k = 2}^n P(N(t) = n - k)o(h) - P(N(t) = n)}{h} \\\\     =&amp; \\lim_{h\\rightarrow 0}\\frac{P(N(t) = n)(- \\lambda t) + P(N(t) = n - 1)(\\lambda t)}{h} \\\\ \\end{aligned} \\] <p>\u5f97\u5230</p> \\[ P_n'(t) = -\\lambda P_n(t) + \\lambda P_{n-1}(t) \\] <p>\u8003\u8651\u7ea6\u675f\u6761\u4ef6\\(P_n(0) = 0\\)\uff0c\u89e3\u5f97</p> \\[ \\frac{\\mathrm d}{\\mathrm dt}[e^{\\lambda t} P_n(t)] = \\lambda e^{\\lambda t}P_{n - 1}(t) \\] <ol> <li>\\(n = 0\\)\u65f6\uff0c\u6709\\(P_n(t) = e^{-\\lambda t} = \\frac{(\\lambda t)^0}{0!}e^{-\\lambda t}\\)</li> <li> <p>\u8bbe\u5bf9\u4e8e\\(n &lt; k\\)\u65f6\u547d\u9898\u6210\u7acb\uff0c\u53ea\u9700\u8bc1\u660e\\(n = k\\)\u65f6\u547d\u9898\u6210\u7acb\u5373\u53ef\uff0c\u6709</p> \\[ \\begin{aligned}     P_k(t) &amp;= e^{-\\lambda t}\\int \\frac{\\mathrm d}{\\mathrm dt}[e^{\\lambda t} P_k(t)] \\mathrm dt \\\\     &amp;= e^{-\\lambda t}\\int \\lambda e^{\\lambda t}P_{k - 1}(t) \\mathrm dt \\\\     &amp;= e^{-\\lambda t}\\int \\lambda \\frac{(\\lambda t)^{k-1}}{(k-1)!} \\mathrm dt \\\\     &amp;= \\frac{(\\lambda t)^k}{k!}e^{-\\lambda t} \\end{aligned} \\] </li> </ol> </li> </ol>"},{"location":"math/random-process/poisson/#_3","title":"\u76f8\u90bb\u4e8b\u4ef6\u65f6\u95f4\u95f4\u9694\u7684\u6982\u7387\u5206\u5e03","text":"<p>\u8bbe\\(\\{N(t), t \\geq 0\\}\\)\u4e3a\u8ba1\u6570\u8fc7\u7a0b\uff0c\u8bbe\\(S_n\\)\u8868\u793a\u7b2c\\(n\\)\u4e2a\u65f6\u95f4\u53d1\u751f\u7684\u65f6\u523b\uff0c\u5373\\(S_n = \\inf\\{t, t &gt; S_{n - 1}, N(t) = n\\}\\)\uff0c\u7279\u522b\u5730\uff0c\u4ee4\\(S_0 = 0\\)\u3002\\(S_n, N(t)\\)\u7684\u4e8b\u4ef6\u6ee1\u8db3</p> \\[ \\begin{aligned}     \\{S_n \\leq t\\} &amp;\\equiv \\{N(t) \\geq n\\} \\\\     \\{N(t) = n\\} &amp;\\equiv \\{S_n\\leq t &lt; S_{n + 1}\\} \\equiv \\{S_n\\leq t\\} - \\{S_{n+1}\\leq t\\} \\end{aligned} \\] <p>\u7531\u4e8e\\(\\{S_n \\leq t\\} \\equiv \\{N(t) \\geq n\\}\\)\uff0c\u53ef\u4ee5\u8ba1\u7b97\\(S_n\\)\u7684\u5206\u5e03\u51fd\u6570</p> \\[ P(S_n\\leq t) = P(N(t)\\geq n) = 1 - e^{-\\lambda t}\\sum_{k=0}^{n-1} \\frac{(\\lambda t)^{k}}{k!} \\] <p>\u7279\u522b\u5730\uff0c\u5f53\\(n = 1\\)\u65f6\uff0c\u6709\\(P(X_1\\leq t) = P(S_1\\leq t) = (1 - e^{-\\lambda t}) I_{\\{t\\geq 0\\}}\\)</p> <p>\u8ba1\u6570\u8fc7\u7a0b\\(\\{N(t), t\\geq 0\\}\\)\u662f\u6cca\u677e\u8fc7\u7a0b\u7684\u5145\u8981\u6761\u4ef6\u662f\\(\\{X_n = S_{n} - S_{n-1}, n\\geq 1\\}\\)\u72ec\u7acb\u540c\u5206\u5e03\uff0c\u670d\u4ece\u7684\u5206\u5e03\u4e3a\u53c2\u6570\\(\\lambda\\)\u7684\u6307\u6570\u5206\u5e03\u3002</p> \u8bc1\u660e <ol> <li> <p>\\(\\Leftarrow\\)\uff1a\u5fc5\u8981\u6027\u8bc1\u660e\uff0c\u5148\u6c42\\(S_1, \\cdots, S_n\\)\u7684\u8054\u5408\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\uff0c\u8bbe\\(t_1 &lt; t_2 &lt; \\cdots &lt; t_n\\)\uff0c\u8bbe\\(h\\)\u4e3a\u5145\u5206\u5c0f\u7684\u6b63\u6570\uff0c\u6ee1\u8db3</p> \\[ t_1 + \\frac h2 &lt; t_2 - \\frac h2 &lt; t_2 + \\frac h2 &lt; \\cdots &lt; t_n - \\frac h2 \\] <p>\u8003\u8651\u4e8b\u4ef6\\(A\\)</p> \\[ \\begin{aligned}     A&amp; \\\\     &amp;\\equiv \\left\\{t_1 - \\frac h2 &lt; S_1 \\leq t_1 + \\frac h2, t_2 - \\frac h2 &lt; S_2 \\leq t_2 + \\frac h2, \\cdots, t_n - \\frac h2 &lt; S_n \\leq t_n + \\frac h2\\right\\} \\\\     \\equiv &amp; \\left\\{N\\left(t_1 - \\frac h2\\right) = 0, N\\left(t_{i+1} - \\frac h2\\right) - N\\left(t_i + \\frac h2\\right) = 0, N\\left(t_{i} + \\frac h2\\right) - N\\left(t_{i} - \\frac h2\\right) = 1\\right\\} \\\\     &amp; 0\\leq i\\leq n - 1 \\end{aligned} \\] <p>\u800c\u6839\u636e\u6cca\u677e\u8fc7\u7a0b\u7684\u6027\u8d28</p> \\[ \\begin{aligned}     P\\left(N\\left(t_n + \\frac h2\\right) - N\\left(t_n - \\frac h2\\right)= 1\\right) &amp;= \\lambda h + o(h) \\\\     P\\left(N\\left(t_n + \\frac h2\\right) - N\\left(t_n - \\frac h2\\right)\\geq 2\\right) &amp;= o(h) \\\\ \\end{aligned} \\] <p>\u6709</p> \\[ P(A) = (\\lambda h)^ne^{-\\lambda (t_n + h/2)} + o\\left(h^n\\right) = \\lambda ^nh^ne^{-\\lambda t_n} + o\\left(h^n\\right) \\] <p>\u56e0\u6b64\uff0c\\(\\left(S_1, \\cdots, S_n\\right)\\)\u7684\u6982\u7387\u5bc6\u5ea6\u4e3a</p> \\[ f(t_1, \\cdots, t_n) = \\left\\{ \\begin{aligned}     &amp; \\lambda^n e^{-\\lambda t_n} &amp; 0 &lt; t_1 &lt; \\cdots &lt; t_n \\\\     &amp; 0 &amp; \\mathrm{otherwise} \\end{aligned} \\right. \\] <p>\u800c\\(X_n = S_n - S_{n-1}\\)\uff0c\u8bbe\\(x_n = t_n - t_{n - 1}\\)\uff0c\u5219\\(t_n = \\sum_{i=1}^n x_n\\)\uff0c\u4ece\u800c\u53d8\u6362\u7684Jacob\u77e9\u9635\u4e3a</p> \\[ J = \\frac{\\partial (t_1, \\cdots, t_n)}{\\partial (x_1, \\cdots, x_n)} = \\begin{vmatrix}     1 &amp; 0 &amp; \\cdots &amp; 0 \\\\     1 &amp; 1 &amp; \\cdots &amp; 0 \\\\     \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\     1 &amp; 1 &amp; \\cdots &amp; 1 \\end{vmatrix} \\] <p>\u56e0\u6b64\\(X_1, \\cdots, X_n\\)\u7684\u6982\u7387\u5bc6\u5ea6\u4e3a</p> \\[ g(x_1, \\cdots, x_n) = \\lambda^n e^{-\\lambda (x_1 + \\cdots + x_n)} = \\prod_{i=1}^n \\left(\\lambda e^{-\\lambda x_i}\\right), x_i \\geq 0 \\] <p>\u56e0\u6b64\\(X_1, \\cdots, X_n\\)\u72ec\u7acb\u540c\u6307\u6570\u5206\u5e03\u3002</p> </li> <li> <p>\\(\\Rightarrow\\)\uff1a\u5145\u5206\u6027\u8bc1\u660e\uff0c\u8bbe\\(\\{X_k, k\\geq 1\\}\\)\u72ec\u7acb\u540c\u6307\u6570\u5206\u5e03\uff0c\u8bbe\\(S_0 = 0, S_n = S_0 + \\sum_{i = 1}^n X_i\\)\u3002\u5b9a\u4e49</p> \\[ N(t) = \\sum_{n=1}^\\infty I_{\\{S_n\\leq t\\}} \\] <ul> <li>\u7531\u4e8e\\(I_{\\{S_n\\leq t\\}}\\in \\mathbb N\\)\uff0c\u5219\\(N(t)\\in \\mathbb N\\)\u3002</li> <li> <p>\u5bf9\u4e8e\\(t &gt; s\\)\uff0c\u6709</p> \\[ N(t) - N(s) = \\sum_{n = 1}^\\infty I_{\\{S_n\\leq t\\}}- I_{\\{S_n\\leq s\\}} \\] <p>\u800c\\(S_n - S_{n-1} = X_n &gt; 0\\)\uff0c\u56e0\u6b64\\(S_n\\)\u4e3a\u5355\u8c03\u589e\u5e8f\u5217\uff0c\u4ece\u800c\\(\\{S_n\\leq s\\}\\subset \\{S_n\\leq t\\}\\)\uff0c\u5373\\(I_{\\{S_n\\leq t\\}}- I_{\\{S_n\\leq s\\}} \\geq 0\\)\uff0c\u56e0\u6b64\\(N(t) - N(s)\\)</p> </li> </ul> <p>\u53ef\u5f97\\(N(t)\\)\u4e3a\u8ba1\u6570\u8fc7\u7a0b\u3002\u4ee5\u4e0b\u8ba1\u7b97\\(S_n\\)\u7684\u5206\u5e03\u3002\u5df2\u77e5\\(X_1, \\cdots, X_n\\)\u72ec\u7acb\u540c\u6307\u6570\u5206\u5e03\uff0c\u8bbe\\(t_n = \\sum_{i=1}^n x_i\\)\uff0c\u5219\\(x_n = t_n - t_{n-1}\\)\uff0c\u4ece\u800cJacob\u77e9\u9635\u4e3a</p> \\[ J = \\frac{\\partial (x_1, \\cdots, x_n)}{\\partial (t_1, \\cdots, t_n)} = \\begin{vmatrix}     1 &amp; 0 &amp; 0 &amp; \\cdots &amp; 0 \\\\     -1 &amp; 1 &amp; 0 &amp; \\cdots &amp; 0 \\\\     0 &amp; -1 &amp; 1 &amp; \\cdots &amp; 0 \\\\     \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\     0 &amp; 0 &amp; 0 &amp; \\cdots &amp; 1 \\end{vmatrix} \\] <p>\u800c\\(X_1, \\cdots, X_n\\)\u7684\u8054\u5408\u6982\u7387\u5bc6\u5ea6\u4e3a</p> \\[ g(x_1, \\cdots, x_n) = \\lambda^n e^{-\\lambda (x_1 + \\cdots + x_n)} = \\prod_{i=1}^n \\left(\\lambda e^{-\\lambda x_i}\\right), x_i \\geq 0 \\] <p>\u56e0\u6b64\\(S_1, \\cdots, S_n\\)\u7684\u8054\u5408\u6982\u7387\u5bc6\u5ea6\u4e3a</p> \\[ f(t_1, \\cdots, t_n) = \\left\\{ \\begin{aligned}     &amp; \\lambda^n e^{-\\lambda t_n} &amp; 0 &lt; t_1 &lt; \\cdots &lt; t_n \\\\     &amp; 0 &amp; \\mathrm{otherwise} \\end{aligned} \\right. \\] </li> </ol>"},{"location":"papers/","title":"\u8bba\u6587\u7b14\u8bb0","text":"<p>\u4ee5\u4e0b\u6574\u7406\u4e86\u9605\u8bfb\u7684\u8bba\u6587</p> <p>REDRL: A review-enhanced Deep Reinforcement Learning model for interactive recommendation</p>"},{"location":"papers/10.1016/j.eswa.2022.118926/","title":"REDRL: A review-enhanced Deep Reinforcement Learning model for interactive recommendation","text":""},{"location":"papers/10.1016/j.eswa.2022.118926/#introduction","title":"Introduction","text":"<ul> <li>Tradition RS: \u9759\u6001\u7b56\u7565</li> <li>Interactive RS: \u6839\u636e\u7528\u6237\u53cd\u9988\u5bf9\u63a8\u8350\u7b56\u7565\u8fdb\u884c\u52a8\u6001\u66f4\u65b0</li> </ul> <p>IRS\u7684\u5b9e\u73b0\u65b9\u5f0f</p> <ol> <li>Multi-armed bandit (MAB)<ul> <li>\u5728exploration\u548cexploitation\u4e4b\u95f4\u8fdb\u884c\u5e73\u8861</li> <li>\u7f3a\u70b9\uff1a\u5047\u8bbe\u7528\u6237\u7684\u9009\u62e9\u504f\u597d\u662f\u9759\u6001\u7684</li> </ul> </li> <li>Reinforcement learning (RL)<ul> <li>RL\u5728\u957f\u671f\u7684\u51b3\u7b56\u4e0e\u4f18\u5316\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u53d6\u5f97\u8f83\u597d\u7684\u6548\u679c</li> <li>\u7f3a\u70b9\uff1a\u6837\u672c\u7a7a\u95f4\u8fc7\u5927\u3001\u53ea\u8003\u8651\u7528\u6237\u4e0e\u5546\u54c1\u95f4\u7684\u8bc4\u5206\u5173\u7cfb\uff08\u6570\u636e\u7a00\u758f\u6027\u7684\u95ee\u9898\uff09\u3001\u6ca1\u6709\u8003\u8651\u63a8\u8350\u5386\u53f2\u5bf9\u7528\u6237\u504f\u597d\u7684\u5f71\u54cd\uff08\u8868\u73b0\u4e3a\u53ea\u4f7f\u7528\u9690\u5c42\u6700\u540e\u4e00\u4e2a\u8f93\u51fa\u4f5c\u4e3a\u7279\u5f81\u8868\u793a\uff09</li> <li> <p>\u89e3\u51b3\u65b9\u6848</p> <ol> <li> <p>Deep Deterministic Policy Gradient (DDPG)</p> <p>use the idea of collaborative filtering, highly relys on the accuracy of clustering</p> </li> <li> <p>\u4f7f\u7528\u7528\u6237\u7684\u8bc4\u8bba\u6570\u636e\u63d0\u9ad8\u63a8\u8350\u7b97\u6cd5\u7684\u6548\u679c</p> </li> </ol> </li> </ul> </li> </ol> <p>Highlights</p> <ol> <li>Text reviews: based on a pretrained representation model</li> <li>Formalize the decision process</li> <li>Multi-head attention</li> <li>Meta-path in user-item bipartite</li> </ol>"},{"location":"papers/10.1016/j.eswa.2022.118926/#related-work","title":"Related work","text":"<ol> <li>Collaborative filtering<ul> <li>User-based or item-based</li> <li>Cold-start problem</li> <li>Approaches: ML - based on dimensionality reduction</li> <li>Approaches: DL<ol> <li>MLP</li> <li>Auto-Encoders</li> <li>Memory network</li> <li>CNN</li> <li>RNN and attention architecture</li> </ol> </li> </ul> </li> <li>Reinforcement learning<ul> <li>MAB</li> <li>RL - Formalize the problem to MDP</li> <li>Relies only on rating information</li> </ul> </li> <li>Review information<ul> <li>Deep Cooperative Neural Networks</li> <li>PARL</li> <li>CARL</li> </ul> </li> </ol>"},{"location":"papers/10.1016/j.eswa.2022.118926/#problem-definition","title":"Problem Definition","text":"<p>\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u53ef\u4ee5\u7531\\(\\left(\\mathcal S, \\mathcal A, \\mathcal P, \\mathcal R, \\gamma\\right)\\)\u8868\u793a\uff0c\u5176\u4e2d\uff1a</p> <ol> <li>\u6837\u672c\u7a7a\u95f4 \\(\\mathcal S\\) \uff0c \\(s_t\\in \\mathcal S\\)\u8868\u793a\u7528\u6237\u5728\\(t\\)\u65f6\u523b\u6709 \u6b63\u5411 \u8bc4\u4ef7\u7684\u5546\u54c1\u96c6\u5408\u3002</li> <li>\u51b3\u7b56\u7a7a\u95f4 \\(\\mathcal A\\) \uff0c \\(a_t\\in \\mathcal A\\)\u8868\u793a\u63a8\u8350\u7cfb\u7edf\u5728\\(t\\)\u65f6\u523b\u4e3a\u7528\u6237\u63a8\u8350\u7684\u5546\u54c1</li> <li>\u56de\u62a5 \\(\\mathcal R\\) \uff0c \\(r(s_t, a_t): \\mathcal S\\times \\mathcal A\\rightarrow \\mathcal R\\) \u8868\u793a\u63a8\u8350\u7cfb\u7edf\u5728 \\(s_t\\) \u72b6\u6001\u4e0b\u4e3a\u7528\u6237\u63a8\u8350\\(a_t\\)\u65f6\u7528\u6237\u7684\u53cd\u9988</li> <li>\u8f6c\u79fb\u6982\u7387 \\(\\mathcal P\\) \uff0c\u672c\u6587\u4e2d\uff0c\u5f53\u7528\u6237\u5bf9\u5546\u54c1 \\(i\\) \u7ed9\u51fa\u6b63\u5411\u8bc4\u4ef7\u65f6\uff0c\u5c06\u72b6\u6001\u7a7a\u95f4\u66f4\u65b0\u4e3a \\(s_{t+1} = s_t \\cup \\{i\\}\\) \uff0c\u5426\u5219\u4e3a \\(s_{t+1} = s_t\\)</li> <li>\u8d34\u73b0\u7387 \\(\\gamma\\) \uff0c\u5e73\u8861\u77ed\u671f\u6536\u76ca\u4e0e\u957f\u671f\u6536\u76ca\u7684\u5f71\u54cd</li> </ol> <p>\u9700\u8981\u5f97\u51fa\u4e00\u4e2a\u6700\u4f18\u7b56\u7565 \\(\\pi: \\mathcal S\\rightarrow \\mathcal P(\\mathcal A)\\) \uff0c\u5373\u6700\u5927\u5316\u51b3\u7b56\u8fc7\u7a0b\u7684\u7d2f\u79ef\u6536\u76ca\u3002</p>"},{"location":"papers/10.1016/j.eswa.2022.118926/#reference","title":"Reference","text":"<pre><code>@article{LIU2023118926,\ntitle = {REDRL: A review-enhanced Deep Reinforcement Learning model for interactive recommendation},\njournal = {Expert Systems with Applications},\nvolume = {213},\npages = {118926},\nyear = {2023},\nissn = {0957-4174},\ndoi = {https://doi.org/10.1016/j.eswa.2022.118926},\nurl = {https://www.sciencedirect.com/science/article/pii/S0957417422019443},\nauthor = {Huiting Liu and Kun Cai and Peipei Li and Cheng Qian and Peng Zhao and Xindong Wu},\nkeywords = {Recommender system, Deep reinforcement learning, Review analysis}\n}\n</code></pre>"},{"location":"wechat/2020/","title":"\u4e00\u4e9b\u5f88\u559c\u6b22\u7684\u63a8\u9001","text":"<p>\u300a\u6628\u665a\u300b by \u8001\u9f20\u4ec0\u4e48\u90fd\u77e5\u9053</p> <p>\u300a\u6740\u6b7b\u65e0\u804a\u7684\u540c\u65f6\uff0c\u4f60\u4e5f\u5728\u6740\u6b7b\u81ea\u5df1\u300b by \u4eba\u7269</p> <p>\u300a\u75db\u82e6\u7684\u4e00\u767e\u5f20\u5e95\u7247\u300b by \u4eba\u7269</p> <p>\u300a\u603b\u4e0d\u80fd\u4e27\u6c14\u592a\u4e45\u5427\u3002\u300b by \u6982\u7387\u8bba</p> <p>\u300a\u6211\u4eec\u628a\u8fd9\u573a\u521d\u96ea\u505a\u6210\u4e86\u7535\u5f71\u6d77\u62a5\u300b by \u6e05\u534e\u5927\u5b66\u6e05\u65b0\u65f6\u62a5</p> <p>\u300a\u56f0\u4e8e\u4eba\u8138\u8bc6\u522b\u300b by \u4eba\u7269</p> <p>\u300a\u65b0\u7684\u5341\u5e74\uff0c\u4eba\u751f\u7684\u5947\u5e7b\u6f02\u6d41\u300b by \u4eba\u7269</p> <p>\u300a\u6587\u827a\u662f\u4e00\u573a\u9a97\u5c40\u5417\uff1f\u300b by \u4eba\u7269</p> <p>\u300a\u4e00\u7897\u7c73\u8c46\u8150\uff0c\u7a7f\u8d8a\u5c71\u6d77\u300b by \u4eba\u7269</p> <p>\u300a\u4fdd\u7814\u5931\u8d25\u4ee5\u540e\uff0c\u6211\u53c8\u8003\u4e86\u6b21\u6e05\u534e\u300b by \u6e05\u534e\u7814\u8bfb\u95f4</p> <p>\u300a\u4eca\u5929\u662f2020\u5e74\u4f60\u5728\u6e05\u534e\u7206\u809d\u7684\u7b2c366\u5929\u300b by \u6e05\u534e\u5927\u5b66\u6e05\u65b0\u65f6\u62a5</p>"},{"location":"wechat/2021/","title":"\u4e00\u4e9b\u5f88\u559c\u6b22\u7684\u63a8\u9001","text":"<p>\u300a2020 \u6700\u820d\u4e0d\u5f97\u5220\u7684\u7167\u7247\u300b by \u6e05\u534e\u5927\u5b66</p> <p>\u665a\u5b89\u6d77\u62a5 by \u90d1\u5dde\u53d1\u5e03</p> <p>\u77e5\u4e4e\u5b87\u5b99\u91cc\u7684\u90a3\u4e9b\u8d22\u5bcc\u5bc6\u7801 by \u4e3a\u4f60\u5199\u4e00\u4e2a\u6545\u4e8b</p> <p>\u540c\u5b66\uff0c\u8fd8\u8bb0\u5f97\u5f53\u5e74\u90a3\u9053\u9ad8\u8003\u9898\u5417\uff1f by \u6e05\u534e\u5927\u5b66</p> <p>\u7ea2\u4e86\u7ea2\u4e86\uff0c\u8fd9\u6b21\u771f\u7684\u7ea2\u4e86 by GQ\u5b9e\u9a8c\u5ba4</p> <p>\u751f\u6d3b\u5c0f\u7a8d\u95e8 \u4e4b \u5982\u4f55\u6577\u884d\u5973\u751f\u8282 by \u55e8\u76ae\u8fd0\u8425\u90e8</p> <p>\u6c99\u5c18\u66b4\u5bf9\u6e05\u534e\u56ed\u8bf4\uff0c\u4eca\u5929\u7ed9\u4f60\u70b9\u989c\u8272\u770b\u770b by \u5bf9\u725b\u8c08\u6e05</p>"},{"location":"wechat/2022/","title":"\u4e00\u4e9b\u5f88\u559c\u6b22\u7684\u63a8\u9001","text":"<p>\u665a\u5b89\u6d77\u62a5 by \u90d1\u5dde\u53d1\u5e03</p> <p>\u6e05\u534e\u5bf9\u4f60\u8bf4\u665a\u5b89\uff01 by \u6e05\u534e\u5927\u5b66</p> <p>\u5c0f\u533a\u88ab\u5c01\u4e94\u5929\u540e\uff0c\u6211\u6e10\u6e10\u61c2\u4e86 by \u96f7\u53d4\u5199\u6545\u4e8b</p> <p>\u201c\u6211\u4eec\u7ec8\u4f1a\u627e\u5230\u610f\u4e49\u3002\u201d by \u6e05\u534e\u5927\u5b66</p> <p>40\u4e2a\u975e\u5fc5\u8981\u751f\u6d3b\u4e0b\u7684\u5e78\u798f\u77ac\u95f4 by \u5168\u5143\u5149\u6ed1</p> <p>\u7ba1\u4ed6\u51e0\u5c81\uff0c\u9752\u6625\u4e07\u5c81 by \u5c0f\u6797</p> <p>\u300c\u65f6\u4ee3\u4e4b\u97f3\u300d\u53bb\u54ea\u513f\u4e86\uff1f by \u4eba\u7269</p> <p>\u5e94 \u6da6 \u5c3d \u6da6 by \u5168\u5143\u5149\u6ed1</p> <p>\u6bd5\u4e1a\u7279\u520a | \u634c\u6765\u65e0\u6059\uff0c\u540e\u4f1a\u6709\u671f by \u6e05\u534e\u5927\u5b66\u6e05\u65b0\u65f6\u62a5</p> <p>\u6bd5\u4e1a\u65f6\uff0c\u4f60\u6700\u60f3\u5e26\u8d70\u7684\u4e00\u4ef6\u4e1c\u897f\u662f\uff1f by \u6e05\u534e\u5927\u5b66</p> <p>\u6bd5\u4e1a\u5feb\u4e50 | \u7247\u523b\u6210\u4e3a\u6c38\u6052 by \u957f\u6b4c\u695a\u5929\u78a7</p> <p>\u4fdd\u7814\u5931\u8d25\u4e86\uff0c\u82df\u4f4f\u5c31\u597d by\u4e28Just Lose It\u4e28</p> <p>10\u6708\uff0c\u5728\u51ac\u5929\u5230\u6765\u4e4b\u524d\uff0c\u7559\u4e0b\u70b9\u4ec0\u4e48 by \u4eba\u7269</p>"}]}