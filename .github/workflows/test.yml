name: Test pull request

on:
  pull_request:
    branches: [main]

jobs:
  test_code_block:
    name: Test code block
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Main
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python 3
        uses: actions/setup-python@v4
        id: python
        with:
          python-version: '3.x'
          cache: 'pip'

      - uses: actions/cache@v3
        id: cache
        with:
          path: ~/.local
          key: ${{ steps.python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt --user --no-warn-script-location

      - name: Test
        run:
          python3 ./ci/test_code_block.py

  test:
    name: Test documentation
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Main
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: 'true'

      - name: Set up Python 3
        uses: actions/setup-python@v4
        id: python
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Restoring packages
        uses: actions/cache@v3
        id: cache
        with:
          path: ~/.local
          key: ${{ steps.python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}


      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt --user --no-warn-script-location

      - name: Setup TeX Live
        uses: teatimeguest/setup-texlive-action@v2
        with:
          packages: scheme-full

      - name: Install GhostScript
        run: |
          sudo apt-get update
          sudo apt-get install ghostscript -y

      - name: Test
        env:
            TEXINPUTS: "${{ github.workspace }}/third_party//:"
        run: |
          python3 ./ci/deploy.py --dry-run
